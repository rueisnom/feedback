<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/9682092">
    <body>
      <group id="9682092">
        <trans-unit id="91de6e5632c96599d709bfa2655e3e4d2780d307" translate="yes" xml:space="preserve">
          <source>$scope.$watch(&amp;lsquo;expression/function&amp;rsquo;) &amp;mdash; In your JavaScript we can just attach a scope object for angular to watch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ scope。$ watch（'expression / function'）&amp;mdash;在您的JavaScript中，我们可以附加一个范围对象以观察角度。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7820d85df30b0b7884bdfefcb9723bc43a90d70" translate="yes" xml:space="preserve">
          <source>(if it has any). When $digest() iterates
  over the watches, it checks if the value of the expression has
  changed. If the value has changed, AngularJS calls the listener with
  new value and old value. The $digest() function is called
  whenever AngularJS thinks it is necessary. For example, after a button
  click, or after an AJAX call. You may have some cases where AngularJS
  does not call the $digest() function for you. In that case you have to
  call it yourself.</source>
          <target state="translated">(如果它有的话)。当$digest()迭代表时,它会检查表达式的值是否发生了变化。如果值发生了变化,AngularJS会用新值和旧值调用监听器。每当AngularJS认为有必要时,就会调用$digest()函数。例如,在一个按钮点击之后,或者AJAX调用之后。你可能会遇到一些情况,AngularJS不会为你调用$digest()函数。在这种情况下,你必须自己去调用它。</target>
        </trans-unit>
        <trans-unit id="33e1522ece49487d912bf4b8c01791e362bcecd4" translate="yes" xml:space="preserve">
          <source>//Dom update code with new value</source>
          <target state="translated">/Dom更新代码与新值</target>
        </trans-unit>
        <trans-unit id="e876771cd34a0018c198b4d5a45eee5c3e8f6f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; binds our view and render it in expression &lt;code&gt;{{ }}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;绑定我们的视图并将其呈现在表达式&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{ }}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fe9258fbd573d515f842c6b1ae446f5e5726696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; is the data which is shown to the user in the view and with which the user interacts.</source>
          <target state="translated">&lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是在视图中向用户显示并与用户进行交互的数据。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a23e57991f9eb393ba30e7917a3fc84a1533a36d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Limited&lt;/em&gt; &amp;mdash; You can't really show more than about 2000 pieces of information to a human on a single page. Anything more than that is really bad UI, and humans can't process this anyway.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;受限&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -您在一个页面上不能真正显示超过2000条信息。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除此之外，还真是糟糕的UI，人类无论如何都无法处理。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e14aa7e871928b62520d6e0b8e10e2cffc78f21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Slow&lt;/em&gt; &amp;mdash; Anything faster than 50&amp;nbsp;ms is imperceptible to humans and thus can be considered as &quot;instant&quot;.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;慢&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -任何比50毫秒都快的速度是人类所无法察觉的，因此可以视为&amp;ldquo;即时&amp;rdquo;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90d38fa37c44e3e62eeefb071eae0c59c73b444a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$apply()&lt;/strong&gt; -</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ apply（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5975df0296848c55622406b2bb66e7ec25788e86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$digest()&lt;/strong&gt; -</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd14b832fd688faba3d0531903fb7672f5bb945f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$watch()&lt;/strong&gt; :-</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：-&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1303db0abb7e5b6b8865f6a4d1841c909f514e12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$watch&lt;/strong&gt; function takes in three parameters:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数接受三个参数：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="355c0e35ea0794843854cef2fc1fbb22fe357cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="595ac3c717717f780d25d74e1b557454a56132f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="634b1d0bb5b61119c1b7b9f683e4940b4c8913be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d73ec0e35dfd919874037befa129888de0e136a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What is data binding?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么是数据绑定？&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c2332a09f133d6a0597e878dbfa788b036ac566" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AngularJS Code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS代码&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d6b4242ac6358cb3597337491f651b75eb7ecba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description :&lt;/strong&gt;
Angular js sets the watcher on the scope model, which fires the listener function if there is a change in the model.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;描述：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Angular js在范围模型上设置监视程序，如果模型发生更改，它将触发侦听器功能。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6524f86f67897c2c00f49d97594a0331982027b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For Ex.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于前&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e360378a5f9ce12a09c9e371f6ff0b7082ac4e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML Code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML代码&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8db34f25d93fa8eee917fe302430d84387ad465" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How is it possible?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这怎么可能？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="866c51fff782ef985d22aab635285eca8cab7d37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;O/P&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;O/P&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="869138fa5ca240e6391e1fd6a7b3bce75e085d97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short answer :&lt;/strong&gt;
With the help of digest cycle.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;简短答案：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 借助摘要循环。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c025a485c08098687c23572800580a92630ee0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So When and How is the watcher function called?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么何时以及如何调用观察程序函数？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="284c0cc1c16634ee278d62d9da4d70563394d278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TL;DR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0cb000ddd31af21b11edf2884f5f7e6bb763965" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data binding:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数据绑定：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64003ac4d8c2449fd0db7d0d812d631a0365c5a3" translate="yes" xml:space="preserve">
          <source>A digest cycle is a &lt;strong&gt;depth-first traversal of &lt;code&gt;$scope&lt;/code&gt; and all its children&lt;/strong&gt;. For each &lt;code&gt;$scope&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;, we iterate over its &lt;code&gt;$$watchers&lt;/code&gt;&lt;code&gt;array&lt;/code&gt; and evaluate all the expressions. If the new expression value is different from the last known value, the watcher's function is called. This function might recompile part of the DOM, recompute a value on &lt;code&gt;$scope&lt;/code&gt;, trigger an &lt;code&gt;AJAX&lt;/code&gt;&lt;code&gt;request&lt;/code&gt;, anything you need it to do.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;摘要循环是&lt;/font&gt;&lt;strong&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;及其所有子级&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;深度优先遍历&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于每个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我们遍历其&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并评估所有表达式。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果新的表达式值与上一个已知值不同，则调用观察者的函数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此函数可能会重新编译DOM的一部分，重新​​计算&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上的值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，触发&lt;/font&gt;&lt;/font&gt; &lt;code&gt;AJAX&lt;/code&gt; &lt;code&gt;request&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您需要执行此操作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="287c01a594c777e6def93fe6bfe0ca2101558958" translate="yes" xml:space="preserve">
          <source>A function which will be executed if the watcher is dirty.</source>
          <target state="translated">一个函数,如果观察器脏了就会被执行。</target>
        </trans-unit>
        <trans-unit id="4729c82301a3c543842ace5fe6896ce14e0331a4" translate="yes" xml:space="preserve">
          <source>A last known value of the expression. This can be checked against the current computed value of the expression. If the values differ the watcher will trigger the function and mark the &lt;code&gt;$scope&lt;/code&gt; as dirty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表达式的最后一个已知值。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以对照表达式的当前计算值进行检查。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果值不同，则观察者将触发该功能并将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标记&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为脏。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7a4cd7cf6fbab5ba3dec319212de69d6967eae1" translate="yes" xml:space="preserve">
          <source>An example where I passed the model is updated from server data is when you ask for a zip code and zip code based on written loads a list of colonies and cities associated with that view, and by default set the first value with the user. And this I worked very well, what does happen, is that &lt;code&gt;angularJS&lt;/code&gt; sometimes takes a few seconds to refresh the model, to do this you can put a spinner while displaying the data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我通过的模型从服务器数据中更新的示例是，当您要求邮政编码和基于书面负载的邮政编码时，列出了与该视图相关联的殖民地和城市列表，并且默认情况下为用户设置了第一个值。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我做得很好，确实发生了什么，就是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;angularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有时需要几秒钟来刷新模型，为此，您可以在显示数据时放置微调器。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8da1959d807de663cf2b11afe60055d655f244eb" translate="yes" xml:space="preserve">
          <source>An expression which the watcher is monitoring. This might just be an &lt;code&gt;attribute&lt;/code&gt; name, or something more complicated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;观察者正在监视的表达式。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这可能只是一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名称，或更复杂的名称。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f4d7984356ebcf25d2e6d62a2611834b289a5d9" translate="yes" xml:space="preserve">
          <source>Angular adds a watcher to the $$watchers for each of these</source>
          <target state="translated">Angular为每一个$$观察者添加了一个$观察者。</target>
        </trans-unit>
        <trans-unit id="c1f96c7ee88fa3157584f1e739b926f3ad299b10" translate="yes" xml:space="preserve">
          <source>Angular do auto-magically updates only those model changes which are
  inside AngularJS context. When you do change in any model outside of
  the Angular context (like browser DOM events, setTimeout, XHR or third
  party libraries), then you need to inform Angular of the changes by
  calling $apply() manually. When the $apply() function call finishes
  AngularJS calls $digest() internally, so all data bindings are
  updated.</source>
          <target state="translated">Angular只对AngularJS上下文内的模型变化进行自动更新。当你在Angular上下文之外的任何模型中做了更改(如浏览器DOM事件、setTimeout、XHR或第三方库),那么你需要通过手动调用$apply()函数来通知Angular更改。当$apply()函数调用完成后,AngularJS会在内部调用$digest(),所以所有的数据绑定都会被更新。</target>
        </trans-unit>
        <trans-unit id="4ee3d482254a050a513753124978cd73f85d5a94" translate="yes" xml:space="preserve">
          <source>Angular maintains a &lt;code&gt;oldValue&lt;/code&gt; and &lt;code&gt;newValue&lt;/code&gt; of every binding. And after every &lt;em&gt;Angular event&lt;/em&gt;, the famous &lt;code&gt;$digest()&lt;/code&gt; loop will check the WatchList to see if something changed. These &lt;em&gt;Angular events&lt;/em&gt; are &lt;code&gt;ng-click&lt;/code&gt;, &lt;code&gt;ng-change&lt;/code&gt;, &lt;code&gt;$http&lt;/code&gt; completed ...  The &lt;code&gt;$digest()&lt;/code&gt; will loop as long as any &lt;code&gt;oldValue&lt;/code&gt; differs from the &lt;code&gt;newValue&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular维护&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个绑定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;oldValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;newValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。并且在每个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular事件之后&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，著名的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循环将检查WatchList以查看是否发生了更改。这些&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular事件&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-click&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-change&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已完成... &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只要任何&lt;/font&gt; &lt;code&gt;oldValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt; &lt;code&gt;newValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;不同，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;就会循环&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6897a7bb238c36acd615fe16d93b0865f419c091" translate="yes" xml:space="preserve">
          <source>Angular maintains a simple &lt;code&gt;array&lt;/code&gt; of watchers in the &lt;code&gt;$scope&lt;/code&gt; objects. If you inspect any &lt;code&gt;$scope&lt;/code&gt; you will find that it contains an &lt;code&gt;array&lt;/code&gt; called &lt;code&gt;$$watchers&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;角维持简单的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在观察者的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果检查任何&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，将发现它包含一个&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名为&lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf0f962413a08a96f272491ff2fde4a07d077a61" translate="yes" xml:space="preserve">
          <source>Angular.js creates a watcher for every model we create in view. Whenever a model is changed, an &quot;ng-dirty&quot; class is appeneded to the model, so the watcher will observe all models which have the class &quot;ng-dirty&quot; &amp;amp; update their values in the controller &amp;amp; vice versa.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular.js为我们在视图中创建的每个模型创建一个观察者。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每当更改模型时，都会向模型添加&amp;ldquo; ng-dirty&amp;rdquo;类，因此观察者将观察所有具有&amp;ldquo; ng-dirty&amp;rdquo;类的模型，并在控制器中更新其值，反之亦然。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25576f174eab97ef207e9a46466bb2b7e362d6ba" translate="yes" xml:space="preserve">
          <source>AngularJS handle data-binding mechanism with the help of three powerful functions :      &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$watch&quot;&gt;$watch()&lt;/a&gt;,&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest&quot;&gt;$digest()&lt;/a&gt;and &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply&quot;&gt;$apply()&lt;/a&gt;. Most of the time AngularJS will call the $scope.$watch() and $scope.$digest(), but
in some cases you may have to call these functions manually to update with new values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS借助三个强大的函数处理数据绑定机制： &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$watch&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ apply（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多数时候，AngularJS会调用$ scope。$ watch（）和$ scope。$ digest（），但在某些情况下，您可能必须手动调用这些函数以使用新值进行更新。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adaa93c89cb1f65e12242562d8f52d1e5b339d30" translate="yes" xml:space="preserve">
          <source>AngularJS remembers the value and compares it to a previous value. This is basic dirty-checking. If there is a change in value, then it fires the change event.</source>
          <target state="translated">AngularJS会记住这个值,并将其与之前的值进行比较。这就是基本的脏检查。如果值有变化,那么它就会触发变化事件。</target>
        </trans-unit>
        <trans-unit id="fbef5694a622a1a4c9253ab37640ce184b463958" translate="yes" xml:space="preserve">
          <source>AngularJs supports &lt;strong&gt;Two way data-binding&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJs支持&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;双向数据绑定&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efa79dd5413f9fd95b27c41dccb2665020217dc4" translate="yes" xml:space="preserve">
          <source>As Misko stated, around 2000 bindings are where you start to see problems, but you shouldn't have more than 2000 pieces of information on a page anyway. This may be true, but not every data-binding is visible to the user. Once you start building any sort of widget or data grid with two-way binding you can &lt;em&gt;easily&lt;/em&gt; hit 2000 bindings, without having a bad UX.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正如Misko所说，大约2000个绑定是您开始发现问题的地方，但是无论如何您在页面上都不应拥有超过2000条信息。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这可能是正确的，但并非每个数据绑定都对用户可见。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一旦开始使用双向绑定构建任何类型的窗口小部件或数据网格，就可以&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;轻松实现&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2000个绑定，而不会出现不良的UX。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37fbc5e79c6734b14dad81b7d685ccc6893e71b0" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, &lt;strong&gt;AngularJS&lt;/strong&gt; uses &lt;code&gt;ng-model&lt;/code&gt; to listen and watch what happens on HTML elements, especially on &lt;code&gt;input&lt;/code&gt; fields. When something happens, do something. In our case, &lt;code&gt;ng-model&lt;/code&gt; is bind to our view, using the mustache notation &lt;code&gt;{{}}&lt;/code&gt;. Whatever is typed inside the input field is displayed on the screen instantly. And that's the beauty of data binding, using AngularJS in its simplest form.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如您在上面的示例中看到的那样，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来侦听和观看HTML元素（尤其是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;input&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字段）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上发生的情况&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当某事发生时，做某事。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在本例中，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用胡子符号&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;绑定到我们的视图&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;输入字段中键入的任何内容都会立即显示在屏幕上。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这就是使用最简单形式的AngularJS进行数据绑定的好处。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="737afa2dc7c25184622f10ed905b43a86ad1a089" translate="yes" xml:space="preserve">
          <source>As you can see, every time something changes in an AngularJS app, AngularJS will check every single watcher in the &lt;code&gt;$scope&lt;/code&gt; hierarchy to see how to respond. For a developer this is a massive productivity boon, as you now need to write almost no wiring code, AngularJS will just notice if a value has changed, and make the rest of the app consistent with the change.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如您所见，每当AngularJS应用程序中发生任何更改时，AngularJS都会检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;层次结构&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中的每个观察者，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以查看如何响应。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于开发人员来说，这是一个巨大的生产力提升，因为您现在几乎不需要编写任何接线代码，AngularJS只会注意到值是否已更改，并使应用程序的其余部分与更改保持一致。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a79d468ad5e9c27dc450d53ed835dd90ea4fe4a0" translate="yes" xml:space="preserve">
          <source>At the end of the &lt;code&gt;$apply&lt;/code&gt; the &lt;code&gt;$digest&lt;/code&gt; method is invoked which goes
through each of the watches and checks to see if they changed since
last time the &lt;code&gt;$digest&lt;/code&gt; ran.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在的结束&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法被调用它通过每个表和支票去看看他们自从上次改变&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;跑。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcd2eb5356b9b892e7bf902bb23bd9186e6d6799" translate="yes" xml:space="preserve">
          <source>By dirty checking the &lt;code&gt;$scope&lt;/code&gt; object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过脏检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0710b2f8c5ca3b1d6e227e2204bcfc446f57738" translate="yes" xml:space="preserve">
          <source>Change coalescence. Suppose you have an array of items. Say you want to add items into an array, as you are looping to add, each time you add you are firing events on change, which is rendering the UI. This is very bad for performance. What you want is to update the UI only once, at the end. The change events are too fine-grained.</source>
          <target state="translated">改变凝聚力。假设你有一个数组的项。假设你想把项添加到数组中,当你在循环添加时,每次添加时都会在change上触发事件,这是在渲染UI。这对性能是非常不利的。你想要的是只更新一次UI,在最后的时候。变更事件太细化了。</target>
        </trans-unit>
        <trans-unit id="77c891a95974122552c0d70ba96a05fea9fafba4" translate="yes" xml:space="preserve">
          <source>Change listeners fire immediately on a setter, which is a problem, since the change listener can further change data, which fires more change events. This is bad since on your stack you may have several change events happening at once. Suppose you have two arrays which need to be kept in sync for whatever reason. You can only add to one or the other, but each time you add you fire a change event, which now has an inconsistent view of the world. This is a very similar problem to thread locking, which JavaScript avoids since each callback executes exclusively and to completion. Change events break this since setters can have far-reaching consequences which are not intended and non obvious, which creates the thread problem all over again. It turns out that what you want to do is to delay the listener execution, and guarantee, that only one listener runs at a time, hence any code is free to change data, and it knows that no other code runs while it is doing so.</source>
          <target state="translated">变更监听器会在设置器上立即启动,这是个问题,因为改变监听器可以进一步改变数据,从而启动更多的改变事件。这是很糟糕的,因为在你的堆栈中,你可能会有几个变化事件同时发生。假设你有两个数组,无论出于什么原因,都需要保持同步。你只能向其中一个或另一个添加,但每次添加时你都会触发一个变化事件,这时你对世界的看法就不一致了。这与线程锁定的问题非常相似,JavaScript避免了这个问题,因为每次回调都是独家执行并完成。变更事件打破了这一点,因为setter可能会产生深远的后果,而这些后果并不是我们想要的,也不是很明显,这就导致了线程问题的再次出现。事实证明,你想做的是延迟监听器的执行,并保证一次只运行一个监听器,因此任何代码都可以自由地改变数据,而且它知道没有其他代码在执行时运行。</target>
        </trans-unit>
        <trans-unit id="aa1e7dcbb0597e8ac8563615ae3d1825d9496839" translate="yes" xml:space="preserve">
          <source>Changes to watched items must be made within a block of code
wrapped by the &lt;code&gt;$apply&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对监视项的更改必须在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包装的代码块内进行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b536777ff175ae7f0dadd5ccfd9e78c00761a19e" translate="yes" xml:space="preserve">
          <source>Conclusions</source>
          <target state="translated">Conclusions</target>
        </trans-unit>
        <trans-unit id="04738af7725b2e98757c86e363c8914ab552c47c" translate="yes" xml:space="preserve">
          <source>Consider, for example, a combo box where you can type text to filter the available options. This sort of control could have ~150 items and still be highly usable. If it has some extra feature (for example a specific class on the currently selected option) you start to get 3-5 bindings per option. Put three of these widgets on a page (e.g. one to select a country, the other to select a city in the said country, and the third to select a hotel) and you are somewhere between 1000 and 2000 bindings already.</source>
          <target state="translated">比如说,考虑一个组合框,你可以输入文本来筛选可用的选项。这样的控件可以有大约150个项目,并且仍然非常好用。如果它有一些额外的功能(例如,在当前选择的选项上有一个特定的类),你就会得到3-5个选项的绑定。在一个页面上放三个这样的小部件(例如:一个选择一个国家,另一个选择一个国家的城市,第三个选择一个酒店),你就已经有1000到2000个绑定项了。</target>
        </trans-unit>
        <trans-unit id="38c9337e102844fbe073028e31a3f03dfd28fcd6" translate="yes" xml:space="preserve">
          <source>Data binding lets you treat the model as the single-source-of-truth in your application. The view is a projection of the model at all times. If the model is changed, the view reflects the change and vice versa.</source>
          <target state="translated">数据绑定可以让你把模型作为你的应用程序中的单一真理来源。视图在任何时候都是模型的投影。如果模型发生了变化,视图就会反映出该变化,反之亦然。</target>
        </trans-unit>
        <trans-unit id="41d6ccf94599c075293f64da897cc14ce18c72a7" translate="yes" xml:space="preserve">
          <source>Data-Binding needs a mapping</source>
          <target state="translated">数据绑定需要一个映射</target>
        </trans-unit>
        <trans-unit id="53cfd605042a9685d0d23f950654e2d90a38e47f" translate="yes" xml:space="preserve">
          <source>Data-binding in Angular apps is the automatic synchronisation of data between the model and view components.</source>
          <target state="translated">Angular应用中的数据绑定是指模型和视图组件之间的数据自动同步。</target>
        </trans-unit>
        <trans-unit id="5934654605974e05a5cca46342e4add1e6e8bca2" translate="yes" xml:space="preserve">
          <source>Digest cycle function:</source>
          <target state="translated">摘要循环功能。</target>
        </trans-unit>
        <trans-unit id="67bdd0d045b9621fed41646eae45fdacd100225f" translate="yes" xml:space="preserve">
          <source>Digest cycle is called automatically triggered as part of angular js built in directives/services like ng-model , ng-bind , $timeout, ng-click and others.. that let you trigger the digest cycle.</source>
          <target state="translated">Digest循环是作为angular js内置的directivesservices的一部分自动触发的,比如ng-model、ng-bind、$timeout、ng-click等...........这些都可以让你触发digest循环。</target>
        </trans-unit>
        <trans-unit id="edf2df3cebeb7068c67f0f8fcf259a256e8d43b4" translate="yes" xml:space="preserve">
          <source>Each time your user interacts with your app, every single watcher in your app will be evaluated at least once. A big part of optimising an AngularJS app is reducing the number of watchers in your &lt;code&gt;$scope&lt;/code&gt; tree. One easy way to do this is with &lt;em&gt;one time binding&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每次您的用户与您的应用进行交互时，应用中的每个观察者都将至少评估一次。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;优化AngularJS应用的很大一部分是减少&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;树中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的观察者数量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一种简单的方法是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一次性绑定&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c05d40154f2b4c392454198d496e63c5efbde51" translate="yes" xml:space="preserve">
          <source>Each watcher is an &lt;code&gt;object&lt;/code&gt; that contains among other things</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个观察者都是一个&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包含其他内容&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08048692776861edadc2dbcb23494dab4e7cab0f" translate="yes" xml:space="preserve">
          <source>Events leads to $digest()</source>
          <target state="translated">事件导致$digest()</target>
        </trans-unit>
        <trans-unit id="1999f5595c55decba8e973c1baa963538f547a35" translate="yes" xml:space="preserve">
          <source>Every scope is traversed and every watch expression evaluated and checked against the last value.</source>
          <target state="translated">每一个作用域都会被遍历,每一个表的表达式都会被评估和检查最后一个值。</target>
        </trans-unit>
        <trans-unit id="3fde00899391e695c237589b8f69f3b46e5c7578" translate="yes" xml:space="preserve">
          <source>Explaining with Pictures :</source>
          <target state="translated">用图片说明。</target>
        </trans-unit>
        <trans-unit id="24e795a953c3ca2043687acd912052593a9b0ba7" translate="yes" xml:space="preserve">
          <source>First one is a watcher function which just returns the object or we can just add an expression.</source>
          <target state="translated">首先是一个观察者函数,它只是返回对象,或者我们可以直接添加一个表达式。</target>
        </trans-unit>
        <trans-unit id="f5db049bbbb9e77f2e7abb9fa13d29e74b53f616" translate="yes" xml:space="preserve">
          <source>For example if the model had something like:</source>
          <target state="translated">例如,如果模型有这样的东西:</target>
        </trans-unit>
        <trans-unit id="a26ff29486dd859efb930e73cff198672e8c1db8" translate="yes" xml:space="preserve">
          <source>From the perspective of the machine though this is wildly inefficient and will slow our app down if we create too many watchers. Misko has quoted a figure of about 4000 watchers before your app will feel slow on older browsers.</source>
          <target state="translated">虽然从机器的角度来看,这是很疯狂的低效率,如果我们创建了太多的观看者,会让我们的应用变慢。Misko引用了一个数字,大约4000个观看者才会让你的应用在老的浏览器上感觉到慢。</target>
        </trans-unit>
        <trans-unit id="6b5d848557beff3ca27b16e316546c260f2f5158" translate="yes" xml:space="preserve">
          <source>Here if you want to use input &lt;code&gt;name&lt;/code&gt; in the controller then,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您想&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在控制器中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用输入&lt;/font&gt;&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abf84c6c85867c652efadb878febf74268cb94de" translate="yes" xml:space="preserve">
          <source>Here in above example whatever input user will give, It will be visible in &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在上面的示例中，无论输入用户提供什么，它将在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标记中显示。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e61aa1cba9e6c9aeb8141c1c1d1742560bba644d" translate="yes" xml:space="preserve">
          <source>Here is an example of data binding with AngularJS, using an input field. I will explain later</source>
          <target state="translated">这里是一个使用AngularJS的数据绑定的例子,使用一个输入字段。我将在后面解释</target>
        </trans-unit>
        <trans-unit id="1aaba0345af07c860b35fb4c80fc9c3aad3a3673" translate="yes" xml:space="preserve">
          <source>Here, when you modify the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, you touch the &lt;strong&gt;data-ref3&lt;/strong&gt;. And the classic data-bind mecanism will change &lt;strong&gt;data-ref4&lt;/strong&gt;. So how the other &lt;code&gt;{{data}}&lt;/code&gt; expressions will move ?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这里，当您修改&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您可以触摸&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data-ref3&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;经典的数据绑定机制将改变&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data-ref4&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么其他&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{data}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表达式将如何移动？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">希望这对你有帮助。</target>
        </trans-unit>
        <trans-unit id="72856d6ab746c0e7dce884ff804eef9218f95f83" translate="yes" xml:space="preserve">
          <source>How does data binding work in AngularJS</source>
          <target state="translated">数据绑定在AngularJS中是如何工作的</target>
        </trans-unit>
        <trans-unit id="811938083dc4a1506a5fffbb7dcd3afefd093cb8" translate="yes" xml:space="preserve">
          <source>How does data binding work in the &lt;code&gt;AngularJS&lt;/code&gt; framework?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数据绑定在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;框架中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何工作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4092cb5028284c4f70ad111654a59eae29e5aeb" translate="yes" xml:space="preserve">
          <source>How to avoid creating too many watchers</source>
          <target state="translated">如何避免产生过多的观看者</target>
        </trans-unit>
        <trans-unit id="ab2ba6105e0812e7f41747d9629bf67642b2443b" translate="yes" xml:space="preserve">
          <source>How watchers are defined</source>
          <target state="translated">观察者是如何定义的</target>
        </trans-unit>
        <trans-unit id="100f16b029687f5c04393f39efd21cce04a9d408" translate="yes" xml:space="preserve">
          <source>Humans are:</source>
          <target state="translated">人类是。</target>
        </trans-unit>
        <trans-unit id="f771cf38309d8e303737f960b8e1ee9d5fa25d29" translate="yes" xml:space="preserve">
          <source>I find this to be a &lt;strong&gt;huge&lt;/strong&gt; problem when working with AngularJS, and the only solution I've been able to find so far is to construct widgets without using two-way binding, instead of using ngOnce, deregistering watchers and similar tricks, or construct directives which build the DOM with jQuery and DOM manipulation. I feel this defeats the purpose of using Angular in the first place.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我发现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在使用AngularJS时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;巨大的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;问题，到目前为止，我唯一能找到的解决方案是在不使用双向绑定的情况下构造小部件，而不是使用ngOnce，注销观察者和类似技巧，或者构造使用jQuery和DOM操作构建DOM的指令。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我觉得这违背了首先使用Angular的目的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cce5ace8b3744fb015ccf880633cfe7cc6b5814" translate="yes" xml:space="preserve">
          <source>I found that there are &lt;a href=&quot;https://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers&quot;&gt;JavaScript watchers&lt;/a&gt; that may do this work. But they are not supported in &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;6&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;7&lt;/a&gt;. So how does AngularJS know that I changed for example the following and reflected this change on a view?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我发现有些&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript观察&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;程序可以完成这项工作。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 6&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 7&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不支持它们&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么AngularJS如何知道我更改了以下内容并在视图中反映了此更改？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1de9c7f3209ea909ee2644a83f8b7a0597e60b39" translate="yes" xml:space="preserve">
          <source>I haven't found technical details on &lt;a href=&quot;http://angularjs.org&quot;&gt;their site&lt;/a&gt;. It's more or less clear how it works when data is propagated from view to model. But how does AngularJS track changes of model properties without setters and getters?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我尚未在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://angularjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其网站&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上找到技术细节&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数据从视图传播到模型时，或多或少地清楚了它是如何工作的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，AngularJS如何在没有设置者和获取者的情况下跟踪模型属性的变化？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bb7cb327e6090eec145fd3400cccddf72e28acc" translate="yes" xml:space="preserve">
          <source>I wondered this myself for a while. Without setters how does &lt;code&gt;AngularJS&lt;/code&gt; notice changes to the &lt;code&gt;$scope&lt;/code&gt; object? Does it poll them?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我自己想了一段时间。没有设置器，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意到对&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更改&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？它会轮询他们吗？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fd4c7597da7bda76a445582e5711ea629ddaea8" translate="yes" xml:space="preserve">
          <source>I would love to hear suggestions on other ways to handle this, but then maybe I should write my own question. I wanted to put this in a comment, but it turned out to be way too long for that...</source>
          <target state="translated">我很想听听其他的处理方法的建议,但也许我应该写下我自己的问题。我想把这个问题写在评论里,但结果是太长了,不适合写了......</target>
        </trans-unit>
        <trans-unit id="c9c6e1411333d79894f31f96b1b2abf469641d9b" translate="yes" xml:space="preserve">
          <source>If a watcher is triggered, the &lt;code&gt;$scope&lt;/code&gt; is dirty</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果触发了观察者，则&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;脏了&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45bb602373f8c144ed802f1013ba835906212ef9" translate="yes" xml:space="preserve">
          <source>If a watcher is triggered, the app knows something has changed, and the &lt;code&gt;$scope&lt;/code&gt; is marked as dirty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果触发了观察程序，则应用程序知道某些更改，并且&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标记为脏。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9754f028f3820afdf781852e2300bdcd1bd49e5a" translate="yes" xml:space="preserve">
          <source>If any changes are found then the digest is invoked again until all changes stabilize.</source>
          <target state="translated">如果发现任何变化,则再次调用文摘,直到所有变化稳定下来。</target>
        </trans-unit>
        <trans-unit id="dc49c0ac42bacc60d1fd64ddb061940ef36b5e04" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$digest&lt;/code&gt; is dirty, we execute the entire &lt;code&gt;$digest&lt;/code&gt; cycle again</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;脏了，我们将&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再次&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;执行整个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循环&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fc6fe8831ed56fa2f83cd2185e8c4d3af21ff79" translate="yes" xml:space="preserve">
          <source>If want to bind input from html to controller:-</source>
          <target state="translated">如果要将HTML输入绑定到控制器:-</target>
        </trans-unit>
        <trans-unit id="fc233c384289e4ba733c6143276863ae3e11acf9" translate="yes" xml:space="preserve">
          <source>If we reach the digest limit AngularJS will raise an error in the console:</source>
          <target state="translated">如果我们达到了 digest 限制,AngularJS 会在控制台中提出一个错误。</target>
        </trans-unit>
        <trans-unit id="b182bb47efd5ceffd0f9647d638795a8d4f4ba86" translate="yes" xml:space="preserve">
          <source>If we use JavaScript&amp;rsquo;s &lt;strong&gt;setTimeout()&lt;/strong&gt; function to update a scope model, Angular has no way of knowing what you might change. In this case it&amp;rsquo;s our responsibility to call $apply() manually, which triggers a $digest cycle. Similarly, if you have a directive that sets up a DOM event listener and changes some models inside the handler function, you need to call $apply() to ensure the changes take effect. The big idea of $apply is that we can execute some code that isn't aware of Angular, that code may still change things on the scope. If we wrap that code in $apply , it will take care of calling $digest(). Rough implementation of $apply().</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果我们使用JavaScript的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;setTimeout（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数更新范围模型，则Angular无法知道您可能会更改的内容。在这种情况下，我们有责任手动调用$ apply（），这将触发一个$ digest循环。同样，如果您有一个设置DOM事件侦听器并更改处理程序函数内某些模型的指令，则需要调用$ apply（）以确保更改生效。 $ apply的主要思想是我们可以执行一些不了解Angular的代码，这些代码可能仍会改变作用域。如果将代码包装在$ apply中，它将调用$ digest（）。 $ apply（）的粗略实现。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="acdee26d7393979df447003717d465f503612861" translate="yes" xml:space="preserve">
          <source>If you have data which will rarely change, you can bind it only once using the :: syntax, like so:</source>
          <target state="translated">如果你的数据很少会改变,你可以使用::语法只绑定一次,就像这样。</target>
        </trans-unit>
        <trans-unit id="f2797b9f1ba27fd200e5c9c4c6af64e50a08620b" translate="yes" xml:space="preserve">
          <source>In normal development, data-binding syntax in the HTML tells the AngularJS compiler to create the watches for you and controller methods are run inside &lt;code&gt;$apply&lt;/code&gt; already. So to the application developer it is all transparent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在常规开发中，HTML中的数据绑定语法会告诉AngularJS编译器为您创建监视，并且控制器方法已在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中运行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，对于应用程序开发人员而言，这一切都是透明的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67037b0a8b5a6bff39857e9b537abcdf932d0df1" translate="yes" xml:space="preserve">
          <source>In the previous picture, it will notice that data-ref1 and data-ref2 has changed.</source>
          <target state="translated">在上图中,会发现data-ref1和data-ref2发生了变化。</target>
        </trans-unit>
        <trans-unit id="8a8356ec773654ca4bdbd056cf3d9a35ffe5458b" translate="yes" xml:space="preserve">
          <source>Issues with change listeners:</source>
          <target state="translated">与变革听众的问题。</target>
        </trans-unit>
        <trans-unit id="f3d16a96c54aef7c6ebe0587ea01873f549a3af8" translate="yes" xml:space="preserve">
          <source>It happened that I needed to link a data model of a person with a form, what I did was a direct mapping of the data with the form.</source>
          <target state="translated">恰好我需要将一个人的数据模型与表格联系起来,我所做的是直接将数据与表格进行映射。</target>
        </trans-unit>
        <trans-unit id="343562dfa3bd11083e7175cd655a02ac86844311" translate="yes" xml:space="preserve">
          <source>It turns out that video games and GPUs use the dirty-checking approach, specifically because it is consistent. As long as they get over the monitor refresh rate (typically 50-60 Hz, or every 16.6-20 ms), any performance over that is a waste, so you're better off drawing more stuff, than getting FPS higher.</source>
          <target state="translated">事实证明,视频游戏和GPU使用的是 &quot;脏查 &quot;的方法,具体来说就是因为它的一致性。只要超过了显示器刷新率(一般是50-60Hz,或者每16.6-20毫秒刷新一次),任何性能超过了都是一种浪费,所以你还不如多画一些东西,比起让FPS更高。</target>
        </trans-unit>
        <trans-unit id="274f1724f9cedd0714f587c409d9a100538443a6" translate="yes" xml:space="preserve">
          <source>It's a little like the Egg and Chicken. You never know who starts, but hopefully it works most of the time as expected.</source>
          <target state="translated">这有点像鸡蛋和山鸡的故事。你永远不知道谁先出手,但希望大部分时间都能如愿以偿。</target>
        </trans-unit>
        <trans-unit id="1525bd60097acc3d807b5139debefd7ba132b0ea" translate="yes" xml:space="preserve">
          <source>Items are watched by passing a function (returning the thing to be
watched) to the &lt;code&gt;$watch&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过将函数（返回要监视的事物）传递给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;监视项目&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="519ea33e338b0e1bee563a64730e09aa647199f5" translate="yes" xml:space="preserve">
          <source>Means you can access data &lt;strong&gt;View -&amp;gt; Controller&lt;/strong&gt; &amp;amp; &lt;strong&gt;Controller -&amp;gt; View&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表示您可以访问数据&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;View-&amp;gt; Controller&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;＆&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Controller-&amp;gt; View&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e33d668c8f945d34b9f05ee30f75c1e4213cde48" translate="yes" xml:space="preserve">
          <source>Misko already gave an excellent description of how the data bindings work, but I would like to add my view on the performance issue with the data binding.</source>
          <target state="translated">关于数据绑定的工作原理,Misko已经给出了很好的描述,但我想补充一下我对数据绑定性能问题的看法。</target>
        </trans-unit>
        <trans-unit id="f98f946369ce6e582d4af4e03e409d9f9dc2ef40" translate="yes" xml:space="preserve">
          <source>Note:
$apply() is equal to $rootScope.$digest() this  means the dirty checking starts right from the root or top or the parent scope down to all the child $scopes in the angular js application.</source>
          <target state="translated">注意:$apply()等于$rootScope.$digest(),这意味着脏的检查就是从根或顶部或父作用域开始,直到Angular js应用程序中的所有子作用域。</target>
        </trans-unit>
        <trans-unit id="c93e786087831c4f1fafb334ae9947a471cc20d6" translate="yes" xml:space="preserve">
          <source>Obviously there is no periodic checking of &lt;code&gt;Scope&lt;/code&gt; whether there is any change in the Objects attached to it. Not all the objects attached to scope are watched . Scope prototypically maintains a &lt;strong&gt;$$watchers&lt;/strong&gt; . &lt;code&gt;Scope&lt;/code&gt; only iterates through this &lt;code&gt;$$watchers&lt;/code&gt; when &lt;code&gt;$digest&lt;/code&gt; is called .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显然，没有定期检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否附加了对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并非监视所有附加到作用域的对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;范围原型保持一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watchers&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;时，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;才通过此&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;迭代&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c86e0e64f0406905129a3f72489210a41131f5c7" translate="yes" xml:space="preserve">
          <source>Or consider a data-grid in a corporate web application. 50 rows per page is not unreasonable, each of which could have 10-20 columns. If you build this with ng-repeats, and/or have information in some cells which uses some bindings, you could be approaching 2000 bindings with this grid alone.</source>
          <target state="translated">或者考虑在一个企业网站应用中的数据网格。每页50行不是不合理的,每个页面可以有10-20列。如果你用ng-repeats来构建这个网格,或者在一些单元格中使用了一些绑定的信息,单单是这个网格就可以接近2000个绑定。</target>
        </trans-unit>
        <trans-unit id="9b8a08e18d95dbfa2c87458daac1a9abc11ba8cb" translate="yes" xml:space="preserve">
          <source>Second one is a listener function which will be called when there is a change in the object. All the things like DOM changes will be implemented in this function.</source>
          <target state="translated">第二个是一个监听器函数,当对象发生变化时,会被调用。所有像DOM变化的事情都将在这个函数中实现。</target>
        </trans-unit>
        <trans-unit id="3fd1ca72ff9c0211014fb86b642296ec816618c7" translate="yes" xml:space="preserve">
          <source>See a working example here on
&lt;a href=&quot;http://codepen.io/chrisN/pen/YqEmOO&quot;&gt;Codepen&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;a href=&quot;http://codepen.io/chrisN/pen/YqEmOO&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Codepen&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上查看工作示例 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="693b3d4126317443f94c9a270b3d9ac192e6d991" translate="yes" xml:space="preserve">
          <source>So it is easy to bind data in AngularJs.</source>
          <target state="translated">所以在AngularJs中绑定数据很容易。</target>
        </trans-unit>
        <trans-unit id="c9b7e10aa62d01a0083a0bafbc14a25d628a5a04" translate="yes" xml:space="preserve">
          <source>So it may seem that we are slow, since dirty-checking is inefficient. This is where we need to look at real numbers rather than just have theoretical arguments, but first let's define some constraints.</source>
          <target state="translated">所以看起来我们的速度可能会很慢,因为脏了检查的效率很低。这时候我们就需要看实数,而不仅仅是有理论的论证,首先我们来定义一些约束条件。</target>
        </trans-unit>
        <trans-unit id="31ff2a053dd930ba998f5931530fbca741e8b5b1" translate="yes" xml:space="preserve">
          <source>So the real question is this: How many comparisons can you do on a browser in 50&amp;nbsp;ms? This is a hard question to answer as many factors come into play, but here is a test case: &lt;a href=&quot;http://jsperf.com/angularjs-digest/6&quot;&gt;http://jsperf.com/angularjs-digest/6&lt;/a&gt; which creates 10,000 watchers. On a modern browser this takes just under 6&amp;nbsp;ms. On &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;8&lt;/a&gt; it takes about 40&amp;nbsp;ms. As you can see, this is not an issue even on slow browsers these days. There is a caveat: The comparisons need to be simple to fit into the time limit... Unfortunately it is way too easy to add a slow comparison into AngularJS, so it is easy to build slow applications when you don't know what you are doing. But we hope to have an answer by providing an instrumentation module, which would show you which are the slow comparisons.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，真正的问题是：您可以在50毫秒内在浏览器上进行多少次比较？这是一个很难回答的问题，因为有许多因素在起作用，但这是一个测试用例：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/angularjs-digest/6&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsperf.com/angularjs-digest/6&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它创建了10,000个观察者。在现代浏览器上，这仅需不到6毫秒。在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 8上&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，大约需要40毫秒。如您所见，即使这些天在缓慢的浏览器上，这也不是问题。需要注意的是：比较必须很简单才能适应时限...不幸的是，将慢速比较添加到AngularJS中太容易了，因此当您不知道自己要做什么时，很容易构建慢速应用程序是做。但是我们希望通过提供一个检测模块来解决这个问题，该模块将向您展示哪些是比较慢的比较。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="174534c6b3882921f07bb41f7a29c9824d9b171b" translate="yes" xml:space="preserve">
          <source>Thank you.</source>
          <target state="translated">谢谢你。</target>
        </trans-unit>
        <trans-unit id="92577ceb7120ac7b142fac481d75199d5e0a53f3" translate="yes" xml:space="preserve">
          <source>That way if you modify the value of the object controller, this will be reflected automatically in the view.</source>
          <target state="translated">这样,如果你修改对象控制器的值,就会自动反映到视图中。</target>
        </trans-unit>
        <trans-unit id="2003e784c284ddbed19467eee8de2a001cf6b923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$apply()&lt;/code&gt; method, which is what you call when you are transitioning from a non-AngularJS world into an AngularJS world, calls &lt;code&gt;$digest()&lt;/code&gt;. A digest is just plain old dirty-checking. It works on all browsers and is totally predictable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从非AngularJS世界过渡到AngularJS世界时调用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法称为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;摘要只是普通的脏检查。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它适用于所有浏览器，并且完全可以预测。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b522c9d331f9c497ebd37172926a4cbfa51cfad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$digest&lt;/code&gt; cycle checks all watchers against their last value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;周期将检查所有观察家对他们的最后的值&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57d293436789127bbfd7b6ac942ebead8614f1b9" translate="yes" xml:space="preserve">
          <source>The above features work in the browsers IE for the mentioned versions also just by making sure your application is angular js application which means you are using the angularjs framework script file referenced in the script tag.</source>
          <target state="translated">上述功能在IE浏览器中也可以使用,只需确保你的应用程序是Angular js应用程序,这意味着你使用的是Angularjs框架的脚本文件。</target>
        </trans-unit>
        <trans-unit id="468988dca821eab1366620955fd6086c27fd11e1" translate="yes" xml:space="preserve">
          <source>The binding will only be triggered when the containing template is rendered and the data loaded into &lt;code&gt;$scope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅当呈现包含模板并将数据加载到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时，才会触发绑定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15405ba0c4fa31d34c3dffcbf02c552e4ca0b07b" translate="yes" xml:space="preserve">
          <source>The control input of the form:</source>
          <target state="translated">形式的控制输入。</target>
        </trans-unit>
        <trans-unit id="3e6b0df17c0aaea4b70014e68b2e206f24d35edc" translate="yes" xml:space="preserve">
          <source>The data binding can cause performance issues on complex pages.</source>
          <target state="translated">数据绑定会导致复杂页面的性能问题。</target>
        </trans-unit>
        <trans-unit id="25004e2affdfc42b03e4884351a5cc585b221410" translate="yes" xml:space="preserve">
          <source>The digest is hard on the machine but easy on the developer</source>
          <target state="translated">文摘对机器来说很难,但对开发者来说却很容易。</target>
        </trans-unit>
        <trans-unit id="08cbe99aa8a083947a0b23f9775c4b49f46dc65a" translate="yes" xml:space="preserve">
          <source>The one-way data binding is an approach where a value is taken from the data model and inserted into an HTML element. There is no way to update model from view. It is used in classical template systems. These systems bind data in only one direction.</source>
          <target state="translated">单向数据绑定是一种从数据模型中获取一个值并插入到HTML元素中的方法。没有办法从视图中更新模型。它被用于经典的模板系统中。这些系统只在一个方向上绑定数据。</target>
        </trans-unit>
        <trans-unit id="395b6fe80ec647c86c7ba13a79a819f5b1d4ef1c" translate="yes" xml:space="preserve">
          <source>The other point is that you can understand easily the impact deep of a simple binding on the memory and the CPU. Hopefully Desktops are fat enough to handle this. Mobile phones are not that strong.</source>
          <target state="translated">还有一点,就是简单的绑定对内存和CPU的影响深的很容易理解。但愿台式机足够胖,能承受得住。手机就没那么强了。</target>
        </trans-unit>
        <trans-unit id="dedae52c9852165a86fa875d38e2c1e75a87ccf1" translate="yes" xml:space="preserve">
          <source>The reference in the scope is not exactly the reference   in the template. When you data-bind two objects, you need a third one that listen to the first and modify the other.</source>
          <target state="translated">作用域中的引用并不完全是模板中的引用。当你数据绑定两个对象时,你需要第三个对象来听从第一个对象,并修改另一个对象。</target>
        </trans-unit>
        <trans-unit id="c91a85811c33fbcef6fa8731745c927c0012d820" translate="yes" xml:space="preserve">
          <source>The syntax is atrocious, since browsers do not support it natively. Yes, there are proxies, but they are not semantically correct in all cases, and of course there are no proxies on old browsers. The bottom line is that dirty-checking allows you to do &lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;POJO&lt;/a&gt;, whereas KnockoutJS and Backbone.js force you to inherit from their classes, and access your data through accessors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该语法非常糟糕，因为浏览器本身不支持它。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是的，有代理，但是在所有情况下它们在语义上都不正确，当然，在旧的浏览器上也没有代理。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最重要的是，脏检查允许您执行&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;POJO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而KnockoutJS和Backbone.js迫使您从它们的类继承，并通过访问器访问数据。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a43dba51173aab39fa19ef60ae9870ffdf5e18cd" translate="yes" xml:space="preserve">
          <source>The third being an optional parameter which takes in a boolean . If its true , angular deep watches the object &amp;amp; if its false Angular just does a reference watching on the object.
    Rough Implementation of $watch looks like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第三个是一个可选参数，它接受boolean值。如果为true，则angular deep监视对象；如果为false，Angular则对对象进行引用监视。 $ watch的大致实现如下所示&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3c98a925e6264735a9cd6c4c03c15427dac1af8" translate="yes" xml:space="preserve">
          <source>There are many different ways of defining a watcher in AngularJS.</source>
          <target state="translated">在AngularJS中,有很多不同的方式来定义观察者。</target>
        </trans-unit>
        <trans-unit id="8237def3104a80cff7eecee796adaf84abd4fa04" translate="yes" xml:space="preserve">
          <source>There is an interesting thing in Angular called Digest Cycle. The $digest cycle starts as a result of a call to $scope.$digest(). Assume that you change a $scope model in a handler function through the ng-click directive. In that case AngularJS automatically triggers a $digest cycle by calling $digest().In addition to ng-click, there are several other built-in directives/services that let you change models (e.g. ng-model, $timeout, etc) and automatically trigger a $digest cycle.  The rough implementation of $digest looks like this.</source>
          <target state="translated">在Angular中有一个有趣的东西,叫做Digest循环。$digest循环是在调用$scope.$digest()后开始的。假设你通过ng-click指令改变了一个处理程序函数中的$scope模型。在这种情况下,AngularJS会通过调用$digest()自动触发$digest循环。除了ng-click之外,还有其他几个内置的directivesservices可以让你改变模型(如ng-model、$timeout等)并自动触发$digest循环。$digest的大致实现方式是这样的。</target>
        </trans-unit>
        <trans-unit id="e2e20ff3c295188e752a47e4f991273ed16c6dfd" translate="yes" xml:space="preserve">
          <source>This function is used to observe changes in a variable on the $scope.
  It accepts three parameters: expression, listener and equality object,
  where listener and equality object are optional parameters.</source>
          <target state="translated">这个函数用于观察$scope上的变量的变化。它接受三个参数:表达式、监听器和平等对象,其中监听器和平等对象是可选的参数。</target>
        </trans-unit>
        <trans-unit id="3dd9be14c4e8bc97123d1fd8dc61ae080e1b9123" translate="yes" xml:space="preserve">
          <source>This function iterates through all the watches in the $scope object,
  and its child $scope objects</source>
          <target state="translated">该函数迭代了$scope对象中的所有手表,以及它的子对象$scope对象。</target>
        </trans-unit>
        <trans-unit id="91a26da78200b3aef1cb1945d188957561dfd228" translate="yes" xml:space="preserve">
          <source>This is because AngularJS has two-way binding, so data can be passed back up the &lt;code&gt;$scope&lt;/code&gt; tree. We may change a value on a higher &lt;code&gt;$scope&lt;/code&gt; that has already been digested. Perhaps we change a value on the &lt;code&gt;$rootScope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是因为AngularJS具有双向绑定，因此可以将数据传递回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;树。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可能会在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已经消化&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的更高&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上更改一个值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也许我们更改&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$rootScope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56940ba3b003c3b9efc4a2d260ce62e5a12c0d89" translate="yes" xml:space="preserve">
          <source>This is especially important when you have an &lt;code&gt;ng-repeat&lt;/code&gt; with many items.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您有&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;很多项目&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-repeat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时，这一点尤其重要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc2a49f6d92f573bcfe485e392faeba5d9e44a4a" translate="yes" xml:space="preserve">
          <source>This is my basic understanding. It may well be wrong!</source>
          <target state="translated">这是我的基本理解。这很可能是错误的!</target>
        </trans-unit>
        <trans-unit id="824a36c001af90b4c01a2f8a9b0d6db5c1f42c79" translate="yes" xml:space="preserve">
          <source>This limit is easy to reach if you &lt;code&gt;ng-repeat&lt;/code&gt; over a large &lt;code&gt;JSON&lt;/code&gt;&lt;code&gt;array&lt;/code&gt; for example. You can mitigate against this using features like one-time binding to compile a template without creating watchers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，如果您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对大型&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-repeat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则很容易达到此限制&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用一次性绑定之类的功能来缓解这种情况，以编译模板而无需创建观察者。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f9698290b18dfcad06dccf0d7af50181f334d2c" translate="yes" xml:space="preserve">
          <source>To contrast dirty-checking (AngularJS) vs change listeners (&lt;a href=&quot;http://en.wikipedia.org/wiki/KnockoutJS&quot;&gt;KnockoutJS&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Backbone.js&quot;&gt;Backbone.js&lt;/a&gt;): While dirty-checking may seem simple, and even inefficient (I will address that later), it turns out that it is semantically correct all the time, while change listeners have lots of weird corner cases and need things like dependency tracking to make it more semantically correct. KnockoutJS dependency tracking is a clever feature for a problem which AngularJS does not have.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对比脏检查（AngularJS）与更改侦听器（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/KnockoutJS&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;KnockoutJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Backbone.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Backbone.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：尽管脏检查似乎很简单，甚至效率很低（我稍后会解决），但事实证明，它一直在语义上是正确的，变更侦听器有很多奇怪的极端情况，并且需要诸如依赖性跟踪之类的东西才能使其在语义上更加正确。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;KnockoutJS依赖项跟踪是AngularJS所没有的问题的一项聪明功能。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7badb858f29a6efa2f33f71e4eb4033d92c9cc96" translate="yes" xml:space="preserve">
          <source>Watcher function is called as part of the digest cycle.</source>
          <target state="translated">Watcher函数作为消化周期的一部分被调用。</target>
        </trans-unit>
        <trans-unit id="8715de0439dc5dc006e1080c1077524c864eb3fc" translate="yes" xml:space="preserve">
          <source>Watcher functions can change other attributes on &lt;code&gt;$scope&lt;/code&gt; or on a parent &lt;code&gt;$scope&lt;/code&gt;. If one &lt;code&gt;$watcher&lt;/code&gt; function has been triggered, we can't guarantee that our other &lt;code&gt;$scope&lt;/code&gt;s are still clean, and so we execute the entire digest cycle again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;观察者函数可以更改&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或父&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其他属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已触发&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数，则我们不能保证其他&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仍然干净，因此我们再次执行整个摘要周期。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07fcfb61713968827e9ec7c9f565e6d499887b35" translate="yes" xml:space="preserve">
          <source>We continually loop through the &lt;code&gt;$digest&lt;/code&gt; cycle until either the digest cycle comes up clean (all &lt;code&gt;$watch&lt;/code&gt; expressions have the same value as they had in the previous cycle), or we reach the digest limit. By default, this limit is set at 10.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们不断循环&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循环，直到摘要循环&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变得&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;干净（所有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表达式的值与上一个循环中的值相同），或者达到摘要限制。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下，此限制设置为10。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99c41154db2ed0f7cd5e6cf93d295fefb4cb0cb8" translate="yes" xml:space="preserve">
          <source>What about performance?</source>
          <target state="translated">性能如何?</target>
        </trans-unit>
        <trans-unit id="f6d49eb840ac9b816221044bcd3d3d0b4f2429c7" translate="yes" xml:space="preserve">
          <source>What it actually does is this: Any &quot;normal&quot; place you modify the model was already called from the guts of &lt;code&gt;AngularJS&lt;/code&gt;, so it automatically calls &lt;code&gt;$apply&lt;/code&gt; for you after your code runs. Say your controller has a method that's hooked up to &lt;code&gt;ng-click&lt;/code&gt; on some element. Because &lt;code&gt;AngularJS&lt;/code&gt; wires the calling of that method together for you, it has a chance to do an &lt;code&gt;$apply&lt;/code&gt; in the appropriate place. Likewise, for expressions that appear right in the views, those are executed by &lt;code&gt;AngularJS&lt;/code&gt; so it does the &lt;code&gt;$apply&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它的实际作用是：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的胆量已经调用了您修改模型的任何&amp;ldquo;正常&amp;rdquo;位置&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在代码运行之后&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它会自动&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。假设您的控制器有一个方法，可以通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-click&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;某个元素来实现。由于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为您连接了该方法的调用，因此它有机会&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在适当的位置&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。同样，对于在视图中正确显示的表达式，这些表达式由&lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;执行，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此它执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b811e7e92d8afabecc4cce05a490306acb550c72" translate="yes" xml:space="preserve">
          <source>When the documentation talks about having to call &lt;code&gt;$apply&lt;/code&gt; manually for code &lt;em&gt;outside of &lt;code&gt;AngularJS&lt;/code&gt;&lt;/em&gt;, it's talking about code which, when run, doesn't stem from &lt;code&gt;AngularJS&lt;/code&gt; itself in the call stack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当文档讨论必须为&lt;/font&gt;&lt;em&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;/em&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之外的&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码手动&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它所讨论的代码在运行时并非源于&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用堆栈中的&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;本身。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f128527b9d0415ad5b444d6311a137dbd015bc23" translate="yes" xml:space="preserve">
          <source>When we interact with AngularJS through the normal channels (ng-model, ng-repeat, etc) a digest cycle will be triggered by the directive.</source>
          <target state="translated">当我们通过正常渠道(ng-model、ng-重复等)与AngularJS进行交互时,指令会触发一个消化循环。</target>
        </trans-unit>
        <trans-unit id="c389541f2e6d6e735f2fe65334c1314a25636932" translate="yes" xml:space="preserve">
          <source>Whenever the user changes the data in the view , there occurs an update of that change in the scope model, and viceversa.</source>
          <target state="translated">每当用户改变视图中的数据,范围模型中的数据就会发生更新,反之亦然。</target>
        </trans-unit>
        <trans-unit id="1e49f79840dfeb596c214735bd51aa334175dc26" translate="yes" xml:space="preserve">
          <source>You can ask a directive such as &lt;code&gt;ng-model&lt;/code&gt; to define the watcher for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以要求诸如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; 之&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类的指令&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为您定义观察者。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bec541c245d7b7b926dd45128797bb84bae1703" translate="yes" xml:space="preserve">
          <source>You can bind data in &lt;code&gt;ng-model&lt;/code&gt; Like:-</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;绑定数据，例如&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9926611fef2cbdb7f4ac38d125214c2c8f5120ac" translate="yes" xml:space="preserve">
          <source>You can explicitly &lt;code&gt;$watch&lt;/code&gt; an &lt;code&gt;attribute&lt;/code&gt; on &lt;code&gt;$scope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显式地&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67e827d680b215290300f8cff935a4a123114bbf" translate="yes" xml:space="preserve">
          <source>You can place a &lt;code&gt;{{}}&lt;/code&gt; interpolation in your template (a watcher will be created for you on the current &lt;code&gt;$scope&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在模板中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;放置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;插值（将在当前&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上为您创建一个观察器&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a804c4b9fc797bd7668b53bb525c54f66da53f64" translate="yes" xml:space="preserve">
          <source>i.e&lt;code&gt;$rootScope.$apply()&lt;/code&gt;</source>
          <target state="translated">i.e&lt;code&gt;$rootScope.$apply()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="5857e7febe3c8593e18cc3737f8b0bea41507946" translate="yes" xml:space="preserve">
          <source>{{expression}} &amp;mdash; In your templates (and anywhere else where there&amp;rsquo;s an expression) or when we define ng-model.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;{{expression}}-在您的模板（以及存在表达式的其他任何地方）中或当我们定义ng-model时。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
