<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/9682092">
    <body>
      <group id="9682092">
        <trans-unit id="91de6e5632c96599d709bfa2655e3e4d2780d307" translate="yes" xml:space="preserve">
          <source>$scope.$watch(&amp;lsquo;expression/function&amp;rsquo;) &amp;mdash; In your JavaScript we can just attach a scope object for angular to watch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ scope. $ watch ( 'expression / function') &amp;mdash; JavaScript에서 앵귤러가 볼 범위 객체를 첨부 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7820d85df30b0b7884bdfefcb9723bc43a90d70" translate="yes" xml:space="preserve">
          <source>(if it has any). When $digest() iterates
  over the watches, it checks if the value of the expression has
  changed. If the value has changed, AngularJS calls the listener with
  new value and old value. The $digest() function is called
  whenever AngularJS thinks it is necessary. For example, after a button
  click, or after an AJAX call. You may have some cases where AngularJS
  does not call the $digest() function for you. In that case you have to
  call it yourself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(있는 경우). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest ()가 시계를 반복 할 때 표현식의 값이 변경되었는지 확인합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값이 변경된 경우 AngularJS는 새 값과 이전 값으로 리스너를 호출합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS가 필요하다고 생각할 때마다 $ digest () 함수가 호출됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 단추 클릭 후 또는 AJAX 호출 후. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS가 $ digest () 함수를 호출하지 않는 경우가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 직접 호출해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33e1522ece49487d912bf4b8c01791e362bcecd4" translate="yes" xml:space="preserve">
          <source>//Dom update code with new value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;// 새로운 값을 가진 돔 업데이트 코드&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e876771cd34a0018c198b4d5a45eee5c3e8f6f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; binds our view and render it in expression &lt;code&gt;{{ }}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 뷰를 바인딩하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{ }}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 표현식으로 렌더링합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fe9258fbd573d515f842c6b1ae446f5e5726696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; is the data which is shown to the user in the view and with which the user interacts.</source>
          <target state="translated">&lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은보기에서 사용자에게 표시되고 사용자와 상호 작용하는 데이터입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a23e57991f9eb393ba30e7917a3fc84a1533a36d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Limited&lt;/em&gt; &amp;mdash; You can't really show more than about 2000 pieces of information to a human on a single page. Anything more than that is really bad UI, and humans can't process this anyway.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제한&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;mdash; 실제로 한 페이지에 약 2000 개 이상의 정보를 사람에게 보여줄 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 이상은 정말 나쁜 UI이며 인간은 어쨌든 이것을 처리 할 수 ​​없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e14aa7e871928b62520d6e0b8e10e2cffc78f21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Slow&lt;/em&gt; &amp;mdash; Anything faster than 50&amp;nbsp;ms is imperceptible to humans and thus can be considered as &quot;instant&quot;.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;느림&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;mdash; 50ms보다 빠른 것은 인간이 인식 할 수 없으므로 &quot;인스턴트&quot;로 간주 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90d38fa37c44e3e62eeefb071eae0c59c73b444a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$apply()&lt;/strong&gt; -</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ apply ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5975df0296848c55622406b2bb66e7ec25788e86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$digest()&lt;/strong&gt; -</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd14b832fd688faba3d0531903fb7672f5bb945f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$watch()&lt;/strong&gt; :-</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :-&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1303db0abb7e5b6b8865f6a4d1841c909f514e12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$watch&lt;/strong&gt; function takes in three parameters:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수는 세 가지 매개 변수를 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="355c0e35ea0794843854cef2fc1fbb22fe357cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="595ac3c717717f780d25d74e1b557454a56132f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="634b1d0bb5b61119c1b7b9f683e4940b4c8913be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d73ec0e35dfd919874037befa129888de0e136a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What is data binding?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터 바인딩이란 무엇입니까?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c2332a09f133d6a0597e878dbfa788b036ac566" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AngularJS Code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS 코드&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d6b4242ac6358cb3597337491f651b75eb7ecba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description :&lt;/strong&gt;
Angular js sets the watcher on the scope model, which fires the listener function if there is a change in the model.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설명 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Angular js는 감시자를 스코프 모델에 설정하여 모델에 변경 사항이 있으면 리스너 기능을 시작합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6524f86f67897c2c00f49d97594a0331982027b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For Ex.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e360378a5f9ce12a09c9e371f6ff0b7082ac4e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML Code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML 코드&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8db34f25d93fa8eee917fe302430d84387ad465" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How is it possible?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그게 어떻게 가능해?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="866c51fff782ef985d22aab635285eca8cab7d37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;O/P&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;O/P&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="869138fa5ca240e6391e1fd6a7b3bce75e085d97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short answer :&lt;/strong&gt;
With the help of digest cycle.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;짧은 대답 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다이제스트 사이클의 도움으로.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c025a485c08098687c23572800580a92630ee0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So When and How is the watcher function called?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇다면 감시자 함수는 언제 어떻게 호출됩니까?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="284c0cc1c16634ee278d62d9da4d70563394d278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TL;DR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0cb000ddd31af21b11edf2884f5f7e6bb763965" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data binding:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터 바인딩:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64003ac4d8c2449fd0db7d0d812d631a0365c5a3" translate="yes" xml:space="preserve">
          <source>A digest cycle is a &lt;strong&gt;depth-first traversal of &lt;code&gt;$scope&lt;/code&gt; and all its children&lt;/strong&gt;. For each &lt;code&gt;$scope&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;, we iterate over its &lt;code&gt;$$watchers&lt;/code&gt;&lt;code&gt;array&lt;/code&gt; and evaluate all the expressions. If the new expression value is different from the last known value, the watcher's function is called. This function might recompile part of the DOM, recompute a value on &lt;code&gt;$scope&lt;/code&gt;, trigger an &lt;code&gt;AJAX&lt;/code&gt;&lt;code&gt;request&lt;/code&gt;, anything you need it to do.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다이제스트주기는 &lt;/font&gt;&lt;strong&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 모든 자식&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;깊이 우선 순회입니다&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반복하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 표현식을 평가합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새 표현식 값이 마지막으로 알려진 값과 다른 경우 감시자의 함수가 호출됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수는 DOM의 일부를 다시 컴파일하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값을 다시 계산하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AJAX&lt;/code&gt; &lt;code&gt;request&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 트리거 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="287c01a594c777e6def93fe6bfe0ca2101558958" translate="yes" xml:space="preserve">
          <source>A function which will be executed if the watcher is dirty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시자가 더러워지면 실행될 기능입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4729c82301a3c543842ace5fe6896ce14e0331a4" translate="yes" xml:space="preserve">
          <source>A last known value of the expression. This can be checked against the current computed value of the expression. If the values differ the watcher will trigger the function and mark the &lt;code&gt;$scope&lt;/code&gt; as dirty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;식의 마지막으로 알려진 값입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 현재 계산 된 표현식 값과 비교하여 확인할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값이 다르면 감시자가 함수를 트리거하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 더티로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표시합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7a4cd7cf6fbab5ba3dec319212de69d6967eae1" translate="yes" xml:space="preserve">
          <source>An example where I passed the model is updated from server data is when you ask for a zip code and zip code based on written loads a list of colonies and cities associated with that view, and by default set the first value with the user. And this I worked very well, what does happen, is that &lt;code&gt;angularJS&lt;/code&gt; sometimes takes a few seconds to refresh the model, to do this you can put a spinner while displaying the data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모델을 서버 데이터에서 업데이트 한 예는 작성된로드를 기반으로 우편 번호 및 우편 번호를 요청할 때 해당 뷰와 관련된 콜로니 및 도시 목록을 표시하고 기본적으로 사용자와 함께 첫 번째 값을 설정하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 이것은 매우 잘 작동했습니다. 어떤 일이 발생했는지, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;angularJS&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때로는 모델을 새로 고치는 데 몇 초가 걸리므로 데이터를 표시하는 동안 스피너를 넣을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8da1959d807de663cf2b11afe60055d655f244eb" translate="yes" xml:space="preserve">
          <source>An expression which the watcher is monitoring. This might just be an &lt;code&gt;attribute&lt;/code&gt; name, or something more complicated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시자가 모니터링하고있는 표현입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이름이거나 더 복잡한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것일 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f4d7984356ebcf25d2e6d62a2611834b289a5d9" translate="yes" xml:space="preserve">
          <source>Angular adds a watcher to the $$watchers for each of these</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular는 이들 각각에 대해 $$ watchers에 감시자를 추가합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1f96c7ee88fa3157584f1e739b926f3ad299b10" translate="yes" xml:space="preserve">
          <source>Angular do auto-magically updates only those model changes which are
  inside AngularJS context. When you do change in any model outside of
  the Angular context (like browser DOM events, setTimeout, XHR or third
  party libraries), then you need to inform Angular of the changes by
  calling $apply() manually. When the $apply() function call finishes
  AngularJS calls $digest() internally, so all data bindings are
  updated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular는 AngularJS 컨텍스트 내에있는 모델 변경 사항 만 자동으로 업데이트합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;브라우저 DOM 이벤트, setTimeout, XHR 또는 타사 라이브러리와 같이 Angular 컨텍스트 외부의 모델에서 변경을 수행하는 경우 $ apply ()를 수동으로 호출하여 변경 내용을 Angular에 알려야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ apply () 함수 호출이 AngularJS 호출 $ digest ()를 내부적으로 완료하면 모든 데이터 바인딩이 업데이트됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ee3d482254a050a513753124978cd73f85d5a94" translate="yes" xml:space="preserve">
          <source>Angular maintains a &lt;code&gt;oldValue&lt;/code&gt; and &lt;code&gt;newValue&lt;/code&gt; of every binding. And after every &lt;em&gt;Angular event&lt;/em&gt;, the famous &lt;code&gt;$digest()&lt;/code&gt; loop will check the WatchList to see if something changed. These &lt;em&gt;Angular events&lt;/em&gt; are &lt;code&gt;ng-click&lt;/code&gt;, &lt;code&gt;ng-change&lt;/code&gt;, &lt;code&gt;$http&lt;/code&gt; completed ...  The &lt;code&gt;$digest()&lt;/code&gt; will loop as long as any &lt;code&gt;oldValue&lt;/code&gt; differs from the &lt;code&gt;newValue&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 모든 바인딩 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;oldValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;newValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유지 관리합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 모든 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular 이벤트&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 후에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유명한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루프는 WatchList를 검사하여 변경 사항이 있는지 확인합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular 이벤트&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-click&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-change&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; completed ... &lt;/font&gt; &lt;code&gt;oldValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt; &lt;code&gt;newValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 다른 한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 반복됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6897a7bb238c36acd615fe16d93b0865f419c091" translate="yes" xml:space="preserve">
          <source>Angular maintains a simple &lt;code&gt;array&lt;/code&gt; of watchers in the &lt;code&gt;$scope&lt;/code&gt; objects. If you inspect any &lt;code&gt;$scope&lt;/code&gt; you will find that it contains an &lt;code&gt;array&lt;/code&gt; called &lt;code&gt;$$watchers&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시자 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 검사하면 &lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라는 &lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 포함되어 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf0f962413a08a96f272491ff2fde4a07d077a61" translate="yes" xml:space="preserve">
          <source>Angular.js creates a watcher for every model we create in view. Whenever a model is changed, an &quot;ng-dirty&quot; class is appeneded to the model, so the watcher will observe all models which have the class &quot;ng-dirty&quot; &amp;amp; update their values in the controller &amp;amp; vice versa.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular.js는 우리가 보는 모든 모델에 대해 감시자를 만듭니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모델이 변경 될 때마다 &quot;ng-dirty&quot;클래스가 모델에 적용되므로 감시자는 &quot;ng-dirty&quot;클래스가있는 모든 모델을 관찰하고 컨트롤러에서 값을 업데이트하거나 그 반대로 업데이트합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25576f174eab97ef207e9a46466bb2b7e362d6ba" translate="yes" xml:space="preserve">
          <source>AngularJS handle data-binding mechanism with the help of three powerful functions :      &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$watch&quot;&gt;$watch()&lt;/a&gt;,&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest&quot;&gt;$digest()&lt;/a&gt;and &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply&quot;&gt;$apply()&lt;/a&gt;. Most of the time AngularJS will call the $scope.$watch() and $scope.$digest(), but
in some cases you may have to call these functions manually to update with new values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$watch&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ apply ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 세 가지 강력한 함수를 사용하여 데이터 바인딩 메커니즘을 처리합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분 AngularJS는 $ scope. $ watch () 및 $ scope. $ digest ()를 호출하지만 경우에 따라 새 값으로 업데이트하기 위해 이러한 함수를 수동으로 호출해야 할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adaa93c89cb1f65e12242562d8f52d1e5b339d30" translate="yes" xml:space="preserve">
          <source>AngularJS remembers the value and compares it to a previous value. This is basic dirty-checking. If there is a change in value, then it fires the change event.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS는 값을 기억하여 이전 값과 비교합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 기본적인 더티 체크입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값이 변경되면 변경 이벤트가 시작됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbef5694a622a1a4c9253ab37640ce184b463958" translate="yes" xml:space="preserve">
          <source>AngularJs supports &lt;strong&gt;Two way data-binding&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJ는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;양방향 데이터 바인딩을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지원합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efa79dd5413f9fd95b27c41dccb2665020217dc4" translate="yes" xml:space="preserve">
          <source>As Misko stated, around 2000 bindings are where you start to see problems, but you shouldn't have more than 2000 pieces of information on a page anyway. This may be true, but not every data-binding is visible to the user. Once you start building any sort of widget or data grid with two-way binding you can &lt;em&gt;easily&lt;/em&gt; hit 2000 bindings, without having a bad UX.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Misko가 언급했듯이 약 2000 개의 바인딩이 문제를 발견하기 시작하는 곳이지만 페이지에 2000 개 이상의 정보가 없어야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 사실 일 수 있지만 모든 데이터 바인딩이 사용자에게 표시되는 것은 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;양방향 바인딩으로 모든 종류의 위젯 또는 데이터 그리드를 구축하기 시작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 나쁜 UX없이 2000 바인딩에 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쉽게&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 도달 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 수 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37fbc5e79c6734b14dad81b7d685ccc6893e71b0" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, &lt;strong&gt;AngularJS&lt;/strong&gt; uses &lt;code&gt;ng-model&lt;/code&gt; to listen and watch what happens on HTML elements, especially on &lt;code&gt;input&lt;/code&gt; fields. When something happens, do something. In our case, &lt;code&gt;ng-model&lt;/code&gt; is bind to our view, using the mustache notation &lt;code&gt;{{}}&lt;/code&gt;. Whatever is typed inside the input field is displayed on the screen instantly. And that's the beauty of data binding, using AngularJS in its simplest form.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예에서 볼 수 있듯이 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 HTML 요소, 특히 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;input&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 필드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 발생하는 내용을 듣고 감시 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;무언가가 발생하면 무언가를하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 콧수염 표기법 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{}}&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 뷰에 바인딩됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력 필드에 입력 한 내용이 화면에 즉시 표시됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 AngularJS를 가장 간단한 형태로 사용하여 데이터 바인딩의 아름다움입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="737afa2dc7c25184622f10ed905b43a86ad1a089" translate="yes" xml:space="preserve">
          <source>As you can see, every time something changes in an AngularJS app, AngularJS will check every single watcher in the &lt;code&gt;$scope&lt;/code&gt; hierarchy to see how to respond. For a developer this is a massive productivity boon, as you now need to write almost no wiring code, AngularJS will just notice if a value has changed, and make the rest of the app consistent with the change.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보시다시피 AngularJS 앱에서 무언가가 변경 될 때마다 AngularJS는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 계층 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 모든 감시자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 확인하여 응답 방법을 확인합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개발자에게는 배선 코드를 거의 작성하지 않아도되기 때문에 생산성이 크게 향상됩니다. AngularJS는 값이 변경되었는지 확인하고 나머지 앱을 변경과 일치하게 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a79d468ad5e9c27dc450d53ed835dd90ea4fe4a0" translate="yes" xml:space="preserve">
          <source>At the end of the &lt;code&gt;$apply&lt;/code&gt; the &lt;code&gt;$digest&lt;/code&gt; method is invoked which goes
through each of the watches and checks to see if they changed since
last time the &lt;code&gt;$digest&lt;/code&gt; ran.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 끝에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방법은 그들이 마지막 시간 이후 변경 있는지 확인하기 위해 시계와 각 검사를 통과하는 호출 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 달렸다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcd2eb5356b9b892e7bf902bb23bd9186e6d6799" translate="yes" xml:space="preserve">
          <source>By dirty checking the &lt;code&gt;$scope&lt;/code&gt; object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 더티 검사하여&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0710b2f8c5ca3b1d6e227e2204bcfc446f57738" translate="yes" xml:space="preserve">
          <source>Change coalescence. Suppose you have an array of items. Say you want to add items into an array, as you are looping to add, each time you add you are firing events on change, which is rendering the UI. This is very bad for performance. What you want is to update the UI only once, at the end. The change events are too fine-grained.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유착을 변경하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항목 배열이 있다고 가정하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가 할 때마다 반복 할 때 항목을 배열에 추가하려고한다고 가정하면 변경 할 때마다 이벤트가 발생하여 UI가 렌더링됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 성능이 매우 나쁩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원하는 것은 마지막에 UI를 한 번만 업데이트하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변경 이벤트가 너무 세분화되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77c891a95974122552c0d70ba96a05fea9fafba4" translate="yes" xml:space="preserve">
          <source>Change listeners fire immediately on a setter, which is a problem, since the change listener can further change data, which fires more change events. This is bad since on your stack you may have several change events happening at once. Suppose you have two arrays which need to be kept in sync for whatever reason. You can only add to one or the other, but each time you add you fire a change event, which now has an inconsistent view of the world. This is a very similar problem to thread locking, which JavaScript avoids since each callback executes exclusively and to completion. Change events break this since setters can have far-reaching consequences which are not intended and non obvious, which creates the thread problem all over again. It turns out that what you want to do is to delay the listener execution, and guarantee, that only one listener runs at a time, hence any code is free to change data, and it knows that no other code runs while it is doing so.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변경 리스너는 setter에서 즉시 실행되는데, 이는 변경 리스너가 데이터를 추가로 변경하여 더 많은 변경 이벤트를 발생 시키므로 문제가됩니다. 스택에서 한 번에 여러 변경 이벤트가 발생할 수 있기 때문에 이것은 좋지 않습니다. 어떤 이유로 든 동기화를 유지해야하는 두 개의 어레이가 있다고 가정하십시오. 둘 중 하나만 추가 할 수 있지만, 추가 할 때마다 변경 이벤트가 발생하여 세계에 대한 일관성이 없어집니다. 이는 각 콜백이 독점적으로 실행되어 완료되기 때문에 JavaScript가 피하는 스레드 잠금과 매우 유사한 문제입니다. 변경 이벤트는 세터가 의도하지 않았고 명백하지 않은 광범위한 결과를 가질 수 있으므로 스레드 문제가 다시 발생하기 때문에이를 중단시킵니다. 당신이하고 싶은 일은 리스너 실행을 지연시키고 보장하는 것입니다.한 번에 하나의 리스너 만 실행되므로 모든 코드는 자유롭게 데이터를 변경할 수 있으며, 그렇게하는 동안 다른 코드는 실행되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa1e7dcbb0597e8ac8563615ae3d1825d9496839" translate="yes" xml:space="preserve">
          <source>Changes to watched items must be made within a block of code
wrapped by the &lt;code&gt;$apply&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시 항목에 대한 변경은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;래핑 된 코드 블록 내에서 이루어져야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b536777ff175ae7f0dadd5ccfd9e78c00761a19e" translate="yes" xml:space="preserve">
          <source>Conclusions</source>
          <target state="translated">Conclusions</target>
        </trans-unit>
        <trans-unit id="04738af7725b2e98757c86e363c8914ab552c47c" translate="yes" xml:space="preserve">
          <source>Consider, for example, a combo box where you can type text to filter the available options. This sort of control could have ~150 items and still be highly usable. If it has some extra feature (for example a specific class on the currently selected option) you start to get 3-5 bindings per option. Put three of these widgets on a page (e.g. one to select a country, the other to select a city in the said country, and the third to select a hotel) and you are somewhere between 1000 and 2000 bindings already.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 사용 가능한 옵션을 필터링하기 위해 텍스트를 입력 할 수있는 콤보 상자를 고려하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 종류의 컨트롤은 ~ 150 개의 아이템을 가질 수 있으며 여전히 유용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가 기능 (예 : 현재 선택된 옵션의 특정 클래스)이있는 경우 옵션 당 3-5 개의 바인딩이 시작됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 위젯 중 3 개를 페이지에 배치하십시오 (예 : 국가를 선택하기위한 하나, 해당 국가에서 도시를 선택하기위한 다른 하나 및 호텔을 선택하는 다른 하나).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38c9337e102844fbe073028e31a3f03dfd28fcd6" translate="yes" xml:space="preserve">
          <source>Data binding lets you treat the model as the single-source-of-truth in your application. The view is a projection of the model at all times. If the model is changed, the view reflects the change and vice versa.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터 바인딩을 사용하면 모델을 응용 프로그램에서 단일 소스로 취급 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;뷰는 항상 모델의 투영입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모델이 변경되면 뷰에 변경 사항이 반영되고 그 반대의 경우도 마찬가지입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41d6ccf94599c075293f64da897cc14ce18c72a7" translate="yes" xml:space="preserve">
          <source>Data-Binding needs a mapping</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터 바인딩에는 매핑이 필요합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53cfd605042a9685d0d23f950654e2d90a38e47f" translate="yes" xml:space="preserve">
          <source>Data-binding in Angular apps is the automatic synchronisation of data between the model and view components.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular 앱의 데이터 바인딩은 모델과 뷰 구성 요소 간의 데이터 자동 동기화입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5934654605974e05a5cca46342e4add1e6e8bca2" translate="yes" xml:space="preserve">
          <source>Digest cycle function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다이제스트 사이클 기능 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67bdd0d045b9621fed41646eae45fdacd100225f" translate="yes" xml:space="preserve">
          <source>Digest cycle is called automatically triggered as part of angular js built in directives/services like ng-model , ng-bind , $timeout, ng-click and others.. that let you trigger the digest cycle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다이제스트 사이클은 ng-model, ng-bind, $ timeout, ng-click 등과 같은 지시문 / 서비스에 내장 된 앵귤러 j의 일부로 자동 트리거됩니다. 다이제스트 사이클을 트리거 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="edf2df3cebeb7068c67f0f8fcf259a256e8d43b4" translate="yes" xml:space="preserve">
          <source>Each time your user interacts with your app, every single watcher in your app will be evaluated at least once. A big part of optimising an AngularJS app is reducing the number of watchers in your &lt;code&gt;$scope&lt;/code&gt; tree. One easy way to do this is with &lt;em&gt;one time binding&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자가 앱과 상호 작용할 때마다 앱의 모든 단일 시청자가 한 번 이상 평가됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS 앱 최적화의 큰 부분은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 트리 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 감시자 수를 줄이는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작업을 수행하는 한 가지 쉬운 방법은 한 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;번의 바인딩&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c05d40154f2b4c392454198d496e63c5efbde51" translate="yes" xml:space="preserve">
          <source>Each watcher is an &lt;code&gt;object&lt;/code&gt; that contains among other things</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 감시자는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 것들을 포함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08048692776861edadc2dbcb23494dab4e7cab0f" translate="yes" xml:space="preserve">
          <source>Events leads to $digest()</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이벤트는 $ digest ()로 이어진다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1999f5595c55decba8e973c1baa963538f547a35" translate="yes" xml:space="preserve">
          <source>Every scope is traversed and every watch expression evaluated and checked against the last value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 범위가 순회되고 모든 시계 표현이 마지막 값에 대해 평가 및 확인됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fde00899391e695c237589b8f69f3b46e5c7578" translate="yes" xml:space="preserve">
          <source>Explaining with Pictures :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사진 설명 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24e795a953c3ca2043687acd912052593a9b0ba7" translate="yes" xml:space="preserve">
          <source>First one is a watcher function which just returns the object or we can just add an expression.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째는 객체를 반환하거나 표현식을 추가 할 수있는 감시자 함수입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5db049bbbb9e77f2e7abb9fa13d29e74b53f616" translate="yes" xml:space="preserve">
          <source>For example if the model had something like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 모델에 다음과 같은 것이 있다면&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a26ff29486dd859efb930e73cff198672e8c1db8" translate="yes" xml:space="preserve">
          <source>From the perspective of the machine though this is wildly inefficient and will slow our app down if we create too many watchers. Misko has quoted a figure of about 4000 watchers before your app will feel slow on older browsers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기계의 관점에서 볼 때 이것은 비효율적이며 너무 많은 감시자를 만들면 앱 속도가 느려집니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Misko는 앱이 구형 브라우저에서 느리게 느껴지기 전에 약 4000 명의 감시자를 인용했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b5d848557beff3ca27b16e316546c260f2f5158" translate="yes" xml:space="preserve">
          <source>Here if you want to use input &lt;code&gt;name&lt;/code&gt; in the controller then,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컨트롤러에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입력 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하려면&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abf84c6c85867c652efadb878febf74268cb94de" translate="yes" xml:space="preserve">
          <source>Here in above example whatever input user will give, It will be visible in &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예에서 사용자가 어떤 입력을하더라도 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 태그 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 볼 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e61aa1cba9e6c9aeb8141c1c1d1742560bba644d" translate="yes" xml:space="preserve">
          <source>Here is an example of data binding with AngularJS, using an input field. I will explain later</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 입력 필드를 사용하는 AngularJS와의 데이터 바인딩 예입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나중에 설명하겠습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1aaba0345af07c860b35fb4c80fc9c3aad3a3673" translate="yes" xml:space="preserve">
          <source>Here, when you modify the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, you touch the &lt;strong&gt;data-ref3&lt;/strong&gt;. And the classic data-bind mecanism will change &lt;strong&gt;data-ref4&lt;/strong&gt;. So how the other &lt;code&gt;{{data}}&lt;/code&gt; expressions will move ?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 수정할 때 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data-ref3&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 터치하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 고전적인 데이터 바인딩 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메커니즘&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data-ref4를 바꿀 것&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇다면 다른 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{data}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 표현식은 어떻게 움직일까요?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">도움이 되었기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="72856d6ab746c0e7dce884ff804eef9218f95f83" translate="yes" xml:space="preserve">
          <source>How does data binding work in AngularJS</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS에서 데이터 바인딩은 어떻게 작동합니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="811938083dc4a1506a5fffbb7dcd3afefd093cb8" translate="yes" xml:space="preserve">
          <source>How does data binding work in the &lt;code&gt;AngularJS&lt;/code&gt; framework?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 프레임 워크 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 데이터 바인딩은 어떻게 작동 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4092cb5028284c4f70ad111654a59eae29e5aeb" translate="yes" xml:space="preserve">
          <source>How to avoid creating too many watchers</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;너무 많은 감시자를 만드는 것을 피하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab2ba6105e0812e7f41747d9629bf67642b2443b" translate="yes" xml:space="preserve">
          <source>How watchers are defined</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시자 정의 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="100f16b029687f5c04393f39efd21cce04a9d408" translate="yes" xml:space="preserve">
          <source>Humans are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인간은 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f771cf38309d8e303737f960b8e1ee9d5fa25d29" translate="yes" xml:space="preserve">
          <source>I find this to be a &lt;strong&gt;huge&lt;/strong&gt; problem when working with AngularJS, and the only solution I've been able to find so far is to construct widgets without using two-way binding, instead of using ngOnce, deregistering watchers and similar tricks, or construct directives which build the DOM with jQuery and DOM manipulation. I feel this defeats the purpose of using Angular in the first place.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS로 작업 할 때 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;큰&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문제라는 것을 알았습니다. 지금까지 내가 찾은 유일한 해결책은 ngOnce를 사용하지 않고 감시자와 유사한 트릭을 등록 취소하거나 구성하는 대신 양방향 바인딩을 사용하지 않고 위젯을 구성하는 것입니다. jQuery 및 DOM 조작으로 DOM을 빌드하는 지시문. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 Angular를 처음 사용하는 목적을 상실한다고 생각합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cce5ace8b3744fb015ccf880633cfe7cc6b5814" translate="yes" xml:space="preserve">
          <source>I found that there are &lt;a href=&quot;https://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers&quot;&gt;JavaScript watchers&lt;/a&gt; that may do this work. But they are not supported in &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;6&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;7&lt;/a&gt;. So how does AngularJS know that I changed for example the following and reflected this change on a view?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작업을 수행 할 수있는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript 감시자가&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있다는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것을 알았 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 6&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 7&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서는 지원되지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS는 예를 들어 다음과 같이 변경 하고이 변경 사항을 뷰에 반영했다는 것을 어떻게 알 수 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1de9c7f3209ea909ee2644a83f8b7a0597e60b39" translate="yes" xml:space="preserve">
          <source>I haven't found technical details on &lt;a href=&quot;http://angularjs.org&quot;&gt;their site&lt;/a&gt;. It's more or less clear how it works when data is propagated from view to model. But how does AngularJS track changes of model properties without setters and getters?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://angularjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그들의 사이트&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 기술적 인 세부 사항을 찾지 못했다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터가 뷰에서 모델로 전파 될 때 작동 방식이 다소 명확합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 AngularJS는 세터와 게터없이 모델 속성의 변경을 어떻게 추적합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bb7cb327e6090eec145fd3400cccddf72e28acc" translate="yes" xml:space="preserve">
          <source>I wondered this myself for a while. Without setters how does &lt;code&gt;AngularJS&lt;/code&gt; notice changes to the &lt;code&gt;$scope&lt;/code&gt; object? Does it poll them?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것을 잠시 동안 궁금해했다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세터없이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변경을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떻게 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것들을 폴링합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fd4c7597da7bda76a445582e5711ea629ddaea8" translate="yes" xml:space="preserve">
          <source>I would love to hear suggestions on other ways to handle this, but then maybe I should write my own question. I wanted to put this in a comment, but it turned out to be way too long for that...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것을 처리하는 다른 방법에 대한 제안을 듣고 싶지만 내 자신의 질문을 써야 할 수도 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것을 의견에 넣고 싶었지만 너무 길다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9c6e1411333d79894f31f96b1b2abf469641d9b" translate="yes" xml:space="preserve">
          <source>If a watcher is triggered, the &lt;code&gt;$scope&lt;/code&gt; is dirty</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시자가 트리거되면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 더럽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45bb602373f8c144ed802f1013ba835906212ef9" translate="yes" xml:space="preserve">
          <source>If a watcher is triggered, the app knows something has changed, and the &lt;code&gt;$scope&lt;/code&gt; is marked as dirty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시자가 트리거되면 앱이 변경된 것을 알고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 더티로 표시됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9754f028f3820afdf781852e2300bdcd1bd49e5a" translate="yes" xml:space="preserve">
          <source>If any changes are found then the digest is invoked again until all changes stabilize.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변경 사항이 발견되면 모든 변경 사항이 안정화 될 때까지 요약이 다시 호출됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc49c0ac42bacc60d1fd64ddb061940ef36b5e04" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$digest&lt;/code&gt; is dirty, we execute the entire &lt;code&gt;$digest&lt;/code&gt; cycle again</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 IF &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 더러운, 우리는 전체 실행 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다시 사이클을&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fc6fe8831ed56fa2f83cd2185e8c4d3af21ff79" translate="yes" xml:space="preserve">
          <source>If want to bind input from html to controller:-</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;html에서 컨트롤러로 입력을 바인딩하려면 다음을 수행하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc233c384289e4ba733c6143276863ae3e11acf9" translate="yes" xml:space="preserve">
          <source>If we reach the digest limit AngularJS will raise an error in the console:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다이제스트 한계에 도달하면 AngularJS가 콘솔에서 오류를 발생시킵니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b182bb47efd5ceffd0f9647d638795a8d4f4ba86" translate="yes" xml:space="preserve">
          <source>If we use JavaScript&amp;rsquo;s &lt;strong&gt;setTimeout()&lt;/strong&gt; function to update a scope model, Angular has no way of knowing what you might change. In this case it&amp;rsquo;s our responsibility to call $apply() manually, which triggers a $digest cycle. Similarly, if you have a directive that sets up a DOM event listener and changes some models inside the handler function, you need to call $apply() to ensure the changes take effect. The big idea of $apply is that we can execute some code that isn't aware of Angular, that code may still change things on the scope. If we wrap that code in $apply , it will take care of calling $digest(). Rough implementation of $apply().</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript의 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;setTimeout ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 사용하여 범위 모델을 업데이트하는 경우 Angular는 변경 내용을 알 수있는 방법이 없습니다. 이 경우 $ apply ()를 수동으로 호출하여 $ 다이제스트주기를 트리거하는 것은 우리의 책임입니다. 마찬가지로 DOM 이벤트 리스너를 설정하고 핸들러 함수 내에서 일부 모델을 변경하는 지시문이있는 경우 $ apply ()를 호출하여 변경 사항을 적용해야합니다. $ apply의 큰 아이디어는 Angular를 인식하지 못하는 코드를 실행할 수 있다는 것입니다. 그 코드는 여전히 범위의 내용을 변경할 수 있습니다. 해당 코드를 $ apply로 감싸면 $ digest () 호출이 처리됩니다. $ apply ()의 대략적인 구현.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="acdee26d7393979df447003717d465f503612861" translate="yes" xml:space="preserve">
          <source>If you have data which will rarely change, you can bind it only once using the :: syntax, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거의 변경되지 않는 데이터가있는 경우 :: 구문을 사용하여 한 번만 바인딩 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2797b9f1ba27fd200e5c9c4c6af64e50a08620b" translate="yes" xml:space="preserve">
          <source>In normal development, data-binding syntax in the HTML tells the AngularJS compiler to create the watches for you and controller methods are run inside &lt;code&gt;$apply&lt;/code&gt; already. So to the application developer it is all transparent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정상적인 개발에서 HTML의 데이터 바인딩 구문은 AngularJS 컴파일러에게 시계를 만들도록 지시하고 컨트롤러 메소드는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내에서 실행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 응용 프로그램 개발자에게는 모두 투명합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67037b0a8b5a6bff39857e9b537abcdf932d0df1" translate="yes" xml:space="preserve">
          <source>In the previous picture, it will notice that data-ref1 and data-ref2 has changed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;앞의 그림에서 data-ref1 및 data-ref2가 변경되었음을 알 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a8356ec773654ca4bdbd056cf3d9a35ffe5458b" translate="yes" xml:space="preserve">
          <source>Issues with change listeners:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변경 리스너 관련 문제 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3d16a96c54aef7c6ebe0587ea01873f549a3af8" translate="yes" xml:space="preserve">
          <source>It happened that I needed to link a data model of a person with a form, what I did was a direct mapping of the data with the form.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사람의 데이터 모델을 양식과 연결해야했는데, 내가 한 일은 데이터와 양식을 직접 매핑하는 것이 었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="343562dfa3bd11083e7175cd655a02ac86844311" translate="yes" xml:space="preserve">
          <source>It turns out that video games and GPUs use the dirty-checking approach, specifically because it is consistent. As long as they get over the monitor refresh rate (typically 50-60 Hz, or every 16.6-20 ms), any performance over that is a waste, so you're better off drawing more stuff, than getting FPS higher.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비디오 게임과 GPU는 특히 일관성이 있기 때문에 더티 검사 방식을 사용하는 것으로 나타났습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모니터 재생 빈도 (일반적으로 50-60Hz 또는 16.6-20ms마다)를 초과하는 한, 그 이상의 성능은 낭비이므로 FPS를 높이는 것보다 더 많은 것을 그리는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="274f1724f9cedd0714f587c409d9a100538443a6" translate="yes" xml:space="preserve">
          <source>It's a little like the Egg and Chicken. You never know who starts, but hopefully it works most of the time as expected.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계란과 닭고기와 조금 비슷합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;누가 시작하는지 알지 못하지만 대부분의 시간이 예상대로 작동하기를 바랍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1525bd60097acc3d807b5139debefd7ba132b0ea" translate="yes" xml:space="preserve">
          <source>Items are watched by passing a function (returning the thing to be
watched) to the &lt;code&gt;$watch&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항목은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 (감시 할 항목 반환)를 전달하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="519ea33e338b0e1bee563a64730e09aa647199f5" translate="yes" xml:space="preserve">
          <source>Means you can access data &lt;strong&gt;View -&amp;gt; Controller&lt;/strong&gt; &amp;amp; &lt;strong&gt;Controller -&amp;gt; View&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터에 액세스 할 수 있음을 의미합니다. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보기-&amp;gt; 컨트롤러&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컨트롤러-&amp;gt;보기&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e33d668c8f945d34b9f05ee30f75c1e4213cde48" translate="yes" xml:space="preserve">
          <source>Misko already gave an excellent description of how the data bindings work, but I would like to add my view on the performance issue with the data binding.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Misko는 이미 데이터 바인딩 작동 방식에 대한 훌륭한 설명을 제공했지만 데이터 바인딩의 성능 문제에 대한 견해를 추가하고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f98f946369ce6e582d4af4e03e409d9f9dc2ef40" translate="yes" xml:space="preserve">
          <source>Note:
$apply() is equal to $rootScope.$digest() this  means the dirty checking starts right from the root or top or the parent scope down to all the child $scopes in the angular js application.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 : $ apply ()는 $ rootScope. $ digest ()와 같습니다. 이는 더티 검사가 루트 또는 상위 또는 상위 범위에서 각도 js 애플리케이션의 모든 하위 $ scope까지 시작한다는 것을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c93e786087831c4f1fafb334ae9947a471cc20d6" translate="yes" xml:space="preserve">
          <source>Obviously there is no periodic checking of &lt;code&gt;Scope&lt;/code&gt; whether there is any change in the Objects attached to it. Not all the objects attached to scope are watched . Scope prototypically maintains a &lt;strong&gt;$$watchers&lt;/strong&gt; . &lt;code&gt;Scope&lt;/code&gt; only iterates through this &lt;code&gt;$$watchers&lt;/code&gt; when &lt;code&gt;$digest&lt;/code&gt; is called .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분명히 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 부착 된 객체에 변화가 있는지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스코프를&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 주기적으로 점검하지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;범위에 연결된 모든 개체가 감시되는 것은 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스코프는 프로토 타입으로 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$$ watchers를&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유지합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;될 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반복합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c86e0e64f0406905129a3f72489210a41131f5c7" translate="yes" xml:space="preserve">
          <source>Or consider a data-grid in a corporate web application. 50 rows per page is not unreasonable, each of which could have 10-20 columns. If you build this with ng-repeats, and/or have information in some cells which uses some bindings, you could be approaching 2000 bindings with this grid alone.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 회사 웹 애플리케이션에서 데이터 그리드를 고려하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;페이지 당 50 개의 행은 부당하지 않으며 각각 10-20 개의 열을 가질 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ng-repeats로 이것을 빌드하거나 일부 바인딩을 사용하는 일부 셀에 정보가있는 경우이 그리드만으로 2000 바인딩에 접근 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b8a08e18d95dbfa2c87458daac1a9abc11ba8cb" translate="yes" xml:space="preserve">
          <source>Second one is a listener function which will be called when there is a change in the object. All the things like DOM changes will be implemented in this function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째는 객체에 변경이있을 때 호출되는 리스너 함수입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DOM 변경과 같은 모든 것이이 함수에서 구현됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fd1ca72ff9c0211014fb86b642296ec816618c7" translate="yes" xml:space="preserve">
          <source>See a working example here on
&lt;a href=&quot;http://codepen.io/chrisN/pen/YqEmOO&quot;&gt;Codepen&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://codepen.io/chrisN/pen/YqEmOO&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Codepen&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 실제 예제를 참조하십시오. &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="693b3d4126317443f94c9a270b3d9ac192e6d991" translate="yes" xml:space="preserve">
          <source>So it is easy to bind data in AngularJs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 AngularJ에서 데이터를 쉽게 바인딩 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9b7e10aa62d01a0083a0bafbc14a25d628a5a04" translate="yes" xml:space="preserve">
          <source>So it may seem that we are slow, since dirty-checking is inefficient. This is where we need to look at real numbers rather than just have theoretical arguments, but first let's define some constraints.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더티 검사는 비효율적이므로 속도가 느릴 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이론적 인 논증이 아닌 실수를 찾아야하지만 먼저 제약을 정의 해 보자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31ff2a053dd930ba998f5931530fbca741e8b5b1" translate="yes" xml:space="preserve">
          <source>So the real question is this: How many comparisons can you do on a browser in 50&amp;nbsp;ms? This is a hard question to answer as many factors come into play, but here is a test case: &lt;a href=&quot;http://jsperf.com/angularjs-digest/6&quot;&gt;http://jsperf.com/angularjs-digest/6&lt;/a&gt; which creates 10,000 watchers. On a modern browser this takes just under 6&amp;nbsp;ms. On &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;8&lt;/a&gt; it takes about 40&amp;nbsp;ms. As you can see, this is not an issue even on slow browsers these days. There is a caveat: The comparisons need to be simple to fit into the time limit... Unfortunately it is way too easy to add a slow comparison into AngularJS, so it is easy to build slow applications when you don't know what you are doing. But we hope to have an answer by providing an instrumentation module, which would show you which are the slow comparisons.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제 질문은 이것입니다. 브라우저에서 50ms 내에 얼마나 많은 비교를 할 수 있습니까? 많은 요소가 작용함에 따라 대답하기 어려운 질문이지만 다음은 테스트 사례입니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/angularjs-digest/6&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsperf.com/angularjs-digest/6&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 10,000 명의 감시자를 만듭니다. 최신 브라우저에서는 6ms 미만입니다. 에 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인터넷 익스플로러 8&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 40 밀리 초 정도 걸립니다. 보시다시피, 이것은 요즘 느린 브라우저에서도 문제가되지 않습니다. 주의 사항 : 제한 시간에 맞추기 위해서는 비교가 간단해야합니다 ... 불행히도 AngularJS에 느린 비교를 추가하는 것은 너무 쉬운 방법이므로, 당신이 무엇을 모르는 경우 느린 응용 프로그램을 쉽게 구축 할 수 있습니다 하고있다. 그러나 인스 트루먼 테이션 모듈을 제공하여 어느 것이 느린 비교를 보여줄 수 있는지에 대한 답을 얻고 자합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="174534c6b3882921f07bb41f7a29c9824d9b171b" translate="yes" xml:space="preserve">
          <source>Thank you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감사합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92577ceb7120ac7b142fac481d75199d5e0a53f3" translate="yes" xml:space="preserve">
          <source>That way if you modify the value of the object controller, this will be reflected automatically in the view.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게하면 객체 컨트롤러의 값을 수정하면 뷰에 자동으로 반영됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2003e784c284ddbed19467eee8de2a001cf6b923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$apply()&lt;/code&gt; method, which is what you call when you are transitioning from a non-AngularJS world into an AngularJS world, calls &lt;code&gt;$digest()&lt;/code&gt;. A digest is just plain old dirty-checking. It works on all browsers and is totally predictable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;$apply()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신이 AngularJS와 세계로 비 AngularJS와 세계에서 전환 할 때 당신이 부르는 방법은 호출 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다이제스트는 단순한 오래된 더러운 검사입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 브라우저에서 작동하며 완전히 예측 가능합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b522c9d331f9c497ebd37172926a4cbfa51cfad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$digest&lt;/code&gt; cycle checks all watchers against their last value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 마지막 값과주기 확인 모든 전문가를&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57d293436789127bbfd7b6ac942ebead8614f1b9" translate="yes" xml:space="preserve">
          <source>The above features work in the browsers IE for the mentioned versions also just by making sure your application is angular js application which means you are using the angularjs framework script file referenced in the script tag.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 기능은 응용 프로그램이 angular js 응용 프로그램인지 확인하여 언급 된 버전의 브라우저 IE에서도 작동합니다. 즉, 스크립트 태그에서 참조 된 angularjs 프레임 워크 스크립트 파일을 사용하고 있음을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="468988dca821eab1366620955fd6086c27fd11e1" translate="yes" xml:space="preserve">
          <source>The binding will only be triggered when the containing template is rendered and the data loaded into &lt;code&gt;$scope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바인딩은 포함 템플릿이 렌더링되고 데이터가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로드 된 경우에만 트리거됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15405ba0c4fa31d34c3dffcbf02c552e4ca0b07b" translate="yes" xml:space="preserve">
          <source>The control input of the form:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;양식의 제어 입력 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e6b0df17c0aaea4b70014e68b2e206f24d35edc" translate="yes" xml:space="preserve">
          <source>The data binding can cause performance issues on complex pages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터 바인딩으로 인해 복잡한 페이지에서 성능 문제가 발생할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25004e2affdfc42b03e4884351a5cc585b221410" translate="yes" xml:space="preserve">
          <source>The digest is hard on the machine but easy on the developer</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다이제스트는 기계에서는 어렵지만 개발자에게는 쉽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08cbe99aa8a083947a0b23f9775c4b49f46dc65a" translate="yes" xml:space="preserve">
          <source>The one-way data binding is an approach where a value is taken from the data model and inserted into an HTML element. There is no way to update model from view. It is used in classical template systems. These systems bind data in only one direction.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단방향 데이터 바인딩은 데이터 모델에서 값을 가져와 HTML 요소에 삽입하는 방식입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;뷰에서 모델을 업데이트 할 방법이 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래식 템플릿 시스템에서 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시스템은 한 방향으로 만 데이터를 바인딩합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="395b6fe80ec647c86c7ba13a79a819f5b1d4ef1c" translate="yes" xml:space="preserve">
          <source>The other point is that you can understand easily the impact deep of a simple binding on the memory and the CPU. Hopefully Desktops are fat enough to handle this. Mobile phones are not that strong.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 점은 메모리와 CPU에 대한 간단한 바인딩의 영향을 쉽게 이해할 수 있다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바라건대 데스크탑은 이것을 처리하기에 충분히 뚱뚱합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;휴대 전화는 그렇게 강력하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dedae52c9852165a86fa875d38e2c1e75a87ccf1" translate="yes" xml:space="preserve">
          <source>The reference in the scope is not exactly the reference   in the template. When you data-bind two objects, you need a third one that listen to the first and modify the other.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;범위의 참조는 템플릿의 참조가 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개체를 데이터 바인딩 할 때는 첫 번째 개체를 듣고 다른 개체를 수정하는 세 번째 개체가 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c91a85811c33fbcef6fa8731745c927c0012d820" translate="yes" xml:space="preserve">
          <source>The syntax is atrocious, since browsers do not support it natively. Yes, there are proxies, but they are not semantically correct in all cases, and of course there are no proxies on old browsers. The bottom line is that dirty-checking allows you to do &lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;POJO&lt;/a&gt;, whereas KnockoutJS and Backbone.js force you to inherit from their classes, and access your data through accessors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;브라우저는 기본적으로이를 지원하지 않기 때문에 구문은 끔찍합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇습니다. 프록시가 있지만 모든 경우에 의미 적으로 정확하지는 않으며 이전 브라우저에는 프록시가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결론은 더티 검사를 통해 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;POJO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 반면 KnockoutJS와 Backbone.js는 클래스에서 상속하고 접근자를 통해 데이터에 액세스하도록하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a43dba51173aab39fa19ef60ae9870ffdf5e18cd" translate="yes" xml:space="preserve">
          <source>The third being an optional parameter which takes in a boolean . If its true , angular deep watches the object &amp;amp; if its false Angular just does a reference watching on the object.
    Rough Implementation of $watch looks like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;세 번째는 부울을 취하는 선택적 매개 변수입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true이면 angular deep은 객체를 감시하고 false 앵귤러는 객체에 대한 참조 감시 만 수행합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch의 대략적인 구현은 다음과 같습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3c98a925e6264735a9cd6c4c03c15427dac1af8" translate="yes" xml:space="preserve">
          <source>There are many different ways of defining a watcher in AngularJS.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS에서 감시자를 정의하는 방법에는 여러 가지가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8237def3104a80cff7eecee796adaf84abd4fa04" translate="yes" xml:space="preserve">
          <source>There is an interesting thing in Angular called Digest Cycle. The $digest cycle starts as a result of a call to $scope.$digest(). Assume that you change a $scope model in a handler function through the ng-click directive. In that case AngularJS automatically triggers a $digest cycle by calling $digest().In addition to ng-click, there are several other built-in directives/services that let you change models (e.g. ng-model, $timeout, etc) and automatically trigger a $digest cycle.  The rough implementation of $digest looks like this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular에는 Digest Cycle이라는 흥미로운 것이 있습니다. $ scope. $ digest () 호출로 $ digest주기가 시작됩니다. ng-click 지시문을 통해 핸들러 함수에서 $ scope 모델을 변경한다고 가정하십시오. 이 경우 AngularJS는 $ digest ()를 호출하여 $ digest주기를 자동으로 트리거합니다. $ 다이제스트주기를 자동으로 트리거합니다. $ digest의 대략적인 구현은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2e20ff3c295188e752a47e4f991273ed16c6dfd" translate="yes" xml:space="preserve">
          <source>This function is used to observe changes in a variable on the $scope.
  It accepts three parameters: expression, listener and equality object,
  where listener and equality object are optional parameters.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수는 $ scope에서 변수의 변화를 관찰하는 데 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에는 expression, listener 및 equality 객체의 세 가지 매개 변수가 사용됩니다. 여기서 listener 및 equality 객체는 선택적 매개 변수입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3dd9be14c4e8bc97123d1fd8dc61ae080e1b9123" translate="yes" xml:space="preserve">
          <source>This function iterates through all the watches in the $scope object,
  and its child $scope objects</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수는 $ scope 객체의 모든 시계와 자식 $ scope 객체를 반복합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91a26da78200b3aef1cb1945d188957561dfd228" translate="yes" xml:space="preserve">
          <source>This is because AngularJS has two-way binding, so data can be passed back up the &lt;code&gt;$scope&lt;/code&gt; tree. We may change a value on a higher &lt;code&gt;$scope&lt;/code&gt; that has already been digested. Perhaps we change a value on the &lt;code&gt;$rootScope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS에는 양방향 바인딩이 있으므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 트리 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 데이터를 다시 전달할 수 있기 때문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미 소화 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;높은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 값을 변경할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아마도 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$rootScope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 값을 변경했을 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56940ba3b003c3b9efc4a2d260ce62e5a12c0d89" translate="yes" xml:space="preserve">
          <source>This is especially important when you have an &lt;code&gt;ng-repeat&lt;/code&gt; with many items.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 항목 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이있는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-repeat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가있을 때 특히 중요 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc2a49f6d92f573bcfe485e392faeba5d9e44a4a" translate="yes" xml:space="preserve">
          <source>This is my basic understanding. It may well be wrong!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 나의 기본 이해입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;잘못되었을 수도 있습니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="824a36c001af90b4c01a2f8a9b0d6db5c1f42c79" translate="yes" xml:space="preserve">
          <source>This limit is easy to reach if you &lt;code&gt;ng-repeat&lt;/code&gt; over a large &lt;code&gt;JSON&lt;/code&gt;&lt;code&gt;array&lt;/code&gt; for example. You can mitigate against this using features like one-time binding to compile a template without creating watchers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;큰 &lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-repeat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우이 제한에 쉽게 도달 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시자를 만들지 않고 템플릿을 컴파일하기 위해 일회용 바인딩과 같은 기능을 사용하여이 문제를 완화 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f9698290b18dfcad06dccf0d7af50181f334d2c" translate="yes" xml:space="preserve">
          <source>To contrast dirty-checking (AngularJS) vs change listeners (&lt;a href=&quot;http://en.wikipedia.org/wiki/KnockoutJS&quot;&gt;KnockoutJS&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Backbone.js&quot;&gt;Backbone.js&lt;/a&gt;): While dirty-checking may seem simple, and even inefficient (I will address that later), it turns out that it is semantically correct all the time, while change listeners have lots of weird corner cases and need things like dependency tracking to make it more semantically correct. KnockoutJS dependency tracking is a clever feature for a problem which AngularJS does not have.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더티 검사 (AngularJS)와 변경 리스너 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/KnockoutJS&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;KnockoutJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Backbone.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Backbone.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 대조하려면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;: 더티 검사는 간단하고 비효율적이지만 (나중에 설명하겠습니다), 의미 상 항상 올바른 것으로 밝혀졌습니다. 변경 리스너에는 이상한 경우가 많고 의미 론적으로보다 정확하게하려면 종속성 추적과 같은 것이 필요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;KnockoutJS 종속성 추적은 AngularJS에없는 문제에 대한 영리한 기능입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7badb858f29a6efa2f33f71e4eb4033d92c9cc96" translate="yes" xml:space="preserve">
          <source>Watcher function is called as part of the digest cycle.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시자 기능은 다이제스트주기의 일부로 호출됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8715de0439dc5dc006e1080c1077524c864eb3fc" translate="yes" xml:space="preserve">
          <source>Watcher functions can change other attributes on &lt;code&gt;$scope&lt;/code&gt; or on a parent &lt;code&gt;$scope&lt;/code&gt;. If one &lt;code&gt;$watcher&lt;/code&gt; function has been triggered, we can't guarantee that our other &lt;code&gt;$scope&lt;/code&gt;s are still clean, and so we execute the entire digest cycle again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;감시자 함수는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 부모 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다른 특성을 변경할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수가 트리거 된 경우 다른 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 여전히 깨끗 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하다는 것을 보장 할 수 없으므로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전체 다이제스트주기를 다시 실행합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07fcfb61713968827e9ec7c9f565e6d499887b35" translate="yes" xml:space="preserve">
          <source>We continually loop through the &lt;code&gt;$digest&lt;/code&gt; cycle until either the digest cycle comes up clean (all &lt;code&gt;$watch&lt;/code&gt; expressions have the same value as they had in the previous cycle), or we reach the digest limit. By default, this limit is set at 10.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 지속적으로 통해 루프 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 중 하나를 소화주기가 청소 (모든 걸 포기 때까지 사이클을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 표현들이 이전 사이클에서 한 것과 같은 값을 가질 수), 또는 우리는 소화 한계에 도달. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로이 제한은 10으로 설정되어 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99c41154db2ed0f7cd5e6cf93d295fefb4cb0cb8" translate="yes" xml:space="preserve">
          <source>What about performance?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;성능은 어떻습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6d49eb840ac9b816221044bcd3d3d0b4f2429c7" translate="yes" xml:space="preserve">
          <source>What it actually does is this: Any &quot;normal&quot; place you modify the model was already called from the guts of &lt;code&gt;AngularJS&lt;/code&gt;, so it automatically calls &lt;code&gt;$apply&lt;/code&gt; for you after your code runs. Say your controller has a method that's hooked up to &lt;code&gt;ng-click&lt;/code&gt; on some element. Because &lt;code&gt;AngularJS&lt;/code&gt; wires the calling of that method together for you, it has a chance to do an &lt;code&gt;$apply&lt;/code&gt; in the appropriate place. Likewise, for expressions that appear right in the views, those are executed by &lt;code&gt;AngularJS&lt;/code&gt; so it does the &lt;code&gt;$apply&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 수행하는 작업은 다음과 같습니다. 모델을 수정하는 &quot;일반&quot;장소는 이미 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 내장에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출되었으므로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드가 실행 된 후 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자동으로 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다. 컨트롤러 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 어떤 요소 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-click&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하기 위해 연결된 방법이 있다고 가정 해보십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 때문에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; 와의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전선이 당신을 위해 함께 그 방법을 호출, 그것은 할 수있는 기회가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 적절한 장소에 있습니다. 마찬가지로 뷰에 바로 나타나는 표현식의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의해 실행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b811e7e92d8afabecc4cce05a490306acb550c72" translate="yes" xml:space="preserve">
          <source>When the documentation talks about having to call &lt;code&gt;$apply&lt;/code&gt; manually for code &lt;em&gt;outside of &lt;code&gt;AngularJS&lt;/code&gt;&lt;/em&gt;, it's talking about code which, when run, doesn't stem from &lt;code&gt;AngularJS&lt;/code&gt; itself in the call stack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설명서 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/em&gt;&lt;em&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;/em&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 외부의&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 코드에 대해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수동으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다는 이야기는 실행시 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 스택의 &lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자체에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유래하지 않은 코드에 관한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것입니다.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f128527b9d0415ad5b444d6311a137dbd015bc23" translate="yes" xml:space="preserve">
          <source>When we interact with AngularJS through the normal channels (ng-model, ng-repeat, etc) a digest cycle will be triggered by the directive.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반 채널 (ng-model, ng-repeat 등)을 통해 AngularJS와 상호 작용하면 지시문에 의해 다이제스트주기가 트리거됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c389541f2e6d6e735f2fe65334c1314a25636932" translate="yes" xml:space="preserve">
          <source>Whenever the user changes the data in the view , there occurs an update of that change in the scope model, and viceversa.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자가보기에서 데이터를 변경할 때마다 범위 모델에서 해당 변경 사항이 업데이트되고 그 반대도 마찬가지입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e49f79840dfeb596c214735bd51aa334175dc26" translate="yes" xml:space="preserve">
          <source>You can ask a directive such as &lt;code&gt;ng-model&lt;/code&gt; to define the watcher for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 같은 지시어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 감시자를 정의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하도록 요청할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bec541c245d7b7b926dd45128797bb84bae1703" translate="yes" xml:space="preserve">
          <source>You can bind data in &lt;code&gt;ng-model&lt;/code&gt; Like:-</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 데이터를 바인딩 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9926611fef2cbdb7f4ac38d125214c2c8f5120ac" translate="yes" xml:space="preserve">
          <source>You can explicitly &lt;code&gt;$watch&lt;/code&gt; an &lt;code&gt;attribute&lt;/code&gt; on &lt;code&gt;$scope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명시 적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67e827d680b215290300f8cff935a4a123114bbf" translate="yes" xml:space="preserve">
          <source>You can place a &lt;code&gt;{{}}&lt;/code&gt; interpolation in your template (a watcher will be created for you on the current &lt;code&gt;$scope&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;템플릿에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보간을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배치 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(현재 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 감시자가 생성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a804c4b9fc797bd7668b53bb525c54f66da53f64" translate="yes" xml:space="preserve">
          <source>i.e&lt;code&gt;$rootScope.$apply()&lt;/code&gt;</source>
          <target state="translated">i.e&lt;code&gt;$rootScope.$apply()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="5857e7febe3c8593e18cc3737f8b0bea41507946" translate="yes" xml:space="preserve">
          <source>{{expression}} &amp;mdash; In your templates (and anywhere else where there&amp;rsquo;s an expression) or when we define ng-model.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;{{expression}} &amp;mdash; 템플릿 (및 표현식이있는 곳) 또는 ng-model을 정의 할 때.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
