<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/9682092">
    <body>
      <group id="9682092">
        <trans-unit id="91de6e5632c96599d709bfa2655e3e4d2780d307" translate="yes" xml:space="preserve">
          <source>$scope.$watch(&amp;lsquo;expression/function&amp;rsquo;) &amp;mdash; In your JavaScript we can just attach a scope object for angular to watch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ scope. $ watch ('expression / function') - В вашем JavaScript мы можем просто прикрепить объект области видимости для angular для наблюдения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7820d85df30b0b7884bdfefcb9723bc43a90d70" translate="yes" xml:space="preserve">
          <source>(if it has any). When $digest() iterates
  over the watches, it checks if the value of the expression has
  changed. If the value has changed, AngularJS calls the listener with
  new value and old value. The $digest() function is called
  whenever AngularJS thinks it is necessary. For example, after a button
  click, or after an AJAX call. You may have some cases where AngularJS
  does not call the $digest() function for you. In that case you have to
  call it yourself.</source>
          <target state="translated">(если есть).Когда $digest()выполняет итерацию над часами,она проверяет,изменилось ли значение выражения.Если значение изменилось,AngularJS вызывает слушателя с новым значением и старым значением.Функция $digest()вызывается всякий раз,когда AngularJS считает это необходимым.Например,после нажатия кнопки или после вызова AJAX.У вас могут быть случаи,когда AngularJS не вызывает для вас функцию $digest().В этом случае вы должны вызвать ее сами.</target>
        </trans-unit>
        <trans-unit id="33e1522ece49487d912bf4b8c01791e362bcecd4" translate="yes" xml:space="preserve">
          <source>//Dom update code with new value</source>
          <target state="translated">/Код обновления домена с новым значением</target>
        </trans-unit>
        <trans-unit id="e876771cd34a0018c198b4d5a45eee5c3e8f6f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; binds our view and render it in expression &lt;code&gt;{{ }}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; связывает наше представление и отображает его в выражении &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{ }}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fe9258fbd573d515f842c6b1ae446f5e5726696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; is the data which is shown to the user in the view and with which the user interacts.</source>
          <target state="translated">&lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это данные, которые показываются пользователю в представлении и с которыми взаимодействует пользователь.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a23e57991f9eb393ba30e7917a3fc84a1533a36d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Limited&lt;/em&gt; &amp;mdash; You can't really show more than about 2000 pieces of information to a human on a single page. Anything more than that is really bad UI, and humans can't process this anyway.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ограниченный&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Вы не можете действительно показать больше чем приблизительно 2000 частей информации человеку на одной странице. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что-то большее, чем это, действительно плохой пользовательский интерфейс, и люди все равно не смогут это обработать.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e14aa7e871928b62520d6e0b8e10e2cffc78f21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Slow&lt;/em&gt; &amp;mdash; Anything faster than 50&amp;nbsp;ms is imperceptible to humans and thus can be considered as &quot;instant&quot;.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Медленно&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - все, что быстрее 50 мс, незаметно для человека и поэтому может рассматриваться как &amp;laquo;мгновенное&amp;raquo;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90d38fa37c44e3e62eeefb071eae0c59c73b444a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$apply()&lt;/strong&gt; -</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ apply ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5975df0296848c55622406b2bb66e7ec25788e86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$digest()&lt;/strong&gt; -</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd14b832fd688faba3d0531903fb7672f5bb945f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$watch()&lt;/strong&gt; :-</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1303db0abb7e5b6b8865f6a4d1841c909f514e12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$watch&lt;/strong&gt; function takes in three parameters:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функция &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; принимает три параметра:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="355c0e35ea0794843854cef2fc1fbb22fe357cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="595ac3c717717f780d25d74e1b557454a56132f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="634b1d0bb5b61119c1b7b9f683e4940b4c8913be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d73ec0e35dfd919874037befa129888de0e136a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What is data binding?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что такое привязка данных?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c2332a09f133d6a0597e878dbfa788b036ac566" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AngularJS Code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Код AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d6b4242ac6358cb3597337491f651b75eb7ecba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description :&lt;/strong&gt;
Angular js sets the watcher on the scope model, which fires the listener function if there is a change in the model.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Описание:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Angular js устанавливает наблюдателя на модель объема, которая запускает функцию слушателя, если в модели есть изменение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6524f86f67897c2c00f49d97594a0331982027b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For Ex.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e360378a5f9ce12a09c9e371f6ff0b7082ac4e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML Code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML-код&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8db34f25d93fa8eee917fe302430d84387ad465" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How is it possible?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как это возможно?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="866c51fff782ef985d22aab635285eca8cab7d37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;O/P&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;O/P&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="869138fa5ca240e6391e1fd6a7b3bce75e085d97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short answer :&lt;/strong&gt;
With the help of digest cycle.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Краткий ответ:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с помощью цикла дайджеста.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c025a485c08098687c23572800580a92630ee0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So When and How is the watcher function called?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так когда и как вызывается функция наблюдателя?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="284c0cc1c16634ee278d62d9da4d70563394d278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TL;DR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0cb000ddd31af21b11edf2884f5f7e6bb763965" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data binding:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;привязка данных:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64003ac4d8c2449fd0db7d0d812d631a0365c5a3" translate="yes" xml:space="preserve">
          <source>A digest cycle is a &lt;strong&gt;depth-first traversal of &lt;code&gt;$scope&lt;/code&gt; and all its children&lt;/strong&gt;. For each &lt;code&gt;$scope&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;, we iterate over its &lt;code&gt;$$watchers&lt;/code&gt;&lt;code&gt;array&lt;/code&gt; and evaluate all the expressions. If the new expression value is different from the last known value, the watcher's function is called. This function might recompile part of the DOM, recompute a value on &lt;code&gt;$scope&lt;/code&gt;, trigger an &lt;code&gt;AJAX&lt;/code&gt;&lt;code&gt;request&lt;/code&gt;, anything you need it to do.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Цикл дайджеста - это &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;поиск&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;глубину &lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ scope&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и всех его дочерних &lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;элементов&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для каждого &lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; мы перебираем его &lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; и оцениваем все выражения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если новое значение выражения отличается от последнего известного значения, вызывается функция наблюдателя. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта функция может перекомпилировать часть DOM, пересчитать значение в &lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вызвать &lt;/font&gt; &lt;code&gt;AJAX&lt;/code&gt; - &lt;code&gt;request&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; , все, что вам нужно сделать.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="287c01a594c777e6def93fe6bfe0ca2101558958" translate="yes" xml:space="preserve">
          <source>A function which will be executed if the watcher is dirty.</source>
          <target state="translated">Функция,которая будет выполняться,если наблюдатель загрязнен.</target>
        </trans-unit>
        <trans-unit id="4729c82301a3c543842ace5fe6896ce14e0331a4" translate="yes" xml:space="preserve">
          <source>A last known value of the expression. This can be checked against the current computed value of the expression. If the values differ the watcher will trigger the function and mark the &lt;code&gt;$scope&lt;/code&gt; as dirty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Последнее известное значение выражения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это можно проверить по текущему вычисленному значению выражения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если значения отличаются, наблюдатель запустит функцию и пометит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как грязную.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7a4cd7cf6fbab5ba3dec319212de69d6967eae1" translate="yes" xml:space="preserve">
          <source>An example where I passed the model is updated from server data is when you ask for a zip code and zip code based on written loads a list of colonies and cities associated with that view, and by default set the first value with the user. And this I worked very well, what does happen, is that &lt;code&gt;angularJS&lt;/code&gt; sometimes takes a few seconds to refresh the model, to do this you can put a spinner while displaying the data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пример, в котором я передал модель, обновленную по данным сервера, - это когда вы запрашиваете почтовый индекс и почтовый индекс на основе письменных загрузок списка колоний и городов, связанных с этим представлением, и по умолчанию задаете первое значение для пользователя. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И это я хорошо поработал, что происходит, так это то, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;angularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; иногда требуется несколько секунд, чтобы обновить модель, для этого вы можете поставить счетчик во время отображения данных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8da1959d807de663cf2b11afe60055d655f244eb" translate="yes" xml:space="preserve">
          <source>An expression which the watcher is monitoring. This might just be an &lt;code&gt;attribute&lt;/code&gt; name, or something more complicated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Выражение, за которым следит наблюдатель. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это может быть просто &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;имя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или что-то более сложное.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f4d7984356ebcf25d2e6d62a2611834b289a5d9" translate="yes" xml:space="preserve">
          <source>Angular adds a watcher to the $$watchers for each of these</source>
          <target state="translated">Угловой добавляет наблюдателя к $$-часам для каждого из них.</target>
        </trans-unit>
        <trans-unit id="c1f96c7ee88fa3157584f1e739b926f3ad299b10" translate="yes" xml:space="preserve">
          <source>Angular do auto-magically updates only those model changes which are
  inside AngularJS context. When you do change in any model outside of
  the Angular context (like browser DOM events, setTimeout, XHR or third
  party libraries), then you need to inform Angular of the changes by
  calling $apply() manually. When the $apply() function call finishes
  AngularJS calls $digest() internally, so all data bindings are
  updated.</source>
          <target state="translated">Angular выполняет автоматическое магическое обновление только тех изменений модели,которые находятся внутри контекста AngularJS.Когда вы изменяете любую модель вне контекста Angular (например,события DOM браузера,setTimeout,XHR или сторонние библиотеки),вам нужно сообщить об изменениях Angular,вызвав $apply()вручную.Когда вызов функции $apply()завершает работу,AngularJS вызывает внутренне $digest(),поэтому все привязки данных обновляются.</target>
        </trans-unit>
        <trans-unit id="4ee3d482254a050a513753124978cd73f85d5a94" translate="yes" xml:space="preserve">
          <source>Angular maintains a &lt;code&gt;oldValue&lt;/code&gt; and &lt;code&gt;newValue&lt;/code&gt; of every binding. And after every &lt;em&gt;Angular event&lt;/em&gt;, the famous &lt;code&gt;$digest()&lt;/code&gt; loop will check the WatchList to see if something changed. These &lt;em&gt;Angular events&lt;/em&gt; are &lt;code&gt;ng-click&lt;/code&gt;, &lt;code&gt;ng-change&lt;/code&gt;, &lt;code&gt;$http&lt;/code&gt; completed ...  The &lt;code&gt;$digest()&lt;/code&gt; will loop as long as any &lt;code&gt;oldValue&lt;/code&gt; differs from the &lt;code&gt;newValue&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular поддерживает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;oldValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;newValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; каждой привязки. И после каждого &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;события Angular&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; знаменитый &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;цикл &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет проверять список наблюдения, чтобы увидеть, изменилось ли что-то. Эти &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;угловые события&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-click&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-change&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; complete ... &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет зацикливаться до тех пор, пока любое &lt;/font&gt;&lt;/font&gt; &lt;code&gt;oldValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; отличается от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;newValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6897a7bb238c36acd615fe16d93b0865f419c091" translate="yes" xml:space="preserve">
          <source>Angular maintains a simple &lt;code&gt;array&lt;/code&gt; of watchers in the &lt;code&gt;$scope&lt;/code&gt; objects. If you inspect any &lt;code&gt;$scope&lt;/code&gt; you will find that it contains an &lt;code&gt;array&lt;/code&gt; called &lt;code&gt;$$watchers&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular поддерживает простой &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; наблюдателей в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектах &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы проверяете любые &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы увидите , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что он содержит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; называется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf0f962413a08a96f272491ff2fde4a07d077a61" translate="yes" xml:space="preserve">
          <source>Angular.js creates a watcher for every model we create in view. Whenever a model is changed, an &quot;ng-dirty&quot; class is appeneded to the model, so the watcher will observe all models which have the class &quot;ng-dirty&quot; &amp;amp; update their values in the controller &amp;amp; vice versa.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular.js создает наблюдатель для каждой модели, которую мы создаем. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Всякий раз, когда модель изменяется, к модели добавляется класс &amp;laquo;ng-dirty&amp;raquo;, поэтому наблюдатель будет наблюдать за всеми моделями, имеющими класс &amp;laquo;ng-dirty&amp;raquo;, и обновлять их значения в контроллере и наоборот.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25576f174eab97ef207e9a46466bb2b7e362d6ba" translate="yes" xml:space="preserve">
          <source>AngularJS handle data-binding mechanism with the help of three powerful functions :      &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$watch&quot;&gt;$watch()&lt;/a&gt;,&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest&quot;&gt;$digest()&lt;/a&gt;and &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply&quot;&gt;$apply()&lt;/a&gt;. Most of the time AngularJS will call the $scope.$watch() and $scope.$digest(), but
in some cases you may have to call these functions manually to update with new values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS обрабатывает механизм привязки данных с помощью трех мощных функций: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$watch&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ apply ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В большинстве случаев AngularJS будет вызывать $ scope. $ Watch () и $ scope. $ Digest (), но в некоторых случаях вам, возможно, придется вызывать эти функции вручную для обновления с новыми значениями.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adaa93c89cb1f65e12242562d8f52d1e5b339d30" translate="yes" xml:space="preserve">
          <source>AngularJS remembers the value and compares it to a previous value. This is basic dirty-checking. If there is a change in value, then it fires the change event.</source>
          <target state="translated">AngularJS запоминает значение и сравнивает его с предыдущим значением.Это основная проверка на грязь.Если есть изменение значения,то происходит событие изменения.</target>
        </trans-unit>
        <trans-unit id="fbef5694a622a1a4c9253ab37640ce184b463958" translate="yes" xml:space="preserve">
          <source>AngularJs supports &lt;strong&gt;Two way data-binding&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJs поддерживает &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;двухстороннюю привязку данных&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efa79dd5413f9fd95b27c41dccb2665020217dc4" translate="yes" xml:space="preserve">
          <source>As Misko stated, around 2000 bindings are where you start to see problems, but you shouldn't have more than 2000 pieces of information on a page anyway. This may be true, but not every data-binding is visible to the user. Once you start building any sort of widget or data grid with two-way binding you can &lt;em&gt;easily&lt;/em&gt; hit 2000 bindings, without having a bad UX.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как сказал Миско, около 2000 привязок - это то место, где вы начинаете видеть проблемы, но в любом случае у вас не должно быть более 2000 фрагментов информации на странице. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это может быть правдой, но не каждая привязка данных видна пользователю. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как только вы начнете создавать виджеты или сетки данных с двусторонним связыванием, вы можете &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;легко&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выполнить 2000 привязок, не имея плохого UX.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37fbc5e79c6734b14dad81b7d685ccc6893e71b0" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, &lt;strong&gt;AngularJS&lt;/strong&gt; uses &lt;code&gt;ng-model&lt;/code&gt; to listen and watch what happens on HTML elements, especially on &lt;code&gt;input&lt;/code&gt; fields. When something happens, do something. In our case, &lt;code&gt;ng-model&lt;/code&gt; is bind to our view, using the mustache notation &lt;code&gt;{{}}&lt;/code&gt;. Whatever is typed inside the input field is displayed on the screen instantly. And that's the beauty of data binding, using AngularJS in its simplest form.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как видно из приведенного выше примера, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для прослушивания и наблюдения за тем, что происходит с элементами HTML, особенно с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;полями &lt;/font&gt;&lt;/font&gt; &lt;code&gt;input&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда что-то случится, сделай что-нибудь. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В нашем случае &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; привязана к нашему представлению, используя обозначение усов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Все, что введено в поле ввода, отображается на экране мгновенно. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И в этом прелесть связывания данных, используя AngularJS в его простейшей форме.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="737afa2dc7c25184622f10ed905b43a86ad1a089" translate="yes" xml:space="preserve">
          <source>As you can see, every time something changes in an AngularJS app, AngularJS will check every single watcher in the &lt;code&gt;$scope&lt;/code&gt; hierarchy to see how to respond. For a developer this is a massive productivity boon, as you now need to write almost no wiring code, AngularJS will just notice if a value has changed, and make the rest of the app consistent with the change.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как вы можете видеть, каждый раз, когда что-то меняется в приложении AngularJS, AngularJS проверяет каждого наблюдателя в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;иерархии &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы увидеть, как реагировать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для разработчика это огромный выигрыш в производительности, поскольку теперь вам практически не нужно писать код проводки, AngularJS просто заметит, изменилось ли значение, и сделает остальное приложение совместимым с этим изменением.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a79d468ad5e9c27dc450d53ed835dd90ea4fe4a0" translate="yes" xml:space="preserve">
          <source>At the end of the &lt;code&gt;$apply&lt;/code&gt; the &lt;code&gt;$digest&lt;/code&gt; method is invoked which goes
through each of the watches and checks to see if they changed since
last time the &lt;code&gt;$digest&lt;/code&gt; ran.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В конце &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывается метод , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;который проходит через каждый из часов и проверяет , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если они изменились с момента последнего &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; RAN.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcd2eb5356b9b892e7bf902bb23bd9186e6d6799" translate="yes" xml:space="preserve">
          <source>By dirty checking the &lt;code&gt;$scope&lt;/code&gt; object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Путем грязной проверки &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объекта &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0710b2f8c5ca3b1d6e227e2204bcfc446f57738" translate="yes" xml:space="preserve">
          <source>Change coalescence. Suppose you have an array of items. Say you want to add items into an array, as you are looping to add, each time you add you are firing events on change, which is rendering the UI. This is very bad for performance. What you want is to update the UI only once, at the end. The change events are too fine-grained.</source>
          <target state="translated">Смена коалесценции.Предположим,у вас есть множество элементов.Скажем,что вы хотите добавить элементы в массив,так как вы зацикливаетесь на добавлении,каждый раз,когда вы добавляете,вы прожигаете события по изменениям,что является рендерингом пользовательского интерфейса.Это очень плохо для производительности.Вы хотите обновить пользовательский интерфейс только один раз,в конце.События изменения слишком мелкие.</target>
        </trans-unit>
        <trans-unit id="77c891a95974122552c0d70ba96a05fea9fafba4" translate="yes" xml:space="preserve">
          <source>Change listeners fire immediately on a setter, which is a problem, since the change listener can further change data, which fires more change events. This is bad since on your stack you may have several change events happening at once. Suppose you have two arrays which need to be kept in sync for whatever reason. You can only add to one or the other, but each time you add you fire a change event, which now has an inconsistent view of the world. This is a very similar problem to thread locking, which JavaScript avoids since each callback executes exclusively and to completion. Change events break this since setters can have far-reaching consequences which are not intended and non obvious, which creates the thread problem all over again. It turns out that what you want to do is to delay the listener execution, and guarantee, that only one listener runs at a time, hence any code is free to change data, and it knows that no other code runs while it is doing so.</source>
          <target state="translated">Смена слушателей запускается сразу же на сеттере,что является проблемой,так как слушатель может в дальнейшем изменять данные,что приводит к большему количеству событий изменения.Это плохо,так как на вашем стеке может происходить сразу несколько событий изменений.Предположим,что у вас есть два массива,которые по какой-то причине нужно держать синхронно.Вы можете добавлять только в один или в другой,но каждый раз,когда вы добавляете,вы запускаете событие изменения,которое теперь имеет непоследовательный взгляд на мир.Это очень похоже на проблему блокировки потоков,которую JavaScript избегает,так как каждый обратный вызов выполняется исключительно и до завершения.События изменения нарушают это,так как сеттеры могут иметь далеко идущие последствия,которые не предназначены и не очевидны,что создает проблему потока снова и снова.Оказывается,что вы хотите задержать выполнение слушателя и гарантировать,что только один слушатель работает одновременно,следовательно,любой код может свободно изменять данные,и он знает,что никакой другой код не работает в то время,когда он делает это.</target>
        </trans-unit>
        <trans-unit id="aa1e7dcbb0597e8ac8563615ae3d1825d9496839" translate="yes" xml:space="preserve">
          <source>Changes to watched items must be made within a block of code
wrapped by the &lt;code&gt;$apply&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Изменения в наблюдаемых элементах должны быть внесены в блок кода, заключенный в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b536777ff175ae7f0dadd5ccfd9e78c00761a19e" translate="yes" xml:space="preserve">
          <source>Conclusions</source>
          <target state="translated">Conclusions</target>
        </trans-unit>
        <trans-unit id="04738af7725b2e98757c86e363c8914ab552c47c" translate="yes" xml:space="preserve">
          <source>Consider, for example, a combo box where you can type text to filter the available options. This sort of control could have ~150 items and still be highly usable. If it has some extra feature (for example a specific class on the currently selected option) you start to get 3-5 bindings per option. Put three of these widgets on a page (e.g. one to select a country, the other to select a city in the said country, and the third to select a hotel) and you are somewhere between 1000 and 2000 bindings already.</source>
          <target state="translated">Рассмотрим,например,комбо-бокс,в котором можно ввести текст для фильтрации доступных опций.Такой элемент управления может иметь ~150 элементов и при этом быть очень удобным.Если у него есть какая-то дополнительная возможность (например,определенный класс на выбранном в данный момент параметре),вы начинаете получать 3-5 привязок на каждый параметр.Положите три из этих виджетов на страницу (например,один для выбора страны,другой для выбора города в данной стране,а третий для выбора отеля),и вы уже находитесь где-то между 1000 и 2000 привязками.</target>
        </trans-unit>
        <trans-unit id="38c9337e102844fbe073028e31a3f03dfd28fcd6" translate="yes" xml:space="preserve">
          <source>Data binding lets you treat the model as the single-source-of-truth in your application. The view is a projection of the model at all times. If the model is changed, the view reflects the change and vice versa.</source>
          <target state="translated">Привязка данных позволяет рассматривать модель как единственный источник истины в вашем приложении.Вид-это проекция модели в любое время.Если модель изменена,то представление отражает изменение,и наоборот.</target>
        </trans-unit>
        <trans-unit id="41d6ccf94599c075293f64da897cc14ce18c72a7" translate="yes" xml:space="preserve">
          <source>Data-Binding needs a mapping</source>
          <target state="translated">Привязка данных нуждается в картографировании</target>
        </trans-unit>
        <trans-unit id="53cfd605042a9685d0d23f950654e2d90a38e47f" translate="yes" xml:space="preserve">
          <source>Data-binding in Angular apps is the automatic synchronisation of data between the model and view components.</source>
          <target state="translated">Привязка данных в приложениях Angular (Угловые)-это автоматическая синхронизация данных между компонентами модели и представления.</target>
        </trans-unit>
        <trans-unit id="5934654605974e05a5cca46342e4add1e6e8bca2" translate="yes" xml:space="preserve">
          <source>Digest cycle function:</source>
          <target state="translated">Функция дайджестового цикла:</target>
        </trans-unit>
        <trans-unit id="67bdd0d045b9621fed41646eae45fdacd100225f" translate="yes" xml:space="preserve">
          <source>Digest cycle is called automatically triggered as part of angular js built in directives/services like ng-model , ng-bind , $timeout, ng-click and others.. that let you trigger the digest cycle.</source>
          <target state="translated">Цикл дайджеста называется автоматически запускаемым в рамках угловых js,встроенных в директивы,такие как ng-модель,ng-bind,$timeout,ng-клик и другие...которые позволяют запускать цикл дайджеста.</target>
        </trans-unit>
        <trans-unit id="edf2df3cebeb7068c67f0f8fcf259a256e8d43b4" translate="yes" xml:space="preserve">
          <source>Each time your user interacts with your app, every single watcher in your app will be evaluated at least once. A big part of optimising an AngularJS app is reducing the number of watchers in your &lt;code&gt;$scope&lt;/code&gt; tree. One easy way to do this is with &lt;em&gt;one time binding&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Каждый раз, когда ваш пользователь взаимодействует с вашим приложением, каждый наблюдатель в вашем приложении будет оценен как минимум один раз. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Большая часть оптимизации приложения AngularJS - это уменьшение количества наблюдателей в вашем &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;дереве &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Один из простых способов сделать это - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;одноразовая привязка&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c05d40154f2b4c392454198d496e63c5efbde51" translate="yes" xml:space="preserve">
          <source>Each watcher is an &lt;code&gt;object&lt;/code&gt; that contains among other things</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Каждый наблюдатель является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который содержит среди прочего&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08048692776861edadc2dbcb23494dab4e7cab0f" translate="yes" xml:space="preserve">
          <source>Events leads to $digest()</source>
          <target state="translated">События приводят к $digest()</target>
        </trans-unit>
        <trans-unit id="1999f5595c55decba8e973c1baa963538f547a35" translate="yes" xml:space="preserve">
          <source>Every scope is traversed and every watch expression evaluated and checked against the last value.</source>
          <target state="translated">Каждая область видимости проходит мимо,и каждое выражение часов оценивается и проверяется по последнему значению.</target>
        </trans-unit>
        <trans-unit id="3fde00899391e695c237589b8f69f3b46e5c7578" translate="yes" xml:space="preserve">
          <source>Explaining with Pictures :</source>
          <target state="translated">Объяснение с картинками :</target>
        </trans-unit>
        <trans-unit id="24e795a953c3ca2043687acd912052593a9b0ba7" translate="yes" xml:space="preserve">
          <source>First one is a watcher function which just returns the object or we can just add an expression.</source>
          <target state="translated">Первая-это функция наблюдателя,которая просто возвращает объект или мы можем просто добавить выражение.</target>
        </trans-unit>
        <trans-unit id="f5db049bbbb9e77f2e7abb9fa13d29e74b53f616" translate="yes" xml:space="preserve">
          <source>For example if the model had something like:</source>
          <target state="translated">Например,если у модели было что-то вроде:</target>
        </trans-unit>
        <trans-unit id="a26ff29486dd859efb930e73cff198672e8c1db8" translate="yes" xml:space="preserve">
          <source>From the perspective of the machine though this is wildly inefficient and will slow our app down if we create too many watchers. Misko has quoted a figure of about 4000 watchers before your app will feel slow on older browsers.</source>
          <target state="translated">С точки зрения машины это крайне неэффективно и замедлит работу нашего приложения,если мы создадим слишком много наблюдателей.Misko приводит цифру около 4000 часов,прежде чем ваше приложение будет работать медленно на старых браузерах.</target>
        </trans-unit>
        <trans-unit id="6b5d848557beff3ca27b16e316546c260f2f5158" translate="yes" xml:space="preserve">
          <source>Here if you want to use input &lt;code&gt;name&lt;/code&gt; in the controller then,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь, если вы хотите использовать входное &lt;/font&gt;&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в контроллере, то,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abf84c6c85867c652efadb878febf74268cb94de" translate="yes" xml:space="preserve">
          <source>Here in above example whatever input user will give, It will be visible in &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот в приведенном выше примере, что бы ни вводил пользователь ввода, он будет виден в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e61aa1cba9e6c9aeb8141c1c1d1742560bba644d" translate="yes" xml:space="preserve">
          <source>Here is an example of data binding with AngularJS, using an input field. I will explain later</source>
          <target state="translated">Приведем пример привязки данных с помощью AngularJS,с использованием поля ввода.Я объясню позже</target>
        </trans-unit>
        <trans-unit id="1aaba0345af07c860b35fb4c80fc9c3aad3a3673" translate="yes" xml:space="preserve">
          <source>Here, when you modify the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, you touch the &lt;strong&gt;data-ref3&lt;/strong&gt;. And the classic data-bind mecanism will change &lt;strong&gt;data-ref4&lt;/strong&gt;. So how the other &lt;code&gt;{{data}}&lt;/code&gt; expressions will move ?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь, когда вы изменяете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы касаетесь &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data-ref3&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И классический механизм связывания данных изменит &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data-ref4&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так как же &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;будут двигаться &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;другие &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{data}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выражения?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">Надеюсь,это поможет.</target>
        </trans-unit>
        <trans-unit id="72856d6ab746c0e7dce884ff804eef9218f95f83" translate="yes" xml:space="preserve">
          <source>How does data binding work in AngularJS</source>
          <target state="translated">Как работает привязка данных в AngularJS</target>
        </trans-unit>
        <trans-unit id="811938083dc4a1506a5fffbb7dcd3afefd093cb8" translate="yes" xml:space="preserve">
          <source>How does data binding work in the &lt;code&gt;AngularJS&lt;/code&gt; framework?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как работает привязка данных в платформе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4092cb5028284c4f70ad111654a59eae29e5aeb" translate="yes" xml:space="preserve">
          <source>How to avoid creating too many watchers</source>
          <target state="translated">Как избежать создания слишком большого количества часов</target>
        </trans-unit>
        <trans-unit id="ab2ba6105e0812e7f41747d9629bf67642b2443b" translate="yes" xml:space="preserve">
          <source>How watchers are defined</source>
          <target state="translated">Как определяются наблюдатели</target>
        </trans-unit>
        <trans-unit id="100f16b029687f5c04393f39efd21cce04a9d408" translate="yes" xml:space="preserve">
          <source>Humans are:</source>
          <target state="translated">Люди:</target>
        </trans-unit>
        <trans-unit id="f771cf38309d8e303737f960b8e1ee9d5fa25d29" translate="yes" xml:space="preserve">
          <source>I find this to be a &lt;strong&gt;huge&lt;/strong&gt; problem when working with AngularJS, and the only solution I've been able to find so far is to construct widgets without using two-way binding, instead of using ngOnce, deregistering watchers and similar tricks, or construct directives which build the DOM with jQuery and DOM manipulation. I feel this defeats the purpose of using Angular in the first place.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я считаю, что это &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;огромная&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; проблема при работе с AngularJS, и единственное решение, которое мне удалось найти, - это создание виджетов без двустороннего связывания, вместо использования ngOnce, отмены регистрации наблюдателей и аналогичных приемов, или создание директивы, которые создают DOM с помощью jQuery и манипулирования DOM. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я чувствую, что это побеждает цель использования Angular в первую очередь.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cce5ace8b3744fb015ccf880633cfe7cc6b5814" translate="yes" xml:space="preserve">
          <source>I found that there are &lt;a href=&quot;https://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers&quot;&gt;JavaScript watchers&lt;/a&gt; that may do this work. But they are not supported in &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;6&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;7&lt;/a&gt;. So how does AngularJS know that I changed for example the following and reflected this change on a view?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я обнаружил, что есть &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;наблюдатели JavaScript,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которые могут выполнять эту работу. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но они не поддерживаются в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 6&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 7&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так как же AngularJS узнает, что я изменил, например, следующее и отразил это изменение в представлении?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1de9c7f3209ea909ee2644a83f8b7a0597e60b39" translate="yes" xml:space="preserve">
          <source>I haven't found technical details on &lt;a href=&quot;http://angularjs.org&quot;&gt;their site&lt;/a&gt;. It's more or less clear how it works when data is propagated from view to model. But how does AngularJS track changes of model properties without setters and getters?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я не нашел технических деталей на &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://angularjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;их сайте&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Более или менее понятно, как это работает, когда данные распространяются от вида к модели. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но как AngularJS отслеживает изменения свойств модели без сеттеров и геттеров?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bb7cb327e6090eec145fd3400cccddf72e28acc" translate="yes" xml:space="preserve">
          <source>I wondered this myself for a while. Without setters how does &lt;code&gt;AngularJS&lt;/code&gt; notice changes to the &lt;code&gt;$scope&lt;/code&gt; object? Does it poll them?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я задумался об этом сам некоторое время. Без установщиков как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; замечает изменения &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объекта &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? Это опрос их?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fd4c7597da7bda76a445582e5711ea629ddaea8" translate="yes" xml:space="preserve">
          <source>I would love to hear suggestions on other ways to handle this, but then maybe I should write my own question. I wanted to put this in a comment, but it turned out to be way too long for that...</source>
          <target state="translated">Я бы с удовольствием выслушал предложения о других способах решения этой проблемы,но тогда,может быть,мне стоит написать свой собственный вопрос.Я хотел бы написать это в комментариях,но оказалось,что это слишком долго...</target>
        </trans-unit>
        <trans-unit id="c9c6e1411333d79894f31f96b1b2abf469641d9b" translate="yes" xml:space="preserve">
          <source>If a watcher is triggered, the &lt;code&gt;$scope&lt;/code&gt; is dirty</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если наблюдатель запущен, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является грязным&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45bb602373f8c144ed802f1013ba835906212ef9" translate="yes" xml:space="preserve">
          <source>If a watcher is triggered, the app knows something has changed, and the &lt;code&gt;$scope&lt;/code&gt; is marked as dirty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если сработает наблюдатель, приложение узнает, что что-то изменилось, а область &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; помечена как грязная.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9754f028f3820afdf781852e2300bdcd1bd49e5a" translate="yes" xml:space="preserve">
          <source>If any changes are found then the digest is invoked again until all changes stabilize.</source>
          <target state="translated">При обнаружении изменений дайджест вызывается снова до тех пор,пока все изменения не стабилизируются.</target>
        </trans-unit>
        <trans-unit id="dc49c0ac42bacc60d1fd64ddb061940ef36b5e04" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$digest&lt;/code&gt; is dirty, we execute the entire &lt;code&gt;$digest&lt;/code&gt; cycle again</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; грязный, мы &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;снова &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выполняем весь &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;цикл &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fc6fe8831ed56fa2f83cd2185e8c4d3af21ff79" translate="yes" xml:space="preserve">
          <source>If want to bind input from html to controller:-</source>
          <target state="translated">Если необходимо привязать входной сигнал от html к контроллеру:-</target>
        </trans-unit>
        <trans-unit id="fc233c384289e4ba733c6143276863ae3e11acf9" translate="yes" xml:space="preserve">
          <source>If we reach the digest limit AngularJS will raise an error in the console:</source>
          <target state="translated">Если мы достигнем предела дайджеста,то AngularJS поднимет ошибку в консоли:</target>
        </trans-unit>
        <trans-unit id="b182bb47efd5ceffd0f9647d638795a8d4f4ba86" translate="yes" xml:space="preserve">
          <source>If we use JavaScript&amp;rsquo;s &lt;strong&gt;setTimeout()&lt;/strong&gt; function to update a scope model, Angular has no way of knowing what you might change. In this case it&amp;rsquo;s our responsibility to call $apply() manually, which triggers a $digest cycle. Similarly, if you have a directive that sets up a DOM event listener and changes some models inside the handler function, you need to call $apply() to ensure the changes take effect. The big idea of $apply is that we can execute some code that isn't aware of Angular, that code may still change things on the scope. If we wrap that code in $apply , it will take care of calling $digest(). Rough implementation of $apply().</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если мы используем функцию JavaScript &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;setTimeout ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для обновления модели области, Angular не сможет узнать, что вы можете изменить. В этом случае мы обязаны вручную вызывать $ apply (), что запускает цикл $ digest. Аналогично, если у вас есть директива, которая устанавливает прослушиватель событий DOM и изменяет некоторые модели внутри функции-обработчика, вам нужно вызвать $ apply (), чтобы изменения вступили в силу. Основная идея $ apply состоит в том, что мы можем выполнить некоторый код, который не знает об Angular, этот код все еще может изменить вещи в области видимости. Если мы заключим этот код в $ apply, он позаботится о вызове $ digest (). Грубая реализация $ apply ().&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="acdee26d7393979df447003717d465f503612861" translate="yes" xml:space="preserve">
          <source>If you have data which will rarely change, you can bind it only once using the :: syntax, like so:</source>
          <target state="translated">Если у вас есть данные,которые редко меняются,вы можете связать их только один раз,используя синтаксис :::</target>
        </trans-unit>
        <trans-unit id="f2797b9f1ba27fd200e5c9c4c6af64e50a08620b" translate="yes" xml:space="preserve">
          <source>In normal development, data-binding syntax in the HTML tells the AngularJS compiler to create the watches for you and controller methods are run inside &lt;code&gt;$apply&lt;/code&gt; already. So to the application developer it is all transparent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В обычной разработке синтаксис привязки данных в HTML указывает компилятору AngularJS создать часы для вас, а методы контроллера запускаются внутри &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; уже. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что для разработчика приложений все прозрачно.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67037b0a8b5a6bff39857e9b537abcdf932d0df1" translate="yes" xml:space="preserve">
          <source>In the previous picture, it will notice that data-ref1 and data-ref2 has changed.</source>
          <target state="translated">На предыдущем рисунке будет видно,что данные-ref1 и data-ref2 изменились.</target>
        </trans-unit>
        <trans-unit id="8a8356ec773654ca4bdbd056cf3d9a35ffe5458b" translate="yes" xml:space="preserve">
          <source>Issues with change listeners:</source>
          <target state="translated">Проблемы со слушателями перемен:</target>
        </trans-unit>
        <trans-unit id="f3d16a96c54aef7c6ebe0587ea01873f549a3af8" translate="yes" xml:space="preserve">
          <source>It happened that I needed to link a data model of a person with a form, what I did was a direct mapping of the data with the form.</source>
          <target state="translated">Случилось так,что мне нужно было связать модель данных человека с формой,то,что я делал,это непосредственно сопоставлял данные с формой.</target>
        </trans-unit>
        <trans-unit id="343562dfa3bd11083e7175cd655a02ac86844311" translate="yes" xml:space="preserve">
          <source>It turns out that video games and GPUs use the dirty-checking approach, specifically because it is consistent. As long as they get over the monitor refresh rate (typically 50-60 Hz, or every 16.6-20 ms), any performance over that is a waste, so you're better off drawing more stuff, than getting FPS higher.</source>
          <target state="translated">Оказывается,в видеоиграх и графических процессорах используется подход &quot;грязной проверки&quot;,в частности,потому,что он последователен.Пока они превышают частоту обновления монитора (обычно 50-60 Гц,или каждые 16,6-20 мс),любая производительность по сравнению с этим-пустая трата времени,так что лучше рисовать больше,чем получать FPS выше.</target>
        </trans-unit>
        <trans-unit id="274f1724f9cedd0714f587c409d9a100538443a6" translate="yes" xml:space="preserve">
          <source>It's a little like the Egg and Chicken. You never know who starts, but hopefully it works most of the time as expected.</source>
          <target state="translated">Немного похоже на &quot;Яйцо и курица&quot;.Никогда не знаешь,кто начинает,но надеюсь,что это работает большую часть времени,как и ожидалось.</target>
        </trans-unit>
        <trans-unit id="1525bd60097acc3d807b5139debefd7ba132b0ea" translate="yes" xml:space="preserve">
          <source>Items are watched by passing a function (returning the thing to be
watched) to the &lt;code&gt;$watch&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Элементы отслеживаются путем передачи функции (возвращающей отслеживаемую вещь) в метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="519ea33e338b0e1bee563a64730e09aa647199f5" translate="yes" xml:space="preserve">
          <source>Means you can access data &lt;strong&gt;View -&amp;gt; Controller&lt;/strong&gt; &amp;amp; &lt;strong&gt;Controller -&amp;gt; View&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Означает, что вы можете получить доступ к данным &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;View -&amp;gt; Controller&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;amp; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Controller -&amp;gt; View&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e33d668c8f945d34b9f05ee30f75c1e4213cde48" translate="yes" xml:space="preserve">
          <source>Misko already gave an excellent description of how the data bindings work, but I would like to add my view on the performance issue with the data binding.</source>
          <target state="translated">Компания Misko уже дала отличное описание того,как работает привязка данных,но я хотел бы добавить свое мнение по вопросу производительности с привязкой данных.</target>
        </trans-unit>
        <trans-unit id="f98f946369ce6e582d4af4e03e409d9f9dc2ef40" translate="yes" xml:space="preserve">
          <source>Note:
$apply() is equal to $rootScope.$digest() this  means the dirty checking starts right from the root or top or the parent scope down to all the child $scopes in the angular js application.</source>
          <target state="translated">Замечание:$apply()равна $rootScope.$digest(),это означает,что грязная проверка начинается с корневой или верхней области видимости или родительской области видимости до всех дочерних $scopes в угловом js-приложении.</target>
        </trans-unit>
        <trans-unit id="c93e786087831c4f1fafb334ae9947a471cc20d6" translate="yes" xml:space="preserve">
          <source>Obviously there is no periodic checking of &lt;code&gt;Scope&lt;/code&gt; whether there is any change in the Objects attached to it. Not all the objects attached to scope are watched . Scope prototypically maintains a &lt;strong&gt;$$watchers&lt;/strong&gt; . &lt;code&gt;Scope&lt;/code&gt; only iterates through this &lt;code&gt;$$watchers&lt;/code&gt; when &lt;code&gt;$digest&lt;/code&gt; is called .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Очевидно, что нет никакой периодической проверки &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , есть ли какие-либо изменения в Объектах, прикрепленных к нему. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наблюдаются не все объекты, прикрепленные к области видимости. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Область действия прототипа поддерживает &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$$ watchers&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; перебирает только эти &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; когда &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вызывается &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c86e0e64f0406905129a3f72489210a41131f5c7" translate="yes" xml:space="preserve">
          <source>Or consider a data-grid in a corporate web application. 50 rows per page is not unreasonable, each of which could have 10-20 columns. If you build this with ng-repeats, and/or have information in some cells which uses some bindings, you could be approaching 2000 bindings with this grid alone.</source>
          <target state="translated">Или рассмотрим передачу данных в корпоративном веб-приложении.50 строк на страницу не лишены смысла,каждая из которых может состоять из 10-20 столбцов.Если вы построите это с помощью ng-повторов,а также/или будете иметь информацию в некоторых ячейках,которые используют некоторые привязки,вы можете приблизиться к 2000 привязок только с этой сеткой.</target>
        </trans-unit>
        <trans-unit id="9b8a08e18d95dbfa2c87458daac1a9abc11ba8cb" translate="yes" xml:space="preserve">
          <source>Second one is a listener function which will be called when there is a change in the object. All the things like DOM changes will be implemented in this function.</source>
          <target state="translated">Вторая-функция-приемник,которая будет вызываться при изменении объекта.В этой функции будут реализованы все такие вещи,как изменения в DOM.</target>
        </trans-unit>
        <trans-unit id="3fd1ca72ff9c0211014fb86b642296ec816618c7" translate="yes" xml:space="preserve">
          <source>See a working example here on
&lt;a href=&quot;http://codepen.io/chrisN/pen/YqEmOO&quot;&gt;Codepen&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите рабочий пример здесь на &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://codepen.io/chrisN/pen/YqEmOO&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Codepen&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="693b3d4126317443f94c9a270b3d9ac192e6d991" translate="yes" xml:space="preserve">
          <source>So it is easy to bind data in AngularJs.</source>
          <target state="translated">Так что данные легко связываются в AngularJs.</target>
        </trans-unit>
        <trans-unit id="c9b7e10aa62d01a0083a0bafbc14a25d628a5a04" translate="yes" xml:space="preserve">
          <source>So it may seem that we are slow, since dirty-checking is inefficient. This is where we need to look at real numbers rather than just have theoretical arguments, but first let's define some constraints.</source>
          <target state="translated">Так что может показаться,что мы медлительны,так как проверка грязи неэффективна.Здесь нужно смотреть на реальные числа,а не просто иметь теоретические аргументы,но сначала определимся с некоторыми ограничениями.</target>
        </trans-unit>
        <trans-unit id="31ff2a053dd930ba998f5931530fbca741e8b5b1" translate="yes" xml:space="preserve">
          <source>So the real question is this: How many comparisons can you do on a browser in 50&amp;nbsp;ms? This is a hard question to answer as many factors come into play, but here is a test case: &lt;a href=&quot;http://jsperf.com/angularjs-digest/6&quot;&gt;http://jsperf.com/angularjs-digest/6&lt;/a&gt; which creates 10,000 watchers. On a modern browser this takes just under 6&amp;nbsp;ms. On &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;8&lt;/a&gt; it takes about 40&amp;nbsp;ms. As you can see, this is not an issue even on slow browsers these days. There is a caveat: The comparisons need to be simple to fit into the time limit... Unfortunately it is way too easy to add a slow comparison into AngularJS, so it is easy to build slow applications when you don't know what you are doing. But we hope to have an answer by providing an instrumentation module, which would show you which are the slow comparisons.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, реальный вопрос заключается в следующем: сколько сравнений вы можете выполнить в браузере за 50 мс? На этот вопрос сложно ответить, так как в игру вступают многие факторы, но вот контрольный пример: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/angularjs-digest/6&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsperf.com/angularjs-digest/6,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который создает 10 000 наблюдателей. В современном браузере это занимает чуть менее 6 мс. В &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 8&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; это занимает около 40 мс. Как видите, в наши дни это не проблема даже для медленных браузеров. Есть предостережение: сравнения должны быть простыми, чтобы соответствовать ограничению по времени ... К сожалению, слишком медленно добавить медленное сравнение в AngularJS, поэтому легко создавать медленные приложения, когда вы не знаете, что вам нужно. делаем. Но мы надеемся получить ответ, предоставив инструментальный модуль, который покажет вам, какие медленные сравнения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="174534c6b3882921f07bb41f7a29c9824d9b171b" translate="yes" xml:space="preserve">
          <source>Thank you.</source>
          <target state="translated">Спасибо.</target>
        </trans-unit>
        <trans-unit id="92577ceb7120ac7b142fac481d75199d5e0a53f3" translate="yes" xml:space="preserve">
          <source>That way if you modify the value of the object controller, this will be reflected automatically in the view.</source>
          <target state="translated">Таким образом,если вы измените значение контроллера объекта,это автоматически отразится на представлении.</target>
        </trans-unit>
        <trans-unit id="2003e784c284ddbed19467eee8de2a001cf6b923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$apply()&lt;/code&gt; method, which is what you call when you are transitioning from a non-AngularJS world into an AngularJS world, calls &lt;code&gt;$digest()&lt;/code&gt;. A digest is just plain old dirty-checking. It works on all browsers and is totally predictable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который вы вызываете при переходе из мира, отличного от AngularJS, в мир AngularJS, вызывает метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Дайджест - это просто старая грязная проверка. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он работает во всех браузерах и полностью предсказуем.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b522c9d331f9c497ebd37172926a4cbfa51cfad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$digest&lt;/code&gt; cycle checks all watchers against their last value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Цикл &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; проверяет всех наблюдателей на их последнее значение&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57d293436789127bbfd7b6ac942ebead8614f1b9" translate="yes" xml:space="preserve">
          <source>The above features work in the browsers IE for the mentioned versions also just by making sure your application is angular js application which means you are using the angularjs framework script file referenced in the script tag.</source>
          <target state="translated">Вышеуказанные функции работают в браузерах IE для указанных версий,а также просто проверяют,является ли ваше приложение угловым js приложением,что означает,что вы используете файл скрипта фреймворка angularjs,на который есть ссылка в теге скрипта.</target>
        </trans-unit>
        <trans-unit id="468988dca821eab1366620955fd6086c27fd11e1" translate="yes" xml:space="preserve">
          <source>The binding will only be triggered when the containing template is rendered and the data loaded into &lt;code&gt;$scope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Привязка будет срабатывать только тогда, когда визуализируется содержащий шаблон и данные загружаются в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15405ba0c4fa31d34c3dffcbf02c552e4ca0b07b" translate="yes" xml:space="preserve">
          <source>The control input of the form:</source>
          <target state="translated">Управляющий ввод формы:</target>
        </trans-unit>
        <trans-unit id="3e6b0df17c0aaea4b70014e68b2e206f24d35edc" translate="yes" xml:space="preserve">
          <source>The data binding can cause performance issues on complex pages.</source>
          <target state="translated">Привязка данных может привести к проблемам с производительностью на сложных страницах.</target>
        </trans-unit>
        <trans-unit id="25004e2affdfc42b03e4884351a5cc585b221410" translate="yes" xml:space="preserve">
          <source>The digest is hard on the machine but easy on the developer</source>
          <target state="translated">Дайджест тяжелый на машине,но легкий для разработчика.</target>
        </trans-unit>
        <trans-unit id="08cbe99aa8a083947a0b23f9775c4b49f46dc65a" translate="yes" xml:space="preserve">
          <source>The one-way data binding is an approach where a value is taken from the data model and inserted into an HTML element. There is no way to update model from view. It is used in classical template systems. These systems bind data in only one direction.</source>
          <target state="translated">Односторонняя привязка данных-это подход,при котором значение берется из модели данных и вставляется в HTML-элемент.Обновление модели из представления невозможно.Используется в классических шаблонных системах.Эти системы связывают данные только в одном направлении.</target>
        </trans-unit>
        <trans-unit id="395b6fe80ec647c86c7ba13a79a819f5b1d4ef1c" translate="yes" xml:space="preserve">
          <source>The other point is that you can understand easily the impact deep of a simple binding on the memory and the CPU. Hopefully Desktops are fat enough to handle this. Mobile phones are not that strong.</source>
          <target state="translated">Другой момент заключается в том,что вы можете легко понять,какое глубокое влияние оказывает простая привязка к памяти и процессору.Надеюсь,настольные компьютеры достаточно толстые,чтобы справиться с этим.Мобильные телефоны не настолько сильны.</target>
        </trans-unit>
        <trans-unit id="dedae52c9852165a86fa875d38e2c1e75a87ccf1" translate="yes" xml:space="preserve">
          <source>The reference in the scope is not exactly the reference   in the template. When you data-bind two objects, you need a third one that listen to the first and modify the other.</source>
          <target state="translated">Ссылка в области видимости не является точной ссылкой в шаблоне.Когда вы привязываете данные к двум объектам,вам нужен третий,который прослушивает первый и изменяет другой.</target>
        </trans-unit>
        <trans-unit id="c91a85811c33fbcef6fa8731745c927c0012d820" translate="yes" xml:space="preserve">
          <source>The syntax is atrocious, since browsers do not support it natively. Yes, there are proxies, but they are not semantically correct in all cases, and of course there are no proxies on old browsers. The bottom line is that dirty-checking allows you to do &lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;POJO&lt;/a&gt;, whereas KnockoutJS and Backbone.js force you to inherit from their classes, and access your data through accessors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Синтаксис ужасен, так как браузеры не поддерживают его изначально. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Да, есть прокси, но они не являются семантически правильными во всех случаях, и, конечно, в старых браузерах нет прокси. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Суть в том, что грязная проверка позволяет вам делать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;POJO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , тогда как KnockoutJS и Backbone.js заставляют вас наследовать от их классов и получать доступ к вашим данным через методы доступа.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a43dba51173aab39fa19ef60ae9870ffdf5e18cd" translate="yes" xml:space="preserve">
          <source>The third being an optional parameter which takes in a boolean . If its true , angular deep watches the object &amp;amp; if its false Angular just does a reference watching on the object.
    Rough Implementation of $watch looks like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Третий является необязательным параметром, который принимает логическое значение. Если это правда, Angular Deep наблюдает за объектом, а если его false, Angular просто наблюдает за объектом. Примерная реализация $ watch выглядит следующим образом&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3c98a925e6264735a9cd6c4c03c15427dac1af8" translate="yes" xml:space="preserve">
          <source>There are many different ways of defining a watcher in AngularJS.</source>
          <target state="translated">Существует много различных способов определения часов в AngularJS.</target>
        </trans-unit>
        <trans-unit id="8237def3104a80cff7eecee796adaf84abd4fa04" translate="yes" xml:space="preserve">
          <source>There is an interesting thing in Angular called Digest Cycle. The $digest cycle starts as a result of a call to $scope.$digest(). Assume that you change a $scope model in a handler function through the ng-click directive. In that case AngularJS automatically triggers a $digest cycle by calling $digest().In addition to ng-click, there are several other built-in directives/services that let you change models (e.g. ng-model, $timeout, etc) and automatically trigger a $digest cycle.  The rough implementation of $digest looks like this.</source>
          <target state="translated">Есть интересная вещь в Угловом называется Дайджестский Цикл.Цикл $digest начинается в результате вызова $scope.$digest().Предположим,что вы изменяете модель $scope в функции-обработчике с помощью директивы ng-клика.В этом случае AngularJS автоматически запускает цикл $digest,вызывая $digest().Помимо ng-клика,есть еще несколько встроенных директив,которые позволяют менять модели (например,ng-модель,$timeout и т.д.)и автоматически запускать цикл $digest.Примерная реализация $digest выглядит следующим образом.</target>
        </trans-unit>
        <trans-unit id="e2e20ff3c295188e752a47e4f991273ed16c6dfd" translate="yes" xml:space="preserve">
          <source>This function is used to observe changes in a variable on the $scope.
  It accepts three parameters: expression, listener and equality object,
  where listener and equality object are optional parameters.</source>
          <target state="translated">Эта функция используется для наблюдения за изменением переменной на $scope.Она принимает три параметра:выражение,слушатель и объект равенства,где слушатель и объект равенства являются необязательными параметрами.</target>
        </trans-unit>
        <trans-unit id="3dd9be14c4e8bc97123d1fd8dc61ae080e1b9123" translate="yes" xml:space="preserve">
          <source>This function iterates through all the watches in the $scope object,
  and its child $scope objects</source>
          <target state="translated">Эта функция выполняет итерацию через все часы в объекте $scope,а также через его дочерние объекты $scope.</target>
        </trans-unit>
        <trans-unit id="91a26da78200b3aef1cb1945d188957561dfd228" translate="yes" xml:space="preserve">
          <source>This is because AngularJS has two-way binding, so data can be passed back up the &lt;code&gt;$scope&lt;/code&gt; tree. We may change a value on a higher &lt;code&gt;$scope&lt;/code&gt; that has already been digested. Perhaps we change a value on the &lt;code&gt;$rootScope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это связано с тем, что AngularJS имеет двустороннюю привязку, поэтому данные могут быть переданы обратно в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;дерево &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы можем изменить значение на более высоком уровне &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который уже был переварен. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Возможно, мы изменим значение в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$rootScope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56940ba3b003c3b9efc4a2d260ce62e5a12c0d89" translate="yes" xml:space="preserve">
          <source>This is especially important when you have an &lt;code&gt;ng-repeat&lt;/code&gt; with many items.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это особенно важно, когда у вас есть &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-repeat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; со многими предметами.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc2a49f6d92f573bcfe485e392faeba5d9e44a4a" translate="yes" xml:space="preserve">
          <source>This is my basic understanding. It may well be wrong!</source>
          <target state="translated">Это мое основное понимание.Это может быть неправильно!</target>
        </trans-unit>
        <trans-unit id="824a36c001af90b4c01a2f8a9b0d6db5c1f42c79" translate="yes" xml:space="preserve">
          <source>This limit is easy to reach if you &lt;code&gt;ng-repeat&lt;/code&gt; over a large &lt;code&gt;JSON&lt;/code&gt;&lt;code&gt;array&lt;/code&gt; for example. You can mitigate against this using features like one-time binding to compile a template without creating watchers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот предел легко достичь, например, если вы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-repeat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для большого &lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете избежать этого, используя такие функции, как одноразовая привязка для компиляции шаблона без создания наблюдателей.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f9698290b18dfcad06dccf0d7af50181f334d2c" translate="yes" xml:space="preserve">
          <source>To contrast dirty-checking (AngularJS) vs change listeners (&lt;a href=&quot;http://en.wikipedia.org/wiki/KnockoutJS&quot;&gt;KnockoutJS&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Backbone.js&quot;&gt;Backbone.js&lt;/a&gt;): While dirty-checking may seem simple, and even inefficient (I will address that later), it turns out that it is semantically correct all the time, while change listeners have lots of weird corner cases and need things like dependency tracking to make it more semantically correct. KnockoutJS dependency tracking is a clever feature for a problem which AngularJS does not have.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В отличие от грязной проверки (AngularJS) и слушателей изменений ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/KnockoutJS&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;KnockoutJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Backbone.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Backbone.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ): хотя грязная проверка может показаться простой и даже неэффективной (я расскажу об этом позже), оказывается, что она семантически верна все время, в то время как слушатели изменений имеют множество странных угловых случаев и нуждаются в таких вещах, как отслеживание зависимостей, чтобы сделать его более семантически правильным. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Отслеживание зависимостей KnockoutJS - умная функция для проблемы, которой нет у AngularJS.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7badb858f29a6efa2f33f71e4eb4033d92c9cc96" translate="yes" xml:space="preserve">
          <source>Watcher function is called as part of the digest cycle.</source>
          <target state="translated">Функция наблюдателя вызывается в рамках цикла дайджеста.</target>
        </trans-unit>
        <trans-unit id="8715de0439dc5dc006e1080c1077524c864eb3fc" translate="yes" xml:space="preserve">
          <source>Watcher functions can change other attributes on &lt;code&gt;$scope&lt;/code&gt; or on a parent &lt;code&gt;$scope&lt;/code&gt;. If one &lt;code&gt;$watcher&lt;/code&gt; function has been triggered, we can't guarantee that our other &lt;code&gt;$scope&lt;/code&gt;s are still clean, and so we execute the entire digest cycle again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функции наблюдателя могут изменять другие атрибуты в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или в родительском &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сработала &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;одна &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , мы не можем гарантировать, что другие наши &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; остаются чистыми, и поэтому мы снова выполняем весь цикл дайджеста.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07fcfb61713968827e9ec7c9f565e6d499887b35" translate="yes" xml:space="preserve">
          <source>We continually loop through the &lt;code&gt;$digest&lt;/code&gt; cycle until either the digest cycle comes up clean (all &lt;code&gt;$watch&lt;/code&gt; expressions have the same value as they had in the previous cycle), or we reach the digest limit. By default, this limit is set at 10.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мы непрерывно циклически &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; цикл &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest,&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; пока либо цикл дайджеста не станет чистым (все &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выражения &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеют то же значение, что и в предыдущем цикле), либо мы не достигнем предела дайджеста. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;По умолчанию этот предел установлен на 10.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99c41154db2ed0f7cd5e6cf93d295fefb4cb0cb8" translate="yes" xml:space="preserve">
          <source>What about performance?</source>
          <target state="translated">А как же выступление?</target>
        </trans-unit>
        <trans-unit id="f6d49eb840ac9b816221044bcd3d3d0b4f2429c7" translate="yes" xml:space="preserve">
          <source>What it actually does is this: Any &quot;normal&quot; place you modify the model was already called from the guts of &lt;code&gt;AngularJS&lt;/code&gt;, so it automatically calls &lt;code&gt;$apply&lt;/code&gt; for you after your code runs. Say your controller has a method that's hooked up to &lt;code&gt;ng-click&lt;/code&gt; on some element. Because &lt;code&gt;AngularJS&lt;/code&gt; wires the calling of that method together for you, it has a chance to do an &lt;code&gt;$apply&lt;/code&gt; in the appropriate place. Likewise, for expressions that appear right in the views, those are executed by &lt;code&gt;AngularJS&lt;/code&gt; so it does the &lt;code&gt;$apply&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;На самом деле он делает следующее: любое &amp;laquo;нормальное&amp;raquo; место, где вы модифицируете модель, уже вызывалось из кишок &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому он автоматически вызывает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для вас после выполнения кода. Скажем, у вашего контроллера есть метод, который подключается к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-click&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на каком-то элементе. Поскольку &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; связывает&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызов этого метода для вас, у него есть шанс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в соответствующем месте. Аналогично, для выражений, которые отображаются прямо в представлениях, они выполняются &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; поэтому он применяет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b811e7e92d8afabecc4cce05a490306acb550c72" translate="yes" xml:space="preserve">
          <source>When the documentation talks about having to call &lt;code&gt;$apply&lt;/code&gt; manually for code &lt;em&gt;outside of &lt;code&gt;AngularJS&lt;/code&gt;&lt;/em&gt;, it's talking about code which, when run, doesn't stem from &lt;code&gt;AngularJS&lt;/code&gt; itself in the call stack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда в документации говорится о необходимости вызова &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вручную для кода &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вне &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , речь идет о коде, который при запуске не вытекает из &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;самого &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в стеке вызовов.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f128527b9d0415ad5b444d6311a137dbd015bc23" translate="yes" xml:space="preserve">
          <source>When we interact with AngularJS through the normal channels (ng-model, ng-repeat, etc) a digest cycle will be triggered by the directive.</source>
          <target state="translated">При взаимодействии с AngularJS по нормальным каналам (нг-модель,ng-повтор и т.д.)директива запускает цикл дайджеста.</target>
        </trans-unit>
        <trans-unit id="c389541f2e6d6e735f2fe65334c1314a25636932" translate="yes" xml:space="preserve">
          <source>Whenever the user changes the data in the view , there occurs an update of that change in the scope model, and viceversa.</source>
          <target state="translated">Всякий раз,когда пользователь изменяет данные в представлении,происходит обновление этого изменения в модели области видимости,и наоборот.</target>
        </trans-unit>
        <trans-unit id="1e49f79840dfeb596c214735bd51aa334175dc26" translate="yes" xml:space="preserve">
          <source>You can ask a directive such as &lt;code&gt;ng-model&lt;/code&gt; to define the watcher for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете попросить директиву, такую ​​как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; определить наблюдателя для вас.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bec541c245d7b7b926dd45128797bb84bae1703" translate="yes" xml:space="preserve">
          <source>You can bind data in &lt;code&gt;ng-model&lt;/code&gt; Like:-</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете связать данные в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как: -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9926611fef2cbdb7f4ac38d125214c2c8f5120ac" translate="yes" xml:space="preserve">
          <source>You can explicitly &lt;code&gt;$watch&lt;/code&gt; an &lt;code&gt;attribute&lt;/code&gt; on &lt;code&gt;$scope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете явно &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; за собой &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67e827d680b215290300f8cff935a4a123114bbf" translate="yes" xml:space="preserve">
          <source>You can place a &lt;code&gt;{{}}&lt;/code&gt; interpolation in your template (a watcher will be created for you on the current &lt;code&gt;$scope&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете разместить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; интерполяцию в своем шаблоне (для вас будет создан наблюдатель в текущей области &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a804c4b9fc797bd7668b53bb525c54f66da53f64" translate="yes" xml:space="preserve">
          <source>i.e&lt;code&gt;$rootScope.$apply()&lt;/code&gt;</source>
          <target state="translated">i.e&lt;code&gt;$rootScope.$apply()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="5857e7febe3c8593e18cc3737f8b0bea41507946" translate="yes" xml:space="preserve">
          <source>{{expression}} &amp;mdash; In your templates (and anywhere else where there&amp;rsquo;s an expression) or when we define ng-model.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;{{expression}} - в ваших шаблонах (и в любом другом месте, где есть выражение) или когда мы определяем ng-модель.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
