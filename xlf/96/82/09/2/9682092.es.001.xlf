<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/9682092">
    <body>
      <group id="9682092">
        <trans-unit id="91de6e5632c96599d709bfa2655e3e4d2780d307" translate="yes" xml:space="preserve">
          <source>$scope.$watch(&amp;lsquo;expression/function&amp;rsquo;) &amp;mdash; In your JavaScript we can just attach a scope object for angular to watch.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ scope. $ watch ('expresi&amp;oacute;n / funci&amp;oacute;n'): en su JavaScript podemos adjuntar un objeto de alcance para que angular lo vea.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7820d85df30b0b7884bdfefcb9723bc43a90d70" translate="yes" xml:space="preserve">
          <source>(if it has any). When $digest() iterates
  over the watches, it checks if the value of the expression has
  changed. If the value has changed, AngularJS calls the listener with
  new value and old value. The $digest() function is called
  whenever AngularJS thinks it is necessary. For example, after a button
  click, or after an AJAX call. You may have some cases where AngularJS
  does not call the $digest() function for you. In that case you have to
  call it yourself.</source>
          <target state="translated">(si tiene alguno).Cuando $digest()itera sobre los relojes,comprueba si el valor de la expresión ha cambiado.Si el valor ha cambiado,AngularJS llama al oyente con el nuevo valor y el antiguo valor.La función $digest()es llamada cada vez que AngularJS lo considera necesario.Por ejemplo,después de un clic en un botón,o después de una llamada AJAX.Puede haber algunos casos en los que AngularJS no llame a la función $digest()por usted.En ese caso tienes que llamarla tú mismo.</target>
        </trans-unit>
        <trans-unit id="33e1522ece49487d912bf4b8c01791e362bcecd4" translate="yes" xml:space="preserve">
          <source>//Dom update code with new value</source>
          <target state="translated">/Código de actualización de Dom con nuevo valor</target>
        </trans-unit>
        <trans-unit id="e876771cd34a0018c198b4d5a45eee5c3e8f6f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; binds our view and render it in expression &lt;code&gt;{{ }}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; une nuestra vista y la representa en la expresi&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{ }}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fe9258fbd573d515f842c6b1ae446f5e5726696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-model&lt;/code&gt; is the data which is shown to the user in the view and with which the user interacts.</source>
          <target state="translated">&lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son los datos que se muestran al usuario en la vista y con los que el usuario interact&amp;uacute;a.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a23e57991f9eb393ba30e7917a3fc84a1533a36d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Limited&lt;/em&gt; &amp;mdash; You can't really show more than about 2000 pieces of information to a human on a single page. Anything more than that is really bad UI, and humans can't process this anyway.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Limitado&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : en realidad, no puede mostrar m&amp;aacute;s de 2000 datos a un humano en una sola p&amp;aacute;gina. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cualquier cosa m&amp;aacute;s que eso es una interfaz de usuario realmente mala, y los humanos no pueden procesar esto de todos modos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e14aa7e871928b62520d6e0b8e10e2cffc78f21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Slow&lt;/em&gt; &amp;mdash; Anything faster than 50&amp;nbsp;ms is imperceptible to humans and thus can be considered as &quot;instant&quot;.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lento&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : cualquier cosa que supere los 50 ms es imperceptible para los humanos y, por lo tanto, puede considerarse &quot;instant&amp;aacute;neo&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90d38fa37c44e3e62eeefb071eae0c59c73b444a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$apply()&lt;/strong&gt; -</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ apply ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5975df0296848c55622406b2bb66e7ec25788e86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$digest()&lt;/strong&gt; -</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd14b832fd688faba3d0531903fb7672f5bb945f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$watch()&lt;/strong&gt; :-</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ reloj ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1303db0abb7e5b6b8865f6a4d1841c909f514e12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$watch&lt;/strong&gt; function takes in three parameters:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funci&amp;oacute;n &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; toma tres par&amp;aacute;metros:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="355c0e35ea0794843854cef2fc1fbb22fe357cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="595ac3c717717f780d25d74e1b557454a56132f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="634b1d0bb5b61119c1b7b9f683e4940b4c8913be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d73ec0e35dfd919874037befa129888de0e136a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;What is data binding?&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; es el enlace de datos?&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c2332a09f133d6a0597e878dbfa788b036ac566" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AngularJS Code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;digo AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d6b4242ac6358cb3597337491f651b75eb7ecba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description :&lt;/strong&gt;
Angular js sets the watcher on the scope model, which fires the listener function if there is a change in the model.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Descripci&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Angular js establece el observador en el modelo de alcance, que activa la funci&amp;oacute;n de escucha si hay un cambio en el modelo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6524f86f67897c2c00f49d97594a0331982027b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For Ex.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ej.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e360378a5f9ce12a09c9e371f6ff0b7082ac4e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML Code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c&amp;oacute;digo HTML&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8db34f25d93fa8eee917fe302430d84387ad465" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How is it possible?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Como es posible?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="866c51fff782ef985d22aab635285eca8cab7d37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;O/P&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;O/P&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="869138fa5ca240e6391e1fd6a7b3bce75e085d97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short answer :&lt;/strong&gt;
With the help of digest cycle.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Respuesta corta:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con la ayuda del ciclo de digesti&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c025a485c08098687c23572800580a92630ee0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So When and How is the watcher function called?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;cu&amp;aacute;ndo y c&amp;oacute;mo se llama la funci&amp;oacute;n de observador?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="284c0cc1c16634ee278d62d9da4d70563394d278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TL;DR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d0cb000ddd31af21b11edf2884f5f7e6bb763965" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data binding:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el enlace de datos:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64003ac4d8c2449fd0db7d0d812d631a0365c5a3" translate="yes" xml:space="preserve">
          <source>A digest cycle is a &lt;strong&gt;depth-first traversal of &lt;code&gt;$scope&lt;/code&gt; and all its children&lt;/strong&gt;. For each &lt;code&gt;$scope&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;, we iterate over its &lt;code&gt;$$watchers&lt;/code&gt;&lt;code&gt;array&lt;/code&gt; and evaluate all the expressions. If the new expression value is different from the last known value, the watcher's function is called. This function might recompile part of the DOM, recompute a value on &lt;code&gt;$scope&lt;/code&gt;, trigger an &lt;code&gt;AJAX&lt;/code&gt;&lt;code&gt;request&lt;/code&gt;, anything you need it to do.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un ciclo de resumen es un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;recorrido transversal de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y todos sus elementos secundarios&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para cada &lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , iteramos sobre su &lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; y evaluamos todas las expresiones. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el nuevo valor de expresi&amp;oacute;n es diferente del &amp;uacute;ltimo valor conocido, se llama a la funci&amp;oacute;n del observador. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta funci&amp;oacute;n puede recompilar parte del DOM, recalcular un valor en &lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; , activar una &lt;/font&gt; &lt;code&gt;request&lt;/code&gt; &lt;code&gt;AJAX&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; , cualquier cosa que necesite hacer.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="287c01a594c777e6def93fe6bfe0ca2101558958" translate="yes" xml:space="preserve">
          <source>A function which will be executed if the watcher is dirty.</source>
          <target state="translated">Una función que se ejecutará si el vigilante está sucio.</target>
        </trans-unit>
        <trans-unit id="4729c82301a3c543842ace5fe6896ce14e0331a4" translate="yes" xml:space="preserve">
          <source>A last known value of the expression. This can be checked against the current computed value of the expression. If the values differ the watcher will trigger the function and mark the &lt;code&gt;$scope&lt;/code&gt; as dirty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un &amp;uacute;ltimo valor conocido de la expresi&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se puede verificar con el valor calculado actual de la expresi&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si los valores difieren, el observador activar&amp;aacute; la funci&amp;oacute;n y marcar&amp;aacute; el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como sucio.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7a4cd7cf6fbab5ba3dec319212de69d6967eae1" translate="yes" xml:space="preserve">
          <source>An example where I passed the model is updated from server data is when you ask for a zip code and zip code based on written loads a list of colonies and cities associated with that view, and by default set the first value with the user. And this I worked very well, what does happen, is that &lt;code&gt;angularJS&lt;/code&gt; sometimes takes a few seconds to refresh the model, to do this you can put a spinner while displaying the data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un ejemplo en el que pas&amp;eacute; el modelo se actualiza a partir de los datos del servidor es cuando solicita un c&amp;oacute;digo postal y un c&amp;oacute;digo postal basado en cargas escritas, una lista de colonias y ciudades asociadas con esa vista, y establece de forma predeterminada el primer valor con el usuario. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y esto funcion&amp;oacute; muy bien, lo que sucede es que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;angularJS&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; veces tarda unos segundos en actualizar el modelo, para hacer esto puede poner una rueda giratoria mientras se muestran los datos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8da1959d807de663cf2b11afe60055d655f244eb" translate="yes" xml:space="preserve">
          <source>An expression which the watcher is monitoring. This might just be an &lt;code&gt;attribute&lt;/code&gt; name, or something more complicated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una expresi&amp;oacute;n que el observador est&amp;aacute; monitoreando. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto podr&amp;iacute;a ser solo un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nombre de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , o algo m&amp;aacute;s complicado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f4d7984356ebcf25d2e6d62a2611834b289a5d9" translate="yes" xml:space="preserve">
          <source>Angular adds a watcher to the $$watchers for each of these</source>
          <target state="translated">Angular añade un observador a los observadores de $$ para cada uno de estos</target>
        </trans-unit>
        <trans-unit id="c1f96c7ee88fa3157584f1e739b926f3ad299b10" translate="yes" xml:space="preserve">
          <source>Angular do auto-magically updates only those model changes which are
  inside AngularJS context. When you do change in any model outside of
  the Angular context (like browser DOM events, setTimeout, XHR or third
  party libraries), then you need to inform Angular of the changes by
  calling $apply() manually. When the $apply() function call finishes
  AngularJS calls $digest() internally, so all data bindings are
  updated.</source>
          <target state="translated">Angular hace auto-actualización mágica sólo los cambios de modelo que están dentro del contexto de AngularJS.Cuando haces un cambio en cualquier modelo fuera del contexto de Angular (como los eventos DOM del navegador,setTimeout,XHR o librerías de terceros),entonces necesitas informar a Angular de los cambios llamando a $apply()manualmente.Cuando la llamada a la función $apply()termina,AngularJS llama internamente a $digest(),para que todos los enlaces de datos se actualicen.</target>
        </trans-unit>
        <trans-unit id="4ee3d482254a050a513753124978cd73f85d5a94" translate="yes" xml:space="preserve">
          <source>Angular maintains a &lt;code&gt;oldValue&lt;/code&gt; and &lt;code&gt;newValue&lt;/code&gt; of every binding. And after every &lt;em&gt;Angular event&lt;/em&gt;, the famous &lt;code&gt;$digest()&lt;/code&gt; loop will check the WatchList to see if something changed. These &lt;em&gt;Angular events&lt;/em&gt; are &lt;code&gt;ng-click&lt;/code&gt;, &lt;code&gt;ng-change&lt;/code&gt;, &lt;code&gt;$http&lt;/code&gt; completed ...  The &lt;code&gt;$digest()&lt;/code&gt; will loop as long as any &lt;code&gt;oldValue&lt;/code&gt; differs from the &lt;code&gt;newValue&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular mantiene un valor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;oldValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;newValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de cada enlace. Y despu&amp;eacute;s de cada &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;evento angular&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el famoso &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bucle &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; verificar&amp;aacute; la WatchList para ver si algo cambi&amp;oacute;. Estos &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eventos angulares&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-click&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-change&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$http&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; completado ... El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; repetir&amp;aacute; siempre que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;oldValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; difiera del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;newValue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6897a7bb238c36acd615fe16d93b0865f419c091" translate="yes" xml:space="preserve">
          <source>Angular maintains a simple &lt;code&gt;array&lt;/code&gt; of watchers in the &lt;code&gt;$scope&lt;/code&gt; objects. If you inspect any &lt;code&gt;$scope&lt;/code&gt; you will find that it contains an &lt;code&gt;array&lt;/code&gt; called &lt;code&gt;$$watchers&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular mantiene una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; simple &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de observadores en los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si inspecciona cualquier &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , encontrar&amp;aacute; que contiene una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; llamada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf0f962413a08a96f272491ff2fde4a07d077a61" translate="yes" xml:space="preserve">
          <source>Angular.js creates a watcher for every model we create in view. Whenever a model is changed, an &quot;ng-dirty&quot; class is appeneded to the model, so the watcher will observe all models which have the class &quot;ng-dirty&quot; &amp;amp; update their values in the controller &amp;amp; vice versa.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Angular.js crea un observador para cada modelo que creamos a la vista. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada vez que se cambia un modelo, se agrega una clase &quot;ng-dirty&quot; al modelo, por lo que el observador observar&amp;aacute; todos los modelos que tengan la clase &quot;ng-dirty&quot; y actualizar&amp;aacute; sus valores en el controlador y viceversa.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25576f174eab97ef207e9a46466bb2b7e362d6ba" translate="yes" xml:space="preserve">
          <source>AngularJS handle data-binding mechanism with the help of three powerful functions :      &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$watch&quot;&gt;$watch()&lt;/a&gt;,&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest&quot;&gt;$digest()&lt;/a&gt;and &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply&quot;&gt;$apply()&lt;/a&gt;. Most of the time AngularJS will call the $scope.$watch() and $scope.$digest(), but
in some cases you may have to call these functions manually to update with new values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS maneja el mecanismo de enlace de datos con la ayuda de tres potentes funciones: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$watch&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ digest ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ apply ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La mayor&amp;iacute;a de las veces, AngularJS llamar&amp;aacute; a $ scope. $ Watch () y $ scope. $ Digest (), pero en algunos casos puede que tenga que llamar a estas funciones manualmente para actualizar con nuevos valores.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adaa93c89cb1f65e12242562d8f52d1e5b339d30" translate="yes" xml:space="preserve">
          <source>AngularJS remembers the value and compares it to a previous value. This is basic dirty-checking. If there is a change in value, then it fires the change event.</source>
          <target state="translated">AngularJS recuerda el valor y lo compara con un valor anterior.Esta es una comprobación básica de la suciedad.Si hay un cambio en el valor,entonces dispara el evento de cambio.</target>
        </trans-unit>
        <trans-unit id="fbef5694a622a1a4c9253ab37640ce184b463958" translate="yes" xml:space="preserve">
          <source>AngularJs supports &lt;strong&gt;Two way data-binding&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJs admite &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;enlace de datos bidireccional&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efa79dd5413f9fd95b27c41dccb2665020217dc4" translate="yes" xml:space="preserve">
          <source>As Misko stated, around 2000 bindings are where you start to see problems, but you shouldn't have more than 2000 pieces of information on a page anyway. This may be true, but not every data-binding is visible to the user. Once you start building any sort of widget or data grid with two-way binding you can &lt;em&gt;easily&lt;/em&gt; hit 2000 bindings, without having a bad UX.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como dijo Misko, alrededor de 2000 enlaces es donde comienzas a ver problemas, pero de todos modos no debes tener m&amp;aacute;s de 2000 piezas de informaci&amp;oacute;n en una p&amp;aacute;gina. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto puede ser cierto, pero no todos los enlaces de datos son visibles para el usuario. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una vez que comience a construir cualquier tipo de widget o cuadr&amp;iacute;cula de datos con enlace bidireccional, puede &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;alcanzar &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;f&amp;aacute;cilmente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2000 enlaces, sin tener una mala experiencia de usuario.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37fbc5e79c6734b14dad81b7d685ccc6893e71b0" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, &lt;strong&gt;AngularJS&lt;/strong&gt; uses &lt;code&gt;ng-model&lt;/code&gt; to listen and watch what happens on HTML elements, especially on &lt;code&gt;input&lt;/code&gt; fields. When something happens, do something. In our case, &lt;code&gt;ng-model&lt;/code&gt; is bind to our view, using the mustache notation &lt;code&gt;{{}}&lt;/code&gt;. Whatever is typed inside the input field is displayed on the screen instantly. And that's the beauty of data binding, using AngularJS in its simplest form.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como puede ver en el ejemplo anterior, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para escuchar y observar lo que sucede en los elementos HTML, especialmente en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;input&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; campos de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;entrada&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando algo sucede, haz algo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En nuestro caso, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; vinculado a nuestra vista, usando la notaci&amp;oacute;n de bigote &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que se escriba dentro del campo de entrada se muestra en la pantalla al instante. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y esa es la belleza del enlace de datos, usando AngularJS en su forma m&amp;aacute;s simple.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="737afa2dc7c25184622f10ed905b43a86ad1a089" translate="yes" xml:space="preserve">
          <source>As you can see, every time something changes in an AngularJS app, AngularJS will check every single watcher in the &lt;code&gt;$scope&lt;/code&gt; hierarchy to see how to respond. For a developer this is a massive productivity boon, as you now need to write almost no wiring code, AngularJS will just notice if a value has changed, and make the rest of the app consistent with the change.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como puede ver, cada vez que algo cambia en una aplicaci&amp;oacute;n AngularJS, AngularJS verificar&amp;aacute; a cada observador en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jerarqu&amp;iacute;a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para ver c&amp;oacute;mo responder. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para un desarrollador, esto es una gran ayuda para la productividad, ya que ahora necesita escribir casi ning&amp;uacute;n c&amp;oacute;digo de cableado, AngularJS solo notar&amp;aacute; si un valor ha cambiado y har&amp;aacute; que el resto de la aplicaci&amp;oacute;n sea consistente con el cambio.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a79d468ad5e9c27dc450d53ed835dd90ea4fe4a0" translate="yes" xml:space="preserve">
          <source>At the end of the &lt;code&gt;$apply&lt;/code&gt; the &lt;code&gt;$digest&lt;/code&gt; method is invoked which goes
through each of the watches and checks to see if they changed since
last time the &lt;code&gt;$digest&lt;/code&gt; ran.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al final de la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;eacute;todo se invoca el cual pasa a trav&amp;eacute;s de cada uno de los relojes y controles para ver si han cambiado desde la &amp;uacute;ltima vez que el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; RAN.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcd2eb5356b9b892e7bf902bb23bd9186e6d6799" translate="yes" xml:space="preserve">
          <source>By dirty checking the &lt;code&gt;$scope&lt;/code&gt; object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al comprobar sucia el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0710b2f8c5ca3b1d6e227e2204bcfc446f57738" translate="yes" xml:space="preserve">
          <source>Change coalescence. Suppose you have an array of items. Say you want to add items into an array, as you are looping to add, each time you add you are firing events on change, which is rendering the UI. This is very bad for performance. What you want is to update the UI only once, at the end. The change events are too fine-grained.</source>
          <target state="translated">Cambiar la coalescencia.Supongamos que tienes una serie de artículos.Digamos que quieres añadir elementos a un array,ya que estás haciendo un bucle para añadirlos,cada vez que los añades estás disparando eventos sobre el cambio,lo que está renderizando la interfaz de usuario.Esto es muy malo para el rendimiento.Lo que quieres es actualizar la interfaz de usuario una sola vez,al final.Los eventos de cambio son demasiado finos.</target>
        </trans-unit>
        <trans-unit id="77c891a95974122552c0d70ba96a05fea9fafba4" translate="yes" xml:space="preserve">
          <source>Change listeners fire immediately on a setter, which is a problem, since the change listener can further change data, which fires more change events. This is bad since on your stack you may have several change events happening at once. Suppose you have two arrays which need to be kept in sync for whatever reason. You can only add to one or the other, but each time you add you fire a change event, which now has an inconsistent view of the world. This is a very similar problem to thread locking, which JavaScript avoids since each callback executes exclusively and to completion. Change events break this since setters can have far-reaching consequences which are not intended and non obvious, which creates the thread problem all over again. It turns out that what you want to do is to delay the listener execution, and guarantee, that only one listener runs at a time, hence any code is free to change data, and it knows that no other code runs while it is doing so.</source>
          <target state="translated">Los oyentes de cambio disparan inmediatamente sobre un setter,lo cual es un problema,ya que el oyente de cambio puede cambiar más datos,lo cual dispara más eventos de cambio.Esto es malo ya que en su pila puede tener varios eventos de cambio sucediendo a la vez.Supongamos que tienes dos matrices que necesitan mantenerse en sincronía por cualquier razón.Sólo puedes añadir una o la otra,pero cada vez que añades disparas un evento de cambio,que ahora tiene una visión inconsistente del mundo.Este es un problema muy similar al bloqueo de hilos,que JavaScript evita ya que cada llamada se ejecuta exclusivamente y hasta su finalización.Los eventos de cambio rompen esto ya que los fijadores pueden tener consecuencias de gran alcance que no son intencionadas y no obvias,lo que crea el problema del hilo de nuevo.Resulta que lo que se quiere hacer es retrasar la ejecución del oyente,y garantizar,que sólo un oyente se ejecuta a la vez,por lo tanto cualquier código es libre de cambiar los datos,y sabe que ningún otro código se ejecuta mientras lo hace.</target>
        </trans-unit>
        <trans-unit id="aa1e7dcbb0597e8ac8563615ae3d1825d9496839" translate="yes" xml:space="preserve">
          <source>Changes to watched items must be made within a block of code
wrapped by the &lt;code&gt;$apply&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los cambios en los elementos vistos deben realizarse dentro de un bloque de c&amp;oacute;digo envuelto por el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b536777ff175ae7f0dadd5ccfd9e78c00761a19e" translate="yes" xml:space="preserve">
          <source>Conclusions</source>
          <target state="translated">Conclusions</target>
        </trans-unit>
        <trans-unit id="04738af7725b2e98757c86e363c8914ab552c47c" translate="yes" xml:space="preserve">
          <source>Consider, for example, a combo box where you can type text to filter the available options. This sort of control could have ~150 items and still be highly usable. If it has some extra feature (for example a specific class on the currently selected option) you start to get 3-5 bindings per option. Put three of these widgets on a page (e.g. one to select a country, the other to select a city in the said country, and the third to select a hotel) and you are somewhere between 1000 and 2000 bindings already.</source>
          <target state="translated">Considere,por ejemplo,un cuadro combinado en el que pueda escribir texto para filtrar las opciones disponibles.Este tipo de control podría tener ~150 elementos y aún así ser altamente utilizable.Si tiene alguna característica extra (por ejemplo,una clase específica en la opción actualmente seleccionada)empiezas a obtener de 3 a 5 enlaces por opción.Pon tres de estos widgets en una página (por ejemplo,uno para seleccionar un país,otro para seleccionar una ciudad en dicho país,y el tercero para seleccionar un hotel)y ya tienes entre 1000 y 2000 encuadernaciones.</target>
        </trans-unit>
        <trans-unit id="38c9337e102844fbe073028e31a3f03dfd28fcd6" translate="yes" xml:space="preserve">
          <source>Data binding lets you treat the model as the single-source-of-truth in your application. The view is a projection of the model at all times. If the model is changed, the view reflects the change and vice versa.</source>
          <target state="translated">La vinculación de datos le permite tratar el modelo como la única fuente de verdad en su aplicación.La vista es una proyección del modelo en todo momento.Si se cambia el modelo,la vista refleja el cambio y viceversa.</target>
        </trans-unit>
        <trans-unit id="41d6ccf94599c075293f64da897cc14ce18c72a7" translate="yes" xml:space="preserve">
          <source>Data-Binding needs a mapping</source>
          <target state="translated">Data-Binding necesita un mapeo</target>
        </trans-unit>
        <trans-unit id="53cfd605042a9685d0d23f950654e2d90a38e47f" translate="yes" xml:space="preserve">
          <source>Data-binding in Angular apps is the automatic synchronisation of data between the model and view components.</source>
          <target state="translated">La unión de datos en aplicaciones angulares es la sincronización automática de datos entre el modelo y los componentes de la vista.</target>
        </trans-unit>
        <trans-unit id="5934654605974e05a5cca46342e4add1e6e8bca2" translate="yes" xml:space="preserve">
          <source>Digest cycle function:</source>
          <target state="translated">Función del ciclo de digestión:</target>
        </trans-unit>
        <trans-unit id="67bdd0d045b9621fed41646eae45fdacd100225f" translate="yes" xml:space="preserve">
          <source>Digest cycle is called automatically triggered as part of angular js built in directives/services like ng-model , ng-bind , $timeout, ng-click and others.. that let you trigger the digest cycle.</source>
          <target state="translated">El ciclo de digestión se llama automáticamente disparado como parte de los servicios de dirección incorporados como ng-model,ng-bind,$timeout,ng-click y otros...que te permiten disparar el ciclo de digestión.</target>
        </trans-unit>
        <trans-unit id="edf2df3cebeb7068c67f0f8fcf259a256e8d43b4" translate="yes" xml:space="preserve">
          <source>Each time your user interacts with your app, every single watcher in your app will be evaluated at least once. A big part of optimising an AngularJS app is reducing the number of watchers in your &lt;code&gt;$scope&lt;/code&gt; tree. One easy way to do this is with &lt;em&gt;one time binding&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada vez que su usuario interact&amp;uacute;a con su aplicaci&amp;oacute;n, cada observador en su aplicaci&amp;oacute;n ser&amp;aacute; evaluado al menos una vez. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una gran parte de la optimizaci&amp;oacute;n de una aplicaci&amp;oacute;n AngularJS es reducir la cantidad de observadores en su &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;aacute;rbol de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una manera f&amp;aacute;cil de hacer esto es con &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un enlace &amp;uacute;nico&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c05d40154f2b4c392454198d496e63c5efbde51" translate="yes" xml:space="preserve">
          <source>Each watcher is an &lt;code&gt;object&lt;/code&gt; that contains among other things</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada observador es un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que contiene entre otras cosas&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="08048692776861edadc2dbcb23494dab4e7cab0f" translate="yes" xml:space="preserve">
          <source>Events leads to $digest()</source>
          <target state="translated">Los eventos llevan a $digest()</target>
        </trans-unit>
        <trans-unit id="1999f5595c55decba8e973c1baa963538f547a35" translate="yes" xml:space="preserve">
          <source>Every scope is traversed and every watch expression evaluated and checked against the last value.</source>
          <target state="translated">Se atraviesa cada visor y se evalúa cada expresión del reloj y se compara con el último valor.</target>
        </trans-unit>
        <trans-unit id="3fde00899391e695c237589b8f69f3b46e5c7578" translate="yes" xml:space="preserve">
          <source>Explaining with Pictures :</source>
          <target state="translated">Explicando con fotos :</target>
        </trans-unit>
        <trans-unit id="24e795a953c3ca2043687acd912052593a9b0ba7" translate="yes" xml:space="preserve">
          <source>First one is a watcher function which just returns the object or we can just add an expression.</source>
          <target state="translated">La primera es una función de observación que sólo devuelve el objeto o podemos añadir una expresión.</target>
        </trans-unit>
        <trans-unit id="f5db049bbbb9e77f2e7abb9fa13d29e74b53f616" translate="yes" xml:space="preserve">
          <source>For example if the model had something like:</source>
          <target state="translated">Por ejemplo,si la modelo tuviera algo como:</target>
        </trans-unit>
        <trans-unit id="a26ff29486dd859efb930e73cff198672e8c1db8" translate="yes" xml:space="preserve">
          <source>From the perspective of the machine though this is wildly inefficient and will slow our app down if we create too many watchers. Misko has quoted a figure of about 4000 watchers before your app will feel slow on older browsers.</source>
          <target state="translated">Desde la perspectiva de la máquina,aunque esto es muy ineficiente y ralentizará nuestra aplicación si creamos demasiados observadores.Misko ha citado una cifra de unos 4000 observadores antes de que su aplicación se sienta lenta en los navegadores más antiguos.</target>
        </trans-unit>
        <trans-unit id="6b5d848557beff3ca27b16e316546c260f2f5158" translate="yes" xml:space="preserve">
          <source>Here if you want to use input &lt;code&gt;name&lt;/code&gt; in the controller then,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute;, si desea utilizar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; entrada &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en el controlador,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abf84c6c85867c652efadb878febf74268cb94de" translate="yes" xml:space="preserve">
          <source>Here in above example whatever input user will give, It will be visible in &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute;, en el ejemplo anterior, cualquier entrada que d&amp;eacute; el usuario, ser&amp;aacute; visible en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;etiqueta &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e61aa1cba9e6c9aeb8141c1c1d1742560bba644d" translate="yes" xml:space="preserve">
          <source>Here is an example of data binding with AngularJS, using an input field. I will explain later</source>
          <target state="translated">Aquí hay un ejemplo de enlace de datos con AngularJS,usando un campo de entrada.Lo explicaré más tarde</target>
        </trans-unit>
        <trans-unit id="1aaba0345af07c860b35fb4c80fc9c3aad3a3673" translate="yes" xml:space="preserve">
          <source>Here, when you modify the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, you touch the &lt;strong&gt;data-ref3&lt;/strong&gt;. And the classic data-bind mecanism will change &lt;strong&gt;data-ref4&lt;/strong&gt;. So how the other &lt;code&gt;{{data}}&lt;/code&gt; expressions will move ?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute;, cuando modifica el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , toca el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data-ref3&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y el mecanismo cl&amp;aacute;sico de enlace de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;datos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cambiar&amp;aacute; &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;data-ref4&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;c&amp;oacute;mo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se mover&amp;aacute;n &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;las otras &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresiones &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{data}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">Espero que esto ayude.</target>
        </trans-unit>
        <trans-unit id="72856d6ab746c0e7dce884ff804eef9218f95f83" translate="yes" xml:space="preserve">
          <source>How does data binding work in AngularJS</source>
          <target state="translated">¿Cómo funciona la unión de datos en AngularJS</target>
        </trans-unit>
        <trans-unit id="811938083dc4a1506a5fffbb7dcd3afefd093cb8" translate="yes" xml:space="preserve">
          <source>How does data binding work in the &lt;code&gt;AngularJS&lt;/code&gt; framework?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo funciona el enlace de datos en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;marco &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4092cb5028284c4f70ad111654a59eae29e5aeb" translate="yes" xml:space="preserve">
          <source>How to avoid creating too many watchers</source>
          <target state="translated">Cómo evitar crear demasiados observadores</target>
        </trans-unit>
        <trans-unit id="ab2ba6105e0812e7f41747d9629bf67642b2443b" translate="yes" xml:space="preserve">
          <source>How watchers are defined</source>
          <target state="translated">Cómo se definen los observadores</target>
        </trans-unit>
        <trans-unit id="100f16b029687f5c04393f39efd21cce04a9d408" translate="yes" xml:space="preserve">
          <source>Humans are:</source>
          <target state="translated">Los humanos lo son:</target>
        </trans-unit>
        <trans-unit id="f771cf38309d8e303737f960b8e1ee9d5fa25d29" translate="yes" xml:space="preserve">
          <source>I find this to be a &lt;strong&gt;huge&lt;/strong&gt; problem when working with AngularJS, and the only solution I've been able to find so far is to construct widgets without using two-way binding, instead of using ngOnce, deregistering watchers and similar tricks, or construct directives which build the DOM with jQuery and DOM manipulation. I feel this defeats the purpose of using Angular in the first place.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Considero que este es un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;gran&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; problema cuando trabajo con AngularJS, y la &amp;uacute;nica soluci&amp;oacute;n que he podido encontrar hasta ahora es construir widgets sin usar enlace bidireccional, en lugar de usar ngOnce, cancelar el registro de observadores y trucos similares, o construir directivas que construyen el DOM con jQuery y la manipulaci&amp;oacute;n del DOM. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Siento que esto derrota el prop&amp;oacute;sito de usar Angular en primer lugar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cce5ace8b3744fb015ccf880633cfe7cc6b5814" translate="yes" xml:space="preserve">
          <source>I found that there are &lt;a href=&quot;https://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers&quot;&gt;JavaScript watchers&lt;/a&gt; that may do this work. But they are not supported in &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;6&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;7&lt;/a&gt;. So how does AngularJS know that I changed for example the following and reflected this change on a view?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Descubr&amp;iacute; que hay &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;observadores de JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que pueden hacer este trabajo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero no son compatibles con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_6&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 6&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 7&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;c&amp;oacute;mo sabe AngularJS que cambi&amp;eacute;, por ejemplo, lo siguiente y reflej&amp;eacute; este cambio en una vista?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1de9c7f3209ea909ee2644a83f8b7a0597e60b39" translate="yes" xml:space="preserve">
          <source>I haven't found technical details on &lt;a href=&quot;http://angularjs.org&quot;&gt;their site&lt;/a&gt;. It's more or less clear how it works when data is propagated from view to model. But how does AngularJS track changes of model properties without setters and getters?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No he encontrado detalles t&amp;eacute;cnicos en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://angularjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;su sitio&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Est&amp;aacute; m&amp;aacute;s o menos claro c&amp;oacute;mo funciona cuando los datos se propagan de la vista al modelo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero, &amp;iquest;c&amp;oacute;mo realiza AngularJS el seguimiento de los cambios de las propiedades del modelo sin establecedores y captadores?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bb7cb327e6090eec145fd3400cccddf72e28acc" translate="yes" xml:space="preserve">
          <source>I wondered this myself for a while. Without setters how does &lt;code&gt;AngularJS&lt;/code&gt; notice changes to the &lt;code&gt;$scope&lt;/code&gt; object? Does it poll them?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Me lo pregunt&amp;eacute; por un tiempo. Sin setters, &amp;iquest;c&amp;oacute;mo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;notar&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; los&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cambios en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &amp;iquest;Los encuesta?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fd4c7597da7bda76a445582e5711ea629ddaea8" translate="yes" xml:space="preserve">
          <source>I would love to hear suggestions on other ways to handle this, but then maybe I should write my own question. I wanted to put this in a comment, but it turned out to be way too long for that...</source>
          <target state="translated">Me encantaría escuchar sugerencias sobre otras formas de manejar esto,pero entonces tal vez debería escribir mi propia pregunta.Quería poner esto en un comentario,pero resultó ser demasiado largo para que...</target>
        </trans-unit>
        <trans-unit id="c9c6e1411333d79894f31f96b1b2abf469641d9b" translate="yes" xml:space="preserve">
          <source>If a watcher is triggered, the &lt;code&gt;$scope&lt;/code&gt; is dirty</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se activa un observador, el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; sucio&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45bb602373f8c144ed802f1013ba835906212ef9" translate="yes" xml:space="preserve">
          <source>If a watcher is triggered, the app knows something has changed, and the &lt;code&gt;$scope&lt;/code&gt; is marked as dirty.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se activa un observador, la aplicaci&amp;oacute;n sabe que algo ha cambiado y el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se marca como sucio.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9754f028f3820afdf781852e2300bdcd1bd49e5a" translate="yes" xml:space="preserve">
          <source>If any changes are found then the digest is invoked again until all changes stabilize.</source>
          <target state="translated">Si se encuentra algún cambio,se vuelve a invocar el compendio hasta que todos los cambios se estabilicen.</target>
        </trans-unit>
        <trans-unit id="dc49c0ac42bacc60d1fd64ddb061940ef36b5e04" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$digest&lt;/code&gt; is dirty, we execute the entire &lt;code&gt;$digest&lt;/code&gt; cycle again</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; sucio, ejecutamos todo el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ciclo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; nuevamente&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fc6fe8831ed56fa2f83cd2185e8c4d3af21ff79" translate="yes" xml:space="preserve">
          <source>If want to bind input from html to controller:-</source>
          <target state="translated">Si quiere vincular la entrada de html al controlador:-</target>
        </trans-unit>
        <trans-unit id="fc233c384289e4ba733c6143276863ae3e11acf9" translate="yes" xml:space="preserve">
          <source>If we reach the digest limit AngularJS will raise an error in the console:</source>
          <target state="translated">Si llegamos al límite de la digestión,AngularJS levantará un error en la consola:</target>
        </trans-unit>
        <trans-unit id="b182bb47efd5ceffd0f9647d638795a8d4f4ba86" translate="yes" xml:space="preserve">
          <source>If we use JavaScript&amp;rsquo;s &lt;strong&gt;setTimeout()&lt;/strong&gt; function to update a scope model, Angular has no way of knowing what you might change. In this case it&amp;rsquo;s our responsibility to call $apply() manually, which triggers a $digest cycle. Similarly, if you have a directive that sets up a DOM event listener and changes some models inside the handler function, you need to call $apply() to ensure the changes take effect. The big idea of $apply is that we can execute some code that isn't aware of Angular, that code may still change things on the scope. If we wrap that code in $apply , it will take care of calling $digest(). Rough implementation of $apply().</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si usamos la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;setTimeout () de&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para actualizar un modelo de alcance, Angular no tiene forma de saber qu&amp;eacute; puede cambiar. En este caso, es nuestra responsabilidad llamar a $ apply () manualmente, lo que desencadena un ciclo de $ digest. Del mismo modo, si tiene una directiva que configura un detector de eventos DOM y cambia algunos modelos dentro de la funci&amp;oacute;n del controlador, debe llamar a $ apply () para garantizar que los cambios surtan efecto. La gran idea de $ apply es que podemos ejecutar alg&amp;uacute;n c&amp;oacute;digo que no conozca Angular, ese c&amp;oacute;digo a&amp;uacute;n puede cambiar las cosas en el alcance. Si ajustamos ese c&amp;oacute;digo en $ apply, se encargar&amp;aacute; de llamar a $ digest (). Implementaci&amp;oacute;n aproximada de $ apply ().&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="acdee26d7393979df447003717d465f503612861" translate="yes" xml:space="preserve">
          <source>If you have data which will rarely change, you can bind it only once using the :: syntax, like so:</source>
          <target state="translated">Si tienes datos que raramente cambian,puedes unirlos una sola vez usando la sintaxis ::,así:</target>
        </trans-unit>
        <trans-unit id="f2797b9f1ba27fd200e5c9c4c6af64e50a08620b" translate="yes" xml:space="preserve">
          <source>In normal development, data-binding syntax in the HTML tells the AngularJS compiler to create the watches for you and controller methods are run inside &lt;code&gt;$apply&lt;/code&gt; already. So to the application developer it is all transparent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el desarrollo normal, la sintaxis de enlace de datos en el HTML le dice al compilador AngularJS que cree los relojes para usted y los m&amp;eacute;todos del controlador ya se ejecutan dentro de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, para el desarrollador de la aplicaci&amp;oacute;n, todo es transparente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67037b0a8b5a6bff39857e9b537abcdf932d0df1" translate="yes" xml:space="preserve">
          <source>In the previous picture, it will notice that data-ref1 and data-ref2 has changed.</source>
          <target state="translated">En la imagen anterior,notará que data-ref1 y data-ref2 han cambiado.</target>
        </trans-unit>
        <trans-unit id="8a8356ec773654ca4bdbd056cf3d9a35ffe5458b" translate="yes" xml:space="preserve">
          <source>Issues with change listeners:</source>
          <target state="translated">Problemas con los oyentes del cambio:</target>
        </trans-unit>
        <trans-unit id="f3d16a96c54aef7c6ebe0587ea01873f549a3af8" translate="yes" xml:space="preserve">
          <source>It happened that I needed to link a data model of a person with a form, what I did was a direct mapping of the data with the form.</source>
          <target state="translated">Sucedió que necesitaba vincular un modelo de datos de una persona con un formulario,lo que hice fue un mapeo directo de los datos con el formulario.</target>
        </trans-unit>
        <trans-unit id="343562dfa3bd11083e7175cd655a02ac86844311" translate="yes" xml:space="preserve">
          <source>It turns out that video games and GPUs use the dirty-checking approach, specifically because it is consistent. As long as they get over the monitor refresh rate (typically 50-60 Hz, or every 16.6-20 ms), any performance over that is a waste, so you're better off drawing more stuff, than getting FPS higher.</source>
          <target state="translated">Resulta que los videojuegos y las GPU usan el enfoque de &quot;dirty-checking&quot;,específicamente porque es consistente.Mientras superen la frecuencia de actualización del monitor (normalmente 50-60 Hz,o cada 16,6-20 ms),cualquier rendimiento que supere eso es un desperdicio,por lo que es mejor sacar más cosas,que aumentar el FPS.</target>
        </trans-unit>
        <trans-unit id="274f1724f9cedd0714f587c409d9a100538443a6" translate="yes" xml:space="preserve">
          <source>It's a little like the Egg and Chicken. You never know who starts, but hopefully it works most of the time as expected.</source>
          <target state="translated">Es un poco como el Huevo y el Pollo.Nunca se sabe quién empieza,pero esperemos que funcione la mayoría de las veces como se espera.</target>
        </trans-unit>
        <trans-unit id="1525bd60097acc3d807b5139debefd7ba132b0ea" translate="yes" xml:space="preserve">
          <source>Items are watched by passing a function (returning the thing to be
watched) to the &lt;code&gt;$watch&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los elementos se &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pasando una funci&amp;oacute;n (devolviendo lo que se va a ver) al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ watch&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="519ea33e338b0e1bee563a64730e09aa647199f5" translate="yes" xml:space="preserve">
          <source>Means you can access data &lt;strong&gt;View -&amp;gt; Controller&lt;/strong&gt; &amp;amp; &lt;strong&gt;Controller -&amp;gt; View&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Significa que puede acceder a la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vista de&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; datos &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-&amp;gt; Controlador&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;controlador -&amp;gt; Ver&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e33d668c8f945d34b9f05ee30f75c1e4213cde48" translate="yes" xml:space="preserve">
          <source>Misko already gave an excellent description of how the data bindings work, but I would like to add my view on the performance issue with the data binding.</source>
          <target state="translated">Misko ya ha dado una excelente descripción de cómo funcionan los enlaces de datos,pero me gustaría añadir mi opinión sobre el problema de rendimiento con el enlace de datos.</target>
        </trans-unit>
        <trans-unit id="f98f946369ce6e582d4af4e03e409d9f9dc2ef40" translate="yes" xml:space="preserve">
          <source>Note:
$apply() is equal to $rootScope.$digest() this  means the dirty checking starts right from the root or top or the parent scope down to all the child $scopes in the angular js application.</source>
          <target state="translated">Nota:$apply()es igual a $rootScope.$digest()esto significa que el chequeo sucio comienza desde la raíz o la parte superior o el scope padre hasta todos los $scopes hijos en la aplicación js angular.</target>
        </trans-unit>
        <trans-unit id="c93e786087831c4f1fafb334ae9947a471cc20d6" translate="yes" xml:space="preserve">
          <source>Obviously there is no periodic checking of &lt;code&gt;Scope&lt;/code&gt; whether there is any change in the Objects attached to it. Not all the objects attached to scope are watched . Scope prototypically maintains a &lt;strong&gt;$$watchers&lt;/strong&gt; . &lt;code&gt;Scope&lt;/code&gt; only iterates through this &lt;code&gt;$$watchers&lt;/code&gt; when &lt;code&gt;$digest&lt;/code&gt; is called .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Obviamente no hay una comprobaci&amp;oacute;n peri&amp;oacute;dica de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si hay alg&amp;uacute;n cambio en los Objetos adjuntos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No se miran todos los objetos adjuntos al alcance. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Alcance mantiene protot&amp;iacute;picamente un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$$ observadores&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo itera a trav&amp;eacute;s de estos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$$watchers&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se llama a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c86e0e64f0406905129a3f72489210a41131f5c7" translate="yes" xml:space="preserve">
          <source>Or consider a data-grid in a corporate web application. 50 rows per page is not unreasonable, each of which could have 10-20 columns. If you build this with ng-repeats, and/or have information in some cells which uses some bindings, you could be approaching 2000 bindings with this grid alone.</source>
          <target state="translated">O considera una red de datos en una aplicación web corporativa.50 filas por página no es poco razonable,cada una de las cuales podría tener de 10 a 20 columnas.Si construyes esto con ng-repeticiones,y o tienes información en algunas celdas que utiliza algunos enlaces,podrías estar acercándote a 2000 enlaces sólo con esta cuadrícula.</target>
        </trans-unit>
        <trans-unit id="9b8a08e18d95dbfa2c87458daac1a9abc11ba8cb" translate="yes" xml:space="preserve">
          <source>Second one is a listener function which will be called when there is a change in the object. All the things like DOM changes will be implemented in this function.</source>
          <target state="translated">La segunda es una función de escucha que se llamará cuando haya un cambio en el objeto.Todas las cosas como los cambios de DOM serán implementadas en esta función.</target>
        </trans-unit>
        <trans-unit id="3fd1ca72ff9c0211014fb86b642296ec816618c7" translate="yes" xml:space="preserve">
          <source>See a working example here on
&lt;a href=&quot;http://codepen.io/chrisN/pen/YqEmOO&quot;&gt;Codepen&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea un ejemplo de trabajo aqu&amp;iacute; en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://codepen.io/chrisN/pen/YqEmOO&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Codepen&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="693b3d4126317443f94c9a270b3d9ac192e6d991" translate="yes" xml:space="preserve">
          <source>So it is easy to bind data in AngularJs.</source>
          <target state="translated">Por lo tanto,es fácil unir los datos en AngularJs.</target>
        </trans-unit>
        <trans-unit id="c9b7e10aa62d01a0083a0bafbc14a25d628a5a04" translate="yes" xml:space="preserve">
          <source>So it may seem that we are slow, since dirty-checking is inefficient. This is where we need to look at real numbers rather than just have theoretical arguments, but first let's define some constraints.</source>
          <target state="translated">Así que puede parecer que somos lentos,ya que el control sucio es ineficiente.Aquí es donde necesitamos mirar los números reales en lugar de tener sólo argumentos teóricos,pero primero definamos algunas restricciones.</target>
        </trans-unit>
        <trans-unit id="31ff2a053dd930ba998f5931530fbca741e8b5b1" translate="yes" xml:space="preserve">
          <source>So the real question is this: How many comparisons can you do on a browser in 50&amp;nbsp;ms? This is a hard question to answer as many factors come into play, but here is a test case: &lt;a href=&quot;http://jsperf.com/angularjs-digest/6&quot;&gt;http://jsperf.com/angularjs-digest/6&lt;/a&gt; which creates 10,000 watchers. On a modern browser this takes just under 6&amp;nbsp;ms. On &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;8&lt;/a&gt; it takes about 40&amp;nbsp;ms. As you can see, this is not an issue even on slow browsers these days. There is a caveat: The comparisons need to be simple to fit into the time limit... Unfortunately it is way too easy to add a slow comparison into AngularJS, so it is easy to build slow applications when you don't know what you are doing. But we hope to have an answer by providing an instrumentation module, which would show you which are the slow comparisons.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, la verdadera pregunta es esta: &amp;iquest;Cu&amp;aacute;ntas comparaciones puede hacer en un navegador en 50 ms? Esta es una pregunta dif&amp;iacute;cil de responder ya que muchos factores entran en juego, pero aqu&amp;iacute; hay un caso de prueba: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/angularjs-digest/6&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsperf.com/angularjs-digest/6&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que crea 10,000 observadores. En un navegador moderno, esto lleva menos de 6 ms. En &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Internet Explorer 8&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tarda unos 40 ms. Como puede ver, esto no es un problema incluso en navegadores lentos en estos d&amp;iacute;as. Hay una advertencia: las comparaciones deben ser simples para ajustarse al l&amp;iacute;mite de tiempo ... Desafortunadamente, es demasiado f&amp;aacute;cil agregar una comparaci&amp;oacute;n lenta en AngularJS, por lo que es f&amp;aacute;cil crear aplicaciones lentas cuando no sabes qu&amp;eacute; est&amp;aacute;s haciendo. Pero esperamos tener una respuesta al proporcionar un m&amp;oacute;dulo de instrumentaci&amp;oacute;n, que le mostrar&amp;aacute; cu&amp;aacute;les son las comparaciones lentas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="174534c6b3882921f07bb41f7a29c9824d9b171b" translate="yes" xml:space="preserve">
          <source>Thank you.</source>
          <target state="translated">Gracias.</target>
        </trans-unit>
        <trans-unit id="92577ceb7120ac7b142fac481d75199d5e0a53f3" translate="yes" xml:space="preserve">
          <source>That way if you modify the value of the object controller, this will be reflected automatically in the view.</source>
          <target state="translated">De esta manera,si se modifica el valor del controlador del objeto,éste se reflejará automáticamente en la vista.</target>
        </trans-unit>
        <trans-unit id="2003e784c284ddbed19467eee8de2a001cf6b923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$apply()&lt;/code&gt; method, which is what you call when you are transitioning from a non-AngularJS world into an AngularJS world, calls &lt;code&gt;$digest()&lt;/code&gt;. A digest is just plain old dirty-checking. It works on all browsers and is totally predictable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que es lo que llama cuando est&amp;aacute; haciendo la transici&amp;oacute;n de un mundo no AngularJS a un mundo AngularJS, llama a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un resumen es simplemente una vieja verificaci&amp;oacute;n sucia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Funciona en todos los navegadores y es totalmente predecible.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b522c9d331f9c497ebd37172926a4cbfa51cfad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$digest&lt;/code&gt; cycle checks all watchers against their last value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ciclo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; compara a todos los observadores con su &amp;uacute;ltimo valor&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57d293436789127bbfd7b6ac942ebead8614f1b9" translate="yes" xml:space="preserve">
          <source>The above features work in the browsers IE for the mentioned versions also just by making sure your application is angular js application which means you are using the angularjs framework script file referenced in the script tag.</source>
          <target state="translated">Las características anteriores funcionan en los navegadores IE para las versiones mencionadas también sólo asegurándose de que su aplicación es la aplicación angular js,lo que significa que está utilizando el archivo de script del marco de angularjs al que se hace referencia en la etiqueta del script.</target>
        </trans-unit>
        <trans-unit id="468988dca821eab1366620955fd6086c27fd11e1" translate="yes" xml:space="preserve">
          <source>The binding will only be triggered when the containing template is rendered and the data loaded into &lt;code&gt;$scope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El enlace solo se activar&amp;aacute; cuando se represente la plantilla que contiene y los datos se carguen en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15405ba0c4fa31d34c3dffcbf02c552e4ca0b07b" translate="yes" xml:space="preserve">
          <source>The control input of the form:</source>
          <target state="translated">La entrada de control de la forma:</target>
        </trans-unit>
        <trans-unit id="3e6b0df17c0aaea4b70014e68b2e206f24d35edc" translate="yes" xml:space="preserve">
          <source>The data binding can cause performance issues on complex pages.</source>
          <target state="translated">La vinculación de datos puede causar problemas de rendimiento en páginas complejas.</target>
        </trans-unit>
        <trans-unit id="25004e2affdfc42b03e4884351a5cc585b221410" translate="yes" xml:space="preserve">
          <source>The digest is hard on the machine but easy on the developer</source>
          <target state="translated">El resumen es difícil para la máquina pero fácil para el desarrollador.</target>
        </trans-unit>
        <trans-unit id="08cbe99aa8a083947a0b23f9775c4b49f46dc65a" translate="yes" xml:space="preserve">
          <source>The one-way data binding is an approach where a value is taken from the data model and inserted into an HTML element. There is no way to update model from view. It is used in classical template systems. These systems bind data in only one direction.</source>
          <target state="translated">La vinculación de datos unidireccional es un enfoque en el que se toma un valor del modelo de datos y se inserta en un elemento HTML.No hay forma de actualizar el modelo de vista.Se utiliza en los sistemas clásicos de plantillas.Estos sistemas vinculan los datos en una sola dirección.</target>
        </trans-unit>
        <trans-unit id="395b6fe80ec647c86c7ba13a79a819f5b1d4ef1c" translate="yes" xml:space="preserve">
          <source>The other point is that you can understand easily the impact deep of a simple binding on the memory and the CPU. Hopefully Desktops are fat enough to handle this. Mobile phones are not that strong.</source>
          <target state="translated">El otro punto es que se puede entender fácilmente el impacto profundo de una simple unión en la memoria y la CPU.Esperemos que los ordenadores de sobremesa sean lo suficientemente gordos para manejar esto.Los teléfonos móviles no son tan fuertes.</target>
        </trans-unit>
        <trans-unit id="dedae52c9852165a86fa875d38e2c1e75a87ccf1" translate="yes" xml:space="preserve">
          <source>The reference in the scope is not exactly the reference   in the template. When you data-bind two objects, you need a third one that listen to the first and modify the other.</source>
          <target state="translated">La referencia en el ámbito de aplicación no es exactamente la referencia en la plantilla.Cuando encuentras dos objetos,necesitas un tercero que escuche al primero y modifique al otro.</target>
        </trans-unit>
        <trans-unit id="c91a85811c33fbcef6fa8731745c927c0012d820" translate="yes" xml:space="preserve">
          <source>The syntax is atrocious, since browsers do not support it natively. Yes, there are proxies, but they are not semantically correct in all cases, and of course there are no proxies on old browsers. The bottom line is that dirty-checking allows you to do &lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;POJO&lt;/a&gt;, whereas KnockoutJS and Backbone.js force you to inherit from their classes, and access your data through accessors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La sintaxis es atroz, ya que los navegadores no la admiten de forma nativa. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;iacute;, hay proxies, pero no son sem&amp;aacute;nticamente correctos en todos los casos y, por supuesto, no hay proxies en los navegadores antiguos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La conclusi&amp;oacute;n es que la verificaci&amp;oacute;n sucia le permite hacer &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;POJO&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , mientras que KnockoutJS y Backbone.js lo obligan a heredar de sus clases y acceder a sus datos a trav&amp;eacute;s de los accesores.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a43dba51173aab39fa19ef60ae9870ffdf5e18cd" translate="yes" xml:space="preserve">
          <source>The third being an optional parameter which takes in a boolean . If its true , angular deep watches the object &amp;amp; if its false Angular just does a reference watching on the object.
    Rough Implementation of $watch looks like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El tercero es un par&amp;aacute;metro opcional que toma un valor booleano. Si es cierto, angular profundo observa el objeto y si es falso Angular solo hace una observaci&amp;oacute;n de referencia en el objeto. La implementaci&amp;oacute;n aproximada de $ watch se ve as&amp;iacute;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3c98a925e6264735a9cd6c4c03c15427dac1af8" translate="yes" xml:space="preserve">
          <source>There are many different ways of defining a watcher in AngularJS.</source>
          <target state="translated">Hay muchas maneras diferentes de definir a un observador en AngularJS.</target>
        </trans-unit>
        <trans-unit id="8237def3104a80cff7eecee796adaf84abd4fa04" translate="yes" xml:space="preserve">
          <source>There is an interesting thing in Angular called Digest Cycle. The $digest cycle starts as a result of a call to $scope.$digest(). Assume that you change a $scope model in a handler function through the ng-click directive. In that case AngularJS automatically triggers a $digest cycle by calling $digest().In addition to ng-click, there are several other built-in directives/services that let you change models (e.g. ng-model, $timeout, etc) and automatically trigger a $digest cycle.  The rough implementation of $digest looks like this.</source>
          <target state="translated">Hay una cosa interesante en el Angular llamada Ciclo de Digestión.El ciclo de $digesto comienza como resultado de una llamada a $scope.$digesto().Asume que cambias un modelo $scope en una función del manejador a través de la directiva ng-click.En ese caso,AngularJS activa automáticamente un ciclo $digest al llamar a $digest().Además de ng-click,hay otros servicios direccionales incorporados que le permiten cambiar de modelo (por ejemplo,ng-model,$timeout,etc.)y activar automáticamente un ciclo $digest.La implementación aproximada de $digest se ve así.</target>
        </trans-unit>
        <trans-unit id="e2e20ff3c295188e752a47e4f991273ed16c6dfd" translate="yes" xml:space="preserve">
          <source>This function is used to observe changes in a variable on the $scope.
  It accepts three parameters: expression, listener and equality object,
  where listener and equality object are optional parameters.</source>
          <target state="translated">Esta función se utiliza para observar los cambios en una variable del $scope.Acepta tres parámetros:expresión,oyente y objeto de igualdad,donde oyente y objeto de igualdad son parámetros opcionales.</target>
        </trans-unit>
        <trans-unit id="3dd9be14c4e8bc97123d1fd8dc61ae080e1b9123" translate="yes" xml:space="preserve">
          <source>This function iterates through all the watches in the $scope object,
  and its child $scope objects</source>
          <target state="translated">Esta función itera a través de todos los relojes en el objeto $scope,y su hijo $scope objetos</target>
        </trans-unit>
        <trans-unit id="91a26da78200b3aef1cb1945d188957561dfd228" translate="yes" xml:space="preserve">
          <source>This is because AngularJS has two-way binding, so data can be passed back up the &lt;code&gt;$scope&lt;/code&gt; tree. We may change a value on a higher &lt;code&gt;$scope&lt;/code&gt; that has already been digested. Perhaps we change a value on the &lt;code&gt;$rootScope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se debe a que AngularJS tiene un enlace bidireccional, por lo que los datos se pueden volver a pasar al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;aacute;rbol &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podemos cambiar un valor en un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;aacute;s alto &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;que ya ha sido digerido. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Quiz&amp;aacute;s cambiemos un valor en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$rootScope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56940ba3b003c3b9efc4a2d260ce62e5a12c0d89" translate="yes" xml:space="preserve">
          <source>This is especially important when you have an &lt;code&gt;ng-repeat&lt;/code&gt; with many items.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es especialmente importante cuando tienes una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-repeat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con muchos elementos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc2a49f6d92f573bcfe485e392faeba5d9e44a4a" translate="yes" xml:space="preserve">
          <source>This is my basic understanding. It may well be wrong!</source>
          <target state="translated">Este es mi entendimiento básico.¡Puede estar equivocado!</target>
        </trans-unit>
        <trans-unit id="824a36c001af90b4c01a2f8a9b0d6db5c1f42c79" translate="yes" xml:space="preserve">
          <source>This limit is easy to reach if you &lt;code&gt;ng-repeat&lt;/code&gt; over a large &lt;code&gt;JSON&lt;/code&gt;&lt;code&gt;array&lt;/code&gt; for example. You can mitigate against this using features like one-time binding to compile a template without creating watchers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este l&amp;iacute;mite es f&amp;aacute;cil de alcanzar si, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;por ejemplo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-repeat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sobre una gran &lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede mitigar esto usando caracter&amp;iacute;sticas como el enlace &amp;uacute;nico para compilar una plantilla sin crear observadores.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f9698290b18dfcad06dccf0d7af50181f334d2c" translate="yes" xml:space="preserve">
          <source>To contrast dirty-checking (AngularJS) vs change listeners (&lt;a href=&quot;http://en.wikipedia.org/wiki/KnockoutJS&quot;&gt;KnockoutJS&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Backbone.js&quot;&gt;Backbone.js&lt;/a&gt;): While dirty-checking may seem simple, and even inefficient (I will address that later), it turns out that it is semantically correct all the time, while change listeners have lots of weird corner cases and need things like dependency tracking to make it more semantically correct. KnockoutJS dependency tracking is a clever feature for a problem which AngularJS does not have.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para contrastar la verificaci&amp;oacute;n sucia (AngularJS) frente a los oyentes de cambio ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/KnockoutJS&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;KnockoutJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Backbone.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Backbone.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ): Si bien la verificaci&amp;oacute;n sucia puede parecer simple e incluso ineficiente (lo abordar&amp;eacute; m&amp;aacute;s adelante), resulta que es sem&amp;aacute;nticamente correcto todo el tiempo, mientras que los oyentes de cambios tienen muchos casos extra&amp;ntilde;os en las esquinas y necesitan cosas como el seguimiento de dependencias para hacerlo m&amp;aacute;s sem&amp;aacute;nticamente correcto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El seguimiento de dependencia de KnockoutJS es una caracter&amp;iacute;stica inteligente para un problema que AngularJS no tiene.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7badb858f29a6efa2f33f71e4eb4033d92c9cc96" translate="yes" xml:space="preserve">
          <source>Watcher function is called as part of the digest cycle.</source>
          <target state="translated">La función de observador se llama como parte del ciclo de digestión.</target>
        </trans-unit>
        <trans-unit id="8715de0439dc5dc006e1080c1077524c864eb3fc" translate="yes" xml:space="preserve">
          <source>Watcher functions can change other attributes on &lt;code&gt;$scope&lt;/code&gt; or on a parent &lt;code&gt;$scope&lt;/code&gt;. If one &lt;code&gt;$watcher&lt;/code&gt; function has been triggered, we can't guarantee that our other &lt;code&gt;$scope&lt;/code&gt;s are still clean, and so we execute the entire digest cycle again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las funciones de vigilante pueden cambiar otros atributos en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o en un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; primario &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se ha activado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , no podemos garantizar que nuestros otros &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;eacute;n limpios, por lo que ejecutamos todo el ciclo de resumen nuevamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07fcfb61713968827e9ec7c9f565e6d499887b35" translate="yes" xml:space="preserve">
          <source>We continually loop through the &lt;code&gt;$digest&lt;/code&gt; cycle until either the digest cycle comes up clean (all &lt;code&gt;$watch&lt;/code&gt; expressions have the same value as they had in the previous cycle), or we reach the digest limit. By default, this limit is set at 10.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Continuamente recorremos el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ciclo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hasta que el ciclo de resumen salga limpio (todas las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresiones &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tienen el mismo valor que ten&amp;iacute;an en el ciclo anterior), o alcanzamos el l&amp;iacute;mite de resumen. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por defecto, este l&amp;iacute;mite se establece en 10.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99c41154db2ed0f7cd5e6cf93d295fefb4cb0cb8" translate="yes" xml:space="preserve">
          <source>What about performance?</source>
          <target state="translated">¿Qué hay de la actuación?</target>
        </trans-unit>
        <trans-unit id="f6d49eb840ac9b816221044bcd3d3d0b4f2429c7" translate="yes" xml:space="preserve">
          <source>What it actually does is this: Any &quot;normal&quot; place you modify the model was already called from the guts of &lt;code&gt;AngularJS&lt;/code&gt;, so it automatically calls &lt;code&gt;$apply&lt;/code&gt; for you after your code runs. Say your controller has a method that's hooked up to &lt;code&gt;ng-click&lt;/code&gt; on some element. Because &lt;code&gt;AngularJS&lt;/code&gt; wires the calling of that method together for you, it has a chance to do an &lt;code&gt;$apply&lt;/code&gt; in the appropriate place. Likewise, for expressions that appear right in the views, those are executed by &lt;code&gt;AngularJS&lt;/code&gt; so it does the &lt;code&gt;$apply&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que realmente hace es esto: cualquier lugar &quot;normal&quot; en el que modifique el modelo ya fue llamado desde las entra&amp;ntilde;as de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que autom&amp;aacute;ticamente llama a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para usted despu&amp;eacute;s de que se ejecuta su c&amp;oacute;digo. Digamos que su controlador tiene un m&amp;eacute;todo que est&amp;aacute; conectado para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-click&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en alg&amp;uacute;n elemento. Debido a que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; conecta la llamada de ese m&amp;eacute;todo para usted, tiene la oportunidad de hacer una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el lugar apropiado. Del mismo modo, para las expresiones que aparecen en las vistas, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; las ejecuta, por &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b811e7e92d8afabecc4cce05a490306acb550c72" translate="yes" xml:space="preserve">
          <source>When the documentation talks about having to call &lt;code&gt;$apply&lt;/code&gt; manually for code &lt;em&gt;outside of &lt;code&gt;AngularJS&lt;/code&gt;&lt;/em&gt;, it's talking about code which, when run, doesn't stem from &lt;code&gt;AngularJS&lt;/code&gt; itself in the call stack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando la documentaci&amp;oacute;n habla sobre tener que llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; manualmente para el c&amp;oacute;digo &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fuera de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , se trata de c&amp;oacute;digo que, cuando se ejecuta, no proviene de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AngularJS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la pila de llamadas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f128527b9d0415ad5b444d6311a137dbd015bc23" translate="yes" xml:space="preserve">
          <source>When we interact with AngularJS through the normal channels (ng-model, ng-repeat, etc) a digest cycle will be triggered by the directive.</source>
          <target state="translated">Cuando interactuamos con AngularJS a través de los canales normales (ng-modelo,ng-repetición,etc.)un ciclo de digestión será disparado por la directiva.</target>
        </trans-unit>
        <trans-unit id="c389541f2e6d6e735f2fe65334c1314a25636932" translate="yes" xml:space="preserve">
          <source>Whenever the user changes the data in the view , there occurs an update of that change in the scope model, and viceversa.</source>
          <target state="translated">Cada vez que el usuario cambia los datos de la vista,se produce una actualización de ese cambio en el modelo de alcance,y viceversa.</target>
        </trans-unit>
        <trans-unit id="1e49f79840dfeb596c214735bd51aa334175dc26" translate="yes" xml:space="preserve">
          <source>You can ask a directive such as &lt;code&gt;ng-model&lt;/code&gt; to define the watcher for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede pedirle a una directiva como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que defina el observador por usted.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bec541c245d7b7b926dd45128797bb84bae1703" translate="yes" xml:space="preserve">
          <source>You can bind data in &lt;code&gt;ng-model&lt;/code&gt; Like:-</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede enlazar datos en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ng-model&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Me gusta: -&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9926611fef2cbdb7f4ac38d125214c2c8f5120ac" translate="yes" xml:space="preserve">
          <source>You can explicitly &lt;code&gt;$watch&lt;/code&gt; an &lt;code&gt;attribute&lt;/code&gt; on &lt;code&gt;$scope&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede expl&amp;iacute;citamente &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;attribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67e827d680b215290300f8cff935a4a123114bbf" translate="yes" xml:space="preserve">
          <source>You can place a &lt;code&gt;{{}}&lt;/code&gt; interpolation in your template (a watcher will be created for you on the current &lt;code&gt;$scope&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede colocar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{{}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; interpolaci&amp;oacute;n en su plantilla (se crear&amp;aacute; un observador para usted en el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$scope&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; actual &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a804c4b9fc797bd7668b53bb525c54f66da53f64" translate="yes" xml:space="preserve">
          <source>i.e&lt;code&gt;$rootScope.$apply()&lt;/code&gt;</source>
          <target state="translated">i.e&lt;code&gt;$rootScope.$apply()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="5857e7febe3c8593e18cc3737f8b0bea41507946" translate="yes" xml:space="preserve">
          <source>{{expression}} &amp;mdash; In your templates (and anywhere else where there&amp;rsquo;s an expression) or when we define ng-model.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;{{expresi&amp;oacute;n}}: en sus plantillas (y en cualquier otro lugar donde haya una expresi&amp;oacute;n) o cuando definimos ng-model.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
