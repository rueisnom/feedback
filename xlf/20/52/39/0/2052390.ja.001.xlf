<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2052390">
    <body>
      <group id="2052390">
        <trans-unit id="df4c939e0e4b3651f0dbc61d6649c32fb8e8db80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.python.org/dev/peps/pep-3109/&quot;&gt;Valid in Python 2, but not in Python 3&lt;/a&gt; is the following:</source>
          <target state="translated">&lt;a href=&quot;http://www.python.org/dev/peps/pep-3109/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 2では有効ですが、Python 3では無効です&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99c9e6ebcc15344a15f50bd046b256d36a7eb047" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#exception-hierarchy&quot;&gt;Instead, use the most specific Exception constructor that semantically fits your issue&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#exception-hierarchy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに、問題に意味的に適合する最も具体的なExceptionコンストラクタを使用してください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee5bb04f28639460db4f038a51fac322523b4cd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#exception-hierarchy&quot;&gt;Use the most specific Exception constructor that semantically fits your issue&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#exception-hierarchy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題に意味的に適合する最も具体的なExceptionコンストラクターを使用します&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7485fa9767083598119741296bb182bcc4e12bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raise&lt;/code&gt; statement without any arguments re-raises the last exception. 
This is useful if you need to perform some actions after catching the exception and  then want to re-raise it. But if there was no exception before, &lt;code&gt;raise&lt;/code&gt; statement raises  &lt;code&gt;TypeError&lt;/code&gt; Exception.</source>
          <target state="translated">&lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引数のない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;レイズ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメントは、最後の例外を再発生させます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、例外をキャッチした後に何らかのアクションを実行する必要があり、それを再度発生させたい場合に役立ちます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、以前に例外がなかった場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメントは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例外&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;発生させ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="517ccce4ffb138a215652f8b7eaa4bea382bd4d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Read the existing answers first, this is just an addendum.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まず既存の回答を読んでください。これは単なる補遺です。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="71171630217f146b7228d790c00443a745edbe57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&quot;I want to make an error on purpose, so that it would go into the except&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「わざとエラーを出して、それが例外になるようにしたい」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e889ca12f51e9d9baf31bd04b85d278ea42a94dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1. raise exception vs. 2. raise exception (args)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1.例外を発生させるか2.例外を発生させる（引数）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7129f4463280e16894a25ad2244cfadf96c96c93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3.raise&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3.raise&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1539121f83a5f736d7dff570dbb5449d050de845" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4. raise exception (args) from original_exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4. original_exceptionから例外（引数）を発生させる&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a898996bffa55f05c1093352668dfbc478d2641a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DON'T DO THIS&lt;/strong&gt;. Raising a bare &lt;code&gt;Exception&lt;/code&gt; is absolutely &lt;strong&gt;not&lt;/strong&gt; the right thing to do; see &lt;a href=&quot;https://stackoverflow.com/a/24065533&quot;&gt;Aaron Hall's excellent answer&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これをしないでください&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;裸上げる&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;絶対にあり&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行うには正しいこと。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/24065533&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アーロンホールの優れた答えを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b568e41c97fe9be8ca437b300ac360220a68386" translate="yes" xml:space="preserve">
          <source>Again: avoid manually manipulating tracebacks. It's &lt;a href=&quot;https://docs.python.org/2/reference/simple_stmts.html#the-raise-statement&quot;&gt;less efficient&lt;/a&gt; and more error prone. And if you're using threading and &lt;code&gt;sys.exc_info&lt;/code&gt; you may even get the wrong traceback (especially if you're using exception handling for control flow - which I'd personally tend to avoid.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この場合も、手動でトレースバックを操作することは避けてください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはだ&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/reference/simple_stmts.html#the-raise-statement&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あまり効率的で&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、よりエラーが発生しやすいです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、スレッディングと&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.exc_info&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用している場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、誤ったトレースバックが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;発生&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する可能性もあります（特に、制御フローに例外処理を使用している場合-私は個人的には避けがちです）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4764bd00943efae7e6e2620534c1e9dcf85c04ff" translate="yes" xml:space="preserve">
          <source>And more specific catches won't catch the general exception:</source>
          <target state="translated">そして、より具体的なキャッチは一般的な例外をキャッチしません。</target>
        </trans-unit>
        <trans-unit id="ccded380750383789e72f90242bccac32be255f7" translate="yes" xml:space="preserve">
          <source>And we have preserved the whole traceback while modifying the args. Note that this is &lt;strong&gt;not a best practice&lt;/strong&gt; and it is &lt;strong&gt;invalid syntax&lt;/strong&gt; in Python 3 (making keeping compatibility much harder to work around).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引数を変更する間、トレースバック全体を保存しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベストプラクティスで&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なく、&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Python 3の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;無効な構文&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（互換性の維持を回避するのがはるかに困難になります）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="511a83b15d5344223b0bc2f27fbe16c4f99552e3" translate="yes" xml:space="preserve">
          <source>Another way to throw an exceptions is &lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;. You can use assert to verify a condition is being fulfilled if not then it will raise &lt;code&gt;AssertionError&lt;/code&gt;. For more details have a look &lt;a href=&quot;https://www.programiz.com/python-programming/assert-statement&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例外をスローする別の方法は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;assertを使用して、条件が満たされていることを確認できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;満たされていない場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;AssertionError&lt;/code&gt; が発生し&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については見てい&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.programiz.com/python-programming/assert-statement&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こちらを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6c688859b341d18925d0e370a7e379cd9bf7e16" translate="yes" xml:space="preserve">
          <source>Avoid raising a generic &lt;code&gt;Exception&lt;/code&gt;. To catch it, you'll have to catch all other more specific exceptions that subclass it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一般&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;な&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例外&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を発生させないでください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それをキャッチするには、それをサブクラス化する他のすべてのより具体的な例外をキャッチする必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbacc9302993aa10fdd59cbb3ffb2c58a6fb0f9a" translate="yes" xml:space="preserve">
          <source>Be aware:</source>
          <target state="translated">気をつけてください。</target>
        </trans-unit>
        <trans-unit id="944f43c0b9b3fa185dc1c89825ebd6560669321f" translate="yes" xml:space="preserve">
          <source>Be specific in your message, e.g.:</source>
          <target state="translated">メッセージを具体的にしましょう。</target>
        </trans-unit>
        <trans-unit id="177b22544dab1f8eb1d47e93f9159ac19fb26a01" translate="yes" xml:space="preserve">
          <source>Best Practices: &lt;code&gt;except&lt;/code&gt; clause</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベストプラクティス：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;句&lt;/font&gt;&lt;/font&gt; &lt;code&gt;except&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5c3ce276ddcdcd62d74d01d7ec6869b1d3304d1" translate="yes" xml:space="preserve">
          <source>Best Practices: &lt;code&gt;raise&lt;/code&gt; statement</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベストプラクティス：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd6519f52461e41cef947e831149a03ec7a45d20" translate="yes" xml:space="preserve">
          <source>Can't get much more pythonic than this:</source>
          <target state="translated">これ以上のピソニックなことはできない</target>
        </trans-unit>
        <trans-unit id="c25c14cbcf2e9bf92db9dfb3be9445102b3920a4" translate="yes" xml:space="preserve">
          <source>Create your own error types when apropos</source>
          <target state="translated">提示したときに独自のエラータイプを作成する</target>
        </trans-unit>
        <trans-unit id="de9b7bbe068bdad5cd1b20bece11b86a978b2e63" translate="yes" xml:space="preserve">
          <source>Deprecated Methods:</source>
          <target state="translated">非推奨のメソッドです。</target>
        </trans-unit>
        <trans-unit id="a80ba45e7f25a70eac0fffeb5d9d6eef8003382d" translate="yes" xml:space="preserve">
          <source>Don't modify your errors... but if you insist.</source>
          <target state="translated">誤りを修正するな...でもどうしてもというなら</target>
        </trans-unit>
        <trans-unit id="e8b9c181b7c3b254aec032e1fdce7f44cc22e283" translate="yes" xml:space="preserve">
          <source>Don't raise generic exceptions</source>
          <target state="translated">一般的な例外を発生させない</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="306285ceee5e18bcc7559a219c396233d833a803" translate="yes" xml:space="preserve">
          <source>For the common case where you need to throw an exception in response to some unexpected conditions, and that you never intend to catch, but simply to fail fast to enable you to debug from there if it ever happens &amp;mdash; the most logical one seems to be &lt;code&gt;AssertionError&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;予期しない状況に対応して例外をスローする必要があり、キャッチするつもりはないが、単に失敗して、発生した場合にそこからデバッグできるようにするという一般的なケースでは、最も論理的なケースは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e18e3a42b41e2f9e28951fbc96e3b5910395954a" translate="yes" xml:space="preserve">
          <source>How can I raise an exception in Python so that it can later be caught via an &lt;code&gt;except&lt;/code&gt; block?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonで例外を発生させて、後で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;except&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブロックを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;介してキャッチできるようにするにはどうすればよい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aabd2c53f398da784323673a3e2281e1697a36dd" translate="yes" xml:space="preserve">
          <source>How do I manually throw/raise an exception in Python?</source>
          <target state="translated">Python で例外を手動で throwraise するには?</target>
        </trans-unit>
        <trans-unit id="139e0b923209aa03dbb14b4d7d72b023df78f08c" translate="yes" xml:space="preserve">
          <source>I raise Exceptions to warn consumers of my API if they're using it incorrectly:</source>
          <target state="translated">私は例外を発生させて、APIの利用者が間違った使い方をしている場合に警告するようにしています。</target>
        </trans-unit>
        <trans-unit id="994b0bf47d71b1b45a4895fe45e8b571637e5846" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;raise exception (args)&lt;/code&gt;  to raise an exception then the   &lt;code&gt;args&lt;/code&gt; will be printed when you print the exception object - as shown in the example below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;raise exception (args)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て例外を発生&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;させる &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、以下の例に示すように、例外オブジェクトを出力するときに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が出力されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbe63d69e8ca2937532b0d7412abef8c989e49f6" translate="yes" xml:space="preserve">
          <source>If you want to, you can modify what happens with your new raise - e.g. setting new &lt;code&gt;args&lt;/code&gt; for the instance:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要に応じて、新しいレイズで発生することを変更でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。たとえば、インスタンスに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt;&lt;/font&gt; &lt;code&gt;args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ca7ea9faf64d19a5cf998ca0979dbed670622da" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement&quot;&gt;Python 3&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonの3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b72d3f0c11dbb60ac8d713bad9591856b9bfead2" translate="yes" xml:space="preserve">
          <source>In Python 2.5, an actual &lt;code&gt;message&lt;/code&gt; attribute was added to &lt;code&gt;BaseException&lt;/code&gt; in favor of encouraging users to subclass Exceptions and stop using &lt;code&gt;args&lt;/code&gt;, but &lt;a href=&quot;http://www.python.org/dev/peps/pep-0352/#retracted-ideas&quot;&gt;the introduction of &lt;code&gt;message&lt;/code&gt; and the original deprecation of args has been retracted&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonの2.5で、実際の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;message&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性に添加し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サブクラス例外にユーザを促すのに有利なおよび使用を中止&lt;/font&gt;&lt;/font&gt; &lt;code&gt;args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、しかし&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.python.org/dev/peps/pep-0352/#retracted-ideas&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の導入&lt;/font&gt;&lt;/font&gt; &lt;code&gt;message&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;及び引数の元の廃止が後退されています&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33f60a4d76e37548bf5dec7b3890b89ea3289b3b" translate="yes" xml:space="preserve">
          <source>In Python 3, you can chain Exceptions, which preserve tracebacks:</source>
          <target state="translated">Python 3 では、トレースバックを保持する Exception をチェーン化することができます。</target>
        </trans-unit>
        <trans-unit id="389299bc90d7c5bd81b0ddf8de43680045b4ad6f" translate="yes" xml:space="preserve">
          <source>In Python3 there are 4 different syntaxes for rasing exceptions:</source>
          <target state="translated">Python3では、例外をレイジングするための4つの構文があります。</target>
        </trans-unit>
        <trans-unit id="91ca5e94ad9b6a5c9c9dbab07c62b2ad59b49248" translate="yes" xml:space="preserve">
          <source>In all modern versions, this will actually raise a &lt;code&gt;TypeError&lt;/code&gt;, because you're not raising a &lt;code&gt;BaseException&lt;/code&gt; type. If you're not checking for the right exception and don't have a reviewer that's aware of the issue, it could get into production.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての最新バージョンでは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプを発生さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;せないため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、これは実際には&lt;/font&gt;&lt;/font&gt; &lt;code&gt;TypeError&lt;/code&gt; を発生させ&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適切な例外をチェックしておらず、問題を認識しているレビュー担当者がいない場合、本番環境に入る可能性があります。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5dd1bbb745118935b0e199debbccb8c5f85d3c9" translate="yes" xml:space="preserve">
          <source>Just to note: there are times when you DO want to handle generic exceptions. If you're processing a bunch of files and logging your errors, you might want to catch any error that occurs for a file, log it, and continue processing the rest of the files. In that case, a</source>
          <target state="translated">注意しておきたいのは、一般的な例外を処理したい場合があるということです。たくさんのファイルを処理してエラーをログに記録している場合、あるファイルで発生したエラーをキャッチしてログに記録し、残りのファイルの処理を続けたいと思うかもしれません。そのような場合には</target>
        </trans-unit>
        <trans-unit id="0d7175b8f03717f6dd00c68737f30ffd39f327a2" translate="yes" xml:space="preserve">
          <source>Manually raising (throwing) an exception in Python</source>
          <target state="translated">Pythonで手動で例外を発生させる(投げる)</target>
        </trans-unit>
        <trans-unit id="7f49443ba301108da154394d5278936874964984" translate="yes" xml:space="preserve">
          <source>Notice that you can raise exceptions with or without arguments.</source>
          <target state="translated">引数の有無に関わらず例外を発生させることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3a0cffaa08d0c090426e195f8d60fafccb7a667d" translate="yes" xml:space="preserve">
          <source>Only &lt;a href=&quot;https://docs.python.org/2/whatsnew/2.5.html#pep-352-exceptions-as-new-style-classes&quot;&gt;valid in much older versions of Python&lt;/a&gt; (2.4 and lower), you may still see people raising strings:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/whatsnew/2.5.html#pep-352-exceptions-as-new-style-classes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pythonのはるかに古いバージョン&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（2.4以下）で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有効であり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、文字列を発生させる人がいる場合があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad95b4f6f1ee9e3b933d35064da9cfbadbe54939" translate="yes" xml:space="preserve">
          <source>Problem 1: Hiding bugs</source>
          <target state="translated">問題点1:バグを隠す</target>
        </trans-unit>
        <trans-unit id="d4aaa8892a22e2f7431ee83bb1a997d507c6ba22" translate="yes" xml:space="preserve">
          <source>Problem 2: Won't catch</source>
          <target state="translated">問題2:キャッチできない</target>
        </trans-unit>
        <trans-unit id="95e268c7021bfa39c759b3aa1538d18204d5e2f9" translate="yes" xml:space="preserve">
          <source>Python 3, Exception chaining</source>
          <target state="translated">Python 3,例外の連鎖</target>
        </trans-unit>
        <trans-unit id="17cf9434bcabe649c08251da6b3942d8b67eedf8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://docs.python.org/reference/simple_stmts.html#the-raise-statement&quot;&gt;the raise statement docs&lt;/a&gt; for python if you'd like more info.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細について&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/reference/simple_stmts.html#the-raise-statement&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Pythonの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;レイズステートメントのドキュメント&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をご覧ください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec45ffdc6758a6a2f1ee8c4fd7fef368a563b9c4" translate="yes" xml:space="preserve">
          <source>These arguments are accessed by the &lt;code&gt;args&lt;/code&gt; attribute on the &lt;code&gt;Exception&lt;/code&gt; object. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの引数は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によってアクセスされ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7103e90b8a2316bb67c87d0cb8e0f7b4ece17b5b" translate="yes" xml:space="preserve">
          <source>These can easily hide and even get into production code. You want to raise an exception, and doing them will raise an exception, &lt;strong&gt;but not the one intended!&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらは簡単に非表示にでき、製品コードに入る可能性もあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは例外を発生させたいので、それらを実行すると例外&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;発生しますが、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意図したものではありません！&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="746bf22c2e44d59635371ee4007d6c0f5e8ac9fa" translate="yes" xml:space="preserve">
          <source>This is the syntax in Python 2 - note this is not compatible with Python 3:</source>
          <target state="translated">これはPython 2の構文です-Python 3とは互換性がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="9caa38d52cb46a0357caa7a4544d296704f5941d" translate="yes" xml:space="preserve">
          <source>This statement is used to create exception chaining in which an exception that is raised in response to another exception can contain the details of the original exception - as shown in the example below.</source>
          <target state="translated">このステートメントは、以下の例のように、別の例外に応答して発生する例外に元の例外の詳細を含めることができる例外の連鎖を作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4ff1b757ea3401b48eca5d53ac796d8a09daa50b" translate="yes" xml:space="preserve">
          <source>To explain - the &lt;code&gt;sys.exc_info()&lt;/code&gt; returns the type, value, and traceback.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明すると、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はタイプ、値、およびトレースバックを返します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b628b5f7342c3b06eaba0623a9362847aba34739" translate="yes" xml:space="preserve">
          <source>When inside an except clause, you might want to, for example, log that a specific type of error happened, and then re-raise. The best way to do this while preserving the stack trace is to use a bare raise statement. For example:</source>
          <target state="translated">except 句の中では、例えば、特定のタイプのエラーが発生したことをログに記録してから、再レイズしたいと思うかもしれません。スタックトレースを保存しながらこれを行う最良の方法は、ベアレイズ文を使用することです。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="078a61a442f62cfb72e64b8fe7f7e85196b26445" translate="yes" xml:space="preserve">
          <source>You can create your own error types, if you want to indicate something specific is wrong with your application, just subclass the appropriate point in the exception hierarchy:</source>
          <target state="translated">アプリケーションに何か特定の問題があることを示したい場合は、例外階層の適切なポイントをサブクラス化するだけで、独自のエラータイプを作成することができます。</target>
        </trans-unit>
        <trans-unit id="b43e9e3bd7d4914aa8b3da8ecbe2dc5783f9118d" translate="yes" xml:space="preserve">
          <source>You can preserve the stacktrace (and error value) with &lt;code&gt;sys.exc_info()&lt;/code&gt;, but &lt;strong&gt;this is way more error prone&lt;/strong&gt; and &lt;strong&gt;has compatibility problems between Python 2 and 3&lt;/strong&gt;, prefer to use a bare &lt;code&gt;raise&lt;/code&gt; to re-raise.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sys.exc_info（）を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;てスタックトレース（およびエラー値）を保持できますが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはエラーが発生しやすく&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 2と3の間に互換性の問題があります&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。再&lt;/font&gt;&lt;/font&gt; &lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はベアレイズを使用することをお&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;勧め&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ab3acaaeaf10691812f7c362e3f65d699548ed0" translate="yes" xml:space="preserve">
          <source>You should learn the raise statement of python for that.
It should be kept inside the try block.
Example -</source>
          <target state="translated">そのためには python の raise 文を学ぶ必要があります。これはtryブロックの中に入れておく必要があります。例</target>
        </trans-unit>
        <trans-unit id="ceaf3770496da5eab7d671ea0000a9778eac06d6" translate="yes" xml:space="preserve">
          <source>and usage:</source>
          <target state="translated">と使用方法を説明しています。</target>
        </trans-unit>
        <trans-unit id="e061a31b06bd0c8f97a8e314a6ba1bd13ebc4ff3" translate="yes" xml:space="preserve">
          <source>block a good way to do it. You'll still want to &lt;code&gt;raise&lt;/code&gt; specific exceptions so you know what they mean, though.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを行う良い方法をブロックします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたはまだしたいと思う&lt;/font&gt;&lt;/font&gt; &lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは彼らが何を意味するか知っているのでかかわらず、特定の例外を。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a09c420d18e43b21fc50e0a706a2131b39665638" translate="yes" xml:space="preserve">
          <source>exits the program but you might want to know what happened.So you can use this.</source>
          <target state="translated">はプログラムを終了しますが、何が起こったのか知りたいと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="b024f8c2bfa6dbc6442cb571d5d5d6243c0ca744" translate="yes" xml:space="preserve">
          <source>prints</source>
          <target state="translated">prints</target>
        </trans-unit>
        <trans-unit id="b68365a7e6f528192f251d898287a4e3aa6255fc" translate="yes" xml:space="preserve">
          <source>this &lt;em&gt;does&lt;/em&gt; allow changing the error type raised, and</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;発生したエラーの種類を変更すること、および許可します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e79f894fe2389202fb0f50a726a14a44e203c27c" translate="yes" xml:space="preserve">
          <source>this is &lt;em&gt;not&lt;/em&gt; compatible with Python 2.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 2と互換性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9e3a54017fe3b0add22b9e85e9d7c17453fcd79" translate="yes" xml:space="preserve">
          <source>this will print &quot;program exited&quot; to stderr before closing the program.</source>
          <target state="translated">これは、プログラムを閉じる前に標準エラーに &quot;program exited&quot; を表示します。</target>
        </trans-unit>
        <trans-unit id="045316bca7dbebed73c56ca054fc8e4b289989c1" translate="yes" xml:space="preserve">
          <source>which also handily allows an arbitrary number of arguments to be passed to the constructor:</source>
          <target state="translated">これは、コンストラクタに任意の数の引数を渡すこともできます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
