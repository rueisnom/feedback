<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/2052390">
    <body>
      <group id="2052390">
        <trans-unit id="df4c939e0e4b3651f0dbc61d6649c32fb8e8db80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.python.org/dev/peps/pep-3109/&quot;&gt;Valid in Python 2, but not in Python 3&lt;/a&gt; is the following:</source>
          <target state="translated">&lt;a href=&quot;http://www.python.org/dev/peps/pep-3109/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;V&amp;aacute;lido en Python 2, pero no en Python 3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es el siguiente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99c9e6ebcc15344a15f50bd046b256d36a7eb047" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#exception-hierarchy&quot;&gt;Instead, use the most specific Exception constructor that semantically fits your issue&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#exception-hierarchy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En su lugar, use el constructor de excepciones m&amp;aacute;s espec&amp;iacute;fico que se ajuste sem&amp;aacute;nticamente a su problema&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee5bb04f28639460db4f038a51fac322523b4cd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#exception-hierarchy&quot;&gt;Use the most specific Exception constructor that semantically fits your issue&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#exception-hierarchy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use el constructor de excepciones m&amp;aacute;s espec&amp;iacute;fico que se ajuste sem&amp;aacute;nticamente a su problema&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7485fa9767083598119741296bb182bcc4e12bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raise&lt;/code&gt; statement without any arguments re-raises the last exception. 
This is useful if you need to perform some actions after catching the exception and  then want to re-raise it. But if there was no exception before, &lt;code&gt;raise&lt;/code&gt; statement raises  &lt;code&gt;TypeError&lt;/code&gt; Exception.</source>
          <target state="translated">&lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; declaraci&amp;oacute;n sin ning&amp;uacute;n argumento vuelve a plantear la &amp;uacute;ltima excepci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es &amp;uacute;til si necesita realizar algunas acciones despu&amp;eacute;s de detectar la excepci&amp;oacute;n y luego desea volver a subirla. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero si no hubo ninguna excepci&amp;oacute;n antes, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; declaraci&amp;oacute;n aumenta la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;excepci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="517ccce4ffb138a215652f8b7eaa4bea382bd4d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Read the existing answers first, this is just an addendum.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lea las respuestas existentes primero, esto es solo un ap&amp;eacute;ndice.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="71171630217f146b7228d790c00443a745edbe57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&quot;I want to make an error on purpose, so that it would go into the except&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;Quiero cometer un error a prop&amp;oacute;sito, para que entre en la excepci&amp;oacute;n&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e889ca12f51e9d9baf31bd04b85d278ea42a94dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1. raise exception vs. 2. raise exception (args)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1. aumento de excepci&amp;oacute;n vs. 2. aumento de excepci&amp;oacute;n (argumentos)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7129f4463280e16894a25ad2244cfadf96c96c93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3.raise&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3.raise&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1539121f83a5f736d7dff570dbb5449d050de845" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4. raise exception (args) from original_exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4. aumentar la excepci&amp;oacute;n (args) de original_exception&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a898996bffa55f05c1093352668dfbc478d2641a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DON'T DO THIS&lt;/strong&gt;. Raising a bare &lt;code&gt;Exception&lt;/code&gt; is absolutely &lt;strong&gt;not&lt;/strong&gt; the right thing to do; see &lt;a href=&quot;https://stackoverflow.com/a/24065533&quot;&gt;Aaron Hall's excellent answer&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO HAGAS ESTO&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Criar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; desnuda &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es absolutamente &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lo&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; correcto; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/24065533&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la excelente respuesta de Aaron Hall en su&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b568e41c97fe9be8ca437b300ac360220a68386" translate="yes" xml:space="preserve">
          <source>Again: avoid manually manipulating tracebacks. It's &lt;a href=&quot;https://docs.python.org/2/reference/simple_stmts.html#the-raise-statement&quot;&gt;less efficient&lt;/a&gt; and more error prone. And if you're using threading and &lt;code&gt;sys.exc_info&lt;/code&gt; you may even get the wrong traceback (especially if you're using exception handling for control flow - which I'd personally tend to avoid.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nuevamente: evite manipular manualmente las trazas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/reference/simple_stmts.html#the-raise-statement&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;menos eficiente&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y m&amp;aacute;s propenso a errores. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y si est&amp;aacute; utilizando subprocesos y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.exc_info&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , incluso puede obtener el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rastreo&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; incorrecto (especialmente si est&amp;aacute; utilizando el manejo de excepciones para el flujo de control, lo que personalmente tender&amp;iacute;a a evitar).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4764bd00943efae7e6e2620534c1e9dcf85c04ff" translate="yes" xml:space="preserve">
          <source>And more specific catches won't catch the general exception:</source>
          <target state="translated">Y las capturas más específicas no se acogerán a la excepción general:</target>
        </trans-unit>
        <trans-unit id="ccded380750383789e72f90242bccac32be255f7" translate="yes" xml:space="preserve">
          <source>And we have preserved the whole traceback while modifying the args. Note that this is &lt;strong&gt;not a best practice&lt;/strong&gt; and it is &lt;strong&gt;invalid syntax&lt;/strong&gt; in Python 3 (making keeping compatibility much harder to work around).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y hemos preservado todo el rastreo mientras modificamos los argumentos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que esta &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una pr&amp;aacute;ctica recomendada&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y es una &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sintaxis no v&amp;aacute;lida&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en Python 3 (lo que hace que sea mucho m&amp;aacute;s dif&amp;iacute;cil evitar la compatibilidad).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="511a83b15d5344223b0bc2f27fbe16c4f99552e3" translate="yes" xml:space="preserve">
          <source>Another way to throw an exceptions is &lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt;. You can use assert to verify a condition is being fulfilled if not then it will raise &lt;code&gt;AssertionError&lt;/code&gt;. For more details have a look &lt;a href=&quot;https://www.programiz.com/python-programming/assert-statement&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otra forma de lanzar una excepci&amp;oacute;n es &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar afirmar para verificar que se est&amp;aacute; cumpliendo una condici&amp;oacute;n; de lo contrario, generar&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para m&amp;aacute;s detalles echa un vistazo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.programiz.com/python-programming/assert-statement&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6c688859b341d18925d0e370a7e379cd9bf7e16" translate="yes" xml:space="preserve">
          <source>Avoid raising a generic &lt;code&gt;Exception&lt;/code&gt;. To catch it, you'll have to catch all other more specific exceptions that subclass it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Evite generar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; gen&amp;eacute;rica &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para atraparlo, deber&amp;aacute; atrapar todas las dem&amp;aacute;s excepciones m&amp;aacute;s espec&amp;iacute;ficas que lo subclasifiquen.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbacc9302993aa10fdd59cbb3ffb2c58a6fb0f9a" translate="yes" xml:space="preserve">
          <source>Be aware:</source>
          <target state="translated">Tengan en cuenta:</target>
        </trans-unit>
        <trans-unit id="944f43c0b9b3fa185dc1c89825ebd6560669321f" translate="yes" xml:space="preserve">
          <source>Be specific in your message, e.g.:</source>
          <target state="translated">Sea específico en su mensaje,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="177b22544dab1f8eb1d47e93f9159ac19fb26a01" translate="yes" xml:space="preserve">
          <source>Best Practices: &lt;code&gt;except&lt;/code&gt; clause</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mejores pr&amp;aacute;cticas: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;except&lt;/code&gt; o&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cl&amp;aacute;usula&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5c3ce276ddcdcd62d74d01d7ec6869b1d3304d1" translate="yes" xml:space="preserve">
          <source>Best Practices: &lt;code&gt;raise&lt;/code&gt; statement</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mejores pr&amp;aacute;cticas: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; declaraci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd6519f52461e41cef947e831149a03ec7a45d20" translate="yes" xml:space="preserve">
          <source>Can't get much more pythonic than this:</source>
          <target state="translated">No se puede conseguir mucho más pitónico que esto:</target>
        </trans-unit>
        <trans-unit id="c25c14cbcf2e9bf92db9dfb3be9445102b3920a4" translate="yes" xml:space="preserve">
          <source>Create your own error types when apropos</source>
          <target state="translated">Crear sus propios tipos de error cuando sea necesario</target>
        </trans-unit>
        <trans-unit id="de9b7bbe068bdad5cd1b20bece11b86a978b2e63" translate="yes" xml:space="preserve">
          <source>Deprecated Methods:</source>
          <target state="translated">Métodos desaprobados:</target>
        </trans-unit>
        <trans-unit id="a80ba45e7f25a70eac0fffeb5d9d6eef8003382d" translate="yes" xml:space="preserve">
          <source>Don't modify your errors... but if you insist.</source>
          <target state="translated">No modifique sus errores...pero si insiste.</target>
        </trans-unit>
        <trans-unit id="e8b9c181b7c3b254aec032e1fdce7f44cc22e283" translate="yes" xml:space="preserve">
          <source>Don't raise generic exceptions</source>
          <target state="translated">No plantee excepciones genéricas</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">Ejemplo de uso</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="306285ceee5e18bcc7559a219c396233d833a803" translate="yes" xml:space="preserve">
          <source>For the common case where you need to throw an exception in response to some unexpected conditions, and that you never intend to catch, but simply to fail fast to enable you to debug from there if it ever happens &amp;mdash; the most logical one seems to be &lt;code&gt;AssertionError&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para el caso com&amp;uacute;n en el que necesita lanzar una excepci&amp;oacute;n en respuesta a algunas condiciones inesperadas, y que nunca tiene la intenci&amp;oacute;n de atrapar, sino simplemente fallar r&amp;aacute;pidamente para permitirle depurar desde all&amp;iacute; si alguna vez sucede, la m&amp;aacute;s l&amp;oacute;gica parece ser &lt;/font&gt;&lt;/font&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e18e3a42b41e2f9e28951fbc96e3b5910395954a" translate="yes" xml:space="preserve">
          <source>How can I raise an exception in Python so that it can later be caught via an &lt;code&gt;except&lt;/code&gt; block?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo generar una excepci&amp;oacute;n en Python para que luego pueda detectarse a trav&amp;eacute;s de un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bloque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;except&lt;/code&gt; o&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aabd2c53f398da784323673a3e2281e1697a36dd" translate="yes" xml:space="preserve">
          <source>How do I manually throw/raise an exception in Python?</source>
          <target state="translated">¿Cómo puedo hacer manualmente una excepción en Python?</target>
        </trans-unit>
        <trans-unit id="139e0b923209aa03dbb14b4d7d72b023df78f08c" translate="yes" xml:space="preserve">
          <source>I raise Exceptions to warn consumers of my API if they're using it incorrectly:</source>
          <target state="translated">Hago excepciones para advertir a los consumidores de mi API si lo usan incorrectamente:</target>
        </trans-unit>
        <trans-unit id="994b0bf47d71b1b45a4895fe45e8b571637e5846" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;raise exception (args)&lt;/code&gt;  to raise an exception then the   &lt;code&gt;args&lt;/code&gt; will be printed when you print the exception object - as shown in the example below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si utiliza la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;raise exception (args)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para generar una excepci&amp;oacute;n, los &lt;/font&gt;&lt;/font&gt; &lt;code&gt;args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se imprimir&amp;aacute;n cuando imprima el objeto de excepci&amp;oacute;n, como se muestra en el siguiente ejemplo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbe63d69e8ca2937532b0d7412abef8c989e49f6" translate="yes" xml:space="preserve">
          <source>If you want to, you can modify what happens with your new raise - e.g. setting new &lt;code&gt;args&lt;/code&gt; for the instance:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si lo desea, puede modificar lo que sucede con su nuevo aumento, por ejemplo, establecer nuevos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para la instancia:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ca7ea9faf64d19a5cf998ca0979dbed670622da" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement&quot;&gt;Python 3&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Python 3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b72d3f0c11dbb60ac8d713bad9591856b9bfead2" translate="yes" xml:space="preserve">
          <source>In Python 2.5, an actual &lt;code&gt;message&lt;/code&gt; attribute was added to &lt;code&gt;BaseException&lt;/code&gt; in favor of encouraging users to subclass Exceptions and stop using &lt;code&gt;args&lt;/code&gt;, but &lt;a href=&quot;http://www.python.org/dev/peps/pep-0352/#retracted-ideas&quot;&gt;the introduction of &lt;code&gt;message&lt;/code&gt; and the original deprecation of args has been retracted&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En Python 2.5, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se agreg&amp;oacute; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;message&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; real &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fin&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de alentar a los usuarios a subclasificar Excepciones y dejar de usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.python.org/dev/peps/pep-0352/#retracted-ideas&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la introducci&amp;oacute;n del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;message&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y la desaprobaci&amp;oacute;n original de args se ha retra&amp;iacute;do&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33f60a4d76e37548bf5dec7b3890b89ea3289b3b" translate="yes" xml:space="preserve">
          <source>In Python 3, you can chain Exceptions, which preserve tracebacks:</source>
          <target state="translated">En Python 3,puedes encadenar las Excepciones,que conservan las huellas:</target>
        </trans-unit>
        <trans-unit id="389299bc90d7c5bd81b0ddf8de43680045b4ad6f" translate="yes" xml:space="preserve">
          <source>In Python3 there are 4 different syntaxes for rasing exceptions:</source>
          <target state="translated">En Python3 hay 4 sintaxis diferentes para las excepciones de rasing:</target>
        </trans-unit>
        <trans-unit id="91ca5e94ad9b6a5c9c9dbab07c62b2ad59b49248" translate="yes" xml:space="preserve">
          <source>In all modern versions, this will actually raise a &lt;code&gt;TypeError&lt;/code&gt;, because you're not raising a &lt;code&gt;BaseException&lt;/code&gt; type. If you're not checking for the right exception and don't have a reviewer that's aware of the issue, it could get into production.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En todas las versiones modernas, esto realmente generar&amp;aacute; un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , porque no est&amp;aacute; generando un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no est&amp;aacute; buscando la excepci&amp;oacute;n correcta y no tiene un revisor que conozca el problema, podr&amp;iacute;a entrar en producci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5dd1bbb745118935b0e199debbccb8c5f85d3c9" translate="yes" xml:space="preserve">
          <source>Just to note: there are times when you DO want to handle generic exceptions. If you're processing a bunch of files and logging your errors, you might want to catch any error that occurs for a file, log it, and continue processing the rest of the files. In that case, a</source>
          <target state="translated">Sólo para señalar:hay veces en las que SÍ quieres manejar excepciones genéricas.Si estás procesando un montón de archivos y registrando tus errores,tal vez quieras capturar cualquier error que ocurra en un archivo,registrarlo y continuar procesando el resto de los archivos.En ese caso,un</target>
        </trans-unit>
        <trans-unit id="0d7175b8f03717f6dd00c68737f30ffd39f327a2" translate="yes" xml:space="preserve">
          <source>Manually raising (throwing) an exception in Python</source>
          <target state="translated">Levantando manualmente (lanzando)una excepción en Python</target>
        </trans-unit>
        <trans-unit id="7f49443ba301108da154394d5278936874964984" translate="yes" xml:space="preserve">
          <source>Notice that you can raise exceptions with or without arguments.</source>
          <target state="translated">Fíjese que puede hacer excepciones con o sin argumentos.</target>
        </trans-unit>
        <trans-unit id="3a0cffaa08d0c090426e195f8d60fafccb7a667d" translate="yes" xml:space="preserve">
          <source>Only &lt;a href=&quot;https://docs.python.org/2/whatsnew/2.5.html#pep-352-exceptions-as-new-style-classes&quot;&gt;valid in much older versions of Python&lt;/a&gt; (2.4 and lower), you may still see people raising strings:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/whatsnew/2.5.html#pep-352-exceptions-as-new-style-classes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;v&amp;aacute;lido en versiones mucho m&amp;aacute;s antiguas de Python&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (2.4 y &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;versiones anteriores&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), a&amp;uacute;n puede ver personas elevando cadenas:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad95b4f6f1ee9e3b933d35064da9cfbadbe54939" translate="yes" xml:space="preserve">
          <source>Problem 1: Hiding bugs</source>
          <target state="translated">Problema 1:Esconder los bichos</target>
        </trans-unit>
        <trans-unit id="d4aaa8892a22e2f7431ee83bb1a997d507c6ba22" translate="yes" xml:space="preserve">
          <source>Problem 2: Won't catch</source>
          <target state="translated">Problema 2:No se puede atrapar</target>
        </trans-unit>
        <trans-unit id="95e268c7021bfa39c759b3aa1538d18204d5e2f9" translate="yes" xml:space="preserve">
          <source>Python 3, Exception chaining</source>
          <target state="translated">Python 3,Encadenamiento de excepción</target>
        </trans-unit>
        <trans-unit id="17cf9434bcabe649c08251da6b3942d8b67eedf8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://docs.python.org/reference/simple_stmts.html#the-raise-statement&quot;&gt;the raise statement docs&lt;/a&gt; for python if you'd like more info.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/reference/simple_stmts.html#the-raise-statement&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;los documentos de la declaraci&amp;oacute;n de aumento&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para python si desea obtener m&amp;aacute;s informaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec45ffdc6758a6a2f1ee8c4fd7fef368a563b9c4" translate="yes" xml:space="preserve">
          <source>These arguments are accessed by the &lt;code&gt;args&lt;/code&gt; attribute on the &lt;code&gt;Exception&lt;/code&gt; object. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;args&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; accede a estos argumentos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7103e90b8a2316bb67c87d0cb8e0f7b4ece17b5b" translate="yes" xml:space="preserve">
          <source>These can easily hide and even get into production code. You want to raise an exception, and doing them will raise an exception, &lt;strong&gt;but not the one intended!&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estos pueden esconderse f&amp;aacute;cilmente e incluso entrar en el c&amp;oacute;digo de producci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desea generar una excepci&amp;oacute;n, y al hacerlo, se generar&amp;aacute; una excepci&amp;oacute;n, &amp;iexcl; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pero no la prevista!&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="746bf22c2e44d59635371ee4007d6c0f5e8ac9fa" translate="yes" xml:space="preserve">
          <source>This is the syntax in Python 2 - note this is not compatible with Python 3:</source>
          <target state="translated">Esta es la sintaxis en Python 2-note que esto no es compatible con Python 3:</target>
        </trans-unit>
        <trans-unit id="9caa38d52cb46a0357caa7a4544d296704f5941d" translate="yes" xml:space="preserve">
          <source>This statement is used to create exception chaining in which an exception that is raised in response to another exception can contain the details of the original exception - as shown in the example below.</source>
          <target state="translated">Esta declaración se utiliza para crear un encadenamiento de excepciones en el que una excepción que se plantea en respuesta a otra excepción puede contener los detalles de la excepción original,como se muestra en el ejemplo que figura a continuación.</target>
        </trans-unit>
        <trans-unit id="4ff1b757ea3401b48eca5d53ac796d8a09daa50b" translate="yes" xml:space="preserve">
          <source>To explain - the &lt;code&gt;sys.exc_info()&lt;/code&gt; returns the type, value, and traceback.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para explicar: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devuelve el tipo, el valor y el rastreo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b628b5f7342c3b06eaba0623a9362847aba34739" translate="yes" xml:space="preserve">
          <source>When inside an except clause, you might want to, for example, log that a specific type of error happened, and then re-raise. The best way to do this while preserving the stack trace is to use a bare raise statement. For example:</source>
          <target state="translated">Cuando esté dentro de una cláusula de excepción,podría querer,por ejemplo,registrar que un tipo específico de error ocurrió,y luego volver a subir.La mejor manera de hacer esto mientras se preserva el rastro de la pila es usar una declaración de elevación desnuda.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="078a61a442f62cfb72e64b8fe7f7e85196b26445" translate="yes" xml:space="preserve">
          <source>You can create your own error types, if you want to indicate something specific is wrong with your application, just subclass the appropriate point in the exception hierarchy:</source>
          <target state="translated">Puede crear sus propios tipos de error,si desea indicar que algo específico está mal en su aplicación,sólo tiene que subclasificar el punto apropiado en la jerarquía de excepciones:</target>
        </trans-unit>
        <trans-unit id="b43e9e3bd7d4914aa8b3da8ecbe2dc5783f9118d" translate="yes" xml:space="preserve">
          <source>You can preserve the stacktrace (and error value) with &lt;code&gt;sys.exc_info()&lt;/code&gt;, but &lt;strong&gt;this is way more error prone&lt;/strong&gt; and &lt;strong&gt;has compatibility problems between Python 2 and 3&lt;/strong&gt;, prefer to use a bare &lt;code&gt;raise&lt;/code&gt; to re-raise.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede preservar el stacktrace (y el valor de error) con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esto es mucho m&amp;aacute;s propenso a errores&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tiene problemas de compatibilidad entre Python 2 y 3&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , prefiera usar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; simple &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para volver a subir.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ab3acaaeaf10691812f7c362e3f65d699548ed0" translate="yes" xml:space="preserve">
          <source>You should learn the raise statement of python for that.
It should be kept inside the try block.
Example -</source>
          <target state="translated">Deberías aprender la declaración de aumento de la pitón para eso.Debe mantenerse dentro del bloque de prueba.Ejemplo...</target>
        </trans-unit>
        <trans-unit id="ceaf3770496da5eab7d671ea0000a9778eac06d6" translate="yes" xml:space="preserve">
          <source>and usage:</source>
          <target state="translated">y el uso:</target>
        </trans-unit>
        <trans-unit id="e061a31b06bd0c8f97a8e314a6ba1bd13ebc4ff3" translate="yes" xml:space="preserve">
          <source>block a good way to do it. You'll still want to &lt;code&gt;raise&lt;/code&gt; specific exceptions so you know what they mean, though.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bloquear una buena forma de hacerlo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, a&amp;uacute;n querr&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;raise&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; excepciones espec&amp;iacute;ficas para que sepa lo que significan.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a09c420d18e43b21fc50e0a706a2131b39665638" translate="yes" xml:space="preserve">
          <source>exits the program but you might want to know what happened.So you can use this.</source>
          <target state="translated">sale del programa pero puede que quieras saber lo que pasó.Así que puedes usar esto.</target>
        </trans-unit>
        <trans-unit id="b024f8c2bfa6dbc6442cb571d5d5d6243c0ca744" translate="yes" xml:space="preserve">
          <source>prints</source>
          <target state="translated">prints</target>
        </trans-unit>
        <trans-unit id="b68365a7e6f528192f251d898287a4e3aa6255fc" translate="yes" xml:space="preserve">
          <source>this &lt;em&gt;does&lt;/em&gt; allow changing the error type raised, and</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esto &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; permite cambiar el tipo de error que se generan, y&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e79f894fe2389202fb0f50a726a14a44e203c27c" translate="yes" xml:space="preserve">
          <source>this is &lt;em&gt;not&lt;/em&gt; compatible with Python 2.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;compatible con Python 2.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9e3a54017fe3b0add22b9e85e9d7c17453fcd79" translate="yes" xml:space="preserve">
          <source>this will print &quot;program exited&quot; to stderr before closing the program.</source>
          <target state="translated">esto imprimirá &quot;programa salido&quot; a stderr antes de cerrar el programa.</target>
        </trans-unit>
        <trans-unit id="045316bca7dbebed73c56ca054fc8e4b289989c1" translate="yes" xml:space="preserve">
          <source>which also handily allows an arbitrary number of arguments to be passed to the constructor:</source>
          <target state="translated">que también permite fácilmente pasar un número arbitrario de argumentos al constructor:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
