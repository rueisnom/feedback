<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/201183">
    <body>
      <group id="201183">
        <trans-unit id="d422201f51a81e209559bb1db5e0da07c6517b20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/base.js&quot;&gt;Source code&lt;/a&gt; (including the helper functions, generalType and uniqueArray):
&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/tests/test-base.js&quot;&gt;Unit Test&lt;/a&gt; and &lt;a href=&quot;http://pageforest.googlecode.com/hg/appengine/static/src/js/tests/test-runner.html#base&quot;&gt;Test Runner here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/base.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스 코드&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (헬퍼 함수, generalType 및 uniqueArray 포함) : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/tests/test-base.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Unit Test&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; and &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pageforest.googlecode.com/hg/appengine/static/src/js/tests/test-runner.html#base&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Test Runner here&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75935ce922d2a3772ab7768478f8a8e13aaa8ad6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;JSON.stringify()&lt;/a&gt; works for deep and non-deep both types of objects, not very sure of performance aspects:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.stringify ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 두 가지 유형의 객체 모두에서 딥 및 딥이 아닌 객체에 대해 작동하지만 성능 측면은 확실하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="130fc136bbb8804229578007e60b620a3dca4059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular.equals&lt;/code&gt; - See the &lt;a href=&quot;http://docs.angularjs.org/api/angular.equals&quot;&gt;docs&lt;/a&gt; or &lt;a href=&quot;https://github.com/angular/angular.js/blob/6c59e770084912d2345e7f83f983092a2d305ae3/src/Angular.js#L670&quot;&gt;source&lt;/a&gt; for more on this method. It does a deep compare on arrays too.</source>
          <target state="translated">&lt;code&gt;angular.equals&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 방법에 대한 자세한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.angularjs.org/api/angular.equals&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/angular/angular.js/blob/6c59e770084912d2345e7f83f983092a2d305ae3/src/Angular.js#L670&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열에 대해서도 깊이 비교합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d616314b6e49275e7f07289af7887af8e3695da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assuming that the order of the properties in the object is not changed.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체의 속성 순서가 변경되지 않았다고 가정합니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c41148899f7a79b0e52367560157187080f81e6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6:&lt;/strong&gt; The minimum code I could get it done, is this. It do deep comparison recursively by stringifying all objects, the only limitation is no methods or symbols are compare.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 내가 할 수있는 최소 코드는 이것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 객체를 문자열 화하여 재귀 적으로 심층 비교를 수행하지만 유일한 방법은 비교할 방법이나 기호가 없다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0aa990d7c40383d4083d7824eff0ce8efa3a4cec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;: version 2, using jib's suggestion and ES6 arrow functions:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 버전 2, 지브의 제안 및 ES6 화살표 기능 사용 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1664aea62eb13b77137a5ca0dfd963515c1ffe11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: While this answer will work in many cases, as several people have pointed out in the comments it's problematic for a variety of reasons. In pretty much all cases you'll want to find a more robust solution.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 :이 답변은 많은 경우에 효과가 있지만 여러 사람들이 의견에서 지적했듯이 여러 가지 이유로 문제가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;거의 모든 경우에보다 강력한 솔루션을 찾고 싶을 것입니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="052815ea50d3f7ac9ceed0a151b7d24249d5a175" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simplest&lt;/strong&gt; and &lt;strong&gt;logical&lt;/strong&gt; solutions for comparing everything Like &lt;strong&gt;Object, Array, String, Int...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object, Array, String, Int 등&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 모든 것을 비교할 수있는 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 간단&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;논리적 인&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 솔루션&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="154442026c578bde4bf91577672771cbf7120401" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The long answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;긴 대답&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3ca1d0829015a6a21caa4e5649f4c54d908c0b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The short answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;짧은 대답&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="117325da892f4e34ebca280c275c11f3989aeeca" translate="yes" xml:space="preserve">
          <source>A function that implements this definition of equality:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 동등 정의를 구현하는 함수 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a3343ce56eab4c47b420d306cb822a037d6df0c" translate="yes" xml:space="preserve">
          <source>A simple solution to this issue that many people don't realize is to sort the JSON strings (per character). This is also usually faster than the other solutions mentioned here:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 사람들이 깨닫지 못하는이 문제에 대한 간단한 해결책은 문자별로 JSON 문자열을 정렬하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 일반적으로 여기에 언급 된 다른 솔루션보다 빠릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87a8d1e5f254712f960f4d6c115f25b690949194" translate="yes" xml:space="preserve">
          <source>A strict equality operator will tell you if two object &lt;strong&gt;types&lt;/strong&gt; are equal. However, is there a way to tell if two objects are equal, &lt;strong&gt;much like the hash code&lt;/strong&gt; value in Java?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;엄격한 항등 연산자는 두 객체 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유형&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 같은지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알려줍니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 해시 코드&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 같이&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 두 객체가 동일한 지 알 수있는 방법이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93f1b6742bf696c646d33eb65a0d3154692a9201" translate="yes" xml:space="preserve">
          <source>Also, it's recursive, so it can also check for deep equality, if that's what you call it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 그것은 재귀 적이므로, 그것이 당신이 부르는 것이라면 깊은 평등을 확인할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d12df9b949c4bf605e35cab7117e631709b6570b" translate="yes" xml:space="preserve">
          <source>An object may reference a method that is to be called as an event handler, and this would likely not be considered part of its 'value state'. Whereas another object may well be assigned a function that performs an important calculation and thereby makes this instance different from others simply because it references a different function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체는 이벤트 핸들러로 호출 될 메소드를 참조 할 수 있으며 이는 '값 상태'의 일부로 간주되지 않을 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 객체에는 중요한 계산을 수행하여 단순히 다른 함수를 참조하기 때문에이 인스턴스를 다른 인스턴스와 다르게 만드는 함수가 할당 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d672c90a0834a45b1eeaacfa7147f96ac95f799" translate="yes" xml:space="preserve">
          <source>Another example that returns &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; instead of returning errors:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오류를 반환하는 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 반환하는 또 다른 예는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19bfe63a68a7d33bfb5d996e3b4f92cadb237fd5" translate="yes" xml:space="preserve">
          <source>Another useful thing about this method is you can filter comparisons by passing a &quot;replacer&quot; function to the JSON.stringify functions (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&lt;/a&gt;). The following will only compare all objects keys that are named &quot;derp&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법에 대한 또 다른 유용한 점은 &quot;바꾸기&quot;함수를 JSON.stringify 함수에 전달하여 비교를 필터링 할 수 있다는 것입니다 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON / stringify # Example_of_using_replacer_parameter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 &quot;derp&quot;라는 이름의 모든 객체 키만 비교합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b53c1d41a5759c78ee2b320f2d132bf26a7b1af6" translate="yes" xml:space="preserve">
          <source>Are you trying to test if two objects are the equal? ie: their properties are equal?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 물체가 같은지 테스트하려고합니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 그들의 속성이 동일합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0dc2d4cd771fd05e87df351ac6aede40cfe91919" translate="yes" xml:space="preserve">
          <source>As FOR pointed out, you might have to adapt this for your own purposes, eg: different classes may have different definitions of &quot;equal&quot;. If you're just working with plain objects, the above may suffice, otherwise a custom &lt;code&gt;MyClass.equals()&lt;/code&gt; function may be the way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FOR가 지적한 것처럼, 예를 들어, 다른 클래스는 &quot;동일&quot;의 다른 정의를 가질 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반 객체로 작업하는 경우 위의 것으로 충분할 수 있습니다. 그렇지 않으면 사용자 정의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClass.equals()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수가 도움이 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c61005452385f8bd1840730fb08806a391d1bf4" translate="yes" xml:space="preserve">
          <source>As stated earlier, the exception would be a strictly typeless object. In which case the only sensible choice is an iterative and recursive comparison of each member. Even then one has to ask what is the 'value' of a function?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;앞서 언급했듯이 예외는 엄격하게 유형이없는 객체입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우에 현명한 선택은 각 멤버의 반복적이고 재귀적인 비교입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그럼에도 불구하고 함수의 '가치'가 무엇인지 물어봐야합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0c4c8ac002583533ff6674c083fe94db4c83220" translate="yes" xml:space="preserve">
          <source>Comes in handy in tests (most test frameworks have an &lt;code&gt;is&lt;/code&gt; function). E.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트에 편리합니다 (대부분의 테스트 프레임 워크에는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9e5a40518a875431511860c5d9e95e874e31014" translate="yes" xml:space="preserve">
          <source>Complexity is O(N*N) with N is the number of keys.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;복잡도는 O (N * N)이고 N은 키 수입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="614666f0a7527742ff0e56774d57de0846f19ad3" translate="yes" xml:space="preserve">
          <source>Demo: &lt;a href=&quot;http://jsfiddle.net/CU3vb/3/&quot;&gt;http://jsfiddle.net/CU3vb/3/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데모 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/CU3vb/3/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/CU3vb/3/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2d9e61dfdd0566e4a5c134324d8b75fe38fd9af" translate="yes" xml:space="preserve">
          <source>Ember.js &lt;code&gt;isEqual&lt;/code&gt; - See the &lt;a href=&quot;http://emberjs.com/api/#method_isEqual&quot;&gt;docs&lt;/a&gt; or &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/dfbdbea00bb94f3c1620bd09145540a8bbb8e224/packages/ember-runtime/lib/is-equal.js&quot;&gt;source&lt;/a&gt; for more on this method. It does not do a deep compare on arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ember.js &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - 참고 항목 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://emberjs.com/api/#method_isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/emberjs/ember.js/blob/dfbdbea00bb94f3c1620bd09145540a8bbb8e224/packages/ember-runtime/lib/is-equal.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 방법에 대한 자세한 내용은. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 심층적으로 비교하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="9bf6b914418f6ff5b699882d36b4e76c0165bbbb" translate="yes" xml:space="preserve">
          <source>Firstly sort the two objects by key their key names.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 키 이름을 기준으로 두 개체를 정렬합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e5947c83c30e1a19b642ffa16b6d6098d8bf522" translate="yes" xml:space="preserve">
          <source>For comparing keys for simple key/value pairs object instances, I use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단한 키 / 값 쌍 객체 인스턴스의 키를 비교하기 위해 다음을 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c5bd7b0ace095776ee4b6b5dfd3059ad20f1e805" translate="yes" xml:space="preserve">
          <source>For those of you using NodeJS, there is a convenient method called &lt;code&gt;isDeepStrictEqual&lt;/code&gt; on the native Util library that can achieve this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NodeJS를 사용하는 사람들을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위해 네이티브 Util 라이브러리에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isDeepStrictEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이라는 편리한 메소드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdb53b577aeda6276096be96b953c9f6de0609fc" translate="yes" xml:space="preserve">
          <source>Further complicating things is that in JavaScript the distinction between data and method is blurred.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 복잡한 것은 JavaScript에서 데이터와 메소드의 구별이 흐려진다는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="baa059ac55b3a5589ea7c8841e51d303749963bf" translate="yes" xml:space="preserve">
          <source>Here's a playing card example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;재생 카드 예는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b49d62cac40c4f166746579d98fd2e9560dafb3" translate="yes" xml:space="preserve">
          <source>Heres's a solution in ES6/ES2015 using a functional-style approach:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 기능 스타일 접근 방식을 사용하는 ES6 / ES2015의 솔루션입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32d8802faf36f90d72a5d340e1a53fdbdca81d37" translate="yes" xml:space="preserve">
          <source>How to determine equality for two JavaScript objects</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 JavaScript 객체의 동등성을 결정하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d92b8b9b0b56b28284edbfd97a5a4c71ea1cfa30" translate="yes" xml:space="preserve">
          <source>I don't know if anyone's posted anything similar to this, but here's a function I made to check for object equalities.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 사람이 이와 비슷한 것을 게시했는지는 모르겠지만 객체 평등을 확인하기 위해 만든 기능이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25541bfbd383408f58434a09bb44967257688815" translate="yes" xml:space="preserve">
          <source>I faced the same problem and deccided to write my own solution. But because I want to also compare Arrays with Objects and vice-versa, I crafted a generic solution. I decided to add the functions to the prototype, but one can easily rewrite them to standalone functions. Here is the code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 같은 문제에 직면하여 내 자신의 솔루션을 작성하기로 결정했다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 Arrays와 Objects도 비교하고 싶기 때문에 일반적인 솔루션을 만들었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로토 타입에 함수를 추가하기로 결정했지만 독립형 함수로 쉽게 다시 작성할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="620676ac1f2a40da4c05d22910d2f0c26068b7ed" translate="yes" xml:space="preserve">
          <source>I hope/guess objects I define won't hold more than 1000 properties...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 정의한 객체가 1000 개 이상의 속성을 보유하지 않기를 바랍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="72c1020d591149dffba7f2c4297fa3a18961c774" translate="yes" xml:space="preserve">
          <source>I know this is a bit old, but I would like to add a solution that I came up with for this problem.
I had an object  and I wanted to know when its data changed. &quot;something similar to Object.observe&quot; and what I did was:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 조금 오래되었다는 것을 알고 있지만이 문제에 대해 생각해 낸 해결책을 추가하고 싶습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 객체를 가지고 있었고 데이터가 언제 변경되었는지 알고 싶었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;Object.observe와 비슷한 것&quot;과 내가 한 일은 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0883f0456d3e8799dcde764db81c843dcc4dd20a" translate="yes" xml:space="preserve">
          <source>I see spaghetti code answers.
Without using any third party libs, this is very easy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 스파게티 코드 답변을 참조하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;타사 라이브러리를 사용하지 않으면 매우 쉽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a1ed8709f0cb36a073cbc8520873d0a5cff9592" translate="yes" xml:space="preserve">
          <source>I use this &lt;code&gt;comparable&lt;/code&gt; function to produce copies of my objects that are JSON comparable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;comparable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수를 사용하여 JSON과 비슷한 객체의 사본을 생성합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b332b03edb7d73add355c3fa91804a0f84f41d0" translate="yes" xml:space="preserve">
          <source>I'd advise against hashing or serialization (as the JSON solution suggest).  If you need to test if two objects are equal, then you need to define what equals means.  It could be that all data members in both objects match, or it could be that must the memory locations match (meaning both variables reference the same object in memory), or may be that only one data member in each object must match.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON 솔루션에서 제안한대로 해싱이나 직렬화에 대해 조언합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 객체가 동일한 지 테스트해야하는 경우 동일한 것이 무엇인지 정의해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개체의 모든 데이터 멤버가 일치하거나 메모리 위치가 일치해야하거나 (두 변수가 모두 메모리의 동일한 개체를 참조 함) 각 개체의 데이터 멤버가 하나만 일치해야 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ac338fd648b3ef084c966e05557018ab32e0a89" translate="yes" xml:space="preserve">
          <source>I'm making the following assumptions with this function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기능으로 다음과 같은 가정을하고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6811822354e95921e162ee0b9000eabda79d6902" translate="yes" xml:space="preserve">
          <source>If a difference is caught, strings get logged, making differences spottable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이가 발견되면 문자열이 기록되어 차이를 확인할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b5f5e8bbf5ed9e96e92dffd1ecf50f1cb169a64" translate="yes" xml:space="preserve">
          <source>If this is the case, you'll probably have noticed this situation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우에는 다음과 같은 상황이 발생했을 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efb5c886702935c4ce12a4d3bc9c07efaf9ad546" translate="yes" xml:space="preserve">
          <source>If two objects are different, a MongoDB compatible &lt;code&gt;{$rename:{...}, $unset:{...}, $set:{...}}&lt;/code&gt; like object is returned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 객체가 다른 경우, MongoDB 호환 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{$rename:{...}, $unset:{...}, $set:{...}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 같은 객체가 반환됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29708321ba5aaec34c1a7215a84b07aa3bddff04" translate="yes" xml:space="preserve">
          <source>If you are comparing JSON objects you can use &lt;a href=&quot;https://github.com/mirek/node-rus-diff&quot;&gt;https://github.com/mirek/node-rus-diff&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON 객체를 비교하는 경우 &lt;/font&gt;&lt;a href=&quot;https://github.com/mirek/node-rus-diff&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/mirek/node-rus-diff&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용할 수 있습니다&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90393fa8bdd43cbf52b4b9cc3a69939fe3b3b483" translate="yes" xml:space="preserve">
          <source>If you are using a JSON library, you can encode each object as JSON, then compare the resulting strings for equality.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON 라이브러리를 사용하는 경우 각 객체를 JSON으로 인코딩 한 다음 결과 문자열이 동일한 지 비교할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="afbad5f8a046eb65d172d7051b1ddb9f5c6cc6b4" translate="yes" xml:space="preserve">
          <source>If you are working in &lt;a href=&quot;http://docs.angularjs.org&quot;&gt;AngularJS&lt;/a&gt;, the &lt;code&gt;angular.equals&lt;/code&gt; function will determine if two objects are equal. In &lt;a href=&quot;http://emberjs.com/api/&quot;&gt;Ember.js&lt;/a&gt; use &lt;code&gt;isEqual&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.angularjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작업 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;angular.equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수는 두 객체가 같은지 여부를 결정합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://emberjs.com/api/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ember.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6cb400c64de748532aa8fe2758bdb1f628afec2" translate="yes" xml:space="preserve">
          <source>If you have a deep copy function handy, you can use the following trick to &lt;em&gt;still&lt;/em&gt; use &lt;code&gt;JSON.stringify&lt;/code&gt; while matching the order of properties:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;딥 카피 기능이 편리한 경우 다음 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;순서를 사용하여 속성 순서와 일치하면서 &lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계속&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="075e90365c1c07522501910e3b40364a67c0390e" translate="yes" xml:space="preserve">
          <source>If you require a different equality operator you'll need to add an &lt;code&gt;equals(other)&lt;/code&gt; method, or something like it to your classes and the specifics of your problem domain will determine what exactly that means.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 항등 연산자가 필요한 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;equals(other)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메서드를 클래스에 추가해야하며 문제 도메인의 특성에 따라 정확히 무엇을 의미하는지 결정됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f230fda54d534adc6e4df446991e11b55e4293ee" translate="yes" xml:space="preserve">
          <source>In Node.js, you can use its native &lt;code&gt;require(&quot;assert&quot;).deepStrictEqual&lt;/code&gt;. More info: 
&lt;a href=&quot;http://nodejs.org/api/assert.html&quot;&gt;http://nodejs.org/api/assert.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Node.js에서는 기본 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;require(&quot;assert&quot;).deepStrictEqual&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가 정보 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nodejs.org/api/assert.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://nodejs.org/api/assert.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe48a5c70a6f7c4c6a94ec61cd153febf7ef3d33" translate="yes" xml:space="preserve">
          <source>In that case I defined &quot;equal&quot; as meaning the the id values match.  Given that each instance has a unique id this could be used to enforce the idea that matching objects also occupy the same memory location.  Although that is not necessary.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 id 값이 일치 함을 의미하는 것으로 &quot;같음&quot;을 정의했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 인스턴스에 고유 한 ID가 있으면 일치하는 객체도 동일한 메모리 위치를 차지한다는 아이디어를 적용하는 데 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그럴 필요는 없지만&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0691b66899e23aa3d4aea59975b85e6520536eb" translate="yes" xml:space="preserve">
          <source>In this above case, &lt;code&gt;c&lt;/code&gt; is not really important to determine whether any two instances of MyClass are equal, only &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are important. In some cases &lt;code&gt;c&lt;/code&gt; might vary between instances and yet not be significant during comparison.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 경우, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 MyClass의 두 인스턴스가 동일한 지 여부를 결정하는 데 실제로 중요하지 않으며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 중요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우에 따라 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 인스턴스마다 다를 수 있지만 비교 중에는 중요하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8258ec58264eb0921c797310f548d8b602d664d9" translate="yes" xml:space="preserve">
          <source>It will brute force check each key value - just like the other examples on this page - using &lt;a href=&quot;http://en.wikipedia.org/wiki/ECMAScript#Versions&quot;&gt;ECMAScript&amp;nbsp;5&lt;/a&gt; and native optimizations if they're available in the browser.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 페이지의 다른 예제와 마찬가지로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ECMAScript#Versions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 브라우저에서 사용 가능한 경우 기본 최적화를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 각 키 값을 강제로 검사 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cb20f901fefd383c1d242ee19542c1609444033" translate="yes" xml:space="preserve">
          <source>It's useful to consider two objects equal if they have all the same values for all properties and recursively for all nested objects and arrays.  I also consider the following two objects equal:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 속성이 모든 속성에 대해 동일한 값을 갖고 중첩 된 모든 개체와 배열에 대해 재귀 적으로 동일한 경우 두 개의 개체를 동일하게 고려하는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 다음 두 객체가 같은 것으로 간주합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc34201504cc5166081377b5b96498a67878d000" translate="yes" xml:space="preserve">
          <source>Just wanted to contribute my version of objects comparison utilizing some es6 features. It doesn't take an order into account. After converting all if/else's to ternary I've came with following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 es6 기능을 사용하여 객체 버전 비교에 기여하고 싶었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주문을 고려하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;if / else를 모두 삼항으로 변환 한 후 다음과 같이 제공했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="47c8c9aee02fc7cf827f57dbf1ede0ad0a9a951c" translate="yes" xml:space="preserve">
          <source>Needing a more generic object comparison function than had been posted, I cooked up the following. Critique appreciated...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;게시 된 것보다 더 일반적인 객체 비교 기능이 필요하므로 다음을 요리했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비평가들은 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d24d4b5a369eb9020cd7ee78de6676d60a8db114" translate="yes" xml:space="preserve">
          <source>Note this issue applies when members may themselves also be instances of a type and these each would all be required to have a means of determining equality.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문제는 멤버 자체가 유형의 인스턴스 일 수도 있고 모두 동등성을 결정하는 수단이 필요한 경우에 적용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="e0e0c0e31745b9915640f06ed8b5f58ce68f53d6" translate="yes" xml:space="preserve">
          <source>Note: Previously this answer recommended &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt;, but &lt;a href=&quot;http://lodash.com&quot;&gt;lodash&lt;/a&gt; has done a better job of getting bugs fixed and addressing issues with consistency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 : 이전에는이 ​​답변이 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.js를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 권장 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했지만 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 버그를 수정하고 일관성있는 문제를 해결하는 더 나은 작업을 수행했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cd91d91d61190347de340dda1b9a0bfd5b9b415" translate="yes" xml:space="preserve">
          <source>Obviously that function could do with quite a bit of optimisation, and the ability to do deep checking (to handle nested objects: &lt;code&gt;var a = { foo : { fu : &quot;bar&quot; } }&lt;/code&gt;) but you get the idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분명히 그 기능은 약간의 최적화와 깊게 검사 할 수있는 기능 (중첩 객체 처리 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var a = { foo : { fu : &quot;bar&quot; } }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )과 관련이 있지만 아이디어는 얻습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c259dd5022babfb3a5506b979118e875e3ce4353" translate="yes" xml:space="preserve">
          <source>Once keys are compared, a simple additional &lt;code&gt;for..in&lt;/code&gt; loop is enough.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;키가 비교되면 간단한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;for..in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루프로 충분합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d43a43abf441a7f90425c52eb98bd94ce24e3a32" translate="yes" xml:space="preserve">
          <source>One can call it like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 호출 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49a58e13d9a842b9110b1f0e1757f9dede780a67" translate="yes" xml:space="preserve">
          <source>Rationale:</source>
          <target state="translated">Rationale:</target>
        </trans-unit>
        <trans-unit id="37b77573764cd6d5d483d8c43c8e096f07ba30e6" translate="yes" xml:space="preserve">
          <source>Recently I developed an object whose constructor creates a new id (starting from 1 and incrementing by 1) each time an instance is created.  This object has an isEqual function that compares that id value with the id value of another object and returns true if they match.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최근에는 인스턴스가 생성 될 때마다 생성자가 새 ID를 생성 (1에서 시작하여 1 씩 증가)하는 객체를 개발했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 객체에는 해당 id 값을 다른 객체의 id 값과 비교하고 일치하면 true를 반환하는 isEqual 함수가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3525dcb35efc16cb120bff9914a470cf37ff191" translate="yes" xml:space="preserve">
          <source>See the official documentation from here: &lt;a href=&quot;http://underscorejs.org/#isEqual&quot;&gt;http://underscorejs.org/#isEqual&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에서 공식 문서를 참조하십시오 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://underscorejs.org/#isEqual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbc69581b83927a8f474cd6ebce2465ed785fc17" translate="yes" xml:space="preserve">
          <source>Short functional &lt;code&gt;deepEqual&lt;/code&gt; implementation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;짧은 기능의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;deepEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6bdafed7f2e05a9c430cc0058bbec81f55eef6b" translate="yes" xml:space="preserve">
          <source>Similarly, arrays can have &quot;missing&quot; elements and undefined elements.  I would treat those the same as well:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마찬가지로 배열에는 &quot;누락 된&quot;요소와 정의되지 않은 요소가있을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 그것들도 동일하게 취급 할 것입니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c81edfd008d4c1731ec44ab60d932a907f338782" translate="yes" xml:space="preserve">
          <source>Since the properties of &lt;code&gt;obj1&lt;/code&gt; are copied to the clone one by one, their order in the clone will be preserved. And when the properties of &lt;code&gt;obj2&lt;/code&gt; are copied to the clone, since properties already existing in &lt;code&gt;obj1&lt;/code&gt; will simply be overwritten, their orders in the clone will be preserved.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 속성이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나씩 복제본에 복사되므로 복제본의 순서가 유지됩니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 속성이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;복제본에 복사되면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj1&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이미 존재하는 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 단순히 덮어 쓰기되므로 복제본의 순서가 유지됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92e40bfd5cf1b972d5b743a5a61761a1f2225cb9" translate="yes" xml:space="preserve">
          <source>Stack Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/194846&quot;&gt;Is there any kind of hashCode function in JavaScript?&lt;/a&gt;&lt;/em&gt; is similar to this question, but requires a more academic answer. The scenario above demonstrates why it would be necessary to have one, and I'm wondering if there is any &lt;strong&gt;equivalent solution&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스택 오버플로 질문 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/194846&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript에 해시 코드 함수가 있습니까? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 질문과 비슷하지만보다 학문적 인 답변이 필요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 시나리오는 왜 필요한지 보여 주며 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동등한 솔루션&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 있는지 궁금합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3248ac49043c7d1a8816748bc2b7bdd38a95701b" translate="yes" xml:space="preserve">
          <source>The concept is that of an Equals method that compares two different instances of an object to indicate whether they are equal at a value level. However, it is up to the specific type to define how an &lt;code&gt;Equals&lt;/code&gt; method should be implemented. An iterative comparison of attributes that have primitive values may not be enough, there may well be attributes which are not to be considered part of the object value. For example,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개념은 객체의 두 개의 서로 다른 인스턴스를 비교하여 값 수준에서 동일한 지 여부를 나타내는 Equals 메서드의 개념입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 방법을 정의하는 것은 특정 유형에 달려 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프리미티브 값을 갖는 속성의 반복적 인 비교로는 충분하지 않을 수 있으며, 객체 값의 일부로 간주되지 않는 속성이있을 수도 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5dae3164b37783ade9b11ff3acb22344db75238" translate="yes" xml:space="preserve">
          <source>The default equality operator in JavaScript for Objects yields true when they refer to the same location in memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript for Objects의 기본 항등 연산자는 메모리에서 동일한 위치를 참조 할 때 true를 생성합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f47fc7cc0217e32f8128f8cb6829359ad7f70762" translate="yes" xml:space="preserve">
          <source>The function either returns true or false, in this case true.
The algorithm als allows comparison between very complex objects:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수는 true 또는 false를 반환합니다 (이 경우 true). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;알고리즘은 매우 복잡한 객체를 비교할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c4fb9540b37ba4c6f473dc93528da4bdcca078c" translate="yes" xml:space="preserve">
          <source>The simple answer is: No, there is no generic means to determine that an object is equal to another in the sense you mean. The exception is when you are strictly thinking of an object being typeless.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간단한 대답은 다음과 같습니다. 아니요, 의미가 객체가 다른 객체와 같다는 것을 결정하는 일반적인 방법은 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개체가 유형이 없다고 엄격하게 생각하는 경우는 예외입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9887c1e44990a19a15ca805db7dd0e64078c6d2d" translate="yes" xml:space="preserve">
          <source>The upper example will return true, even tho the properties have a different ordering. One small detail to look out for: This code also checks for the same type of two variables, so &quot;3&quot; is not the same as 3.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예제는 속성이 다른 순서를 갖더라도 true를 반환합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주의해야 할 작은 세부 사항 :이 코드는 동일한 유형의 두 변수를 확인하므로 &quot;3&quot;은 3과 다릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9bc2b512f582f1094f90e407b5398a6a0d03c739" translate="yes" xml:space="preserve">
          <source>Then simply use a string to compare them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 단순히 문자열을 사용하여 비교하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df881162c43f80bfc47bc0e210b19496cec86b50" translate="yes" xml:space="preserve">
          <source>This Algorithm is split into two parts; The equals function itself and a function to find the numeric index of a property in an array / object. The find function is only needed because indexof only finds numbers and strings and no objects .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 알고리즘은 두 부분으로 나뉩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;equals 함수 자체와 배열 / 객체에서 속성의 숫자 인덱스를 찾는 함수입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;findof 함수는 indexof가 숫자와 문자열 만 찾고 개체는 없기 때문에 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="754f106228e194f1279ec0c2c82d2ff928ed3a74" translate="yes" xml:space="preserve">
          <source>This compares for: 1) Equality of number of own properties, 2) Equality of key names, 3) if bCompareValues == true, Equality of corresponding property values and their types (triple equality)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1) 자체 속성 수의 동일성, 2) 키 이름의 동일성, 3) bCompareValues ​​== true 인 경우, 해당 속성 값과 해당 유형의 동일성 (3 중 동등성)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71c2f715419ebeaf9d7d96b150a8a8d110a88340" translate="yes" xml:space="preserve">
          <source>This here can be duplicated and create an other set of arrays to compare the values and keys.
It is very simple because they are now arrays and will return false if objects have different sizes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에서이를 복제하고 다른 배열 집합을 만들어 값과 키를 비교할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것들은 이제 배열이기 때문에 매우 간단하며 객체의 크기가 다른 경우 false를 반환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa46560f12acee3169cd00cd4bd44d11148f1815" translate="yes" xml:space="preserve">
          <source>This is an addition for all the above, not a replacement. If you need to fast shallow-compare objects without need to check extra recursive cases. Here is a shot.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 대체가 아닌 위의 모든 사항에 대한 추가 사항입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가 재귀 사례를 확인할 필요없이 객체를 얕게 비교해야하는 경우. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 총이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9505525e3bdc04fda5bed77005de531d43cb56e" translate="yes" xml:space="preserve">
          <source>This is my version. It is using new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;Object.keys&lt;/a&gt; feature that is introduced in ES5 and ideas/tests from &lt;a href=&quot;https://stackoverflow.com/a/3849480/1414809&quot;&gt;+&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/6713782/1414809&quot;&gt;+&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/5522917/1414809&quot;&gt;+&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 내 버전입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES5에 도입 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keys&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기능과 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/3849480/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/6713782/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/5522917/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+의&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 아이디어 / 테스트를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90ec7ca1035450e2a6f8682ad4006417b0d98196" translate="yes" xml:space="preserve">
          <source>This should be treated as a demonstration of a simple strategy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 간단한 전략의 데모로 취급되어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="792b7493198c3be198997add4b384b829f08681c" translate="yes" xml:space="preserve">
          <source>What about an object that has one of its existing prototype methods overridden by another function? Could it still be considered equal to another instance that it otherwise identical? That question can only be answered in each specific case for each type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기존 프로토 타입 메소드 중 하나가 다른 함수로 대체 된 오브젝트는 어떻습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 인스턴스와 동일한 것으로 간주 될 수 있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 질문은 각 유형에 대한 각 특정 사례에서만 답할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e04a49ef2f49a2ac92317cdbde251081ad8bec35" translate="yes" xml:space="preserve">
          <source>Why reinvent the wheel? Give &lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;Lodash&lt;/a&gt; a try. It has a number of must-have functions such as &lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;isEqual()&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 바퀴를 재발 명합니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부여 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lodash을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시도합니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isEqual ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 같은 많은 필수 함수가 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="512892a6d2cc9a3dfc510df95d685bde807508de" translate="yes" xml:space="preserve">
          <source>You control the objects you are comparing and you only have primitive values (ie. not nested objects, functions, etc.).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비교중인 객체를 제어하고 기본 값만 있습니다 (예 : 중첩 된 객체, 함수 등).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7205aa9b0944c9842020e4e256fcee8da21ce962" translate="yes" xml:space="preserve">
          <source>Your browser has support for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;Object.keys&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;브라우저는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keys&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 지원합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee619071b38ecc7251b25b3efb7ade8477c0785b" translate="yes" xml:space="preserve">
          <source>demo available here</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데모는 여기에서 가능합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c472e218b2a3d97cf9c8918237425bf7f39e1ee9" translate="yes" xml:space="preserve">
          <source>for the object, you have to sort(by key) recursively for both side objects</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체의 경우 양쪽 객체에 대해 키별로 재귀 적으로 정렬해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371bf4463174918cf4efbd1b49aa07e5ff9dfcc7" translate="yes" xml:space="preserve">
          <source>you can use &lt;code&gt;_.isEqual(obj1, obj2)&lt;/code&gt; from the underscore.js library.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;underscore.js 라이브러리에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_.isEqual(obj1, obj2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b13d95866739a1930d09680ea4155d3c01de73bc" translate="yes" xml:space="preserve">
          <source>you might have to do something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이해야 할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1209354b665bb8fe81c2c3efa5bc0a6e92839803" translate="yes" xml:space="preserve">
          <source>you need to replace &lt;code&gt;val1&lt;/code&gt;and &lt;code&gt;val2&lt;/code&gt; with your Object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;val1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;val2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 Object &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 바꿔야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
