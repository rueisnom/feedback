<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/201183">
    <body>
      <group id="201183">
        <trans-unit id="d422201f51a81e209559bb1db5e0da07c6517b20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/base.js&quot;&gt;Source code&lt;/a&gt; (including the helper functions, generalType and uniqueArray):
&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/tests/test-base.js&quot;&gt;Unit Test&lt;/a&gt; and &lt;a href=&quot;http://pageforest.googlecode.com/hg/appengine/static/src/js/tests/test-runner.html#base&quot;&gt;Test Runner here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/base.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;digo fuente&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (incluidas las funciones auxiliares, generalType y uniqueArray): &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/tests/test-base.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Prueba de unidad&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pageforest.googlecode.com/hg/appengine/static/src/js/tests/test-runner.html#base&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Test Runner aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75935ce922d2a3772ab7768478f8a8e13aaa8ad6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;JSON.stringify()&lt;/a&gt; works for deep and non-deep both types of objects, not very sure of performance aspects:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.stringify ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funciona para ambos tipos de objetos profundos y no profundos, no muy seguro de los aspectos de rendimiento:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="130fc136bbb8804229578007e60b620a3dca4059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular.equals&lt;/code&gt; - See the &lt;a href=&quot;http://docs.angularjs.org/api/angular.equals&quot;&gt;docs&lt;/a&gt; or &lt;a href=&quot;https://github.com/angular/angular.js/blob/6c59e770084912d2345e7f83f983092a2d305ae3/src/Angular.js#L670&quot;&gt;source&lt;/a&gt; for more on this method. It does a deep compare on arrays too.</source>
          <target state="translated">&lt;code&gt;angular.equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : consulte los &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.angularjs.org/api/angular.equals&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/angular/angular.js/blob/6c59e770084912d2345e7f83f983092a2d305ae3/src/Angular.js#L670&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fuente&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre este m&amp;eacute;todo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n hace una comparaci&amp;oacute;n profunda en matrices.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d616314b6e49275e7f07289af7887af8e3695da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assuming that the order of the properties in the object is not changed.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Suponiendo que el orden de las propiedades en el objeto no cambia.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c41148899f7a79b0e52367560157187080f81e6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6:&lt;/strong&gt; The minimum code I could get it done, is this. It do deep comparison recursively by stringifying all objects, the only limitation is no methods or symbols are compare.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; El c&amp;oacute;digo m&amp;iacute;nimo que podr&amp;iacute;a hacer, es este. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Realiza una comparaci&amp;oacute;n profunda recursivamente mediante la cadena de todos los objetos, la &amp;uacute;nica limitaci&amp;oacute;n es que no se comparan m&amp;eacute;todos ni s&amp;iacute;mbolos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0aa990d7c40383d4083d7824eff0ce8efa3a4cec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;: version 2, using jib's suggestion and ES6 arrow functions:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Edici&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : versi&amp;oacute;n 2, utilizando la sugerencia de jib y las funciones de flecha ES6:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1664aea62eb13b77137a5ca0dfd963515c1ffe11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: While this answer will work in many cases, as several people have pointed out in the comments it's problematic for a variety of reasons. In pretty much all cases you'll want to find a more robust solution.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NOTA: Si bien esta respuesta funcionar&amp;aacute; en muchos casos, como varias personas han se&amp;ntilde;alado en los comentarios, es problem&amp;aacute;tica por varias razones. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En casi todos los casos, querr&amp;aacute;s encontrar una soluci&amp;oacute;n m&amp;aacute;s robusta.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="052815ea50d3f7ac9ceed0a151b7d24249d5a175" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simplest&lt;/strong&gt; and &lt;strong&gt;logical&lt;/strong&gt; solutions for comparing everything Like &lt;strong&gt;Object, Array, String, Int...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Soluciones &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;aacute;s simples&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;l&amp;oacute;gicas&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para comparar todo, como &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos, matrices, cadenas, int ...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="154442026c578bde4bf91577672771cbf7120401" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The long answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La respuesta larga&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3ca1d0829015a6a21caa4e5649f4c54d908c0b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The short answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La respuesta corta&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="117325da892f4e34ebca280c275c11f3989aeeca" translate="yes" xml:space="preserve">
          <source>A function that implements this definition of equality:</source>
          <target state="translated">Una función que pone en práctica esta definición de igualdad:</target>
        </trans-unit>
        <trans-unit id="8a3343ce56eab4c47b420d306cb822a037d6df0c" translate="yes" xml:space="preserve">
          <source>A simple solution to this issue that many people don't realize is to sort the JSON strings (per character). This is also usually faster than the other solutions mentioned here:</source>
          <target state="translated">Una solución simple a este problema que mucha gente no se da cuenta es clasificar las cuerdas JSON (por personaje).Esto también es usualmente más rápido que las otras soluciones mencionadas aquí:</target>
        </trans-unit>
        <trans-unit id="87a8d1e5f254712f960f4d6c115f25b690949194" translate="yes" xml:space="preserve">
          <source>A strict equality operator will tell you if two object &lt;strong&gt;types&lt;/strong&gt; are equal. However, is there a way to tell if two objects are equal, &lt;strong&gt;much like the hash code&lt;/strong&gt; value in Java?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un operador de igualdad estricta le dir&amp;aacute; si dos &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipos de&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objetos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;son iguales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, &amp;iquest;hay alguna manera de saber si dos objetos son iguales, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;como el&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; valor del &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c&amp;oacute;digo hash&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en Java?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93f1b6742bf696c646d33eb65a0d3154692a9201" translate="yes" xml:space="preserve">
          <source>Also, it's recursive, so it can also check for deep equality, if that's what you call it.</source>
          <target state="translated">Además,es recursivo,por lo que también puede comprobar la igualdad profunda,si así es como lo llamas.</target>
        </trans-unit>
        <trans-unit id="d12df9b949c4bf605e35cab7117e631709b6570b" translate="yes" xml:space="preserve">
          <source>An object may reference a method that is to be called as an event handler, and this would likely not be considered part of its 'value state'. Whereas another object may well be assigned a function that performs an important calculation and thereby makes this instance different from others simply because it references a different function.</source>
          <target state="translated">Un objeto puede hacer referencia a un método que debe ser llamado como un manejador de eventos,y esto probablemente no se consideraría parte de su &quot;estado de valor&quot;.Mientras que a otro objeto puede asignársele una función que realice un cálculo importante y,por lo tanto,hacer que esta instancia sea diferente de las demás simplemente porque hace referencia a una función diferente.</target>
        </trans-unit>
        <trans-unit id="3d672c90a0834a45b1eeaacfa7147f96ac95f799" translate="yes" xml:space="preserve">
          <source>Another example that returns &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; instead of returning errors:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otro ejemplo que devuelve &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de devolver errores:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19bfe63a68a7d33bfb5d996e3b4f92cadb237fd5" translate="yes" xml:space="preserve">
          <source>Another useful thing about this method is you can filter comparisons by passing a &quot;replacer&quot; function to the JSON.stringify functions (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&lt;/a&gt;). The following will only compare all objects keys that are named &quot;derp&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otra cosa &amp;uacute;til sobre este m&amp;eacute;todo es que puede filtrar las comparaciones pasando una funci&amp;oacute;n &quot;reemplazadora&quot; a las funciones JSON.stringify ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON / stringify # Example_of_using_replacer_parameter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo siguiente solo comparar&amp;aacute; todas las claves de objetos que se denominan &quot;derp&quot;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b53c1d41a5759c78ee2b320f2d132bf26a7b1af6" translate="yes" xml:space="preserve">
          <source>Are you trying to test if two objects are the equal? ie: their properties are equal?</source>
          <target state="translated">¿Está tratando de probar si dos objetos son iguales? Es decir:¿sus propiedades son iguales?</target>
        </trans-unit>
        <trans-unit id="0dc2d4cd771fd05e87df351ac6aede40cfe91919" translate="yes" xml:space="preserve">
          <source>As FOR pointed out, you might have to adapt this for your own purposes, eg: different classes may have different definitions of &quot;equal&quot;. If you're just working with plain objects, the above may suffice, otherwise a custom &lt;code&gt;MyClass.equals()&lt;/code&gt; function may be the way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como FOR se&amp;ntilde;al&amp;oacute;, puede que tenga que adaptar esto para sus propios fines, por ejemplo: diferentes clases pueden tener diferentes definiciones de &quot;igual&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si solo est&amp;aacute; trabajando con objetos simples, lo anterior puede ser suficiente, de lo contrario, una funci&amp;oacute;n personalizada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClass.equals()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede ser el camino a seguir.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c61005452385f8bd1840730fb08806a391d1bf4" translate="yes" xml:space="preserve">
          <source>As stated earlier, the exception would be a strictly typeless object. In which case the only sensible choice is an iterative and recursive comparison of each member. Even then one has to ask what is the 'value' of a function?</source>
          <target state="translated">Como ya se ha dicho,la excepción sería un objeto estrictamente no tipificado.En cuyo caso la única opción sensata es una comparación iterativa y recursiva de cada miembro.Incluso entonces hay que preguntarse cuál es el &quot;valor&quot; de una función.</target>
        </trans-unit>
        <trans-unit id="c0c4c8ac002583533ff6674c083fe94db4c83220" translate="yes" xml:space="preserve">
          <source>Comes in handy in tests (most test frameworks have an &lt;code&gt;is&lt;/code&gt; function). E.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es &amp;uacute;til en las pruebas (la mayor&amp;iacute;a de los marcos de prueba tienen una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;P.ej&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9e5a40518a875431511860c5d9e95e874e31014" translate="yes" xml:space="preserve">
          <source>Complexity is O(N*N) with N is the number of keys.</source>
          <target state="translated">La complejidad es O(N*N)con N es el número de teclas.</target>
        </trans-unit>
        <trans-unit id="614666f0a7527742ff0e56774d57de0846f19ad3" translate="yes" xml:space="preserve">
          <source>Demo: &lt;a href=&quot;http://jsfiddle.net/CU3vb/3/&quot;&gt;http://jsfiddle.net/CU3vb/3/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Demostraci&amp;oacute;n: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/CU3vb/3/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/CU3vb/3/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2d9e61dfdd0566e4a5c134324d8b75fe38fd9af" translate="yes" xml:space="preserve">
          <source>Ember.js &lt;code&gt;isEqual&lt;/code&gt; - See the &lt;a href=&quot;http://emberjs.com/api/#method_isEqual&quot;&gt;docs&lt;/a&gt; or &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/dfbdbea00bb94f3c1620bd09145540a8bbb8e224/packages/ember-runtime/lib/is-equal.js&quot;&gt;source&lt;/a&gt; for more on this method. It does not do a deep compare on arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ember.js &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : consulte los &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://emberjs.com/api/#method_isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/emberjs/ember.js/blob/dfbdbea00bb94f3c1620bd09145540a8bbb8e224/packages/ember-runtime/lib/is-equal.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fuente&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre este m&amp;eacute;todo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No hace una comparaci&amp;oacute;n profunda en las matrices.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="9bf6b914418f6ff5b699882d36b4e76c0165bbbb" translate="yes" xml:space="preserve">
          <source>Firstly sort the two objects by key their key names.</source>
          <target state="translated">En primer lugar,clasificar los dos objetos por sus nombres clave.</target>
        </trans-unit>
        <trans-unit id="6e5947c83c30e1a19b642ffa16b6d6098d8bf522" translate="yes" xml:space="preserve">
          <source>For comparing keys for simple key/value pairs object instances, I use:</source>
          <target state="translated">Para comparar las claves de los pares de valores clave simples de los objetos,yo uso:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c5bd7b0ace095776ee4b6b5dfd3059ad20f1e805" translate="yes" xml:space="preserve">
          <source>For those of you using NodeJS, there is a convenient method called &lt;code&gt;isDeepStrictEqual&lt;/code&gt; on the native Util library that can achieve this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para aquellos de ustedes que usan NodeJS, existe un m&amp;eacute;todo conveniente llamado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isDeepStrictEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la biblioteca nativa de Util que puede lograr esto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdb53b577aeda6276096be96b953c9f6de0609fc" translate="yes" xml:space="preserve">
          <source>Further complicating things is that in JavaScript the distinction between data and method is blurred.</source>
          <target state="translated">Lo que complica aún más las cosas es que en JavaScript la distinción entre los datos y el método es borrosa.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">Aquí hay un ejemplo:</target>
        </trans-unit>
        <trans-unit id="baa059ac55b3a5589ea7c8841e51d303749963bf" translate="yes" xml:space="preserve">
          <source>Here's a playing card example:</source>
          <target state="translated">Aquí hay un ejemplo de cartas de juego:</target>
        </trans-unit>
        <trans-unit id="3b49d62cac40c4f166746579d98fd2e9560dafb3" translate="yes" xml:space="preserve">
          <source>Heres's a solution in ES6/ES2015 using a functional-style approach:</source>
          <target state="translated">Heres es una solución en ES6ES2015 usando un enfoque de estilo funcional:</target>
        </trans-unit>
        <trans-unit id="32d8802faf36f90d72a5d340e1a53fdbdca81d37" translate="yes" xml:space="preserve">
          <source>How to determine equality for two JavaScript objects</source>
          <target state="translated">Cómo determinar la igualdad para dos objetos de JavaScript</target>
        </trans-unit>
        <trans-unit id="d92b8b9b0b56b28284edbfd97a5a4c71ea1cfa30" translate="yes" xml:space="preserve">
          <source>I don't know if anyone's posted anything similar to this, but here's a function I made to check for object equalities.</source>
          <target state="translated">No sé si alguien ha publicado algo similar a esto,pero aquí hay una función que hice para comprobar las igualdades de los objetos.</target>
        </trans-unit>
        <trans-unit id="25541bfbd383408f58434a09bb44967257688815" translate="yes" xml:space="preserve">
          <source>I faced the same problem and deccided to write my own solution. But because I want to also compare Arrays with Objects and vice-versa, I crafted a generic solution. I decided to add the functions to the prototype, but one can easily rewrite them to standalone functions. Here is the code:</source>
          <target state="translated">Me enfrenté al mismo problema y decidí escribir mi propia solución.Pero como también quiero comparar los Arreglos con los Objetos y viceversa,elaboré una solución genérica.Decidí agregar las funciones al prototipo,pero uno puede fácilmente reescribirlas a funciones independientes.Aquí está el código:</target>
        </trans-unit>
        <trans-unit id="620676ac1f2a40da4c05d22910d2f0c26068b7ed" translate="yes" xml:space="preserve">
          <source>I hope/guess objects I define won't hold more than 1000 properties...</source>
          <target state="translated">Espero que los objetos que defina no tengan más de 1000 propiedades...</target>
        </trans-unit>
        <trans-unit id="72c1020d591149dffba7f2c4297fa3a18961c774" translate="yes" xml:space="preserve">
          <source>I know this is a bit old, but I would like to add a solution that I came up with for this problem.
I had an object  and I wanted to know when its data changed. &quot;something similar to Object.observe&quot; and what I did was:</source>
          <target state="translated">Sé que esto es un poco viejo,pero me gustaría añadir una solución que se me ocurrió para este problema.Tenía un objeto y quería saber cuándo cambiaban sus datos.&quot;algo similar a Object.observe&quot; y lo que hice fue:</target>
        </trans-unit>
        <trans-unit id="0883f0456d3e8799dcde764db81c843dcc4dd20a" translate="yes" xml:space="preserve">
          <source>I see spaghetti code answers.
Without using any third party libs, this is very easy.</source>
          <target state="translated">Veo respuestas en código de espaguetis.Sin usar ningún código de terceros,esto es muy fácil.</target>
        </trans-unit>
        <trans-unit id="8a1ed8709f0cb36a073cbc8520873d0a5cff9592" translate="yes" xml:space="preserve">
          <source>I use this &lt;code&gt;comparable&lt;/code&gt; function to produce copies of my objects that are JSON comparable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilizo esta &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;comparable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para producir copias de mis objetos que son comparables a JSON:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b332b03edb7d73add355c3fa91804a0f84f41d0" translate="yes" xml:space="preserve">
          <source>I'd advise against hashing or serialization (as the JSON solution suggest).  If you need to test if two objects are equal, then you need to define what equals means.  It could be that all data members in both objects match, or it could be that must the memory locations match (meaning both variables reference the same object in memory), or may be that only one data member in each object must match.</source>
          <target state="translated">Yo aconsejaría no hacer hashing o serialización (como sugiere la solución JSON).Si necesitas comprobar si dos objetos son iguales,entonces necesitas definir lo que significa igual.Podría ser que todos los miembros de datos de ambos objetos coincidan,o podría ser que las ubicaciones de memoria deben coincidir (lo que significa que ambas variables hacen referencia al mismo objeto en la memoria),o podría ser que sólo un miembro de datos de cada objeto debe coincidir.</target>
        </trans-unit>
        <trans-unit id="9ac338fd648b3ef084c966e05557018ab32e0a89" translate="yes" xml:space="preserve">
          <source>I'm making the following assumptions with this function:</source>
          <target state="translated">Estoy haciendo las siguientes suposiciones con esta función:</target>
        </trans-unit>
        <trans-unit id="6811822354e95921e162ee0b9000eabda79d6902" translate="yes" xml:space="preserve">
          <source>If a difference is caught, strings get logged, making differences spottable:</source>
          <target state="translated">Si se detecta una diferencia,las cuerdas se registran,haciendo que las diferencias sean perceptibles:</target>
        </trans-unit>
        <trans-unit id="0b5f5e8bbf5ed9e96e92dffd1ecf50f1cb169a64" translate="yes" xml:space="preserve">
          <source>If this is the case, you'll probably have noticed this situation:</source>
          <target state="translated">Si este es el caso,probablemente habrán notado esta situación:</target>
        </trans-unit>
        <trans-unit id="efb5c886702935c4ce12a4d3bc9c07efaf9ad546" translate="yes" xml:space="preserve">
          <source>If two objects are different, a MongoDB compatible &lt;code&gt;{$rename:{...}, $unset:{...}, $set:{...}}&lt;/code&gt; like object is returned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si dos objetos son diferentes, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se devuelve un objeto similar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{$rename:{...}, $unset:{...}, $set:{...}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; compatible con MongoDB &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29708321ba5aaec34c1a7215a84b07aa3bddff04" translate="yes" xml:space="preserve">
          <source>If you are comparing JSON objects you can use &lt;a href=&quot;https://github.com/mirek/node-rus-diff&quot;&gt;https://github.com/mirek/node-rus-diff&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; comparando objetos JSON, puede usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/mirek/node-rus-diff&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/mirek/node-rus-diff&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90393fa8bdd43cbf52b4b9cc3a69939fe3b3b483" translate="yes" xml:space="preserve">
          <source>If you are using a JSON library, you can encode each object as JSON, then compare the resulting strings for equality.</source>
          <target state="translated">Si está usando una biblioteca JSON,puede codificar cada objeto como JSON,y luego comparar las cadenas resultantes para la igualdad.</target>
        </trans-unit>
        <trans-unit id="afbad5f8a046eb65d172d7051b1ddb9f5c6cc6b4" translate="yes" xml:space="preserve">
          <source>If you are working in &lt;a href=&quot;http://docs.angularjs.org&quot;&gt;AngularJS&lt;/a&gt;, the &lt;code&gt;angular.equals&lt;/code&gt; function will determine if two objects are equal. In &lt;a href=&quot;http://emberjs.com/api/&quot;&gt;Ember.js&lt;/a&gt; use &lt;code&gt;isEqual&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; trabajando en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.angularjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;angular.equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; determinar&amp;aacute; si dos objetos son iguales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://emberjs.com/api/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ember.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6cb400c64de748532aa8fe2758bdb1f628afec2" translate="yes" xml:space="preserve">
          <source>If you have a deep copy function handy, you can use the following trick to &lt;em&gt;still&lt;/em&gt; use &lt;code&gt;JSON.stringify&lt;/code&gt; while matching the order of properties:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si tiene a mano una funci&amp;oacute;n de copia profunda, puede usar el siguiente truco para &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;seguir&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; mientras coincide con el orden de las propiedades:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="075e90365c1c07522501910e3b40364a67c0390e" translate="yes" xml:space="preserve">
          <source>If you require a different equality operator you'll need to add an &lt;code&gt;equals(other)&lt;/code&gt; method, or something like it to your classes and the specifics of your problem domain will determine what exactly that means.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si necesita un operador de igualdad diferente, deber&amp;aacute; agregar un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;equals(other)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , o algo similar a sus clases, y los detalles del dominio del problema determinar&amp;aacute;n qu&amp;eacute; significa exactamente eso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f230fda54d534adc6e4df446991e11b55e4293ee" translate="yes" xml:space="preserve">
          <source>In Node.js, you can use its native &lt;code&gt;require(&quot;assert&quot;).deepStrictEqual&lt;/code&gt;. More info: 
&lt;a href=&quot;http://nodejs.org/api/assert.html&quot;&gt;http://nodejs.org/api/assert.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En Node.js, puede usar su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;require(&quot;assert&quot;).deepStrictEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; nativa &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(&quot;afirmar&quot;). DeepStrictEqual&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;aacute;s informaci&amp;oacute;n: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nodejs.org/api/assert.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://nodejs.org/api/assert.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe48a5c70a6f7c4c6a94ec61cd153febf7ef3d33" translate="yes" xml:space="preserve">
          <source>In that case I defined &quot;equal&quot; as meaning the the id values match.  Given that each instance has a unique id this could be used to enforce the idea that matching objects also occupy the same memory location.  Although that is not necessary.</source>
          <target state="translated">En ese caso definí &quot;igual&quot; como el significado de que los valores de identificación coinciden.Dado que cada instancia tiene un id único,esto podría utilizarse para reforzar la idea de que los objetos coincidentes también ocupan el mismo lugar en la memoria.Aunque eso no es necesario.</target>
        </trans-unit>
        <trans-unit id="f0691b66899e23aa3d4aea59975b85e6520536eb" translate="yes" xml:space="preserve">
          <source>In this above case, &lt;code&gt;c&lt;/code&gt; is not really important to determine whether any two instances of MyClass are equal, only &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are important. In some cases &lt;code&gt;c&lt;/code&gt; might vary between instances and yet not be significant during comparison.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En este caso anterior, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es realmente importante para determinar si dos instancias de MyClass son iguales, solo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son importantes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En algunos casos, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede variar entre instancias y, sin embargo, no ser significativo durante la comparaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8258ec58264eb0921c797310f548d8b602d664d9" translate="yes" xml:space="preserve">
          <source>It will brute force check each key value - just like the other examples on this page - using &lt;a href=&quot;http://en.wikipedia.org/wiki/ECMAScript#Versions&quot;&gt;ECMAScript&amp;nbsp;5&lt;/a&gt; and native optimizations if they're available in the browser.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Verificar&amp;aacute; la fuerza bruta de cada valor clave, al igual que los otros ejemplos en esta p&amp;aacute;gina, utilizando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ECMAScript#Versions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y optimizaciones nativas si est&amp;aacute;n disponibles en el navegador.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cb20f901fefd383c1d242ee19542c1609444033" translate="yes" xml:space="preserve">
          <source>It's useful to consider two objects equal if they have all the same values for all properties and recursively for all nested objects and arrays.  I also consider the following two objects equal:</source>
          <target state="translated">Es útil considerar dos objetos iguales si tienen todos los mismos valores para todas las propiedades y recursivamente para todos los objetos y arreglos anidados.También considero que los siguientes dos objetos son iguales:</target>
        </trans-unit>
        <trans-unit id="dc34201504cc5166081377b5b96498a67878d000" translate="yes" xml:space="preserve">
          <source>Just wanted to contribute my version of objects comparison utilizing some es6 features. It doesn't take an order into account. After converting all if/else's to ternary I've came with following:</source>
          <target state="translated">Sólo quería contribuir con mi versión de comparación de objetos utilizando algunas características de es6.No tiene en cuenta el orden.Después de convertir todos los ifelse a ternario he venido con el siguiente:</target>
        </trans-unit>
        <trans-unit id="47c8c9aee02fc7cf827f57dbf1ede0ad0a9a951c" translate="yes" xml:space="preserve">
          <source>Needing a more generic object comparison function than had been posted, I cooked up the following. Critique appreciated...</source>
          <target state="translated">Necesitaba una función de comparación de objetos más genérica de la que se había publicado,y me inventé lo siguiente.La crítica se agradece...</target>
        </trans-unit>
        <trans-unit id="d24d4b5a369eb9020cd7ee78de6676d60a8db114" translate="yes" xml:space="preserve">
          <source>Note this issue applies when members may themselves also be instances of a type and these each would all be required to have a means of determining equality.</source>
          <target state="translated">Obsérvese que esta cuestión se aplica cuando los propios miembros pueden ser también ejemplos de un tipo y cada uno de ellos tendría que disponer de un medio para determinar la igualdad.</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="e0e0c0e31745b9915640f06ed8b5f58ce68f53d6" translate="yes" xml:space="preserve">
          <source>Note: Previously this answer recommended &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt;, but &lt;a href=&quot;http://lodash.com&quot;&gt;lodash&lt;/a&gt; has done a better job of getting bugs fixed and addressing issues with consistency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota: Anteriormente, esta respuesta recomendaba &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ha hecho un mejor trabajo para solucionar los errores y abordar los problemas con coherencia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cd91d91d61190347de340dda1b9a0bfd5b9b415" translate="yes" xml:space="preserve">
          <source>Obviously that function could do with quite a bit of optimisation, and the ability to do deep checking (to handle nested objects: &lt;code&gt;var a = { foo : { fu : &quot;bar&quot; } }&lt;/code&gt;) but you get the idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Obviamente, esa funci&amp;oacute;n podr&amp;iacute;a funcionar con un poco de optimizaci&amp;oacute;n, y la capacidad de hacer una verificaci&amp;oacute;n profunda (para manejar objetos anidados: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var a = { foo : { fu : &quot;bar&quot; } }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) pero se entiende la idea.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c259dd5022babfb3a5506b979118e875e3ce4353" translate="yes" xml:space="preserve">
          <source>Once keys are compared, a simple additional &lt;code&gt;for..in&lt;/code&gt; loop is enough.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una vez que se comparan las claves, basta un simple &lt;/font&gt;&lt;/font&gt; &lt;code&gt;for..in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d43a43abf441a7f90425c52eb98bd94ce24e3a32" translate="yes" xml:space="preserve">
          <source>One can call it like this:</source>
          <target state="translated">Uno puede llamarlo así:</target>
        </trans-unit>
        <trans-unit id="49a58e13d9a842b9110b1f0e1757f9dede780a67" translate="yes" xml:space="preserve">
          <source>Rationale:</source>
          <target state="translated">Rationale:</target>
        </trans-unit>
        <trans-unit id="37b77573764cd6d5d483d8c43c8e096f07ba30e6" translate="yes" xml:space="preserve">
          <source>Recently I developed an object whose constructor creates a new id (starting from 1 and incrementing by 1) each time an instance is created.  This object has an isEqual function that compares that id value with the id value of another object and returns true if they match.</source>
          <target state="translated">Recientemente desarrollé un objeto cuyo constructor crea un nuevo id (empezando por 1 e incrementando en 1)cada vez que se crea una instancia.Este objeto tiene una función isEqual que compara ese valor de id con el valor de id de otro objeto y devuelve true si coinciden.</target>
        </trans-unit>
        <trans-unit id="b3525dcb35efc16cb120bff9914a470cf37ff191" translate="yes" xml:space="preserve">
          <source>See the official documentation from here: &lt;a href=&quot;http://underscorejs.org/#isEqual&quot;&gt;http://underscorejs.org/#isEqual&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte la documentaci&amp;oacute;n oficial desde aqu&amp;iacute;: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://underscorejs.org/#isEqual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbc69581b83927a8f474cd6ebce2465ed785fc17" translate="yes" xml:space="preserve">
          <source>Short functional &lt;code&gt;deepEqual&lt;/code&gt; implementation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;deepEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcional &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;profunda&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; corta y &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;profunda&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6bdafed7f2e05a9c430cc0058bbec81f55eef6b" translate="yes" xml:space="preserve">
          <source>Similarly, arrays can have &quot;missing&quot; elements and undefined elements.  I would treat those the same as well:</source>
          <target state="translated">Del mismo modo,los conjuntos pueden tener elementos &quot;faltantes&quot; y elementos no definidos.Yo trataría a esos mismos también:</target>
        </trans-unit>
        <trans-unit id="c81edfd008d4c1731ec44ab60d932a907f338782" translate="yes" xml:space="preserve">
          <source>Since the properties of &lt;code&gt;obj1&lt;/code&gt; are copied to the clone one by one, their order in the clone will be preserved. And when the properties of &lt;code&gt;obj2&lt;/code&gt; are copied to the clone, since properties already existing in &lt;code&gt;obj1&lt;/code&gt; will simply be overwritten, their orders in the clone will be preserved.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como las propiedades de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se copian en el clon una por una, se preservar&amp;aacute; su orden en el clon. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y cuando las propiedades de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se copian en el clon, dado que las propiedades que ya existen en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; simplemente se sobrescribir&amp;aacute;n, sus &amp;oacute;rdenes en el clon se conservar&amp;aacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92e40bfd5cf1b972d5b743a5a61761a1f2225cb9" translate="yes" xml:space="preserve">
          <source>Stack Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/194846&quot;&gt;Is there any kind of hashCode function in JavaScript?&lt;/a&gt;&lt;/em&gt; is similar to this question, but requires a more academic answer. The scenario above demonstrates why it would be necessary to have one, and I'm wondering if there is any &lt;strong&gt;equivalent solution&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pregunta de desbordamiento de pila &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/194846&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Hay alg&amp;uacute;n tipo de funci&amp;oacute;n hashCode en JavaScript? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es similar a esta pregunta, pero requiere una respuesta m&amp;aacute;s acad&amp;eacute;mica. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El escenario anterior demuestra por qu&amp;eacute; ser&amp;iacute;a necesario tener uno, y me pregunto si hay una &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;soluci&amp;oacute;n equivalente&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3248ac49043c7d1a8816748bc2b7bdd38a95701b" translate="yes" xml:space="preserve">
          <source>The concept is that of an Equals method that compares two different instances of an object to indicate whether they are equal at a value level. However, it is up to the specific type to define how an &lt;code&gt;Equals&lt;/code&gt; method should be implemented. An iterative comparison of attributes that have primitive values may not be enough, there may well be attributes which are not to be considered part of the object value. For example,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El concepto es el de un m&amp;eacute;todo Equals que compara dos instancias diferentes de un objeto para indicar si son iguales en un nivel de valor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, depende del tipo espec&amp;iacute;fico definir c&amp;oacute;mo se &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;debe implementar &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una comparaci&amp;oacute;n iterativa de atributos que tienen valores primitivos puede no ser suficiente, bien puede haber atributos que no deben considerarse parte del valor del objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5dae3164b37783ade9b11ff3acb22344db75238" translate="yes" xml:space="preserve">
          <source>The default equality operator in JavaScript for Objects yields true when they refer to the same location in memory.</source>
          <target state="translated">El operador de igualdad por defecto en JavaScript para Objetos da true cuando se refieren a la misma ubicación en la memoria.</target>
        </trans-unit>
        <trans-unit id="f47fc7cc0217e32f8128f8cb6829359ad7f70762" translate="yes" xml:space="preserve">
          <source>The function either returns true or false, in this case true.
The algorithm als allows comparison between very complex objects:</source>
          <target state="translated">La función devuelve verdadero o falso,en este caso verdadero.El algoritmo también permite la comparación entre objetos muy complejos:</target>
        </trans-unit>
        <trans-unit id="5c4fb9540b37ba4c6f473dc93528da4bdcca078c" translate="yes" xml:space="preserve">
          <source>The simple answer is: No, there is no generic means to determine that an object is equal to another in the sense you mean. The exception is when you are strictly thinking of an object being typeless.</source>
          <target state="translated">La respuesta simple es:No,no hay un medio genérico para determinar que un objeto es igual a otro en el sentido que usted quiere decir.La excepción es cuando se piensa estrictamente en que un objeto no tiene tipo.</target>
        </trans-unit>
        <trans-unit id="9887c1e44990a19a15ca805db7dd0e64078c6d2d" translate="yes" xml:space="preserve">
          <source>The upper example will return true, even tho the properties have a different ordering. One small detail to look out for: This code also checks for the same type of two variables, so &quot;3&quot; is not the same as 3.</source>
          <target state="translated">El ejemplo de arriba volverá verdadero,aunque las propiedades tengan un orden diferente.Un pequeño detalle a tener en cuenta:Este código también comprueba el mismo tipo de dos variables,por lo que &quot;3&quot; no es lo mismo que 3.</target>
        </trans-unit>
        <trans-unit id="9bc2b512f582f1094f90e407b5398a6a0d03c739" translate="yes" xml:space="preserve">
          <source>Then simply use a string to compare them.</source>
          <target state="translated">Entonces simplemente usa una cuerda para compararlos.</target>
        </trans-unit>
        <trans-unit id="df881162c43f80bfc47bc0e210b19496cec86b50" translate="yes" xml:space="preserve">
          <source>This Algorithm is split into two parts; The equals function itself and a function to find the numeric index of a property in an array / object. The find function is only needed because indexof only finds numbers and strings and no objects .</source>
          <target state="translated">Este Algoritmo se divide en dos partes;La función igual en sí misma y una función para encontrar el índice numérico de una propiedad en un objeto de la matriz.La función de encontrar sólo es necesaria porque el índice de sólo encuentra números y cadenas y ningún objeto.</target>
        </trans-unit>
        <trans-unit id="754f106228e194f1279ec0c2c82d2ff928ed3a74" translate="yes" xml:space="preserve">
          <source>This compares for: 1) Equality of number of own properties, 2) Equality of key names, 3) if bCompareValues == true, Equality of corresponding property values and their types (triple equality)</source>
          <target state="translated">Esto se compara para:1)Igualdad del número de propiedades propias,2)Igualdad de los nombres clave,3)si bCompareValues ==true,igualdad de los valores de las propiedades correspondientes y sus tipos (triple igualdad)</target>
        </trans-unit>
        <trans-unit id="71c2f715419ebeaf9d7d96b150a8a8d110a88340" translate="yes" xml:space="preserve">
          <source>This here can be duplicated and create an other set of arrays to compare the values and keys.
It is very simple because they are now arrays and will return false if objects have different sizes.</source>
          <target state="translated">Esto de aquí puede ser duplicado y crear otro conjunto de arreglos para comparar los valores y claves.Es muy simple porque ahora son matrices y devolverán falso si los objetos tienen diferentes tamaños.</target>
        </trans-unit>
        <trans-unit id="aa46560f12acee3169cd00cd4bd44d11148f1815" translate="yes" xml:space="preserve">
          <source>This is an addition for all the above, not a replacement. If you need to fast shallow-compare objects without need to check extra recursive cases. Here is a shot.</source>
          <target state="translated">Esto es una adición para todo lo anterior,no un reemplazo.Si necesitas acelerar los objetos de comparación superficial sin necesidad de revisar los casos extra recursivos.Aquí hay una foto.</target>
        </trans-unit>
        <trans-unit id="c9505525e3bdc04fda5bed77005de531d43cb56e" translate="yes" xml:space="preserve">
          <source>This is my version. It is using new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;Object.keys&lt;/a&gt; feature that is introduced in ES5 and ideas/tests from &lt;a href=&quot;https://stackoverflow.com/a/3849480/1414809&quot;&gt;+&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/6713782/1414809&quot;&gt;+&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/5522917/1414809&quot;&gt;+&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta es mi versi&amp;oacute;n &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Est&amp;aacute; utilizando la nueva &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;caracter&amp;iacute;stica &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keys&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se introduce en ES5 e ideas / pruebas de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/3849480/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/6713782/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/5522917/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90ec7ca1035450e2a6f8682ad4006417b0d98196" translate="yes" xml:space="preserve">
          <source>This should be treated as a demonstration of a simple strategy.</source>
          <target state="translated">Esto debe ser tratado como una demostración de una estrategia simple.</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="792b7493198c3be198997add4b384b829f08681c" translate="yes" xml:space="preserve">
          <source>What about an object that has one of its existing prototype methods overridden by another function? Could it still be considered equal to another instance that it otherwise identical? That question can only be answered in each specific case for each type.</source>
          <target state="translated">¿Qué pasa con un objeto que tiene uno de sus métodos prototipo existente anulado por otra función? ¿Podría considerarse igual a otro caso que por lo demás es idéntico? Esa pregunta sólo puede ser respondida en cada caso específico para cada tipo.</target>
        </trans-unit>
        <trans-unit id="e04a49ef2f49a2ac92317cdbde251081ad8bec35" translate="yes" xml:space="preserve">
          <source>Why reinvent the wheel? Give &lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;Lodash&lt;/a&gt; a try. It has a number of must-have functions such as &lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;isEqual()&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Por qu&amp;eacute; reinventar la rueda? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dale &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una oportunidad a &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lodash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tiene una serie de funciones &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;imprescindibles&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , como &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isEqual ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="512892a6d2cc9a3dfc510df95d685bde807508de" translate="yes" xml:space="preserve">
          <source>You control the objects you are comparing and you only have primitive values (ie. not nested objects, functions, etc.).</source>
          <target state="translated">Controla los objetos que está comparando y sólo tiene valores primitivos (es decir,no objetos anidados,funciones,etc.).</target>
        </trans-unit>
        <trans-unit id="7205aa9b0944c9842020e4e256fcee8da21ce962" translate="yes" xml:space="preserve">
          <source>Your browser has support for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;Object.keys&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Su navegador tiene soporte para &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keys&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee619071b38ecc7251b25b3efb7ade8477c0785b" translate="yes" xml:space="preserve">
          <source>demo available here</source>
          <target state="translated">demo disponible aquí</target>
        </trans-unit>
        <trans-unit id="c472e218b2a3d97cf9c8918237425bf7f39e1ee9" translate="yes" xml:space="preserve">
          <source>for the object, you have to sort(by key) recursively for both side objects</source>
          <target state="translated">para el objeto,tienes que clasificar (por clave)recursivamente para ambos objetos laterales</target>
        </trans-unit>
        <trans-unit id="371bf4463174918cf4efbd1b49aa07e5ff9dfcc7" translate="yes" xml:space="preserve">
          <source>you can use &lt;code&gt;_.isEqual(obj1, obj2)&lt;/code&gt; from the underscore.js library.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_.isEqual(obj1, obj2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la biblioteca underscore.js.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b13d95866739a1930d09680ea4155d3c01de73bc" translate="yes" xml:space="preserve">
          <source>you might have to do something like this:</source>
          <target state="translated">puede que tengas que hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="1209354b665bb8fe81c2c3efa5bc0a6e92839803" translate="yes" xml:space="preserve">
          <source>you need to replace &lt;code&gt;val1&lt;/code&gt;and &lt;code&gt;val2&lt;/code&gt; with your Object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;necesita reemplazar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;val1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;val2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con su objeto&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
