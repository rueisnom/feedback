<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/201183">
    <body>
      <group id="201183">
        <trans-unit id="d422201f51a81e209559bb1db5e0da07c6517b20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/base.js&quot;&gt;Source code&lt;/a&gt; (including the helper functions, generalType and uniqueArray):
&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/tests/test-base.js&quot;&gt;Unit Test&lt;/a&gt; and &lt;a href=&quot;http://pageforest.googlecode.com/hg/appengine/static/src/js/tests/test-runner.html#base&quot;&gt;Test Runner here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/base.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Исходный код&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (включая вспомогательные функции, generalType и uniqueArray): модульный &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/tests/test-base.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;тест&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pageforest.googlecode.com/hg/appengine/static/src/js/tests/test-runner.html#base&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;тестовый прогон здесь&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75935ce922d2a3772ab7768478f8a8e13aaa8ad6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;JSON.stringify()&lt;/a&gt; works for deep and non-deep both types of objects, not very sure of performance aspects:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.stringify ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работает для глубоких и неглубоких объектов обоих типов, не очень уверенных в аспектах производительности:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="130fc136bbb8804229578007e60b620a3dca4059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular.equals&lt;/code&gt; - See the &lt;a href=&quot;http://docs.angularjs.org/api/angular.equals&quot;&gt;docs&lt;/a&gt; or &lt;a href=&quot;https://github.com/angular/angular.js/blob/6c59e770084912d2345e7f83f983092a2d305ae3/src/Angular.js#L670&quot;&gt;source&lt;/a&gt; for more on this method. It does a deep compare on arrays too.</source>
          <target state="translated">&lt;code&gt;angular.equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Подробнее &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;об этом методе &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;смотрите в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.angularjs.org/api/angular.equals&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;документации&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/angular/angular.js/blob/6c59e770084912d2345e7f83f983092a2d305ae3/src/Angular.js#L670&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;источнике&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это делает глубокое сравнение на массивах тоже.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d616314b6e49275e7f07289af7887af8e3695da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assuming that the order of the properties in the object is not changed.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Предполагая, что порядок свойств в объекте не изменился.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c41148899f7a79b0e52367560157187080f81e6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6:&lt;/strong&gt; The minimum code I could get it done, is this. It do deep comparison recursively by stringifying all objects, the only limitation is no methods or symbols are compare.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; минимальный код, который я мог бы сделать, это. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это делает глубокое сравнение рекурсивно путем строкового преобразования всех объектов, единственным ограничением является отсутствие методов или символов для сравнения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0aa990d7c40383d4083d7824eff0ce8efa3a4cec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;: version 2, using jib's suggestion and ES6 arrow functions:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Редактировать&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : версия 2, используя предложение стрелы и функции стрелки ES6:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1664aea62eb13b77137a5ca0dfd963515c1ffe11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: While this answer will work in many cases, as several people have pointed out in the comments it's problematic for a variety of reasons. In pretty much all cases you'll want to find a more robust solution.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ПРИМЕЧАНИЕ. Хотя этот ответ будет работать во многих случаях, как отметили несколько человек в комментариях, это проблематично по ряду причин. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В большинстве случаев вы захотите найти более надежное решение.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="052815ea50d3f7ac9ceed0a151b7d24249d5a175" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simplest&lt;/strong&gt; and &lt;strong&gt;logical&lt;/strong&gt; solutions for comparing everything Like &lt;strong&gt;Object, Array, String, Int...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Простейшие&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;логичные&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; решения для сравнения всего, например &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object, Array, String, Int ...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="154442026c578bde4bf91577672771cbf7120401" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The long answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Длинный ответ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3ca1d0829015a6a21caa4e5649f4c54d908c0b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The short answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Краткий ответ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="117325da892f4e34ebca280c275c11f3989aeeca" translate="yes" xml:space="preserve">
          <source>A function that implements this definition of equality:</source>
          <target state="translated">Функция,реализующая это определение равенства:</target>
        </trans-unit>
        <trans-unit id="8a3343ce56eab4c47b420d306cb822a037d6df0c" translate="yes" xml:space="preserve">
          <source>A simple solution to this issue that many people don't realize is to sort the JSON strings (per character). This is also usually faster than the other solutions mentioned here:</source>
          <target state="translated">Простое решение этой проблемы,которое многие не понимают,это сортировка JSON-строк (по символам).Это также обычно быстрее,чем другие решения,упомянутые здесь:</target>
        </trans-unit>
        <trans-unit id="87a8d1e5f254712f960f4d6c115f25b690949194" translate="yes" xml:space="preserve">
          <source>A strict equality operator will tell you if two object &lt;strong&gt;types&lt;/strong&gt; are equal. However, is there a way to tell if two objects are equal, &lt;strong&gt;much like the hash code&lt;/strong&gt; value in Java?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Оператор строгого равенства скажет вам, если два &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;типа&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объектов &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;равны. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако есть ли способ определить, равны ли два объекта, так же, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как значение хэш-кода&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в Java?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93f1b6742bf696c646d33eb65a0d3154692a9201" translate="yes" xml:space="preserve">
          <source>Also, it's recursive, so it can also check for deep equality, if that's what you call it.</source>
          <target state="translated">Кроме того,он рекурсивный,так что он также может проверить на глубокое равенство,если вы так это называете.</target>
        </trans-unit>
        <trans-unit id="d12df9b949c4bf605e35cab7117e631709b6570b" translate="yes" xml:space="preserve">
          <source>An object may reference a method that is to be called as an event handler, and this would likely not be considered part of its 'value state'. Whereas another object may well be assigned a function that performs an important calculation and thereby makes this instance different from others simply because it references a different function.</source>
          <target state="translated">Объект может ссылаться на метод,который должен быть вызван как обработчик события,и это,скорее всего,не будет рассматриваться как часть его &quot;ценностного состояния&quot;.В то время как другому объекту вполне может быть назначена функция,выполняющая важное вычисление и тем самым отличающаяся от других просто потому,что он ссылается на другую функцию.</target>
        </trans-unit>
        <trans-unit id="3d672c90a0834a45b1eeaacfa7147f96ac95f799" translate="yes" xml:space="preserve">
          <source>Another example that returns &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; instead of returning errors:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другой пример, который возвращает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вместо возврата ошибок:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19bfe63a68a7d33bfb5d996e3b4f92cadb237fd5" translate="yes" xml:space="preserve">
          <source>Another useful thing about this method is you can filter comparisons by passing a &quot;replacer&quot; function to the JSON.stringify functions (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&lt;/a&gt;). The following will only compare all objects keys that are named &quot;derp&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Еще одна полезная вещь в этом методе - вы можете фильтровать сравнения, передавая функцию &amp;laquo;replacer&amp;raquo; в функции JSON.stringify ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON / stringify # Example_of_using_replacer_parameter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Далее будут сравниваться все ключи объектов, которые называются &amp;laquo;сумасшедший&amp;raquo;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b53c1d41a5759c78ee2b320f2d132bf26a7b1af6" translate="yes" xml:space="preserve">
          <source>Are you trying to test if two objects are the equal? ie: their properties are equal?</source>
          <target state="translated">Вы пытаетесь проверить,равны ли два объекта,т.е.равны ли их свойства?</target>
        </trans-unit>
        <trans-unit id="0dc2d4cd771fd05e87df351ac6aede40cfe91919" translate="yes" xml:space="preserve">
          <source>As FOR pointed out, you might have to adapt this for your own purposes, eg: different classes may have different definitions of &quot;equal&quot;. If you're just working with plain objects, the above may suffice, otherwise a custom &lt;code&gt;MyClass.equals()&lt;/code&gt; function may be the way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как указывалось в FOR, вам, возможно, придется адаптировать это для ваших собственных целей, например: разные классы могут иметь разные определения &amp;laquo;равно&amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы просто работаете с простыми объектами, вышеприведенного может быть достаточно, в противном случае можно использовать собственную &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClass.equals()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c61005452385f8bd1840730fb08806a391d1bf4" translate="yes" xml:space="preserve">
          <source>As stated earlier, the exception would be a strictly typeless object. In which case the only sensible choice is an iterative and recursive comparison of each member. Even then one has to ask what is the 'value' of a function?</source>
          <target state="translated">Как было сказано ранее,исключение будет строго безпечатным объектом.В этом случае единственным разумным выбором является итеративное и рекурсивное сравнение каждого члена.Даже тогда приходится спрашивать,что такое &quot;значение&quot; функции?</target>
        </trans-unit>
        <trans-unit id="c0c4c8ac002583533ff6674c083fe94db4c83220" translate="yes" xml:space="preserve">
          <source>Comes in handy in tests (most test frameworks have an &lt;code&gt;is&lt;/code&gt; function). E.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пригодится в тестах (большинство тестовых сред имеют функцию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9e5a40518a875431511860c5d9e95e874e31014" translate="yes" xml:space="preserve">
          <source>Complexity is O(N*N) with N is the number of keys.</source>
          <target state="translated">Сложность-O(N*N)с N-это количество клавиш.</target>
        </trans-unit>
        <trans-unit id="614666f0a7527742ff0e56774d57de0846f19ad3" translate="yes" xml:space="preserve">
          <source>Demo: &lt;a href=&quot;http://jsfiddle.net/CU3vb/3/&quot;&gt;http://jsfiddle.net/CU3vb/3/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Демо: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/CU3vb/3/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/CU3vb/3/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2d9e61dfdd0566e4a5c134324d8b75fe38fd9af" translate="yes" xml:space="preserve">
          <source>Ember.js &lt;code&gt;isEqual&lt;/code&gt; - See the &lt;a href=&quot;http://emberjs.com/api/#method_isEqual&quot;&gt;docs&lt;/a&gt; or &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/dfbdbea00bb94f3c1620bd09145540a8bbb8e224/packages/ember-runtime/lib/is-equal.js&quot;&gt;source&lt;/a&gt; for more on this method. It does not do a deep compare on arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ember.js &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Подробнее &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;об этом методе &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;смотрите в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://emberjs.com/api/#method_isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;документации&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/emberjs/ember.js/blob/dfbdbea00bb94f3c1620bd09145540a8bbb8e224/packages/ember-runtime/lib/is-equal.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;источнике&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это не делает глубокое сравнение на массивах.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="9bf6b914418f6ff5b699882d36b4e76c0165bbbb" translate="yes" xml:space="preserve">
          <source>Firstly sort the two objects by key their key names.</source>
          <target state="translated">Сначала отсортируйте два объекта по ключевым именам.</target>
        </trans-unit>
        <trans-unit id="6e5947c83c30e1a19b642ffa16b6d6098d8bf522" translate="yes" xml:space="preserve">
          <source>For comparing keys for simple key/value pairs object instances, I use:</source>
          <target state="translated">Для сравнения ключей для простых экземпляров объектов пар значений ключей я использую:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="c5bd7b0ace095776ee4b6b5dfd3059ad20f1e805" translate="yes" xml:space="preserve">
          <source>For those of you using NodeJS, there is a convenient method called &lt;code&gt;isDeepStrictEqual&lt;/code&gt; on the native Util library that can achieve this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для тех из вас, кто использует NodeJS, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в родной библиотеке Util &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;есть удобный метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isDeepStrictEqual&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который может этого добиться.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdb53b577aeda6276096be96b953c9f6de0609fc" translate="yes" xml:space="preserve">
          <source>Further complicating things is that in JavaScript the distinction between data and method is blurred.</source>
          <target state="translated">Еще больше усложняет то,что в JavaScript размыто разграничение между данными и методом.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">Вот пример:</target>
        </trans-unit>
        <trans-unit id="baa059ac55b3a5589ea7c8841e51d303749963bf" translate="yes" xml:space="preserve">
          <source>Here's a playing card example:</source>
          <target state="translated">Вот пример игральной карты:</target>
        </trans-unit>
        <trans-unit id="3b49d62cac40c4f166746579d98fd2e9560dafb3" translate="yes" xml:space="preserve">
          <source>Heres's a solution in ES6/ES2015 using a functional-style approach:</source>
          <target state="translated">Heres-это решение в ES6ES2015,использующее функциональный подход:</target>
        </trans-unit>
        <trans-unit id="32d8802faf36f90d72a5d340e1a53fdbdca81d37" translate="yes" xml:space="preserve">
          <source>How to determine equality for two JavaScript objects</source>
          <target state="translated">Как определить равенство для двух объектов JavaScript</target>
        </trans-unit>
        <trans-unit id="d92b8b9b0b56b28284edbfd97a5a4c71ea1cfa30" translate="yes" xml:space="preserve">
          <source>I don't know if anyone's posted anything similar to this, but here's a function I made to check for object equalities.</source>
          <target state="translated">Я не знаю,размещал ли кто-нибудь что-нибудь подобное,но вот функция,которую я сделал,чтобы проверить на равенство объектов.</target>
        </trans-unit>
        <trans-unit id="25541bfbd383408f58434a09bb44967257688815" translate="yes" xml:space="preserve">
          <source>I faced the same problem and deccided to write my own solution. But because I want to also compare Arrays with Objects and vice-versa, I crafted a generic solution. I decided to add the functions to the prototype, but one can easily rewrite them to standalone functions. Here is the code:</source>
          <target state="translated">Я столкнулся с той же проблемой и решил написать свое собственное решение.Но так как я хочу сравнить массивы с объектами и наоборот,я создал общее решение.Я решил добавить функции в прототип,но можно легко переписать их на отдельные функции.Вот код:</target>
        </trans-unit>
        <trans-unit id="620676ac1f2a40da4c05d22910d2f0c26068b7ed" translate="yes" xml:space="preserve">
          <source>I hope/guess objects I define won't hold more than 1000 properties...</source>
          <target state="translated">Я надеюсь,что объекты,которые я определяю,не будут содержать более 1000 свойств...</target>
        </trans-unit>
        <trans-unit id="72c1020d591149dffba7f2c4297fa3a18961c774" translate="yes" xml:space="preserve">
          <source>I know this is a bit old, but I would like to add a solution that I came up with for this problem.
I had an object  and I wanted to know when its data changed. &quot;something similar to Object.observe&quot; and what I did was:</source>
          <target state="translated">Я знаю,что это немного устарело,но я хотел бы добавить решение,которое я придумал для этой проблемы.У меня был объект,и я хотел узнать,когда изменились его данные.&quot;что-то похожее на Object.observe&quot; и что я сделал:</target>
        </trans-unit>
        <trans-unit id="0883f0456d3e8799dcde764db81c843dcc4dd20a" translate="yes" xml:space="preserve">
          <source>I see spaghetti code answers.
Without using any third party libs, this is very easy.</source>
          <target state="translated">Я вижу кодовые ответы на спагетти.Без использования сторонних либ,это очень просто.</target>
        </trans-unit>
        <trans-unit id="8a1ed8709f0cb36a073cbc8520873d0a5cff9592" translate="yes" xml:space="preserve">
          <source>I use this &lt;code&gt;comparable&lt;/code&gt; function to produce copies of my objects that are JSON comparable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я использую эту &lt;/font&gt;&lt;/font&gt; &lt;code&gt;comparable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; функцию для создания копий моих объектов, которые сопоставимы с JSON:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b332b03edb7d73add355c3fa91804a0f84f41d0" translate="yes" xml:space="preserve">
          <source>I'd advise against hashing or serialization (as the JSON solution suggest).  If you need to test if two objects are equal, then you need to define what equals means.  It could be that all data members in both objects match, or it could be that must the memory locations match (meaning both variables reference the same object in memory), or may be that only one data member in each object must match.</source>
          <target state="translated">Я бы не советовал хэшировать или сериализовать (как предлагает JSON-решение).Если вам нужно проверить,равны ли два объекта,то вам нужно определить,что значит &quot;равны&quot;.Это может быть так,что все члены данных в обоих объектах совпадают,или это может быть так,что ячейки памяти должны совпадать (это означает,что обе переменные ссылаются на один и тот же объект в памяти),или может быть так,что только один член данных в каждом объекте должен совпадать.</target>
        </trans-unit>
        <trans-unit id="9ac338fd648b3ef084c966e05557018ab32e0a89" translate="yes" xml:space="preserve">
          <source>I'm making the following assumptions with this function:</source>
          <target state="translated">Я делаю следующие предположения с этой функцией:</target>
        </trans-unit>
        <trans-unit id="6811822354e95921e162ee0b9000eabda79d6902" translate="yes" xml:space="preserve">
          <source>If a difference is caught, strings get logged, making differences spottable:</source>
          <target state="translated">Если разница фиксируется,строки записываются в журнал,что делает различия заметными:</target>
        </trans-unit>
        <trans-unit id="0b5f5e8bbf5ed9e96e92dffd1ecf50f1cb169a64" translate="yes" xml:space="preserve">
          <source>If this is the case, you'll probably have noticed this situation:</source>
          <target state="translated">Если это так,вы наверняка заметили бы эту ситуацию:</target>
        </trans-unit>
        <trans-unit id="efb5c886702935c4ce12a4d3bc9c07efaf9ad546" translate="yes" xml:space="preserve">
          <source>If two objects are different, a MongoDB compatible &lt;code&gt;{$rename:{...}, $unset:{...}, $set:{...}}&lt;/code&gt; like object is returned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если два объекта различны, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;возвращается объект, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;совместимый с MongoDB &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{$rename:{...}, $unset:{...}, $set:{...}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29708321ba5aaec34c1a7215a84b07aa3bddff04" translate="yes" xml:space="preserve">
          <source>If you are comparing JSON objects you can use &lt;a href=&quot;https://github.com/mirek/node-rus-diff&quot;&gt;https://github.com/mirek/node-rus-diff&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы сравниваете объекты JSON, вы можете использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/mirek/node-rus-diff&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/mirek/node-rus-diff&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90393fa8bdd43cbf52b4b9cc3a69939fe3b3b483" translate="yes" xml:space="preserve">
          <source>If you are using a JSON library, you can encode each object as JSON, then compare the resulting strings for equality.</source>
          <target state="translated">Если вы используете JSON библиотеку,вы можете закодировать каждый объект как JSON,а затем сравнить полученные строки для равенства.</target>
        </trans-unit>
        <trans-unit id="afbad5f8a046eb65d172d7051b1ddb9f5c6cc6b4" translate="yes" xml:space="preserve">
          <source>If you are working in &lt;a href=&quot;http://docs.angularjs.org&quot;&gt;AngularJS&lt;/a&gt;, the &lt;code&gt;angular.equals&lt;/code&gt; function will determine if two objects are equal. In &lt;a href=&quot;http://emberjs.com/api/&quot;&gt;Ember.js&lt;/a&gt; use &lt;code&gt;isEqual&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы работаете в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.angularjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;angular.equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; определит, равны ли два объекта. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://emberjs.com/api/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ember.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используйте &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6cb400c64de748532aa8fe2758bdb1f628afec2" translate="yes" xml:space="preserve">
          <source>If you have a deep copy function handy, you can use the following trick to &lt;em&gt;still&lt;/em&gt; use &lt;code&gt;JSON.stringify&lt;/code&gt; while matching the order of properties:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если у вас есть удобная функция глубокого копирования, вы можете использовать следующий прием, чтобы по- &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;прежнему&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; при сопоставлении порядка свойств:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="075e90365c1c07522501910e3b40364a67c0390e" translate="yes" xml:space="preserve">
          <source>If you require a different equality operator you'll need to add an &lt;code&gt;equals(other)&lt;/code&gt; method, or something like it to your classes and the specifics of your problem domain will determine what exactly that means.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вам требуется другой оператор равенства, вам нужно добавить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;equals(other)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или что-то подобное в ваши классы, и специфика вашей проблемной области определит, что именно это означает.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f230fda54d534adc6e4df446991e11b55e4293ee" translate="yes" xml:space="preserve">
          <source>In Node.js, you can use its native &lt;code&gt;require(&quot;assert&quot;).deepStrictEqual&lt;/code&gt;. More info: 
&lt;a href=&quot;http://nodejs.org/api/assert.html&quot;&gt;http://nodejs.org/api/assert.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В Node.js вы можете использовать его родное &lt;/font&gt;&lt;/font&gt; &lt;code&gt;require(&quot;assert&quot;).deepStrictEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Дополнительная информация: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://nodejs.org/api/assert.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://nodejs.org/api/assert.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fe48a5c70a6f7c4c6a94ec61cd153febf7ef3d33" translate="yes" xml:space="preserve">
          <source>In that case I defined &quot;equal&quot; as meaning the the id values match.  Given that each instance has a unique id this could be used to enforce the idea that matching objects also occupy the same memory location.  Although that is not necessary.</source>
          <target state="translated">В этом случае я определил &quot;равны&quot;,как означающие,что идентификационные значения совпадают.Учитывая,что каждый экземпляр имеет уникальный идентификатор,это может быть использовано для реализации идеи,что совпадающие объекты также занимают одно и то же место в памяти.Хотя в этом нет необходимости.</target>
        </trans-unit>
        <trans-unit id="f0691b66899e23aa3d4aea59975b85e6520536eb" translate="yes" xml:space="preserve">
          <source>In this above case, &lt;code&gt;c&lt;/code&gt; is not really important to determine whether any two instances of MyClass are equal, only &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are important. In some cases &lt;code&gt;c&lt;/code&gt; might vary between instances and yet not be significant during comparison.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом вышеприведенном случае &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не очень важно определить, равны ли любые два экземпляра MyClass, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;важны &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;только &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В некоторых случаях &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может варьироваться между экземплярами и, тем не менее, не быть значимым при сравнении.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8258ec58264eb0921c797310f548d8b602d664d9" translate="yes" xml:space="preserve">
          <source>It will brute force check each key value - just like the other examples on this page - using &lt;a href=&quot;http://en.wikipedia.org/wiki/ECMAScript#Versions&quot;&gt;ECMAScript&amp;nbsp;5&lt;/a&gt; and native optimizations if they're available in the browser.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он будет грубо проверять каждое значение ключа - как и другие примеры на этой странице - используя &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ECMAScript#Versions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и встроенную оптимизацию, если они доступны в браузере.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cb20f901fefd383c1d242ee19542c1609444033" translate="yes" xml:space="preserve">
          <source>It's useful to consider two objects equal if they have all the same values for all properties and recursively for all nested objects and arrays.  I also consider the following two objects equal:</source>
          <target state="translated">Полезно считать два объекта равными,если они имеют одинаковые значения для всех свойств и рекурсивно для всех вложенных объектов и массивов.Я также считаю следующие два объекта равными:</target>
        </trans-unit>
        <trans-unit id="dc34201504cc5166081377b5b96498a67878d000" translate="yes" xml:space="preserve">
          <source>Just wanted to contribute my version of objects comparison utilizing some es6 features. It doesn't take an order into account. After converting all if/else's to ternary I've came with following:</source>
          <target state="translated">Просто хотел представить мою версию сравнения объектов,используя некоторые функции es6.При этом не учитывается порядок.После преобразования всех ifelse в ternary я пришел со следующим:</target>
        </trans-unit>
        <trans-unit id="47c8c9aee02fc7cf827f57dbf1ede0ad0a9a951c" translate="yes" xml:space="preserve">
          <source>Needing a more generic object comparison function than had been posted, I cooked up the following. Critique appreciated...</source>
          <target state="translated">Нуждаясь в более общей функции сравнения объектов,чем было размещено,я придумал следующее.Критика ценит...</target>
        </trans-unit>
        <trans-unit id="d24d4b5a369eb9020cd7ee78de6676d60a8db114" translate="yes" xml:space="preserve">
          <source>Note this issue applies when members may themselves also be instances of a type and these each would all be required to have a means of determining equality.</source>
          <target state="translated">Обратите внимание,что этот вопрос применяется в тех случаях,когда сами члены могут быть также экземплярами определенного типа,и каждый из них должен иметь средства для определения равенства.</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="e0e0c0e31745b9915640f06ed8b5f58ce68f53d6" translate="yes" xml:space="preserve">
          <source>Note: Previously this answer recommended &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt;, but &lt;a href=&quot;http://lodash.com&quot;&gt;lodash&lt;/a&gt; has done a better job of getting bugs fixed and addressing issues with consistency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Примечание. Ранее этот ответ рекомендовал &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; проделал лучшую работу по исправлению ошибок и последовательному решению проблем.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cd91d91d61190347de340dda1b9a0bfd5b9b415" translate="yes" xml:space="preserve">
          <source>Obviously that function could do with quite a bit of optimisation, and the ability to do deep checking (to handle nested objects: &lt;code&gt;var a = { foo : { fu : &quot;bar&quot; } }&lt;/code&gt;) but you get the idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Очевидно, что эта функция могла бы сделать с небольшим количеством оптимизации и способностью делать глубокую проверку (для обработки вложенных объектов: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var a = { foo : { fu : &quot;bar&quot; } }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), но вы поняли идею.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c259dd5022babfb3a5506b979118e875e3ce4353" translate="yes" xml:space="preserve">
          <source>Once keys are compared, a simple additional &lt;code&gt;for..in&lt;/code&gt; loop is enough.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;После сравнения ключей достаточно простого дополнительного &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;цикла &lt;/font&gt;&lt;/font&gt; &lt;code&gt;for..in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d43a43abf441a7f90425c52eb98bd94ce24e3a32" translate="yes" xml:space="preserve">
          <source>One can call it like this:</source>
          <target state="translated">Можно так называть:</target>
        </trans-unit>
        <trans-unit id="49a58e13d9a842b9110b1f0e1757f9dede780a67" translate="yes" xml:space="preserve">
          <source>Rationale:</source>
          <target state="translated">Rationale:</target>
        </trans-unit>
        <trans-unit id="37b77573764cd6d5d483d8c43c8e096f07ba30e6" translate="yes" xml:space="preserve">
          <source>Recently I developed an object whose constructor creates a new id (starting from 1 and incrementing by 1) each time an instance is created.  This object has an isEqual function that compares that id value with the id value of another object and returns true if they match.</source>
          <target state="translated">Недавно я разработал объект,конструктор которого создает новый id (начиная с 1 и увеличивая на 1)каждый раз,когда создается экземпляр.Этот объект имеет функцию isEqual,которая сравнивает это id со значением id другого объекта и возвращает true,если они совпадают.</target>
        </trans-unit>
        <trans-unit id="b3525dcb35efc16cb120bff9914a470cf37ff191" translate="yes" xml:space="preserve">
          <source>See the official documentation from here: &lt;a href=&quot;http://underscorejs.org/#isEqual&quot;&gt;http://underscorejs.org/#isEqual&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите официальную документацию здесь: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://underscorejs.org/#isEqual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbc69581b83927a8f474cd6ebce2465ed785fc17" translate="yes" xml:space="preserve">
          <source>Short functional &lt;code&gt;deepEqual&lt;/code&gt; implementation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Краткая функциональная &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;реализация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;deepEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6bdafed7f2e05a9c430cc0058bbec81f55eef6b" translate="yes" xml:space="preserve">
          <source>Similarly, arrays can have &quot;missing&quot; elements and undefined elements.  I would treat those the same as well:</source>
          <target state="translated">Аналогичным образом,массивы могут иметь &quot;отсутствующие&quot; и неопределенные элементы.Я бы отнесся к ним так же:</target>
        </trans-unit>
        <trans-unit id="c81edfd008d4c1731ec44ab60d932a907f338782" translate="yes" xml:space="preserve">
          <source>Since the properties of &lt;code&gt;obj1&lt;/code&gt; are copied to the clone one by one, their order in the clone will be preserved. And when the properties of &lt;code&gt;obj2&lt;/code&gt; are copied to the clone, since properties already existing in &lt;code&gt;obj1&lt;/code&gt; will simply be overwritten, their orders in the clone will be preserved.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку свойства &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; копируются в клон по одному, их порядок в клоне будет сохранен. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И когда свойства &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; копируются в клон, поскольку свойства, уже существующие в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj1&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будут просто перезаписаны, их порядки в клоне будут сохранены.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92e40bfd5cf1b972d5b743a5a61761a1f2225cb9" translate="yes" xml:space="preserve">
          <source>Stack Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/194846&quot;&gt;Is there any kind of hashCode function in JavaScript?&lt;/a&gt;&lt;/em&gt; is similar to this question, but requires a more academic answer. The scenario above demonstrates why it would be necessary to have one, and I'm wondering if there is any &lt;strong&gt;equivalent solution&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вопрос переполнения стека &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/194846&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Есть ли какая-либо функция hashCode в JavaScript? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;похож на этот вопрос, но требует более академического ответа. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сценарий выше демонстрирует, почему это необходимо, и мне интересно, есть ли какое-либо &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;эквивалентное решение&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3248ac49043c7d1a8816748bc2b7bdd38a95701b" translate="yes" xml:space="preserve">
          <source>The concept is that of an Equals method that compares two different instances of an object to indicate whether they are equal at a value level. However, it is up to the specific type to define how an &lt;code&gt;Equals&lt;/code&gt; method should be implemented. An iterative comparison of attributes that have primitive values may not be enough, there may well be attributes which are not to be considered part of the object value. For example,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Концепция заключается в методе Equals, который сравнивает два разных экземпляра объекта, чтобы указать, равны ли они на уровне значения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако именно конкретный тип определяет, как &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;должен быть реализован метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итеративного сравнения атрибутов, которые имеют примитивные значения, может быть недостаточно, вполне могут быть атрибуты, которые не следует рассматривать как часть значения объекта. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5dae3164b37783ade9b11ff3acb22344db75238" translate="yes" xml:space="preserve">
          <source>The default equality operator in JavaScript for Objects yields true when they refer to the same location in memory.</source>
          <target state="translated">Оператор равенства по умолчанию в JavaScript for Objects дает значение true,когда они ссылаются на одно и то же место в памяти.</target>
        </trans-unit>
        <trans-unit id="f47fc7cc0217e32f8128f8cb6829359ad7f70762" translate="yes" xml:space="preserve">
          <source>The function either returns true or false, in this case true.
The algorithm als allows comparison between very complex objects:</source>
          <target state="translated">Функция возвращает true или false,в данном случае true.Алгоритм als позволяет сравнивать очень сложные объекты:</target>
        </trans-unit>
        <trans-unit id="5c4fb9540b37ba4c6f473dc93528da4bdcca078c" translate="yes" xml:space="preserve">
          <source>The simple answer is: No, there is no generic means to determine that an object is equal to another in the sense you mean. The exception is when you are strictly thinking of an object being typeless.</source>
          <target state="translated">Простой ответ:Нет,нет никаких общих средств для определения того,что объект равен другому в том смысле,в каком вы имеете в виду.Исключение составляют случаи,когда вы строго думаете о том,что объект безпечатен.</target>
        </trans-unit>
        <trans-unit id="9887c1e44990a19a15ca805db7dd0e64078c6d2d" translate="yes" xml:space="preserve">
          <source>The upper example will return true, even tho the properties have a different ordering. One small detail to look out for: This code also checks for the same type of two variables, so &quot;3&quot; is not the same as 3.</source>
          <target state="translated">Верхний пример вернет true,даже если свойства имеют другой порядок расположения.Одна маленькая деталь,на которую нужно обратить внимание:Этот код также проверяет один и тот же тип двух переменных,поэтому &quot;3&quot;-это не то же самое,что &quot;3&quot;.</target>
        </trans-unit>
        <trans-unit id="9bc2b512f582f1094f90e407b5398a6a0d03c739" translate="yes" xml:space="preserve">
          <source>Then simply use a string to compare them.</source>
          <target state="translated">Затем просто используйте строку,чтобы сравнить их.</target>
        </trans-unit>
        <trans-unit id="df881162c43f80bfc47bc0e210b19496cec86b50" translate="yes" xml:space="preserve">
          <source>This Algorithm is split into two parts; The equals function itself and a function to find the numeric index of a property in an array / object. The find function is only needed because indexof only finds numbers and strings and no objects .</source>
          <target state="translated">Данный алгоритм разделен на две части;равна сама функция и функция поиска числового индекса свойства в объекте массива.Функция поиска нужна только потому,что indexof находит только числа и строки,а объектов нет.</target>
        </trans-unit>
        <trans-unit id="754f106228e194f1279ec0c2c82d2ff928ed3a74" translate="yes" xml:space="preserve">
          <source>This compares for: 1) Equality of number of own properties, 2) Equality of key names, 3) if bCompareValues == true, Equality of corresponding property values and their types (triple equality)</source>
          <target state="translated">Это сравнимо:1)Равенство количества собственных свойств,2)Равенство имен ключей,3)если bCompareValues ==true,Равенство соответствующих значений свойств и их типов (тройное равенство)</target>
        </trans-unit>
        <trans-unit id="71c2f715419ebeaf9d7d96b150a8a8d110a88340" translate="yes" xml:space="preserve">
          <source>This here can be duplicated and create an other set of arrays to compare the values and keys.
It is very simple because they are now arrays and will return false if objects have different sizes.</source>
          <target state="translated">Здесь можно продублировать и создать другой набор массивов для сравнения значений и ключей.Это очень просто,потому что теперь они являются массивами и будут возвращать false,если объекты имеют разные размеры.</target>
        </trans-unit>
        <trans-unit id="aa46560f12acee3169cd00cd4bd44d11148f1815" translate="yes" xml:space="preserve">
          <source>This is an addition for all the above, not a replacement. If you need to fast shallow-compare objects without need to check extra recursive cases. Here is a shot.</source>
          <target state="translated">Это дополнение ко всему вышесказанному,а не замена.Если вам нужно быстро сравнивать мелкие объекты без необходимости проверять лишние рекурсивные случаи.Вот снимок.</target>
        </trans-unit>
        <trans-unit id="c9505525e3bdc04fda5bed77005de531d43cb56e" translate="yes" xml:space="preserve">
          <source>This is my version. It is using new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;Object.keys&lt;/a&gt; feature that is introduced in ES5 and ideas/tests from &lt;a href=&quot;https://stackoverflow.com/a/3849480/1414809&quot;&gt;+&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/6713782/1414809&quot;&gt;+&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/5522917/1414809&quot;&gt;+&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это моя версия. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он использует новую &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцию &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keys,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которая представлена ​​в ES5, и идеи / тесты из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/3849480/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/6713782/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/5522917/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90ec7ca1035450e2a6f8682ad4006417b0d98196" translate="yes" xml:space="preserve">
          <source>This should be treated as a demonstration of a simple strategy.</source>
          <target state="translated">Это следует рассматривать как демонстрацию простой стратегии.</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="792b7493198c3be198997add4b384b829f08681c" translate="yes" xml:space="preserve">
          <source>What about an object that has one of its existing prototype methods overridden by another function? Could it still be considered equal to another instance that it otherwise identical? That question can only be answered in each specific case for each type.</source>
          <target state="translated">А как насчет объекта,у которого один из существующих методов прототипа переопределен другой функцией? Может ли он все еще считаться равным другому экземпляру,который в остальном идентичен? На этот вопрос можно ответить только в каждом конкретном случае для каждого типа.</target>
        </trans-unit>
        <trans-unit id="e04a49ef2f49a2ac92317cdbde251081ad8bec35" translate="yes" xml:space="preserve">
          <source>Why reinvent the wheel? Give &lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;Lodash&lt;/a&gt; a try. It has a number of must-have functions such as &lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;isEqual()&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Зачем изобретать велосипед? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Дайте &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Лодаш&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; попробовать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он имеет ряд обязательных функций, таких как &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isEqual ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="512892a6d2cc9a3dfc510df95d685bde807508de" translate="yes" xml:space="preserve">
          <source>You control the objects you are comparing and you only have primitive values (ie. not nested objects, functions, etc.).</source>
          <target state="translated">Вы управляете сравниваемыми объектами и имеете только примитивные значения (т.е.не вложенные объекты,функции и т.д.).</target>
        </trans-unit>
        <trans-unit id="7205aa9b0944c9842020e4e256fcee8da21ce962" translate="yes" xml:space="preserve">
          <source>Your browser has support for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;Object.keys&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В вашем браузере есть поддержка &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keys&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee619071b38ecc7251b25b3efb7ade8477c0785b" translate="yes" xml:space="preserve">
          <source>demo available here</source>
          <target state="translated">демо-версия доступна здесь</target>
        </trans-unit>
        <trans-unit id="c472e218b2a3d97cf9c8918237425bf7f39e1ee9" translate="yes" xml:space="preserve">
          <source>for the object, you have to sort(by key) recursively for both side objects</source>
          <target state="translated">для объекта,вы должны сортировать(по клавишам)рекурсивно для обоих боковых объектов</target>
        </trans-unit>
        <trans-unit id="371bf4463174918cf4efbd1b49aa07e5ff9dfcc7" translate="yes" xml:space="preserve">
          <source>you can use &lt;code&gt;_.isEqual(obj1, obj2)&lt;/code&gt; from the underscore.js library.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_.isEqual(obj1, obj2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из библиотеки underscore.js.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b13d95866739a1930d09680ea4155d3c01de73bc" translate="yes" xml:space="preserve">
          <source>you might have to do something like this:</source>
          <target state="translated">тебе,возможно,придется сделать что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="1209354b665bb8fe81c2c3efa5bc0a6e92839803" translate="yes" xml:space="preserve">
          <source>you need to replace &lt;code&gt;val1&lt;/code&gt;and &lt;code&gt;val2&lt;/code&gt; with your Object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вам нужно заменить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;val1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;val2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на ваш объект&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
