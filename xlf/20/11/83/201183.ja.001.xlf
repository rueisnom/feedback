<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/201183">
    <body>
      <group id="201183">
        <trans-unit id="d422201f51a81e209559bb1db5e0da07c6517b20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/base.js&quot;&gt;Source code&lt;/a&gt; (including the helper functions, generalType and uniqueArray):
&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/tests/test-base.js&quot;&gt;Unit Test&lt;/a&gt; and &lt;a href=&quot;http://pageforest.googlecode.com/hg/appengine/static/src/js/tests/test-runner.html#base&quot;&gt;Test Runner here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/base.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソースコード&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（ヘルパー関数、generalType、uniqueArrayを含む）： &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/pageforest/source/browse/appengine/static/src/js/tests/test-base.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単体テスト&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pageforest.googlecode.com/hg/appengine/static/src/js/tests/test-runner.html#base&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストランナーはこちら&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75935ce922d2a3772ab7768478f8a8e13aaa8ad6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;JSON.stringify()&lt;/a&gt; works for deep and non-deep both types of objects, not very sure of performance aspects:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.stringify（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、ディープとディープの両方のタイプのオブジェクトに対して機能しますが、パフォーマンスの側面についてはあまり確信がありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="130fc136bbb8804229578007e60b620a3dca4059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular.equals&lt;/code&gt; - See the &lt;a href=&quot;http://docs.angularjs.org/api/angular.equals&quot;&gt;docs&lt;/a&gt; or &lt;a href=&quot;https://github.com/angular/angular.js/blob/6c59e770084912d2345e7f83f983092a2d305ae3/src/Angular.js#L670&quot;&gt;source&lt;/a&gt; for more on this method. It does a deep compare on arrays too.</source>
          <target state="translated">&lt;code&gt;angular.equals&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このメソッドの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.angularjs.org/api/angular.equals&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/angular/angular.js/blob/6c59e770084912d2345e7f83f983092a2d305ae3/src/Angular.js#L670&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソース&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列についても詳細な比較を行います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d616314b6e49275e7f07289af7887af8e3695da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assuming that the order of the properties in the object is not changed.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのプロパティの順序は変更されないと仮定します。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c41148899f7a79b0e52367560157187080f81e6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6:&lt;/strong&gt; The minimum code I could get it done, is this. It do deep comparison recursively by stringifying all objects, the only limitation is no methods or symbols are compare.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6：実現&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できる最小のコードはこれです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのオブジェクトを文字列化することで再帰的に深い比較を行います。唯一の制限は、メソッドやシンボルを比較しないことです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0aa990d7c40383d4083d7824eff0ce8efa3a4cec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;: version 2, using jib's suggestion and ES6 arrow functions:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：バージョン2、jibの提案とES6矢印関数を使用：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1664aea62eb13b77137a5ca0dfd963515c1ffe11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: While this answer will work in many cases, as several people have pointed out in the comments it's problematic for a variety of reasons. In pretty much all cases you'll want to find a more robust solution.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：この回答は多くの場合有効ですが、コメントで数人が指摘したように、さまざまな理由で問題があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどすべての場合、より堅牢なソリューションを見つける必要があります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="052815ea50d3f7ac9ceed0a151b7d24249d5a175" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simplest&lt;/strong&gt; and &lt;strong&gt;logical&lt;/strong&gt; solutions for comparing everything Like &lt;strong&gt;Object, Array, String, Int...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト、配列、文​​字列、&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてを比較するための&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も簡単&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;論理的な&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソリューション&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="154442026c578bde4bf91577672771cbf7120401" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The long answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;長い答え&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3ca1d0829015a6a21caa4e5649f4c54d908c0b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The short answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;短い答え&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="117325da892f4e34ebca280c275c11f3989aeeca" translate="yes" xml:space="preserve">
          <source>A function that implements this definition of equality:</source>
          <target state="translated">この平等の定義を実装した関数。</target>
        </trans-unit>
        <trans-unit id="8a3343ce56eab4c47b420d306cb822a037d6df0c" translate="yes" xml:space="preserve">
          <source>A simple solution to this issue that many people don't realize is to sort the JSON strings (per character). This is also usually faster than the other solutions mentioned here:</source>
          <target state="translated">多くの人が気づいていないこの問題の簡単な解決策は、JSON 文字列を (一文字ごとに)ソートすることです。この方法は、ここで述べた他の解決策よりも通常は高速です。</target>
        </trans-unit>
        <trans-unit id="87a8d1e5f254712f960f4d6c115f25b690949194" translate="yes" xml:space="preserve">
          <source>A strict equality operator will tell you if two object &lt;strong&gt;types&lt;/strong&gt; are equal. However, is there a way to tell if two objects are equal, &lt;strong&gt;much like the hash code&lt;/strong&gt; value in Java?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;厳密な等価演算子は、2つのオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が等しい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かどうかを通知します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javaの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハッシュコード&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値の&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように、&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2つのオブジェクトが等しいかどうかを確認する方法はあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93f1b6742bf696c646d33eb65a0d3154692a9201" translate="yes" xml:space="preserve">
          <source>Also, it's recursive, so it can also check for deep equality, if that's what you call it.</source>
          <target state="translated">また、再帰的なので、あなたがそれをそう呼ぶならば、深い平等性をチェックすることもできます。</target>
        </trans-unit>
        <trans-unit id="d12df9b949c4bf605e35cab7117e631709b6570b" translate="yes" xml:space="preserve">
          <source>An object may reference a method that is to be called as an event handler, and this would likely not be considered part of its 'value state'. Whereas another object may well be assigned a function that performs an important calculation and thereby makes this instance different from others simply because it references a different function.</source>
          <target state="translated">オブジェクトはイベントハンドラとして呼び出されるメソッドを参照することがありますが、これはその「値の状態」の一部とは見なされないでしょう。一方、別のオブジェクトには、重要な計算を行う関数が割り当てられているかもしれませんが、それによってこのインスタンスは、単に別の関数を参照しているという理由だけで、他のオブジェクトとは異なるものになります。</target>
        </trans-unit>
        <trans-unit id="3d672c90a0834a45b1eeaacfa7147f96ac95f799" translate="yes" xml:space="preserve">
          <source>Another example that returns &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; instead of returning errors:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エラーを返す代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返す別の例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="19bfe63a68a7d33bfb5d996e3b4f92cadb237fd5" translate="yes" xml:space="preserve">
          <source>Another useful thing about this method is you can filter comparisons by passing a &quot;replacer&quot; function to the JSON.stringify functions (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&lt;/a&gt;). The following will only compare all objects keys that are named &quot;derp&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このメソッドのもう1つの便利な点は、「replacer」関数をJSON.stringify関数（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Example_of_using_replacer_parameter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON）に&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;渡して、比較をフィルタリングできることです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 / stringify＃Example_of_using_replacer_parameter&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は、「derp」という名前のすべてのオブジェクトキーのみを比較します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b53c1d41a5759c78ee2b320f2d132bf26a7b1af6" translate="yes" xml:space="preserve">
          <source>Are you trying to test if two objects are the equal? ie: their properties are equal?</source>
          <target state="translated">2つのオブジェクトが等しいかどうかをテストしようとしていますか?</target>
        </trans-unit>
        <trans-unit id="0dc2d4cd771fd05e87df351ac6aede40cfe91919" translate="yes" xml:space="preserve">
          <source>As FOR pointed out, you might have to adapt this for your own purposes, eg: different classes may have different definitions of &quot;equal&quot;. If you're just working with plain objects, the above may suffice, otherwise a custom &lt;code&gt;MyClass.equals()&lt;/code&gt; function may be the way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FORが指摘したように、あなたはこれをあなた自身の目的のために適応させなければならないかもしれません、例えば：異なるクラスは &quot;等しい&quot;の異なる定義を持っているかもしれません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単純なオブジェクトで作業している場合は、上記で十分な場合があります。それ以外の場合は、カスタムの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyClass.equals()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c61005452385f8bd1840730fb08806a391d1bf4" translate="yes" xml:space="preserve">
          <source>As stated earlier, the exception would be a strictly typeless object. In which case the only sensible choice is an iterative and recursive comparison of each member. Even then one has to ask what is the 'value' of a function?</source>
          <target state="translated">前述したように、例外は厳密には型なしのオブジェクトになります。この場合、唯一の賢明な選択は、各メンバの反復的で再帰的な比較です。その場合でも、関数の「値」とは何か、ということが問われます。</target>
        </trans-unit>
        <trans-unit id="c0c4c8ac002583533ff6674c083fe94db4c83220" translate="yes" xml:space="preserve">
          <source>Comes in handy in tests (most test frameworks have an &lt;code&gt;is&lt;/code&gt; function). E.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストで便利です（ほとんどのテストフレームワークには&lt;/font&gt;&lt;/font&gt; &lt;code&gt;is&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9e5a40518a875431511860c5d9e95e874e31014" translate="yes" xml:space="preserve">
          <source>Complexity is O(N*N) with N is the number of keys.</source>
          <target state="translated">複雑さは、Nを鍵の数とするとO(N*N)である。</target>
        </trans-unit>
        <trans-unit id="614666f0a7527742ff0e56774d57de0846f19ad3" translate="yes" xml:space="preserve">
          <source>Demo: &lt;a href=&quot;http://jsfiddle.net/CU3vb/3/&quot;&gt;http://jsfiddle.net/CU3vb/3/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デモ：&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/CU3vb/3/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsfiddle.net/CU3vb/3/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2d9e61dfdd0566e4a5c134324d8b75fe38fd9af" translate="yes" xml:space="preserve">
          <source>Ember.js &lt;code&gt;isEqual&lt;/code&gt; - See the &lt;a href=&quot;http://emberjs.com/api/#method_isEqual&quot;&gt;docs&lt;/a&gt; or &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/dfbdbea00bb94f3c1620bd09145540a8bbb8e224/packages/ember-runtime/lib/is-equal.js&quot;&gt;source&lt;/a&gt; for more on this method. It does not do a deep compare on arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ember.js &lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEqual&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このメソッドの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://emberjs.com/api/#method_isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/emberjs/ember.js/blob/dfbdbea00bb94f3c1620bd09145540a8bbb8e224/packages/ember-runtime/lib/is-equal.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソース&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列の詳細な比較は行いません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="9bf6b914418f6ff5b699882d36b4e76c0165bbbb" translate="yes" xml:space="preserve">
          <source>Firstly sort the two objects by key their key names.</source>
          <target state="translated">まず、2つのオブジェクトをキー名でソートします。</target>
        </trans-unit>
        <trans-unit id="6e5947c83c30e1a19b642ffa16b6d6098d8bf522" translate="yes" xml:space="preserve">
          <source>For comparing keys for simple key/value pairs object instances, I use:</source>
          <target state="translated">単純な key-value ペアのオブジェクトインスタンスのキーを比較するために、私は使用します。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="c5bd7b0ace095776ee4b6b5dfd3059ad20f1e805" translate="yes" xml:space="preserve">
          <source>For those of you using NodeJS, there is a convenient method called &lt;code&gt;isDeepStrictEqual&lt;/code&gt; on the native Util library that can achieve this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NodeJSを使用している方のため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に、ネイティブUtilライブラリに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isDeepStrictEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれる便利なメソッドがあり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを実現できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdb53b577aeda6276096be96b953c9f6de0609fc" translate="yes" xml:space="preserve">
          <source>Further complicating things is that in JavaScript the distinction between data and method is blurred.</source>
          <target state="translated">さらに物事を複雑にしているのは、JavaScriptではデータとメソッドの区別が曖昧だということです。</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">ここでは一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="baa059ac55b3a5589ea7c8841e51d303749963bf" translate="yes" xml:space="preserve">
          <source>Here's a playing card example:</source>
          <target state="translated">トランプの例です。</target>
        </trans-unit>
        <trans-unit id="3b49d62cac40c4f166746579d98fd2e9560dafb3" translate="yes" xml:space="preserve">
          <source>Heres's a solution in ES6/ES2015 using a functional-style approach:</source>
          <target state="translated">ES6ES2015で機能的なアプローチを用いたソリューションをご紹介します。</target>
        </trans-unit>
        <trans-unit id="32d8802faf36f90d72a5d340e1a53fdbdca81d37" translate="yes" xml:space="preserve">
          <source>How to determine equality for two JavaScript objects</source>
          <target state="translated">2つのJavaScriptオブジェクトの等質性を判定する方法</target>
        </trans-unit>
        <trans-unit id="d92b8b9b0b56b28284edbfd97a5a4c71ea1cfa30" translate="yes" xml:space="preserve">
          <source>I don't know if anyone's posted anything similar to this, but here's a function I made to check for object equalities.</source>
          <target state="translated">誰か似たようなことを投稿している人がいるかどうかわかりませんが、私が作ったオブジェクトの均等性をチェックするための関数を紹介します。</target>
        </trans-unit>
        <trans-unit id="25541bfbd383408f58434a09bb44967257688815" translate="yes" xml:space="preserve">
          <source>I faced the same problem and deccided to write my own solution. But because I want to also compare Arrays with Objects and vice-versa, I crafted a generic solution. I decided to add the functions to the prototype, but one can easily rewrite them to standalone functions. Here is the code:</source>
          <target state="translated">私も同じ問題に直面し、自分なりの解決策を書くことにしました。しかし、配列とオブジェクトの比較もしたいし、その逆もしたいので、汎用的な解決策を考えてみました。プロトタイプに関数を追加することにしましたが、スタンドアロンの関数に書き換えることも簡単にできます。以下にコードを示します。</target>
        </trans-unit>
        <trans-unit id="620676ac1f2a40da4c05d22910d2f0c26068b7ed" translate="yes" xml:space="preserve">
          <source>I hope/guess objects I define won't hold more than 1000 properties...</source>
          <target state="translated">私が定義したオブジェクトは1000以上のプロパティを保持していないことを期待しています...</target>
        </trans-unit>
        <trans-unit id="72c1020d591149dffba7f2c4297fa3a18961c774" translate="yes" xml:space="preserve">
          <source>I know this is a bit old, but I would like to add a solution that I came up with for this problem.
I had an object  and I wanted to know when its data changed. &quot;something similar to Object.observe&quot; and what I did was:</source>
          <target state="translated">少し古い話ですが、この問題のために私が思いついた解決策を追加したいと思います。私はオブジェクトを持っていて、そのデータがいつ変更されたかを知りたいと思っていました。&quot;Object.observeと似たようなもの &quot;と私がしたことは</target>
        </trans-unit>
        <trans-unit id="0883f0456d3e8799dcde764db81c843dcc4dd20a" translate="yes" xml:space="preserve">
          <source>I see spaghetti code answers.
Without using any third party libs, this is very easy.</source>
          <target state="translated">スパゲッティコードの答えが見えてきました。サードパーティのlibsを使わなくても、これは非常に簡単です。</target>
        </trans-unit>
        <trans-unit id="8a1ed8709f0cb36a073cbc8520873d0a5cff9592" translate="yes" xml:space="preserve">
          <source>I use this &lt;code&gt;comparable&lt;/code&gt; function to produce copies of my objects that are JSON comparable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt; &lt;code&gt;comparable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て、JSONと比較可能なオブジェクトのコピーを生成します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b332b03edb7d73add355c3fa91804a0f84f41d0" translate="yes" xml:space="preserve">
          <source>I'd advise against hashing or serialization (as the JSON solution suggest).  If you need to test if two objects are equal, then you need to define what equals means.  It could be that all data members in both objects match, or it could be that must the memory locations match (meaning both variables reference the same object in memory), or may be that only one data member in each object must match.</source>
          <target state="translated">ハッシュ化やシリアライズ(JSONソリューションが提案しているように)はお勧めしません。二つのオブジェクトが等しいかどうかをテストする必要がある場合、等しいとは何を意味するのかを定義する必要があります。両方のオブジェクトのすべてのデータメンバーが一致するか、メモリの位置が一致しなければならないか(両方の変数がメモリ内の同じオブジェクトを参照していることを意味します)、あるいは、それぞれのオブジェクトのデータメンバーが一致しなければならないのは1つだけかもしれません。</target>
        </trans-unit>
        <trans-unit id="9ac338fd648b3ef084c966e05557018ab32e0a89" translate="yes" xml:space="preserve">
          <source>I'm making the following assumptions with this function:</source>
          <target state="translated">私はこの関数で以下のような仮定をしています。</target>
        </trans-unit>
        <trans-unit id="6811822354e95921e162ee0b9000eabda79d6902" translate="yes" xml:space="preserve">
          <source>If a difference is caught, strings get logged, making differences spottable:</source>
          <target state="translated">差分がキャッチされると、文字列がログに記録され、差分を発見できるようになります。</target>
        </trans-unit>
        <trans-unit id="0b5f5e8bbf5ed9e96e92dffd1ecf50f1cb169a64" translate="yes" xml:space="preserve">
          <source>If this is the case, you'll probably have noticed this situation:</source>
          <target state="translated">そうであれば、この状況に気がついたのではないでしょうか。</target>
        </trans-unit>
        <trans-unit id="efb5c886702935c4ce12a4d3bc9c07efaf9ad546" translate="yes" xml:space="preserve">
          <source>If two objects are different, a MongoDB compatible &lt;code&gt;{$rename:{...}, $unset:{...}, $set:{...}}&lt;/code&gt; like object is returned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つのオブジェクトが異なる場合、MongoDB互換の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{$rename:{...}, $unset:{...}, $set:{...}}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなオブジェクトが返されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29708321ba5aaec34c1a7215a84b07aa3bddff04" translate="yes" xml:space="preserve">
          <source>If you are comparing JSON objects you can use &lt;a href=&quot;https://github.com/mirek/node-rus-diff&quot;&gt;https://github.com/mirek/node-rus-diff&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONオブジェクトを比較する場合は、&lt;/font&gt;&lt;a href=&quot;https://github.com/mirek/node-rus-diff&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https：//github.com/mirek/node-rus-diff&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用でき&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90393fa8bdd43cbf52b4b9cc3a69939fe3b3b483" translate="yes" xml:space="preserve">
          <source>If you are using a JSON library, you can encode each object as JSON, then compare the resulting strings for equality.</source>
          <target state="translated">JSON ライブラリを使用している場合は、各オブジェクトを JSON としてエンコードし、結果として得られる文字列を比較して平等性を確認することができます。</target>
        </trans-unit>
        <trans-unit id="afbad5f8a046eb65d172d7051b1ddb9f5c6cc6b4" translate="yes" xml:space="preserve">
          <source>If you are working in &lt;a href=&quot;http://docs.angularjs.org&quot;&gt;AngularJS&lt;/a&gt;, the &lt;code&gt;angular.equals&lt;/code&gt; function will determine if two objects are equal. In &lt;a href=&quot;http://emberjs.com/api/&quot;&gt;Ember.js&lt;/a&gt; use &lt;code&gt;isEqual&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.angularjs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作業している場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;angular.equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数は2つのオブジェクトが等しいかどうかを判断します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://emberjs.com/api/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ember.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;isEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6cb400c64de748532aa8fe2758bdb1f628afec2" translate="yes" xml:space="preserve">
          <source>If you have a deep copy function handy, you can use the following trick to &lt;em&gt;still&lt;/em&gt; use &lt;code&gt;JSON.stringify&lt;/code&gt; while matching the order of properties:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディープコピー機能が手元にある場合は、次のトリックを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、プロパティの順序を照合しながら&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引き続き&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="075e90365c1c07522501910e3b40364a67c0390e" translate="yes" xml:space="preserve">
          <source>If you require a different equality operator you'll need to add an &lt;code&gt;equals(other)&lt;/code&gt; method, or something like it to your classes and the specifics of your problem domain will determine what exactly that means.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別の等価演算子が必要な場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;equals(other)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドまたはそのようなものをクラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に追加する必要が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります。問題のドメインの詳細によって、その意味が決まります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f230fda54d534adc6e4df446991e11b55e4293ee" translate="yes" xml:space="preserve">
          <source>In Node.js, you can use its native &lt;code&gt;require(&quot;assert&quot;).deepStrictEqual&lt;/code&gt;. More info: 
&lt;a href=&quot;http://nodejs.org/api/assert.html&quot;&gt;http://nodejs.org/api/assert.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Node.jsでは、ネイティブの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;require(&quot;assert&quot;).deepStrictEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細：&lt;/font&gt;&lt;a href=&quot;http://nodejs.org/api/assert.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//nodejs.org/api/assert.html&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe48a5c70a6f7c4c6a94ec61cd153febf7ef3d33" translate="yes" xml:space="preserve">
          <source>In that case I defined &quot;equal&quot; as meaning the the id values match.  Given that each instance has a unique id this could be used to enforce the idea that matching objects also occupy the same memory location.  Although that is not necessary.</source>
          <target state="translated">この場合、私は「等しい」を id の値が一致することを意味すると定義しました。各インスタンスが一意のidを持っていることを考えると、これは一致するオブジェクトが同じメモリ位置を占有するという考えを強制するために使用することができます。これは必須ではありませんが。</target>
        </trans-unit>
        <trans-unit id="f0691b66899e23aa3d4aea59975b85e6520536eb" translate="yes" xml:space="preserve">
          <source>In this above case, &lt;code&gt;c&lt;/code&gt; is not really important to determine whether any two instances of MyClass are equal, only &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are important. In some cases &lt;code&gt;c&lt;/code&gt; might vary between instances and yet not be significant during comparison.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はMyClassの2つのインスタンスが等しいかどうかを判断するのにそれほど重要ではなく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重要なのは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合によっては、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はインスタンス間で異なる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がありますが、比較時には重要ではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8258ec58264eb0921c797310f548d8b602d664d9" translate="yes" xml:space="preserve">
          <source>It will brute force check each key value - just like the other examples on this page - using &lt;a href=&quot;http://en.wikipedia.org/wiki/ECMAScript#Versions&quot;&gt;ECMAScript&amp;nbsp;5&lt;/a&gt; and native optimizations if they're available in the browser.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブラウザで利用できる場合は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ECMAScript#Versions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とネイティブ最適化&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して、このページの他の例と同様に、各キー値を総当たりチェック&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cb20f901fefd383c1d242ee19542c1609444033" translate="yes" xml:space="preserve">
          <source>It's useful to consider two objects equal if they have all the same values for all properties and recursively for all nested objects and arrays.  I also consider the following two objects equal:</source>
          <target state="translated">2つのオブジェクトを等しく検討するには、すべてのプロパティで同じ値を持ち、入れ子になっているオブジェクトと配列をすべて再帰的に検討すると便利です。また、以下の2つのオブジェクトを等しく考えます。</target>
        </trans-unit>
        <trans-unit id="dc34201504cc5166081377b5b96498a67878d000" translate="yes" xml:space="preserve">
          <source>Just wanted to contribute my version of objects comparison utilizing some es6 features. It doesn't take an order into account. After converting all if/else's to ternary I've came with following:</source>
          <target state="translated">es6 の機能を利用したオブジェクト比較の私のバージョンを投稿したいと思いました。これは順序を考慮に入れていません。全ての ifelse を三項式に変換した後、以下のようになりました。</target>
        </trans-unit>
        <trans-unit id="47c8c9aee02fc7cf827f57dbf1ede0ad0a9a951c" translate="yes" xml:space="preserve">
          <source>Needing a more generic object comparison function than had been posted, I cooked up the following. Critique appreciated...</source>
          <target state="translated">投稿されていたものよりも汎用的なオブジェクト比較機能が必要だったので、以下のようなものを作成しました。批評をお願いします。</target>
        </trans-unit>
        <trans-unit id="d24d4b5a369eb9020cd7ee78de6676d60a8db114" translate="yes" xml:space="preserve">
          <source>Note this issue applies when members may themselves also be instances of a type and these each would all be required to have a means of determining equality.</source>
          <target state="translated">この問題は、メンバー自身がタイプのインスタンスである場合にも適用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="e0e0c0e31745b9915640f06ed8b5f58ce68f53d6" translate="yes" xml:space="preserve">
          <source>Note: Previously this answer recommended &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt;, but &lt;a href=&quot;http://lodash.com&quot;&gt;lodash&lt;/a&gt; has done a better job of getting bugs fixed and addressing issues with consistency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：以前はこの回答が&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.jsを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;推奨し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ていました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はバグを修正し、一貫性のある問題に対処するというより良い仕事をしました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cd91d91d61190347de340dda1b9a0bfd5b9b415" translate="yes" xml:space="preserve">
          <source>Obviously that function could do with quite a bit of optimisation, and the ability to do deep checking (to handle nested objects: &lt;code&gt;var a = { foo : { fu : &quot;bar&quot; } }&lt;/code&gt;) but you get the idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明らかに、その関数はかなりの最適化と、詳細なチェックを行う機能（入れ子になったオブジェクトを処理するために：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var a = { foo : { fu : &quot;bar&quot; } }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を使用して実行できますが、アイデアはわかります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c259dd5022babfb3a5506b979118e875e3ce4353" translate="yes" xml:space="preserve">
          <source>Once keys are compared, a simple additional &lt;code&gt;for..in&lt;/code&gt; loop is enough.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーを比較したら、単純な追加の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for..in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループで十分です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d43a43abf441a7f90425c52eb98bd94ce24e3a32" translate="yes" xml:space="preserve">
          <source>One can call it like this:</source>
          <target state="translated">一つはこのように呼ぶことができます。</target>
        </trans-unit>
        <trans-unit id="49a58e13d9a842b9110b1f0e1757f9dede780a67" translate="yes" xml:space="preserve">
          <source>Rationale:</source>
          <target state="translated">Rationale:</target>
        </trans-unit>
        <trans-unit id="37b77573764cd6d5d483d8c43c8e096f07ba30e6" translate="yes" xml:space="preserve">
          <source>Recently I developed an object whose constructor creates a new id (starting from 1 and incrementing by 1) each time an instance is created.  This object has an isEqual function that compares that id value with the id value of another object and returns true if they match.</source>
          <target state="translated">最近、私は、インスタンスが作成されるたびにコンストラクタが新しい id を作成するオブジェクトを開発しました(1 から始まり、1 でインクリメント)。このオブジェクトには、そのidの値を別のオブジェクトのidの値と比較して、一致した場合に真を返すisEqual関数があります。</target>
        </trans-unit>
        <trans-unit id="b3525dcb35efc16cb120bff9914a470cf37ff191" translate="yes" xml:space="preserve">
          <source>See the official documentation from here: &lt;a href=&quot;http://underscorejs.org/#isEqual&quot;&gt;http://underscorejs.org/#isEqual&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここから公式ドキュメントを参照してください：&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//underscorejs.org/#isEqual&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbc69581b83927a8f474cd6ebce2465ed785fc17" translate="yes" xml:space="preserve">
          <source>Short functional &lt;code&gt;deepEqual&lt;/code&gt; implementation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;短い機能的な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;deepEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6bdafed7f2e05a9c430cc0058bbec81f55eef6b" translate="yes" xml:space="preserve">
          <source>Similarly, arrays can have &quot;missing&quot; elements and undefined elements.  I would treat those the same as well:</source>
          <target state="translated">同様に、配列は「欠落した」要素や未定義の要素を持つことがあります。これらも同じように扱います。</target>
        </trans-unit>
        <trans-unit id="c81edfd008d4c1731ec44ab60d932a907f338782" translate="yes" xml:space="preserve">
          <source>Since the properties of &lt;code&gt;obj1&lt;/code&gt; are copied to the clone one by one, their order in the clone will be preserved. And when the properties of &lt;code&gt;obj2&lt;/code&gt; are copied to the clone, since properties already existing in &lt;code&gt;obj1&lt;/code&gt; will simply be overwritten, their orders in the clone will be preserved.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のプロパティは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つずつクローンにコピーされるため、クローン内でのそれらの順序は保持されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のプロパティが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クローンにコピーされると、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj1&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;既に存在するプロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は単純に上書きされるため、クローンでのそれらの順序は保持されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92e40bfd5cf1b972d5b743a5a61761a1f2225cb9" translate="yes" xml:space="preserve">
          <source>Stack Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/194846&quot;&gt;Is there any kind of hashCode function in JavaScript?&lt;/a&gt;&lt;/em&gt; is similar to this question, but requires a more academic answer. The scenario above demonstrates why it would be necessary to have one, and I'm wondering if there is any &lt;strong&gt;equivalent solution&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スタックオーバーフローの質問&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/194846&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptには、何らかのhashCode関数がありますか？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問に似ていますが、より学術的な答えが必要です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のシナリオは、なぜそれが必要なのかを示しており、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同等の解決策&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があるかどうか疑問に思ってい&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3248ac49043c7d1a8816748bc2b7bdd38a95701b" translate="yes" xml:space="preserve">
          <source>The concept is that of an Equals method that compares two different instances of an object to indicate whether they are equal at a value level. However, it is up to the specific type to define how an &lt;code&gt;Equals&lt;/code&gt; method should be implemented. An iterative comparison of attributes that have primitive values may not be enough, there may well be attributes which are not to be considered part of the object value. For example,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;概念は、オブジェクトの2つの異なるインスタンスを比較して、値レベルで等しいかどうかを示すEqualsメソッドの概念です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドの実装方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を定義するのは特定のタイプ次第&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プリミティブ値を持つ属性の反復比較では不十分な場合があります。オブジェクト値の一部と見なされない属性がある場合もあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5dae3164b37783ade9b11ff3acb22344db75238" translate="yes" xml:space="preserve">
          <source>The default equality operator in JavaScript for Objects yields true when they refer to the same location in memory.</source>
          <target state="translated">JavaScript for Objects のデフォルトの等値演算子は、メモリ内の同じ場所を参照している場合に真を返します。</target>
        </trans-unit>
        <trans-unit id="f47fc7cc0217e32f8128f8cb6829359ad7f70762" translate="yes" xml:space="preserve">
          <source>The function either returns true or false, in this case true.
The algorithm als allows comparison between very complex objects:</source>
          <target state="translated">この関数は,真または偽を返します(この場合は真).このアルゴリズムは,非常に複雑なオブジェクト間の比較を可能にします.</target>
        </trans-unit>
        <trans-unit id="5c4fb9540b37ba4c6f473dc93528da4bdcca078c" translate="yes" xml:space="preserve">
          <source>The simple answer is: No, there is no generic means to determine that an object is equal to another in the sense you mean. The exception is when you are strictly thinking of an object being typeless.</source>
          <target state="translated">簡単な答えは いいえ、あなたが言っている意味でオブジェクトが他のものと等しいと判断するための一般的な手段はありません。例外は、オブジェクトが型なしであることを厳密に考えている場合です。</target>
        </trans-unit>
        <trans-unit id="9887c1e44990a19a15ca805db7dd0e64078c6d2d" translate="yes" xml:space="preserve">
          <source>The upper example will return true, even tho the properties have a different ordering. One small detail to look out for: This code also checks for the same type of two variables, so &quot;3&quot; is not the same as 3.</source>
          <target state="translated">上の例では、プロパティの順序が異なっていても、真を返します。ちょっとした注意点があります。このコードは2つの変数が同じ型であるかどうかもチェックしているので、&quot;3 &quot;は3と同じではありません。</target>
        </trans-unit>
        <trans-unit id="9bc2b512f582f1094f90e407b5398a6a0d03c739" translate="yes" xml:space="preserve">
          <source>Then simply use a string to compare them.</source>
          <target state="translated">あとは単純に文字列を使って比較するだけです。</target>
        </trans-unit>
        <trans-unit id="df881162c43f80bfc47bc0e210b19496cec86b50" translate="yes" xml:space="preserve">
          <source>This Algorithm is split into two parts; The equals function itself and a function to find the numeric index of a property in an array / object. The find function is only needed because indexof only finds numbers and strings and no objects .</source>
          <target state="translated">このアルゴ リ ズムは 2 つの部分に分かれています。等値関数自体と、配列オブジェクト内のプロパティの数値インデッ クスを見つける関数です。indexof は数値と文字列のみを検出し、オブジェクトを検出しないので、 find 関数だけが必要となります。</target>
        </trans-unit>
        <trans-unit id="754f106228e194f1279ec0c2c82d2ff928ed3a74" translate="yes" xml:space="preserve">
          <source>This compares for: 1) Equality of number of own properties, 2) Equality of key names, 3) if bCompareValues == true, Equality of corresponding property values and their types (triple equality)</source>
          <target state="translated">これは以下のように比較します。1)自身のプロパティの数の平等、2)キー名の平等、3)bCompareValues ==true の場合、対応するプロパティの値とその型の平等(トリプル平等)を比較します。</target>
        </trans-unit>
        <trans-unit id="71c2f715419ebeaf9d7d96b150a8a8d110a88340" translate="yes" xml:space="preserve">
          <source>This here can be duplicated and create an other set of arrays to compare the values and keys.
It is very simple because they are now arrays and will return false if objects have different sizes.</source>
          <target state="translated">ここでは複製して、値とキーを比較するための別の配列のセットを作成することができます。これで配列になり、オブジェクトのサイズが異なる場合はfalseを返してくれるので、非常にシンプルです。</target>
        </trans-unit>
        <trans-unit id="aa46560f12acee3169cd00cd4bd44d11148f1815" translate="yes" xml:space="preserve">
          <source>This is an addition for all the above, not a replacement. If you need to fast shallow-compare objects without need to check extra recursive cases. Here is a shot.</source>
          <target state="translated">これは上記のすべてのための追加であり、置き換えではありません。余分な再帰的なケースをチェックする必要なく、高速に浅いオブジェクトを比較する必要がある場合。ここにショットがあります。</target>
        </trans-unit>
        <trans-unit id="c9505525e3bdc04fda5bed77005de531d43cb56e" translate="yes" xml:space="preserve">
          <source>This is my version. It is using new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;Object.keys&lt;/a&gt; feature that is introduced in ES5 and ideas/tests from &lt;a href=&quot;https://stackoverflow.com/a/3849480/1414809&quot;&gt;+&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/a/6713782/1414809&quot;&gt;+&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/5522917/1414809&quot;&gt;+&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは私のバージョンです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、新しい使用している&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keysの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ES5とアイデアで導入された機能を/テストから&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/3849480/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/6713782/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/5522917/1414809&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90ec7ca1035450e2a6f8682ad4006417b0d98196" translate="yes" xml:space="preserve">
          <source>This should be treated as a demonstration of a simple strategy.</source>
          <target state="translated">これは単純な戦略の実証として扱うべきです。</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="792b7493198c3be198997add4b384b829f08681c" translate="yes" xml:space="preserve">
          <source>What about an object that has one of its existing prototype methods overridden by another function? Could it still be considered equal to another instance that it otherwise identical? That question can only be answered in each specific case for each type.</source>
          <target state="translated">既存のプロトタイプメソッドの一つが別の関数によってオーバーライドされているオブジェクトはどうでしょうか?それは他のインスタンスと同じであると考えられるでしょうか?この質問は、それぞれの型の特定のケースでしか答えられません。</target>
        </trans-unit>
        <trans-unit id="e04a49ef2f49a2ac92317cdbde251081ad8bec35" translate="yes" xml:space="preserve">
          <source>Why reinvent the wheel? Give &lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;Lodash&lt;/a&gt; a try. It has a number of must-have functions such as &lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;isEqual()&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜ車輪を再発明するのですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与える&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lodashに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;試して。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lodash.com/docs#isEqual&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;isEqual（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など、いくつかの必須の関数があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="512892a6d2cc9a3dfc510df95d685bde807508de" translate="yes" xml:space="preserve">
          <source>You control the objects you are comparing and you only have primitive values (ie. not nested objects, functions, etc.).</source>
          <target state="translated">比較するオブジェクトをコントロールし、プリミティブな値しか持たない(つまり、入れ子になっていないオブジェクトや関数などではない)。</target>
        </trans-unit>
        <trans-unit id="7205aa9b0944c9842020e4e256fcee8da21ce962" translate="yes" xml:space="preserve">
          <source>Your browser has support for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;Object.keys&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;お使いのブラウザは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keys&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をサポートしてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee619071b38ecc7251b25b3efb7ade8477c0785b" translate="yes" xml:space="preserve">
          <source>demo available here</source>
          <target state="translated">デモはこちら</target>
        </trans-unit>
        <trans-unit id="c472e218b2a3d97cf9c8918237425bf7f39e1ee9" translate="yes" xml:space="preserve">
          <source>for the object, you have to sort(by key) recursively for both side objects</source>
          <target state="translated">の場合、両サイドのオブジェクトを再帰的にソート(キーで)しなければなりません。</target>
        </trans-unit>
        <trans-unit id="371bf4463174918cf4efbd1b49aa07e5ff9dfcc7" translate="yes" xml:space="preserve">
          <source>you can use &lt;code&gt;_.isEqual(obj1, obj2)&lt;/code&gt; from the underscore.js library.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;underscore.jsライブラリの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_.isEqual(obj1, obj2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b13d95866739a1930d09680ea4155d3c01de73bc" translate="yes" xml:space="preserve">
          <source>you might have to do something like this:</source>
          <target state="translated">みたいなことをしなければならないかもしれません。</target>
        </trans-unit>
        <trans-unit id="1209354b665bb8fe81c2c3efa5bc0a6e92839803" translate="yes" xml:space="preserve">
          <source>you need to replace &lt;code&gt;val1&lt;/code&gt;and &lt;code&gt;val2&lt;/code&gt; with your Object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;val1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;val2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に置き換える必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
