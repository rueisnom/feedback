<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/20449427">
    <body>
      <group id="20449427">
        <trans-unit id="cae90893e281d9ef3f6fac0a840ab6b504dcc5c3" translate="yes" xml:space="preserve">
          <source>(Note: in Python 2.x use &lt;code&gt;raw_input()&lt;/code&gt;. In Python 3.x use &lt;code&gt;input()&lt;/code&gt;. &lt;code&gt;raw_input()&lt;/code&gt; was renamed to &lt;code&gt;input()&lt;/code&gt; in Python 3.x)</source>
          <target state="translated">(참고 : Python 2.x에서는 &lt;code&gt;raw_input()&lt;/code&gt; . Python 3.x에서는 &lt;code&gt;input()&lt;/code&gt; . &lt;code&gt;raw_input()&lt;/code&gt; 은 Python 3.x에서 &lt;code&gt;input()&lt;/code&gt; 으로 이름이 변경되었습니다)</target>
        </trans-unit>
        <trans-unit id="5a1063c92acfc2880627803f00add514561ebde0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input()&lt;/code&gt; (Python 3) and &lt;code&gt;raw_input()&lt;/code&gt; (Python 2) &lt;em&gt;always&lt;/em&gt; return strings. Convert the result to integer explicitly with &lt;code&gt;int()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input()&lt;/code&gt; (Python 3) 및 &lt;code&gt;raw_input()&lt;/code&gt; (Python 2)은 &lt;em&gt;항상&lt;/em&gt; 문자열을 반환합니다. &lt;code&gt;int()&lt;/code&gt; 를 사용하여 결과를 정수로 명시 적으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="8bec5133c1236eab12415d1a0a89f60407f3e35c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; you should be careful when you are using &lt;code&gt;input&lt;/code&gt; in Python 2.x. I explained why one should be careful when using it, in &lt;a href=&quot;https://stackoverflow.com/a/21122817/1903116&quot;&gt;this answer&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; Python 2.x에서 &lt;code&gt;input&lt;/code&gt; 을 사용할 때는주의해야합니다. 나는 &lt;a href=&quot;https://stackoverflow.com/a/21122817/1903116&quot;&gt;이 답변&lt;/a&gt; 에서 그것을 사용할 때 조심 해야하는 이유를 설명했다.</target>
        </trans-unit>
        <trans-unit id="39e8b090ff11bd7f6fc556a07fc0163999d7b98f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python 2.x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;파이썬 2.x&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="069fc1650dccc845a828738f64a47b867fac67b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python 3.x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;파이썬 3.x&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43f038c62b45a67bf440ca6fe8caa39490287184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solution&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0def28abff50b5453af5effe03f21c319e75a393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLDR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TLDR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fc3a572a5c311811ac09dbad932ed7f6b4a1586" translate="yes" xml:space="preserve">
          <source>Apart from that, your program can be changed a little bit, like this</source>
          <target state="translated">그 외에도 프로그램을 다음과 같이 약간 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="560f0c7f8aebc6efc4aabb28bc8eff5b1fcf0ddc" translate="yes" xml:space="preserve">
          <source>But, &lt;code&gt;raw_input&lt;/code&gt; doesn't evaluate the input and returns as it is, as a string.</source>
          <target state="translated">그러나 &lt;code&gt;raw_input&lt;/code&gt; 은 입력을 평가하지 않고 그대로 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="525cf7d2ef6ec81b4070e820037b36413066a1ea" translate="yes" xml:space="preserve">
          <source>Convert to integers:</source>
          <target state="translated">정수로 변환 :</target>
        </trans-unit>
        <trans-unit id="b4cc9953db01bcbf91fd85c1ec35d8301729ee34" translate="yes" xml:space="preserve">
          <source>For multiple integer in a single line, &lt;a href=&quot;https://docs.python.org/library/functions.html#map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; might be better.</source>
          <target state="translated">한 줄에 여러 정수가 있으면 &lt;a href=&quot;https://docs.python.org/library/functions.html#map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; 이 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="986144c3b5b0c8ced1bb2c87a1da25357d07d562" translate="yes" xml:space="preserve">
          <source>For values that can have a fractional component, the type would be &lt;code&gt;float&lt;/code&gt; rather than &lt;code&gt;int&lt;/code&gt;:</source>
          <target state="translated">소수 구성 요소를 가질 수있는 값의 경우 유형은 &lt;code&gt;int&lt;/code&gt; 가 아니라 &lt;code&gt;float&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="fd267f8d65051f7d169af8e737bf62d7a4844942" translate="yes" xml:space="preserve">
          <source>How can I read inputs as numbers</source>
          <target state="translated">입력을 숫자로 읽는 방법</target>
        </trans-unit>
        <trans-unit id="bf40fa783e5c6bf190a5901954cabc986878cc58" translate="yes" xml:space="preserve">
          <source>I encountered a problem of taking integer input while solving a problem on &lt;a href=&quot;http://www.codechef.com/problems/TLG&quot;&gt;CodeChef&lt;/a&gt;, where two integers - separated by space - should be read from one line.</source>
          <target state="translated">공백으로 구분 된 두 개의 정수를 한 줄에서 읽어야하는 &lt;a href=&quot;http://www.codechef.com/problems/TLG&quot;&gt;CodeChef&lt;/a&gt; 에서 문제를 해결하는 동안 정수 입력을 얻는 데 문제가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="ba1cf462bcd72173508773b2ef51685cb21b5628" translate="yes" xml:space="preserve">
          <source>If the number is already known, (like 2 integers), you can use</source>
          <target state="translated">숫자가 이미 알려진 경우 (예 : 2 개의 정수)</target>
        </trans-unit>
        <trans-unit id="e736f651d0b03431fc4f85b2d58fca64696fed13" translate="yes" xml:space="preserve">
          <source>In Python 3.x, &lt;code&gt;raw_input&lt;/code&gt; was renamed to &lt;code&gt;input&lt;/code&gt; and the Python 2.x &lt;code&gt;input&lt;/code&gt; was removed.</source>
          <target state="translated">Python 3.x에서 &lt;code&gt;raw_input&lt;/code&gt; 의 이름이 &lt;code&gt;input&lt;/code&gt; 으로 바뀌고 Python 2.x &lt;code&gt;input&lt;/code&gt; 이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="64bd0cf427c7260d36ee47561af30975df69e2ab" translate="yes" xml:space="preserve">
          <source>Multiple questions require input for several integers on single line.  The best way is to input the whole string of numbers one one line and then split them to integers. Here is a Python 3 version:</source>
          <target state="translated">여러 질문에는 한 줄에 여러 정수를 입력해야합니다. 가장 좋은 방법은 전체 문자열을 한 줄에 입력 한 다음 정수로 나누는 것입니다. 다음은 Python 3 버전입니다.</target>
        </trans-unit>
        <trans-unit id="aeadcdace93bbdbe43a47a722a56c73d5e15a656" translate="yes" xml:space="preserve">
          <source>Now I use num1 and  num2 as integers.  Hope this helps.</source>
          <target state="translated">이제 num1과 num2를 정수로 사용합니다. 도움이 되었기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="3f171c5d3606dab6de569e9498c070ed67e2dc56" translate="yes" xml:space="preserve">
          <source>Python 2's equivalent of Python 3's &lt;code&gt;input&lt;/code&gt; is the &lt;code&gt;raw_input&lt;/code&gt; function.</source>
          <target state="translated">Python 2와 Python 3의 &lt;code&gt;input&lt;/code&gt; 은 &lt;code&gt;raw_input&lt;/code&gt; 함수입니다.</target>
        </trans-unit>
        <trans-unit id="d2ed04290ae84c0abe842737132db0bd05f4ce50" translate="yes" xml:space="preserve">
          <source>Python 3 doesn't evaluate the data received with &lt;code&gt;input&lt;/code&gt; function, but Python 2's &lt;code&gt;input&lt;/code&gt; function does (read the next section to understand the implication).</source>
          <target state="translated">Python 3은 &lt;code&gt;input&lt;/code&gt; 함수로 수신 된 데이터를 평가하지 않지만 Python 2의 &lt;code&gt;input&lt;/code&gt; 함수는 수행합니다 (다음 섹션을 읽고 의미를 이해하십시오).</target>
        </trans-unit>
        <trans-unit id="44f8eaaa275321d3ad247e1fdc3e9c34fe62ed62" translate="yes" xml:space="preserve">
          <source>Python 3.x's &lt;a href=&quot;https://docs.python.org/3/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; and Python 2.x's &lt;code&gt;raw_input&lt;/code&gt; are similar and &lt;code&gt;raw_input&lt;/code&gt; is not available in Python 3.x.</source>
          <target state="translated">Python 3.x의 &lt;a href=&quot;https://docs.python.org/3/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt; 과 Python 2.x의 &lt;code&gt;raw_input&lt;/code&gt; 은 비슷하며 &lt;code&gt;raw_input&lt;/code&gt; 은 Python 3.x에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2b3bf68391c25e5aad46876dd83b104dbc9d5097" translate="yes" xml:space="preserve">
          <source>Similarly for floating point numbers:</source>
          <target state="translated">부동 소수점 숫자와 유사하게 :</target>
        </trans-unit>
        <trans-unit id="c89064f3b9d2dbeb0f6db69ffe74f121bd1b90fe" translate="yes" xml:space="preserve">
          <source>The data &lt;code&gt;5 + 17&lt;/code&gt; is evaluated and the result is &lt;code&gt;22&lt;/code&gt;. When it evaluates the expression &lt;code&gt;5 + 17&lt;/code&gt;, it detects that you are adding two numbers and so the result will also be of the same &lt;code&gt;int&lt;/code&gt; type. So, the type conversion is done for free and &lt;code&gt;22&lt;/code&gt; is returned as the result of &lt;code&gt;input&lt;/code&gt; and stored in &lt;code&gt;data&lt;/code&gt; variable. You can think of &lt;code&gt;input&lt;/code&gt; as the &lt;code&gt;raw_input&lt;/code&gt; composed with an &lt;a href=&quot;https://docs.python.org/2/library/functions.html#eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">데이터 &lt;code&gt;5 + 17&lt;/code&gt; 이 평가되고 결과는 &lt;code&gt;22&lt;/code&gt; 입니다. 표현식 &lt;code&gt;5 + 17&lt;/code&gt; 평가할 때 두 개의 숫자를 더하는 것을 감지하므로 결과도 같은 &lt;code&gt;int&lt;/code&gt; 유형이됩니다. 따라서 유형 변환이 무료로 수행되고 &lt;code&gt;input&lt;/code&gt; 결과로 &lt;code&gt;22&lt;/code&gt; 가 리턴되어 &lt;code&gt;data&lt;/code&gt; 변수에 저장됩니다. &lt;code&gt;input&lt;/code&gt; 을 &lt;a href=&quot;https://docs.python.org/2/library/functions.html#eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; 호출로 구성된 &lt;code&gt;raw_input&lt;/code&gt; 으로 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4139c2ebc458fa3ba141dc02c14ab0769067731" translate="yes" xml:space="preserve">
          <source>The second parameter tells what is the base of the numbers entered and then internally it understands and converts it. If the entered data is wrong it will throw a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">두 번째 매개 변수는 입력 한 숫자의 밑이 무엇인지 알려주고 내부적으로 이해하고 변환합니다. 입력 된 데이터가 틀리면 &lt;code&gt;ValueError&lt;/code&gt; 가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="beefd0dbea26d3edda843d4d8df349297ec6058d" translate="yes" xml:space="preserve">
          <source>There were two functions to get user input, called &lt;a href=&quot;https://docs.python.org/2/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/2/library/functions.html#raw_input&quot;&gt;&lt;code&gt;raw_input&lt;/code&gt;&lt;/a&gt;. The difference between them is, &lt;code&gt;raw_input&lt;/code&gt; doesn't evaluate the data and returns as it is, in string form. But, &lt;code&gt;input&lt;/code&gt; will evaluate whatever you entered and the result of evaluation will be returned. For example,</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/2/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;https://docs.python.org/2/library/functions.html#raw_input&quot;&gt; &lt;code&gt;raw_input&lt;/code&gt; &lt;/a&gt; 이라는 사용자 입력을 얻는 두 가지 기능이 있습니다. 이들의 차이점은 &lt;code&gt;raw_input&lt;/code&gt; 은 데이터를 평가하지 않고 그대로 문자열 형식으로 반환한다는 것입니다. 그러나 &lt;code&gt;input&lt;/code&gt; 은 입력 한 내용을 평가하고 평가 결과가 반환됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="48ff3fe5bd07d51b2046af7a0c98db00b2d14da2" translate="yes" xml:space="preserve">
          <source>This means that, just like &lt;code&gt;raw_input&lt;/code&gt;, &lt;a href=&quot;http://docs.python.org/3/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; in Python 3.x always returns a string object.</source>
          <target state="translated">이는 &lt;code&gt;raw_input&lt;/code&gt; 과 마찬가지로 Python 3.x의 &lt;a href=&quot;http://docs.python.org/3/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt; 은 항상 문자열 객체를 반환한다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="dbca54fbd0bbb9bbded4c99bcb650141a74b663c" translate="yes" xml:space="preserve">
          <source>To answer your question, since Python 3.x doesn't evaluate and convert the data type, you have to explicitly convert to &lt;code&gt;int&lt;/code&gt;s, with &lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, like this</source>
          <target state="translated">파이썬 3.x는 데이터 유형을 평가하고 변환하지 않으므로 질문에 대답하려면 다음과 같이 &lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 를 사용하여 명시 적으로 &lt;code&gt;int&lt;/code&gt; 로 변환해야합니다</target>
        </trans-unit>
        <trans-unit id="6895fcae989796217d4b080693ad4fc240a7fc83" translate="yes" xml:space="preserve">
          <source>To fix the problem, you need to explicitly make those inputs into integers by putting them in &lt;a href=&quot;http://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">문제를 해결하려면 &lt;a href=&quot;http://docs.python.org/3/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; 에 입력하여 입력을 정수로 명시 적으로 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="ebc8ecd2027afda808d374854563474f248f5531" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;int(input())&lt;/code&gt; is sufficient for a single integer, I did not find a direct way to input two integers.  I tried this:</source>
          <target state="translated">&lt;code&gt;int(input())&lt;/code&gt; 은 단일 정수에 충분하지만 두 정수를 직접 입력하는 방법을 찾지 못했습니다. 나는 이것을 시도했다 :</target>
        </trans-unit>
        <trans-unit id="ccf9421c74d6702641b870cbf34013322af9a583" translate="yes" xml:space="preserve">
          <source>While in your example, &lt;code&gt;int(input(...))&lt;/code&gt; does the trick in any case, &lt;code&gt;python-future&lt;/code&gt;'s &lt;a href=&quot;http://python-future.org/compatible_idioms.html#input&quot;&gt;&lt;code&gt;builtins.input&lt;/code&gt;&lt;/a&gt; is worth consideration since that makes sure your code works for both Python 2 and 3 &lt;em&gt;and&lt;/em&gt; disables Python2's default behaviour of &lt;code&gt;input&lt;/code&gt; trying to be &quot;clever&quot; about the input data type (&lt;code&gt;builtins.input&lt;/code&gt; basically just behaves like &lt;code&gt;raw_input&lt;/code&gt;).</source>
          <target state="translated">귀하의 예제에서 &lt;code&gt;int(input(...))&lt;/code&gt; 은 어떤 경우에도 트릭을 수행하지만 &lt;code&gt;python-future&lt;/code&gt; 의 &lt;a href=&quot;http://python-future.org/compatible_idioms.html#input&quot;&gt; &lt;code&gt;builtins.input&lt;/code&gt; &lt;/a&gt; 은 코드가 Python 2 및 3 모두에서 작동 &lt;em&gt;하고&lt;/em&gt; Python2의 기본 동작을 비활성화하기 때문에 고려할 가치가 있습니다. 입력 데이터 유형에 대해 &quot;영리한&quot; &lt;code&gt;input&lt;/code&gt; 시도하는 ( &lt;code&gt;builtins.input&lt;/code&gt; 은 기본적으로 &lt;code&gt;raw_input&lt;/code&gt; 과 같이 작동합니다).</target>
        </trans-unit>
        <trans-unit id="a0d6f6a5537f3f3a61d8e445b44949e5d1ae4d98" translate="yes" xml:space="preserve">
          <source>Why are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; strings instead of ints in the below code?</source>
          <target state="translated">아래 코드에서 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; 문자열이 정수가 아닌 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="f2e31f97d81e588c5461f93decdc41c137913cc7" translate="yes" xml:space="preserve">
          <source>You can accept numbers of any base and convert them directly to base-10 with the &lt;code&gt;int&lt;/code&gt; function, like this</source>
          <target state="translated">다음과 같이 &lt;code&gt;int&lt;/code&gt; 함수를 사용하여 임의의 밑수를 받아 10을 밑수로 직접 변환 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="fc6b2b4568134d65a83e0e9897585b6a212812ab" translate="yes" xml:space="preserve">
          <source>You can get rid of the &lt;code&gt;play&lt;/code&gt; variable by using &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;while True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 와 &lt;code&gt;while True&lt;/code&gt; 를 사용하여 &lt;code&gt;play&lt;/code&gt; 변수를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f0d5f0509b2266015128e866c9cf687a87f7b26" translate="yes" xml:space="preserve">
          <source>the for loop shall run 'n' number of times . the second 'n' is the length of the array.
the last statement maps the integers to a list and takes input in space separated form .
you can also return the array at the end of for loop.</source>
          <target state="translated">for 루프는 'n'번 실행됩니다. 두 번째 'n'은 배열의 길이입니다. 마지막 명령문은 정수를 목록에 맵핑하고 공백으로 구분 된 형식으로 입력을받습니다. for 루프의 끝에서 배열을 반환 할 수도 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
