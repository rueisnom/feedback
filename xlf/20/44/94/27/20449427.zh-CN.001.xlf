<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/20449427">
    <body>
      <group id="20449427">
        <trans-unit id="cae90893e281d9ef3f6fac0a840ab6b504dcc5c3" translate="yes" xml:space="preserve">
          <source>(Note: in Python 2.x use &lt;code&gt;raw_input()&lt;/code&gt;. In Python 3.x use &lt;code&gt;input()&lt;/code&gt;. &lt;code&gt;raw_input()&lt;/code&gt; was renamed to &lt;code&gt;input()&lt;/code&gt; in Python 3.x)</source>
          <target state="translated">（注意：在Python 2.x中，请使用 &lt;code&gt;raw_input()&lt;/code&gt; 。在Python 3.x中，请使用 &lt;code&gt;input()&lt;/code&gt; 。 &lt;code&gt;raw_input()&lt;/code&gt; &lt;code&gt;input()&lt;/code&gt; 在Python 3.x中被重命名为input（） ）</target>
        </trans-unit>
        <trans-unit id="5a1063c92acfc2880627803f00add514561ebde0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input()&lt;/code&gt; (Python 3) and &lt;code&gt;raw_input()&lt;/code&gt; (Python 2) &lt;em&gt;always&lt;/em&gt; return strings. Convert the result to integer explicitly with &lt;code&gt;int()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input()&lt;/code&gt; （Python 3）和 &lt;code&gt;raw_input()&lt;/code&gt; （Python 2） &lt;em&gt;始终&lt;/em&gt;返回字符串。 使用 &lt;code&gt;int()&lt;/code&gt; 将结果显式转换为整数。</target>
        </trans-unit>
        <trans-unit id="8bec5133c1236eab12415d1a0a89f60407f3e35c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; you should be careful when you are using &lt;code&gt;input&lt;/code&gt; in Python 2.x. I explained why one should be careful when using it, in &lt;a href=&quot;https://stackoverflow.com/a/21122817/1903116&quot;&gt;this answer&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在Python 2.x中使用 &lt;code&gt;input&lt;/code&gt; 时，请务必小心。 我在&lt;a href=&quot;https://stackoverflow.com/a/21122817/1903116&quot;&gt;这个答案中&lt;/a&gt;解释了为什么在使用它时应该小心。</target>
        </trans-unit>
        <trans-unit id="39e8b090ff11bd7f6fc556a07fc0163999d7b98f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python 2.x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Python 2.x&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="069fc1650dccc845a828738f64a47b867fac67b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python 3.x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Python 3.x&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43f038c62b45a67bf440ca6fe8caa39490287184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solution&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0def28abff50b5453af5effe03f21c319e75a393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLDR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TLDR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fc3a572a5c311811ac09dbad932ed7f6b4a1586" translate="yes" xml:space="preserve">
          <source>Apart from that, your program can be changed a little bit, like this</source>
          <target state="translated">除此以外,你的程序还可以稍微改变一下,比如说</target>
        </trans-unit>
        <trans-unit id="560f0c7f8aebc6efc4aabb28bc8eff5b1fcf0ddc" translate="yes" xml:space="preserve">
          <source>But, &lt;code&gt;raw_input&lt;/code&gt; doesn't evaluate the input and returns as it is, as a string.</source>
          <target state="translated">但是， &lt;code&gt;raw_input&lt;/code&gt; 不会评估输入，而是以字符串形式原样返回。</target>
        </trans-unit>
        <trans-unit id="525cf7d2ef6ec81b4070e820037b36413066a1ea" translate="yes" xml:space="preserve">
          <source>Convert to integers:</source>
          <target state="translated">转换为整数。</target>
        </trans-unit>
        <trans-unit id="b4cc9953db01bcbf91fd85c1ec35d8301729ee34" translate="yes" xml:space="preserve">
          <source>For multiple integer in a single line, &lt;a href=&quot;https://docs.python.org/library/functions.html#map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; might be better.</source>
          <target state="translated">对于单行中的多个整数， &lt;a href=&quot;https://docs.python.org/library/functions.html#map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;可能更好。</target>
        </trans-unit>
        <trans-unit id="986144c3b5b0c8ced1bb2c87a1da25357d07d562" translate="yes" xml:space="preserve">
          <source>For values that can have a fractional component, the type would be &lt;code&gt;float&lt;/code&gt; rather than &lt;code&gt;int&lt;/code&gt;:</source>
          <target state="translated">对于可以包含小数部分的值，类型将为 &lt;code&gt;float&lt;/code&gt; 而不是 &lt;code&gt;int&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fd267f8d65051f7d169af8e737bf62d7a4844942" translate="yes" xml:space="preserve">
          <source>How can I read inputs as numbers</source>
          <target state="translated">如何将输入读成数字</target>
        </trans-unit>
        <trans-unit id="bf40fa783e5c6bf190a5901954cabc986878cc58" translate="yes" xml:space="preserve">
          <source>I encountered a problem of taking integer input while solving a problem on &lt;a href=&quot;http://www.codechef.com/problems/TLG&quot;&gt;CodeChef&lt;/a&gt;, where two integers - separated by space - should be read from one line.</source>
          <target state="translated">我在解决&lt;a href=&quot;http://www.codechef.com/problems/TLG&quot;&gt;CodeChef&lt;/a&gt;上的问题时遇到了输入整数的问题，该问题应从一行读取两个以空格分隔的整数。</target>
        </trans-unit>
        <trans-unit id="ba1cf462bcd72173508773b2ef51685cb21b5628" translate="yes" xml:space="preserve">
          <source>If the number is already known, (like 2 integers), you can use</source>
          <target state="translated">如果已经知道的数字,(如2个整数),可以使用</target>
        </trans-unit>
        <trans-unit id="e736f651d0b03431fc4f85b2d58fca64696fed13" translate="yes" xml:space="preserve">
          <source>In Python 3.x, &lt;code&gt;raw_input&lt;/code&gt; was renamed to &lt;code&gt;input&lt;/code&gt; and the Python 2.x &lt;code&gt;input&lt;/code&gt; was removed.</source>
          <target state="translated">在Python 3.x中，将 &lt;code&gt;raw_input&lt;/code&gt; 重命名为 &lt;code&gt;input&lt;/code&gt; ，并删除了Python 2.x &lt;code&gt;input&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64bd0cf427c7260d36ee47561af30975df69e2ab" translate="yes" xml:space="preserve">
          <source>Multiple questions require input for several integers on single line.  The best way is to input the whole string of numbers one one line and then split them to integers. Here is a Python 3 version:</source>
          <target state="translated">复数题要求在单行输入几个整数。最好的方法是在一行中输入一整串数字,然后将其分割成整数。这里有一个Python 3的版本。</target>
        </trans-unit>
        <trans-unit id="aeadcdace93bbdbe43a47a722a56c73d5e15a656" translate="yes" xml:space="preserve">
          <source>Now I use num1 and  num2 as integers.  Hope this helps.</source>
          <target state="translated">现在我用num1和num2作为整数。希望这对我有帮助。</target>
        </trans-unit>
        <trans-unit id="3f171c5d3606dab6de569e9498c070ed67e2dc56" translate="yes" xml:space="preserve">
          <source>Python 2's equivalent of Python 3's &lt;code&gt;input&lt;/code&gt; is the &lt;code&gt;raw_input&lt;/code&gt; function.</source>
          <target state="translated">Python 2等同于Python 3的 &lt;code&gt;input&lt;/code&gt; 是 &lt;code&gt;raw_input&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="d2ed04290ae84c0abe842737132db0bd05f4ce50" translate="yes" xml:space="preserve">
          <source>Python 3 doesn't evaluate the data received with &lt;code&gt;input&lt;/code&gt; function, but Python 2's &lt;code&gt;input&lt;/code&gt; function does (read the next section to understand the implication).</source>
          <target state="translated">Python 3不会评估使用 &lt;code&gt;input&lt;/code&gt; 函数接收到的数据，但是Python 2的 &lt;code&gt;input&lt;/code&gt; 函数会评估（阅读下一节以了解含义）。</target>
        </trans-unit>
        <trans-unit id="44f8eaaa275321d3ad247e1fdc3e9c34fe62ed62" translate="yes" xml:space="preserve">
          <source>Python 3.x's &lt;a href=&quot;https://docs.python.org/3/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; and Python 2.x's &lt;code&gt;raw_input&lt;/code&gt; are similar and &lt;code&gt;raw_input&lt;/code&gt; is not available in Python 3.x.</source>
          <target state="translated">Python 3.x的&lt;a href=&quot;https://docs.python.org/3/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt;和Python 2.x的 &lt;code&gt;raw_input&lt;/code&gt; 相似，而 &lt;code&gt;raw_input&lt;/code&gt; 在Python 3.x中不可用。</target>
        </trans-unit>
        <trans-unit id="2b3bf68391c25e5aad46876dd83b104dbc9d5097" translate="yes" xml:space="preserve">
          <source>Similarly for floating point numbers:</source>
          <target state="translated">同样的,对于浮点数字也是如此。</target>
        </trans-unit>
        <trans-unit id="c89064f3b9d2dbeb0f6db69ffe74f121bd1b90fe" translate="yes" xml:space="preserve">
          <source>The data &lt;code&gt;5 + 17&lt;/code&gt; is evaluated and the result is &lt;code&gt;22&lt;/code&gt;. When it evaluates the expression &lt;code&gt;5 + 17&lt;/code&gt;, it detects that you are adding two numbers and so the result will also be of the same &lt;code&gt;int&lt;/code&gt; type. So, the type conversion is done for free and &lt;code&gt;22&lt;/code&gt; is returned as the result of &lt;code&gt;input&lt;/code&gt; and stored in &lt;code&gt;data&lt;/code&gt; variable. You can think of &lt;code&gt;input&lt;/code&gt; as the &lt;code&gt;raw_input&lt;/code&gt; composed with an &lt;a href=&quot;https://docs.python.org/2/library/functions.html#eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">评估数据 &lt;code&gt;5 + 17&lt;/code&gt; ，结果为 &lt;code&gt;22&lt;/code&gt; 。 当它计算表达式 &lt;code&gt;5 + 17&lt;/code&gt; ，它检测到您要添加两个数字，因此结果也将是相同的 &lt;code&gt;int&lt;/code&gt; 类型。 因此，类型转换是免费完成的，并且 &lt;code&gt;22&lt;/code&gt; 作为 &lt;code&gt;input&lt;/code&gt; 结果返回并存储在 &lt;code&gt;data&lt;/code&gt; 变量中。 您可以将 &lt;code&gt;input&lt;/code&gt; 视为由&lt;a href=&quot;https://docs.python.org/2/library/functions.html#eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt;调用组成的 &lt;code&gt;raw_input&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4139c2ebc458fa3ba141dc02c14ab0769067731" translate="yes" xml:space="preserve">
          <source>The second parameter tells what is the base of the numbers entered and then internally it understands and converts it. If the entered data is wrong it will throw a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">第二个参数告诉输入的数字的基础是什么，然后在内部对其进行理解和转换。 如果输入的数据错误，则会抛出 &lt;code&gt;ValueError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="beefd0dbea26d3edda843d4d8df349297ec6058d" translate="yes" xml:space="preserve">
          <source>There were two functions to get user input, called &lt;a href=&quot;https://docs.python.org/2/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/2/library/functions.html#raw_input&quot;&gt;&lt;code&gt;raw_input&lt;/code&gt;&lt;/a&gt;. The difference between them is, &lt;code&gt;raw_input&lt;/code&gt; doesn't evaluate the data and returns as it is, in string form. But, &lt;code&gt;input&lt;/code&gt; will evaluate whatever you entered and the result of evaluation will be returned. For example,</source>
          <target state="translated">有两个函数来获取用户输入，分别称为&lt;a href=&quot;https://docs.python.org/2/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/2/library/functions.html#raw_input&quot;&gt; &lt;code&gt;raw_input&lt;/code&gt; &lt;/a&gt; 。 它们之间的区别在于， &lt;code&gt;raw_input&lt;/code&gt; 不评估数据并以字符串形式按原样返回。 但是， &lt;code&gt;input&lt;/code&gt; 将评估您输入的内容，并且评估结果将返回。 例如，</target>
        </trans-unit>
        <trans-unit id="48ff3fe5bd07d51b2046af7a0c98db00b2d14da2" translate="yes" xml:space="preserve">
          <source>This means that, just like &lt;code&gt;raw_input&lt;/code&gt;, &lt;a href=&quot;http://docs.python.org/3/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; in Python 3.x always returns a string object.</source>
          <target state="translated">这意味着，就像 &lt;code&gt;raw_input&lt;/code&gt; 一样，Python 3.x中的&lt;a href=&quot;http://docs.python.org/3/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt;总是返回一个字符串对象。</target>
        </trans-unit>
        <trans-unit id="dbca54fbd0bbb9bbded4c99bcb650141a74b663c" translate="yes" xml:space="preserve">
          <source>To answer your question, since Python 3.x doesn't evaluate and convert the data type, you have to explicitly convert to &lt;code&gt;int&lt;/code&gt;s, with &lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, like this</source>
          <target state="translated">要回答您的问题，由于Python 3.x不会评估和转换数据类型，因此必须使用&lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;显式转换为int ，例如</target>
        </trans-unit>
        <trans-unit id="6895fcae989796217d4b080693ad4fc240a7fc83" translate="yes" xml:space="preserve">
          <source>To fix the problem, you need to explicitly make those inputs into integers by putting them in &lt;a href=&quot;http://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要解决此问题，您需要通过将它们放入&lt;a href=&quot;http://docs.python.org/3/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;来将这些输入明确地变成整数：</target>
        </trans-unit>
        <trans-unit id="ebc8ecd2027afda808d374854563474f248f5531" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;int(input())&lt;/code&gt; is sufficient for a single integer, I did not find a direct way to input two integers.  I tried this:</source>
          <target state="translated">尽管 &lt;code&gt;int(input())&lt;/code&gt; 对于单个整数就足够了，但是我没有找到直接输入两个整数的直接方法。 我尝试了这个：</target>
        </trans-unit>
        <trans-unit id="ccf9421c74d6702641b870cbf34013322af9a583" translate="yes" xml:space="preserve">
          <source>While in your example, &lt;code&gt;int(input(...))&lt;/code&gt; does the trick in any case, &lt;code&gt;python-future&lt;/code&gt;'s &lt;a href=&quot;http://python-future.org/compatible_idioms.html#input&quot;&gt;&lt;code&gt;builtins.input&lt;/code&gt;&lt;/a&gt; is worth consideration since that makes sure your code works for both Python 2 and 3 &lt;em&gt;and&lt;/em&gt; disables Python2's default behaviour of &lt;code&gt;input&lt;/code&gt; trying to be &quot;clever&quot; about the input data type (&lt;code&gt;builtins.input&lt;/code&gt; basically just behaves like &lt;code&gt;raw_input&lt;/code&gt;).</source>
          <target state="translated">虽然在您的示例中 &lt;code&gt;int(input(...))&lt;/code&gt; 在任何情况下都可以解决问题，但是 &lt;code&gt;python-future&lt;/code&gt; 的&lt;a href=&quot;http://python-future.org/compatible_idioms.html#input&quot;&gt; &lt;code&gt;builtins.input&lt;/code&gt; &lt;/a&gt;是值得考虑的，因为这可以确保您的代码适用于Python 2和3 &lt;em&gt;并&lt;/em&gt;禁用Python2的默认行为试图对输入数据类型&amp;ldquo;精明&amp;rdquo;的输入（ &lt;code&gt;builtins.input&lt;/code&gt; 基本上就像 &lt;code&gt;raw_input&lt;/code&gt; 一样）。</target>
        </trans-unit>
        <trans-unit id="a0d6f6a5537f3f3a61d8e445b44949e5d1ae4d98" translate="yes" xml:space="preserve">
          <source>Why are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; strings instead of ints in the below code?</source>
          <target state="translated">为什么在下面的代码中使用 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 字符串而不是ints？</target>
        </trans-unit>
        <trans-unit id="f2e31f97d81e588c5461f93decdc41c137913cc7" translate="yes" xml:space="preserve">
          <source>You can accept numbers of any base and convert them directly to base-10 with the &lt;code&gt;int&lt;/code&gt; function, like this</source>
          <target state="translated">您可以接受任意基数的数字，并使用 &lt;code&gt;int&lt;/code&gt; 函数将其直接转换为10基数。</target>
        </trans-unit>
        <trans-unit id="fc6b2b4568134d65a83e0e9897585b6a212812ab" translate="yes" xml:space="preserve">
          <source>You can get rid of the &lt;code&gt;play&lt;/code&gt; variable by using &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;while True&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;break&lt;/code&gt; 和 &lt;code&gt;while True&lt;/code&gt; 来摆脱 &lt;code&gt;play&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="2f0d5f0509b2266015128e866c9cf687a87f7b26" translate="yes" xml:space="preserve">
          <source>the for loop shall run 'n' number of times . the second 'n' is the length of the array.
the last statement maps the integers to a list and takes input in space separated form .
you can also return the array at the end of for loop.</source>
          <target state="translated">最后一条语句将整数组映射到一个列表中,并以空格分隔的形式接收输入,也可以在for循环结束时返回数组。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
