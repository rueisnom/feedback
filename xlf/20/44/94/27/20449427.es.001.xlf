<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/20449427">
    <body>
      <group id="20449427">
        <trans-unit id="cae90893e281d9ef3f6fac0a840ab6b504dcc5c3" translate="yes" xml:space="preserve">
          <source>(Note: in Python 2.x use &lt;code&gt;raw_input()&lt;/code&gt;. In Python 3.x use &lt;code&gt;input()&lt;/code&gt;. &lt;code&gt;raw_input()&lt;/code&gt; was renamed to &lt;code&gt;input()&lt;/code&gt; in Python 3.x)</source>
          <target state="translated">(Nota: en Python 2.x use &lt;code&gt;raw_input()&lt;/code&gt; . En Python 3.x use &lt;code&gt;input()&lt;/code&gt; . &lt;code&gt;raw_input()&lt;/code&gt; fue renombrado como &lt;code&gt;input()&lt;/code&gt; en Python 3.x)</target>
        </trans-unit>
        <trans-unit id="5a1063c92acfc2880627803f00add514561ebde0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input()&lt;/code&gt; (Python 3) and &lt;code&gt;raw_input()&lt;/code&gt; (Python 2) &lt;em&gt;always&lt;/em&gt; return strings. Convert the result to integer explicitly with &lt;code&gt;int()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input()&lt;/code&gt; (Python 3) y &lt;code&gt;raw_input()&lt;/code&gt; (Python 2) &lt;em&gt;siempre&lt;/em&gt; devuelven cadenas. Convierta el resultado a entero expl&amp;iacute;citamente con &lt;code&gt;int()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bec5133c1236eab12415d1a0a89f60407f3e35c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; you should be careful when you are using &lt;code&gt;input&lt;/code&gt; in Python 2.x. I explained why one should be careful when using it, in &lt;a href=&quot;https://stackoverflow.com/a/21122817/1903116&quot;&gt;this answer&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; debe tener cuidado cuando use la &lt;code&gt;input&lt;/code&gt; en Python 2.x. Le expliqu&amp;eacute; por qu&amp;eacute; uno debe tener cuidado al usarlo, en &lt;a href=&quot;https://stackoverflow.com/a/21122817/1903116&quot;&gt;esta respuesta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39e8b090ff11bd7f6fc556a07fc0163999d7b98f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python 2.x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Python 2.x&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="069fc1650dccc845a828738f64a47b867fac67b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python 3.x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Python 3.x&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43f038c62b45a67bf440ca6fe8caa39490287184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solution&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0def28abff50b5453af5effe03f21c319e75a393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLDR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TLDR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fc3a572a5c311811ac09dbad932ed7f6b4a1586" translate="yes" xml:space="preserve">
          <source>Apart from that, your program can be changed a little bit, like this</source>
          <target state="translated">Aparte de eso,su programa puede ser cambiado un poco,así</target>
        </trans-unit>
        <trans-unit id="560f0c7f8aebc6efc4aabb28bc8eff5b1fcf0ddc" translate="yes" xml:space="preserve">
          <source>But, &lt;code&gt;raw_input&lt;/code&gt; doesn't evaluate the input and returns as it is, as a string.</source>
          <target state="translated">Pero, &lt;code&gt;raw_input&lt;/code&gt; no eval&amp;uacute;a la entrada y devuelve como es, como una cadena.</target>
        </trans-unit>
        <trans-unit id="525cf7d2ef6ec81b4070e820037b36413066a1ea" translate="yes" xml:space="preserve">
          <source>Convert to integers:</source>
          <target state="translated">Conviértanse en números enteros:</target>
        </trans-unit>
        <trans-unit id="b4cc9953db01bcbf91fd85c1ec35d8301729ee34" translate="yes" xml:space="preserve">
          <source>For multiple integer in a single line, &lt;a href=&quot;https://docs.python.org/library/functions.html#map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; might be better.</source>
          <target state="translated">Para m&amp;uacute;ltiples enteros en una sola l&amp;iacute;nea, el &lt;a href=&quot;https://docs.python.org/library/functions.html#map&quot;&gt; &lt;code&gt;map&lt;/code&gt; a&lt;/a&gt; podr&amp;iacute;a ser mejor.</target>
        </trans-unit>
        <trans-unit id="986144c3b5b0c8ced1bb2c87a1da25357d07d562" translate="yes" xml:space="preserve">
          <source>For values that can have a fractional component, the type would be &lt;code&gt;float&lt;/code&gt; rather than &lt;code&gt;int&lt;/code&gt;:</source>
          <target state="translated">Para los valores que pueden tener un componente fraccionario, el tipo ser&amp;iacute;a &lt;code&gt;float&lt;/code&gt; lugar de &lt;code&gt;int&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fd267f8d65051f7d169af8e737bf62d7a4844942" translate="yes" xml:space="preserve">
          <source>How can I read inputs as numbers</source>
          <target state="translated">¿Cómo puedo leer las entradas como números</target>
        </trans-unit>
        <trans-unit id="bf40fa783e5c6bf190a5901954cabc986878cc58" translate="yes" xml:space="preserve">
          <source>I encountered a problem of taking integer input while solving a problem on &lt;a href=&quot;http://www.codechef.com/problems/TLG&quot;&gt;CodeChef&lt;/a&gt;, where two integers - separated by space - should be read from one line.</source>
          <target state="translated">Encontr&amp;eacute; un problema al tomar entradas enteras al resolver un problema en &lt;a href=&quot;http://www.codechef.com/problems/TLG&quot;&gt;CodeChef&lt;/a&gt; , donde dos enteros, separados por espacio, deber&amp;iacute;an leerse desde una l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="ba1cf462bcd72173508773b2ef51685cb21b5628" translate="yes" xml:space="preserve">
          <source>If the number is already known, (like 2 integers), you can use</source>
          <target state="translated">Si el número ya se conoce,(como 2 números enteros),puedes usar</target>
        </trans-unit>
        <trans-unit id="e736f651d0b03431fc4f85b2d58fca64696fed13" translate="yes" xml:space="preserve">
          <source>In Python 3.x, &lt;code&gt;raw_input&lt;/code&gt; was renamed to &lt;code&gt;input&lt;/code&gt; and the Python 2.x &lt;code&gt;input&lt;/code&gt; was removed.</source>
          <target state="translated">En Python 3.x, se cambi&amp;oacute; el nombre de &lt;code&gt;raw_input&lt;/code&gt; a &lt;code&gt;input&lt;/code&gt; y se elimin&amp;oacute; la &lt;code&gt;input&lt;/code&gt; Python 2.x.</target>
        </trans-unit>
        <trans-unit id="64bd0cf427c7260d36ee47561af30975df69e2ab" translate="yes" xml:space="preserve">
          <source>Multiple questions require input for several integers on single line.  The best way is to input the whole string of numbers one one line and then split them to integers. Here is a Python 3 version:</source>
          <target state="translated">Las preguntas múltiples requieren la introducción de varios números enteros en una sola línea.La mejor manera es introducir toda la cadena de números en una sola línea y luego dividirlos en números enteros.Aquí hay una versión en Python 3:</target>
        </trans-unit>
        <trans-unit id="aeadcdace93bbdbe43a47a722a56c73d5e15a656" translate="yes" xml:space="preserve">
          <source>Now I use num1 and  num2 as integers.  Hope this helps.</source>
          <target state="translated">Ahora uso los números 1 y 2 como números enteros.Espero que esto ayude.</target>
        </trans-unit>
        <trans-unit id="3f171c5d3606dab6de569e9498c070ed67e2dc56" translate="yes" xml:space="preserve">
          <source>Python 2's equivalent of Python 3's &lt;code&gt;input&lt;/code&gt; is the &lt;code&gt;raw_input&lt;/code&gt; function.</source>
          <target state="translated">El equivalente de Python 2 de la &lt;code&gt;input&lt;/code&gt; de Python 3 es la funci&amp;oacute;n &lt;code&gt;raw_input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2ed04290ae84c0abe842737132db0bd05f4ce50" translate="yes" xml:space="preserve">
          <source>Python 3 doesn't evaluate the data received with &lt;code&gt;input&lt;/code&gt; function, but Python 2's &lt;code&gt;input&lt;/code&gt; function does (read the next section to understand the implication).</source>
          <target state="translated">Python 3 no eval&amp;uacute;a los datos recibidos con &lt;code&gt;input&lt;/code&gt; funci&amp;oacute;n de entrada , pero la funci&amp;oacute;n de &lt;code&gt;input&lt;/code&gt; Python 2 s&amp;iacute; (lea la siguiente secci&amp;oacute;n para comprender la implicaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="44f8eaaa275321d3ad247e1fdc3e9c34fe62ed62" translate="yes" xml:space="preserve">
          <source>Python 3.x's &lt;a href=&quot;https://docs.python.org/3/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; and Python 2.x's &lt;code&gt;raw_input&lt;/code&gt; are similar and &lt;code&gt;raw_input&lt;/code&gt; is not available in Python 3.x.</source>
          <target state="translated">La &lt;a href=&quot;https://docs.python.org/3/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt; Python 3.x y la &lt;code&gt;raw_input&lt;/code&gt; de Python 2.x son similares y &lt;code&gt;raw_input&lt;/code&gt; no est&amp;aacute; disponible en Python 3.x.</target>
        </trans-unit>
        <trans-unit id="2b3bf68391c25e5aad46876dd83b104dbc9d5097" translate="yes" xml:space="preserve">
          <source>Similarly for floating point numbers:</source>
          <target state="translated">De manera similar para los números de punto flotante:</target>
        </trans-unit>
        <trans-unit id="c89064f3b9d2dbeb0f6db69ffe74f121bd1b90fe" translate="yes" xml:space="preserve">
          <source>The data &lt;code&gt;5 + 17&lt;/code&gt; is evaluated and the result is &lt;code&gt;22&lt;/code&gt;. When it evaluates the expression &lt;code&gt;5 + 17&lt;/code&gt;, it detects that you are adding two numbers and so the result will also be of the same &lt;code&gt;int&lt;/code&gt; type. So, the type conversion is done for free and &lt;code&gt;22&lt;/code&gt; is returned as the result of &lt;code&gt;input&lt;/code&gt; and stored in &lt;code&gt;data&lt;/code&gt; variable. You can think of &lt;code&gt;input&lt;/code&gt; as the &lt;code&gt;raw_input&lt;/code&gt; composed with an &lt;a href=&quot;https://docs.python.org/2/library/functions.html#eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">Se eval&amp;uacute;an los datos &lt;code&gt;5 + 17&lt;/code&gt; y el resultado es &lt;code&gt;22&lt;/code&gt; . Cuando eval&amp;uacute;a la expresi&amp;oacute;n &lt;code&gt;5 + 17&lt;/code&gt; , detecta que est&amp;aacute; agregando dos n&amp;uacute;meros y, por lo tanto, el resultado tambi&amp;eacute;n ser&amp;aacute; del mismo tipo &lt;code&gt;int&lt;/code&gt; . Por lo tanto, la conversi&amp;oacute;n de tipo se realiza de forma gratuita y &lt;code&gt;22&lt;/code&gt; se devuelve como resultado de la &lt;code&gt;input&lt;/code&gt; y se almacena en &lt;code&gt;data&lt;/code&gt; variable de datos . Puede pensar en &lt;code&gt;input&lt;/code&gt; como &lt;code&gt;raw_input&lt;/code&gt; compuesto con una llamada &lt;a href=&quot;https://docs.python.org/2/library/functions.html#eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4139c2ebc458fa3ba141dc02c14ab0769067731" translate="yes" xml:space="preserve">
          <source>The second parameter tells what is the base of the numbers entered and then internally it understands and converts it. If the entered data is wrong it will throw a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">El segundo par&amp;aacute;metro indica cu&amp;aacute;l es la base de los n&amp;uacute;meros ingresados ​​y luego internamente lo comprende y lo convierte. Si los datos ingresados ​​son incorrectos, arrojar&amp;aacute; un &lt;code&gt;ValueError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="beefd0dbea26d3edda843d4d8df349297ec6058d" translate="yes" xml:space="preserve">
          <source>There were two functions to get user input, called &lt;a href=&quot;https://docs.python.org/2/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/2/library/functions.html#raw_input&quot;&gt;&lt;code&gt;raw_input&lt;/code&gt;&lt;/a&gt;. The difference between them is, &lt;code&gt;raw_input&lt;/code&gt; doesn't evaluate the data and returns as it is, in string form. But, &lt;code&gt;input&lt;/code&gt; will evaluate whatever you entered and the result of evaluation will be returned. For example,</source>
          <target state="translated">Hab&amp;iacute;a dos funciones para obtener la entrada del usuario, llamadas &lt;a href=&quot;https://docs.python.org/2/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://docs.python.org/2/library/functions.html#raw_input&quot;&gt; &lt;code&gt;raw_input&lt;/code&gt; &lt;/a&gt; . La diferencia entre ellos es que &lt;code&gt;raw_input&lt;/code&gt; no eval&amp;uacute;a los datos y regresa como est&amp;aacute;, en forma de cadena. Pero, la &lt;code&gt;input&lt;/code&gt; evaluar&amp;aacute; lo que haya ingresado y se devolver&amp;aacute; el resultado de la evaluaci&amp;oacute;n. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="48ff3fe5bd07d51b2046af7a0c98db00b2d14da2" translate="yes" xml:space="preserve">
          <source>This means that, just like &lt;code&gt;raw_input&lt;/code&gt;, &lt;a href=&quot;http://docs.python.org/3/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; in Python 3.x always returns a string object.</source>
          <target state="translated">Esto significa que, al igual que &lt;code&gt;raw_input&lt;/code&gt; , la &lt;a href=&quot;http://docs.python.org/3/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt; en Python 3.x siempre devuelve un objeto de cadena.</target>
        </trans-unit>
        <trans-unit id="dbca54fbd0bbb9bbded4c99bcb650141a74b663c" translate="yes" xml:space="preserve">
          <source>To answer your question, since Python 3.x doesn't evaluate and convert the data type, you have to explicitly convert to &lt;code&gt;int&lt;/code&gt;s, with &lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, like this</source>
          <target state="translated">Para responder a su pregunta, dado que Python 3.x no eval&amp;uacute;a ni convierte el tipo de datos, debe convertir expl&amp;iacute;citamente a &lt;code&gt;int&lt;/code&gt; s, con &lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; , como este</target>
        </trans-unit>
        <trans-unit id="6895fcae989796217d4b080693ad4fc240a7fc83" translate="yes" xml:space="preserve">
          <source>To fix the problem, you need to explicitly make those inputs into integers by putting them in &lt;a href=&quot;http://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Para solucionar el problema, debe hacer expl&amp;iacute;citamente esas entradas en enteros poni&amp;eacute;ndolas en &lt;a href=&quot;http://docs.python.org/3/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ebc8ecd2027afda808d374854563474f248f5531" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;int(input())&lt;/code&gt; is sufficient for a single integer, I did not find a direct way to input two integers.  I tried this:</source>
          <target state="translated">Si bien &lt;code&gt;int(input())&lt;/code&gt; es suficiente para un solo entero, no encontr&amp;eacute; una forma directa de ingresar dos enteros. Intent&amp;eacute; esto:</target>
        </trans-unit>
        <trans-unit id="ccf9421c74d6702641b870cbf34013322af9a583" translate="yes" xml:space="preserve">
          <source>While in your example, &lt;code&gt;int(input(...))&lt;/code&gt; does the trick in any case, &lt;code&gt;python-future&lt;/code&gt;'s &lt;a href=&quot;http://python-future.org/compatible_idioms.html#input&quot;&gt;&lt;code&gt;builtins.input&lt;/code&gt;&lt;/a&gt; is worth consideration since that makes sure your code works for both Python 2 and 3 &lt;em&gt;and&lt;/em&gt; disables Python2's default behaviour of &lt;code&gt;input&lt;/code&gt; trying to be &quot;clever&quot; about the input data type (&lt;code&gt;builtins.input&lt;/code&gt; basically just behaves like &lt;code&gt;raw_input&lt;/code&gt;).</source>
          <target state="translated">Mientras que en su ejemplo, &lt;code&gt;int(input(...))&lt;/code&gt; hace el truco en cualquier caso, vale la pena considerar la funci&amp;oacute;n &lt;a href=&quot;http://python-future.org/compatible_idioms.html#input&quot;&gt; &lt;code&gt;builtins.input&lt;/code&gt; &lt;/a&gt; &lt;code&gt;python-future&lt;/code&gt; . de &lt;code&gt;input&lt;/code&gt; tratando de ser &quot;inteligente&quot; sobre el tipo de datos de entrada ( &lt;code&gt;builtins.input&lt;/code&gt; b&amp;aacute;sicamente se comporta como &lt;code&gt;raw_input&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a0d6f6a5537f3f3a61d8e445b44949e5d1ae4d98" translate="yes" xml:space="preserve">
          <source>Why are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; strings instead of ints in the below code?</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; las cadenas &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; en lugar de ints en el siguiente c&amp;oacute;digo?</target>
        </trans-unit>
        <trans-unit id="f2e31f97d81e588c5461f93decdc41c137913cc7" translate="yes" xml:space="preserve">
          <source>You can accept numbers of any base and convert them directly to base-10 with the &lt;code&gt;int&lt;/code&gt; function, like this</source>
          <target state="translated">Puede aceptar n&amp;uacute;meros de cualquier base y convertirlos directamente a base-10 con la funci&amp;oacute;n &lt;code&gt;int&lt;/code&gt; , como esta</target>
        </trans-unit>
        <trans-unit id="fc6b2b4568134d65a83e0e9897585b6a212812ab" translate="yes" xml:space="preserve">
          <source>You can get rid of the &lt;code&gt;play&lt;/code&gt; variable by using &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;while True&lt;/code&gt;.</source>
          <target state="translated">Puedes deshacerte de la variable de &lt;code&gt;play&lt;/code&gt; usando &lt;code&gt;break&lt;/code&gt; y &lt;code&gt;while True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f0d5f0509b2266015128e866c9cf687a87f7b26" translate="yes" xml:space="preserve">
          <source>the for loop shall run 'n' number of times . the second 'n' is the length of the array.
the last statement maps the integers to a list and takes input in space separated form .
you can also return the array at the end of for loop.</source>
          <target state="translated">El bucle for se ejecutará 'n' número de veces.La segunda 'n' es la longitud de la matriz.La última declaración mapea los números enteros a una lista y toma la entrada en forma separada del espacio.También puedes devolver la matriz al final del bucle for.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
