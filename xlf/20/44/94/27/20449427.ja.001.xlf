<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/20449427">
    <body>
      <group id="20449427">
        <trans-unit id="cae90893e281d9ef3f6fac0a840ab6b504dcc5c3" translate="yes" xml:space="preserve">
          <source>(Note: in Python 2.x use &lt;code&gt;raw_input()&lt;/code&gt;. In Python 3.x use &lt;code&gt;input()&lt;/code&gt;. &lt;code&gt;raw_input()&lt;/code&gt; was renamed to &lt;code&gt;input()&lt;/code&gt; in Python 3.x)</source>
          <target state="translated">（注：Python 2.xでは &lt;code&gt;raw_input()&lt;/code&gt; を使用してください。Python3.xではinput（）を使用してください。raw_input（）はPython 3.xでは &lt;code&gt;raw_input()&lt;/code&gt; に名前が変更されました）</target>
        </trans-unit>
        <trans-unit id="5a1063c92acfc2880627803f00add514561ebde0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;input()&lt;/code&gt; (Python 3) and &lt;code&gt;raw_input()&lt;/code&gt; (Python 2) &lt;em&gt;always&lt;/em&gt; return strings. Convert the result to integer explicitly with &lt;code&gt;int()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;input()&lt;/code&gt; （Python 3）および &lt;code&gt;raw_input()&lt;/code&gt; （Python 2）は&lt;em&gt;常に&lt;/em&gt;文字列を返します。 &lt;code&gt;int()&lt;/code&gt; を使用して、結果を明示的に整数に変換します。</target>
        </trans-unit>
        <trans-unit id="8bec5133c1236eab12415d1a0a89f60407f3e35c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; you should be careful when you are using &lt;code&gt;input&lt;/code&gt; in Python 2.x. I explained why one should be careful when using it, in &lt;a href=&quot;https://stackoverflow.com/a/21122817/1903116&quot;&gt;this answer&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Python 2.xで &lt;code&gt;input&lt;/code&gt; を使用する場合は注意が必要です。 &lt;a href=&quot;https://stackoverflow.com/a/21122817/1903116&quot;&gt;この答え&lt;/a&gt;で、なぜそれを使用するときに注意が必要なのかを説明しました。</target>
        </trans-unit>
        <trans-unit id="39e8b090ff11bd7f6fc556a07fc0163999d7b98f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python 2.x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Python 2.x&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="069fc1650dccc845a828738f64a47b867fac67b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python 3.x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Python 3.x&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43f038c62b45a67bf440ca6fe8caa39490287184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solution&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0def28abff50b5453af5effe03f21c319e75a393" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLDR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TLDR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fc3a572a5c311811ac09dbad932ed7f6b4a1586" translate="yes" xml:space="preserve">
          <source>Apart from that, your program can be changed a little bit, like this</source>
          <target state="translated">それとは別に、あなたのプログラムは、次のように少し変更することができます。</target>
        </trans-unit>
        <trans-unit id="560f0c7f8aebc6efc4aabb28bc8eff5b1fcf0ddc" translate="yes" xml:space="preserve">
          <source>But, &lt;code&gt;raw_input&lt;/code&gt; doesn't evaluate the input and returns as it is, as a string.</source>
          <target state="translated">ただし、 &lt;code&gt;raw_input&lt;/code&gt; は入力を評価せず、そのまま文字列として返します。</target>
        </trans-unit>
        <trans-unit id="525cf7d2ef6ec81b4070e820037b36413066a1ea" translate="yes" xml:space="preserve">
          <source>Convert to integers:</source>
          <target state="translated">整数に変換します。</target>
        </trans-unit>
        <trans-unit id="b4cc9953db01bcbf91fd85c1ec35d8301729ee34" translate="yes" xml:space="preserve">
          <source>For multiple integer in a single line, &lt;a href=&quot;https://docs.python.org/library/functions.html#map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; might be better.</source>
          <target state="translated">1行に複数の整数がある場合は、 &lt;a href=&quot;https://docs.python.org/library/functions.html#map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;方が適している場合があります。</target>
        </trans-unit>
        <trans-unit id="986144c3b5b0c8ced1bb2c87a1da25357d07d562" translate="yes" xml:space="preserve">
          <source>For values that can have a fractional component, the type would be &lt;code&gt;float&lt;/code&gt; rather than &lt;code&gt;int&lt;/code&gt;:</source>
          <target state="translated">小数コンポーネントを持つことができる値の場合、型は &lt;code&gt;int&lt;/code&gt; ではなく &lt;code&gt;float&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="fd267f8d65051f7d169af8e737bf62d7a4844942" translate="yes" xml:space="preserve">
          <source>How can I read inputs as numbers</source>
          <target state="translated">入力を数値として読み取る方法</target>
        </trans-unit>
        <trans-unit id="bf40fa783e5c6bf190a5901954cabc986878cc58" translate="yes" xml:space="preserve">
          <source>I encountered a problem of taking integer input while solving a problem on &lt;a href=&quot;http://www.codechef.com/problems/TLG&quot;&gt;CodeChef&lt;/a&gt;, where two integers - separated by space - should be read from one line.</source>
          <target state="translated">スペースで区切られた2つの整数を1行から読み取る必要がある&lt;a href=&quot;http://www.codechef.com/problems/TLG&quot;&gt;CodeChefの&lt;/a&gt;問題を解決するときに、整数入力を取得する問題に遭遇しました。</target>
        </trans-unit>
        <trans-unit id="ba1cf462bcd72173508773b2ef51685cb21b5628" translate="yes" xml:space="preserve">
          <source>If the number is already known, (like 2 integers), you can use</source>
          <target state="translated">もし、(2つの整数のように)すでにわかっている数であれば</target>
        </trans-unit>
        <trans-unit id="e736f651d0b03431fc4f85b2d58fca64696fed13" translate="yes" xml:space="preserve">
          <source>In Python 3.x, &lt;code&gt;raw_input&lt;/code&gt; was renamed to &lt;code&gt;input&lt;/code&gt; and the Python 2.x &lt;code&gt;input&lt;/code&gt; was removed.</source>
          <target state="translated">Python 3.xでは、 &lt;code&gt;raw_input&lt;/code&gt; はinputに名前が変更され、Python 2.x &lt;code&gt;input&lt;/code&gt; は削除されました。</target>
        </trans-unit>
        <trans-unit id="64bd0cf427c7260d36ee47561af30975df69e2ab" translate="yes" xml:space="preserve">
          <source>Multiple questions require input for several integers on single line.  The best way is to input the whole string of numbers one one line and then split them to integers. Here is a Python 3 version:</source>
          <target state="translated">複数の問題では、1行に複数の整数を入力する必要があります。最良の方法は、1行に1つの数字の文字列全体を入力し、整数に分割することです。ここではPython 3のバージョンを紹介します。</target>
        </trans-unit>
        <trans-unit id="aeadcdace93bbdbe43a47a722a56c73d5e15a656" translate="yes" xml:space="preserve">
          <source>Now I use num1 and  num2 as integers.  Hope this helps.</source>
          <target state="translated">今、私はnum1とnum2を整数として使用しています。これが役立つことを願っています。</target>
        </trans-unit>
        <trans-unit id="3f171c5d3606dab6de569e9498c070ed67e2dc56" translate="yes" xml:space="preserve">
          <source>Python 2's equivalent of Python 3's &lt;code&gt;input&lt;/code&gt; is the &lt;code&gt;raw_input&lt;/code&gt; function.</source>
          <target state="translated">Python 2のPython 3の &lt;code&gt;input&lt;/code&gt; 相当するのは &lt;code&gt;raw_input&lt;/code&gt; 関数です。</target>
        </trans-unit>
        <trans-unit id="d2ed04290ae84c0abe842737132db0bd05f4ce50" translate="yes" xml:space="preserve">
          <source>Python 3 doesn't evaluate the data received with &lt;code&gt;input&lt;/code&gt; function, but Python 2's &lt;code&gt;input&lt;/code&gt; function does (read the next section to understand the implication).</source>
          <target state="translated">Python 3は &lt;code&gt;input&lt;/code&gt; 関数で受け取ったデータを評価しませんが、Python 2の &lt;code&gt;input&lt;/code&gt; 関数は評価します（意味を理解するには次のセクションを読んでください）。</target>
        </trans-unit>
        <trans-unit id="44f8eaaa275321d3ad247e1fdc3e9c34fe62ed62" translate="yes" xml:space="preserve">
          <source>Python 3.x's &lt;a href=&quot;https://docs.python.org/3/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; and Python 2.x's &lt;code&gt;raw_input&lt;/code&gt; are similar and &lt;code&gt;raw_input&lt;/code&gt; is not available in Python 3.x.</source>
          <target state="translated">Python 3.xの&lt;a href=&quot;https://docs.python.org/3/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt;とPython 2.xの &lt;code&gt;raw_input&lt;/code&gt; は類似しており、Python 3.xでは &lt;code&gt;raw_input&lt;/code&gt; を使用できません。</target>
        </trans-unit>
        <trans-unit id="2b3bf68391c25e5aad46876dd83b104dbc9d5097" translate="yes" xml:space="preserve">
          <source>Similarly for floating point numbers:</source>
          <target state="translated">浮動小数点数についても同様です。</target>
        </trans-unit>
        <trans-unit id="c89064f3b9d2dbeb0f6db69ffe74f121bd1b90fe" translate="yes" xml:space="preserve">
          <source>The data &lt;code&gt;5 + 17&lt;/code&gt; is evaluated and the result is &lt;code&gt;22&lt;/code&gt;. When it evaluates the expression &lt;code&gt;5 + 17&lt;/code&gt;, it detects that you are adding two numbers and so the result will also be of the same &lt;code&gt;int&lt;/code&gt; type. So, the type conversion is done for free and &lt;code&gt;22&lt;/code&gt; is returned as the result of &lt;code&gt;input&lt;/code&gt; and stored in &lt;code&gt;data&lt;/code&gt; variable. You can think of &lt;code&gt;input&lt;/code&gt; as the &lt;code&gt;raw_input&lt;/code&gt; composed with an &lt;a href=&quot;https://docs.python.org/2/library/functions.html#eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">データ &lt;code&gt;5 + 17&lt;/code&gt; が評価され、結果は &lt;code&gt;22&lt;/code&gt; になります。 式 &lt;code&gt;5 + 17&lt;/code&gt; 評価すると、2つの数値を加算していることが検出されるため、結果も同じ &lt;code&gt;int&lt;/code&gt; 型になります。 したがって、型変換は無料で行われ、 &lt;code&gt;input&lt;/code&gt; の結果として &lt;code&gt;22&lt;/code&gt; が返され、 &lt;code&gt;data&lt;/code&gt; 変数に格納されます。 &lt;code&gt;input&lt;/code&gt; は、 &lt;a href=&quot;https://docs.python.org/2/library/functions.html#eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt;呼び出しで構成された &lt;code&gt;raw_input&lt;/code&gt; と考えることができます。</target>
        </trans-unit>
        <trans-unit id="f4139c2ebc458fa3ba141dc02c14ab0769067731" translate="yes" xml:space="preserve">
          <source>The second parameter tells what is the base of the numbers entered and then internally it understands and converts it. If the entered data is wrong it will throw a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">2番目のパラメーターは、入力された数値の基数を示し、内部的にそれを理解して変換します。 入力されたデータが間違っている場合は、 &lt;code&gt;ValueError&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="beefd0dbea26d3edda843d4d8df349297ec6058d" translate="yes" xml:space="preserve">
          <source>There were two functions to get user input, called &lt;a href=&quot;https://docs.python.org/2/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/2/library/functions.html#raw_input&quot;&gt;&lt;code&gt;raw_input&lt;/code&gt;&lt;/a&gt;. The difference between them is, &lt;code&gt;raw_input&lt;/code&gt; doesn't evaluate the data and returns as it is, in string form. But, &lt;code&gt;input&lt;/code&gt; will evaluate whatever you entered and the result of evaluation will be returned. For example,</source>
          <target state="translated">ユーザー入力を取得するには、 &lt;a href=&quot;https://docs.python.org/2/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/2/library/functions.html#raw_input&quot;&gt; &lt;code&gt;raw_input&lt;/code&gt; &lt;/a&gt;という2つの関数がありました 。 それらの違いは、 &lt;code&gt;raw_input&lt;/code&gt; はデータを評価せず、文字列形式でそのまま返します。 ただし、 &lt;code&gt;input&lt;/code&gt; は入力内容を評価し、評価の結果が返されます。 例えば、</target>
        </trans-unit>
        <trans-unit id="48ff3fe5bd07d51b2046af7a0c98db00b2d14da2" translate="yes" xml:space="preserve">
          <source>This means that, just like &lt;code&gt;raw_input&lt;/code&gt;, &lt;a href=&quot;http://docs.python.org/3/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; in Python 3.x always returns a string object.</source>
          <target state="translated">つまり、 &lt;code&gt;raw_input&lt;/code&gt; と同様に、Python 3.xの&lt;a href=&quot;http://docs.python.org/3/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt;は常に文字列オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="dbca54fbd0bbb9bbded4c99bcb650141a74b663c" translate="yes" xml:space="preserve">
          <source>To answer your question, since Python 3.x doesn't evaluate and convert the data type, you have to explicitly convert to &lt;code&gt;int&lt;/code&gt;s, with &lt;a href=&quot;https://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, like this</source>
          <target state="translated">あなたの質問に答えるには、Python 3.xはデータ型を評価および変換しないため、次のように &lt;code&gt;int&lt;/code&gt; で明示的にintに変換する必要があります</target>
        </trans-unit>
        <trans-unit id="6895fcae989796217d4b080693ad4fc240a7fc83" translate="yes" xml:space="preserve">
          <source>To fix the problem, you need to explicitly make those inputs into integers by putting them in &lt;a href=&quot;http://docs.python.org/3/library/functions.html#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">問題を解決するには、これらの入力を&lt;a href=&quot;http://docs.python.org/3/library/functions.html#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; に&lt;/a&gt;入れて明示的に整数にする必要があります。</target>
        </trans-unit>
        <trans-unit id="ebc8ecd2027afda808d374854563474f248f5531" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;int(input())&lt;/code&gt; is sufficient for a single integer, I did not find a direct way to input two integers.  I tried this:</source>
          <target state="translated">&lt;code&gt;int(input())&lt;/code&gt; は単一の整数には十分ですが、2つの整数を直接入力する方法は見つかりませんでした。 私はこれを試しました：</target>
        </trans-unit>
        <trans-unit id="ccf9421c74d6702641b870cbf34013322af9a583" translate="yes" xml:space="preserve">
          <source>While in your example, &lt;code&gt;int(input(...))&lt;/code&gt; does the trick in any case, &lt;code&gt;python-future&lt;/code&gt;'s &lt;a href=&quot;http://python-future.org/compatible_idioms.html#input&quot;&gt;&lt;code&gt;builtins.input&lt;/code&gt;&lt;/a&gt; is worth consideration since that makes sure your code works for both Python 2 and 3 &lt;em&gt;and&lt;/em&gt; disables Python2's default behaviour of &lt;code&gt;input&lt;/code&gt; trying to be &quot;clever&quot; about the input data type (&lt;code&gt;builtins.input&lt;/code&gt; basically just behaves like &lt;code&gt;raw_input&lt;/code&gt;).</source>
          <target state="translated">あなたの例では、 &lt;code&gt;int(input(...))&lt;/code&gt; はどんな場合でもトリックを行いますが、コードがPython 2と3の両方で機能し、Python2のデフォルトの動作&lt;em&gt;を&lt;/em&gt;無効にすることを確認するので、 &lt;code&gt;python-future&lt;/code&gt; の&lt;a href=&quot;http://python-future.org/compatible_idioms.html#input&quot;&gt; &lt;code&gt;builtins.input&lt;/code&gt; &lt;/a&gt;は検討に値します入力データ型について「賢く」しようとする入力（ &lt;code&gt;builtins.input&lt;/code&gt; は基本的に &lt;code&gt;raw_input&lt;/code&gt; のように動作します ）。</target>
        </trans-unit>
        <trans-unit id="a0d6f6a5537f3f3a61d8e445b44949e5d1ae4d98" translate="yes" xml:space="preserve">
          <source>Why are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; strings instead of ints in the below code?</source>
          <target state="translated">以下のコードで、intではなく &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; 文字列があるのはなぜですか？</target>
        </trans-unit>
        <trans-unit id="f2e31f97d81e588c5461f93decdc41c137913cc7" translate="yes" xml:space="preserve">
          <source>You can accept numbers of any base and convert them directly to base-10 with the &lt;code&gt;int&lt;/code&gt; function, like this</source>
          <target state="translated">次のように、任意の基数を受け入れ、それらを &lt;code&gt;int&lt;/code&gt; 関数を使用して直接base-10に変換できます。</target>
        </trans-unit>
        <trans-unit id="fc6b2b4568134d65a83e0e9897585b6a212812ab" translate="yes" xml:space="preserve">
          <source>You can get rid of the &lt;code&gt;play&lt;/code&gt; variable by using &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;while True&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; および &lt;code&gt;while True&lt;/code&gt; を使用して、 &lt;code&gt;play&lt;/code&gt; 変数を取り除くことができます。</target>
        </trans-unit>
        <trans-unit id="2f0d5f0509b2266015128e866c9cf687a87f7b26" translate="yes" xml:space="preserve">
          <source>the for loop shall run 'n' number of times . the second 'n' is the length of the array.
the last statement maps the integers to a list and takes input in space separated form .
you can also return the array at the end of for loop.</source>
          <target state="translated">forループは'n'回実行しなければなりません。2番目の'n'は配列の長さです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
