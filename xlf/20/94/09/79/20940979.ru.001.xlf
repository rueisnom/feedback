<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/20940979">
    <body>
      <group id="20940979">
        <trans-unit id="90157ae76a08af0a3a22d7b35660a60c0952288c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GetString()&lt;/code&gt; will throw &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; because you're dataset has only two columns but you're trying to get a value from 3rd one (indices are &lt;em&gt;always&lt;/em&gt; 0-based).</source>
          <target state="translated">&lt;code&gt;GetString()&lt;/code&gt; вызовет исключение &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; , поскольку у вашего набора данных есть только два столбца, но вы пытаетесь получить значение из третьего (индексы &lt;em&gt;всегда&lt;/em&gt; основаны на 0).</target>
        </trans-unit>
        <trans-unit id="6e82abbf74c093ad6a49b85e4604cb669c37d2d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IndexOutOfRangeException&lt;/code&gt; is generally different in that it in most cases it is pretty trivial to check for at the point where the exception is being raised.  Generally this kind of exception get thrown by some code that could very easily deal with the issue at the place it is occurring - just by checking the actual length of the array.  You don't want to 'fix' this by handling this exception higher up - but instead by ensuring its not thrown in the first instance - which in most cases is easy to do by checking the array length.</source>
          <target state="translated">&lt;code&gt;IndexOutOfRangeException&lt;/code&gt; , как правило, отличается тем, что в большинстве случаев его довольно просто проверить в точке, где возникает исключение. Обычно такого рода исключения генерируются некоторым кодом, который может очень легко справиться с проблемой в том месте, где она возникает, просто проверяя фактическую длину массива. Вы не хотите &amp;laquo;исправлять&amp;raquo; это, обрабатывая это исключение выше - но вместо этого гарантируя, что оно не будет выброшено в первый раз - что в большинстве случаев легко сделать, проверив длину массива.</target>
        </trans-unit>
        <trans-unit id="e384b1ac38528cf2b153179ee64c5c07891a0262" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First item in arrays has always index 0&lt;/em&gt;. This is not always true because you can create an array with a custom lower bound:</source>
          <target state="translated">&lt;em&gt;Первый элемент в массивах всегда имеет индекс 0&lt;/em&gt; . Это не всегда так, потому что вы можете создать массив с пользовательской нижней границей:</target>
        </trans-unit>
        <trans-unit id="02fe3c2ec3752f01939a625bda6b22efdd43fc7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Just think one train is there its compartments are D1,D2,D3.
One passenger came to enter the train and he have the ticket for D4.
now what will happen. the passenger want to enter a compartment that does not exist so obviously problem will arise.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Подумайте только, что там есть один поезд, его купе D1, D2, D3.&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;Один пассажир пришел, чтобы войти в поезд, и у него есть билет на D4.&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;теперь что будет.&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;пассажир хочет войти в отсек, который не существует, поэтому очевидно, что проблема возникнет.&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc2e9df144a904ca7e654e3151e719003968083d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Special&lt;/em&gt; Arrays With Custom Lower Bound&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Специальные&lt;/em&gt; массивы с пользовательской нижней границей&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="585a20b3a1b5efe5d8ac80cc5fb5c37c9fe438f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array Length&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Длина массива&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="219b82a1e751af97e51e37c164a80c71e6ab177e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arrays Do Not Grow&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Массивы не растут&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6a5525b746c8370f4e56003defd53c493ddeb6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Check Object State&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Проверить состояние объекта&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c45556dd62755f58a0dbbe669c6bbe02448a2daf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How it applies to &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/6sh2ey19%28v=vs.110%29.aspx&quot;&gt;&lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Как это относится к &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/6sh2ey19%28v=vs.110%29.aspx&quot;&gt; &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; ?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68f01d14d713169ff7c034d4ab53d72b3d416586" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IDataReader and Columns&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;IDataReader и столбцы&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="830bf9eb4cb1898d0ede130953d19e72968029bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Others&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Others&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b840c57c128f4bfe2ea512de26ab75218adb38a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unexpected Results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Неожиданные результаты&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="354119c5be040a4156893c8c1927c10b93fd64db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upper Bound Is Not Inclusive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Верхняя граница не включена&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69073d14195994c9068b40b723887a0ff4c2e715" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validate Parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Проверить параметры&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5a3215f12d670c927c04e4f1ae816dec54af5a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validate Return Values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Проверить возвращаемые значения&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98c7e1be1d82ea36b991a9791f2b7fb7af4ce1ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Wrong Arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Неправильные аргументы&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8b1f21ee4f3d1496817ff5cf7d9a607a0aeb2e6" translate="yes" xml:space="preserve">
          <source>A good start point is to always use assertions and to validate inputs. You may even want to use code contracts. When something went wrong and you can't figure out what happens with a quick look at your code then you have to resort to an old friend: &lt;strong&gt;debugger&lt;/strong&gt;. Just run your application in debug inside Visual Studio (or your favorite IDE), you'll see exactly which line throws this exception, which array is involved and which index you're trying to use. Really, 99% of the times you'll solve it by yourself in a few minutes.</source>
          <target state="translated">Хорошей отправной точкой является всегда использовать утверждения и проверять входные данные. Вы можете даже хотеть использовать кодовые контракты. Если что-то пошло не так, и вы не можете понять, что происходит, быстро взглянув на свой код, тогда вам придется прибегнуть к помощи старого друга: &lt;strong&gt;отладчика&lt;/strong&gt; . Просто запустите ваше приложение в режиме отладки внутри Visual Studio (или вашей любимой IDE), и вы увидите, какая именно строка выдает это исключение, какой массив задействован и какой индекс вы пытаетесь использовать. Действительно, в 99% случаев вы решите это самостоятельно за несколько минут.</target>
        </trans-unit>
        <trans-unit id="918d55df9a652e86c4424371b8022ca5c74d8fd7" translate="yes" xml:space="preserve">
          <source>A side from the very long complete accepted answer there is an important point to make about &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; compared with many other exception types, and that is:</source>
          <target state="translated">Стороной очень длинного полного принятого ответа является важный момент, который необходимо сделать в отношении &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; по сравнению со многими другими типами исключений, а именно:</target>
        </trans-unit>
        <trans-unit id="590ef1689a35dd4e7ed120fafde303e4f853d31a" translate="yes" xml:space="preserve">
          <source>An array is fast. Very fast in linear search compared to every other collection. It is because items are contiguous in memory so memory address can be calculated (and increment is just an addition). No need to follow a node list, simple math! You pay this with a limitation: they can't grow, if you need more elements you need to reallocate that array (this may take a relatively long time if old items must be copied to a new block). You resize them with &lt;code&gt;Array.Resize&amp;lt;T&amp;gt;()&lt;/code&gt;, this example adds a new entry to an existing array:</source>
          <target state="translated">Массив быстрый. Очень быстрый в линейном поиске по сравнению с любой другой коллекцией. Это происходит из-за того, что элементы расположены в памяти непрерывно, поэтому адрес памяти можно вычислить (а приращение является лишь дополнением). Нет необходимости следить за списком узлов, простая математика! Вы платите это с ограничением: они не могут расти, если вам нужно больше элементов, вам нужно перераспределить этот массив (это может занять относительно много времени, если старые элементы должны быть скопированы в новый блок). Вы изменяете их размер с помощью &lt;code&gt;Array.Resize&amp;lt;T&amp;gt;()&lt;/code&gt; , этот пример добавляет новую запись в существующий массив:</target>
        </trans-unit>
        <trans-unit id="0b202a6b93b0ad3a0b8b0e09acb9d27754d6a75e" translate="yes" xml:space="preserve">
          <source>An exception of type 'System.ArgumentOutOfRangeException' occurred in mscorlib.dll but was not handled in user code Additional information: Index was out of range. Must be non-negative and less than the size of the collection.</source>
          <target state="translated">Исключение типа 'System.ArgumentOutOfRangeException' произошло в mscorlib.dll,но не было обработано в коде пользователя Дополнительная информация:Индекс был вне диапазона.Должен быть неотрицательным и меньше,чем размер коллекции.</target>
        </trans-unit>
        <trans-unit id="fd779c4366caa60dd63adc01044809905187b95d" translate="yes" xml:space="preserve">
          <source>Another way of putting this is that other exceptions can arise due to genuine lack of control over input or program state BUT &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; more often than not is simply just pilot (programmer) error.</source>
          <target state="translated">Другим способом объяснения этого является то, что другие исключения могут возникать из-за подлинного отсутствия контроля над вводом или состоянием программы, НО &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; чаще всего является просто ошибкой пилота (программиста).</target>
        </trans-unit>
        <trans-unit id="51e4f40de8bfab70e2225354db35d9faafa79f94" translate="yes" xml:space="preserve">
          <source>Array index may not come directly from a parameter. It may be part of object state. In general is always a good practice to validate object state (by itself and with function parameters, if needed). You can use &lt;code&gt;Debug.Assert()&lt;/code&gt;, throw a proper exception (more descriptive about the problem) or handle that like in this example:</source>
          <target state="translated">Индекс массива может не исходить непосредственно из параметра. Это может быть частью состояния объекта. В целом, всегда полезно проверять состояние объекта (само по себе и с параметрами функции, если необходимо). Вы можете использовать &lt;code&gt;Debug.Assert()&lt;/code&gt; , выдать правильное исключение (более подробно о проблеме) или обработать, как в этом примере:</target>
        </trans-unit>
        <trans-unit id="b9f2099dfa78e0a0cb9a9cacf32f191610f4e09d" translate="yes" xml:space="preserve">
          <source>Common case is to populate list with indexing (similar to &lt;code&gt;Dictionary&amp;lt;int, T&amp;gt;&lt;/code&gt;) will cause exception:</source>
          <target state="translated">Распространенным случаем является заполнение списка индексированием (аналогично &lt;code&gt;Dictionary&amp;lt;int, T&amp;gt;&lt;/code&gt; ), что приведет к исключению:</target>
        </trans-unit>
        <trans-unit id="25bb3e5e2d21ab7475b6402126c502ae27235124" translate="yes" xml:space="preserve">
          <source>Depending on classes used it can also be &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt;</source>
          <target state="translated">В зависимости от используемых классов это также может быть &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b23b0799bcc8b2ce81bdf52bb9e099981c0d4d4" translate="yes" xml:space="preserve">
          <source>Don't forget that valid indices are from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;Length - 1&lt;/code&gt;. If you simply try to assign an item at &lt;code&gt;Length&lt;/code&gt; you'll get &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; (this behavior may confuse you if you think they may increase with a syntax similar to &lt;code&gt;Insert&lt;/code&gt; method of other collections).</source>
          <target state="translated">Не забывайте, что действительные индексы от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;Length - 1&lt;/code&gt; . Если вы просто попытаетесь назначить элемент в &lt;code&gt;Length&lt;/code&gt; , вы получите &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; (это поведение может сбить вас с толку, если вы думаете, что они могут увеличиться с помощью синтаксиса, аналогичного методу &lt;code&gt;Insert&lt;/code&gt; других коллекций).</target>
        </trans-unit>
        <trans-unit id="9b27fd7fe4b50df7d96174836b344cc4290d5689" translate="yes" xml:space="preserve">
          <source>Everything that we have said in the C# answer is valid for VB.NET with the obvious syntax differences but there is an important point to consider when you deal with VB.NET arrays.</source>
          <target state="translated">Все,что мы сказали в ответе на C#,справедливо для VB.NET с очевидными синтаксическими различиями,но есть важный момент,который необходимо учитывать,когда Вы имеете дело с массивами VB.NET.</target>
        </trans-unit>
        <trans-unit id="9b0d70e741d1af30dcaad5c3bd9539dbb820958c" translate="yes" xml:space="preserve">
          <source>Given an array declared as:</source>
          <target state="translated">Учитывая массив,объявленный как:</target>
        </trans-unit>
        <trans-unit id="634c81757628431baf46510d0fe88d9be1baed40" translate="yes" xml:space="preserve">
          <source>How to Avoid</source>
          <target state="translated">Как избежать</target>
        </trans-unit>
        <trans-unit id="5b89063333bb026e82eef2450102f0542fe56b68" translate="yes" xml:space="preserve">
          <source>How to Debug</source>
          <target state="translated">Как отладить</target>
        </trans-unit>
        <trans-unit id="9054b410bcbb93070af4dc6c3c5cb26cb599c747" translate="yes" xml:space="preserve">
          <source>I have some code and when it executes, it throws a &lt;code&gt;IndexOutOfRangeException&lt;/code&gt;, saying,</source>
          <target state="translated">У меня есть некоторый код, и когда он выполняется, он &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; , говоря:</target>
        </trans-unit>
        <trans-unit id="b7e20f4df8a1a037e7ebf260c1409ec6d68d3f62" translate="yes" xml:space="preserve">
          <source>If function is private you may simply replace &lt;code&gt;if&lt;/code&gt; logic with &lt;code&gt;Debug.Assert()&lt;/code&gt;:</source>
          <target state="translated">Если функция &lt;code&gt;Debug.Assert()&lt;/code&gt; вы можете просто заменить логику на Debug.Assert () :</target>
        </trans-unit>
        <trans-unit id="35c8969ec9cb494058d0a4f6bd3ead6a41ac90ee" translate="yes" xml:space="preserve">
          <source>If index comes from a parameter you should always validate them (throwing appropriate &lt;code&gt;ArgumentException&lt;/code&gt; or &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt;). In the next example, wrong parameters may cause &lt;code&gt;IndexOutOfRangeException&lt;/code&gt;, users of this function may expect this because they're passing an array but it's not always so obvious. I'd suggest to always validate parameters for public functions:</source>
          <target state="translated">Если индекс исходит из параметра, вы всегда должны проверять его (выбрасывая соответствующее &lt;code&gt;ArgumentException&lt;/code&gt; или &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; ). В следующем примере неправильные параметры могут вызвать &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; , пользователи этой функции могут ожидать этого, потому что они передают массив, но это не всегда так очевидно. Я бы предложил всегда проверять параметры для публичных функций:</target>
        </trans-unit>
        <trans-unit id="41c04df0b1cc86ae38c46937975285a88af8013e" translate="yes" xml:space="preserve">
          <source>If this happens in production then you'd better to add assertions in incriminated code, probably we won't see in your code what you can't see by yourself (but you can always bet).</source>
          <target state="translated">Если это произойдет в производстве,то лучше добавить утверждения в инкриминируемый код,вероятно,мы не увидим в вашем коде того,что вы не видите сами (но вы всегда можете сделать ставку).</target>
        </trans-unit>
        <trans-unit id="2b987be037398d3c129254a55d4e390c131f0e51" translate="yes" xml:space="preserve">
          <source>If you access an array using unvalidated arguments (from user input or from function user) you may get this error:</source>
          <target state="translated">Если вы получаете доступ к массиву с помощью непроверенных аргументов (от пользователя input или от пользователя функции),вы можете получить эту ошибку:</target>
        </trans-unit>
        <trans-unit id="9227b461684c699e8e65d0bf1176a729c1a582df" translate="yes" xml:space="preserve">
          <source>Imagine you're trying to read data from a database with this code:</source>
          <target state="translated">Представьте,что вы пытаетесь считывать данные из базы данных с помощью этого кода:</target>
        </trans-unit>
        <trans-unit id="cc7a9efc85a264d77dd9f0d9027c47e5cf9aa6ef" translate="yes" xml:space="preserve">
          <source>In C#, usually, arrays are 0-based. It means that first element has index 0 and last element has index &lt;code&gt;Length - 1&lt;/code&gt; (where &lt;code&gt;Length&lt;/code&gt; is total number of items in the array) so this code doesn't work:</source>
          <target state="translated">В C # обычно массивы основаны на 0. Это означает, что первый элемент имеет индекс 0, а последний элемент имеет индекс &lt;code&gt;Length - 1&lt;/code&gt; (где &lt;code&gt;Length&lt;/code&gt; - общее количество элементов в массиве), поэтому этот код не работает:</target>
        </trans-unit>
        <trans-unit id="fd6bbf267ba207b6ab0dbf6146519797f071cf4c" translate="yes" xml:space="preserve">
          <source>In VB.NET, arrays are declared setting the maximum valid index value for the array. It is not the count of the elements that we want to store in the array.</source>
          <target state="translated">В VB.NET массивы объявляются устанавливающими максимальное допустимое значение индекса для массива.Это не счет элементов,которые мы хотим хранить в массиве.</target>
        </trans-unit>
        <trans-unit id="dfcd9df83ee30d7d807a5c86bffb1eab90e4c481" translate="yes" xml:space="preserve">
          <source>In another scenario you may get &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; for this code (for example if you're using &lt;code&gt;GetPixel&lt;/code&gt; method on a &lt;code&gt;Bitmap&lt;/code&gt; class).</source>
          <target state="translated">В другом сценарии вы можете получить &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; для этого кода (например, если вы используете метод &lt;code&gt;GetPixel&lt;/code&gt; в классе &lt;code&gt;Bitmap&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a096121cdf696e4cc12035da5ed6a1a2d6a4cfea" translate="yes" xml:space="preserve">
          <source>In my opinion, most of the questions, here on SO, about this error can be simply avoided. The time you spend to write a proper question (with a small working example and a small explanation) could easily much more than the time you'll need to debug your code. First of all, read this Eric Lippert's blog post about &lt;a href=&quot;http://ericlippert.com/2014/03/05/how-to-debug-small-programs/&quot;&gt;debugging of small programs&lt;/a&gt;, I won't repeat his words here but it's absolutely a &lt;em&gt;must read&lt;/em&gt;.</source>
          <target state="translated">На мой взгляд, большинство вопросов, здесь, на SO, об этой ошибке можно просто избежать. Время, которое вы тратите на написание правильного вопроса (с небольшим рабочим примером и небольшим объяснением), может легко превысить время, необходимое для отладки кода. Прежде всего, прочитайте этот пост Эрика Липперта в блоге об &lt;a href=&quot;http://ericlippert.com/2014/03/05/how-to-debug-small-programs/&quot;&gt;отладке небольших программ&lt;/a&gt; , я не буду повторять его слова здесь, но это абсолютно &lt;em&gt;необходимо прочитать&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="edd9c3162520ffa6a25317a3046678c7840a5043" translate="yes" xml:space="preserve">
          <source>In one of previous examples we directly used &lt;code&gt;Array.IndexOf()&lt;/code&gt; return value. If we know it may fail then it's better to handle that case:</source>
          <target state="translated">В одном из предыдущих примеров мы напрямую использовали возвращаемое значение &lt;code&gt;Array.IndexOf()&lt;/code&gt; . Если мы знаем, что это может потерпеть неудачу, тогда лучше разобраться с этим случаем:</target>
        </trans-unit>
        <trans-unit id="0eaaf0f408d82787f7dce03834f5280173facd24" translate="yes" xml:space="preserve">
          <source>In that example, array indices are valid from 1 to 4. Of course, upper bound cannot be changed.</source>
          <target state="translated">В этом примере индексы массивов действительны от 1 до 4.Конечно,верхняя граница не может быть изменена.</target>
        </trans-unit>
        <trans-unit id="530b06e2da2492e2c8bc73420f839699bc382ee8" translate="yes" xml:space="preserve">
          <source>In the following example we create a raw bidimensional array of &lt;code&gt;Color&lt;/code&gt;. Each item represents a pixel, indices are from &lt;code&gt;(0, 0)&lt;/code&gt; to &lt;code&gt;(imageWidth - 1, imageHeight - 1)&lt;/code&gt;.</source>
          <target state="translated">В следующем примере мы создаем необработанный двумерный массив &lt;code&gt;Color&lt;/code&gt; . Каждый элемент представляет пиксель, индексы от &lt;code&gt;(0, 0)&lt;/code&gt; до &lt;code&gt;(imageWidth - 1, imageHeight - 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32a51fdd8deaa7d4b87e2ddb0c98c68d696f01dc" translate="yes" xml:space="preserve">
          <source>In this example, let me assume, for simplicity, that arrays are always monodimensional and 0-based. If you want to be strict (or you're developing a library), you may need to replace &lt;code&gt;0&lt;/code&gt; with &lt;code&gt;GetLowerBound(0)&lt;/code&gt; and &lt;code&gt;.Length&lt;/code&gt; with &lt;code&gt;GetUpperBound(0)&lt;/code&gt; (of course if you have parameters of type &lt;code&gt;System.Arra&lt;/code&gt;y, it doesn't apply for &lt;code&gt;T[]&lt;/code&gt;). Please note that in this case, upper bound is inclusive then this code:</source>
          <target state="translated">В этом примере позвольте мне для простоты предположить, что массивы всегда являются одномерными и основаны на 0. Если вы хотите быть строгим (или разрабатываете библиотеку), вам может потребоваться заменить &lt;code&gt;0&lt;/code&gt; на &lt;code&gt;GetLowerBound(0)&lt;/code&gt; и &lt;code&gt;.Length&lt;/code&gt; на &lt;code&gt;GetUpperBound(0)&lt;/code&gt; (конечно, если у вас есть параметры типа &lt;code&gt;System.Arra&lt;/code&gt; y, это не распространяется на &lt;code&gt;T[]&lt;/code&gt; ). Обратите внимание, что в этом случае верхняя граница включает в себя этот код:</target>
        </trans-unit>
        <trans-unit id="40272c70580d7c109cb89e34d31411747867424c" translate="yes" xml:space="preserve">
          <source>Index was outside the bounds of the array.</source>
          <target state="translated">Индекс был за пределами массива.</target>
        </trans-unit>
        <trans-unit id="f4bb569161e53103307661e8b53e45107af3a570" translate="yes" xml:space="preserve">
          <source>Moreover please note that if you have a multidimensional array then you can't use &lt;code&gt;Array.Length&lt;/code&gt; for both dimension, you have to use &lt;code&gt;Array.GetLength()&lt;/code&gt;:</source>
          <target state="translated">Кроме того, обратите внимание, что если у вас есть многомерный массив, то вы не можете использовать &lt;code&gt;Array.Length&lt;/code&gt; для обоих измерений, вы должны использовать &lt;code&gt;Array.GetLength()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="570a52861d8c447060bebaa3d7e734fd46e5d33b" translate="yes" xml:space="preserve">
          <source>Next example is a naive example to calculate occurrences of a given set of numbers (knowing maximum number and returning an array where item at index 0 represents number 0, items at index 1 represents number 1 and so on):</source>
          <target state="translated">Следующий пример-наивный пример расчета вхождения заданного набора чисел (зная максимальное число и возвращая массив,где элемент в индексе 0 представляет число 0,элементы в индексе 1 представляют число 1 и так далее):</target>
        </trans-unit>
        <trans-unit id="d557f009913713cad73735b6dbf5343e1e1dfbca" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; throws &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; for the same cases where arrays use &lt;code&gt;IndexOutOfRangeException&lt;/code&gt;.</source>
          <target state="translated">Обратите внимание, что &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; выбрасывает &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; для тех же случаев, когда массивы используют &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd651f30e77cb8c08ebc4ef5e06e931ce221c6fe" translate="yes" xml:space="preserve">
          <source>Of course, it's a pretty terrible implementation but what I want to show is that it'll fail for negative numbers and numbers above &lt;code&gt;maximum&lt;/code&gt;.</source>
          <target state="translated">Конечно, это довольно ужасная реализация, но я хочу показать, что она не работает для отрицательных чисел и чисел выше &lt;code&gt;maximum&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ef9f43dc4d8385dc0e33e58565ca9eb5b222e6b" translate="yes" xml:space="preserve">
          <source>Often there is complex program state that maybe difficult to have control over at a particular point in code e.g a DB connection goes down so data for an input cannot be retrieved etc... This kind of issue often results in an Exception of some kind that has to bubble up to a higher level because where it occurs has no way of dealing with it at that point.</source>
          <target state="translated">Часто существует сложное состояние программы,которое может быть трудно контролировать в определенной точке кода,например,соединение с БД разрывается,поэтому данные для входа не могут быть получены и т.д....В результате такого рода проблем часто возникает Исключение,которое должно подняться на более высокий уровень,потому что там,где это происходит,в данный момент нет возможности с этим справиться.</target>
        </trans-unit>
        <trans-unit id="27f8fcfb9ecd8c53b26dd0b2f91e65142b39621f" translate="yes" xml:space="preserve">
          <source>Please note that this behavior is shared with most &lt;code&gt;IDataReader&lt;/code&gt; implementations (&lt;code&gt;SqlDataReader&lt;/code&gt;, &lt;code&gt;OleDbDataReader&lt;/code&gt; and so on).</source>
          <target state="translated">Обратите внимание, что это поведение используется большинством реализаций &lt;code&gt;IDataReader&lt;/code&gt; ( &lt;code&gt;SqlDataReader&lt;/code&gt; , &lt;code&gt;OleDbDataReader&lt;/code&gt; и т. Д.).</target>
        </trans-unit>
        <trans-unit id="b97b5a8efe8a2722837e5c57560477b5040d0b1f" translate="yes" xml:space="preserve">
          <source>Please note that this is not allowed (it'll throw &lt;code&gt;InvalidCastException&lt;/code&gt;), that's why if your parameters are &lt;code&gt;T[]&lt;/code&gt; you're safe about custom lower bound arrays:</source>
          <target state="translated">Обратите внимание, что это недопустимо (это &lt;code&gt;InvalidCastException&lt;/code&gt; ), поэтому, если ваши параметры &lt;code&gt;T[]&lt;/code&gt; вы можете быть уверены в пользовательских массивах нижней границы:</target>
        </trans-unit>
        <trans-unit id="96f3e922a9aef7a1879f91f29f818e5ff62931fb" translate="yes" xml:space="preserve">
          <source>Result will be:</source>
          <target state="translated">Результат будет:</target>
        </trans-unit>
        <trans-unit id="fabd2b4a718bdee98a8cc1784519325b35b0832c" translate="yes" xml:space="preserve">
          <source>Same cases as array - range of valid indexes - 0 (&lt;code&gt;List&lt;/code&gt;'s indexes always start with 0) to &lt;code&gt;list.Count&lt;/code&gt; - accessing elements outside of this range will cause the exception.</source>
          <target state="translated">Те же случаи, что и в массиве - диапазон допустимых индексов - 0 (индексы &lt;code&gt;List&lt;/code&gt; всегда начинаются с 0) для &lt;code&gt;list.Count&lt;/code&gt; - доступ к элементам за пределами этого диапазона вызовет исключение.</target>
        </trans-unit>
        <trans-unit id="4caee130f7f88696a123daa568884e0a7a6c235c" translate="yes" xml:space="preserve">
          <source>Same scenario: whenever we try to access an array list, etc. we can only access the existing indexes in the array. &lt;code&gt;array[0]&lt;/code&gt; and &lt;code&gt;array[1]&lt;/code&gt; are existing. If we try to access &lt;code&gt;array[3]&lt;/code&gt;, it's not there actually, so an index out of bound exception will arise.</source>
          <target state="translated">Тот же сценарий: всякий раз, когда мы пытаемся получить доступ к списку массивов и т. Д., Мы можем получить доступ только к существующим индексам в массиве. &lt;code&gt;array[0]&lt;/code&gt; и &lt;code&gt;array[1]&lt;/code&gt; существуют. Если мы попытаемся получить доступ к &lt;code&gt;array[3]&lt;/code&gt; , на самом деле его там нет, поэтому возникнет исключение индекса из привязанного исключения.</target>
        </trans-unit>
        <trans-unit id="7d7463e8ea002eaac163acc85628793b0ec0e69f" translate="yes" xml:space="preserve">
          <source>Should be rewritten like this:</source>
          <target state="translated">Нужно переписать вот так:</target>
        </trans-unit>
        <trans-unit id="be76153017b0c155c35e835c740ed8b45e1ac779" translate="yes" xml:space="preserve">
          <source>Simple explanation about what a Index out of bound exception is:</source>
          <target state="translated">Простое объяснение того,что такое &quot;Индекс вне пределов исключения&quot;:</target>
        </trans-unit>
        <trans-unit id="2d047b4d2d0dcbe67d0f58d382579d548af0a6ba" translate="yes" xml:space="preserve">
          <source>Size of array is 3 (indices 0, 1 and 2), but the for-loop loops 4 times (0, 1, 2 and 3).</source>
          <target state="translated">Размер массива-3 (индексы 0,1 и 2),а циклы for-loop-4 раза (0,1,2 и 3).</target>
        </trans-unit>
        <trans-unit id="b2fd41760f100eb04b3fbf11f90eaf5e88b79a94" translate="yes" xml:space="preserve">
          <source>So this loop will fill the array with 5 integers without causing any &lt;strong&gt;IndexOutOfRangeException&lt;/strong&gt;</source>
          <target state="translated">Таким образом, этот цикл заполнит массив 5 целыми числами, не вызывая &lt;strong&gt;исключение IndexOutOfRangeException&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2eceeacdc6960cb32b48adcd985da317ecc2c1d5" translate="yes" xml:space="preserve">
          <source>So when it tries to access outside the bounds with (3) it throws the exception.</source>
          <target state="translated">Поэтому,когда он пытается получить доступ за пределы (3),он выбрасывает исключение.</target>
        </trans-unit>
        <trans-unit id="eef2eb7f26ac3a52b33b36028193756338fc756d" translate="yes" xml:space="preserve">
          <source>Suppose for example that you have retrieved a column named &lt;em&gt;Column1&lt;/em&gt; but then you try to retrieve the value of that field with</source>
          <target state="translated">Предположим, например, что вы получили столбец с именем &lt;em&gt;Column1,&lt;/em&gt; но затем вы пытаетесь получить значение этого поля с помощью</target>
        </trans-unit>
        <trans-unit id="5d5442589685d9f06310c6030d60b943cbbc03f6" translate="yes" xml:space="preserve">
          <source>The VB.NET rule</source>
          <target state="translated">Правило VB.NET</target>
        </trans-unit>
        <trans-unit id="29a34df4c3a8b6265655372cf0b7ca0c4c58177b" translate="yes" xml:space="preserve">
          <source>The VB.NET side of the story</source>
          <target state="translated">VB.NET сторона истории</target>
        </trans-unit>
        <trans-unit id="107a9888b94abfe0f0842709b6d53a8d5a2cad39" translate="yes" xml:space="preserve">
          <source>There is another (documented) case when this exception is thrown: if, in &lt;code&gt;DataView&lt;/code&gt;, data column name being supplied to the &lt;code&gt;DataViewSort&lt;/code&gt; property is not valid.</source>
          <target state="translated">Существует еще один (задокументированный) случай, когда выбрасывается это исключение: если в &lt;code&gt;DataView&lt;/code&gt; имя столбца данных, предоставляемое свойству &lt;code&gt;DataViewSort&lt;/code&gt; , недопустимо.</target>
        </trans-unit>
        <trans-unit id="2feb23c1a9eaeb80736074afbcae4a7353c3d269" translate="yes" xml:space="preserve">
          <source>This code will then fail because array is 0-based and last (bottom-right) pixel in the image is &lt;code&gt;pixels[imageWidth - 1, imageHeight - 1]&lt;/code&gt;:</source>
          <target state="translated">Затем этот код завершится ошибкой, потому что массив на основе 0 и последний (нижний правый) пиксель в изображении - это &lt;code&gt;pixels[imageWidth - 1, imageHeight - 1]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7b0ef8f0aa42bf47870a059eee92fc5398d3ebb4" translate="yes" xml:space="preserve">
          <source>This exception may be thrown for another reason too: by convention, many &lt;em&gt;search functions&lt;/em&gt; will return -1 (nullables has been introduced with .NET 2.0 and anyway it's also a well-known convention in use from many years) if they didn't find anything. Let's imagine you have an array of objects comparable with a string. You may think to write this code:</source>
          <target state="translated">Это исключение может быть вызвано и по другой причине: по соглашению многие &lt;em&gt;функции поиска&lt;/em&gt; будут возвращать -1 (nullables была введена в .NET 2.0, и в любом случае это также известное соглашение, используемое много лет назад), если они не нашли что-нибудь. Давайте представим, что у вас есть массив объектов, сопоставимых со строкой. Вы можете написать этот код:</target>
        </trans-unit>
        <trans-unit id="a2fcd2cd1cb1036644f107b16a8890283d860e72" translate="yes" xml:space="preserve">
          <source>This exception means that you're trying to access a collection item by index, using an invalid index. An index is invalid when it's lower than the collection's lower bound or greater than &lt;del&gt;equal to the number of elements it contains.&lt;/del&gt; the maximum allowed index defined in the array declaration</source>
          <target state="translated">Это исключение означает, что вы пытаетесь получить доступ к элементу коллекции по индексу, используя недопустимый индекс. Индекс недопустим, если он ниже нижней границы коллекции или больше &lt;del&gt; равно количеству элементов, которые оно содержит. &lt;/del&gt; максимально допустимый индекс, определенный в объявлении массива</target>
        </trans-unit>
        <trans-unit id="e7dec47f74c256ee0220fc295a632aecdf0b27a6" translate="yes" xml:space="preserve">
          <source>This exception means that you're trying to access a collection item by index, using an invalid index. An index is invalid when it's lower than the collection's lower bound or greater than or equal to the number of elements it contains.</source>
          <target state="translated">Это исключение означает,что вы пытаетесь получить доступ к элементу коллекции по индексу,используя недействительный индекс.Индекс является недействительным,если он ниже нижней границы коллекции или больше или равен количеству элементов,которые она содержит.</target>
        </trans-unit>
        <trans-unit id="9e01fe07c21102f88931eb8da4f078ace2acf044" translate="yes" xml:space="preserve">
          <source>This happens because the indexer operator is implemented trying to retrieve the index of a &lt;em&gt;Colum1&lt;/em&gt; field that doesn't exist. The GetOrdinal method will throw this exception when its internal helper code returns a -1 as the index of &quot;Colum1&quot;.</source>
          <target state="translated">Это происходит потому, что оператор индексатора реализован, пытаясь получить индекс поля &lt;em&gt;Colum1&lt;/em&gt; , которого не существует. Метод GetOrdinal выдает это исключение, когда его внутренний вспомогательный код возвращает -1 в качестве индекса &amp;laquo;Colum1&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="e8ae00193f164544dc369987db61ee45ff297184" translate="yes" xml:space="preserve">
          <source>This will fail if no items in &lt;code&gt;myArray&lt;/code&gt; will satisfy search condition because &lt;code&gt;Array.IndexOf()&lt;/code&gt; will return -1 and then array access will throw.</source>
          <target state="translated">Это не удастся, если никакие элементы в &lt;code&gt;myArray&lt;/code&gt; не будут удовлетворять условию поиска, потому что &lt;code&gt;Array.IndexOf()&lt;/code&gt; вернет -1, а затем вызовет массив</target>
        </trans-unit>
        <trans-unit id="1448888ed15547b9b90d018b51d2e99215c5719e" translate="yes" xml:space="preserve">
          <source>To easily understand the problem, imagine we wrote this code:</source>
          <target state="translated">Чтобы легко разобраться в проблеме,представьте,что мы написали этот код:</target>
        </trans-unit>
        <trans-unit id="d75990cb468491d4aee74eb65a49267c49a02831" translate="yes" xml:space="preserve">
          <source>Unlike arrays, &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; starts empty - so trying to access items of just created list lead to this exception.</source>
          <target state="translated">В отличие от массивов, &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; начинается пусто - поэтому попытки доступа к элементам только что созданного списка приводят к этому исключению.</target>
        </trans-unit>
        <trans-unit id="85b71ece91202721794d3f3aa2f8575d83d210c3" translate="yes" xml:space="preserve">
          <source>What Is It?</source>
          <target state="translated">Что это?</target>
        </trans-unit>
        <trans-unit id="d038b6b88960ddb547851582deb4aa9178a9143a" translate="yes" xml:space="preserve">
          <source>What does this mean, and what can I do about it?</source>
          <target state="translated">Что это значит,и что я могу с этим поделать?</target>
        </trans-unit>
        <trans-unit id="db3e9dce32f32c752d89721d4714009559cf8ea7" translate="yes" xml:space="preserve">
          <source>What is an IndexOutOfRangeException / ArgumentOutOfRangeException and how do I fix it</source>
          <target state="translated">Что такое IndexOutOfRangeException ArgumentOutOfRangeException и как это исправить.</target>
        </trans-unit>
        <trans-unit id="64d2ca343b2d11209d8e98e83bbc370189858b2f" translate="yes" xml:space="preserve">
          <source>When It Is Thrown</source>
          <target state="translated">Когда его бросят</target>
        </trans-unit>
        <trans-unit id="b6cd6c3e3375f53769e3f51014aa013895a17062" translate="yes" xml:space="preserve">
          <source>You can access this array from 0 to 3, values outside this range will cause &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; to be thrown. Remember this when you create and access an array.</source>
          <target state="translated">Вы можете получить доступ к этому массиву от 0 до 3, значения вне этого диапазона вызовут &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; . Помните об этом, когда вы создаете и получаете доступ к массиву.</target>
        </trans-unit>
        <trans-unit id="a435dd41b664b49681c0f5d1ce876301860c479a" translate="yes" xml:space="preserve">
          <source>You can get the same exception also if you use the IDataReader overload of the indexer operator that takes a column name and pass an invalid column name.</source>
          <target state="translated">Такое же исключение можно получить и в том случае,если вы используете перегрузку IDataReader оператора индексатора,который принимает имя столбца и передает неверное имя столбца.</target>
        </trans-unit>
        <trans-unit id="fc1e14f5925304435bda2fd3d2ff334f6898cf6b" translate="yes" xml:space="preserve">
          <source>You found your error, check how &lt;code&gt;index&lt;/code&gt; increases. Is it right? Check how array is allocated, is coherent with how &lt;code&gt;index&lt;/code&gt; increases? Is it right according to your specifications? If you answer &lt;em&gt;yes&lt;/em&gt; to all these questions, then you'll find good help here on StackOverflow but please first check for that by yourself. You'll save your own time!</source>
          <target state="translated">Вы нашли свою ошибку, проверьте, как увеличивается &lt;code&gt;index&lt;/code&gt; . Это правильно? Проверьте, как распределяется массив, согласуется с тем, как увеличивается &lt;code&gt;index&lt;/code&gt; ? Это правильно в соответствии с вашими требованиями? Если вы ответите &amp;laquo; &lt;em&gt;да&amp;raquo;&lt;/em&gt; на все эти вопросы, то вы найдете здесь полезную помощь в StackOverflow, но сначала проверьте это самостоятельно. Вы сэкономите свое время!</target>
        </trans-unit>
        <trans-unit id="250a56e82d76e86df3aa532f5df265e03cc75d27" translate="yes" xml:space="preserve">
          <source>You have source code, you have exception message with a stack trace. Go there, pick right line number and you'll see:</source>
          <target state="translated">У вас есть исходный код,у вас есть сообщение об исключении с трассировкой стека.Иди туда,выбери правильный номер линии и увидишь:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
