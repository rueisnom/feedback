<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/20940979">
    <body>
      <group id="20940979">
        <trans-unit id="90157ae76a08af0a3a22d7b35660a60c0952288c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GetString()&lt;/code&gt; will throw &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; because you're dataset has only two columns but you're trying to get a value from 3rd one (indices are &lt;em&gt;always&lt;/em&gt; 0-based).</source>
          <target state="translated">&lt;code&gt;GetString()&lt;/code&gt; arrojar&amp;aacute; &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; porque su conjunto de datos tiene solo dos columnas pero est&amp;aacute; tratando de obtener un valor de la tercera (los &amp;iacute;ndices &lt;em&gt;siempre&lt;/em&gt; est&amp;aacute;n basados ​​en 0).</target>
        </trans-unit>
        <trans-unit id="6e82abbf74c093ad6a49b85e4604cb669c37d2d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IndexOutOfRangeException&lt;/code&gt; is generally different in that it in most cases it is pretty trivial to check for at the point where the exception is being raised.  Generally this kind of exception get thrown by some code that could very easily deal with the issue at the place it is occurring - just by checking the actual length of the array.  You don't want to 'fix' this by handling this exception higher up - but instead by ensuring its not thrown in the first instance - which in most cases is easy to do by checking the array length.</source>
          <target state="translated">&lt;code&gt;IndexOutOfRangeException&lt;/code&gt; es generalmente diferente en que, en la mayor&amp;iacute;a de los casos, es bastante trivial verificar en el punto donde se genera la excepci&amp;oacute;n. En general, este tipo de excepci&amp;oacute;n es arrojado por alg&amp;uacute;n c&amp;oacute;digo que podr&amp;iacute;a tratar muy f&amp;aacute;cilmente el problema en el lugar donde est&amp;aacute; ocurriendo, simplemente verificando la longitud real de la matriz. No desea 'arreglar' esto manejando esta excepci&amp;oacute;n m&amp;aacute;s arriba, sino asegur&amp;aacute;ndose de que no se lance en primera instancia, lo que en la mayor&amp;iacute;a de los casos es f&amp;aacute;cil de hacer al verificar la longitud de la matriz.</target>
        </trans-unit>
        <trans-unit id="e384b1ac38528cf2b153179ee64c5c07891a0262" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First item in arrays has always index 0&lt;/em&gt;. This is not always true because you can create an array with a custom lower bound:</source>
          <target state="translated">&lt;em&gt;El primer elemento en las matrices siempre tiene un &amp;iacute;ndice 0&lt;/em&gt; . Esto no siempre es cierto porque puede crear una matriz con un l&amp;iacute;mite inferior personalizado:</target>
        </trans-unit>
        <trans-unit id="02fe3c2ec3752f01939a625bda6b22efdd43fc7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Just think one train is there its compartments are D1,D2,D3.
One passenger came to enter the train and he have the ticket for D4.
now what will happen. the passenger want to enter a compartment that does not exist so obviously problem will arise.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Solo piense que un tren est&amp;aacute; all&amp;iacute;, sus compartimentos son D1, D2, D3.&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;Un pasajero entr&amp;oacute; al tren y tiene el boleto para D4.&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;ahora que va a pasar.&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;el pasajero desea ingresar a un compartimiento que no existe, por lo que obviamente surgir&amp;aacute; un problema.&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc2e9df144a904ca7e654e3151e719003968083d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Special&lt;/em&gt; Arrays With Custom Lower Bound&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Matrices &lt;em&gt;especiales&lt;/em&gt; con l&amp;iacute;mite inferior personalizado&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="585a20b3a1b5efe5d8ac80cc5fb5c37c9fe438f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array Length&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Longitud de la matriz&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="219b82a1e751af97e51e37c164a80c71e6ab177e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arrays Do Not Grow&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las matrices no crecen&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6a5525b746c8370f4e56003defd53c493ddeb6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Check Object State&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Comprobar estado del objeto&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c45556dd62755f58a0dbbe669c6bbe02448a2daf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How it applies to &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/6sh2ey19%28v=vs.110%29.aspx&quot;&gt;&lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iquest;C&amp;oacute;mo se aplica a la &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/6sh2ey19%28v=vs.110%29.aspx&quot;&gt; &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; &lt;/a&gt; ?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68f01d14d713169ff7c034d4ab53d72b3d416586" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IDataReader and Columns&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;IDataReader y columnas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="830bf9eb4cb1898d0ede130953d19e72968029bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Others&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Others&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b840c57c128f4bfe2ea512de26ab75218adb38a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unexpected Results&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Resultados inesperados&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="354119c5be040a4156893c8c1927c10b93fd64db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upper Bound Is Not Inclusive&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;El l&amp;iacute;mite superior no es inclusivo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69073d14195994c9068b40b723887a0ff4c2e715" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validate Parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Validar Par&amp;aacute;metros&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5a3215f12d670c927c04e4f1ae816dec54af5a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validate Return Values&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Validar valores de retorno&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98c7e1be1d82ea36b991a9791f2b7fb7af4ce1ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Wrong Arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Argumentos equivocados&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8b1f21ee4f3d1496817ff5cf7d9a607a0aeb2e6" translate="yes" xml:space="preserve">
          <source>A good start point is to always use assertions and to validate inputs. You may even want to use code contracts. When something went wrong and you can't figure out what happens with a quick look at your code then you have to resort to an old friend: &lt;strong&gt;debugger&lt;/strong&gt;. Just run your application in debug inside Visual Studio (or your favorite IDE), you'll see exactly which line throws this exception, which array is involved and which index you're trying to use. Really, 99% of the times you'll solve it by yourself in a few minutes.</source>
          <target state="translated">Un buen punto de partida es usar siempre aserciones y validar entradas. Es posible que incluso desee utilizar contratos de c&amp;oacute;digo. Cuando algo sali&amp;oacute; mal y no puedes descubrir qu&amp;eacute; sucede con un vistazo r&amp;aacute;pido a tu c&amp;oacute;digo, entonces tienes que recurrir a un viejo amigo: &lt;strong&gt;depurador&lt;/strong&gt; . Simplemente ejecute su aplicaci&amp;oacute;n en depuraci&amp;oacute;n dentro de Visual Studio (o su IDE favorito), ver&amp;aacute; exactamente qu&amp;eacute; l&amp;iacute;nea arroja esta excepci&amp;oacute;n, qu&amp;eacute; matriz est&amp;aacute; involucrada y qu&amp;eacute; &amp;iacute;ndice est&amp;aacute; tratando de usar. Realmente, el 99% de las veces lo resolver&amp;aacute;s solo en unos minutos.</target>
        </trans-unit>
        <trans-unit id="918d55df9a652e86c4424371b8022ca5c74d8fd7" translate="yes" xml:space="preserve">
          <source>A side from the very long complete accepted answer there is an important point to make about &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; compared with many other exception types, and that is:</source>
          <target state="translated">A un lado de la muy completa respuesta aceptada, hay un punto importante que hacer sobre &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; en comparaci&amp;oacute;n con muchos otros tipos de excepci&amp;oacute;n, y es:</target>
        </trans-unit>
        <trans-unit id="590ef1689a35dd4e7ed120fafde303e4f853d31a" translate="yes" xml:space="preserve">
          <source>An array is fast. Very fast in linear search compared to every other collection. It is because items are contiguous in memory so memory address can be calculated (and increment is just an addition). No need to follow a node list, simple math! You pay this with a limitation: they can't grow, if you need more elements you need to reallocate that array (this may take a relatively long time if old items must be copied to a new block). You resize them with &lt;code&gt;Array.Resize&amp;lt;T&amp;gt;()&lt;/code&gt;, this example adds a new entry to an existing array:</source>
          <target state="translated">Una matriz es r&amp;aacute;pida. Muy r&amp;aacute;pido en b&amp;uacute;squeda lineal en comparaci&amp;oacute;n con cualquier otra colecci&amp;oacute;n. Esto se debe a que los elementos son contiguos en la memoria, por lo que se puede calcular la direcci&amp;oacute;n de la memoria (y el incremento es solo una adici&amp;oacute;n). No es necesario seguir una lista de nodos, &amp;iexcl;simple matem&amp;aacute;tica! Paga esto con una limitaci&amp;oacute;n: no pueden crecer, si necesita m&amp;aacute;s elementos necesita reasignar esa matriz (esto puede llevar un tiempo relativamente largo si los elementos antiguos deben copiarse en un nuevo bloque). Los redimensiona con &lt;code&gt;Array.Resize&amp;lt;T&amp;gt;()&lt;/code&gt; , este ejemplo agrega una nueva entrada a una matriz existente:</target>
        </trans-unit>
        <trans-unit id="0b202a6b93b0ad3a0b8b0e09acb9d27754d6a75e" translate="yes" xml:space="preserve">
          <source>An exception of type 'System.ArgumentOutOfRangeException' occurred in mscorlib.dll but was not handled in user code Additional information: Index was out of range. Must be non-negative and less than the size of the collection.</source>
          <target state="translated">Una excepción del tipo 'System.ArgumentOutOfRangeException' se produjo en mscorlib.dll pero no se manejó en el código de usuario Información adicional:El índice estaba fuera de rango.Debe ser no negativo y menor que el tamaño de la colección.</target>
        </trans-unit>
        <trans-unit id="fd779c4366caa60dd63adc01044809905187b95d" translate="yes" xml:space="preserve">
          <source>Another way of putting this is that other exceptions can arise due to genuine lack of control over input or program state BUT &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; more often than not is simply just pilot (programmer) error.</source>
          <target state="translated">Otra forma de decir esto es que pueden surgir otras excepciones debido a una genuina falta de control sobre la entrada o el estado del programa, PERO &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; la mayor&amp;iacute;a de las veces es simplemente un error piloto (programador).</target>
        </trans-unit>
        <trans-unit id="51e4f40de8bfab70e2225354db35d9faafa79f94" translate="yes" xml:space="preserve">
          <source>Array index may not come directly from a parameter. It may be part of object state. In general is always a good practice to validate object state (by itself and with function parameters, if needed). You can use &lt;code&gt;Debug.Assert()&lt;/code&gt;, throw a proper exception (more descriptive about the problem) or handle that like in this example:</source>
          <target state="translated">El &amp;iacute;ndice de matriz puede no provenir directamente de un par&amp;aacute;metro. Puede ser parte del estado del objeto. En general, siempre es una buena pr&amp;aacute;ctica validar el estado del objeto (solo y con par&amp;aacute;metros de funci&amp;oacute;n, si es necesario). Puede usar &lt;code&gt;Debug.Assert()&lt;/code&gt; , lanzar una excepci&amp;oacute;n adecuada (m&amp;aacute;s descriptiva sobre el problema) o manejar eso como en este ejemplo:</target>
        </trans-unit>
        <trans-unit id="b9f2099dfa78e0a0cb9a9cacf32f191610f4e09d" translate="yes" xml:space="preserve">
          <source>Common case is to populate list with indexing (similar to &lt;code&gt;Dictionary&amp;lt;int, T&amp;gt;&lt;/code&gt;) will cause exception:</source>
          <target state="translated">El caso com&amp;uacute;n es llenar la lista con indexaci&amp;oacute;n (similar al &lt;code&gt;Dictionary&amp;lt;int, T&amp;gt;&lt;/code&gt; ) causar&amp;aacute; una excepci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="25bb3e5e2d21ab7475b6402126c502ae27235124" translate="yes" xml:space="preserve">
          <source>Depending on classes used it can also be &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt;</source>
          <target state="translated">Dependiendo de las clases utilizadas, tambi&amp;eacute;n puede ser &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b23b0799bcc8b2ce81bdf52bb9e099981c0d4d4" translate="yes" xml:space="preserve">
          <source>Don't forget that valid indices are from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;Length - 1&lt;/code&gt;. If you simply try to assign an item at &lt;code&gt;Length&lt;/code&gt; you'll get &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; (this behavior may confuse you if you think they may increase with a syntax similar to &lt;code&gt;Insert&lt;/code&gt; method of other collections).</source>
          <target state="translated">No olvide que los &amp;iacute;ndices v&amp;aacute;lidos son de &lt;code&gt;0&lt;/code&gt; a &lt;code&gt;Length - 1&lt;/code&gt; . Si simplemente intenta asignar un elemento a &lt;code&gt;Length&lt;/code&gt; , obtendr&amp;aacute; &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; (este comportamiento puede confundirlo si cree que puede aumentar con una sintaxis similar al m&amp;eacute;todo &lt;code&gt;Insert&lt;/code&gt; de otras colecciones).</target>
        </trans-unit>
        <trans-unit id="9b27fd7fe4b50df7d96174836b344cc4290d5689" translate="yes" xml:space="preserve">
          <source>Everything that we have said in the C# answer is valid for VB.NET with the obvious syntax differences but there is an important point to consider when you deal with VB.NET arrays.</source>
          <target state="translated">Todo lo que hemos dicho en la respuesta de C#es válido para VB.NET con las obvias diferencias de sintaxis pero hay un punto importante a considerar cuando se trata de arreglos de VB.NET.</target>
        </trans-unit>
        <trans-unit id="9b0d70e741d1af30dcaad5c3bd9539dbb820958c" translate="yes" xml:space="preserve">
          <source>Given an array declared as:</source>
          <target state="translated">Dado un conjunto declarado como:</target>
        </trans-unit>
        <trans-unit id="634c81757628431baf46510d0fe88d9be1baed40" translate="yes" xml:space="preserve">
          <source>How to Avoid</source>
          <target state="translated">Cómo evitar</target>
        </trans-unit>
        <trans-unit id="5b89063333bb026e82eef2450102f0542fe56b68" translate="yes" xml:space="preserve">
          <source>How to Debug</source>
          <target state="translated">Cómo depurar</target>
        </trans-unit>
        <trans-unit id="9054b410bcbb93070af4dc6c3c5cb26cb599c747" translate="yes" xml:space="preserve">
          <source>I have some code and when it executes, it throws a &lt;code&gt;IndexOutOfRangeException&lt;/code&gt;, saying,</source>
          <target state="translated">Tengo un c&amp;oacute;digo y cuando se ejecuta, arroja una &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; , diciendo:</target>
        </trans-unit>
        <trans-unit id="b7e20f4df8a1a037e7ebf260c1409ec6d68d3f62" translate="yes" xml:space="preserve">
          <source>If function is private you may simply replace &lt;code&gt;if&lt;/code&gt; logic with &lt;code&gt;Debug.Assert()&lt;/code&gt;:</source>
          <target state="translated">Si la funci&amp;oacute;n es privada, simplemente puede reemplazar &lt;code&gt;if&lt;/code&gt; l&amp;oacute;gica con &lt;code&gt;Debug.Assert()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="35c8969ec9cb494058d0a4f6bd3ead6a41ac90ee" translate="yes" xml:space="preserve">
          <source>If index comes from a parameter you should always validate them (throwing appropriate &lt;code&gt;ArgumentException&lt;/code&gt; or &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt;). In the next example, wrong parameters may cause &lt;code&gt;IndexOutOfRangeException&lt;/code&gt;, users of this function may expect this because they're passing an array but it's not always so obvious. I'd suggest to always validate parameters for public functions:</source>
          <target state="translated">Si el &amp;iacute;ndice proviene de un par&amp;aacute;metro, siempre debe validarlos (lanzando &lt;code&gt;ArgumentException&lt;/code&gt; o &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; apropiados). En el siguiente ejemplo, los par&amp;aacute;metros incorrectos pueden causar &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; , los usuarios de esta funci&amp;oacute;n pueden esperar esto porque est&amp;aacute;n pasando una matriz, pero no siempre es tan obvio. Sugerir&amp;iacute;a validar siempre los par&amp;aacute;metros para las funciones p&amp;uacute;blicas:</target>
        </trans-unit>
        <trans-unit id="41c04df0b1cc86ae38c46937975285a88af8013e" translate="yes" xml:space="preserve">
          <source>If this happens in production then you'd better to add assertions in incriminated code, probably we won't see in your code what you can't see by yourself (but you can always bet).</source>
          <target state="translated">Si esto ocurre en la producción,entonces es mejor añadir afirmaciones en código incriminado,probablemente no veremos en tu código lo que no puedes ver por ti mismo (pero siempre puedes apostar).</target>
        </trans-unit>
        <trans-unit id="2b987be037398d3c129254a55d4e390c131f0e51" translate="yes" xml:space="preserve">
          <source>If you access an array using unvalidated arguments (from user input or from function user) you may get this error:</source>
          <target state="translated">Si se accede a una matriz utilizando argumentos no validados (de la entrada de usuario o de la función de usuario)se puede obtener este error:</target>
        </trans-unit>
        <trans-unit id="9227b461684c699e8e65d0bf1176a729c1a582df" translate="yes" xml:space="preserve">
          <source>Imagine you're trying to read data from a database with this code:</source>
          <target state="translated">Imagina que estás tratando de leer datos de una base de datos con este código:</target>
        </trans-unit>
        <trans-unit id="cc7a9efc85a264d77dd9f0d9027c47e5cf9aa6ef" translate="yes" xml:space="preserve">
          <source>In C#, usually, arrays are 0-based. It means that first element has index 0 and last element has index &lt;code&gt;Length - 1&lt;/code&gt; (where &lt;code&gt;Length&lt;/code&gt; is total number of items in the array) so this code doesn't work:</source>
          <target state="translated">En C #, generalmente, las matrices est&amp;aacute;n basadas en 0. Significa que el primer elemento tiene &amp;iacute;ndice 0 y el &amp;uacute;ltimo elemento tiene &amp;iacute;ndice &lt;code&gt;Length - 1&lt;/code&gt; (donde &lt;code&gt;Length&lt;/code&gt; es el n&amp;uacute;mero total de elementos en la matriz), por lo que este c&amp;oacute;digo no funciona:</target>
        </trans-unit>
        <trans-unit id="fd6bbf267ba207b6ab0dbf6146519797f071cf4c" translate="yes" xml:space="preserve">
          <source>In VB.NET, arrays are declared setting the maximum valid index value for the array. It is not the count of the elements that we want to store in the array.</source>
          <target state="translated">En VB.NET,los arreglos se declaran estableciendo el máximo valor de índice válido para el arreglo.No es el recuento de los elementos que queremos almacenar en el array.</target>
        </trans-unit>
        <trans-unit id="dfcd9df83ee30d7d807a5c86bffb1eab90e4c481" translate="yes" xml:space="preserve">
          <source>In another scenario you may get &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; for this code (for example if you're using &lt;code&gt;GetPixel&lt;/code&gt; method on a &lt;code&gt;Bitmap&lt;/code&gt; class).</source>
          <target state="translated">En otro escenario, puede obtener &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; para este c&amp;oacute;digo (por ejemplo, si est&amp;aacute; utilizando el m&amp;eacute;todo &lt;code&gt;GetPixel&lt;/code&gt; en una clase de &lt;code&gt;Bitmap&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a096121cdf696e4cc12035da5ed6a1a2d6a4cfea" translate="yes" xml:space="preserve">
          <source>In my opinion, most of the questions, here on SO, about this error can be simply avoided. The time you spend to write a proper question (with a small working example and a small explanation) could easily much more than the time you'll need to debug your code. First of all, read this Eric Lippert's blog post about &lt;a href=&quot;http://ericlippert.com/2014/03/05/how-to-debug-small-programs/&quot;&gt;debugging of small programs&lt;/a&gt;, I won't repeat his words here but it's absolutely a &lt;em&gt;must read&lt;/em&gt;.</source>
          <target state="translated">En mi opini&amp;oacute;n, la mayor&amp;iacute;a de las preguntas, aqu&amp;iacute; en SO, sobre este error pueden simplemente evitarse. El tiempo que dedica a escribir una pregunta adecuada (con un peque&amp;ntilde;o ejemplo de trabajo y una peque&amp;ntilde;a explicaci&amp;oacute;n) podr&amp;iacute;a ser mucho m&amp;aacute;s que el tiempo que necesitar&amp;aacute; para depurar su c&amp;oacute;digo. En primer lugar, lea esta publicaci&amp;oacute;n de blog de Eric Lippert sobre la &lt;a href=&quot;http://ericlippert.com/2014/03/05/how-to-debug-small-programs/&quot;&gt;depuraci&amp;oacute;n de programas peque&amp;ntilde;os&lt;/a&gt; , no repetir&amp;eacute; sus palabras aqu&amp;iacute;, pero es absolutamente una &lt;em&gt;lectura obligada&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="edd9c3162520ffa6a25317a3046678c7840a5043" translate="yes" xml:space="preserve">
          <source>In one of previous examples we directly used &lt;code&gt;Array.IndexOf()&lt;/code&gt; return value. If we know it may fail then it's better to handle that case:</source>
          <target state="translated">En uno de los ejemplos anteriores, utilizamos directamente el valor de retorno &lt;code&gt;Array.IndexOf()&lt;/code&gt; . Si sabemos que puede fallar, entonces es mejor manejar ese caso:</target>
        </trans-unit>
        <trans-unit id="0eaaf0f408d82787f7dce03834f5280173facd24" translate="yes" xml:space="preserve">
          <source>In that example, array indices are valid from 1 to 4. Of course, upper bound cannot be changed.</source>
          <target state="translated">En ese ejemplo,los índices de la matriz son válidos de 1 a 4.Por supuesto,el límite superior no puede ser cambiado.</target>
        </trans-unit>
        <trans-unit id="530b06e2da2492e2c8bc73420f839699bc382ee8" translate="yes" xml:space="preserve">
          <source>In the following example we create a raw bidimensional array of &lt;code&gt;Color&lt;/code&gt;. Each item represents a pixel, indices are from &lt;code&gt;(0, 0)&lt;/code&gt; to &lt;code&gt;(imageWidth - 1, imageHeight - 1)&lt;/code&gt;.</source>
          <target state="translated">En el siguiente ejemplo, creamos una matriz bidimensional sin procesar de &lt;code&gt;Color&lt;/code&gt; . Cada elemento representa un p&amp;iacute;xel, los &amp;iacute;ndices son de &lt;code&gt;(0, 0)&lt;/code&gt; a &lt;code&gt;(imageWidth - 1, imageHeight - 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32a51fdd8deaa7d4b87e2ddb0c98c68d696f01dc" translate="yes" xml:space="preserve">
          <source>In this example, let me assume, for simplicity, that arrays are always monodimensional and 0-based. If you want to be strict (or you're developing a library), you may need to replace &lt;code&gt;0&lt;/code&gt; with &lt;code&gt;GetLowerBound(0)&lt;/code&gt; and &lt;code&gt;.Length&lt;/code&gt; with &lt;code&gt;GetUpperBound(0)&lt;/code&gt; (of course if you have parameters of type &lt;code&gt;System.Arra&lt;/code&gt;y, it doesn't apply for &lt;code&gt;T[]&lt;/code&gt;). Please note that in this case, upper bound is inclusive then this code:</source>
          <target state="translated">En este ejemplo, d&amp;eacute;jenme suponer, por simplicidad, que las matrices son siempre monodimensionales y basadas en 0. Si desea ser estricto (o est&amp;aacute; desarrollando una biblioteca), es posible que deba reemplazar &lt;code&gt;0&lt;/code&gt; con &lt;code&gt;GetLowerBound(0)&lt;/code&gt; y &lt;code&gt;.Length&lt;/code&gt; con &lt;code&gt;GetUpperBound(0)&lt;/code&gt; (por supuesto, si tiene par&amp;aacute;metros de tipo &lt;code&gt;System.Arra&lt;/code&gt; y, it no aplica para &lt;code&gt;T[]&lt;/code&gt; ). Tenga en cuenta que, en este caso, el l&amp;iacute;mite superior incluye este c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="40272c70580d7c109cb89e34d31411747867424c" translate="yes" xml:space="preserve">
          <source>Index was outside the bounds of the array.</source>
          <target state="translated">El índice estaba fuera de los límites de la matriz.</target>
        </trans-unit>
        <trans-unit id="f4bb569161e53103307661e8b53e45107af3a570" translate="yes" xml:space="preserve">
          <source>Moreover please note that if you have a multidimensional array then you can't use &lt;code&gt;Array.Length&lt;/code&gt; for both dimension, you have to use &lt;code&gt;Array.GetLength()&lt;/code&gt;:</source>
          <target state="translated">Adem&amp;aacute;s, tenga en cuenta que si tiene una matriz multidimensional, entonces no puede usar &lt;code&gt;Array.Length&lt;/code&gt; para ambas dimensiones, debe usar &lt;code&gt;Array.GetLength()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="570a52861d8c447060bebaa3d7e734fd46e5d33b" translate="yes" xml:space="preserve">
          <source>Next example is a naive example to calculate occurrences of a given set of numbers (knowing maximum number and returning an array where item at index 0 represents number 0, items at index 1 represents number 1 and so on):</source>
          <target state="translated">El siguiente ejemplo es un ejemplo ingenuo para calcular las ocurrencias de un determinado conjunto de números (conociendo el número máximo y devolviendo una matriz donde el artículo en el índice 0 representa el número 0,los artículos en el índice 1 representan el número 1 y así sucesivamente):</target>
        </trans-unit>
        <trans-unit id="d557f009913713cad73735b6dbf5343e1e1dfbca" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; throws &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; for the same cases where arrays use &lt;code&gt;IndexOutOfRangeException&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; arroja &lt;code&gt;ArgumentOutOfRangeException&lt;/code&gt; para los mismos casos en que las matrices usan &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd651f30e77cb8c08ebc4ef5e06e931ce221c6fe" translate="yes" xml:space="preserve">
          <source>Of course, it's a pretty terrible implementation but what I want to show is that it'll fail for negative numbers and numbers above &lt;code&gt;maximum&lt;/code&gt;.</source>
          <target state="translated">Por supuesto, es una implementaci&amp;oacute;n bastante terrible, pero lo que quiero mostrar es que fallar&amp;aacute; por n&amp;uacute;meros negativos y n&amp;uacute;meros superiores al &lt;code&gt;maximum&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ef9f43dc4d8385dc0e33e58565ca9eb5b222e6b" translate="yes" xml:space="preserve">
          <source>Often there is complex program state that maybe difficult to have control over at a particular point in code e.g a DB connection goes down so data for an input cannot be retrieved etc... This kind of issue often results in an Exception of some kind that has to bubble up to a higher level because where it occurs has no way of dealing with it at that point.</source>
          <target state="translated">A menudo hay un estado de programa complejo sobre el que puede ser difícil tener control en un punto particular del código,por ejemplo,una conexión DB se cae y los datos de una entrada no pueden ser recuperados,etc...Este tipo de problema a menudo resulta en una excepción de algún tipo que tiene que burbujear a un nivel más alto porque donde ocurre no tiene forma de tratar con ella en ese punto.</target>
        </trans-unit>
        <trans-unit id="27f8fcfb9ecd8c53b26dd0b2f91e65142b39621f" translate="yes" xml:space="preserve">
          <source>Please note that this behavior is shared with most &lt;code&gt;IDataReader&lt;/code&gt; implementations (&lt;code&gt;SqlDataReader&lt;/code&gt;, &lt;code&gt;OleDbDataReader&lt;/code&gt; and so on).</source>
          <target state="translated">Tenga en cuenta que este comportamiento se comparte con la mayor&amp;iacute;a de &lt;code&gt;IDataReader&lt;/code&gt; implementaciones de IDataReader ( &lt;code&gt;SqlDataReader&lt;/code&gt; , &lt;code&gt;OleDbDataReader&lt;/code&gt; , etc.).</target>
        </trans-unit>
        <trans-unit id="b97b5a8efe8a2722837e5c57560477b5040d0b1f" translate="yes" xml:space="preserve">
          <source>Please note that this is not allowed (it'll throw &lt;code&gt;InvalidCastException&lt;/code&gt;), that's why if your parameters are &lt;code&gt;T[]&lt;/code&gt; you're safe about custom lower bound arrays:</source>
          <target state="translated">Tenga en cuenta que esto no est&amp;aacute; permitido (arrojar&amp;aacute; &lt;code&gt;InvalidCastException&lt;/code&gt; ), es por eso que si sus par&amp;aacute;metros son &lt;code&gt;T[]&lt;/code&gt; , est&amp;aacute; seguro sobre las matrices de l&amp;iacute;mite inferior personalizadas:</target>
        </trans-unit>
        <trans-unit id="96f3e922a9aef7a1879f91f29f818e5ff62931fb" translate="yes" xml:space="preserve">
          <source>Result will be:</source>
          <target state="translated">El resultado será:</target>
        </trans-unit>
        <trans-unit id="fabd2b4a718bdee98a8cc1784519325b35b0832c" translate="yes" xml:space="preserve">
          <source>Same cases as array - range of valid indexes - 0 (&lt;code&gt;List&lt;/code&gt;'s indexes always start with 0) to &lt;code&gt;list.Count&lt;/code&gt; - accessing elements outside of this range will cause the exception.</source>
          <target state="translated">Los mismos casos que la matriz - rango de &amp;iacute;ndices v&amp;aacute;lidos - 0 (los &amp;iacute;ndices de la lista siempre comienzan con 0) a la &lt;code&gt;list.Count&lt;/code&gt; . Contar - el acceso a elementos fuera de este rango causar&amp;aacute; la excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4caee130f7f88696a123daa568884e0a7a6c235c" translate="yes" xml:space="preserve">
          <source>Same scenario: whenever we try to access an array list, etc. we can only access the existing indexes in the array. &lt;code&gt;array[0]&lt;/code&gt; and &lt;code&gt;array[1]&lt;/code&gt; are existing. If we try to access &lt;code&gt;array[3]&lt;/code&gt;, it's not there actually, so an index out of bound exception will arise.</source>
          <target state="translated">Mismo escenario: cada vez que intentamos acceder a una lista de matriz, etc., solo podemos acceder a los &amp;iacute;ndices existentes en la matriz. &lt;code&gt;array[0]&lt;/code&gt; y &lt;code&gt;array[1]&lt;/code&gt; son existentes. Si intentamos acceder a la &lt;code&gt;array[3]&lt;/code&gt; , en realidad no est&amp;aacute; all&amp;iacute;, por lo que surgir&amp;aacute; un &amp;iacute;ndice de excepci&amp;oacute;n vinculada.</target>
        </trans-unit>
        <trans-unit id="7d7463e8ea002eaac163acc85628793b0ec0e69f" translate="yes" xml:space="preserve">
          <source>Should be rewritten like this:</source>
          <target state="translated">Debería ser reescrito así:</target>
        </trans-unit>
        <trans-unit id="be76153017b0c155c35e835c740ed8b45e1ac779" translate="yes" xml:space="preserve">
          <source>Simple explanation about what a Index out of bound exception is:</source>
          <target state="translated">Una explicación sencilla sobre lo que es una excepción de Índice fuera del límite:</target>
        </trans-unit>
        <trans-unit id="2d047b4d2d0dcbe67d0f58d382579d548af0a6ba" translate="yes" xml:space="preserve">
          <source>Size of array is 3 (indices 0, 1 and 2), but the for-loop loops 4 times (0, 1, 2 and 3).</source>
          <target state="translated">El tamaño de la matriz es 3 (índices 0,1 y 2),pero los bucles for-loop 4 veces (0,1,2 y 3).</target>
        </trans-unit>
        <trans-unit id="b2fd41760f100eb04b3fbf11f90eaf5e88b79a94" translate="yes" xml:space="preserve">
          <source>So this loop will fill the array with 5 integers without causing any &lt;strong&gt;IndexOutOfRangeException&lt;/strong&gt;</source>
          <target state="translated">Entonces, este ciclo llenar&amp;aacute; la matriz con 5 enteros sin causar ninguna &lt;strong&gt;excepci&amp;oacute;n IndexOutOfRangeException&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2eceeacdc6960cb32b48adcd985da317ecc2c1d5" translate="yes" xml:space="preserve">
          <source>So when it tries to access outside the bounds with (3) it throws the exception.</source>
          <target state="translated">Así que cuando intenta acceder fuera de los límites con (3)lanza la excepción.</target>
        </trans-unit>
        <trans-unit id="eef2eb7f26ac3a52b33b36028193756338fc756d" translate="yes" xml:space="preserve">
          <source>Suppose for example that you have retrieved a column named &lt;em&gt;Column1&lt;/em&gt; but then you try to retrieve the value of that field with</source>
          <target state="translated">Supongamos, por ejemplo, que ha recuperado una columna denominada &lt;em&gt;Columna1&lt;/em&gt; pero luego intenta recuperar el valor de ese campo con</target>
        </trans-unit>
        <trans-unit id="5d5442589685d9f06310c6030d60b943cbbc03f6" translate="yes" xml:space="preserve">
          <source>The VB.NET rule</source>
          <target state="translated">La regla VB.NET</target>
        </trans-unit>
        <trans-unit id="29a34df4c3a8b6265655372cf0b7ca0c4c58177b" translate="yes" xml:space="preserve">
          <source>The VB.NET side of the story</source>
          <target state="translated">El lado de la historia de VB.NET</target>
        </trans-unit>
        <trans-unit id="107a9888b94abfe0f0842709b6d53a8d5a2cad39" translate="yes" xml:space="preserve">
          <source>There is another (documented) case when this exception is thrown: if, in &lt;code&gt;DataView&lt;/code&gt;, data column name being supplied to the &lt;code&gt;DataViewSort&lt;/code&gt; property is not valid.</source>
          <target state="translated">Hay otro caso (documentado) cuando se produce esta excepci&amp;oacute;n: si, en &lt;code&gt;DataView&lt;/code&gt; , el nombre de la columna de datos que se proporciona a la propiedad &lt;code&gt;DataViewSort&lt;/code&gt; no es v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="2feb23c1a9eaeb80736074afbcae4a7353c3d269" translate="yes" xml:space="preserve">
          <source>This code will then fail because array is 0-based and last (bottom-right) pixel in the image is &lt;code&gt;pixels[imageWidth - 1, imageHeight - 1]&lt;/code&gt;:</source>
          <target state="translated">Este c&amp;oacute;digo fallar&amp;aacute; porque la matriz est&amp;aacute; basada en 0 y el &amp;uacute;ltimo p&amp;iacute;xel (inferior derecho) de la imagen es &lt;code&gt;pixels[imageWidth - 1, imageHeight - 1]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7b0ef8f0aa42bf47870a059eee92fc5398d3ebb4" translate="yes" xml:space="preserve">
          <source>This exception may be thrown for another reason too: by convention, many &lt;em&gt;search functions&lt;/em&gt; will return -1 (nullables has been introduced with .NET 2.0 and anyway it's also a well-known convention in use from many years) if they didn't find anything. Let's imagine you have an array of objects comparable with a string. You may think to write this code:</source>
          <target state="translated">Esta excepci&amp;oacute;n tambi&amp;eacute;n puede producirse por otra raz&amp;oacute;n: por convenci&amp;oacute;n, muchas &lt;em&gt;funciones de b&amp;uacute;squeda&lt;/em&gt; devolver&amp;aacute;n -1 (nulables se ha introducido con .NET 2.0 y, de todos modos, tambi&amp;eacute;n es una convenci&amp;oacute;n conocida en uso desde hace muchos a&amp;ntilde;os) si no encuentran cualquier cosa. Imaginemos que tiene una matriz de objetos comparables con una cadena. Puede pensar en escribir este c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="a2fcd2cd1cb1036644f107b16a8890283d860e72" translate="yes" xml:space="preserve">
          <source>This exception means that you're trying to access a collection item by index, using an invalid index. An index is invalid when it's lower than the collection's lower bound or greater than &lt;del&gt;equal to the number of elements it contains.&lt;/del&gt; the maximum allowed index defined in the array declaration</source>
          <target state="translated">Esta excepci&amp;oacute;n significa que est&amp;aacute; intentando acceder a un elemento de colecci&amp;oacute;n por &amp;iacute;ndice, utilizando un &amp;iacute;ndice no v&amp;aacute;lido. Un &amp;iacute;ndice no es v&amp;aacute;lido cuando es menor que el l&amp;iacute;mite inferior de la colecci&amp;oacute;n o mayor que &lt;del&gt; igual al n&amp;uacute;mero de elementos que contiene. &lt;/del&gt; El &amp;iacute;ndice m&amp;aacute;ximo permitido definido en la declaraci&amp;oacute;n de matriz</target>
        </trans-unit>
        <trans-unit id="e7dec47f74c256ee0220fc295a632aecdf0b27a6" translate="yes" xml:space="preserve">
          <source>This exception means that you're trying to access a collection item by index, using an invalid index. An index is invalid when it's lower than the collection's lower bound or greater than or equal to the number of elements it contains.</source>
          <target state="translated">Esta excepción significa que está tratando de acceder a un artículo de la colección por medio de un índice,utilizando un índice inválido.Un índice es inválido cuando es menor que el límite inferior de la colección o mayor o igual al número de elementos que contiene.</target>
        </trans-unit>
        <trans-unit id="9e01fe07c21102f88931eb8da4f078ace2acf044" translate="yes" xml:space="preserve">
          <source>This happens because the indexer operator is implemented trying to retrieve the index of a &lt;em&gt;Colum1&lt;/em&gt; field that doesn't exist. The GetOrdinal method will throw this exception when its internal helper code returns a -1 as the index of &quot;Colum1&quot;.</source>
          <target state="translated">Esto sucede porque el operador del indexador se implementa tratando de recuperar el &amp;iacute;ndice de un campo &lt;em&gt;Colum1&lt;/em&gt; que no existe. El m&amp;eacute;todo GetOrdinal arrojar&amp;aacute; esta excepci&amp;oacute;n cuando su c&amp;oacute;digo interno de ayuda devuelva un -1 como &amp;iacute;ndice de &quot;Colum1&quot;.</target>
        </trans-unit>
        <trans-unit id="e8ae00193f164544dc369987db61ee45ff297184" translate="yes" xml:space="preserve">
          <source>This will fail if no items in &lt;code&gt;myArray&lt;/code&gt; will satisfy search condition because &lt;code&gt;Array.IndexOf()&lt;/code&gt; will return -1 and then array access will throw.</source>
          <target state="translated">Esto fallar&amp;aacute; si ning&amp;uacute;n elemento en &lt;code&gt;myArray&lt;/code&gt; satisfar&amp;aacute; la condici&amp;oacute;n de b&amp;uacute;squeda porque &lt;code&gt;Array.IndexOf()&lt;/code&gt; devolver&amp;aacute; -1 y luego arrojar&amp;aacute; el acceso a la matriz.</target>
        </trans-unit>
        <trans-unit id="1448888ed15547b9b90d018b51d2e99215c5719e" translate="yes" xml:space="preserve">
          <source>To easily understand the problem, imagine we wrote this code:</source>
          <target state="translated">Para entender fácilmente el problema,imagina que escribimos este código:</target>
        </trans-unit>
        <trans-unit id="d75990cb468491d4aee74eb65a49267c49a02831" translate="yes" xml:space="preserve">
          <source>Unlike arrays, &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; starts empty - so trying to access items of just created list lead to this exception.</source>
          <target state="translated">A diferencia de las matrices, la &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; comienza vac&amp;iacute;a, por lo que intentar acceder a los elementos de la lista reci&amp;eacute;n creada conduce a esta excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="85b71ece91202721794d3f3aa2f8575d83d210c3" translate="yes" xml:space="preserve">
          <source>What Is It?</source>
          <target state="translated">¿Qué es?</target>
        </trans-unit>
        <trans-unit id="d038b6b88960ddb547851582deb4aa9178a9143a" translate="yes" xml:space="preserve">
          <source>What does this mean, and what can I do about it?</source>
          <target state="translated">¿Qué significa esto,y qué puedo hacer al respecto?</target>
        </trans-unit>
        <trans-unit id="db3e9dce32f32c752d89721d4714009559cf8ea7" translate="yes" xml:space="preserve">
          <source>What is an IndexOutOfRangeException / ArgumentOutOfRangeException and how do I fix it</source>
          <target state="translated">¿Qué es un Argumento de Excepción de Índice de Rango y cómo lo arreglo?</target>
        </trans-unit>
        <trans-unit id="64d2ca343b2d11209d8e98e83bbc370189858b2f" translate="yes" xml:space="preserve">
          <source>When It Is Thrown</source>
          <target state="translated">Cuando es lanzado</target>
        </trans-unit>
        <trans-unit id="b6cd6c3e3375f53769e3f51014aa013895a17062" translate="yes" xml:space="preserve">
          <source>You can access this array from 0 to 3, values outside this range will cause &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; to be thrown. Remember this when you create and access an array.</source>
          <target state="translated">Puede acceder a esta matriz de 0 a 3, los valores fuera de este rango har&amp;aacute;n que se &lt;code&gt;IndexOutOfRangeException&lt;/code&gt; . Recuerde esto cuando cree y acceda a una matriz.</target>
        </trans-unit>
        <trans-unit id="a435dd41b664b49681c0f5d1ce876301860c479a" translate="yes" xml:space="preserve">
          <source>You can get the same exception also if you use the IDataReader overload of the indexer operator that takes a column name and pass an invalid column name.</source>
          <target state="translated">También puedes obtener la misma excepción si utilizas la sobrecarga de IDataReader del operador de indexación que toma un nombre de columna y pasa un nombre de columna inválido.</target>
        </trans-unit>
        <trans-unit id="fc1e14f5925304435bda2fd3d2ff334f6898cf6b" translate="yes" xml:space="preserve">
          <source>You found your error, check how &lt;code&gt;index&lt;/code&gt; increases. Is it right? Check how array is allocated, is coherent with how &lt;code&gt;index&lt;/code&gt; increases? Is it right according to your specifications? If you answer &lt;em&gt;yes&lt;/em&gt; to all these questions, then you'll find good help here on StackOverflow but please first check for that by yourself. You'll save your own time!</source>
          <target state="translated">Encontraste tu error, comprueba c&amp;oacute;mo aumenta el &lt;code&gt;index&lt;/code&gt; . &amp;iquest;Es correcto? Compruebe c&amp;oacute;mo se asigna la matriz, &amp;iquest;es coherente con c&amp;oacute;mo aumenta el &lt;code&gt;index&lt;/code&gt; ? &amp;iquest;Es correcto de acuerdo con sus especificaciones? Si responde &lt;em&gt;afirmativamente&lt;/em&gt; a todas estas preguntas, encontrar&amp;aacute; buena ayuda aqu&amp;iacute; en StackOverflow, pero primero verif&amp;iacute;quelo usted mismo. &amp;iexcl;Ahorrar&amp;aacute;s tu propio tiempo!</target>
        </trans-unit>
        <trans-unit id="250a56e82d76e86df3aa532f5df265e03cc75d27" translate="yes" xml:space="preserve">
          <source>You have source code, you have exception message with a stack trace. Go there, pick right line number and you'll see:</source>
          <target state="translated">Tienes el código fuente,tienes un mensaje de excepción con un rastro de pila.Ve allí,escoge el número de línea correcto y verás:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
