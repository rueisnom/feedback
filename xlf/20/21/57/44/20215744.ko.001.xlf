<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/20215744">
    <body>
      <group id="20215744">
        <trans-unit id="b7e2cf995f060f84d394e037243fac4be0c2f42c" translate="yes" xml:space="preserve">
          <source>... with left join:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... 왼쪽 조인&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc4669daf19948c0e06e0c410d61a130f41ce8d9" translate="yes" xml:space="preserve">
          <source>1) create a function that will check if a item is anywhere in the parent hierarchy of another one. Something like this (I will not write the function, make it with WHILE DO) :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1) 항목이 다른 항목의 상위 계층 구조에 있는지 확인하는 함수를 작성하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이와 같은 것 (함수를 쓰지 않고 WHILE DO로 작성하십시오) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="091a9a50ae645943409a126262c2a8be84a6b1c7" translate="yes" xml:space="preserve">
          <source>2) use a sub-select , something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2) 다음과 같은 하위 선택을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b23ccfdfd86377f2973d1a0a1289df8e6a08fbd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Output::&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Output::&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e021e8096db3c4f40241955870ff1f94ba900d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;EDIT:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c0f1eb761e0b0cd9b20b1c18d18c657d4734780" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;: See the question &lt;a href=&quot;https://stackoverflow.com/questions/4048151/what-are-the-options-for-storing-hierarchical-data-in-a-relational-database&quot;&gt;What are the options for storing hierarchical data in a relational database?&lt;/a&gt; for more options. There are different optimal solutions for different situations.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 질문 참조 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4048151/what-are-the-options-for-storing-hierarchical-data-in-a-relational-database&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;관계형 데이터베이스에 계층 적 데이터를 저장하기위한 옵션은 무엇입니까? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 많은 옵션. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상황에 따라 다른 최적의 솔루션이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69643d56145ce04634714be2f7b84ba7974fbb5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optimise the path length and &lt;code&gt;ORDER BY path&lt;/code&gt; using base36 encoding instead real numeric path id&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제 숫자 경로 ID 대신 base36 인코딩을 사용하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경로 길이 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ORDER BY path&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최적화하십시오.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a4c9189a63c20797d6bbd8ceac0ab7a40e16058" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TODO&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TODO&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f74465adc66cec924b29ff9c635d9484c7f28ce6" translate="yes" xml:space="preserve">
          <source>All in all, one may find these assumptions too risky to rely on. The &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/user-variables.html&quot;&gt;documentation&lt;/a&gt; warns:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대체로, 이러한 가정은 의지하기에는 너무 위험 할 수 있습니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/user-variables.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서는&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 경고 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5477dd17ce303b99fb49b1f9d98f3bc516de7abd" translate="yes" xml:space="preserve">
          <source>Also, I already have the solution using the for loop..... Let me know how to achieve the same using a single MySQL query if possible.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 이미 for 루프를 사용하는 솔루션을 가지고 있습니다 ..... 가능한 경우 단일 MySQL 쿼리를 사용하여 동일한 결과를 얻는 방법을 알려주십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d76bf049c5159585ba6892ca92b85a1a2547b5a" translate="yes" xml:space="preserve">
          <source>Alternative 1: &lt;code&gt;with recursive&lt;/code&gt;, &lt;code&gt;connect by&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대안 1 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;with recursive&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;connect by&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84f643890c9617f44cf83faef6e8b68f595275e5" translate="yes" xml:space="preserve">
          <source>Alternative 2: Path-style Identifiers</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대안 2 : 경로 스타일 식별자&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c799f0a9a6799a0ca45e9a9ed17d104e3215ea6" translate="yes" xml:space="preserve">
          <source>Alternative 3: Repeated Self-joins</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대안 3 : 반복되는 자체 조인&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b91579c1eb8f7403daa277fe963be94220a61fe" translate="yes" xml:space="preserve">
          <source>And then you just</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 당신은 단지&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2d5f3cb3c67b77b6dc383da3890415186eb71978" translate="yes" xml:space="preserve">
          <source>As stated above, from MySQL 8.0 onward you should use the recursive &lt;code&gt;with&lt;/code&gt; syntax.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위에서 언급했듯이 MySQL 8.0부터는 재귀 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;with&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 함께&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6532f5123aa8c4e010415d21f455fafecb24246" translate="yes" xml:space="preserve">
          <source>Detailed optimization explanation here:
&lt;a href=&quot;https://bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&quot;&gt;https://bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 최적화 설명 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4271430c0da02e9550544f7c14090490db247a8" translate="yes" xml:space="preserve">
          <source>Did the same thing for another quetion here</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 질문에 대해서도 같은 일을 했습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12c4ffe1d987164a4bedf6ab2aac597a113e181c" translate="yes" xml:space="preserve">
          <source>Efficiency</source>
          <target state="translated">Efficiency</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="e791a8ba10bc9d624a3006f0b25f85b8e853dcd0" translate="yes" xml:space="preserve">
          <source>Experimental rows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실험 행 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c11f943153b46cca92e6f29e7eb195d71c816d4" translate="yes" xml:space="preserve">
          <source>Filtering rows with certain path:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 경로로 행 필터링 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d9e82d860a6af0143337e46021b18acd4c3c99c" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;MySQL 5.x:&lt;/strong&gt; use inline variables, path IDs, or self-joins.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;들어 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL의 5.x를 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 인라인 변수, 경로 ID를, 또는 자체 조인.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="611510b632472f7370b4ed8326b40e81c5ecaec9" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;MySQL 8+:&lt;/strong&gt; use the recursive &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; syntax.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;들어 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL은 8 + :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 재귀 적 사용 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구문을.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6384aba0f85c45cc05ec0f2766a6aff248a4a5c8" translate="yes" xml:space="preserve">
          <source>For MySQL versions that do not support Common Table Expressions (up to version 5.7), you would achieve this with the following query:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공통 테이블 표현식 (최대 버전 5.7)을 지원하지 않는 MySQL 버전의 경우 다음 쿼리를 사용하여이를 달성 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57083a262292cf5018db199c2d4c981d5c5c6cb3" translate="yes" xml:space="preserve">
          <source>For very large data sets this solution might get slow, as the &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_find-in-set&quot;&gt;&lt;code&gt;find_in_set&lt;/code&gt;&lt;/a&gt; operation is not the most ideal way to find a number in a list, certainly not in a list that reaches a size in the same order of magnitude as the number of records returned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매우 큰 데이터 세트의 경우 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_find-in-set&quot;&gt; &lt;code&gt;find_in_set&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 조작이 목록에서 숫자를 찾는 가장 이상적인 방법이 아니므로 리턴 된 레코드 수와 동일한 크기의 크기에 도달하는 목록이 아닌 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우이 솔루션이 느려질 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 있습니다. .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="303d1a56d21aa538e677a633db6beefa41d5e2db" translate="yes" xml:space="preserve">
          <source>From the blog &lt;strong&gt;&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot;&gt;Managing Hierarchical Data in MySQL&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL에서 계층 데이터 관리&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블로그 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f13807ec4314af6740a5c8890da78c2440b0595" translate="yes" xml:space="preserve">
          <source>Function's body</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능의 몸&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c64007022d5a6b7fc56b70c6872d834daf7afeb" translate="yes" xml:space="preserve">
          <source>Here is a &lt;a href=&quot;http://sqlfiddle.com/#!9/b4f997/3&quot;&gt;fiddle&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/b4f997/3&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바이올린이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="daa66a8a369d04a26401fa838b5e654cb97763bd" translate="yes" xml:space="preserve">
          <source>Here is a &lt;a href=&quot;http://sqlfiddle.com/#!9/d74210/1&quot;&gt;fiddle&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/d74210/1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바이올린이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3adf0ede9578f08877a8740425d4c6d29f5113e" translate="yes" xml:space="preserve">
          <source>Here is an example of using BlueM/tree:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 BlueM / tree를 사용하는 예입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fa3c285d644a4ebf6a9ae4abbdae1b6a5e4cda5" translate="yes" xml:space="preserve">
          <source>Here, the value specified in &lt;code&gt;@pv := '19'&lt;/code&gt; should be set to the &lt;code&gt;id&lt;/code&gt; of the parent you want to select all the descendants of.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@pv := '19'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지정된 값은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 자손을 선택하려는 부모 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 설정해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="103ab8290f89ceeb39a65db4903ffbe55a437dad" translate="yes" xml:space="preserve">
          <source>Hope it helps somebody :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것이 누군가를 돕기를 바랍니다 :)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b177c2ce1f6663820887513ddcce00c2844511ad" translate="yes" xml:space="preserve">
          <source>How to create a MySQL hierarchical recursive query</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL 계층 재귀 쿼리를 만드는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ef21ad37e7da788e87fe5304f1bf40dd151c848" translate="yes" xml:space="preserve">
          <source>I found it more easily to :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 그것을 더 쉽게 발견했다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6ecd79fcd0029002938355b1e32a5c7c01db155" translate="yes" xml:space="preserve">
          <source>I have a MySQL table which is as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 MySQL 테이블이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39a33003c9ba672464407a38f7681a84143cfd10" translate="yes" xml:space="preserve">
          <source>I have made a query for you. This will give you Recursive Category with a Single Query:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 당신을 위해 질문했다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게하면 단일 쿼리로 재귀 범주가 제공됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e61929951c25a4914351d05b2e5170acfec79520" translate="yes" xml:space="preserve">
          <source>If you know an upper limit for how deep your hierarchy tree can become, you can use a standard &lt;code&gt;sql&lt;/code&gt; query like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계층 구조 트리의 깊이에 대한 상한을 알고 있으면 다음 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 같이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표준 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sql&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 쿼리를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6547c17bc8fba05db61716dc1c7368e05bc00a8f" translate="yes" xml:space="preserve">
          <source>If you need quick read speed, the best option is to use a closure table. A closure table contains a row for each ancestor/descendant pair. So in your example, the closure table would look like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;빠른 읽기 속도가 필요한 경우 가장 좋은 방법은 클로저 테이블을 사용하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클로저 테이블에는 각 조상 / 후손 쌍에 대한 행이 포함됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 귀하의 예에서 클로저 테이블은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="251f62f0d5ace2a6d7c138ce194fe4f13f6ea999" translate="yes" xml:space="preserve">
          <source>In the end - got more-or-less simple, relatively fast, and SIMPLE solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결국 단순하고 비교적 빠르고 간단한 솔루션을 얻었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2545c26c702b94a515fc6db07a06ee528d06ef05" translate="yes" xml:space="preserve">
          <source>It's a &lt;strong&gt;category&lt;/strong&gt; table.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은의 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;범주&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 테이블.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35bc5df1bb85024e2a396f8bacd7c3ade5bc5a85" translate="yes" xml:space="preserve">
          <source>Its a little tricky one, check this whether it is working for you</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;조금 까다로운 것, 이것이 당신을 위해 작동하는지 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ef16fd9e098fe1b1f4b6df0d566974497a09113" translate="yes" xml:space="preserve">
          <source>Just use &lt;a href=&quot;https://github.com/BlueM/Tree&quot;&gt;BlueM/tree&lt;/a&gt; php class for make tree of a self-relation table in mysql.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysql에서 자체 관계 테이블의 트리를 만들기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위해 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/BlueM/Tree&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BlueM / tree&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; PHP 클래스를 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5c4cb263b1243695f037e34d15166192d25d068" translate="yes" xml:space="preserve">
          <source>Lineage approach descr. can be found wherever, for example
&lt;a href=&quot;http://ferdychristant.com/blog/archive/DOMM-7QJPM7&quot;&gt;Here&lt;/a&gt; or &lt;a href=&quot;https://dba.stackexchange.com/questions/30021/mysql-tree-hierarchical-query&quot;&gt;here&lt;/a&gt;.
As of function - &lt;a href=&quot;https://stackoverflow.com/questions/12948009/finding-all-parents-in-mysql-table-with-single-query&quot;&gt;that&lt;/a&gt; is what enspired me.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계보 접근 방식 설명 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어디서나 찾을 수 있습니다 (예 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ferdychristant.com/blog/archive/DOMM-7QJPM7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Here&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dba.stackexchange.com/questions/30021/mysql-tree-hierarchical-query&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;here)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기능적으로- &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12948009/finding-all-parents-in-mysql-table-with-single-query&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 저를 고무 시켰습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e90fbcce23a97315476207d7186f6d342adc2d3" translate="yes" xml:space="preserve">
          <source>More and more databases implement the &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL:1999#Common_table_expressions_and_recursive_queries&quot;&gt;SQL:1999 ISO standard &lt;code&gt;WITH [RECURSIVE]&lt;/code&gt; syntax&lt;/a&gt; for recursive queries (e.g. &lt;a href=&quot;http://www.postgresql.org/docs/8.4/static/queries-with.html&quot;&gt;Postgres 8.4+&lt;/a&gt;, &lt;a href=&quot;https://technet.microsoft.com/en-us/library/ms186243%28v=sql.105%29.aspx&quot;&gt;SQL Server 2005+&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot;&gt;DB2&lt;/a&gt;, &lt;a href=&quot;https://docs.oracle.com/cloud/latest/db112/SQLRF/statements_10002.htm#sthref6733&quot;&gt;Oracle 11gR2+&lt;/a&gt;, &lt;a href=&quot;https://www.sqlite.org/lang_with.html&quot;&gt;SQLite 3.8.4+&lt;/a&gt;, &lt;a href=&quot;https://firebirdsql.org/refdocs/langrefupd21-select.html#langrefupd21-select-cte&quot;&gt;Firebird 2.1+&lt;/a&gt;, &lt;a href=&quot;http://www.h2database.com/html/advanced.html#recursive_queries&quot;&gt;H2&lt;/a&gt;, &lt;a href=&quot;http://www.hsqldb.org/doc/guide/dataaccess-chapt.html#dac_with_clause&quot;&gt;HyperSQL 2.1.0+&lt;/a&gt;, &lt;a href=&quot;http://www.info.teradata.com/htmlpubs/DB_TTU_14_00/index.html#page/SQL_Reference/B035_1146_111A/ch01.032.066.html&quot;&gt;Teradata&lt;/a&gt;, &lt;a href=&quot;https://mariadb.com/kb/en/mariadb/with/&quot;&gt;MariaDB 10.2.2+&lt;/a&gt;). And as of &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot;&gt;version 8.0, also MySQL supports it&lt;/a&gt;. See the top of this answer for the syntax to use.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;점점 더 많은 데이터베이스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 재귀 쿼리에 대해 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/SQL:1999#Common_table_expressions_and_recursive_queries&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL : 1999 ISO 표준 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;WITH [RECURSIVE]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구문&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다 (예 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.postgresql.org/docs/8.4/static/queries-with.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Postgres 8.4+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/ms186243%28v=sql.105%29.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Server &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2005+&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DB2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/cloud/latest/db112/SQLRF/statements_10002.htm#sthref6733&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Oracle 11gR2 +&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.sqlite.org/lang_with.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLite 3.8.4+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://firebirdsql.org/refdocs/langrefupd21-select.html#langrefupd21-select-cte&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firebird 2.1+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.h2database.com/html/advanced.html#recursive_queries&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;H2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.hsqldb.org/doc/guide/dataaccess-chapt.html#dac_with_clause&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HyperSQL 2.1). 0+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.info.teradata.com/htmlpubs/DB_TTU_14_00/index.html#page/SQL_Reference/B035_1146_111A/ch01.032.066.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Teradata&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://mariadb.com/kb/en/mariadb/with/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MariaDB 10.2.2+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). 그리고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;버전 8.0부터 MySQL도 지원합니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 사용할 구문은이 답변의 상단을 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b465fea6fefc20703fcd0184ebc321a00bd3a113" translate="yes" xml:space="preserve">
          <source>Most users at one time or another have dealt with hierarchical data in a SQL database and no doubt learned that the management of hierarchical data is not what a relational database is intended for. The tables of a relational database are not hierarchical (like XML), but are simply a flat list. Hierarchical data has a parent-child relationship that is not naturally represented in a relational database table.
&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 번에 대부분의 사용자는 SQL 데이터베이스에서 계층 적 데이터를 다루었으며 계층 적 데이터 관리가 관계형 데이터베이스의 목적이 아니라는 것을 의심하지 않았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;관계형 데이터베이스의 테이블은 XML과 같이 계층 적이 지 않지만 단순한 목록입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계층 적 데이터에는 관계형 데이터베이스 테이블에 자연스럽게 표현되지 않은 부모-자식 관계가 있습니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 읽어보기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09cd315d1d974b6e62f2e487a3710c1369ca5cd2" translate="yes" xml:space="preserve">
          <source>MySQL 5.x</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL 5.x&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd1b6a94e3bb3fbcc8076cb58c957eb3ca8285ef" translate="yes" xml:space="preserve">
          <source>MySQL 8+</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL 8 이상&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8868b635a449c1e80fa6338977b9c17cfdf3837d" translate="yes" xml:space="preserve">
          <source>MySQL version 5.7 does not offer such a feature. When your database engine provides this syntax or you can migrate to one that does, then that is certainly the best option to go for. If not, then also consider the following alternatives.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL 버전 5.7은 이러한 기능을 제공하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터베이스 엔진이이 구문을 제공하거나 제공하는 구문으로 마이그레이션 할 수 있으면 이것이 가장 적합한 옵션 일 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않은 경우 다음 대안도 고려하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbdba033b95c55501c21297ab7e064d71b51af4c" translate="yes" xml:space="preserve">
          <source>Mysql select recursive get all child with multiple level</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL은 재귀 선택 여러 수준의 모든 자녀를 얻을&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="896218529adc761114a6949ee91c45d338e4bc57" translate="yes" xml:space="preserve">
          <source>Now, I want to have a single MySQL query to which I simply supply the id [for instance say 'id = 19'] then I should get all its child ids [i.e. result should have ids '20,21,22']....
Also, the hierarchy of the children is not known it can vary....</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 단일 ID를 제공하는 단일 MySQL 쿼리를 원합니다. 예를 들어 'id = 19'라고 말하면 모든 자식 ID를 가져와야합니다 (예 : 결과는 ID '20, 21,22 '이어야 함). ... 또한 어린이의 계층 구조는 다양 할 수 있습니다 ....&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fd1f2668320840a07a37e9fdddebabe466d1961" translate="yes" xml:space="preserve">
          <source>Of course, there is a big downside whenever you use denormalized data like this. You need to maintain the closure table alongside your categories table. The best way is probably to use triggers, but it is somewhat complex to correctly track inserts/updates/deletes for closure tables. As with anything, you need to look at your requirements and decide what approach is best for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 이와 같이 비정규 화 된 데이터를 사용할 때마다 큰 단점이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;카테고리 테이블과 함께 클로저 테이블을 유지 보수해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 좋은 방법은 트리거를 사용하는 것이지만 클로저 테이블의 삽입 / 업데이트 / 삭제를 올바르게 추적하는 것은 다소 복잡합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 것과 마찬가지로, 요구 사항을 살펴보고 가장 적합한 방법을 결정해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fea0a9f83ce8dd5b7908d6f6102014da790bf083" translate="yes" xml:space="preserve">
          <source>Once you have this table, hierarchical queries become very easy and fast. To get all the descendants of category 20:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 테이블이 있으면 계층 적 쿼리가 매우 쉽고 빠릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;카테고리 20의 모든 자손을 얻으려면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="3ea1f8834714c0d6fdaed95d92d27bd0bb5a161b" translate="yes" xml:space="preserve">
          <source>Previous releases of MySQL made it possible to assign a value to a user variable in statements other than &lt;code&gt;SET&lt;/code&gt;. This functionality is supported in MySQL 8.0 for backward compatibility but is subject to removal in a future release of MySQL.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL의 이전 릴리스에서는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SET&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이외의 명령문에서 사용자 변수에 값을 지정할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기능은 이전 버전과의 호환성을 위해 MySQL 8.0에서 지원되지만 향후 MySQL 릴리스에서는 제거 될 예정입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c1822344bdf8633591dc55296427e00c5285fa8" translate="yes" xml:space="preserve">
          <source>Query:</source>
          <target state="translated">Query:</target>
        </trans-unit>
        <trans-unit id="2bc99338935ecf4308f7c616ced83eb8b692358e" translate="yes" xml:space="preserve">
          <source>Recursive Stored procedure:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;재귀 저장 프로 시저 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6783b8280f73174e0613c23de9ae067d24cf527f" translate="yes" xml:space="preserve">
          <source>Refer the blog for more details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 블로그를 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e751dbd9b50dcba4180a9ef66715a0e09620c46c" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://stackoverflow.com/questions/16513418/how-to-do-the-recursive-select-query-in-mysql&quot;&gt;How to do the Recursive SELECT query in Mysql?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/16513418/how-to-do-the-recursive-select-query-in-mysql&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL에서 재귀 SELECT 쿼리를 수행하는 방법은 무엇입니까?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38ef9f5b93bbc3e1070283e723373d1275638357" translate="yes" xml:space="preserve">
          <source>Replace with your field and table name appropriately.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필드 및 테이블 이름으로 적절히 바꾸십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="ddc2d3f0b5808a9206edbb3146b90c4956b4e66c" translate="yes" xml:space="preserve">
          <source>SQL fiddle link &lt;a href=&quot;http://www.sqlfiddle.com/#!2/e3cdf/2&quot;&gt;http://www.sqlfiddle.com/#!2/e3cdf/2&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL 바이올린 링크 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.sqlfiddle.com/#!2/e3cdf/2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.sqlfiddle.com/#!2/e3cdf/2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="479149be3ecb7aa4351d188d4d6ddbe0bc854a26" translate="yes" xml:space="preserve">
          <source>See this &lt;a href=&quot;http://sqlfiddle.com/#!9/5de2a/46&quot;&gt;fiddle&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/5de2a/46&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바이올린을&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b191e0722a59e0bc08a6c015ba68517e511303a8" translate="yes" xml:space="preserve">
          <source>Select example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 선택하십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0dbeacad6e10bb50e106867fb424804324f5257a" translate="yes" xml:space="preserve">
          <source>Simple query to list child's of first recursion:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자식의 첫 재귀를 나열하는 간단한 쿼리 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3974149b0b60d0e3915d1f7ac4eacb82d88ed74f" translate="yes" xml:space="preserve">
          <source>So even though it works consistently with the above query, the evaluation order may still change, for instance when you add conditions or use this query as a view or sub-query in a larger query. It is a &quot;feature&quot; that &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/user-variables.html&quot;&gt;will be removed in a future MySQL release&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 위 쿼리와 일관되게 작동하더라도 평가 순서는 계속 변경 될 수 있습니다. 예를 들어 조건을 추가하거나이 쿼리를 더 큰 쿼리에서 뷰 또는 하위 쿼리로 사용하는 경우. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/user-variables.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;향후 MySQL 릴리스에서 제거 될&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;기능&quot;입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1bc092a320c00fe0119e4963c25c91ab2648364" translate="yes" xml:space="preserve">
          <source>Some databases have an alternative, non-standard syntax for hierarchical look-ups, such as the &lt;code&gt;CONNECT BY&lt;/code&gt; clause available on &lt;a href=&quot;https://docs.oracle.com/cd/B19306_01/server.102/b14200/queries003.htm&quot;&gt;Oracle&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot;&gt;DB2&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/en/SSGU8G_12.1.0/com.ibm.sqls.doc/ids_sqs_2035.htm&quot;&gt;Informix&lt;/a&gt;, &lt;a href=&quot;https://www.cubrid.org/manual/en/10.0/sql/query/hq.html&quot;&gt;CUBRID&lt;/a&gt; and other databases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 데이터베이스에는 &lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/cd/B19306_01/server.102/b14200/queries003.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Oracle&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DB2&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/en/SSGU8G_12.1.0/com.ibm.sqls.doc/ids_sqs_2035.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Informix&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;a href=&quot;https://www.cubrid.org/manual/en/10.0/sql/query/hq.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CUBRID&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 기타 데이터베이스에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 가능한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CONNECT BY&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 절 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 같은 계층 적 조회를위한 비표준 대체 구문이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26947e1fc07b1b3f990926e0a985cbb5e78aa8af" translate="yes" xml:space="preserve">
          <source>Something not mentioned here, although a bit similar to the second alternative of the accepted answer but different and low cost for big hierarchy query and easy (insert update delete) items, would be  adding a persistent path  column for each item.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 언급되지 않은 것은 허용 된 답변의 두 번째 대안과 비슷하지만 큰 계층 구조 쿼리 및 쉬운 (삽입 업데이트 삭제) 항목에 대해 다르고 비용이 다르지만 각 항목에 지속적인 경로 열을 추가하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56f59e348bb1fa58e62f7df4bd2bfe907170b02f" translate="yes" xml:space="preserve">
          <source>Suppressing also the slash '/' separator by using fixed length and padding to the encoded id</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;고정 길이를 사용하고 인코딩 된 ID에 패딩을 사용하여 슬래시 '/'구분 기호 억제&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aac1deb9db82b6cd6275b2705e677dce51d2057e" translate="yes" xml:space="preserve">
          <source>Table definition:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테이블 정의 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="261e19cd4c00462ee4c72a1d1518d0962048f879" translate="yes" xml:space="preserve">
          <source>Table structure</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테이블 구조&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4d63d7bc6b4ac2c5617fc5ec1bfe5252f32f899" translate="yes" xml:space="preserve">
          <source>Test it online with &lt;a href=&quot;http://sqlfiddle.com/#!9/a318e3/4/0&quot;&gt;Sql Fiddle&lt;/a&gt; and see all results.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/a318e3/4/0&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sql Fiddle을 사용&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하여 온라인으로 테스트하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 결과를 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3522e21b699bf4af9b0d8d97c777880a17f0346e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;from&lt;/code&gt; clause is evaluated first. So that is where &lt;code&gt;@pv&lt;/code&gt; gets initialised.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;from&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 절은 먼저 평가됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@pv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 초기화됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75127c8ae86210d69079f5e9485683fefc44c7ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; clause is evaluated for each record in the order of retrieval from the &lt;code&gt;from&lt;/code&gt; aliases. So this is where a condition is put to only include records for which the parent was already identified as being in the descendant tree (all descendants of the primary parent are progressively added to &lt;code&gt;@pv&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;where&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 절은에서 검색의 순서로 각 레코드에 대해 평가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;from&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 별명. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 부모가 이미 자손 트리에있는 것으로 식별 된 레코드 만 포함하는 조건이 있습니다 (기본 부모의 모든 자손은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@pv&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 점진적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가됨&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07c1bc852d4515012332a55ed60635472b661a8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; condition specifies which parent you want to retrieve the descendants of. You can extend this query with more levels as needed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;where&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신의 후손을 검색 할 부모 조건 지정합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필요에 따라 더 많은 레벨로이 쿼리를 확장 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94411603a318589131454c17f8d6834890d2b862" translate="yes" xml:space="preserve">
          <source>The best approach I've come up with is</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 생각해 낸 가장 좋은 방법은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3c24ebc8dacde720b6360e6449745f077296ccc" translate="yes" xml:space="preserve">
          <source>The conditions in this &lt;code&gt;where&lt;/code&gt; clause are evaluated in order, and the evaluation is interrupted once the total outcome is certain. Therefore the second condition must be in second place, as it adds the &lt;code&gt;id&lt;/code&gt; to the parent list, and this should only happen if the &lt;code&gt;id&lt;/code&gt; passes the first condition. The &lt;code&gt;length&lt;/code&gt; function is only called to make sure this condition is always true, even if the &lt;code&gt;pv&lt;/code&gt; string would for some reason yield a falsy value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;where&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 절의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;조건은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;순서대로 평가되며 전체 결과가 확실 해지면 평가가 중단됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 두 번째 조건은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;상위 목록에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가하므로 두 번째 조건에 있어야하며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 첫 번째 조건을 통과 한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우에만 발생합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기능은 반드시이 조건이 경우에도, 항상 true인지 확인하기 위해 호출됩니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;pv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문자열이 어떤 이유에 대한 falsy 값을 얻을 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2b8364d89bae3d7eb4a42ba260d163dd89e3ed2" translate="yes" xml:space="preserve">
          <source>The other way to do it is to store two extra bits of data, a left and right value. The left and right value are derived from a pre-order traversal of the tree structure you're representing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 방법은 왼쪽과 오른쪽 값인 두 개의 추가 데이터 비트를 저장하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왼쪽 및 오른쪽 값은 나타내는 트리 구조의 사전 순서 순회에서 파생됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76db8ee2809916c0b2b2a7d652ec5c679894bf7b" translate="yes" xml:space="preserve">
          <source>The query will be :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쿼리는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e9404295f927d7ad5d10873b9b9b6f46c629361" translate="yes" xml:space="preserve">
          <source>The solution of @tincot to list all child's:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 자녀를 나열하는 @tincot의 솔루션 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a16be5714781288692be72bb12e230b93057aa17" translate="yes" xml:space="preserve">
          <source>The value specified in &lt;code&gt;parent_id = 19&lt;/code&gt; should be set to the &lt;code&gt;id&lt;/code&gt; of the parent you want to select all the descendants of.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;parent_id = 19&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지정된 값은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 자손을 선택하려는 부모 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 설정해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f07487f6d2811b0df667487d2cf479eea8051df1" translate="yes" xml:space="preserve">
          <source>Then your &lt;code&gt;select&lt;/code&gt; would look like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;select&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bc37dfa2ea170cae674199f02a088a9e10963e8" translate="yes" xml:space="preserve">
          <source>Things become a lot easier if you would assign &lt;code&gt;id&lt;/code&gt; values that contain the hierarchical information: a path. For example, in your case this could look like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계층 적 정보를 포함하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값인 경로를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할당하면 상황이 훨씬 쉬워집니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 귀하의 경우 다음과 같이 보일 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="331534ddc60b194b84b9d29fb5c264bf01aa8406" translate="yes" xml:space="preserve">
          <source>This is know as Modified Preorder Tree Traversal and lets you run a simple query to get all parent values at once. It also goes by the name &quot;nested set&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 Modified Preorder Tree Traversal이라고하며 간단한 쿼리를 실행하여 모든 부모 값을 한 번에 얻을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;nested set&quot;이라는 이름으로도 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2cf088ea5055f1dfc8928d426d7cd55cb4d196a" translate="yes" xml:space="preserve">
          <source>This query uses specific MySQL syntax: variables are assigned and modified during its execution. Some assumptions are made about the order of execution:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 쿼리는 특정 MySQL 구문을 사용합니다. 실행 중에 변수가 할당 및 수정됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행 순서에 대한 몇 가지 가정이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da5a6d4aaace077f35f99e3f5507790c624f58ca" translate="yes" xml:space="preserve">
          <source>This will work also if a parent has &lt;em&gt;multiple&lt;/em&gt; children. However, it is required that each record fulfills the condition &lt;code&gt;parent_id &amp;lt; id&lt;/code&gt;, otherwise the results will not be complete.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부모가 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자녀를 둔 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우에도 작동 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 각 레코드가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent_id &amp;lt; id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 조건을 충족해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 그렇지 않으면 결과가 완료되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d209cf29ab46b58ebe40561303c74d429e73d07c" translate="yes" xml:space="preserve">
          <source>This works for me, hope this will work for you too. It will give you a Record set Root to Child for any Specific Menu. Change the Field name as per your requirements.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 나를 위해 작동합니다, 이것이 당신을 위해 작동하기를 바랍니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 메뉴에 대한 레코드 세트 루트를 하위로 제공합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요구 사항에 따라 필드 이름을 변경하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1da526bde925085c60848f103294a4a0db792a4c" translate="yes" xml:space="preserve">
          <source>Tree&amp;nbsp;and&amp;nbsp;Tree\Node&amp;nbsp;are PHP classes for handling data that is structured hierarchically using parent ID references. A typical example is a table in a relational database where each record&amp;rsquo;s &amp;ldquo;parent&amp;rdquo; field references the primary key of another record. Of course, Tree cannot only use data originating from a database, but anything: you supply the data, and Tree uses it, regardless of where the data came from and how it was processed. &lt;a href=&quot;https://github.com/BlueM/Tree/blob/master/README.markdown&quot;&gt;read more&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tree 및 Tree \ Node는 부모 ID 참조를 사용하여 계층 적으로 구성된 데이터를 처리하기위한 PHP 클래스입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적인 예는 각 레코드의 &quot;부모&quot;필드가 다른 레코드의 기본 키를 참조하는 관계형 데이터베이스의 테이블입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 Tree는 데이터베이스에서 시작된 데이터 만 사용할 수 없으며 데이터가 제공되는 위치와 처리 방법에 관계없이 데이터를 제공하고 Tree가이를 사용합니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/BlueM/Tree/blob/master/README.markdown&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 읽어보기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cf8dcbdc0bfd926ebca3a5335638f862ee1041d" translate="yes" xml:space="preserve">
          <source>Try these:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것들을보십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7dabc3104b9a5b0d2f188ca63319dd09ba1f0bd" translate="yes" xml:space="preserve">
          <source>Use function that determines lineage for specific ID.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 ID의 연계를 결정하는 기능을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a7938c42350c397d4f516ea3c096eb1b9702760" translate="yes" xml:space="preserve">
          <source>Use it as you wish (in selects, or on CUD operations, or even by jobs).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선택, CUD 작업 또는 작업별로 원하는대로 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1b7cb3b8b0dc66687f64c99313b7b486138688d" translate="yes" xml:space="preserve">
          <source>Use lineage to store\sort\trace trees. That's more than enough, and works thousands times faster for reading than any other approach.
It also allows to stay on that pattern even if DB will change(as ANY db will allow that pattern to be used)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;계보를 사용하여 트리를 저장 / 정렬 \ 추적합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 충분하고, 다른 어떤 접근법보다 읽기에 수천 배나 빠르게 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 DB가 변경 되더라도 해당 패턴을 유지할 수 있습니다 (모든 DB에서 해당 패턴을 사용할 수 있기 때문에)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c78f56d43b0a4bb87035f70ceede81e43f8a9fb" translate="yes" xml:space="preserve">
          <source>Variable assignments inside a query</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쿼리 내 변수 할당&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b16ce58957c8fd85c356f226d30d7e6d26b79c3" translate="yes" xml:space="preserve">
          <source>Wrapper function for the stored procedure:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;저장 프로 시저에 대한 랩퍼 기능 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="087c01adb4e0d6a1b7278b2def4c041bb05b26fe" translate="yes" xml:space="preserve">
          <source>You can do it like this in other databases quite easily with a recursive query (YMMV on performance).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;재귀 쿼리 (성능에 대한 YMMV)를 사용하면 다른 데이터베이스에서도 이와 같이 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="495f7224975e7dc2e442f7a009beeb4be776aa87" translate="yes" xml:space="preserve">
          <source>building a function or procedure to split path for retreive ancestors of one item</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 항목의 후퇴 조상을위한 경로를 분할하는 기능 또는 절차 구축&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="72097978d88eb31ea63e5397e4a7bb18f52569a6" translate="yes" xml:space="preserve">
          <source>in your example</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신의 예에서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0afed75e77b22a52dbab394e67cc3e37bef1b6a" translate="yes" xml:space="preserve">
          <source>some like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 것 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3e0d16124df14beec20207008de2845a0e3bf01" translate="yes" xml:space="preserve">
          <source>you might get the results you expect, but this is not guaranteed [...] the order of evaluation for expressions involving user variables is undefined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 당신이 기대하는 결과를 얻을 수 있지만 이것은 보장되지 않습니다 [...] 사용자 변수와 관련된 표현식에 대한 평가 순서는 정의되어 있지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
