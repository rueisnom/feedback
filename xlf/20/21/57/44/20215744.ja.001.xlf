<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/20215744">
    <body>
      <group id="20215744">
        <trans-unit id="b7e2cf995f060f84d394e037243fac4be0c2f42c" translate="yes" xml:space="preserve">
          <source>... with left join:</source>
          <target state="translated">...左に結合しています。</target>
        </trans-unit>
        <trans-unit id="bc4669daf19948c0e06e0c410d61a130f41ce8d9" translate="yes" xml:space="preserve">
          <source>1) create a function that will check if a item is anywhere in the parent hierarchy of another one. Something like this (I will not write the function, make it with WHILE DO) :</source>
          <target state="translated">1)ある項目が他の項目の親階層にあるかどうかをチェックする関数を作る。このような感じで(関数は書きません、WHILE DOで作ります).</target>
        </trans-unit>
        <trans-unit id="091a9a50ae645943409a126262c2a8be84a6b1c7" translate="yes" xml:space="preserve">
          <source>2) use a sub-select , something like this:</source>
          <target state="translated">2)サブセレクト、このようなものを使用します。</target>
        </trans-unit>
        <trans-unit id="b23ccfdfd86377f2973d1a0a1289df8e6a08fbd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Output::&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Output::&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e021e8096db3c4f40241955870ff1f94ba900d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;EDIT:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c0f1eb761e0b0cd9b20b1c18d18c657d4734780" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;: See the question &lt;a href=&quot;https://stackoverflow.com/questions/4048151/what-are-the-options-for-storing-hierarchical-data-in-a-relational-database&quot;&gt;What are the options for storing hierarchical data in a relational database?&lt;/a&gt; for more options. There are different optimal solutions for different situations.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4048151/what-are-the-options-for-storing-hierarchical-data-in-a-relational-database&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リレーショナルデータベースに階層データを保存するためのオプションは何ですか？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の質問を参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より多くのオプションについて。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;状況に応じて最適なソリューションは異なります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69643d56145ce04634714be2f7b84ba7974fbb5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optimise the path length and &lt;code&gt;ORDER BY path&lt;/code&gt; using base36 encoding instead real numeric path id&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際の数値パスIDの代わりにbase36エンコーディングを使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;てパス長と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ORDER BY path&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を最適化します&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a4c9189a63c20797d6bbd8ceac0ab7a40e16058" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TODO&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TODO&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f74465adc66cec924b29ff9c635d9484c7f28ce6" translate="yes" xml:space="preserve">
          <source>All in all, one may find these assumptions too risky to rely on. The &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/user-variables.html&quot;&gt;documentation&lt;/a&gt; warns:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;全体として、これらの仮定は信頼できないほど信頼できない場合があります。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/user-variables.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントは&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;警告しています：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5477dd17ce303b99fb49b1f9d98f3bc516de7abd" translate="yes" xml:space="preserve">
          <source>Also, I already have the solution using the for loop..... Let me know how to achieve the same using a single MySQL query if possible.</source>
          <target state="translated">また、私はすでにforループを使用して解決策を持っています...。可能であれば、単一のMySQLクエリを使用して同じことを実現する方法を教えてください。</target>
        </trans-unit>
        <trans-unit id="6d76bf049c5159585ba6892ca92b85a1a2547b5a" translate="yes" xml:space="preserve">
          <source>Alternative 1: &lt;code&gt;with recursive&lt;/code&gt;, &lt;code&gt;connect by&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代替1：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;with recursive&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;connect by&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84f643890c9617f44cf83faef6e8b68f595275e5" translate="yes" xml:space="preserve">
          <source>Alternative 2: Path-style Identifiers</source>
          <target state="translated">代替案2:パススタイル識別子</target>
        </trans-unit>
        <trans-unit id="4c799f0a9a6799a0ca45e9a9ed17d104e3215ea6" translate="yes" xml:space="preserve">
          <source>Alternative 3: Repeated Self-joins</source>
          <target state="translated">選択肢3:繰り返しの自己接合</target>
        </trans-unit>
        <trans-unit id="9b91579c1eb8f7403daa277fe963be94220a61fe" translate="yes" xml:space="preserve">
          <source>And then you just</source>
          <target state="translated">そして、あなたは</target>
        </trans-unit>
        <trans-unit id="2d5f3cb3c67b77b6dc383da3890415186eb71978" translate="yes" xml:space="preserve">
          <source>As stated above, from MySQL 8.0 onward you should use the recursive &lt;code&gt;with&lt;/code&gt; syntax.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のように、MySQL 8.0以降では、再帰的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する必要&lt;/font&gt;&lt;/font&gt; &lt;code&gt;with&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6532f5123aa8c4e010415d21f455fafecb24246" translate="yes" xml:space="preserve">
          <source>Detailed optimization explanation here:
&lt;a href=&quot;https://bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&quot;&gt;https://bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細な最適化の説明はこちら：&lt;/font&gt;&lt;a href=&quot;https://bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//bojanz.wordpress.com/2014/04/25/storing-hierarchical-data-materialized-path/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4271430c0da02e9550544f7c14090490db247a8" translate="yes" xml:space="preserve">
          <source>Did the same thing for another quetion here</source>
          <target state="translated">ここの別の質問にも同じことをしました。</target>
        </trans-unit>
        <trans-unit id="12c4ffe1d987164a4bedf6ab2aac597a113e181c" translate="yes" xml:space="preserve">
          <source>Efficiency</source>
          <target state="translated">Efficiency</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="e791a8ba10bc9d624a3006f0b25f85b8e853dcd0" translate="yes" xml:space="preserve">
          <source>Experimental rows:</source>
          <target state="translated">実験畝。</target>
        </trans-unit>
        <trans-unit id="6c11f943153b46cca92e6f29e7eb195d71c816d4" translate="yes" xml:space="preserve">
          <source>Filtering rows with certain path:</source>
          <target state="translated">特定のパスで行をフィルタリングします。</target>
        </trans-unit>
        <trans-unit id="5d9e82d860a6af0143337e46021b18acd4c3c99c" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;MySQL 5.x:&lt;/strong&gt; use inline variables, path IDs, or self-joins.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のため&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のMySQL 5.xの：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用のインライン変数、パスID、または自己結合します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="611510b632472f7370b4ed8326b40e81c5ecaec9" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;MySQL 8+:&lt;/strong&gt; use the recursive &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; syntax.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のための&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLの8+：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再帰を使用し&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6384aba0f85c45cc05ec0f2766a6aff248a4a5c8" translate="yes" xml:space="preserve">
          <source>For MySQL versions that do not support Common Table Expressions (up to version 5.7), you would achieve this with the following query:</source>
          <target state="translated">共通テーブル式をサポートしていないMySQLのバージョン(バージョン5.7まで)では、以下のクエリを使用してこれを実現します。</target>
        </trans-unit>
        <trans-unit id="57083a262292cf5018db199c2d4c981d5c5c6cb3" translate="yes" xml:space="preserve">
          <source>For very large data sets this solution might get slow, as the &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_find-in-set&quot;&gt;&lt;code&gt;find_in_set&lt;/code&gt;&lt;/a&gt; operation is not the most ideal way to find a number in a list, certainly not in a list that reaches a size in the same order of magnitude as the number of records returned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常に大きなデータセットの場合、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_find-in-set&quot;&gt; &lt;code&gt;find_in_set&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;操作はリスト内の数値を検索する最も理想的な方法ではなく、返されるレコード数と同じ桁のサイズに達するリスト内ではない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、このソリューションは遅くなる可能性があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="303d1a56d21aa538e677a633db6beefa41d5e2db" translate="yes" xml:space="preserve">
          <source>From the blog &lt;strong&gt;&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot;&gt;Managing Hierarchical Data in MySQL&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLで階層データを管理&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するブログから&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f13807ec4314af6740a5c8890da78c2440b0595" translate="yes" xml:space="preserve">
          <source>Function's body</source>
          <target state="translated">機能の本体</target>
        </trans-unit>
        <trans-unit id="1c64007022d5a6b7fc56b70c6872d834daf7afeb" translate="yes" xml:space="preserve">
          <source>Here is a &lt;a href=&quot;http://sqlfiddle.com/#!9/b4f997/3&quot;&gt;fiddle&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こちらが&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/b4f997/3&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィドル&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="daa66a8a369d04a26401fa838b5e654cb97763bd" translate="yes" xml:space="preserve">
          <source>Here is a &lt;a href=&quot;http://sqlfiddle.com/#!9/d74210/1&quot;&gt;fiddle&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こちらが&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/d74210/1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィドル&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3adf0ede9578f08877a8740425d4c6d29f5113e" translate="yes" xml:space="preserve">
          <source>Here is an example of using BlueM/tree:</source>
          <target state="translated">BlueMtreeの使用例です。</target>
        </trans-unit>
        <trans-unit id="9fa3c285d644a4ebf6a9ae4abbdae1b6a5e4cda5" translate="yes" xml:space="preserve">
          <source>Here, the value specified in &lt;code&gt;@pv := '19'&lt;/code&gt; should be set to the &lt;code&gt;id&lt;/code&gt; of the parent you want to select all the descendants of.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@pv := '19'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指定された値は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての子孫を選択する親&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定する必要が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="103ab8290f89ceeb39a65db4903ffbe55a437dad" translate="yes" xml:space="preserve">
          <source>Hope it helps somebody :)</source>
          <target state="translated">誰かの役に立てるといいのですが :)</target>
        </trans-unit>
        <trans-unit id="b177c2ce1f6663820887513ddcce00c2844511ad" translate="yes" xml:space="preserve">
          <source>How to create a MySQL hierarchical recursive query</source>
          <target state="translated">MySQLの階層型再帰クエリを作成する方法</target>
        </trans-unit>
        <trans-unit id="7ef21ad37e7da788e87fe5304f1bf40dd151c848" translate="yes" xml:space="preserve">
          <source>I found it more easily to :</source>
          <target state="translated">私はそれをより簡単に見つけることができました。</target>
        </trans-unit>
        <trans-unit id="d6ecd79fcd0029002938355b1e32a5c7c01db155" translate="yes" xml:space="preserve">
          <source>I have a MySQL table which is as follows:</source>
          <target state="translated">私が持っているMySQLのテーブルは以下のようになっています。</target>
        </trans-unit>
        <trans-unit id="39a33003c9ba672464407a38f7681a84143cfd10" translate="yes" xml:space="preserve">
          <source>I have made a query for you. This will give you Recursive Category with a Single Query:</source>
          <target state="translated">私はあなたのためにクエリを作りました。これで、単一のクエリで再帰的なカテゴリが得られます。</target>
        </trans-unit>
        <trans-unit id="e61929951c25a4914351d05b2e5170acfec79520" translate="yes" xml:space="preserve">
          <source>If you know an upper limit for how deep your hierarchy tree can become, you can use a standard &lt;code&gt;sql&lt;/code&gt; query like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;階層ツリーの深さの上限がわかっている場合は、次の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;標準の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sql&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クエリを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6547c17bc8fba05db61716dc1c7368e05bc00a8f" translate="yes" xml:space="preserve">
          <source>If you need quick read speed, the best option is to use a closure table. A closure table contains a row for each ancestor/descendant pair. So in your example, the closure table would look like</source>
          <target state="translated">素早い読み取り速度が必要な場合は、クロージャ・テーブルを使用するのが最良の方法です。クロージャ・テーブルには、各先祖代々のペアの行が含まれています。ですから、あなたの例では、クロージャ・テーブルは次のようになります。</target>
        </trans-unit>
        <trans-unit id="251f62f0d5ace2a6d7c138ce194fe4f13f6ea999" translate="yes" xml:space="preserve">
          <source>In the end - got more-or-less simple, relatively fast, and SIMPLE solution.</source>
          <target state="translated">最後に-多かれ少なかれシンプルで、比較的高速で、シンプルな解決策を得た。</target>
        </trans-unit>
        <trans-unit id="2545c26c702b94a515fc6db07a06ee528d06ef05" translate="yes" xml:space="preserve">
          <source>It's a &lt;strong&gt;category&lt;/strong&gt; table.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;カテゴリ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テーブルです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35bc5df1bb85024e2a396f8bacd7c3ade5bc5a85" translate="yes" xml:space="preserve">
          <source>Its a little tricky one, check this whether it is working for you</source>
          <target state="translated">その少しトリッキーな1つは、それがあなたのために働いているかどうかこれを確認してください</target>
        </trans-unit>
        <trans-unit id="9ef16fd9e098fe1b1f4b6df0d566974497a09113" translate="yes" xml:space="preserve">
          <source>Just use &lt;a href=&quot;https://github.com/BlueM/Tree&quot;&gt;BlueM/tree&lt;/a&gt; php class for make tree of a self-relation table in mysql.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mysqlの自己関係テーブルのツリーを作成するには、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/BlueM/Tree&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BlueM / tree&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; phpクラスを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用するだけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5c4cb263b1243695f037e34d15166192d25d068" translate="yes" xml:space="preserve">
          <source>Lineage approach descr. can be found wherever, for example
&lt;a href=&quot;http://ferdychristant.com/blog/archive/DOMM-7QJPM7&quot;&gt;Here&lt;/a&gt; or &lt;a href=&quot;https://dba.stackexchange.com/questions/30021/mysql-tree-hierarchical-query&quot;&gt;here&lt;/a&gt;.
As of function - &lt;a href=&quot;https://stackoverflow.com/questions/12948009/finding-all-parents-in-mysql-table-with-single-query&quot;&gt;that&lt;/a&gt; is what enspired me.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;系統アプローチ記述子。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どこでも見つけることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ferdychristant.com/blog/archive/DOMM-7QJPM7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dba.stackexchange.com/questions/30021/mysql-tree-hierarchical-query&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能に関しては- &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12948009/finding-all-parents-in-mysql-table-with-single-query&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が私に影響を与えたものです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e90fbcce23a97315476207d7186f6d342adc2d3" translate="yes" xml:space="preserve">
          <source>More and more databases implement the &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL:1999#Common_table_expressions_and_recursive_queries&quot;&gt;SQL:1999 ISO standard &lt;code&gt;WITH [RECURSIVE]&lt;/code&gt; syntax&lt;/a&gt; for recursive queries (e.g. &lt;a href=&quot;http://www.postgresql.org/docs/8.4/static/queries-with.html&quot;&gt;Postgres 8.4+&lt;/a&gt;, &lt;a href=&quot;https://technet.microsoft.com/en-us/library/ms186243%28v=sql.105%29.aspx&quot;&gt;SQL Server 2005+&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot;&gt;DB2&lt;/a&gt;, &lt;a href=&quot;https://docs.oracle.com/cloud/latest/db112/SQLRF/statements_10002.htm#sthref6733&quot;&gt;Oracle 11gR2+&lt;/a&gt;, &lt;a href=&quot;https://www.sqlite.org/lang_with.html&quot;&gt;SQLite 3.8.4+&lt;/a&gt;, &lt;a href=&quot;https://firebirdsql.org/refdocs/langrefupd21-select.html#langrefupd21-select-cte&quot;&gt;Firebird 2.1+&lt;/a&gt;, &lt;a href=&quot;http://www.h2database.com/html/advanced.html#recursive_queries&quot;&gt;H2&lt;/a&gt;, &lt;a href=&quot;http://www.hsqldb.org/doc/guide/dataaccess-chapt.html#dac_with_clause&quot;&gt;HyperSQL 2.1.0+&lt;/a&gt;, &lt;a href=&quot;http://www.info.teradata.com/htmlpubs/DB_TTU_14_00/index.html#page/SQL_Reference/B035_1146_111A/ch01.032.066.html&quot;&gt;Teradata&lt;/a&gt;, &lt;a href=&quot;https://mariadb.com/kb/en/mariadb/with/&quot;&gt;MariaDB 10.2.2+&lt;/a&gt;). And as of &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot;&gt;version 8.0, also MySQL supports it&lt;/a&gt;. See the top of this answer for the syntax to use.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より多くのデータベースを実装&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/SQL:1999#Common_table_expressions_and_recursive_queries&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1999 ISO標準：SQL &lt;/font&gt;&lt;/font&gt; &lt;code&gt;WITH [RECURSIVE]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再帰クエリ（例えばため&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.postgresql.org/docs/8.4/static/queries-with.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のPostgres 8.4+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/ms186243%28v=sql.105%29.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQL Serverの2005+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DB2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/cloud/latest/db112/SQLRF/statements_10002.htm#sthref6733&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Oracleの11gR2の+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.sqlite.org/lang_with.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLiteの3.8.4+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://firebirdsql.org/refdocs/langrefupd21-select.html#langrefupd21-select-cte&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firebirdの2.1+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.h2database.com/html/advanced.html#recursive_queries&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;H2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.hsqldb.org/doc/guide/dataaccess-chapt.html#dac_with_clause&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HyperSQL 2.1。 0+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.info.teradata.com/htmlpubs/DB_TTU_14_00/index.html#page/SQL_Reference/B035_1146_111A/ch01.032.066.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Teradataの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://mariadb.com/kb/en/mariadb/with/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MariaDB 10.2.2+&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。また、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/with.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バージョン8.0以降、MySQLでもサポートされてい&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。使用する構文については、この回答の上部を参照してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b465fea6fefc20703fcd0184ebc321a00bd3a113" translate="yes" xml:space="preserve">
          <source>Most users at one time or another have dealt with hierarchical data in a SQL database and no doubt learned that the management of hierarchical data is not what a relational database is intended for. The tables of a relational database are not hierarchical (like XML), but are simply a flat list. Hierarchical data has a parent-child relationship that is not naturally represented in a relational database table.
&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどのユーザーは一度にSQLデータベースの階層データを扱ってきましたが、階層データの管理がリレーショナルデータベースの目的ではないことは間違いありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リレーショナルデータベースのテーブルは（XMLのように）階層的ではなく、単なるフラットなリストです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;階層データには親子関係があり、リレーショナルデータベーステーブルでは本来表現されません。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://web.archive.org/web/20181221162916/http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;続きを読む&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09cd315d1d974b6e62f2e487a3710c1369ca5cd2" translate="yes" xml:space="preserve">
          <source>MySQL 5.x</source>
          <target state="translated">MySQL 5.x</target>
        </trans-unit>
        <trans-unit id="cd1b6a94e3bb3fbcc8076cb58c957eb3ca8285ef" translate="yes" xml:space="preserve">
          <source>MySQL 8+</source>
          <target state="translated">MySQL 8以上</target>
        </trans-unit>
        <trans-unit id="8868b635a449c1e80fa6338977b9c17cfdf3837d" translate="yes" xml:space="preserve">
          <source>MySQL version 5.7 does not offer such a feature. When your database engine provides this syntax or you can migrate to one that does, then that is certainly the best option to go for. If not, then also consider the following alternatives.</source>
          <target state="translated">MySQL バージョン 5.7 では、このような機能は提供されていません。お使いのデータベースエンジンがこの構文を提供しているか、または提供しているものに移行できる場合は、それが最良の選択肢となります。そうでない場合は、以下の選択肢も検討してみてください。</target>
        </trans-unit>
        <trans-unit id="bbdba033b95c55501c21297ab7e064d71b51af4c" translate="yes" xml:space="preserve">
          <source>Mysql select recursive get all child with multiple level</source>
          <target state="translated">MySQLは再帰的に複数のレベルのすべての子を取得する選択します。</target>
        </trans-unit>
        <trans-unit id="896218529adc761114a6949ee91c45d338e4bc57" translate="yes" xml:space="preserve">
          <source>Now, I want to have a single MySQL query to which I simply supply the id [for instance say 'id = 19'] then I should get all its child ids [i.e. result should have ids '20,21,22']....
Also, the hierarchy of the children is not known it can vary....</source>
          <target state="translated">さて、私は単一のMySQLクエリを持ちたいと思っていますが、そのクエリには単にIDを入力して[例えば'id=19'とします]、その子のIDをすべて取得する必要があります[すなわち、結果にはID '20,21,22'が含まれているはずです]。また、子の階層がわからないので、変化する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6fd1f2668320840a07a37e9fdddebabe466d1961" translate="yes" xml:space="preserve">
          <source>Of course, there is a big downside whenever you use denormalized data like this. You need to maintain the closure table alongside your categories table. The best way is probably to use triggers, but it is somewhat complex to correctly track inserts/updates/deletes for closure tables. As with anything, you need to look at your requirements and decide what approach is best for you.</source>
          <target state="translated">もちろん、このように非正規化されたデータを使用する場合には、大きな欠点があります。クロージャ・テーブルをカテゴリ・テーブルと並べて管理する必要があります。最良の方法は、おそらくトリガーを使用することですが、クロージャ・テーブルのinsertsupdatesdeletesを正しく追跡するのはやや複雑です。何事もそうですが、要件を見て、どのアプローチが最適かを決める必要があります。</target>
        </trans-unit>
        <trans-unit id="fea0a9f83ce8dd5b7908d6f6102014da790bf083" translate="yes" xml:space="preserve">
          <source>Once you have this table, hierarchical queries become very easy and fast. To get all the descendants of category 20:</source>
          <target state="translated">このテーブルを持っていると、階層的なクエリは非常に簡単で高速になります。カテゴリ20のすべての子孫を取得するには</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="3ea1f8834714c0d6fdaed95d92d27bd0bb5a161b" translate="yes" xml:space="preserve">
          <source>Previous releases of MySQL made it possible to assign a value to a user variable in statements other than &lt;code&gt;SET&lt;/code&gt;. This functionality is supported in MySQL 8.0 for backward compatibility but is subject to removal in a future release of MySQL.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLの以前のリリースでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SET&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以外のステートメントでユーザー変数に値を割り当てることが可能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この機能は、下位互換性のためにMySQL 8.0でサポートされていますが、MySQLの将来のリリースでは削除される可能性があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c1822344bdf8633591dc55296427e00c5285fa8" translate="yes" xml:space="preserve">
          <source>Query:</source>
          <target state="translated">Query:</target>
        </trans-unit>
        <trans-unit id="2bc99338935ecf4308f7c616ced83eb8b692358e" translate="yes" xml:space="preserve">
          <source>Recursive Stored procedure:</source>
          <target state="translated">再帰的なストアドプロシージャ。</target>
        </trans-unit>
        <trans-unit id="6783b8280f73174e0613c23de9ae067d24cf527f" translate="yes" xml:space="preserve">
          <source>Refer the blog for more details.</source>
          <target state="translated">詳しくはブログを参照してください。</target>
        </trans-unit>
        <trans-unit id="e751dbd9b50dcba4180a9ef66715a0e09620c46c" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://stackoverflow.com/questions/16513418/how-to-do-the-recursive-select-query-in-mysql&quot;&gt;How to do the Recursive SELECT query in Mysql?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/16513418/how-to-do-the-recursive-select-query-in-mysql&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mysqlで再帰的なSELECTクエリを行う方法？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38ef9f5b93bbc3e1070283e723373d1275638357" translate="yes" xml:space="preserve">
          <source>Replace with your field and table name appropriately.</source>
          <target state="translated">自分のフィールドやテーブル名を適切に置き換えてください。</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="ddc2d3f0b5808a9206edbb3146b90c4956b4e66c" translate="yes" xml:space="preserve">
          <source>SQL fiddle link &lt;a href=&quot;http://www.sqlfiddle.com/#!2/e3cdf/2&quot;&gt;http://www.sqlfiddle.com/#!2/e3cdf/2&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SQLフィドルリンク&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.sqlfiddle.com/#!2/e3cdf/2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.sqlfiddle.com/#!2/e3cdf/2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="479149be3ecb7aa4351d188d4d6ddbe0bc854a26" translate="yes" xml:space="preserve">
          <source>See this &lt;a href=&quot;http://sqlfiddle.com/#!9/5de2a/46&quot;&gt;fiddle&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/5de2a/46&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィドルを&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見る&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b191e0722a59e0bc08a6c015ba68517e511303a8" translate="yes" xml:space="preserve">
          <source>Select example:</source>
          <target state="translated">例を選択します。</target>
        </trans-unit>
        <trans-unit id="0dbeacad6e10bb50e106867fb424804324f5257a" translate="yes" xml:space="preserve">
          <source>Simple query to list child's of first recursion:</source>
          <target state="translated">最初の再帰の子をリストアップする簡単なクエリです。</target>
        </trans-unit>
        <trans-unit id="3974149b0b60d0e3915d1f7ac4eacb82d88ed74f" translate="yes" xml:space="preserve">
          <source>So even though it works consistently with the above query, the evaluation order may still change, for instance when you add conditions or use this query as a view or sub-query in a larger query. It is a &quot;feature&quot; that &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/user-variables.html&quot;&gt;will be removed in a future MySQL release&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、上記のクエリと一貫して動作しますが、たとえば条件を追加したり、このクエリをより大きなクエリのビューまたはサブクエリとして使用したりすると、評価順序が変更される可能性があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/user-variables.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将来のMySQLリリースで削除される&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「機能」です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1bc092a320c00fe0119e4963c25c91ab2648364" translate="yes" xml:space="preserve">
          <source>Some databases have an alternative, non-standard syntax for hierarchical look-ups, such as the &lt;code&gt;CONNECT BY&lt;/code&gt; clause available on &lt;a href=&quot;https://docs.oracle.com/cd/B19306_01/server.102/b14200/queries003.htm&quot;&gt;Oracle&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot;&gt;DB2&lt;/a&gt;, &lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/en/SSGU8G_12.1.0/com.ibm.sqls.doc/ids_sqs_2035.htm&quot;&gt;Informix&lt;/a&gt;, &lt;a href=&quot;https://www.cubrid.org/manual/en/10.0/sql/query/hq.html&quot;&gt;CUBRID&lt;/a&gt; and other databases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一部のデータベースには、&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/cd/B19306_01/server.102/b14200/queries003.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Oracle&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/ibmi/library/i-db2connectby/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DB2&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;a href=&quot;https://www.ibm.com/support/knowledgecenter/en/SSGU8G_12.1.0/com.ibm.sqls.doc/ids_sqs_2035.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Informix&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;a href=&quot;https://www.cubrid.org/manual/en/10.0/sql/query/hq.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CUBRID&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その他のデータベースで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;利用可能な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CONNECT BY&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;句&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など、階層ルックアップ用の代替の非標準構文が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26947e1fc07b1b3f990926e0a985cbb5e78aa8af" translate="yes" xml:space="preserve">
          <source>Something not mentioned here, although a bit similar to the second alternative of the accepted answer but different and low cost for big hierarchy query and easy (insert update delete) items, would be  adding a persistent path  column for each item.</source>
          <target state="translated">ここでは触れられていませんが、受け入れられた回答の2番目の代替案に少し似ていますが、大きな階層のクエリと簡単な(挿入・更新・削除)項目のために、異なる低コストで、各項目の永続パスカラムを追加することになります。</target>
        </trans-unit>
        <trans-unit id="56f59e348bb1fa58e62f7df4bd2bfe907170b02f" translate="yes" xml:space="preserve">
          <source>Suppressing also the slash '/' separator by using fixed length and padding to the encoded id</source>
          <target state="translated">符号化されたidに固定長とパディングを使用することで、スラッシュ''セパレータも抑制します。</target>
        </trans-unit>
        <trans-unit id="aac1deb9db82b6cd6275b2705e677dce51d2057e" translate="yes" xml:space="preserve">
          <source>Table definition:</source>
          <target state="translated">テーブルの定義。</target>
        </trans-unit>
        <trans-unit id="261e19cd4c00462ee4c72a1d1518d0962048f879" translate="yes" xml:space="preserve">
          <source>Table structure</source>
          <target state="translated">テーブル構造</target>
        </trans-unit>
        <trans-unit id="f4d63d7bc6b4ac2c5617fc5ec1bfe5252f32f899" translate="yes" xml:space="preserve">
          <source>Test it online with &lt;a href=&quot;http://sqlfiddle.com/#!9/a318e3/4/0&quot;&gt;Sql Fiddle&lt;/a&gt; and see all results.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://sqlfiddle.com/#!9/a318e3/4/0&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sql Fiddle&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してオンラインでテストし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、すべての結果を確認してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3522e21b699bf4af9b0d8d97c777880a17f0346e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;from&lt;/code&gt; clause is evaluated first. So that is where &lt;code&gt;@pv&lt;/code&gt; gets initialised.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;from&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;句が最初に評価されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そこで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@pv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が初期化されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75127c8ae86210d69079f5e9485683fefc44c7ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; clause is evaluated for each record in the order of retrieval from the &lt;code&gt;from&lt;/code&gt; aliases. So this is where a condition is put to only include records for which the parent was already identified as being in the descendant tree (all descendants of the primary parent are progressively added to &lt;code&gt;@pv&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;where&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;句はから検索のために、各レコードについて評価される&lt;/font&gt;&lt;/font&gt; &lt;code&gt;from&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エイリアス。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、ここでは、子孫ツリーにあると親が既に識別されているレコードのみが含まれるように条件が設定されます（プライマリ親のすべての子孫が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@pv&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;徐々に追加され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="07c1bc852d4515012332a55ed60635472b661a8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; condition specifies which parent you want to retrieve the descendants of. You can extend this query with more levels as needed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;where&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたがの子孫を取得したい親の条件を指定します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要に応じて、このクエリをより多くのレベルで拡張できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94411603a318589131454c17f8d6834890d2b862" translate="yes" xml:space="preserve">
          <source>The best approach I've come up with is</source>
          <target state="translated">私が思いついたベストなアプローチは</target>
        </trans-unit>
        <trans-unit id="d3c24ebc8dacde720b6360e6449745f077296ccc" translate="yes" xml:space="preserve">
          <source>The conditions in this &lt;code&gt;where&lt;/code&gt; clause are evaluated in order, and the evaluation is interrupted once the total outcome is certain. Therefore the second condition must be in second place, as it adds the &lt;code&gt;id&lt;/code&gt; to the parent list, and this should only happen if the &lt;code&gt;id&lt;/code&gt; passes the first condition. The &lt;code&gt;length&lt;/code&gt; function is only called to make sure this condition is always true, even if the &lt;code&gt;pv&lt;/code&gt; string would for some reason yield a falsy value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt; &lt;code&gt;where&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;句&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の条件は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;順番に評価され、全体の結果が確定すると評価は中断されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、2番目の条件は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を親リスト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に追加するため、2番目の条件にする必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が最初の条件を通過した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合にのみ発生し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能のみを確認してください、この条件があっても、常に真であることを確認するために呼び出され&lt;/font&gt;&lt;/font&gt; &lt;code&gt;pv&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列が何らかの理由でfalsy値をもたらすであろう。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2b8364d89bae3d7eb4a42ba260d163dd89e3ed2" translate="yes" xml:space="preserve">
          <source>The other way to do it is to store two extra bits of data, a left and right value. The left and right value are derived from a pre-order traversal of the tree structure you're representing.</source>
          <target state="translated">もう一つの方法は、左と右の値という2つの余分なデータを格納することです。左と右の値は、あなたが表現しているツリー構造のプレオーダートラバーサルから導き出されます。</target>
        </trans-unit>
        <trans-unit id="76db8ee2809916c0b2b2a7d652ec5c679894bf7b" translate="yes" xml:space="preserve">
          <source>The query will be :</source>
          <target state="translated">クエリは .</target>
        </trans-unit>
        <trans-unit id="5e9404295f927d7ad5d10873b9b9b6f46c629361" translate="yes" xml:space="preserve">
          <source>The solution of @tincot to list all child's:</source>
          <target state="translated">子供のものを全てリストアップする@tincotさんの解決策。</target>
        </trans-unit>
        <trans-unit id="a16be5714781288692be72bb12e230b93057aa17" translate="yes" xml:space="preserve">
          <source>The value specified in &lt;code&gt;parent_id = 19&lt;/code&gt; should be set to the &lt;code&gt;id&lt;/code&gt; of the parent you want to select all the descendants of.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;parent_id = 19&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指定された値は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての子孫を選択する親&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定する必要が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f07487f6d2811b0df667487d2cf479eea8051df1" translate="yes" xml:space="preserve">
          <source>Then your &lt;code&gt;select&lt;/code&gt; would look like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;select&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は次のようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bc37dfa2ea170cae674199f02a088a9e10963e8" translate="yes" xml:space="preserve">
          <source>Things become a lot easier if you would assign &lt;code&gt;id&lt;/code&gt; values that contain the hierarchical information: a path. For example, in your case this could look like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;階層情報を含む&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値、つまりパス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を割り当てると、物事はずっと簡単になり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、あなたの場合、これは次のようになります：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="331534ddc60b194b84b9d29fb5c264bf01aa8406" translate="yes" xml:space="preserve">
          <source>This is know as Modified Preorder Tree Traversal and lets you run a simple query to get all parent values at once. It also goes by the name &quot;nested set&quot;.</source>
          <target state="translated">これは Modified Preorder Tree Traversal として知られており、簡単なクエリを実行して、すべての親の値を一度に取得することができます。これは、「入れ子になったセット」という名前でも知られています。</target>
        </trans-unit>
        <trans-unit id="a2cf088ea5055f1dfc8928d426d7cd55cb4d196a" translate="yes" xml:space="preserve">
          <source>This query uses specific MySQL syntax: variables are assigned and modified during its execution. Some assumptions are made about the order of execution:</source>
          <target state="translated">このクエリは特定のMySQL構文を使用しています。実行順序については、いくつかの仮定がなされています。</target>
        </trans-unit>
        <trans-unit id="da5a6d4aaace077f35f99e3f5507790c624f58ca" translate="yes" xml:space="preserve">
          <source>This will work also if a parent has &lt;em&gt;multiple&lt;/em&gt; children. However, it is required that each record fulfills the condition &lt;code&gt;parent_id &amp;lt; id&lt;/code&gt;, otherwise the results will not be complete.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、親が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;複数の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持つ場合にも機能し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、各レコードは条件&lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent_id &amp;lt; id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を満たす必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります。そうでない場合、結果は完全ではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d209cf29ab46b58ebe40561303c74d429e73d07c" translate="yes" xml:space="preserve">
          <source>This works for me, hope this will work for you too. It will give you a Record set Root to Child for any Specific Menu. Change the Field name as per your requirements.</source>
          <target state="translated">これは私のために動作します。これは、任意の特定のメニューのためのレコードセットのルートから子へのルートを与えます。必要に応じてフィールド名を変更してください。</target>
        </trans-unit>
        <trans-unit id="1da526bde925085c60848f103294a4a0db792a4c" translate="yes" xml:space="preserve">
          <source>Tree&amp;nbsp;and&amp;nbsp;Tree\Node&amp;nbsp;are PHP classes for handling data that is structured hierarchically using parent ID references. A typical example is a table in a relational database where each record&amp;rsquo;s &amp;ldquo;parent&amp;rdquo; field references the primary key of another record. Of course, Tree cannot only use data originating from a database, but anything: you supply the data, and Tree uses it, regardless of where the data came from and how it was processed. &lt;a href=&quot;https://github.com/BlueM/Tree/blob/master/README.markdown&quot;&gt;read more&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TreeおよびTree \ Nodeは、親ID参照を使用して階層的に構造化されたデータを処理するためのPHPクラスです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;典型的な例は、各レコードの「親」フィールドが別のレコードの主キーを参照するリレーショナルデータベースのテーブルです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もちろん、Treeはデータベースからのデータだけでなく、何でも使用できます。データをどこから取得し、どのように処理したかに関係なく、ユーザーがデータを提供し、Treeがそれを使用します。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/BlueM/Tree/blob/master/README.markdown&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;続きを読む&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cf8dcbdc0bfd926ebca3a5335638f862ee1041d" translate="yes" xml:space="preserve">
          <source>Try these:</source>
          <target state="translated">これを試してみてください。</target>
        </trans-unit>
        <trans-unit id="b7dabc3104b9a5b0d2f188ca63319dd09ba1f0bd" translate="yes" xml:space="preserve">
          <source>Use function that determines lineage for specific ID.</source>
          <target state="translated">特定のIDの系統を決定する関数を使用します。</target>
        </trans-unit>
        <trans-unit id="9a7938c42350c397d4f516ea3c096eb1b9702760" translate="yes" xml:space="preserve">
          <source>Use it as you wish (in selects, or on CUD operations, or even by jobs).</source>
          <target state="translated">お好きなようにお使いください(セレクトでも、CUD操作でも、ジョブ別でも)。</target>
        </trans-unit>
        <trans-unit id="a1b7cb3b8b0dc66687f64c99313b7b486138688d" translate="yes" xml:space="preserve">
          <source>Use lineage to store\sort\trace trees. That's more than enough, and works thousands times faster for reading than any other approach.
It also allows to stay on that pattern even if DB will change(as ANY db will allow that pattern to be used)</source>
          <target state="translated">lineageを使って木を保存してください。これだけで十分だし、他のアプローチよりも何千倍も速く読める。また、DBが変わっても、そのパターンを維持することができます(どのDBでもそのパターンを使うことができます)。</target>
        </trans-unit>
        <trans-unit id="6c78f56d43b0a4bb87035f70ceede81e43f8a9fb" translate="yes" xml:space="preserve">
          <source>Variable assignments inside a query</source>
          <target state="translated">クエリ内の変数の代入</target>
        </trans-unit>
        <trans-unit id="7b16ce58957c8fd85c356f226d30d7e6d26b79c3" translate="yes" xml:space="preserve">
          <source>Wrapper function for the stored procedure:</source>
          <target state="translated">ストアドプロシージャのラッパー機能</target>
        </trans-unit>
        <trans-unit id="087c01adb4e0d6a1b7278b2def4c041bb05b26fe" translate="yes" xml:space="preserve">
          <source>You can do it like this in other databases quite easily with a recursive query (YMMV on performance).</source>
          <target state="translated">他のデータベースではこのように再帰的なクエリでかなり簡単に行うことができます(パフォーマンス上のYMMV)。</target>
        </trans-unit>
        <trans-unit id="495f7224975e7dc2e442f7a009beeb4be776aa87" translate="yes" xml:space="preserve">
          <source>building a function or procedure to split path for retreive ancestors of one item</source>
          <target state="translated">祖先分割機能</target>
        </trans-unit>
        <trans-unit id="72097978d88eb31ea63e5397e4a7bb18f52569a6" translate="yes" xml:space="preserve">
          <source>in your example</source>
          <target state="translated">あなたの例では</target>
        </trans-unit>
        <trans-unit id="a0afed75e77b22a52dbab394e67cc3e37bef1b6a" translate="yes" xml:space="preserve">
          <source>some like:</source>
          <target state="translated">のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="b3e0d16124df14beec20207008de2845a0e3bf01" translate="yes" xml:space="preserve">
          <source>you might get the results you expect, but this is not guaranteed [...] the order of evaluation for expressions involving user variables is undefined.</source>
          <target state="translated">期待通りの結果が得られるかもしれませんが、これは保証されていません [...]ユーザー変数を含む式の評価順序は未定義です。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
