<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/2091465">
    <body>
      <group id="2091465">
        <trans-unit id="eace538f61f4330b00f11561afaebe804172f96b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporSharedPreferences.java&quot;&gt;&lt;code&gt;VaporSharedPreferences&lt;/code&gt;&lt;/a&gt; is implemented as Singleton so that is one option, and in Vapor API it has a heavily overloaded &lt;code&gt;.put(...)&lt;/code&gt; method so you don't have to explicitly worry about the datatype you are committing - providing it is supported. It is also fluent, so you can chain calls:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporSharedPreferences.java&quot;&gt; &lt;code&gt;VaporSharedPreferences&lt;/code&gt; &lt;/a&gt; реализован как Singleton, так что это одна из опций, и в Vapor API он имеет сильно перегруженный &lt;code&gt;.put(...)&lt;/code&gt; поэтому вам не нужно явно беспокоиться о типе данных, который вы фиксируете - при условии, что он поддерживается. Это также свободно, поэтому вы можете звонить по цепочке:</target>
        </trans-unit>
        <trans-unit id="38790b229d6c237dbf858f9dd4a9b1d7875f2c72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First activity:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Первое занятие:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6acf3e29108fa8d58e7baff5f3d4de4585862e17" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First activity&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Первая деятельность&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39e1674645aa01413b88359487ff6ea8adba4fb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you are getting failed binder transaction, this means you are exceeding the binder transaction buffer by transferring large element from one activity to another activity.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Если вы получаете неудачную транзакцию связывания, это означает, что вы превышаете буфер транзакции связывания, перенося большой элемент из одного действия в другое.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9afc98d022ebc63f4dcf34e3b7d8b161a9c1b42d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MainActivity.java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MainActivity.java&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="19eeb4e0632f4386c13857b6de431c6767bb9935" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Second activity:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Второе занятие:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63f6e2302853eb9d8ce800854945872d5df07cb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Second activity&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Второе занятие&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="555ecf463f6d3c52dbe9e3b2ab151934ef17cc69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SecondActivity.java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SecondActivity.java&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b88994dcb0ff4558235d8d79e36859234b737ccb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;strings.xml&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;strings.xml&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="691a2156dd4988ab500a5a905a41a8f16bdff38e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;And in the Activity class&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;И в классе деятельности&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27bcc51b753067e8af837025a51fcfa452cc9b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;And in the SecondActivity&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;А во Второй деятельности&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27134c5bfda7d9d4aa7d14adbe68e072f6cd8416" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;If you want to tranfer bitmap between Activites/Fragments&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Если вы хотите перенести растровое изображение между Активами / Фрагментами&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3eac2d4a64d5e2ffe70bc12f8c686a554c1e8e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;In the FirstActivity&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;В первую очередь&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1905e2b21bb347526d3ff901e85d66b2e927e00f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;To pass a bitmap between Activites&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Чтобы передать растровое изображение между Activites&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fdbf1785aeec3fcbfb98aaeb04abcb9ce852bc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;To pass a bitmap between Fragments&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Чтобы передать растровое изображение между фрагментами&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ecac0bb1246942b157e9b16f4b2d35305d7b80d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;To receive inside the SecondFragment&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Получить внутри SecondFragment&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4aa2296c8bffcd9423ca75cfe63bc7b336832c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Activity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8e67f0d4bf4ab03078ffd2f8de789d70fca9525" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 1: Using &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Пример 1. Использование ключей &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69cfd154eff97431a561fee77f5618594f4ae83d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2: Defining your own &lt;code&gt;static final&lt;/code&gt; key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Пример 2: определение собственного &lt;code&gt;static final&lt;/code&gt; ключа&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="311b72f33173de524c819743d2623be2cb742774" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 3: Using a String resource key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Пример 3: Использование ключа ресурса String&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec627ec6cb461477a94dafc6780798262baaa5b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fragment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Fragment&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf48843a9605b137af95830499c33e2a529a8f22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Из деятельности&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="736a84272cf65397c83d2de3d2e7bb47743fce05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Get in Second Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Получить во второй деятельности&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b1923c4e38512c0fc4d0f96e220b6dec64d767c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If the value you sent was a &lt;code&gt;Boolean&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Если отправленное вами значение было &lt;code&gt;Boolean&lt;/code&gt; &lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="c4c69cdcc14d787c09cf7d75bc2231db77bcc4e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If the value you sent was a &lt;code&gt;String&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Если отправленное вами значение было &lt;code&gt;String&lt;/code&gt; &lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="c1c9042e010402f76cc80e23ee8a8816f6fe7334" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If the value you sent was in &lt;code&gt;long&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Если отправленное вами значение было &lt;code&gt;long&lt;/code&gt; &lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="bd9681ecbab6ab8ea5f060fdf77ccc765e0069a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pass from First Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Проход от первого занятия&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7983976e2a6f752e532f1acc994e3bdcc74a0af6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So in that case you have to compress the bitmap as an byte's array and then uncompress it in another activity&lt;/strong&gt;, like this</source>
          <target state="translated">&lt;strong&gt;Таким образом, в этом случае вы должны сжать растровое изображение как массив байтов, а затем распаковать его в другое действие&lt;/strong&gt; , как это</target>
        </trans-unit>
        <trans-unit id="a54f2112c920bf0d77b777cb56fe3e60fd22212f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Suggestion&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Suggestion&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ef6fc835c83c1df6fceecba68ec10a056baef08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;К деятельности&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="261ad0fce2799021541af1b0b30957234c88dd17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transfering Large Bitmaps&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Передача больших растровых изображений&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae5cad52db928bcf5d4ecd6057abe6932105fa02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updated&lt;/strong&gt; Note that I had mentioned the use of &lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.html&quot;&gt;SharedPreference&lt;/a&gt;. It has a simple API and is accessible across an application's activities. But this is a clumsy solution, and is a security risk if you pass around sensitive data. It's best to use intents. It has an extensive list of overloaded methods that can be used to better transfer many different data types between activities. Have a look at &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20double[])&quot;&gt;intent.putExtra&lt;/a&gt;. This &lt;a href=&quot;https://www.raywenderlich.com/160019/android-intents-tutorial-2&quot;&gt;link&lt;/a&gt; presents the use of putExtra quite well.</source>
          <target state="translated">&lt;strong&gt;Обновлено&lt;/strong&gt; примечание, что я упомянул использование &lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.html&quot;&gt;SharedPreference&lt;/a&gt; . Он имеет простой API и доступен во всех приложениях. Но это неуклюжее решение и представляет угрозу безопасности, если вы передаете конфиденциальные данные. Лучше всего использовать намерения. Он имеет обширный список перегруженных методов, которые можно использовать для лучшей передачи множества различных типов данных между действиями. Посмотрите на &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20double[])&quot;&gt;intent.putExtra&lt;/a&gt; . Эта &lt;a href=&quot;https://www.raywenderlich.com/160019/android-intents-tutorial-2&quot;&gt;ссылка&lt;/a&gt; довольно хорошо описывает использование putExtra.</target>
        </trans-unit>
        <trans-unit id="6a4330ad66ac90dbf88538aac5323059df6e85ef" translate="yes" xml:space="preserve">
          <source>A simple example where I use a main activity from another activity instance.</source>
          <target state="translated">Простой пример,когда я использую основное действие из другого экземпляра действия.</target>
        </trans-unit>
        <trans-unit id="cddde32a6142e4c31e1ec987adf9255d51ab628d" translate="yes" xml:space="preserve">
          <source>Access that intent on next activity:</source>
          <target state="translated">Доступ к этому намерению в отношении следующей деятельности:</target>
        </trans-unit>
        <trans-unit id="8b3cfb77f4a4633ade9ca7fae2d9b4ac1d036ce4" translate="yes" xml:space="preserve">
          <source>Also keep in mind that other approaches you might see, like statics, can be problematic because they &lt;a href=&quot;http://android-developers.blogspot.com/2009/01/avoiding-memory-leaks.html&quot;&gt;can lead to memory leaks&lt;/a&gt;. Application helps solve this too.</source>
          <target state="translated">Также имейте в виду, что другие подходы, которые вы можете увидеть, такие как статика, могут быть проблематичными, поскольку они &lt;a href=&quot;http://android-developers.blogspot.com/2009/01/avoiding-memory-leaks.html&quot;&gt;могут привести к утечкам памяти&lt;/a&gt; . Приложение помогает решить это тоже.</target>
        </trans-unit>
        <trans-unit id="f5af3a3106ff12444958cf40465d0fca35196123" translate="yes" xml:space="preserve">
          <source>Alternatively you could use an &lt;code&gt;Intent&lt;/code&gt;. In Vapor API you can also use the chainable overloaded &lt;code&gt;.put(...)&lt;/code&gt; method on a &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporIntent.java&quot;&gt;&lt;code&gt;VaporIntent&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">В качестве альтернативы вы можете использовать &lt;code&gt;Intent&lt;/code&gt; . В Vapor API вы также можете использовать цепной перегруженный &lt;code&gt;.put(...)&lt;/code&gt; для &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporIntent.java&quot;&gt; &lt;code&gt;VaporIntent&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="00134ba544f0105569635190e35f5e02b4d47b45" translate="yes" xml:space="preserve">
          <source>Although not mentioned in the documentation, &lt;a href=&quot;https://stackoverflow.com/a/4433843/3681880&quot;&gt;this answer&lt;/a&gt; recommends using a String resource to avoid dependencies between activities.</source>
          <target state="translated">Хотя это и не упомянуто в документации, &lt;a href=&quot;https://stackoverflow.com/a/4433843/3681880&quot;&gt;этот ответ&lt;/a&gt; рекомендует использовать ресурс String, чтобы избежать зависимостей между действиями.</target>
        </trans-unit>
        <trans-unit id="6766c76f225354ab4408ce0b8fa5e5d69bc48fbd" translate="yes" xml:space="preserve">
          <source>Always put keys in constant file for more managed way.</source>
          <target state="translated">Всегда помещайте ключи в постоянный файл для более удобного управления.</target>
        </trans-unit>
        <trans-unit id="d031df1412d19860296b9e9df7309415acc0642a" translate="yes" xml:space="preserve">
          <source>And pass it as an extra, as mentioned in the other answers. You can retrieve extras from your &lt;code&gt;Activity&lt;/code&gt;, and furthermore if you are using &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/app/VaporActivity.java&quot;&gt;&lt;code&gt;VaporActivity&lt;/code&gt;&lt;/a&gt; this is done for you automatically so you can use:</source>
          <target state="translated">И передайте это как дополнительное, как упомянуто в других ответах. Вы можете получить дополнительные данные из своей &lt;code&gt;Activity&lt;/code&gt; , и, кроме того, если вы используете &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/app/VaporActivity.java&quot;&gt; &lt;code&gt;VaporActivity&lt;/code&gt; ,&lt;/a&gt; это делается для вас автоматически, поэтому вы можете использовать:</target>
        </trans-unit>
        <trans-unit id="c3b81a4dfb415495243f035799ec9b60004adf11" translate="yes" xml:space="preserve">
          <source>And send this Intent. In the target Activity your field will be available as:</source>
          <target state="translated">И отправьте это Намерение.В целевой Деятельности ваше поле будет доступно как:</target>
        </trans-unit>
        <trans-unit id="97443e4703452552473d2b439394d7e200ef0046" translate="yes" xml:space="preserve">
          <source>Another way could be using &lt;em&gt;singleton pattern&lt;/em&gt; also:</source>
          <target state="translated">Другой способ может также использовать &lt;em&gt;шаблон синглтона&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="eb96d2a6585fc602380bbf18c7aad2634249d8dc" translate="yes" xml:space="preserve">
          <source>Another way is to use a public static field in which you store data, i.e.:</source>
          <target state="translated">Другой способ-использовать публичное статическое поле,в котором хранятся данные,т.е:</target>
        </trans-unit>
        <trans-unit id="114836ee60fb21e3a68d7850e9974c9898c3277e" translate="yes" xml:space="preserve">
          <source>Any alternative to this case</source>
          <target state="translated">Любая альтернатива этому делу</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="e3cb9dab4ff412c0200893c4191f894a0f6d1b21" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;finish()&lt;/code&gt; to close the Second Activity.</source>
          <target state="translated">Вызовите &lt;code&gt;finish()&lt;/code&gt; чтобы закрыть второе действие.</target>
        </trans-unit>
        <trans-unit id="c6d1bdc6847d371342d0a21b50fdb8f6beced719" translate="yes" xml:space="preserve">
          <source>Charlie Collins gave me a perfect &lt;a href=&quot;https://stackoverflow.com/a/2098936/1885518&quot;&gt;answer&lt;/a&gt; using the &lt;code&gt;Application.class&lt;/code&gt;. I was not aware that we could subclass it that easily. Here is a simplified example using a custom application class.</source>
          <target state="translated">Чарли Коллинз дал мне идеальный &lt;a href=&quot;https://stackoverflow.com/a/2098936/1885518&quot;&gt;ответ,&lt;/a&gt; используя &lt;code&gt;Application.class&lt;/code&gt; . Я не знал, что мы могли бы подкласс это так легко. Вот упрощенный пример использования пользовательского класса приложения.</target>
        </trans-unit>
        <trans-unit id="68c0c94e8cab9aae78ffeaa106c25093aedbd70a" translate="yes" xml:space="preserve">
          <source>Create a simple &quot;helper&quot; class (factory for your Intents), like this:</source>
          <target state="translated">Создайте простой класс &quot;помощник&quot; (фабрика для Ваших намерений),как этот:</target>
        </trans-unit>
        <trans-unit id="6e4aaabd92f2e99034820908067ae0295de8273f" translate="yes" xml:space="preserve">
          <source>Destination Class (NewActivity class):</source>
          <target state="translated">Класс назначения (класс NewActivity):</target>
        </trans-unit>
        <trans-unit id="2d137f2f8e86a9a23937d462edb718787219d5e4" translate="yes" xml:space="preserve">
          <source>Done! Cool :) I just want to share my experience. If you working on small project this shouldn't be the big problem. But when your working on big project, it really pain when you want to do refactoring or fixing bugs.</source>
          <target state="translated">Готово! Круто :)Я просто хочу поделиться своим опытом.Если вы работаете над маленьким проектом,то это не должно быть большой проблемой.Но когда вы работаете над большим проектом,это действительно больно,когда вы хотите сделать рефакторинг или исправление ошибок.</target>
        </trans-unit>
        <trans-unit id="f4c193bf1771d10531bdb7934817cbeed35a9c79" translate="yes" xml:space="preserve">
          <source>E.g.
&lt;code&gt;bundle.getString(&quot;key&quot;)&lt;/code&gt;,&lt;code&gt;bundle.getDouble(&quot;key&quot;)&lt;/code&gt; ,&lt;code&gt;bundle.getInt(&quot;key&quot;)&lt;/code&gt; etc.</source>
          <target state="translated">Например, &lt;code&gt;bundle.getString(&quot;key&quot;)&lt;/code&gt; , &lt;code&gt;bundle.getDouble(&quot;key&quot;)&lt;/code&gt; , &lt;code&gt;bundle.getInt(&quot;key&quot;)&lt;/code&gt; и т. Д.</target>
        </trans-unit>
        <trans-unit id="f936b1aa74e65dae1cd7181e26c0eefa89758507" translate="yes" xml:space="preserve">
          <source>Extract the data you got from the return &lt;code&gt;Intent&lt;/code&gt;. The data is extracted using a key-value pair. I could use any string for the key but I'll use the predefined &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; since I'm sending text.</source>
          <target state="translated">Извлеките данные, которые вы получили из возврата &lt;code&gt;Intent&lt;/code&gt; . Данные извлекаются с использованием пары ключ-значение. Я мог бы использовать любую строку для ключа, но я буду использовать предопределенный &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; , так как я отправляю текст.</target>
        </trans-unit>
        <trans-unit id="1b7a10721937a8ed747927220149c6e4fface761" translate="yes" xml:space="preserve">
          <source>Extract the data&amp;hellip;</source>
          <target state="translated">Извлечь данные ...</target>
        </trans-unit>
        <trans-unit id="cff6c60591921aa0e2cccb5fd250074f999dea20" translate="yes" xml:space="preserve">
          <source>Final step, here is how I receive the data in &lt;code&gt;HomeActivity&lt;/code&gt;</source>
          <target state="translated">Последний шаг, вот как я получаю данные в &lt;code&gt;HomeActivity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6dadbc1ed9272b3f7f01909a232ff72dce25a0f7" translate="yes" xml:space="preserve">
          <source>First Activity:</source>
          <target state="translated">Первое действие:</target>
        </trans-unit>
        <trans-unit id="e13f3df986bafc200ac632a3e6c7a38520b661be" translate="yes" xml:space="preserve">
          <source>First you have to attach the data to the intent object with the use of the &lt;code&gt;Bundle&lt;/code&gt; class. Then call the activity using either &lt;code&gt;startActivity()&lt;/code&gt; or &lt;code&gt;startActivityForResult()&lt;/code&gt; methods.</source>
          <target state="translated">Сначала вы должны прикрепить данные к объекту намерения с помощью класса &lt;code&gt;Bundle&lt;/code&gt; . Затем вызовите действие, используя &lt;code&gt;startActivity()&lt;/code&gt; или &lt;code&gt;startActivityForResult()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="482e938c66c57260d4f901ca7a5543edf6b0970a" translate="yes" xml:space="preserve">
          <source>First, I create my &lt;code&gt;HomeIntent&lt;/code&gt;</source>
          <target state="translated">Во-первых, я создаю свой &lt;code&gt;HomeIntent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="add87083a5b763c0765ea0575fe36883dbd13425" translate="yes" xml:space="preserve">
          <source>For getting a value, use this in an Activity:</source>
          <target state="translated">Чтобы получить значение,используйте это в Деятельности:</target>
        </trans-unit>
        <trans-unit id="b13e70feeda4eb238eb4b0fbe89d2e5a7ff1e83f" translate="yes" xml:space="preserve">
          <source>For setting a value:</source>
          <target state="translated">Для установки значения:</target>
        </trans-unit>
        <trans-unit id="ba35b2e13fe575cc0708ee2dbee1e0f2499d621c" translate="yes" xml:space="preserve">
          <source>From your FirstActivity</source>
          <target state="translated">С вашей FirstActivity</target>
        </trans-unit>
        <trans-unit id="f5fa9b68f74a45552a5cbaec95a2c01f74e574ce" translate="yes" xml:space="preserve">
          <source>Get the bundle</source>
          <target state="translated">Получить связку</target>
        </trans-unit>
        <trans-unit id="e7cbde1028495db5b93c103455fedcb762499c55" translate="yes" xml:space="preserve">
          <source>Give the &lt;code&gt;android:name&lt;/code&gt; attribute to use your own application class.</source>
          <target state="translated">Дайте атрибут &lt;code&gt;android:name&lt;/code&gt; , чтобы использовать собственный класс приложения.</target>
        </trans-unit>
        <trans-unit id="9507a4524ce07b08a50f4e1acac31fc03694bfa6" translate="yes" xml:space="preserve">
          <source>Here is how I pass the data in my LoginActivity</source>
          <target state="translated">Вот как я передаю данные в своей LoginActivity.</target>
        </trans-unit>
        <trans-unit id="37a9d2da1c6f8e2c0f57a7140ce9571a1d80a48f" translate="yes" xml:space="preserve">
          <source>Here is my best practice and it helps a lot when the project is huge and complex.</source>
          <target state="translated">Вот моя лучшая практика,и она очень помогает,когда проект огромный и сложный.</target>
        </trans-unit>
        <trans-unit id="1a002890bd5f1f4bc93ae7047a72cbe3902b000a" translate="yes" xml:space="preserve">
          <source>Here we have Employee Model</source>
          <target state="translated">Здесь у нас есть модель сотрудника</target>
        </trans-unit>
        <trans-unit id="62d036c6a0573038b63a65addf92989132051df6" translate="yes" xml:space="preserve">
          <source>Hope that is of interest to some :)</source>
          <target state="translated">Надежда,которая интересует некоторых :)</target>
        </trans-unit>
        <trans-unit id="6c2d547761d122b2cc8a9fa76b1c8042490af5c3" translate="yes" xml:space="preserve">
          <source>How do I pass data between Activities in Android application</source>
          <target state="translated">Как передать данные между действиями в приложении для Android.</target>
        </trans-unit>
        <trans-unit id="801c441e0fce738efc88d096d30fc58b2eec1079" translate="yes" xml:space="preserve">
          <source>I have a scenario where, after logging in through a login page, there will be a sign-out &lt;code&gt;button&lt;/code&gt; on each &lt;code&gt;activity&lt;/code&gt;.</source>
          <target state="translated">У меня есть сценарий, в котором после входа на страницу входа будет &lt;code&gt;button&lt;/code&gt; выхода для каждого &lt;code&gt;activity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="191f6a0efd6c49e211bc872f83c865ebaebc0119" translate="yes" xml:space="preserve">
          <source>I recently released &lt;a href=&quot;https://github.com/HodeCode/Vapor-API&quot;&gt;Vapor API&lt;/a&gt;, a jQuery flavored Android framework that makes all sorts of tasks like this simpler. As mentioned, &lt;code&gt;SharedPreferences&lt;/code&gt; is one way you could do this.</source>
          <target state="translated">Недавно я выпустил &lt;a href=&quot;https://github.com/HodeCode/Vapor-API&quot;&gt;Vapor API&lt;/a&gt; , фреймворк Android со вкусом jQuery, который упрощает все виды задач, подобных этой. Как уже упоминалось, &lt;code&gt;SharedPreferences&lt;/code&gt; - это один из способов сделать это.</target>
        </trans-unit>
        <trans-unit id="e9166f055a5c3d20ca12ccbe2cafd74e4e778a01" translate="yes" xml:space="preserve">
          <source>I use static fields in a class, and get/set them:</source>
          <target state="translated">Я использую статические поля в классе и получаю их:</target>
        </trans-unit>
        <trans-unit id="6efbf4da853c756fa16beab23c3a3d9877713c64" translate="yes" xml:space="preserve">
          <source>If one of the &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; Strings does not suit your needs, you can define your own at the beginning of the first activity.</source>
          <target state="translated">Если одна из &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; не соответствует вашим потребностям, вы можете определить свою собственную в начале первого действия.</target>
        </trans-unit>
        <trans-unit id="74648e19c0596322112fdcf1454b1d38d1fc715b" translate="yes" xml:space="preserve">
          <source>If you don't have the required session id, then remove sharedpreferences:</source>
          <target state="translated">Если у вас нет требуемого идентификатора сеанса,удалите общие настройки:</target>
        </trans-unit>
        <trans-unit id="87c6f0dc9e80304ed1a75ca2d3e6a678aaa57702" translate="yes" xml:space="preserve">
          <source>In passing data between activities, my preferred approach is to create a static method for the relevant activity that includes the required parameters launch the intent. Which then provides easily setup and retrieve parameters. So it can look like this</source>
          <target state="translated">При передаче данных между видами деятельности,мой предпочтительный подход заключается в создании статического метода для соответствующей деятельности,который включает в себя необходимые параметры запуска намерение.Который затем обеспечивает легкую настройку и извлечение параметров.Таким образом,это может выглядеть следующим образом</target>
        </trans-unit>
        <trans-unit id="958f356615e03ef90e3a2299cb30cd18b6353ef2" translate="yes" xml:space="preserve">
          <source>In your activity. When you want to &quot;save&quot; some data in a &quot;session&quot; just use the following:</source>
          <target state="translated">В вашей деятельности.Когда Вы хотите &quot;сохранить&quot; некоторые данные в &quot;сеансе&quot;,просто используйте следующее:</target>
        </trans-unit>
        <trans-unit id="9397e38b5c64340e87a78c545a1a95a8c8b789f8" translate="yes" xml:space="preserve">
          <source>In your current Activity, create a new &lt;code&gt;Intent&lt;/code&gt;:</source>
          <target state="translated">В вашей текущей деятельности создайте новое &lt;code&gt;Intent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0fb801c75f878ef442515ab91d7964613f280d92" translate="yes" xml:space="preserve">
          <source>Including the package name is just a convention if you are only using the key in your own app. But it is a necessity to avoid naming conflicts if you are creating some sort of service that other apps can call with an Intent.</source>
          <target state="translated">Включение имени пакета-это просто соглашение,если вы используете ключ только в своем собственном приложении.Но это необходимость избежать конфликтов именования,если вы создаёте какую-то службу,которую другие приложения могут вызывать с намерением.</target>
        </trans-unit>
        <trans-unit id="91a39811c53cdcbaa0c30d603017f5b26cfd4ed6" translate="yes" xml:space="preserve">
          <source>Inside FirstActivity:</source>
          <target state="translated">Inside FirstActivity:</target>
        </trans-unit>
        <trans-unit id="c9396634ef6b99aaa973957f25c24a34cb81738b" translate="yes" xml:space="preserve">
          <source>Inside SecondActivity</source>
          <target state="translated">Внутри SecondActivity</target>
        </trans-unit>
        <trans-unit id="9c6e80ee327688adf9a36d80f51295270fd0a69a" translate="yes" xml:space="preserve">
          <source>Intent</source>
          <target state="translated">Intent</target>
        </trans-unit>
        <trans-unit id="5ffce4d389a1fb0ccb543e4f148c3863eadc53cf" translate="yes" xml:space="preserve">
          <source>It also optionally autosaves changes, and unifies the reading and writing process under-the-hood so you don't need to explicitly retrieve an Editor like you do in standard Android.</source>
          <target state="translated">Он также опционально автоматически сохраняет изменения,и унифицирует процесс чтения и письма под себя,так что вам не нужно явно получить Редактор,как вы делаете в стандартном Android.</target>
        </trans-unit>
        <trans-unit id="1c52378e370c18b7f3c8c47d053a5baa705a5ce8" translate="yes" xml:space="preserve">
          <source>It helps me to see things in context. Here are two examples.</source>
          <target state="translated">Это помогает мне видеть вещи в контексте.Вот два примера.</target>
        </trans-unit>
        <trans-unit id="4b97a1cc4cde2d848838f0605a552d5704eea24b" translate="yes" xml:space="preserve">
          <source>Kotlin</source>
          <target state="translated">Kotlin</target>
        </trans-unit>
        <trans-unit id="59b86486aed4edafd59a372a9da15c32460385f0" translate="yes" xml:space="preserve">
          <source>Like this:</source>
          <target state="translated">Вот так:</target>
        </trans-unit>
        <trans-unit id="a707aa190f760150c8ff8256bff3171e748227a0" translate="yes" xml:space="preserve">
          <source>Like:</source>
          <target state="translated">Like:</target>
        </trans-unit>
        <trans-unit id="38ae06db9b3ef1579976cbac1a32d2b2cc1f26ea" translate="yes" xml:space="preserve">
          <source>Logging. Time store session id in &lt;code&gt;SharedPreferences&lt;/code&gt;</source>
          <target state="translated">Логирование. ID сеанса хранения времени в &lt;code&gt;SharedPreferences&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b13150bb59eb875dca701727cc38c9ccd731a0b" translate="yes" xml:space="preserve">
          <source>Main Activity</source>
          <target state="translated">Основная деятельность</target>
        </trans-unit>
        <trans-unit id="3d3a69f803d148023e594571872c5358024dc784" translate="yes" xml:space="preserve">
          <source>Now in your second activity retrieve your data from the bundle:</source>
          <target state="translated">Теперь во второй активности извлеките данные из пакета:</target>
        </trans-unit>
        <trans-unit id="b9107a134a7d28c961183694b53efaa7c56f90ab" translate="yes" xml:space="preserve">
          <source>Now on the &lt;code&gt;OnCreate&lt;/code&gt; method of your &lt;code&gt;SecondActivity&lt;/code&gt; you can fetch the extras like this.</source>
          <target state="translated">Теперь с помощью метода &lt;code&gt;OnCreate&lt;/code&gt; вашей &lt;code&gt;SecondActivity&lt;/code&gt; вы можете получить дополнительные функции, подобные этой.</target>
        </trans-unit>
        <trans-unit id="0eb3a03b1d0787ff4da11702ea6504e55d1bb88a" translate="yes" xml:space="preserve">
          <source>Now you can simply use the &lt;strong&gt;foo&lt;/strong&gt; object like you would have used.</source>
          <target state="translated">Теперь вы можете просто использовать объект &lt;strong&gt;foo,&lt;/strong&gt; как если бы вы использовали.</target>
        </trans-unit>
        <trans-unit id="7b325c769b45cd93a413e7302e481b4d2920cddf" translate="yes" xml:space="preserve">
          <source>Now you can use different bundle class methods to get values passed from FirstActivity  by Key.</source>
          <target state="translated">Теперь для получения значений,передаваемых из FirstActivity по Key,можно использовать различные методы пакетного класса.</target>
        </trans-unit>
        <trans-unit id="38541e5b930d05d749fd33f24234be704e643f1e" translate="yes" xml:space="preserve">
          <source>On SecondActivity</source>
          <target state="translated">На второстепенной деятельности</target>
        </trans-unit>
        <trans-unit id="4c24e75dffeb92e9f8892cb139f4a3a313270433" translate="yes" xml:space="preserve">
          <source>On clicking &lt;code&gt;sign-out&lt;/code&gt;, I will be passing the &lt;code&gt;session id&lt;/code&gt; of the signed in user to sign-out. Can anyone guide me on how to keep &lt;code&gt;session id&lt;/code&gt; available to all &lt;code&gt;activities&lt;/code&gt;?</source>
          <target state="translated">После нажатия кнопки &amp;laquo; &lt;code&gt;sign-out&lt;/code&gt; я передам &lt;code&gt;session id&lt;/code&gt; пользователя, вошедшего в систему. Кто-нибудь может подсказать мне, как сохранить &lt;code&gt;session id&lt;/code&gt; доступным для всех &lt;code&gt;activities&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="ea1475c8ef70f849a139f26984abc6ea59ea104c" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;onActivityResult&lt;/code&gt;. This is called when the Second Activity finishes. You can make sure that it is actually the Second Activity by checking the result code. (This is useful when you are starting multiple different activities from the same main activity.)</source>
          <target state="translated">Переопределить &lt;code&gt;onActivityResult&lt;/code&gt; . Это называется, когда заканчивается второе задание. Вы можете убедиться, что это фактически Второе действие, проверив код результата. (Это полезно, когда вы запускаете несколько разных действий из одного и того же основного действия.)</target>
        </trans-unit>
        <trans-unit id="4d47579c705e3ce0308b6333fc5e0b8b02f1f541" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html&quot;&gt;Intent&lt;/a&gt; extras is a good approach as Erich noted.</source>
          <target state="translated">Прохождение &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html&quot;&gt;Intent&lt;/a&gt; - хороший подход, как отметил Эрих.</target>
        </trans-unit>
        <trans-unit id="d775144a55bf7e91ef7cfbccf4a2c1def79bcdaf" translate="yes" xml:space="preserve">
          <source>Passing Data Back</source>
          <target state="translated">Обратная передача данных</target>
        </trans-unit>
        <trans-unit id="d247479c4b162f22e1950a95a4522e7d7381bf58" translate="yes" xml:space="preserve">
          <source>Passing Data Forward</source>
          <target state="translated">Пересылка передаваемых данных</target>
        </trans-unit>
        <trans-unit id="b0dae3fb81b164e0468db006efad889258446e01" translate="yes" xml:space="preserve">
          <source>Put the data that you want to send back to the previous activity into an &lt;code&gt;Intent&lt;/code&gt;. The data is stored in the &lt;code&gt;Intent&lt;/code&gt; using a key-value pair. I chose to use &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; for my key.</source>
          <target state="translated">Поместите данные, которые вы хотите отправить обратно в предыдущее действие, в &lt;code&gt;Intent&lt;/code&gt; . Данные хранятся в &lt;code&gt;Intent&lt;/code&gt; с использованием пары ключ-значение. Я решил использовать &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; для моего ключа.</target>
        </trans-unit>
        <trans-unit id="25e7fb992e005e9c97de619e6b44b45fbf813349" translate="yes" xml:space="preserve">
          <source>Put the data you want to send in an Intent with a key-value pair. See &lt;a href=&quot;https://stackoverflow.com/a/40569184/3681880&quot;&gt;this answer&lt;/a&gt; for naming conventions for the key.</source>
          <target state="translated">Поместите данные, которые вы хотите отправить, в Intent с парой ключ-значение. Посмотрите &lt;a href=&quot;https://stackoverflow.com/a/40569184/3681880&quot;&gt;этот ответ&lt;/a&gt; для соглашений об именовании для ключа.</target>
        </trans-unit>
        <trans-unit id="0ecb891025ed958ae1cfa0fae9f5abe54061b725" translate="yes" xml:space="preserve">
          <source>Retrieve on another activity (YourActivity)</source>
          <target state="translated">Возврат к другой деятельности (ТвояДеятельность)</target>
        </trans-unit>
        <trans-unit id="f79292c43430eff2892fbe0b4612e2f1abff30de" translate="yes" xml:space="preserve">
          <source>Second Activity</source>
          <target state="translated">Второе мероприятие</target>
        </trans-unit>
        <trans-unit id="2071c51814f63287592870a47bb93b53c1905601" translate="yes" xml:space="preserve">
          <source>Second Activity:</source>
          <target state="translated">Второе мероприятие:</target>
        </trans-unit>
        <trans-unit id="d9df9a715cab4190727861808315534cdf9cfd68" translate="yes" xml:space="preserve">
          <source>Set the global &quot;singleton&quot; reference to the application instance.</source>
          <target state="translated">Установите глобальную &quot;однокнопочную&quot; ссылку на экземпляр приложения.</target>
        </trans-unit>
        <trans-unit id="1aa7f83614192aff8dc68b59fa386f302f46ff75" translate="yes" xml:space="preserve">
          <source>Set the result to &lt;code&gt;RESULT_OK&lt;/code&gt; and add the intent holding your data.</source>
          <target state="translated">Установите результат &lt;code&gt;RESULT_OK&lt;/code&gt; и добавьте намерение, содержащее ваши данные.</target>
        </trans-unit>
        <trans-unit id="c4e1ba9d729248f07fa31c3f3d01905cf916087a" translate="yes" xml:space="preserve">
          <source>SharedPreferences</source>
          <target state="translated">SharedPreferences</target>
        </trans-unit>
        <trans-unit id="0bb28b62756d75c03361a9f59a817230be3c1f62" translate="yes" xml:space="preserve">
          <source>Signout. Time fetch session id in sharedpreferences</source>
          <target state="translated">Распишитесь.Идентификатор сессии извлечения времени в общих настройках</target>
        </trans-unit>
        <trans-unit id="469e016b6eb19825cd15bafcfacb243a09ada917" translate="yes" xml:space="preserve">
          <source>So now we can use Intent like same old session (like in servlets or &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaServer_Pages&quot;&gt;JSP&lt;/a&gt;).</source>
          <target state="translated">Так что теперь мы можем использовать Intent как тот же старый сеанс (как в сервлетах или &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaServer_Pages&quot;&gt;JSP&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b4d613ac1e81c9ecc35efd7cfeba0c6091ed9739" translate="yes" xml:space="preserve">
          <source>Source class:</source>
          <target state="translated">Класс &quot;Источник&quot;:</target>
        </trans-unit>
        <trans-unit id="c60e0d7bb2198c66f6989cf45e7f174b8d89578d" translate="yes" xml:space="preserve">
          <source>Start another activity from this activity pass parameters via Bundle Object</source>
          <target state="translated">Начать другую деятельность с передачи параметров этой деятельности через Объект-пакет</target>
        </trans-unit>
        <trans-unit id="5d97bbcba68a9bbf264a554dfe9d1ca7c1f6c210" translate="yes" xml:space="preserve">
          <source>Start the Second Activity with &lt;code&gt;startActivity&lt;/code&gt;.</source>
          <target state="translated">Начните второе действие с &lt;code&gt;startActivity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e3db86445cd5f29ef46da20cbcdc4a448f3f404" translate="yes" xml:space="preserve">
          <source>Start the Second Activity with &lt;code&gt;startActivityForResult&lt;/code&gt;, providing it an arbitrary result code.</source>
          <target state="translated">Начните второе действие с &lt;code&gt;startActivityForResult&lt;/code&gt; , предоставив ему произвольный код результата.</target>
        </trans-unit>
        <trans-unit id="3c8287afb3483e919b879650e03e1552a21cd6ef" translate="yes" xml:space="preserve">
          <source>Supplemental Answer: Naming Conventions for the Key String</source>
          <target state="translated">Дополнительный ответ:Название конвенций для ключевой нити</target>
        </trans-unit>
        <trans-unit id="aef05c1679d24fb346f19fd0cb257fefe73aa8cc" translate="yes" xml:space="preserve">
          <source>Suppose that I have 2 activities, &lt;code&gt;LoginActivity&lt;/code&gt; and &lt;code&gt;HomeActivity&lt;/code&gt;.
I want to pass 2 parameters (username &amp;amp; password) from &lt;code&gt;LoginActivity&lt;/code&gt; to &lt;code&gt;HomeActivity&lt;/code&gt;.</source>
          <target state="translated">Предположим, что у меня есть 2 действия, &lt;code&gt;LoginActivity&lt;/code&gt; и &lt;code&gt;HomeActivity&lt;/code&gt; . Я хочу передать 2 параметра (имя пользователя и пароль) из &lt;code&gt;LoginActivity&lt;/code&gt; в &lt;code&gt;HomeActivity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ceed2a0698eb712e10202a2506bc17dcfbc9926" translate="yes" xml:space="preserve">
          <source>That is very useful, because one time you save the value and then retrieve anywhere of activity.</source>
          <target state="translated">Это очень полезно,потому что один раз вы сохраните значение,а затем получить в любом месте деятельности.</target>
        </trans-unit>
        <trans-unit id="d6e5f3ce9be6985f80525dcf45bd128616a8cd29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://developer.android.com/guide/topics/intents/intents-filters.html&quot;&gt;docs&lt;/a&gt; for Intents has more information (look at the section titled &quot;Extras&quot;).</source>
          <target state="translated">&lt;a href=&quot;http://developer.android.com/guide/topics/intents/intents-filters.html&quot;&gt;Документы&lt;/a&gt; для Intents содержат более подробную информацию (см. Раздел &amp;laquo;Дополнительно&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="57f6a542d7f9d1ed69ddff25fa604f10b9777f77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://developer.android.com/reference/android/app/Application.html&quot;&gt;Application&lt;/a&gt; object is another way though, and it is sometimes easier when dealing with the same state across multiple activities (as opposed to having to get/put it everywhere), or objects more complex than primitives and Strings.</source>
          <target state="translated">Однако объект &lt;a href=&quot;http://developer.android.com/reference/android/app/Application.html&quot;&gt;Application&lt;/a&gt; - это еще один способ, и иногда он проще при работе с одним и тем же состоянием в нескольких действиях (в отличие от необходимости получать / помещать его везде) или объектами, более сложными, чем примитивы и строки.</target>
        </trans-unit>
        <trans-unit id="8563a4d0c62edcc0ff48c0d840253718a507e933" translate="yes" xml:space="preserve">
          <source>The actual process of passing data has already been answered, however most of the answers use hard coded strings for the key name in the Intent. This is usually fine when used only within your app. However, the &lt;a href=&quot;https://developer.android.com/guide/components/intents-filters.html#Building&quot;&gt;documentation recommends&lt;/a&gt; using the &lt;code&gt;EXTRA_*&lt;/code&gt; constants for standardized data types.</source>
          <target state="translated">На фактический процесс передачи данных уже дан ответ, однако в большинстве ответов используются жестко закодированные строки для имени ключа в намерении. Это обычно хорошо, когда используется только в вашем приложении. Однако в &lt;a href=&quot;https://developer.android.com/guide/components/intents-filters.html#Building&quot;&gt;документации рекомендуется&lt;/a&gt; использовать константы &lt;code&gt;EXTRA_*&lt;/code&gt; для стандартизированных типов данных.</target>
        </trans-unit>
        <trans-unit id="0bb152b293a5bb95cafe440f8ab477d51c208ed9" translate="yes" xml:space="preserve">
          <source>The easiest way to do this would be to pass the session id to the signout activity in the &lt;code&gt;Intent&lt;/code&gt; you're using to start the activity:</source>
          <target state="translated">Самый простой способ сделать это - передать идентификатор сеанса в действие выхода из системы в &lt;code&gt;Intent&lt;/code&gt; вы используете для запуска действия:</target>
        </trans-unit>
        <trans-unit id="f3f680ce6c4918b4e5cc224292a73f39c98f4860" translate="yes" xml:space="preserve">
          <source>The most convenient way to pass data between activities is by passing intents. In the first activity from where you want to send data, you should add code,</source>
          <target state="translated">Наиболее удобный способ передачи данных между действиями-передача намерений.В первом действии,откуда вы хотите отправить данные,необходимо добавить код,</target>
        </trans-unit>
        <trans-unit id="d7196e38e5b82ea6fea703cfb7e0dbbb169bffdc" translate="yes" xml:space="preserve">
          <source>The passing of data between activities is mainly by means of an intent object.</source>
          <target state="translated">Передача данных между видами деятельности в основном осуществляется с помощью объекта намерения.</target>
        </trans-unit>
        <trans-unit id="8bd6bd2f6253d4628da08bc08615bfbcc13697a3" translate="yes" xml:space="preserve">
          <source>The second way is:</source>
          <target state="translated">Второй путь:</target>
        </trans-unit>
        <trans-unit id="4d90f3c07992925129698958691c7cdda4e4e5cf" translate="yes" xml:space="preserve">
          <source>The standard approach.</source>
          <target state="translated">Стандартный подход.</target>
        </trans-unit>
        <trans-unit id="fbe87168b33c862c9cf5cb66145c061b41f2a787" translate="yes" xml:space="preserve">
          <source>Then in the new Activity, retrieve those values:</source>
          <target state="translated">Затем в новой Активности восстановите эти значения:</target>
        </trans-unit>
        <trans-unit id="d533ddf48e5578bbafd980adc1e07588473500c4" translate="yes" xml:space="preserve">
          <source>Then in the next Acitvity(SecondActivity), you should retrieve the data from the intent using the following code.</source>
          <target state="translated">Затем в следующем Acitvity(SecondActivity)вы должны извлечь данные из намерения,используя следующий код.</target>
        </trans-unit>
        <trans-unit id="4040f653da1dadefa439c9e7b5682e650a4df748" translate="yes" xml:space="preserve">
          <source>Then you can create an intent for the intended activity and ensure you have all the parameters. You can adapt for fragments to. A simple example above, but you get the idea.</source>
          <target state="translated">Затем вы можете создать намерение для предполагаемой деятельности и убедиться,что у вас есть все параметры.Вы можете адаптироваться к фрагментам.Простой пример выше,но вы получаете идею.</target>
        </trans-unit>
        <trans-unit id="b3b8012beb23f20a279f37d5c48ec30d9a2294da" translate="yes" xml:space="preserve">
          <source>This is ok for simple kind data type.
But if u want to pass complex data in between activity u need to serialize it first.</source>
          <target state="translated">Это нормально для простого типа данных.Но если вы хотите передать сложные данные в промежутке между действиями,то сначала нужно их сериализовать.</target>
        </trans-unit>
        <trans-unit id="b5d453a61067b8e839a65e9063fc1f191d87c8e1" translate="yes" xml:space="preserve">
          <source>This will be the factory for all your Intents. Everytime you need a new Intent, create a static factory method in IntentHelper. To create a new Intent you should just say it like this:</source>
          <target state="translated">Это будет фабрика для всех ваших намерений.Каждый раз,когда вам нужно новое Намерение,создайте статический заводской метод в IntentHelper.Чтобы создать новое Намерение,просто скажите это вот так:</target>
        </trans-unit>
        <trans-unit id="f3a5c2caaa47ec3ba54eccc20b7bf9b06dfc9977" translate="yes" xml:space="preserve">
          <source>To get them -</source>
          <target state="translated">Получить их -</target>
        </trans-unit>
        <trans-unit id="0c088e371dd51b2e9ebdfbfc7c8793968913939b" translate="yes" xml:space="preserve">
          <source>To retrieve them at the other end in the &lt;code&gt;Activity&lt;/code&gt; you switch to.</source>
          <target state="translated">Чтобы получить их на другом конце &lt;code&gt;Activity&lt;/code&gt; вы переключаетесь.</target>
        </trans-unit>
        <trans-unit id="76ee038703849ccda45bce276e1c6e099de57a9e" translate="yes" xml:space="preserve">
          <source>To save session id -</source>
          <target state="translated">Чтобы сохранить идентификатор сессии -</target>
        </trans-unit>
        <trans-unit id="f86eb23d52b2d11cbca7332577e0c2e98a3cfced" translate="yes" xml:space="preserve">
          <source>Try to do the following:</source>
          <target state="translated">Постарайтесь сделать следующее:</target>
        </trans-unit>
        <trans-unit id="a01be5506ad7701dad3213733f7ab8f0b08a9c65" translate="yes" xml:space="preserve">
          <source>Use this as a global reference holder. It works fine within a same process.</source>
          <target state="translated">Используйте его в качестве глобального держателя ссылок.Он прекрасно работает в рамках одного и того же процесса.</target>
        </trans-unit>
        <trans-unit id="9279a1523198a64bb952468120e769f35ae24749" translate="yes" xml:space="preserve">
          <source>Use this technique to pass variables from one Activity to the other.</source>
          <target state="translated">Используйте эту технику для передачи переменных от одной Деятельности к другой.</target>
        </trans-unit>
        <trans-unit id="d205e2ff8e3de9a60315420aa52c74c6a6cbff9f" translate="yes" xml:space="preserve">
          <source>Using Intent:</source>
          <target state="translated">Используя Намерение:</target>
        </trans-unit>
        <trans-unit id="8977cc576439126e69df1d9bddc6e708ed2920fb" translate="yes" xml:space="preserve">
          <source>You can also pass custom class objects by making a &lt;strong&gt;parcelable&lt;/strong&gt; class. Best way to make it parcelable is to write your class and then simply paste it to a site like &lt;a href=&quot;http://www.parcelabler.com/&quot;&gt;http://www.parcelabler.com/&lt;/a&gt;. Click on build and you will get new code. Copy all of this and replace the original class contents. 
Then-</source>
          <target state="translated">Вы также можете передать объекты пользовательского класса, &lt;strong&gt;создав&lt;/strong&gt; класс, который можно &lt;strong&gt;передать&lt;/strong&gt; . Лучший способ сделать его пригодным для продажи - написать свой класс, а затем просто вставить его на сайт, например &lt;a href=&quot;http://www.parcelabler.com/&quot;&gt;http://www.parcelabler.com/&lt;/a&gt; . Нажмите на сборку, и вы получите новый код. Скопируйте все это и замените оригинальное содержание класса. Затем-</target>
        </trans-unit>
        <trans-unit id="afac6faa4c2dc162d062b42e4b5df3044d73fec5" translate="yes" xml:space="preserve">
          <source>You can extend Application, and then set/get whatever you want there and access it from any Activity (in the same application) with &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#getApplication%28%29&quot;&gt;getApplication()&lt;/a&gt;.</source>
          <target state="translated">Вы можете расширить Application, а затем установить / получить все, что хотите, и получить к нему доступ из любого Activity (в том же приложении) с помощью &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#getApplication%28%29&quot;&gt;getApplication ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04247b5714a670781a9d184de4f930238f56c18b" translate="yes" xml:space="preserve">
          <source>You can find more information about it, with an example from the blog post &lt;em&gt;&lt;a href=&quot;http://codeglympse.blogspot.in/2012/10/passing-data-to-activity.html&quot;&gt;Passing data to an Activity&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Вы можете найти больше информации об этом, например, из сообщения в блоге. &lt;em&gt;&lt;a href=&quot;http://codeglympse.blogspot.in/2012/10/passing-data-to-activity.html&quot;&gt;Передача данных в действие&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2c6268214eaac767578cc1e5b385b6d4337bb868" translate="yes" xml:space="preserve">
          <source>You can pass data between activities in application in 3 ways</source>
          <target state="translated">Вы можете передавать данные между видами деятельности в приложении 3 способами</target>
        </trans-unit>
        <trans-unit id="2c21295f9dbf853539df97edd8ad87f7adcb08e6" translate="yes" xml:space="preserve">
          <source>You can retrieve it in another activity. Two ways:</source>
          <target state="translated">Ты можешь извлечь его в другой деятельности.Двумя способами:</target>
        </trans-unit>
        <trans-unit id="d586e993f0eefa58c86cbfc8ce479bd15cd6b5a9" translate="yes" xml:space="preserve">
          <source>You can send data between activities using intent object.
Consider you have two activities namely &lt;code&gt;FirstActivity&lt;/code&gt; and &lt;code&gt;SecondActivity&lt;/code&gt;.</source>
          <target state="translated">Вы можете отправлять данные между действиями, используя объект намерения. &lt;code&gt;FirstActivity&lt;/code&gt; вас есть два действия, а именно FirstActivity и &lt;code&gt;SecondActivity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a5cf318cde3137074d5c2b0aee4d1376771b882" translate="yes" xml:space="preserve">
          <source>You can try Shared Preference, it may be a good alternative for sharing data between the activities</source>
          <target state="translated">Вы можете попробовать Общие Предпочтения,это может быть хорошей альтернативой для обмена данными между мероприятиями.</target>
        </trans-unit>
        <trans-unit id="47dc9c970bda05aca7077b755ea158737f519601" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Intent&lt;/code&gt;</source>
          <target state="translated">Вы можете использовать &lt;code&gt;Intent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38769364ae30ab998c9e5527482c36982885adc1" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;SharedPreferences&lt;/code&gt;...</source>
          <target state="translated">Вы можете использовать &lt;code&gt;SharedPreferences&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="825a74e3e07a638da4e7186611592595b37d4552" translate="yes" xml:space="preserve">
          <source>You can use Gson lib provided by google to serialize the complex data 
like this</source>
          <target state="translated">Вы можете использовать Gson lib,предоставляемый Google,чтобы сериализовать сложные данные следующим образом.</target>
        </trans-unit>
        <trans-unit id="dd8c1085a4c8ab4dc979ce6ba4e8f6a70946930a" translate="yes" xml:space="preserve">
          <source>You just have to send extras while calling your intent.</source>
          <target state="translated">Ты просто должен послать дополнения,называя свои намерения.</target>
        </trans-unit>
        <trans-unit id="8dfce03149d43cf7b293ce21f2fcbdd498068c26" translate="yes" xml:space="preserve">
          <source>You should also import</source>
          <target state="translated">Вы также должны импортировать</target>
        </trans-unit>
        <trans-unit id="c400be3a2201ae1d77652bb6cf80cac53065ec7b" translate="yes" xml:space="preserve">
          <source>You use &lt;code&gt;getIntent()&lt;/code&gt; to get the &lt;code&gt;Intent&lt;/code&gt; that started the second activity. Then you can extract the data with &lt;code&gt;getExtras()&lt;/code&gt; and the key you defined in the first activity. Since our data is a String we will just use &lt;code&gt;getStringExtra&lt;/code&gt; here.</source>
          <target state="translated">Вы используете &lt;code&gt;getIntent()&lt;/code&gt; чтобы получить &lt;code&gt;Intent&lt;/code&gt; , который начал второе действие. Затем вы можете извлечь данные с помощью &lt;code&gt;getExtras()&lt;/code&gt; и ключа, который вы определили в первом упражнении. Поскольку наши данные являются String, мы просто будем использовать &lt;code&gt;getStringExtra&lt;/code&gt; здесь.</target>
        </trans-unit>
        <trans-unit id="b273febd3a27dcb081c3db547b2b1e5a29e64a0f" translate="yes" xml:space="preserve">
          <source>and get the result in NextActivity like-</source>
          <target state="translated">и получить результат в NextActivity типа...</target>
        </trans-unit>
        <trans-unit id="3a6338382cf8c0a31f7c639a5d031bdb4feb2553" translate="yes" xml:space="preserve">
          <source>passing data in intent have some limit. For large amount of data you can use Application level data sharing and by storing it in SharedPreference makes your app size increase</source>
          <target state="translated">передача данных с намерением имеет определенный предел.Для больших объемов данных вы можете использовать совместный доступ к данным на уровне приложения и,сохраняя их в SharedPreference,увеличивает размер вашего приложения.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
