<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/2091465">
    <body>
      <group id="2091465">
        <trans-unit id="eace538f61f4330b00f11561afaebe804172f96b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporSharedPreferences.java&quot;&gt;&lt;code&gt;VaporSharedPreferences&lt;/code&gt;&lt;/a&gt; is implemented as Singleton so that is one option, and in Vapor API it has a heavily overloaded &lt;code&gt;.put(...)&lt;/code&gt; method so you don't have to explicitly worry about the datatype you are committing - providing it is supported. It is also fluent, so you can chain calls:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporSharedPreferences.java&quot;&gt; &lt;code&gt;VaporSharedPreferences&lt;/code&gt; &lt;/a&gt;被实现为Singleton，因此是一种选择，并且在Vapor API中，它具有重载的 &lt;code&gt;.put(...)&lt;/code&gt; 方法，因此您不必明确担心要提交的数据类型-只要受支持即可。 它也很流利，因此您可以链接呼叫：</target>
        </trans-unit>
        <trans-unit id="38790b229d6c237dbf858f9dd4a9b1d7875f2c72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First activity:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;第一次活动：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6acf3e29108fa8d58e7baff5f3d4de4585862e17" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First activity&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;第一次活动&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39e1674645aa01413b88359487ff6ea8adba4fb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you are getting failed binder transaction, this means you are exceeding the binder transaction buffer by transferring large element from one activity to another activity.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;如果粘合剂交易失败，这意味着您将粘合剂从一个活动转移到另一个活动，从而超出了粘合剂交易缓冲区。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9afc98d022ebc63f4dcf34e3b7d8b161a9c1b42d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MainActivity.java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MainActivity.java&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="19eeb4e0632f4386c13857b6de431c6767bb9935" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Second activity:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;第二项活动：&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63f6e2302853eb9d8ce800854945872d5df07cb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Second activity&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;第二次活动&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="555ecf463f6d3c52dbe9e3b2ab151934ef17cc69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SecondActivity.java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SecondActivity.java&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b88994dcb0ff4558235d8d79e36859234b737ccb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;strings.xml&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;strings.xml&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="691a2156dd4988ab500a5a905a41a8f16bdff38e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;And in the Activity class&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;并在Activity类中&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27bcc51b753067e8af837025a51fcfa452cc9b30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;And in the SecondActivity&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;而在SecondActivity中&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27134c5bfda7d9d4aa7d14adbe68e072f6cd8416" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;If you want to tranfer bitmap between Activites/Fragments&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;如果要在活动/片段之间转移位图&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3eac2d4a64d5e2ffe70bc12f8c686a554c1e8e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;In the FirstActivity&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;在FirstActivity中&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1905e2b21bb347526d3ff901e85d66b2e927e00f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;To pass a bitmap between Activites&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;在活动之间传递位图&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fdbf1785aeec3fcbfb98aaeb04abcb9ce852bc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;To pass a bitmap between Fragments&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;在片段之间传递位图&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ecac0bb1246942b157e9b16f4b2d35305d7b80d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;To receive inside the SecondFragment&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;在SecondFragment内部接收&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4aa2296c8bffcd9423ca75cfe63bc7b336832c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Activity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8e67f0d4bf4ab03078ffd2f8de789d70fca9525" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 1: Using &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; keys&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;示例1：使用 &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; 键&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69cfd154eff97431a561fee77f5618594f4ae83d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2: Defining your own &lt;code&gt;static final&lt;/code&gt; key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;示例2：定义自己的 &lt;code&gt;static final&lt;/code&gt; 键&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="311b72f33173de524c819743d2623be2cb742774" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 3: Using a String resource key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;示例3：使用字符串资源密钥&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec627ec6cb461477a94dafc6780798262baaa5b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fragment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Fragment&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf48843a9605b137af95830499c33e2a529a8f22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;来自活动&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="736a84272cf65397c83d2de3d2e7bb47743fce05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Get in Second Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;参加第二活动&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b1923c4e38512c0fc4d0f96e220b6dec64d767c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If the value you sent was a &lt;code&gt;Boolean&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;如果您发送的值是 &lt;code&gt;Boolean&lt;/code&gt; &lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="c4c69cdcc14d787c09cf7d75bc2231db77bcc4e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If the value you sent was a &lt;code&gt;String&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;如果您发送的值为 &lt;code&gt;String&lt;/code&gt; &lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="c1c9042e010402f76cc80e23ee8a8816f6fe7334" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If the value you sent was in &lt;code&gt;long&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;如果您发送的值 &lt;code&gt;long&lt;/code&gt; &lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="bd9681ecbab6ab8ea5f060fdf77ccc765e0069a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pass from First Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;首次活动通过&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7983976e2a6f752e532f1acc994e3bdcc74a0af6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So in that case you have to compress the bitmap as an byte's array and then uncompress it in another activity&lt;/strong&gt;, like this</source>
          <target state="translated">&lt;strong&gt;因此，在这种情况下，您必须将位图压缩为字节数组，然后在另一个活动中将其解压缩&lt;/strong&gt; ，如下所示</target>
        </trans-unit>
        <trans-unit id="a54f2112c920bf0d77b777cb56fe3e60fd22212f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Suggestion&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Suggestion&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ef6fc835c83c1df6fceecba68ec10a056baef08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To Activity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;到活动&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="261ad0fce2799021541af1b0b30957234c88dd17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transfering Large Bitmaps&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;传输大位图&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae5cad52db928bcf5d4ecd6057abe6932105fa02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updated&lt;/strong&gt; Note that I had mentioned the use of &lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.html&quot;&gt;SharedPreference&lt;/a&gt;. It has a simple API and is accessible across an application's activities. But this is a clumsy solution, and is a security risk if you pass around sensitive data. It's best to use intents. It has an extensive list of overloaded methods that can be used to better transfer many different data types between activities. Have a look at &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20double[])&quot;&gt;intent.putExtra&lt;/a&gt;. This &lt;a href=&quot;https://www.raywenderlich.com/160019/android-intents-tutorial-2&quot;&gt;link&lt;/a&gt; presents the use of putExtra quite well.</source>
          <target state="translated">&lt;strong&gt;更新的&lt;/strong&gt;注释，我已经提到了&lt;a href=&quot;http://developer.android.com/reference/android/content/SharedPreferences.html&quot;&gt;SharedPreference&lt;/a&gt;的使用。 它具有简单的API，可在应用程序的所有活动中进行访问。 但这是一个笨拙的解决方案，如果您传递敏感数据，则会带来安全风险。 最好使用意图。 它具有大量的重载方法，可用于更好地在活动之间传输许多不同的数据类型。 看看&lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html#putExtra(java.lang.String,%20double[])&quot;&gt;intent.putExtra&lt;/a&gt; 。 该&lt;a href=&quot;https://www.raywenderlich.com/160019/android-intents-tutorial-2&quot;&gt;链接&lt;/a&gt;很好地展示了putExtra的用法。</target>
        </trans-unit>
        <trans-unit id="6a4330ad66ac90dbf88538aac5323059df6e85ef" translate="yes" xml:space="preserve">
          <source>A simple example where I use a main activity from another activity instance.</source>
          <target state="translated">一个简单的例子,我用另一个活动实例中的主活动。</target>
        </trans-unit>
        <trans-unit id="cddde32a6142e4c31e1ec987adf9255d51ab628d" translate="yes" xml:space="preserve">
          <source>Access that intent on next activity:</source>
          <target state="translated">进入下一次活动的意图。</target>
        </trans-unit>
        <trans-unit id="8b3cfb77f4a4633ade9ca7fae2d9b4ac1d036ce4" translate="yes" xml:space="preserve">
          <source>Also keep in mind that other approaches you might see, like statics, can be problematic because they &lt;a href=&quot;http://android-developers.blogspot.com/2009/01/avoiding-memory-leaks.html&quot;&gt;can lead to memory leaks&lt;/a&gt;. Application helps solve this too.</source>
          <target state="translated">还请记住，您可能会看到的其他方法（例如静态方法）可能会出现问题，因为它们&lt;a href=&quot;http://android-developers.blogspot.com/2009/01/avoiding-memory-leaks.html&quot;&gt;可能导致内存泄漏&lt;/a&gt; 。 应用程序也可以帮助解决此问题。</target>
        </trans-unit>
        <trans-unit id="f5af3a3106ff12444958cf40465d0fca35196123" translate="yes" xml:space="preserve">
          <source>Alternatively you could use an &lt;code&gt;Intent&lt;/code&gt;. In Vapor API you can also use the chainable overloaded &lt;code&gt;.put(...)&lt;/code&gt; method on a &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/content/VaporIntent.java&quot;&gt;&lt;code&gt;VaporIntent&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;Intent&lt;/code&gt; 。 在Vapor API中，您还可以在 &lt;code&gt;.put(...)&lt;/code&gt; 使用可链接的重载.put（...）方法：</target>
        </trans-unit>
        <trans-unit id="00134ba544f0105569635190e35f5e02b4d47b45" translate="yes" xml:space="preserve">
          <source>Although not mentioned in the documentation, &lt;a href=&quot;https://stackoverflow.com/a/4433843/3681880&quot;&gt;this answer&lt;/a&gt; recommends using a String resource to avoid dependencies between activities.</source>
          <target state="translated">尽管文档中未提及，但&lt;a href=&quot;https://stackoverflow.com/a/4433843/3681880&quot;&gt;此答案&lt;/a&gt;建议使用String资源，以避免活动之间的依赖关系。</target>
        </trans-unit>
        <trans-unit id="6766c76f225354ab4408ce0b8fa5e5d69bc48fbd" translate="yes" xml:space="preserve">
          <source>Always put keys in constant file for more managed way.</source>
          <target state="translated">总是把钥匙放在固定的文件中,以便更多的管理方式。</target>
        </trans-unit>
        <trans-unit id="d031df1412d19860296b9e9df7309415acc0642a" translate="yes" xml:space="preserve">
          <source>And pass it as an extra, as mentioned in the other answers. You can retrieve extras from your &lt;code&gt;Activity&lt;/code&gt;, and furthermore if you are using &lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/app/VaporActivity.java&quot;&gt;&lt;code&gt;VaporActivity&lt;/code&gt;&lt;/a&gt; this is done for you automatically so you can use:</source>
          <target state="translated">如其他答案中所述，将其作为额外的一项传递。 您可以从 &lt;code&gt;Activity&lt;/code&gt; 中检索其他内容，此外，如果您使用的是&lt;a href=&quot;https://github.com/HodeCode/Vapor-API/blob/80e64900f429e515dd2fe045a33cd0b5d21396c5/app/VaporActivity.java&quot;&gt; &lt;code&gt;VaporActivity&lt;/code&gt; ,&lt;/a&gt;此操作会自动完成，因此您可以使用：</target>
        </trans-unit>
        <trans-unit id="c3b81a4dfb415495243f035799ec9b60004adf11" translate="yes" xml:space="preserve">
          <source>And send this Intent. In the target Activity your field will be available as:</source>
          <target state="translated">并发送这个Intent。在目标活动中,你的字段将作为。</target>
        </trans-unit>
        <trans-unit id="97443e4703452552473d2b439394d7e200ef0046" translate="yes" xml:space="preserve">
          <source>Another way could be using &lt;em&gt;singleton pattern&lt;/em&gt; also:</source>
          <target state="translated">另一种方法也可以使用&lt;em&gt;单例模式&lt;/em&gt; ：</target>
        </trans-unit>
        <trans-unit id="eb96d2a6585fc602380bbf18c7aad2634249d8dc" translate="yes" xml:space="preserve">
          <source>Another way is to use a public static field in which you store data, i.e.:</source>
          <target state="translated">另一种方法是使用一个公共静态字段来存储数据,即。</target>
        </trans-unit>
        <trans-unit id="114836ee60fb21e3a68d7850e9974c9898c3277e" translate="yes" xml:space="preserve">
          <source>Any alternative to this case</source>
          <target state="translated">除此案外,是否有其他选择</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="e3cb9dab4ff412c0200893c4191f894a0f6d1b21" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;finish()&lt;/code&gt; to close the Second Activity.</source>
          <target state="translated">调用 &lt;code&gt;finish()&lt;/code&gt; 关闭第二个活动。</target>
        </trans-unit>
        <trans-unit id="c6d1bdc6847d371342d0a21b50fdb8f6beced719" translate="yes" xml:space="preserve">
          <source>Charlie Collins gave me a perfect &lt;a href=&quot;https://stackoverflow.com/a/2098936/1885518&quot;&gt;answer&lt;/a&gt; using the &lt;code&gt;Application.class&lt;/code&gt;. I was not aware that we could subclass it that easily. Here is a simplified example using a custom application class.</source>
          <target state="translated">Charlie Collins使用 &lt;code&gt;Application.class&lt;/code&gt; 给了我一个完美的&lt;a href=&quot;https://stackoverflow.com/a/2098936/1885518&quot;&gt;答案&lt;/a&gt; 。 我不知道我们可以轻易地将其子类化。 这是使用自定义应用程序类的简化示例。</target>
        </trans-unit>
        <trans-unit id="68c0c94e8cab9aae78ffeaa106c25093aedbd70a" translate="yes" xml:space="preserve">
          <source>Create a simple &quot;helper&quot; class (factory for your Intents), like this:</source>
          <target state="translated">创建一个简单的 &quot;助手 &quot;类(Intents的工厂),就像这样。</target>
        </trans-unit>
        <trans-unit id="6e4aaabd92f2e99034820908067ae0295de8273f" translate="yes" xml:space="preserve">
          <source>Destination Class (NewActivity class):</source>
          <target state="translated">目的地类(NewActivity类)。</target>
        </trans-unit>
        <trans-unit id="2d137f2f8e86a9a23937d462edb718787219d5e4" translate="yes" xml:space="preserve">
          <source>Done! Cool :) I just want to share my experience. If you working on small project this shouldn't be the big problem. But when your working on big project, it really pain when you want to do refactoring or fixing bugs.</source>
          <target state="translated">好了!很好)我只是想分享一下我的经验。如果你在做小项目,这应该不是什么大问题。但是当你在做大项目的时候,当你想做重构或修复BUG的时候,就会很痛苦。</target>
        </trans-unit>
        <trans-unit id="f4c193bf1771d10531bdb7934817cbeed35a9c79" translate="yes" xml:space="preserve">
          <source>E.g.
&lt;code&gt;bundle.getString(&quot;key&quot;)&lt;/code&gt;,&lt;code&gt;bundle.getDouble(&quot;key&quot;)&lt;/code&gt; ,&lt;code&gt;bundle.getInt(&quot;key&quot;)&lt;/code&gt; etc.</source>
          <target state="translated">例如 &lt;code&gt;bundle.getString(&quot;key&quot;)&lt;/code&gt; ， &lt;code&gt;bundle.getDouble(&quot;key&quot;)&lt;/code&gt; ， &lt;code&gt;bundle.getInt(&quot;key&quot;)&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="f936b1aa74e65dae1cd7181e26c0eefa89758507" translate="yes" xml:space="preserve">
          <source>Extract the data you got from the return &lt;code&gt;Intent&lt;/code&gt;. The data is extracted using a key-value pair. I could use any string for the key but I'll use the predefined &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; since I'm sending text.</source>
          <target state="translated">提取从 &lt;code&gt;Intent&lt;/code&gt; 返回中获得的数据。 使用键值对提取数据。 我可以使用任何字符串作为键，但是由于要发送文本，因此将使用预定义的 &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b7a10721937a8ed747927220149c6e4fface761" translate="yes" xml:space="preserve">
          <source>Extract the data&amp;hellip;</source>
          <target state="translated">提取数据&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="cff6c60591921aa0e2cccb5fd250074f999dea20" translate="yes" xml:space="preserve">
          <source>Final step, here is how I receive the data in &lt;code&gt;HomeActivity&lt;/code&gt;</source>
          <target state="translated">最后一步，这是我如何在 &lt;code&gt;HomeActivity&lt;/code&gt; 中接收数据</target>
        </trans-unit>
        <trans-unit id="6dadbc1ed9272b3f7f01909a232ff72dce25a0f7" translate="yes" xml:space="preserve">
          <source>First Activity:</source>
          <target state="translated">第一次活动:</target>
        </trans-unit>
        <trans-unit id="e13f3df986bafc200ac632a3e6c7a38520b661be" translate="yes" xml:space="preserve">
          <source>First you have to attach the data to the intent object with the use of the &lt;code&gt;Bundle&lt;/code&gt; class. Then call the activity using either &lt;code&gt;startActivity()&lt;/code&gt; or &lt;code&gt;startActivityForResult()&lt;/code&gt; methods.</source>
          <target state="translated">首先，您必须使用 &lt;code&gt;Bundle&lt;/code&gt; 类将数据附加到意图对象。 然后使用 &lt;code&gt;startActivity()&lt;/code&gt; 或 &lt;code&gt;startActivityForResult()&lt;/code&gt; 方法调用活动。</target>
        </trans-unit>
        <trans-unit id="482e938c66c57260d4f901ca7a5543edf6b0970a" translate="yes" xml:space="preserve">
          <source>First, I create my &lt;code&gt;HomeIntent&lt;/code&gt;</source>
          <target state="translated">首先，我创建我的 &lt;code&gt;HomeIntent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="add87083a5b763c0765ea0575fe36883dbd13425" translate="yes" xml:space="preserve">
          <source>For getting a value, use this in an Activity:</source>
          <target state="translated">对于获取一个值,在活动中使用这个。</target>
        </trans-unit>
        <trans-unit id="b13e70feeda4eb238eb4b0fbe89d2e5a7ff1e83f" translate="yes" xml:space="preserve">
          <source>For setting a value:</source>
          <target state="translated">用于设定一个值。</target>
        </trans-unit>
        <trans-unit id="ba35b2e13fe575cc0708ee2dbee1e0f2499d621c" translate="yes" xml:space="preserve">
          <source>From your FirstActivity</source>
          <target state="translated">来自您的FirstActivity</target>
        </trans-unit>
        <trans-unit id="f5fa9b68f74a45552a5cbaec95a2c01f74e574ce" translate="yes" xml:space="preserve">
          <source>Get the bundle</source>
          <target state="translated">捆绑购买</target>
        </trans-unit>
        <trans-unit id="e7cbde1028495db5b93c103455fedcb762499c55" translate="yes" xml:space="preserve">
          <source>Give the &lt;code&gt;android:name&lt;/code&gt; attribute to use your own application class.</source>
          <target state="translated">提供 &lt;code&gt;android:name&lt;/code&gt; 属性以使用您自己的应用程序类。</target>
        </trans-unit>
        <trans-unit id="9507a4524ce07b08a50f4e1acac31fc03694bfa6" translate="yes" xml:space="preserve">
          <source>Here is how I pass the data in my LoginActivity</source>
          <target state="translated">下面是我如何在我的LoginActivity中传递数据的方法</target>
        </trans-unit>
        <trans-unit id="37a9d2da1c6f8e2c0f57a7140ce9571a1d80a48f" translate="yes" xml:space="preserve">
          <source>Here is my best practice and it helps a lot when the project is huge and complex.</source>
          <target state="translated">这里是我的最佳实践,当项目庞大而复杂的时候,它的帮助很大。</target>
        </trans-unit>
        <trans-unit id="1a002890bd5f1f4bc93ae7047a72cbe3902b000a" translate="yes" xml:space="preserve">
          <source>Here we have Employee Model</source>
          <target state="translated">这里我们有员工模式</target>
        </trans-unit>
        <trans-unit id="62d036c6a0573038b63a65addf92989132051df6" translate="yes" xml:space="preserve">
          <source>Hope that is of interest to some :)</source>
          <target state="translated">希望有些人对此有兴趣 :)</target>
        </trans-unit>
        <trans-unit id="6c2d547761d122b2cc8a9fa76b1c8042490af5c3" translate="yes" xml:space="preserve">
          <source>How do I pass data between Activities in Android application</source>
          <target state="translated">如何在Android应用程序中的活动之间传递数据?</target>
        </trans-unit>
        <trans-unit id="801c441e0fce738efc88d096d30fc58b2eec1079" translate="yes" xml:space="preserve">
          <source>I have a scenario where, after logging in through a login page, there will be a sign-out &lt;code&gt;button&lt;/code&gt; on each &lt;code&gt;activity&lt;/code&gt;.</source>
          <target state="translated">我有一种情况，在通过登录页面登录后，每个 &lt;code&gt;activity&lt;/code&gt; 上都会有一个退出 &lt;code&gt;button&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="191f6a0efd6c49e211bc872f83c865ebaebc0119" translate="yes" xml:space="preserve">
          <source>I recently released &lt;a href=&quot;https://github.com/HodeCode/Vapor-API&quot;&gt;Vapor API&lt;/a&gt;, a jQuery flavored Android framework that makes all sorts of tasks like this simpler. As mentioned, &lt;code&gt;SharedPreferences&lt;/code&gt; is one way you could do this.</source>
          <target state="translated">我最近发布了&lt;a href=&quot;https://github.com/HodeCode/Vapor-API&quot;&gt;Vapor API&lt;/a&gt; ，这是一个jQuery风格的Android框架，它使诸如此类的各种任务变得更加简单。 如前所述， &lt;code&gt;SharedPreferences&lt;/code&gt; 是您可以执行此操作的一种方法。</target>
        </trans-unit>
        <trans-unit id="e9166f055a5c3d20ca12ccbe2cafd74e4e778a01" translate="yes" xml:space="preserve">
          <source>I use static fields in a class, and get/set them:</source>
          <target state="translated">我在一个类中使用了静态字段,并将其getset。</target>
        </trans-unit>
        <trans-unit id="6efbf4da853c756fa16beab23c3a3d9877713c64" translate="yes" xml:space="preserve">
          <source>If one of the &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; Strings does not suit your needs, you can define your own at the beginning of the first activity.</source>
          <target state="translated">如果一个 &lt;code&gt;Intent.EXTRA_*&lt;/code&gt; 字符串不适合您的需求，则可以在第一个活动开始时定义自己的字符串。</target>
        </trans-unit>
        <trans-unit id="74648e19c0596322112fdcf1454b1d38d1fc715b" translate="yes" xml:space="preserve">
          <source>If you don't have the required session id, then remove sharedpreferences:</source>
          <target state="translated">如果你没有所需的session id,那就删除sharepreferences。</target>
        </trans-unit>
        <trans-unit id="87c6f0dc9e80304ed1a75ca2d3e6a678aaa57702" translate="yes" xml:space="preserve">
          <source>In passing data between activities, my preferred approach is to create a static method for the relevant activity that includes the required parameters launch the intent. Which then provides easily setup and retrieve parameters. So it can look like this</source>
          <target state="translated">在活动之间传递数据时,我的首选方法是为相关的活动创建一个静态方法,其中包含所需的参数启动意图。这样就可以方便地设置和检索参数。因此,它可以看起来是这样的</target>
        </trans-unit>
        <trans-unit id="958f356615e03ef90e3a2299cb30cd18b6353ef2" translate="yes" xml:space="preserve">
          <source>In your activity. When you want to &quot;save&quot; some data in a &quot;session&quot; just use the following:</source>
          <target state="translated">在你的活动中。当你想在 &quot;会话 &quot;中 &quot;保存 &quot;一些数据时,只需使用下面的。</target>
        </trans-unit>
        <trans-unit id="9397e38b5c64340e87a78c545a1a95a8c8b789f8" translate="yes" xml:space="preserve">
          <source>In your current Activity, create a new &lt;code&gt;Intent&lt;/code&gt;:</source>
          <target state="translated">在您当前的活动中，创建一个新的 &lt;code&gt;Intent&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0fb801c75f878ef442515ab91d7964613f280d92" translate="yes" xml:space="preserve">
          <source>Including the package name is just a convention if you are only using the key in your own app. But it is a necessity to avoid naming conflicts if you are creating some sort of service that other apps can call with an Intent.</source>
          <target state="translated">如果你只是在你自己的app中使用这个键的话,包括包名只是一个惯例。但如果你要创建某种服务,而其他应用可以用Intent来调用,为了避免命名冲突,这是必要的。</target>
        </trans-unit>
        <trans-unit id="91a39811c53cdcbaa0c30d603017f5b26cfd4ed6" translate="yes" xml:space="preserve">
          <source>Inside FirstActivity:</source>
          <target state="translated">FirstActivity内部。</target>
        </trans-unit>
        <trans-unit id="c9396634ef6b99aaa973957f25c24a34cb81738b" translate="yes" xml:space="preserve">
          <source>Inside SecondActivity</source>
          <target state="translated">在SecondActivity内部</target>
        </trans-unit>
        <trans-unit id="9c6e80ee327688adf9a36d80f51295270fd0a69a" translate="yes" xml:space="preserve">
          <source>Intent</source>
          <target state="translated">Intent</target>
        </trans-unit>
        <trans-unit id="5ffce4d389a1fb0ccb543e4f148c3863eadc53cf" translate="yes" xml:space="preserve">
          <source>It also optionally autosaves changes, and unifies the reading and writing process under-the-hood so you don't need to explicitly retrieve an Editor like you do in standard Android.</source>
          <target state="translated">它还可以选择自动保存更改,并将读取和写入过程统一在机壳下,因此你不需要像在标准Android中那样明确地检索编辑器。</target>
        </trans-unit>
        <trans-unit id="1c52378e370c18b7f3c8c47d053a5baa705a5ce8" translate="yes" xml:space="preserve">
          <source>It helps me to see things in context. Here are two examples.</source>
          <target state="translated">它能帮助我看清事情的来龙去脉。这里有两个例子。</target>
        </trans-unit>
        <trans-unit id="4b97a1cc4cde2d848838f0605a552d5704eea24b" translate="yes" xml:space="preserve">
          <source>Kotlin</source>
          <target state="translated">Kotlin</target>
        </trans-unit>
        <trans-unit id="59b86486aed4edafd59a372a9da15c32460385f0" translate="yes" xml:space="preserve">
          <source>Like this:</source>
          <target state="translated">就像这样。</target>
        </trans-unit>
        <trans-unit id="a707aa190f760150c8ff8256bff3171e748227a0" translate="yes" xml:space="preserve">
          <source>Like:</source>
          <target state="translated">Like:</target>
        </trans-unit>
        <trans-unit id="38ae06db9b3ef1579976cbac1a32d2b2cc1f26ea" translate="yes" xml:space="preserve">
          <source>Logging. Time store session id in &lt;code&gt;SharedPreferences&lt;/code&gt;</source>
          <target state="translated">正在记录。 &lt;code&gt;SharedPreferences&lt;/code&gt; 中的时间存储会话ID</target>
        </trans-unit>
        <trans-unit id="2b13150bb59eb875dca701727cc38c9ccd731a0b" translate="yes" xml:space="preserve">
          <source>Main Activity</source>
          <target state="translated">主要活动</target>
        </trans-unit>
        <trans-unit id="3d3a69f803d148023e594571872c5358024dc784" translate="yes" xml:space="preserve">
          <source>Now in your second activity retrieve your data from the bundle:</source>
          <target state="translated">现在,在你的第二个活动中,从捆绑中检索你的数据。</target>
        </trans-unit>
        <trans-unit id="b9107a134a7d28c961183694b53efaa7c56f90ab" translate="yes" xml:space="preserve">
          <source>Now on the &lt;code&gt;OnCreate&lt;/code&gt; method of your &lt;code&gt;SecondActivity&lt;/code&gt; you can fetch the extras like this.</source>
          <target state="translated">现在，在 &lt;code&gt;SecondActivity&lt;/code&gt; 的 &lt;code&gt;OnCreate&lt;/code&gt; 方法上，您可以像这样获取其他功能。</target>
        </trans-unit>
        <trans-unit id="0eb3a03b1d0787ff4da11702ea6504e55d1bb88a" translate="yes" xml:space="preserve">
          <source>Now you can simply use the &lt;strong&gt;foo&lt;/strong&gt; object like you would have used.</source>
          <target state="translated">现在，您可以像使用过的那样简单地使用&lt;strong&gt;foo&lt;/strong&gt;对象。</target>
        </trans-unit>
        <trans-unit id="7b325c769b45cd93a413e7302e481b4d2920cddf" translate="yes" xml:space="preserve">
          <source>Now you can use different bundle class methods to get values passed from FirstActivity  by Key.</source>
          <target state="translated">现在你可以使用不同的Bundle类方法来获取FirstActivity通过Key传递的值。</target>
        </trans-unit>
        <trans-unit id="38541e5b930d05d749fd33f24234be704e643f1e" translate="yes" xml:space="preserve">
          <source>On SecondActivity</source>
          <target state="translated">关于第二次活动</target>
        </trans-unit>
        <trans-unit id="4c24e75dffeb92e9f8892cb139f4a3a313270433" translate="yes" xml:space="preserve">
          <source>On clicking &lt;code&gt;sign-out&lt;/code&gt;, I will be passing the &lt;code&gt;session id&lt;/code&gt; of the signed in user to sign-out. Can anyone guide me on how to keep &lt;code&gt;session id&lt;/code&gt; available to all &lt;code&gt;activities&lt;/code&gt;?</source>
          <target state="translated">点击 &lt;code&gt;sign-out&lt;/code&gt; ，我将传递已登录用户的 &lt;code&gt;session id&lt;/code&gt; 以便退出。 谁能指导我如何使 &lt;code&gt;session id&lt;/code&gt; 可供所有 &lt;code&gt;activities&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="ea1475c8ef70f849a139f26984abc6ea59ea104c" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;onActivityResult&lt;/code&gt;. This is called when the Second Activity finishes. You can make sure that it is actually the Second Activity by checking the result code. (This is useful when you are starting multiple different activities from the same main activity.)</source>
          <target state="translated">覆盖 &lt;code&gt;onActivityResult&lt;/code&gt; 。 当第二个活动完成时，将调用此方法。 您可以通过检查结果代码来确保它实际上是第二个活动。 （当您从同一个主要活动开始多个不同的活动时，这很有用。）</target>
        </trans-unit>
        <trans-unit id="4d47579c705e3ce0308b6333fc5e0b8b02f1f541" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html&quot;&gt;Intent&lt;/a&gt; extras is a good approach as Erich noted.</source>
          <target state="translated">正如Erich指出的那样，传递&lt;a href=&quot;http://developer.android.com/reference/android/content/Intent.html&quot;&gt;Intent&lt;/a&gt; Extras是一个好方法。</target>
        </trans-unit>
        <trans-unit id="d775144a55bf7e91ef7cfbccf4a2c1def79bcdaf" translate="yes" xml:space="preserve">
          <source>Passing Data Back</source>
          <target state="translated">传回数据</target>
        </trans-unit>
        <trans-unit id="d247479c4b162f22e1950a95a4522e7d7381bf58" translate="yes" xml:space="preserve">
          <source>Passing Data Forward</source>
          <target state="translated">传递数据</target>
        </trans-unit>
        <trans-unit id="b0dae3fb81b164e0468db006efad889258446e01" translate="yes" xml:space="preserve">
          <source>Put the data that you want to send back to the previous activity into an &lt;code&gt;Intent&lt;/code&gt;. The data is stored in the &lt;code&gt;Intent&lt;/code&gt; using a key-value pair. I chose to use &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; for my key.</source>
          <target state="translated">将要发送回上一个活动的数据放入 &lt;code&gt;Intent&lt;/code&gt; 中 。 数据使用键值对存储在 &lt;code&gt;Intent&lt;/code&gt; 中 。 我选择将 &lt;code&gt;Intent.EXTRA_TEXT&lt;/code&gt; 用作密钥。</target>
        </trans-unit>
        <trans-unit id="25e7fb992e005e9c97de619e6b44b45fbf813349" translate="yes" xml:space="preserve">
          <source>Put the data you want to send in an Intent with a key-value pair. See &lt;a href=&quot;https://stackoverflow.com/a/40569184/3681880&quot;&gt;this answer&lt;/a&gt; for naming conventions for the key.</source>
          <target state="translated">将您要发送的数据与键值对一起放入Intent中。 请参阅&lt;a href=&quot;https://stackoverflow.com/a/40569184/3681880&quot;&gt;此答案&lt;/a&gt;以获取密钥的命名约定。</target>
        </trans-unit>
        <trans-unit id="0ecb891025ed958ae1cfa0fae9f5abe54061b725" translate="yes" xml:space="preserve">
          <source>Retrieve on another activity (YourActivity)</source>
          <target state="translated">在另一个活动中检索(YourActivity)。</target>
        </trans-unit>
        <trans-unit id="f79292c43430eff2892fbe0b4612e2f1abff30de" translate="yes" xml:space="preserve">
          <source>Second Activity</source>
          <target state="translated">第二次活动</target>
        </trans-unit>
        <trans-unit id="2071c51814f63287592870a47bb93b53c1905601" translate="yes" xml:space="preserve">
          <source>Second Activity:</source>
          <target state="translated">第二项活动:</target>
        </trans-unit>
        <trans-unit id="d9df9a715cab4190727861808315534cdf9cfd68" translate="yes" xml:space="preserve">
          <source>Set the global &quot;singleton&quot; reference to the application instance.</source>
          <target state="translated">将全局的 &quot;单子 &quot;引用设置为应用程序实例。</target>
        </trans-unit>
        <trans-unit id="1aa7f83614192aff8dc68b59fa386f302f46ff75" translate="yes" xml:space="preserve">
          <source>Set the result to &lt;code&gt;RESULT_OK&lt;/code&gt; and add the intent holding your data.</source>
          <target state="translated">将结果设置为 &lt;code&gt;RESULT_OK&lt;/code&gt; 并添加保存数据的意图。</target>
        </trans-unit>
        <trans-unit id="c4e1ba9d729248f07fa31c3f3d01905cf916087a" translate="yes" xml:space="preserve">
          <source>SharedPreferences</source>
          <target state="translated">SharedPreferences</target>
        </trans-unit>
        <trans-unit id="0bb28b62756d75c03361a9f59a817230be3c1f62" translate="yes" xml:space="preserve">
          <source>Signout. Time fetch session id in sharedpreferences</source>
          <target state="translated">签出。时间获取sharepreferences中的session id</target>
        </trans-unit>
        <trans-unit id="469e016b6eb19825cd15bafcfacb243a09ada917" translate="yes" xml:space="preserve">
          <source>So now we can use Intent like same old session (like in servlets or &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaServer_Pages&quot;&gt;JSP&lt;/a&gt;).</source>
          <target state="translated">因此，现在我们可以像以前的旧会话一样使用Intent（例如在servlet或&lt;a href=&quot;http://en.wikipedia.org/wiki/JavaServer_Pages&quot;&gt;JSP中&lt;/a&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b4d613ac1e81c9ecc35efd7cfeba0c6091ed9739" translate="yes" xml:space="preserve">
          <source>Source class:</source>
          <target state="translated">来源类:</target>
        </trans-unit>
        <trans-unit id="c60e0d7bb2198c66f6989cf45e7f174b8d89578d" translate="yes" xml:space="preserve">
          <source>Start another activity from this activity pass parameters via Bundle Object</source>
          <target state="translated">从这个活动开始另一个活动,通过Bundle对象传递参数。</target>
        </trans-unit>
        <trans-unit id="5d97bbcba68a9bbf264a554dfe9d1ca7c1f6c210" translate="yes" xml:space="preserve">
          <source>Start the Second Activity with &lt;code&gt;startActivity&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;startActivity&lt;/code&gt; 启动第二个活动。</target>
        </trans-unit>
        <trans-unit id="1e3db86445cd5f29ef46da20cbcdc4a448f3f404" translate="yes" xml:space="preserve">
          <source>Start the Second Activity with &lt;code&gt;startActivityForResult&lt;/code&gt;, providing it an arbitrary result code.</source>
          <target state="translated">使用 &lt;code&gt;startActivityForResult&lt;/code&gt; 启动第二个Activity，并为其提供任意结果代码。</target>
        </trans-unit>
        <trans-unit id="3c8287afb3483e919b879650e03e1552a21cd6ef" translate="yes" xml:space="preserve">
          <source>Supplemental Answer: Naming Conventions for the Key String</source>
          <target state="translated">补充答案。关键字串的命名规则</target>
        </trans-unit>
        <trans-unit id="aef05c1679d24fb346f19fd0cb257fefe73aa8cc" translate="yes" xml:space="preserve">
          <source>Suppose that I have 2 activities, &lt;code&gt;LoginActivity&lt;/code&gt; and &lt;code&gt;HomeActivity&lt;/code&gt;.
I want to pass 2 parameters (username &amp;amp; password) from &lt;code&gt;LoginActivity&lt;/code&gt; to &lt;code&gt;HomeActivity&lt;/code&gt;.</source>
          <target state="translated">假设我有2个活动， &lt;code&gt;LoginActivity&lt;/code&gt; 和 &lt;code&gt;HomeActivity&lt;/code&gt; 。 我想将2个参数（用户名和密码）从 &lt;code&gt;LoginActivity&lt;/code&gt; 传递给 &lt;code&gt;HomeActivity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ceed2a0698eb712e10202a2506bc17dcfbc9926" translate="yes" xml:space="preserve">
          <source>That is very useful, because one time you save the value and then retrieve anywhere of activity.</source>
          <target state="translated">这是非常有用的,因为有一次你保存价值,然后在任何地方检索活动。</target>
        </trans-unit>
        <trans-unit id="d6e5f3ce9be6985f80525dcf45bd128616a8cd29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://developer.android.com/guide/topics/intents/intents-filters.html&quot;&gt;docs&lt;/a&gt; for Intents has more information (look at the section titled &quot;Extras&quot;).</source>
          <target state="translated">Intents &lt;a href=&quot;http://developer.android.com/guide/topics/intents/intents-filters.html&quot;&gt;文档&lt;/a&gt;提供了更多信息（请参阅标题为&amp;ldquo;其他&amp;rdquo;的部分）。</target>
        </trans-unit>
        <trans-unit id="57f6a542d7f9d1ed69ddff25fa604f10b9777f77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://developer.android.com/reference/android/app/Application.html&quot;&gt;Application&lt;/a&gt; object is another way though, and it is sometimes easier when dealing with the same state across multiple activities (as opposed to having to get/put it everywhere), or objects more complex than primitives and Strings.</source>
          <target state="translated">但是， &lt;a href=&quot;http://developer.android.com/reference/android/app/Application.html&quot;&gt;Application&lt;/a&gt;对象是另一种方式，在多个活动中处理同一状态（而不是必须到处获取/放置该状态）或对象比原始类型和String更复杂时，有时会更容易。</target>
        </trans-unit>
        <trans-unit id="8563a4d0c62edcc0ff48c0d840253718a507e933" translate="yes" xml:space="preserve">
          <source>The actual process of passing data has already been answered, however most of the answers use hard coded strings for the key name in the Intent. This is usually fine when used only within your app. However, the &lt;a href=&quot;https://developer.android.com/guide/components/intents-filters.html#Building&quot;&gt;documentation recommends&lt;/a&gt; using the &lt;code&gt;EXTRA_*&lt;/code&gt; constants for standardized data types.</source>
          <target state="translated">传递数据的实际过程已经得到解答，但是大多数答案都使用硬编码字符串作为Intent中的键名称。 通常，仅在您的应用程序中使用时才可以。 但是， &lt;a href=&quot;https://developer.android.com/guide/components/intents-filters.html#Building&quot;&gt;文档建议&lt;/a&gt;对标准数据类型使用 &lt;code&gt;EXTRA_*&lt;/code&gt; 常量。</target>
        </trans-unit>
        <trans-unit id="0bb152b293a5bb95cafe440f8ab477d51c208ed9" translate="yes" xml:space="preserve">
          <source>The easiest way to do this would be to pass the session id to the signout activity in the &lt;code&gt;Intent&lt;/code&gt; you're using to start the activity:</source>
          <target state="translated">最简单的方法是将会话ID传递到您用来启动活动的 &lt;code&gt;Intent&lt;/code&gt; 中的注销活动：</target>
        </trans-unit>
        <trans-unit id="f3f680ce6c4918b4e5cc224292a73f39c98f4860" translate="yes" xml:space="preserve">
          <source>The most convenient way to pass data between activities is by passing intents. In the first activity from where you want to send data, you should add code,</source>
          <target state="translated">在活动之间传递数据最方便的方法是传递意图。在第一个活动中,从你想发送数据的地方,你应该添加代码。</target>
        </trans-unit>
        <trans-unit id="d7196e38e5b82ea6fea703cfb7e0dbbb169bffdc" translate="yes" xml:space="preserve">
          <source>The passing of data between activities is mainly by means of an intent object.</source>
          <target state="translated">活动之间的数据传递主要是通过意向对象来实现的。</target>
        </trans-unit>
        <trans-unit id="8bd6bd2f6253d4628da08bc08615bfbcc13697a3" translate="yes" xml:space="preserve">
          <source>The second way is:</source>
          <target state="translated">第二种方式是。</target>
        </trans-unit>
        <trans-unit id="4d90f3c07992925129698958691c7cdda4e4e5cf" translate="yes" xml:space="preserve">
          <source>The standard approach.</source>
          <target state="translated">标准的方法。</target>
        </trans-unit>
        <trans-unit id="fbe87168b33c862c9cf5cb66145c061b41f2a787" translate="yes" xml:space="preserve">
          <source>Then in the new Activity, retrieve those values:</source>
          <target state="translated">然后在新的活动中,检索这些值。</target>
        </trans-unit>
        <trans-unit id="d533ddf48e5578bbafd980adc1e07588473500c4" translate="yes" xml:space="preserve">
          <source>Then in the next Acitvity(SecondActivity), you should retrieve the data from the intent using the following code.</source>
          <target state="translated">然后在下一个Acitvity(SecondActivity)中,你应该使用下面的代码从意图中检索数据。</target>
        </trans-unit>
        <trans-unit id="4040f653da1dadefa439c9e7b5682e650a4df748" translate="yes" xml:space="preserve">
          <source>Then you can create an intent for the intended activity and ensure you have all the parameters. You can adapt for fragments to. A simple example above, but you get the idea.</source>
          <target state="translated">然后,你可以创建一个意向活动的意图,并确保你拥有所有的参数。你可以对片段进行适配,以。上面一个简单的例子,但你明白了。</target>
        </trans-unit>
        <trans-unit id="b3b8012beb23f20a279f37d5c48ec30d9a2294da" translate="yes" xml:space="preserve">
          <source>This is ok for simple kind data type.
But if u want to pass complex data in between activity u need to serialize it first.</source>
          <target state="translated">这对于简单的数据类型是可以的。但如果你想在活动之间传递复杂的数据,你需要先将其序列化。</target>
        </trans-unit>
        <trans-unit id="b5d453a61067b8e839a65e9063fc1f191d87c8e1" translate="yes" xml:space="preserve">
          <source>This will be the factory for all your Intents. Everytime you need a new Intent, create a static factory method in IntentHelper. To create a new Intent you should just say it like this:</source>
          <target state="translated">这将是你所有Intent的工厂。每次你需要一个新的Intent时,在IntentHelper中创建一个静态的工厂方法。要创建一个新的Intent,你应该这样说。</target>
        </trans-unit>
        <trans-unit id="f3a5c2caaa47ec3ba54eccc20b7bf9b06dfc9977" translate="yes" xml:space="preserve">
          <source>To get them -</source>
          <target state="translated">要得到它们 --</target>
        </trans-unit>
        <trans-unit id="0c088e371dd51b2e9ebdfbfc7c8793968913939b" translate="yes" xml:space="preserve">
          <source>To retrieve them at the other end in the &lt;code&gt;Activity&lt;/code&gt; you switch to.</source>
          <target state="translated">要在&amp;ldquo; &lt;code&gt;Activity&lt;/code&gt; 的另一端检索它们，请切换到。</target>
        </trans-unit>
        <trans-unit id="76ee038703849ccda45bce276e1c6e099de57a9e" translate="yes" xml:space="preserve">
          <source>To save session id -</source>
          <target state="translated">要保存会话ID -</target>
        </trans-unit>
        <trans-unit id="f86eb23d52b2d11cbca7332577e0c2e98a3cfced" translate="yes" xml:space="preserve">
          <source>Try to do the following:</source>
          <target state="translated">尽量做到以下几点:</target>
        </trans-unit>
        <trans-unit id="a01be5506ad7701dad3213733f7ab8f0b08a9c65" translate="yes" xml:space="preserve">
          <source>Use this as a global reference holder. It works fine within a same process.</source>
          <target state="translated">用它作为全局参考的持有人。在同一个过程中,它的效果很好。</target>
        </trans-unit>
        <trans-unit id="9279a1523198a64bb952468120e769f35ae24749" translate="yes" xml:space="preserve">
          <source>Use this technique to pass variables from one Activity to the other.</source>
          <target state="translated">使用此技术将变量从一个Activity传递到另一个Activity。</target>
        </trans-unit>
        <trans-unit id="d205e2ff8e3de9a60315420aa52c74c6a6cbff9f" translate="yes" xml:space="preserve">
          <source>Using Intent:</source>
          <target state="translated">使用意向。</target>
        </trans-unit>
        <trans-unit id="8977cc576439126e69df1d9bddc6e708ed2920fb" translate="yes" xml:space="preserve">
          <source>You can also pass custom class objects by making a &lt;strong&gt;parcelable&lt;/strong&gt; class. Best way to make it parcelable is to write your class and then simply paste it to a site like &lt;a href=&quot;http://www.parcelabler.com/&quot;&gt;http://www.parcelabler.com/&lt;/a&gt;. Click on build and you will get new code. Copy all of this and replace the original class contents. 
Then-</source>
          <target state="translated">您还可以通过创建可&lt;strong&gt;拆分的&lt;/strong&gt;类来传递自定义类对象。 使其可拆分的最佳方法是编写您的类，然后将其简单地粘贴到&lt;a href=&quot;http://www.parcelabler.com/&quot;&gt;http://www.parcelabler.com/之&lt;/a&gt;类的网站上 。 单击构建，您将获得新代码。 复制所有这些内容并替换原始的类内容。 然后-</target>
        </trans-unit>
        <trans-unit id="afac6faa4c2dc162d062b42e4b5df3044d73fec5" translate="yes" xml:space="preserve">
          <source>You can extend Application, and then set/get whatever you want there and access it from any Activity (in the same application) with &lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#getApplication%28%29&quot;&gt;getApplication()&lt;/a&gt;.</source>
          <target state="translated">您可以扩展Application，然后在其中设置/获取所需内容，并使用&lt;a href=&quot;http://developer.android.com/reference/android/app/Activity.html#getApplication%28%29&quot;&gt;getApplication（）&lt;/a&gt;从任何Activity（在同一应用程序中）访问它。</target>
        </trans-unit>
        <trans-unit id="04247b5714a670781a9d184de4f930238f56c18b" translate="yes" xml:space="preserve">
          <source>You can find more information about it, with an example from the blog post &lt;em&gt;&lt;a href=&quot;http://codeglympse.blogspot.in/2012/10/passing-data-to-activity.html&quot;&gt;Passing data to an Activity&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">您可以通过博客文章&amp;ldquo;将&lt;em&gt;&lt;a href=&quot;http://codeglympse.blogspot.in/2012/10/passing-data-to-activity.html&quot;&gt;数据传递给Activity&amp;rdquo;中&lt;/a&gt;&lt;/em&gt;的示例找到有关它的更多信息。</target>
        </trans-unit>
        <trans-unit id="2c6268214eaac767578cc1e5b385b6d4337bb868" translate="yes" xml:space="preserve">
          <source>You can pass data between activities in application in 3 ways</source>
          <target state="translated">你可以通过3种方式在应用程序中的活动之间传递数据</target>
        </trans-unit>
        <trans-unit id="2c21295f9dbf853539df97edd8ad87f7adcb08e6" translate="yes" xml:space="preserve">
          <source>You can retrieve it in another activity. Two ways:</source>
          <target state="translated">你可以在其他活动中找回它。两种方式。</target>
        </trans-unit>
        <trans-unit id="d586e993f0eefa58c86cbfc8ce479bd15cd6b5a9" translate="yes" xml:space="preserve">
          <source>You can send data between activities using intent object.
Consider you have two activities namely &lt;code&gt;FirstActivity&lt;/code&gt; and &lt;code&gt;SecondActivity&lt;/code&gt;.</source>
          <target state="translated">您可以使用Intent对象在活动之间发送数据。 考虑您有两个活动，即 &lt;code&gt;FirstActivity&lt;/code&gt; 和 &lt;code&gt;SecondActivity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a5cf318cde3137074d5c2b0aee4d1376771b882" translate="yes" xml:space="preserve">
          <source>You can try Shared Preference, it may be a good alternative for sharing data between the activities</source>
          <target state="translated">你可以尝试共享偏好,这可能是一个很好的选择,可以在活动之间共享数据</target>
        </trans-unit>
        <trans-unit id="47dc9c970bda05aca7077b755ea158737f519601" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Intent&lt;/code&gt;</source>
          <target state="translated">您可以使用 &lt;code&gt;Intent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38769364ae30ab998c9e5527482c36982885adc1" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;SharedPreferences&lt;/code&gt;...</source>
          <target state="translated">您可以使用 &lt;code&gt;SharedPreferences&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="825a74e3e07a638da4e7186611592595b37d4552" translate="yes" xml:space="preserve">
          <source>You can use Gson lib provided by google to serialize the complex data 
like this</source>
          <target state="translated">你可以使用google提供的Gson lib对复杂的数据进行序列化,就像这样的复杂数据</target>
        </trans-unit>
        <trans-unit id="dd8c1085a4c8ab4dc979ce6ba4e8f6a70946930a" translate="yes" xml:space="preserve">
          <source>You just have to send extras while calling your intent.</source>
          <target state="translated">你只需在调用你的意向时发送额外的东西就可以了。</target>
        </trans-unit>
        <trans-unit id="8dfce03149d43cf7b293ce21f2fcbdd498068c26" translate="yes" xml:space="preserve">
          <source>You should also import</source>
          <target state="translated">你还应该导入</target>
        </trans-unit>
        <trans-unit id="c400be3a2201ae1d77652bb6cf80cac53065ec7b" translate="yes" xml:space="preserve">
          <source>You use &lt;code&gt;getIntent()&lt;/code&gt; to get the &lt;code&gt;Intent&lt;/code&gt; that started the second activity. Then you can extract the data with &lt;code&gt;getExtras()&lt;/code&gt; and the key you defined in the first activity. Since our data is a String we will just use &lt;code&gt;getStringExtra&lt;/code&gt; here.</source>
          <target state="translated">您可以使用 &lt;code&gt;getIntent()&lt;/code&gt; 获取启动第二个活动的 &lt;code&gt;Intent&lt;/code&gt; 。 然后，您可以使用 &lt;code&gt;getExtras()&lt;/code&gt; 和您在第一个活动中定义的键提取数据。 由于我们的数据是字符串，因此我们将在此处使用 &lt;code&gt;getStringExtra&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b273febd3a27dcb081c3db547b2b1e5a29e64a0f" translate="yes" xml:space="preserve">
          <source>and get the result in NextActivity like-</source>
          <target state="translated">并在NextActivity中得到结果,例如</target>
        </trans-unit>
        <trans-unit id="3a6338382cf8c0a31f7c639a5d031bdb4feb2553" translate="yes" xml:space="preserve">
          <source>passing data in intent have some limit. For large amount of data you can use Application level data sharing and by storing it in SharedPreference makes your app size increase</source>
          <target state="translated">在意图中传递数据有一定的限制。对于大量的数据,你可以使用应用级的数据共享,通过存储在SharedPreference中,使你的应用程序的大小增加。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
