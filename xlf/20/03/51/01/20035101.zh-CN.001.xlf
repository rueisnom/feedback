<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/20035101">
    <body>
      <group id="20035101">
        <trans-unit id="7f18be38a68c628c3f20fa0089c9d834c28ec0ab" translate="yes" xml:space="preserve">
          <source>(The header &lt;code&gt;Referer&lt;/code&gt; has the same value as &lt;code&gt;Origin&lt;/code&gt;). And now in Chrome's &lt;em&gt;Console &amp;amp; Networks&lt;/em&gt; tab you will see:</source>
          <target state="translated">（标头 &lt;code&gt;Referer&lt;/code&gt; 具有与 &lt;code&gt;Origin&lt;/code&gt; 相同的值）。 现在，在Chrome的&amp;ldquo; &lt;em&gt;控制台和网络&amp;rdquo;&lt;/em&gt;标签中，您将看到：</target>
        </trans-unit>
        <trans-unit id="1cde63b90ae7bf63cf746f1c1e0d7fb3519452e8" translate="yes" xml:space="preserve">
          <source>3rd party services that allow a request to circumvent CORS</source>
          <target state="translated">允许请求规避CORS的第三方服务</target>
        </trans-unit>
        <trans-unit id="9a3ebbdf20ffce164f3dfeb7fdcfbed385251741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Origin=null&lt;/code&gt; is set when you open HTML content from a local directory, and it sends a request. The same situation is when you send a request inside an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, like in the below snippet (but here the &lt;code&gt;Host&lt;/code&gt; header is not set at all) - in general, everywhere the HTML specification says opaque origin, you can translate that to &lt;code&gt;Origin=null&lt;/code&gt;. More information about this you can find &lt;a href=&quot;https://stackoverflow.com/questions/42239643/when-do-browsers-send-the-origin-header-when-do-browsers-set-the-origin-to-null/42242802#42242802&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">当您从本地目录打开HTML内容时，将设置 &lt;code&gt;Origin=null&lt;/code&gt; 并发送请求。 同样的情况是，当您在 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 内部发送请求时，如下面的代码片段所示（但这里根本没有设置 &lt;code&gt;Host&lt;/code&gt; 标头）-通常，在HTML规范中所有显示不透明来源的地方，都可以将其转换为 &lt;code&gt;Origin=null&lt;/code&gt; 。 有关此的更多信息，请参见&lt;a href=&quot;https://stackoverflow.com/questions/42239643/when-do-browsers-send-the-origin-header-when-do-browsers-set-the-origin-to-null/42242802#42242802&quot;&gt;此处&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ec492510b3d97552a936d07588cba810b258893" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$.ajax({type: &quot;POST&quot;&lt;/strong&gt; - calls &lt;strong&gt;OPTIONS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;$ .ajax（{type：&amp;ldquo; POST&amp;rdquo;&lt;/strong&gt; -调用&lt;strong&gt;OPTIONS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3580fafd0e7477a9a0bbd30504967645497262f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$.post(&lt;/strong&gt; - Calls &lt;strong&gt;POST&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;$ .post（&lt;/strong&gt; -呼叫&lt;strong&gt;POST&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81317f7a6dcb1785f348c7e570f1d34f43cc9e93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For C# web services - &lt;a href=&quot;https://en.wikipedia.org/wiki/ASP.NET_MVC_Framework#Apache_License_2.0_release&quot;&gt;Web API&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;对于C＃Web服务&lt;a href=&quot;https://en.wikipedia.org/wiki/ASP.NET_MVC_Framework#Apache_License_2.0_release&quot;&gt;-Web API&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89fe4aabf84d90fe558c36be0bbf89d63f71f291" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mod note&lt;/strong&gt;: This question is about why Postman is not subject to CORS restrictions in the same way an XMLHttpRequest is. This question is &lt;strong&gt;not&lt;/strong&gt; about how to fix a &quot;No 'Access-Control-Allow-Origin'...&quot; error.</source>
          <target state="translated">&lt;strong&gt;注释&lt;/strong&gt; ：这个问题是关于为什么Postman不受XMLHttpRequest一样的CORS限制。 此问题与如何解决&amp;ldquo;无'Access-Control-Allow-Origin'...&amp;rdquo;错误&lt;strong&gt;无关&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="93b6dcdfad5129b101e0b36472161f5fa1bd8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are looking for downloading content &lt;strong&gt;from a third-party website&lt;/strong&gt; then &lt;strong&gt;this will not help you&lt;/strong&gt;.  You can try the following code, but not JavaScript.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您&lt;strong&gt;要从第三方网站&lt;/strong&gt;下载内容&lt;strong&gt;，&lt;/strong&gt;那么&lt;strong&gt;这将无济于事&lt;/strong&gt; 。 您可以尝试以下代码，但不能尝试JavaScript。</target>
        </trans-unit>
        <trans-unit id="36297858886c52a535b06f7007e6ac095e3ac042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Please stop posting&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;请停止发布&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="5221213f5f9722f0a74d0702a45ab2ba3f95d811" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution:&lt;/strong&gt; Add &lt;strong&gt;@CrossOrigin(&quot;*&quot;)&lt;/strong&gt; annotation on top of respective Controller Class.</source>
          <target state="translated">&lt;strong&gt;解决方案：&lt;/strong&gt;在各个Controller类的顶部添加&lt;strong&gt;@CrossOrigin（&amp;ldquo; *&amp;rdquo;）&lt;/strong&gt;批注。</target>
        </trans-unit>
        <trans-unit id="3308305126ca2adc7b3fc97432f169edc681911e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; Using &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; can make your API/website vulnerable to &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;cross-site request forgery&lt;/a&gt; (CSRF) attacks. Make certain you &lt;a href=&quot;https://stackoverflow.com/questions/43154170/is-it-safe-to-enable-cors-to-for-a-public-and-readonly-webservice&quot;&gt;understand the risks&lt;/a&gt; before using this code.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;使用 &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; 会使您的API /网站容易受到&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;跨站点请求伪造&lt;/a&gt; （CSRF）攻击。 在使用此代码之前，请确保您&lt;a href=&quot;https://stackoverflow.com/questions/43154170/is-it-safe-to-enable-cors-to-for-a-public-and-readonly-webservice&quot;&gt;了解风险&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4329bc47369886f8c0a42fd18a223508cda8394" translate="yes" xml:space="preserve">
          <source>A simple application will look like:</source>
          <target state="translated">一个简单的应用程序将看起来像:</target>
        </trans-unit>
        <trans-unit id="366363d0204b6ef62f7b0c67752b489e8b1c9f87" translate="yes" xml:space="preserve">
          <source>Angular 4 issue - please refer to &lt;a href=&quot;http://www.hubfly.com/blog/solutions/how-to-fix-angular-4-api-call-issues/&quot;&gt;http://www.hubfly.com/blog/solutions/how-to-fix-angular-4-api-call-issues/&lt;/a&gt;</source>
          <target state="translated">Angular 4问题-请参考&lt;a href=&quot;http://www.hubfly.com/blog/solutions/how-to-fix-angular-4-api-call-issues/&quot;&gt;http://www.hubfly.com/blog/solutions/how-to-fix-angular-4-api-call-issues/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13100e65066097463de30b1e0b82fb643a8b0ee8" translate="yes" xml:space="preserve">
          <source>Applying a CORS restriction is a security feature defined by a server and implemented by a &lt;strong&gt;browser&lt;/strong&gt;.</source>
          <target state="translated">施加CORS限制是由服务器定义并由&lt;strong&gt;浏览器&lt;/strong&gt;实现的安全功能。</target>
        </trans-unit>
        <trans-unit id="eaebe47425c9f545a41d705608612a34bef824ca" translate="yes" xml:space="preserve">
          <source>Because</source>
          <target state="translated">Because</target>
        </trans-unit>
        <trans-unit id="994d277213fbaedc06ba5d5acca67d3a4a9e3947" translate="yes" xml:space="preserve">
          <source>Both are different. Postman calls &quot;POST&quot; properly, but when we call it, it will be &quot;OPTIONS&quot;.</source>
          <target state="translated">两者是不同的。Postman正确的叫法是 &quot;POST&quot;,但当我们叫它的时候,就会是 &quot;OPTIONS&quot;。</target>
        </trans-unit>
        <trans-unit id="09bbd3ec34de2817c9d7530531d8c8c8e431db9d" translate="yes" xml:space="preserve">
          <source>CORS configurations for every language/framework under the sun. Instead &lt;a href=&quot;https://stackoverflow.com/search?q=how+to+enable+CORS+is%3Aquestion&amp;amp;mixed=1&quot;&gt;find your relevant language/framework's question&lt;/a&gt;.</source>
          <target state="translated">阳光下每种语言/框架的CORS配置。 而是&lt;a href=&quot;https://stackoverflow.com/search?q=how+to+enable+CORS+is%3Aquestion&amp;amp;mixed=1&quot;&gt;找到您相关的语言/框架的问题&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="3299a6a9db6304c13811b0ecaa80b420b0dc118d" translate="yes" xml:space="preserve">
          <source>Command line options for turning off CORS for various browsers</source>
          <target state="translated">用于关闭各种浏览器的CORS的命令行选项</target>
        </trans-unit>
        <trans-unit id="066ca298b0e32c2e6232f49c0e71a156a52c5d32" translate="yes" xml:space="preserve">
          <source>Encountered the same error in chrome when tried to call Spring &lt;strong&gt;REST&lt;/strong&gt; end point in angular.</source>
          <target state="translated">尝试以角度调用Spring &lt;strong&gt;REST&lt;/strong&gt;端点时，在chrome中遇到了相同的错误。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="12c867a185b69e0a08ca220ffbb01f5ffe2acad2" translate="yes" xml:space="preserve">
          <source>Fixed it by this,</source>
          <target state="translated">用这个修好了。</target>
        </trans-unit>
        <trans-unit id="69168c91caa0996d6431d7c72030165f886a95e2" translate="yes" xml:space="preserve">
          <source>For more details, you can check the &lt;a href=&quot;https://flask-cors.readthedocs.io/en/latest/&quot;&gt;Flask documentation&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，您可以查看&lt;a href=&quot;https://flask-cors.readthedocs.io/en/latest/&quot;&gt;Flask文档&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8e7e0e211692db48ee9a987542edfaf88bbf464" translate="yes" xml:space="preserve">
          <source>Here is an example configuration which turns on &lt;strong&gt;CORS on Apache&lt;/strong&gt; (.htaccess file)</source>
          <target state="translated">这是一个&lt;strong&gt;在Apache上&lt;/strong&gt;打开&lt;strong&gt;CORS&lt;/strong&gt;的示例配置（.htaccess文件）</target>
        </trans-unit>
        <trans-unit id="6afb2f09c7b0ebcbd06abce9088333a6fc2c12f1" translate="yes" xml:space="preserve">
          <source>Here is an example configuration which turns on &lt;strong&gt;CORS on nginx&lt;/strong&gt; (nginx.conf file) - be very careful with setting &lt;code&gt;always/&quot;$http_origin&quot;&lt;/code&gt; for nginx and &lt;code&gt;&quot;*&quot;&lt;/code&gt; for Apache - this will unblock CORS from any domain.</source>
          <target state="translated">这是一个&lt;strong&gt;在nginx&lt;/strong&gt; （nginx.conf文件） &lt;strong&gt;上&lt;/strong&gt;打开&lt;strong&gt;CORS&lt;/strong&gt;的示例配置-务必 &lt;code&gt;always/&quot;$http_origin&quot;&lt;/code&gt; 为nginx设置always /&amp;ldquo; $ http_origin&amp;rdquo; ，为Apache设置 &lt;code&gt;&quot;*&quot;&lt;/code&gt; ，这非常小心-这将阻止来自任何域的CORS。</target>
        </trans-unit>
        <trans-unit id="93311a176a43532fa9eb1fe759745fb39c5e3c94" translate="yes" xml:space="preserve">
          <source>However, the Postman tool does not bother about the CORS policy of the server.</source>
          <target state="translated">但是,Postman工具并不关心服务器的CORS策略。</target>
        </trans-unit>
        <trans-unit id="ec0d166a01cbf17a24a9d94014b3e22929526452" translate="yes" xml:space="preserve">
          <source>I am trying to do authorization using &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaScript&quot;&gt;JavaScript&lt;/a&gt; by connecting to the &lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services&quot;&gt;RESTful&lt;/a&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Application_programming_interface&quot;&gt;API&lt;/a&gt; built-in &lt;a href=&quot;https://en.wikipedia.org/wiki/Flask_%28web_framework%29&quot;&gt;Flask&lt;/a&gt;. However, when I make the request, I get the following error:</source>
          <target state="translated">我正在尝试通过连接到内置的&lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services&quot;&gt;RESTful&lt;/a&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Application_programming_interface&quot;&gt;API&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Flask_%28web_framework%29&quot;&gt;Flask&lt;/a&gt;使用&lt;a href=&quot;http://en.wikipedia.org/wiki/JavaScript&quot;&gt;JavaScript&lt;/a&gt;进行授权。 但是，当我发出请求时，出现以下错误：</target>
        </trans-unit>
        <trans-unit id="4e4af274f3f2a3d95e4301b8554417a52a656b0c" translate="yes" xml:space="preserve">
          <source>I assume that your page is on &lt;a href=&quot;http://my-site.local:8088&quot;&gt;http://my-site.local:8088&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/a/55584963/860099&quot;&gt;.&lt;/a&gt;</source>
          <target state="translated">我认为您的页面位于&lt;a href=&quot;http://my-site.local:8088&quot;&gt;http：//my-site.local：8088上&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/a/55584963/860099&quot;&gt;。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6d69aae080b651ef69381996fbdae2ab50b5328" translate="yes" xml:space="preserve">
          <source>I had issue when it was like this,</source>
          <target state="translated">我有问题时,它是这样的。</target>
        </trans-unit>
        <trans-unit id="d809e47a1533d81ff90cc2d62946559dcbf79c70" translate="yes" xml:space="preserve">
          <source>I know that the API or remote resource must set the header, but why did it work when I made the request via the Chrome extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop&quot;&gt;Postman&lt;/a&gt;?</source>
          <target state="translated">我知道API或远程资源必须设置标头，但是当我通过Chrome扩展程序&lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop&quot;&gt;Postman&lt;/a&gt;发出请求时，为什么它可以工作？</target>
        </trans-unit>
        <trans-unit id="c8db4dc2f3f359a28a54b421afd6aff0b3e832a3" translate="yes" xml:space="preserve">
          <source>If I understood it right you are doing an &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt; to a different domain than your page is on. So the browser is blocking it as it usually allows a request in the same origin for security reasons. You need to do something different when you want to do a cross-domain request. A tutorial about how to achieve that is &lt;em&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot;&gt;Using CORS&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">如果我理解正确，那么您正在向页面所在的其他域执行&lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt; 。 因此，由于安全原因，浏览器通常会阻止来自同一来源的请求，因此阻止了它。 当您想进行跨域请求时，需要做一些不同的事情。 有关如何实现此目标的教程是&lt;em&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot;&gt;使用CORS&lt;/a&gt;&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c919f4b271e87353b0936831c001166cc4dd9a0" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt; same as the question; you have first to install &lt;code&gt;flask-cors&lt;/code&gt;</source>
          <target state="translated">如果您使用&lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt;与问题相同； 您必须先安装 &lt;code&gt;flask-cors&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23af7582108b8a3e72ef90b408e5a3b34d2f0a9a" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://en.wikipedia.org/wiki/Node-RED&quot;&gt;Node-red&lt;/a&gt; you have to allow &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt; in the &lt;code&gt;node-red/settings.js&lt;/code&gt; file by un-commenting the following lines:</source>
          <target state="translated">如果使用的是&lt;a href=&quot;https://en.wikipedia.org/wiki/Node-RED&quot;&gt;Node-red&lt;/a&gt; ，则必须通过取消注释以下行来允许在 &lt;code&gt;node-red/settings.js&lt;/code&gt; 文件中使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="c472094fc999b9b983abd9ff44ee50228eb35dfc" translate="yes" xml:space="preserve">
          <source>If you do not use a simple CORS request, usually the browser automatically also sends an OPTIONS request before sending the main request - more information is &lt;a href=&quot;https://stackoverflow.com/questions/10093053/access-control-request-headers-is-added-to-header-in-ajax-request-with-jquery/55584963#55584963&quot;&gt;here&lt;/a&gt;. The snippet below shows it:</source>
          <target state="translated">如果您不使用简单的CORS请求，通常浏览器会在发送主要请求之前自动发送一个OPTIONS请求-更多信息在&lt;a href=&quot;https://stackoverflow.com/questions/10093053/access-control-request-headers-is-added-to-header-in-ajax-request-with-jquery/55584963#55584963&quot;&gt;此处&lt;/a&gt; 。 下面的代码片段显示了它：</target>
        </trans-unit>
        <trans-unit id="c95d2dc319aad55480a96e16ce2a4e75b6092483" translate="yes" xml:space="preserve">
          <source>If you use .NET as your middle tier, check the route attribute clearly, for example,</source>
          <target state="translated">如果您使用.NET作为中间层,请明确地检查路由属性,例如:。</target>
        </trans-unit>
        <trans-unit id="bd77cf61e05b719b34266825c92780dd5395eabf" translate="yes" xml:space="preserve">
          <source>In the below investigation as API, I use &lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt; instead of &lt;a href=&quot;http://myApiUrl/login&quot;&gt;http://myApiUrl/login&lt;/a&gt; from your question, because this first one working.</source>
          <target state="translated">在下面的API调查中，我使用了&lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt;而不是您的问题中的&lt;a href=&quot;http://myApiUrl/login&quot;&gt;http：// myApiUrl / login&lt;/a&gt; ，因为第一个有效。</target>
        </trans-unit>
        <trans-unit id="07b964a821a7d6c9866d76a77f4f2054fb79e7ab" translate="yes" xml:space="preserve">
          <source>It's very simple to solve if you are using &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP&lt;/a&gt;. Just add the following script in the beginning of your PHP page which handles the request:</source>
          <target state="translated">如果您使用的是&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP，&lt;/a&gt;则非常简单。 只需在处理请求的PHP页面的开头添加以下脚本：</target>
        </trans-unit>
        <trans-unit id="496e79e21999f75da13376232d0bcec34d30646d" translate="yes" xml:space="preserve">
          <source>NOT set header &lt;code&gt;Origin&lt;/code&gt;</source>
          <target state="translated">未设置标头 &lt;code&gt;Origin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b8865f9b8bf3cd47d8c1f71f0935d60d6ab345a" translate="yes" xml:space="preserve">
          <source>Please add the following code in your &lt;em&gt;web.config&lt;/em&gt; file under &amp;lt;system.webServer&amp;gt; tag. This will work:</source>
          <target state="translated">请在&amp;lt;system.webServer&amp;gt;标记下的&lt;em&gt;web.config&lt;/em&gt;文件中添加以下代码。 这将起作用：</target>
        </trans-unit>
        <trans-unit id="97d00f573c920c63457e98c492dd13cefa12cbc6" translate="yes" xml:space="preserve">
          <source>Please make sure you are not doing any mistake in the Ajax call</source>
          <target state="translated">请确认您在Ajax调用中没有出现任何错误。</target>
        </trans-unit>
        <trans-unit id="021e956b23cdac052c1f487373fd0a87b2ab7042" translate="yes" xml:space="preserve">
          <source>Regular web pages can use the XMLHttpRequest object to send and receive data from remote servers, but they're limited by the same origin policy. Extensions aren't so limited. An extension can talk to remote servers outside of its origin, as long as it first requests cross-origin permissions.</source>
          <target state="translated">常规的网页可以使用XMLHttpRequest对象来发送和接收来自远程服务器的数据,但它们受到同样的源策略的限制。而扩展就没有这么多限制了。一个扩展可以与远程服务器进行对话,只要它首先请求跨源权限,就可以与源外的远程服务器进行对话。</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">显示代码片段</target>
        </trans-unit>
        <trans-unit id="0dffc8fd53d7404ab229dd02adc93e11952b1553" translate="yes" xml:space="preserve">
          <source>That is why the CORS error appears in the browser, but not in Postman.</source>
          <target state="translated">这就是为什么在浏览器中出现CORS错误,但在Postman中却没有出现的原因。</target>
        </trans-unit>
        <trans-unit id="5bf8dbcda182cc4b0bda73960f1a9cf8c381cda6" translate="yes" xml:space="preserve">
          <source>The browser looks at the CORS policy of the server and respects it.</source>
          <target state="translated">浏览器会查看服务器的CORS策略并尊重它。</target>
        </trans-unit>
        <trans-unit id="ceed6cae063bc7c92b7b6af8b6c8d7ab1a2cdb1e" translate="yes" xml:space="preserve">
          <source>The reason why you see different results is that Postman:</source>
          <target state="translated">之所以看到不同的结果,是因为邮递员。</target>
        </trans-unit>
        <trans-unit id="1c81ea373f3abf10fd0ecdc714ad26a38f77aee4" translate="yes" xml:space="preserve">
          <source>Then include the Flask cors in your application.</source>
          <target state="translated">然后在你的应用中加入Flask cors。</target>
        </trans-unit>
        <trans-unit id="fb38f9f526b23438c5be0b9fe8dd336f8889a15b" translate="yes" xml:space="preserve">
          <source>This is similar to browsers' way of sending requests when the site and API has the same domain (browsers also set the header item &lt;code&gt;Referer=http://my-site.local:8088&lt;/code&gt;, however I don't see it in Postman). &lt;strong&gt;When &lt;code&gt;Origin&lt;/code&gt; header is &lt;em&gt;not&lt;/em&gt; set, usually servers allow such requests by default.&lt;/strong&gt;</source>
          <target state="translated">这类似于浏览器在站点和API具有相同域时发送请求的方式（浏览器还设置了标头项目 &lt;code&gt;Referer=http://my-site.local:8088&lt;/code&gt; ，但是我在Postman中看不到它） 。 &lt;strong&gt;如果&lt;em&gt;未&lt;/em&gt;设置 &lt;code&gt;Origin&lt;/code&gt; 标头，则通常服务器默认情况下会允许此类请求。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99c788a5af33f9b7a75a594e048e63aba719cbae" translate="yes" xml:space="preserve">
          <source>This is the request code:</source>
          <target state="translated">这是请求代码。</target>
        </trans-unit>
        <trans-unit id="bda958ded39c4d740b32c0bb520243b452ff89c2" translate="yes" xml:space="preserve">
          <source>This is the standard way how Postman sends requests. But a browser sends requests differently when &lt;strong&gt;your site and API have different domains&lt;/strong&gt;, and then &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS&lt;/a&gt; occurs and the browser automatically:</source>
          <target state="translated">这是Postman发送请求的标准方式。 但是，当&lt;strong&gt;您的站点和API具有不同的域时&lt;/strong&gt; ，浏览器发送请求的方式会有所&lt;strong&gt;不同&lt;/strong&gt; ，然后发生&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS&lt;/a&gt; ，浏览器会自动：</target>
        </trans-unit>
        <trans-unit id="ad4f53fa26c9f6a889bbca07ed67dcecdcfd7a9f" translate="yes" xml:space="preserve">
          <source>When you are using postman they are not restricted by this policy. Quoted from &lt;em&gt;&lt;a href=&quot;http://developer.chrome.com/extensions/xhr.html&quot;&gt;Cross-Origin XMLHttpRequest&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">使用邮递员时，它们不受此政策的限制。 引用自&lt;em&gt;&lt;a href=&quot;http://developer.chrome.com/extensions/xhr.html&quot;&gt;跨域XMLHttpRequest&lt;/a&gt;&lt;/em&gt; ：</target>
        </trans-unit>
        <trans-unit id="59b847a02c2a444746c032c10e079b2f8a3e7bf2" translate="yes" xml:space="preserve">
          <source>When you have &lt;strong&gt;&lt;code&gt;Host != Origin&lt;/code&gt;&lt;/strong&gt; this is CORS, and when the server detects such a request, it usually &lt;strong&gt;blocks it by default&lt;/strong&gt;.</source>
          <target state="translated">当您拥有&lt;strong&gt; &lt;code&gt;Host != Origin&lt;/code&gt; &lt;/strong&gt;这就是CORS，并且服务器检测到这样的请求时，通常&lt;strong&gt;默认情况下&lt;/strong&gt;会&lt;strong&gt;阻止它&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf2d78176bba778097ef5ea01d5433e0527e3e1c" translate="yes" xml:space="preserve">
          <source>Why doesn’t Postman get a “No 'Access-Control-Allow-Origin' header is present on the requested resource” error when my JavaScript code does</source>
          <target state="translated">为什么当我的JavaScript代码在请求的资源上没有出现 &quot;No 'Access-Control-Allow-Origin' header is present on the requested resource &quot;的错误?</target>
        </trans-unit>
        <trans-unit id="02e7efd96db1e35b08ca4366b80785593d0bb81a" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest cannot load &lt;a href=&quot;http://myApiUrl/login&quot;&gt;http://myApiUrl/login&lt;/a&gt;. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access.</source>
          <target state="translated">XMLHttpRequest无法加载&lt;a href=&quot;http://myApiUrl/login&quot;&gt;http：// myApiUrl / login&lt;/a&gt; 。 所请求的资源上不存在&amp;ldquo; Access-Control-Allow-Origin&amp;rdquo;标头。 因此，不允许访问原始&amp;ldquo;空&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="55c75d004d391d6d7d71b8391da244a7a0f9a08a" translate="yes" xml:space="preserve">
          <source>You can change the configuration of your server to allow CORS requests.</source>
          <target state="translated">您可以更改服务器的配置以允许CORS请求。</target>
        </trans-unit>
        <trans-unit id="00853d73f19844948fadbc48d500f997c46f7ee4" translate="yes" xml:space="preserve">
          <source>jQuery</source>
          <target state="translated">jQuery</target>
        </trans-unit>
        <trans-unit id="2bcbd7795ccef91bb67421f2b45b07248383009c" translate="yes" xml:space="preserve">
          <source>set header &lt;code&gt;Host=example.com&lt;/code&gt; (your API)</source>
          <target state="translated">设置标头 &lt;code&gt;Host=example.com&lt;/code&gt; （您的API）</target>
        </trans-unit>
        <trans-unit id="83a837ce9e0f1b47cb54f8bcb25031ed581631cd" translate="yes" xml:space="preserve">
          <source>sets header &lt;code&gt;Host=example.com&lt;/code&gt; (yours as API)</source>
          <target state="translated">设置标头 &lt;code&gt;Host=example.com&lt;/code&gt; （您作为API）</target>
        </trans-unit>
        <trans-unit id="976589067a06ceb2e03d9b17f2fe35455220be7b" translate="yes" xml:space="preserve">
          <source>sets header &lt;code&gt;Origin=http://my-site.local:8088&lt;/code&gt; (your site)</source>
          <target state="translated">设置标头 &lt;code&gt;Origin=http://my-site.local:8088&lt;/code&gt; （您的网站）</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
