<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/20035101">
    <body>
      <group id="20035101">
        <trans-unit id="7f18be38a68c628c3f20fa0089c9d834c28ec0ab" translate="yes" xml:space="preserve">
          <source>(The header &lt;code&gt;Referer&lt;/code&gt; has the same value as &lt;code&gt;Origin&lt;/code&gt;). And now in Chrome's &lt;em&gt;Console &amp;amp; Networks&lt;/em&gt; tab you will see:</source>
          <target state="translated">헤더 참조자는 &lt;code&gt;Origin&lt;/code&gt; 과 동일한 값을 갖습니다. 이제 Chrome의 &lt;em&gt;콘솔 및 네트워크&lt;/em&gt; 탭에 다음이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1cde63b90ae7bf63cf746f1c1e0d7fb3519452e8" translate="yes" xml:space="preserve">
          <source>3rd party services that allow a request to circumvent CORS</source>
          <target state="translated">CORS 우회 요청을 허용하는 타사 서비스</target>
        </trans-unit>
        <trans-unit id="9a3ebbdf20ffce164f3dfeb7fdcfbed385251741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Origin=null&lt;/code&gt; is set when you open HTML content from a local directory, and it sends a request. The same situation is when you send a request inside an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, like in the below snippet (but here the &lt;code&gt;Host&lt;/code&gt; header is not set at all) - in general, everywhere the HTML specification says opaque origin, you can translate that to &lt;code&gt;Origin=null&lt;/code&gt;. More information about this you can find &lt;a href=&quot;https://stackoverflow.com/questions/42239643/when-do-browsers-send-the-origin-header-when-do-browsers-set-the-origin-to-null/42242802#42242802&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Origin=null&lt;/code&gt; 은 로컬 디렉토리에서 HTML 컨텐츠를 열 때 설정되며 요청을 보냅니다. 동일한 상황은 아래 스 니펫과 같이 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 안에 요청을 보낼 때입니다 (그러나 여기서 &lt;code&gt;Host&lt;/code&gt; 헤더는 전혀 설정되어 있지 않습니다). 일반적으로 HTML 사양은 모든 곳에서 불투명 원점을 말합니다. 원점으로 변환 할 수 있습니다 &lt;code&gt;Origin=null&lt;/code&gt; 입니다. 이에 대한 자세한 내용은 &lt;a href=&quot;https://stackoverflow.com/questions/42239643/when-do-browsers-send-the-origin-header-when-do-browsers-set-the-origin-to-null/42242802#42242802&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec492510b3d97552a936d07588cba810b258893" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$.ajax({type: &quot;POST&quot;&lt;/strong&gt; - calls &lt;strong&gt;OPTIONS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;$ .ajax ({type : &quot;POST&quot;&lt;/strong&gt; - &lt;strong&gt;옵션&lt;/strong&gt; 호출</target>
        </trans-unit>
        <trans-unit id="3580fafd0e7477a9a0bbd30504967645497262f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;$.post(&lt;/strong&gt; - Calls &lt;strong&gt;POST&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;$ .post (-POST&lt;/strong&gt; 호출</target>
        </trans-unit>
        <trans-unit id="81317f7a6dcb1785f348c7e570f1d34f43cc9e93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For C# web services - &lt;a href=&quot;https://en.wikipedia.org/wiki/ASP.NET_MVC_Framework#Apache_License_2.0_release&quot;&gt;Web API&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C # 웹 서비스의 경우- &lt;a href=&quot;https://en.wikipedia.org/wiki/ASP.NET_MVC_Framework#Apache_License_2.0_release&quot;&gt;웹 API&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89fe4aabf84d90fe558c36be0bbf89d63f71f291" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mod note&lt;/strong&gt;: This question is about why Postman is not subject to CORS restrictions in the same way an XMLHttpRequest is. This question is &lt;strong&gt;not&lt;/strong&gt; about how to fix a &quot;No 'Access-Control-Allow-Origin'...&quot; error.</source>
          <target state="translated">&lt;strong&gt;Mod note&lt;/strong&gt; :이 질문은 Postman이 XMLHttpRequest와 같은 방식으로 CORS 제한을받지 않는 이유에 관한 것입니다. 이 질문은 &quot;No 'Access-Control-Allow-Origin'...&quot;오류를 해결하는 방법이 &lt;strong&gt;아닙니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="93b6dcdfad5129b101e0b36472161f5fa1bd8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are looking for downloading content &lt;strong&gt;from a third-party website&lt;/strong&gt; then &lt;strong&gt;this will not help you&lt;/strong&gt;.  You can try the following code, but not JavaScript.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; &lt;strong&gt;타사 웹 사이트에서&lt;/strong&gt; 콘텐츠를 다운로드하려는 경우 &lt;strong&gt;도움이되지 않습니다&lt;/strong&gt; . 다음 코드는 시도 할 수 있지만 JavaScript는 시도 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="36297858886c52a535b06f7007e6ac095e3ac042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Please stop posting&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;게시를 중지하십시오&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="5221213f5f9722f0a74d0702a45ab2ba3f95d811" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution:&lt;/strong&gt; Add &lt;strong&gt;@CrossOrigin(&quot;*&quot;)&lt;/strong&gt; annotation on top of respective Controller Class.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 각 컨트롤러 클래스 위에 &lt;strong&gt;@CrossOrigin ( &quot;*&quot;)&lt;/strong&gt; 주석을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="3308305126ca2adc7b3fc97432f169edc681911e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; Using &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; can make your API/website vulnerable to &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;cross-site request forgery&lt;/a&gt; (CSRF) attacks. Make certain you &lt;a href=&quot;https://stackoverflow.com/questions/43154170/is-it-safe-to-enable-cors-to-for-a-public-and-readonly-webservice&quot;&gt;understand the risks&lt;/a&gt; before using this code.</source>
          <target state="translated">&lt;strong&gt;경고 :&lt;/strong&gt; &lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt; 사용하면 API / 웹 사이트가 CSRF ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;Cross-Site Request&lt;/a&gt; Forgery) 공격에 취약해질 수 있습니다. 이 코드를 사용하기 전에 &lt;a href=&quot;https://stackoverflow.com/questions/43154170/is-it-safe-to-enable-cors-to-for-a-public-and-readonly-webservice&quot;&gt;위험&lt;/a&gt; 을 이해 했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c4329bc47369886f8c0a42fd18a223508cda8394" translate="yes" xml:space="preserve">
          <source>A simple application will look like:</source>
          <target state="translated">간단한 응용 프로그램은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="366363d0204b6ef62f7b0c67752b489e8b1c9f87" translate="yes" xml:space="preserve">
          <source>Angular 4 issue - please refer to &lt;a href=&quot;http://www.hubfly.com/blog/solutions/how-to-fix-angular-4-api-call-issues/&quot;&gt;http://www.hubfly.com/blog/solutions/how-to-fix-angular-4-api-call-issues/&lt;/a&gt;</source>
          <target state="translated">Angular 4 문제-http://www.hubfly.com/blog/solutions/how-to-fix-angular-4-api-call-issues/를 참조 &lt;a href=&quot;http://www.hubfly.com/blog/solutions/how-to-fix-angular-4-api-call-issues/&quot;&gt;하십시오&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13100e65066097463de30b1e0b82fb643a8b0ee8" translate="yes" xml:space="preserve">
          <source>Applying a CORS restriction is a security feature defined by a server and implemented by a &lt;strong&gt;browser&lt;/strong&gt;.</source>
          <target state="translated">CORS 제한을 적용하는 것은 서버에 의해 정의되고 &lt;strong&gt;브라우저에&lt;/strong&gt; 의해 구현되는 보안 기능입니다.</target>
        </trans-unit>
        <trans-unit id="eaebe47425c9f545a41d705608612a34bef824ca" translate="yes" xml:space="preserve">
          <source>Because</source>
          <target state="translated">Because</target>
        </trans-unit>
        <trans-unit id="994d277213fbaedc06ba5d5acca67d3a4a9e3947" translate="yes" xml:space="preserve">
          <source>Both are different. Postman calls &quot;POST&quot; properly, but when we call it, it will be &quot;OPTIONS&quot;.</source>
          <target state="translated">둘 다 다릅니다. 우편 배달부에서는 &quot;POST&quot;를 올바르게 호출하지만 전화를 걸면 &quot;OPTIONS&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="09bbd3ec34de2817c9d7530531d8c8c8e431db9d" translate="yes" xml:space="preserve">
          <source>CORS configurations for every language/framework under the sun. Instead &lt;a href=&quot;https://stackoverflow.com/search?q=how+to+enable+CORS+is%3Aquestion&amp;amp;mixed=1&quot;&gt;find your relevant language/framework's question&lt;/a&gt;.</source>
          <target state="translated">태양 아래 모든 언어 / 프레임 워크에 대한 CORS 구성. 대신 &lt;a href=&quot;https://stackoverflow.com/search?q=how+to+enable+CORS+is%3Aquestion&amp;amp;mixed=1&quot;&gt;관련 언어 / 프레임 워크의 질문을 찾으십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3299a6a9db6304c13811b0ecaa80b420b0dc118d" translate="yes" xml:space="preserve">
          <source>Command line options for turning off CORS for various browsers</source>
          <target state="translated">다양한 브라우저에서 CORS를 끄는 명령 행 옵션</target>
        </trans-unit>
        <trans-unit id="066ca298b0e32c2e6232f49c0e71a156a52c5d32" translate="yes" xml:space="preserve">
          <source>Encountered the same error in chrome when tried to call Spring &lt;strong&gt;REST&lt;/strong&gt; end point in angular.</source>
          <target state="translated">각도에서 Spring &lt;strong&gt;REST&lt;/strong&gt; 엔드 포인트를 호출하려고 할 때 크롬에서 동일한 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="12c867a185b69e0a08ca220ffbb01f5ffe2acad2" translate="yes" xml:space="preserve">
          <source>Fixed it by this,</source>
          <target state="translated">이것으로 고쳤습니다.</target>
        </trans-unit>
        <trans-unit id="69168c91caa0996d6431d7c72030165f886a95e2" translate="yes" xml:space="preserve">
          <source>For more details, you can check the &lt;a href=&quot;https://flask-cors.readthedocs.io/en/latest/&quot;&gt;Flask documentation&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://flask-cors.readthedocs.io/en/latest/&quot;&gt;Flask 설명서를&lt;/a&gt; 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8e7e0e211692db48ee9a987542edfaf88bbf464" translate="yes" xml:space="preserve">
          <source>Here is an example configuration which turns on &lt;strong&gt;CORS on Apache&lt;/strong&gt; (.htaccess file)</source>
          <target state="translated">다음은 &lt;strong&gt;Apache&lt;/strong&gt; (.htaccess 파일)에서 &lt;strong&gt;CORS를&lt;/strong&gt; 설정하는 구성 예입니다.</target>
        </trans-unit>
        <trans-unit id="6afb2f09c7b0ebcbd06abce9088333a6fc2c12f1" translate="yes" xml:space="preserve">
          <source>Here is an example configuration which turns on &lt;strong&gt;CORS on nginx&lt;/strong&gt; (nginx.conf file) - be very careful with setting &lt;code&gt;always/&quot;$http_origin&quot;&lt;/code&gt; for nginx and &lt;code&gt;&quot;*&quot;&lt;/code&gt; for Apache - this will unblock CORS from any domain.</source>
          <target state="translated">다음은 &lt;strong&gt;nginx&lt;/strong&gt; (nginx.conf 파일)에서 &lt;strong&gt;CORS를&lt;/strong&gt; 설정하는 구성 예 &lt;strong&gt;입니다. nginx에 대해&lt;/strong&gt; &lt;code&gt;always/&quot;$http_origin&quot;&lt;/code&gt; 을 설정하고 Apache에 대해 &lt;code&gt;&quot;*&quot;&lt;/code&gt; 를 설정하는 데 매우주의하십시오. 그러면 모든 도메인에서 CORS가 차단 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="93311a176a43532fa9eb1fe759745fb39c5e3c94" translate="yes" xml:space="preserve">
          <source>However, the Postman tool does not bother about the CORS policy of the server.</source>
          <target state="translated">그러나 Postman 도구는 서버의 CORS 정책을 신경 쓰지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ec0d166a01cbf17a24a9d94014b3e22929526452" translate="yes" xml:space="preserve">
          <source>I am trying to do authorization using &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaScript&quot;&gt;JavaScript&lt;/a&gt; by connecting to the &lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services&quot;&gt;RESTful&lt;/a&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Application_programming_interface&quot;&gt;API&lt;/a&gt; built-in &lt;a href=&quot;https://en.wikipedia.org/wiki/Flask_%28web_framework%29&quot;&gt;Flask&lt;/a&gt;. However, when I make the request, I get the following error:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services&quot;&gt;RESTful&lt;/a&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Application_programming_interface&quot;&gt;API&lt;/a&gt; 내장 &lt;a href=&quot;https://en.wikipedia.org/wiki/Flask_%28web_framework%29&quot;&gt;Flask&lt;/a&gt; 에 연결하여 &lt;a href=&quot;http://en.wikipedia.org/wiki/JavaScript&quot;&gt;JavaScript&lt;/a&gt; 를 사용하여 권한 부여를 시도하고 있습니다. 그러나 요청하면 다음 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4e4af274f3f2a3d95e4301b8554417a52a656b0c" translate="yes" xml:space="preserve">
          <source>I assume that your page is on &lt;a href=&quot;http://my-site.local:8088&quot;&gt;http://my-site.local:8088&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/a/55584963/860099&quot;&gt;.&lt;/a&gt;</source>
          <target state="translated">귀하의 페이지가 &lt;a href=&quot;http://my-site.local:8088&quot;&gt;http : //my-site.local : 8088&lt;/a&gt; 에 있다고 가정합니다 &lt;a href=&quot;https://stackoverflow.com/a/55584963/860099&quot;&gt;.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6d69aae080b651ef69381996fbdae2ab50b5328" translate="yes" xml:space="preserve">
          <source>I had issue when it was like this,</source>
          <target state="translated">이럴 때 문제가 있었어요</target>
        </trans-unit>
        <trans-unit id="d809e47a1533d81ff90cc2d62946559dcbf79c70" translate="yes" xml:space="preserve">
          <source>I know that the API or remote resource must set the header, but why did it work when I made the request via the Chrome extension &lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop&quot;&gt;Postman&lt;/a&gt;?</source>
          <target state="translated">API 또는 원격 리소스가 헤더를 설정해야한다는 것을 알고 있지만 Chrome 확장 프로그램 &lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop&quot;&gt;Postman을&lt;/a&gt; 통해 요청했을 때 왜 작동 했습니까?</target>
        </trans-unit>
        <trans-unit id="c8db4dc2f3f359a28a54b421afd6aff0b3e832a3" translate="yes" xml:space="preserve">
          <source>If I understood it right you are doing an &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt; to a different domain than your page is on. So the browser is blocking it as it usually allows a request in the same origin for security reasons. You need to do something different when you want to do a cross-domain request. A tutorial about how to achieve that is &lt;em&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot;&gt;Using CORS&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">내가 올바르게 이해하면 귀하의 페이지가 아닌 다른 도메인에 &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt; 를하고 있습니다. 따라서 브라우저는 일반적으로 보안상의 이유로 동일한 출처에서 요청을 허용하므로 브라우저를 차단합니다. 도메인 간 요청을 수행하려는 경우 다른 작업을 수행해야합니다. 이를 달성하는 방법에 대한 자습서는 &lt;em&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot;&gt;Using CORS&lt;/a&gt;&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6c919f4b271e87353b0936831c001166cc4dd9a0" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt; same as the question; you have first to install &lt;code&gt;flask-cors&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt; 를 사용하는 경우 질문과 동일합니다. 먼저 &lt;code&gt;flask-cors&lt;/code&gt; 를 설치해야합니다</target>
        </trans-unit>
        <trans-unit id="23af7582108b8a3e72ef90b408e5a3b34d2f0a9a" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://en.wikipedia.org/wiki/Node-RED&quot;&gt;Node-red&lt;/a&gt; you have to allow &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt; in the &lt;code&gt;node-red/settings.js&lt;/code&gt; file by un-commenting the following lines:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Node-RED&quot;&gt;Node-red&lt;/a&gt; 를 사용하는 경우 다음 행의 주석을 해제하여 &lt;code&gt;node-red/settings.js&lt;/code&gt; 파일에서 &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt; 를 허용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c472094fc999b9b983abd9ff44ee50228eb35dfc" translate="yes" xml:space="preserve">
          <source>If you do not use a simple CORS request, usually the browser automatically also sends an OPTIONS request before sending the main request - more information is &lt;a href=&quot;https://stackoverflow.com/questions/10093053/access-control-request-headers-is-added-to-header-in-ajax-request-with-jquery/55584963#55584963&quot;&gt;here&lt;/a&gt;. The snippet below shows it:</source>
          <target state="translated">간단한 CORS 요청을 사용하지 않는 경우 일반적으로 브라우저는 기본 요청을 보내기 전에 자동으로 OPTIONS 요청을 보냅니다. 자세한 정보는 &lt;a href=&quot;https://stackoverflow.com/questions/10093053/access-control-request-headers-is-added-to-header-in-ajax-request-with-jquery/55584963#55584963&quot;&gt;여기에 있습니다&lt;/a&gt; . 아래 스 니펫은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c95d2dc319aad55480a96e16ce2a4e75b6092483" translate="yes" xml:space="preserve">
          <source>If you use .NET as your middle tier, check the route attribute clearly, for example,</source>
          <target state="translated">.NET을 중간 계층으로 사용하는 경우 경로 속성을 명확하게 확인하십시오 (예 :</target>
        </trans-unit>
        <trans-unit id="bd77cf61e05b719b34266825c92780dd5395eabf" translate="yes" xml:space="preserve">
          <source>In the below investigation as API, I use &lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt; instead of &lt;a href=&quot;http://myApiUrl/login&quot;&gt;http://myApiUrl/login&lt;/a&gt; from your question, because this first one working.</source>
          <target state="translated">아래의 API로 조사 할 때 귀하의 질문에 &lt;a href=&quot;http://myApiUrl/login&quot;&gt;http : // myApiUrl / login&lt;/a&gt; 대신 &lt;a href=&quot;http://example.com&quot;&gt;http://example.com을&lt;/a&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="07b964a821a7d6c9866d76a77f4f2054fb79e7ab" translate="yes" xml:space="preserve">
          <source>It's very simple to solve if you are using &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP&lt;/a&gt;. Just add the following script in the beginning of your PHP page which handles the request:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP를&lt;/a&gt; 사용하는 경우 해결하는 것이 매우 간단합니다. 요청을 처리하는 PHP 페이지의 시작 부분에 다음 스크립트를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="496e79e21999f75da13376232d0bcec34d30646d" translate="yes" xml:space="preserve">
          <source>NOT set header &lt;code&gt;Origin&lt;/code&gt;</source>
          <target state="translated">헤더 &lt;code&gt;Origin&lt;/code&gt; 설정하지 않음</target>
        </trans-unit>
        <trans-unit id="3b8865f9b8bf3cd47d8c1f71f0935d60d6ab345a" translate="yes" xml:space="preserve">
          <source>Please add the following code in your &lt;em&gt;web.config&lt;/em&gt; file under &amp;lt;system.webServer&amp;gt; tag. This will work:</source>
          <target state="translated">&amp;lt;system.webServer&amp;gt; 태그 아래 &lt;em&gt;web.config&lt;/em&gt; 파일에 다음 코드를 추가하십시오. 이것은 작동합니다 :</target>
        </trans-unit>
        <trans-unit id="97d00f573c920c63457e98c492dd13cefa12cbc6" translate="yes" xml:space="preserve">
          <source>Please make sure you are not doing any mistake in the Ajax call</source>
          <target state="translated">Ajax 호출에서 실수하지 않도록하십시오</target>
        </trans-unit>
        <trans-unit id="021e956b23cdac052c1f487373fd0a87b2ab7042" translate="yes" xml:space="preserve">
          <source>Regular web pages can use the XMLHttpRequest object to send and receive data from remote servers, but they're limited by the same origin policy. Extensions aren't so limited. An extension can talk to remote servers outside of its origin, as long as it first requests cross-origin permissions.</source>
          <target state="translated">일반 웹 페이지는 XMLHttpRequest 객체를 사용하여 원격 서버와 데이터를주고받을 수 있지만 동일한 원본 정책에 의해 제한됩니다. 확장은 그렇게 제한되지 않습니다. 교차 출처 권한을 먼저 요청하는 한 확장은 원래 외부의 원격 서버와 통신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">코드 스 니펫 표시</target>
        </trans-unit>
        <trans-unit id="0dffc8fd53d7404ab229dd02adc93e11952b1553" translate="yes" xml:space="preserve">
          <source>That is why the CORS error appears in the browser, but not in Postman.</source>
          <target state="translated">이것이 CORS 오류가 브라우저에 나타나지만 Postman에는 나타나지 않는 이유입니다.</target>
        </trans-unit>
        <trans-unit id="5bf8dbcda182cc4b0bda73960f1a9cf8c381cda6" translate="yes" xml:space="preserve">
          <source>The browser looks at the CORS policy of the server and respects it.</source>
          <target state="translated">브라우저는 서버의 CORS 정책을보고 존중합니다.</target>
        </trans-unit>
        <trans-unit id="ceed6cae063bc7c92b7b6af8b6c8d7ab1a2cdb1e" translate="yes" xml:space="preserve">
          <source>The reason why you see different results is that Postman:</source>
          <target state="translated">다른 결과를 보는 이유는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1c81ea373f3abf10fd0ecdc714ad26a38f77aee4" translate="yes" xml:space="preserve">
          <source>Then include the Flask cors in your application.</source>
          <target state="translated">그런 다음 응용 프로그램에 Flask cors를 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="fb38f9f526b23438c5be0b9fe8dd336f8889a15b" translate="yes" xml:space="preserve">
          <source>This is similar to browsers' way of sending requests when the site and API has the same domain (browsers also set the header item &lt;code&gt;Referer=http://my-site.local:8088&lt;/code&gt;, however I don't see it in Postman). &lt;strong&gt;When &lt;code&gt;Origin&lt;/code&gt; header is &lt;em&gt;not&lt;/em&gt; set, usually servers allow such requests by default.&lt;/strong&gt;</source>
          <target state="translated">이것은 사이트와 API가 동일한 도메인을 가질 때 브라우저가 요청을 보내는 방법과 유사합니다 (브라우저는 헤더 항목 &lt;code&gt;Referer=http://my-site.local:8088&lt;/code&gt; 을 설정하지만 Postman에서는 보이지 않습니다) . &lt;strong&gt; &lt;code&gt;Origin&lt;/code&gt; 헤더가 설정 &lt;em&gt;되지 않은&lt;/em&gt; 경우 일반적으로 서버는 기본적으로 이러한 요청을 허용합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99c788a5af33f9b7a75a594e048e63aba719cbae" translate="yes" xml:space="preserve">
          <source>This is the request code:</source>
          <target state="translated">이것은 요청 코드입니다.</target>
        </trans-unit>
        <trans-unit id="bda958ded39c4d740b32c0bb520243b452ff89c2" translate="yes" xml:space="preserve">
          <source>This is the standard way how Postman sends requests. But a browser sends requests differently when &lt;strong&gt;your site and API have different domains&lt;/strong&gt;, and then &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS&lt;/a&gt; occurs and the browser automatically:</source>
          <target state="translated">이것이 Postman이 요청을 보내는 표준 방법입니다. 그러나 &lt;strong&gt;사이트와 API의 도메인이&lt;/strong&gt; 다른 경우 브라우저가 요청을 다르게 보낸 다음 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS&lt;/a&gt; 가 발생하고 브라우저가 자동으로 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ad4f53fa26c9f6a889bbca07ed67dcecdcfd7a9f" translate="yes" xml:space="preserve">
          <source>When you are using postman they are not restricted by this policy. Quoted from &lt;em&gt;&lt;a href=&quot;http://developer.chrome.com/extensions/xhr.html&quot;&gt;Cross-Origin XMLHttpRequest&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">우편 배달부를 사용하는 경우이 정책에 의해 제한되지 않습니다. &lt;em&gt;&lt;a href=&quot;http://developer.chrome.com/extensions/xhr.html&quot;&gt;Cross-Origin XMLHttpRequest&lt;/a&gt;&lt;/em&gt; 에서 인용 :</target>
        </trans-unit>
        <trans-unit id="59b847a02c2a444746c032c10e079b2f8a3e7bf2" translate="yes" xml:space="preserve">
          <source>When you have &lt;strong&gt;&lt;code&gt;Host != Origin&lt;/code&gt;&lt;/strong&gt; this is CORS, and when the server detects such a request, it usually &lt;strong&gt;blocks it by default&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;Host != Origin&lt;/code&gt; &lt;/strong&gt; 이것은 CORS이며 서버가 이러한 요청을 감지하면 일반적 &lt;strong&gt;으로 기본적&lt;/strong&gt; 으로 요청을 &lt;strong&gt;차단합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="cf2d78176bba778097ef5ea01d5433e0527e3e1c" translate="yes" xml:space="preserve">
          <source>Why doesn’t Postman get a “No 'Access-Control-Allow-Origin' header is present on the requested resource” error when my JavaScript code does</source>
          <target state="translated">JavaScript 코드에서 Postman에 &quot;요청 된 자원에 'Access-Control-Allow-Origin'헤더가 없습니다&quot;오류가 표시되지 않는 이유</target>
        </trans-unit>
        <trans-unit id="02e7efd96db1e35b08ca4366b80785593d0bb81a" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest cannot load &lt;a href=&quot;http://myApiUrl/login&quot;&gt;http://myApiUrl/login&lt;/a&gt;. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access.</source>
          <target state="translated">XMLHttpRequest가 &lt;a href=&quot;http://myApiUrl/login&quot;&gt;http : // myApiUrl / login을&lt;/a&gt; 로드 할 수 없습니다. 요청 된 리소스에 'Access-Control-Allow-Origin'헤더가 없습니다. 따라서 원점 '널'은 액세스가 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="55c75d004d391d6d7d71b8391da244a7a0f9a08a" translate="yes" xml:space="preserve">
          <source>You can change the configuration of your server to allow CORS requests.</source>
          <target state="translated">CORS 요청을 허용하도록 서버 구성을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00853d73f19844948fadbc48d500f997c46f7ee4" translate="yes" xml:space="preserve">
          <source>jQuery</source>
          <target state="translated">jQuery</target>
        </trans-unit>
        <trans-unit id="2bcbd7795ccef91bb67421f2b45b07248383009c" translate="yes" xml:space="preserve">
          <source>set header &lt;code&gt;Host=example.com&lt;/code&gt; (your API)</source>
          <target state="translated">헤더 &lt;code&gt;Host=example.com&lt;/code&gt; (API) 설정</target>
        </trans-unit>
        <trans-unit id="83a837ce9e0f1b47cb54f8bcb25031ed581631cd" translate="yes" xml:space="preserve">
          <source>sets header &lt;code&gt;Host=example.com&lt;/code&gt; (yours as API)</source>
          <target state="translated">헤더 &lt;code&gt;Host=example.com&lt;/code&gt; 을 설정합니다 (귀하의 API).</target>
        </trans-unit>
        <trans-unit id="976589067a06ceb2e03d9b17f2fe35455220be7b" translate="yes" xml:space="preserve">
          <source>sets header &lt;code&gt;Origin=http://my-site.local:8088&lt;/code&gt; (your site)</source>
          <target state="translated">헤더 &lt;code&gt;Origin=http://my-site.local:8088&lt;/code&gt; (귀하의 사이트)을 설정합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
