<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2010892">
    <body>
      <group id="2010892">
        <trans-unit id="6643d074a248eb492ac0711f2c5d24a825268857" translate="yes" xml:space="preserve">
          <source>(Disclaimer: I am the author.)</source>
          <target state="translated">(免責事項:筆者です。)</target>
        </trans-unit>
        <trans-unit id="3ab6ac30f3134bb06904ebd29f8309562939e1de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://rhaboo.org&quot;&gt;http://rhaboo.org&lt;/a&gt; is a localStorage sugar layer that lets you write things like this:</source>
          <target state="translated">&lt;a href=&quot;http://rhaboo.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://rhaboo.org&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、次のようなものを記述できるlocalStorageシュガーレイヤーです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6484e510fd4bb466e2d9dbb4f2e3563a923ba76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.typescriptlang.org/play/#src=%2F**%0D%0A%20*%20Silly%20wrapper%20to%20be%20able%20to%20type%20the%20storage%20keys%0D%0A%20*%2F%0D%0Aexport%20class%20TypedStorage%3CT%3E%20%7B%0D%0A%0D%0A%20%20%20%20public%20removeItem(key%3A%20keyof%20T)%3A%20void%20%7B%0D%0A%20%20%20%20%20%20%20%20localStorage.removeItem(key)%3B%0D%0A%20%20%20%20%7D%0D%0A%0D%0A%20%20%20%20public%20getItem%3CK%20extends%20keyof%20T%3E(key%3A%20K)%3A%20T%5BK%5D%20%7C%20null%20%7B%0D%0A%20%20%20%20%20%20%20%20const%20data%3A%20string%20%7C%20null%20%3D%20%20localStorage.getItem(key)%3B%0D%0A%20%20%20%20%20%20%20%20return%20JSON.parse(data)%3B%0D%0A%20%20%20%20%7D%0D%0A%0D%0A%20%20%20%20public%20setItem%3CK%20extends%20keyof%20T%3E(key%3A%20K%2C%20value%3A%20T%5BK%5D)%3A%20void%20%7B%0D%0A%20%20%20%20%20%20%20%20const%20data%3A%20string%20%3D%20JSON.stringify(value)%3B%0D%0A%20%20%20%20%20%20%20%20localStorage.setItem(key%2C%20data)%3B%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0A%2F%2F%20write%20an%20interface%20for%20the%20storage%0D%0Ainterface%20MyStore%20%7B%0D%0A%20%20%20age%3A%20number%2C%0D%0A%20%20%20name%3A%20string%2C%0D%0A%20%20%20address%3A%20%7Bcity%3Astring%7D%0D%0A%7D%0D%0A%0D%0Aconst%20storage%3A%20TypedStorage%3CMyStore%3E%20%3D%20new%20TypedStorage%3CMyStore%3E()%3B%0D%0A%0D%0Astorage.setItem(%22wrong%20key%22%2C%20%22%22)%3B%20%2F%2F%20error%20unknown%20key%0D%0Astorage.setItem(%22age%22%2C%20%22hello%22)%3B%20%2F%2F%20error%2C%20age%20should%20be%20number%0D%0Astorage.setItem(%22address%22%2C%20%7Bcity%3A%22Here%22%7D)%3B%20%2F%2F%20ok%0D%0A%0D%0Aconst%20address%3A%20%7Bcity%3Astring%7D%20%3D%20storage.getItem(%22address%22)%3B&quot;&gt;Example usage&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://www.typescriptlang.org/play/#src=%2F**%0D%0A%20*%20Silly%20wrapper%20to%20be%20able%20to%20type%20the%20storage%20keys%0D%0A%20*%2F%0D%0Aexport%20class%20TypedStorage%3CT%3E%20%7B%0D%0A%0D%0A%20%20%20%20public%20removeItem(key%3A%20keyof%20T)%3A%20void%20%7B%0D%0A%20%20%20%20%20%20%20%20localStorage.removeItem(key)%3B%0D%0A%20%20%20%20%7D%0D%0A%0D%0A%20%20%20%20public%20getItem%3CK%20extends%20keyof%20T%3E(key%3A%20K)%3A%20T%5BK%5D%20%7C%20null%20%7B%0D%0A%20%20%20%20%20%20%20%20const%20data%3A%20string%20%7C%20null%20%3D%20%20localStorage.getItem(key)%3B%0D%0A%20%20%20%20%20%20%20%20return%20JSON.parse(data)%3B%0D%0A%20%20%20%20%7D%0D%0A%0D%0A%20%20%20%20public%20setItem%3CK%20extends%20keyof%20T%3E(key%3A%20K%2C%20value%3A%20T%5BK%5D)%3A%20void%20%7B%0D%0A%20%20%20%20%20%20%20%20const%20data%3A%20string%20%3D%20JSON.stringify(value)%3B%0D%0A%20%20%20%20%20%20%20%20localStorage.setItem(key%2C%20data)%3B%0D%0A%20%20%20%20%7D%0D%0A%7D%0D%0A%0D%0A%2F%2F%20write%20an%20interface%20for%20the%20storage%0D%0Ainterface%20MyStore%20%7B%0D%0A%20%20%20age%3A%20number%2C%0D%0A%20%20%20name%3A%20string%2C%0D%0A%20%20%20address%3A%20%7Bcity%3Astring%7D%0D%0A%7D%0D%0A%0D%0Aconst%20storage%3A%20TypedStorage%3CMyStore%3E%20%3D%20new%20TypedStorage%3CMyStore%3E()%3B%0D%0A%0D%0Astorage.setItem(%22wrong%20key%22%2C%20%22%22)%3B%20%2F%2F%20error%20unknown%20key%0D%0Astorage.setItem(%22age%22%2C%20%22hello%22)%3B%20%2F%2F%20error%2C%20age%20should%20be%20number%0D%0Astorage.setItem(%22address%22%2C%20%7Bcity%3A%22Here%22%7D)%3B%20%2F%2F%20ok%0D%0A%0D%0Aconst%20address%3A%20%7Bcity%3Astring%7D%20%3D%20storage.getItem(%22address%22)%3B&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用例&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6abdef070565f9c5c7bba3151fddd3d0c60367e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/andris9/jStorage&quot;&gt;jStorage&lt;/a&gt; or &lt;a href=&quot;https://github.com/andris9/simpleStorage&quot;&gt;simpleStorage&lt;/a&gt; &amp;lt;&amp;lt; my preference</source>
          <target state="translated">&lt;a href=&quot;https://github.com/andris9/jStorage&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jStorage&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/andris9/simpleStorage&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;simpleStorage&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;lt;&amp;lt;私の好み&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c4f46456c91074a62b7dd2b40e04ce302803d7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/marcuswestin/store.js&quot;&gt;Store.js&lt;/a&gt; &amp;lt;&amp;lt; another good option</source>
          <target state="translated">&lt;a href=&quot;https://github.com/marcuswestin/store.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Store.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;lt;&amp;lt;別の良いオプション&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cb025719c5f48cd931b7dd4815d60895bd85213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCALSTORAGE.CYCLICJSON&lt;/code&gt; has &lt;code&gt;.stringify&lt;/code&gt; and &lt;code&gt;.parse&lt;/code&gt; just like normal &lt;code&gt;JSON&lt;/code&gt;, but works with objects with circular references. (&quot;Works&quot; meaning parse(stringify(obj)) and obj are deep equal AND have identical sets of 'inner equalities')</source>
          <target state="translated">&lt;code&gt;LOCALSTORAGE.CYCLICJSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常の&lt;/font&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じように&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.parse&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持っていますが、循環参照を持つオブジェクトで機能します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（「作品」はparse（stringify（obj））とobjが等しく、かつ「内部等式」の同一のセットを持っていることを意味します）&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="145b932e20946a9198ad35d738852b6eac1c5631" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;However, Function serialization/deserialization is unreliable because &lt;a href=&quot;http://ecma-international.org/ecma-262/5.1/#sec-15.3.4&quot;&gt;it is implementation-dependent&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、関数のシリアライゼーション/デシリアライゼーション&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ecma-international.org/ecma-262/5.1/#sec-15.3.4&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は実装に依存する&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;信頼性が低く&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="092d900c6908340a739633e7f6d37cf2351fe959" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I do not recommend&lt;/strong&gt; to store functions because &lt;code&gt;eval()&lt;/code&gt; is evil can lead to issues regarding security, optimisation and debugging.
        In general, &lt;code&gt;eval()&lt;/code&gt; should never be used in JavaScript code.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は悪用される可能性がある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、関数を格納すること&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はお勧め&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。セキュリティ、最適化、デバッグに関する問題が発生する可能性があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一般に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はJavaScriptコードでは使用しないでください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a257cb54edbede6928284acc1c64d268d97725c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LocalStorage&lt;/strong&gt; only support String format for key/value.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LocalStorage&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、キー/値の文字列形式のみをサポートします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d1a04bf5e8d94595c0cc667bef9ba04b3867e36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The very big downside:&lt;/strong&gt; it depends on &lt;code&gt;Object.observe()&lt;/code&gt; so it has very limited browser support. And it doesn't look like it'll be coming for Firefox or Edge anytime soon.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常に大きな欠点：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Object.observe()&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;依存する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、ブラウザーのサポートが非常に制限されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、FirefoxやEdgeにも近々登場するようには見えません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29fefa2d8a5513077230a7f2c5da7135989c0464" translate="yes" xml:space="preserve">
          <source>A minor improvement on a &lt;a href=&quot;https://stackoverflow.com/a/2010994/59087&quot;&gt;variant&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/2010994/59087&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バリアントの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マイナーな改善&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="97aa767e6900ee9c466049d081b5415b48649187" translate="yes" xml:space="preserve">
          <source>A workaround can be to &lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;&lt;em&gt;stringify&lt;/em&gt;&lt;/a&gt; your object before storing it, and later parse it when you retrieve it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回避策は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オブジェクトを格納する前&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.w3schools.com/js/js_json_stringify.asp&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列化&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、後で取得するときに解析することです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb8a13b0f03bde98dbf96afd261876137f121347" translate="yes" xml:space="preserve">
          <source>Adrian.</source>
          <target state="translated">Adrian.</target>
        </trans-unit>
        <trans-unit id="9d2f89083c0856e21e6a8a489f9f54eb4005e901" translate="yes" xml:space="preserve">
          <source>All EJSON serializations are also valid JSON. For example an object with a date and a binary buffer would be serialized in EJSON as:</source>
          <target state="translated">すべてのEJSONシリアライズは有効なJSONでもあります。例えば、日付とバイナリバッファを持つオブジェクトは、以下のようにEJSONでシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="6b5e98d11c2271429a955c5d40b9e47f1819f9c2" translate="yes" xml:space="preserve">
          <source>And every new object &lt;strong&gt;inside&lt;/strong&gt; a tracked object will be automatically tracked.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、追跡された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内の&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての新しいオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は自動的に追跡されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2d4b7b120845b91142202b19abb8fed28cc05e9" translate="yes" xml:space="preserve">
          <source>And retrieve it easily</source>
          <target state="translated">そして、それを簡単に取得します。</target>
        </trans-unit>
        <trans-unit id="31bb284b1127ff065acc8fcfc9096306e1629c5c" translate="yes" xml:space="preserve">
          <source>Another option would be to use an existing plugin.</source>
          <target state="translated">もう一つの選択肢は、既存のプラグインを使用することです。</target>
        </trans-unit>
        <trans-unit id="b9249d16ed74d2e88d502cb61daf5c0c53efe861" translate="yes" xml:space="preserve">
          <source>Another problem &lt;code&gt;stringify&lt;/code&gt; can't deal with are circular references:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が処理できない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もう1つの問題&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は循環参照です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13b4536cad06a5720bf4f78c7ac4073c506de06c" translate="yes" xml:space="preserve">
          <source>As you can see, the primitive values are respected.</source>
          <target state="translated">ご覧のように、原始値が尊重されています。</target>
        </trans-unit>
        <trans-unit id="7fdd7f3a3c39ee431ff142a266ff9c72766e74ed" translate="yes" xml:space="preserve">
          <source>Because of &lt;a href=&quot;http://en.wikipedia.org/wiki/Short-circuit_evaluation&quot;&gt;short-circuit evaluation&lt;/a&gt;, &lt;code&gt;getObject()&lt;/code&gt; will &lt;em&gt;immediately&lt;/em&gt; return &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is not in Storage. It also will not throw a &lt;code&gt;SyntaxError&lt;/code&gt; exception if &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;&quot;&quot;&lt;/code&gt; (the empty string; &lt;code&gt;JSON.parse()&lt;/code&gt; cannot handle that).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Short-circuit_evaluation&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;短絡評価の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、&lt;/font&gt; &lt;code&gt;key&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;がストレージにない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;getObject()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すぐ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、スローされません&lt;/font&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合に例外を&lt;/font&gt; &lt;code&gt;value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt; &lt;code&gt;&quot;&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;（空の文字列を、&lt;/font&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを処理することはできません）。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="418f80f7a468a04be13ee20779512188381e0923" translate="yes" xml:space="preserve">
          <source>Binary (JavaScript &lt;code&gt;Uint8Array&lt;/code&gt; or the result of &lt;a href=&quot;https://docs.meteor.com/api/ejson.html#ejson_new_binary&quot;&gt;EJSON.newBinary&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイナリ（JavaScriptの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かの結果&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.meteor.com/api/ejson.html#ejson_new_binary&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EJSON.newBinary&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf116a38810cefe3ac0e28257c6170fa49eb3f01" translate="yes" xml:space="preserve">
          <source>But we can just use the shortcuts:</source>
          <target state="translated">でも、ショートカットを使えばいいんです。</target>
        </trans-unit>
        <trans-unit id="1b7351d5a86a31280da0f41dc40b7ceed76e184e" translate="yes" xml:space="preserve">
          <source>Circular references</source>
          <target state="translated">回覧板</target>
        </trans-unit>
        <trans-unit id="ab50ae57245060c729fe419d54d2ca43ae5a7154" translate="yes" xml:space="preserve">
          <source>Date (JavaScript &lt;code&gt;Date&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;日付（JavaScript &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Date&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c8572b82261f4cde650fd2f7a1bdf4750a04f18" translate="yes" xml:space="preserve">
          <source>EJSON is an extension of JSON to support more types. It supports all JSON-safe types, as well as:</source>
          <target state="translated">EJSONはJSONの拡張機能で、より多くの型をサポートします。JSONセーフのすべての型をサポートしています。</target>
        </trans-unit>
        <trans-unit id="942ef60bd8cd9d2b00d6ee51a87a43f85a2d1800" translate="yes" xml:space="preserve">
          <source>Everything you do to &lt;code&gt;prop&lt;/code&gt;, or the objects &lt;strong&gt;inside&lt;/strong&gt;&lt;code&gt;storage&lt;/code&gt; will be automatically saved into &lt;code&gt;localStorage&lt;/code&gt;. You're always playing with a real object, so you can do stuff like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;prop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するために行うすべてのこと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、または&lt;/font&gt; &lt;code&gt;storage&lt;/code&gt; &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は自動的に&lt;/font&gt; &lt;code&gt;localStorage&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保存され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは常に実際のオブジェクトで遊んでいるので、次のようなことができます：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="5532be667bf2ceb9f5eb16d40b7bf7b2695ca2b6" translate="yes" xml:space="preserve">
          <source>Extending the Storage object is an awesome solution. For my API, I have created a facade for localStorage and then check if it is an object or not while setting and getting.</source>
          <target state="translated">Storageオブジェクトの拡張は素晴らしいソリューションです。私のAPIでは、localStorageのファサードを作成して、それがオブジェクトであるかどうかを設定したり取得したりしながらチェックしています。</target>
        </trans-unit>
        <trans-unit id="ccf94e144aa392cf4b77fc03436fe8812d75d300" translate="yes" xml:space="preserve">
          <source>For Typescript users willing to set and get typed properties:</source>
          <target state="translated">タイプされたプロパティを設定したり取得したりしたいTypescriptユーザーのために。</target>
        </trans-unit>
        <trans-unit id="a31f3788eb4b71086009b412b0e537e540489f7a" translate="yes" xml:space="preserve">
          <source>For example &lt;a href=&quot;https://github.com/mar10/persisto&quot;&gt;persisto&lt;/a&gt; is an open source project that provides an easy interface to localStorage/sessionStorage and automates persistence for form fields (input, radio buttons, and checkboxes).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/mar10/persisto&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;persisto&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はオープンソースプロジェクトであり、localStorage / sessionStorageへの簡単なインターフェースを提供し、フォームフィールド（入力、ラジオボタン、チェックボックス）の永続化を自動化します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="902d666fb0f5789ed392925fa6e3dba5b086f1ac" translate="yes" xml:space="preserve">
          <source>Here is my localStorage wrapper using ejson</source>
          <target state="translated">以下は ejson を使った localStorage ラッパーです。</target>
        </trans-unit>
        <trans-unit id="25be3cbba78b5c7be40639df6d4c63ac478cdca1" translate="yes" xml:space="preserve">
          <source>Here is the implementation of &lt;code&gt;LOCALSTORAGE&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt; &lt;code&gt;LOCALSTORAGE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の実装です&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6239c80b4c69fbd570bd8d9596f02dc3e5a5f1c" translate="yes" xml:space="preserve">
          <source>Here some extented version of the code posted by @danott</source>
          <target state="translated">ここに @danott さんが投稿したコードの拡張版があります。</target>
        </trans-unit>
        <trans-unit id="468a03cb66d84ffdbd2c4314fc930f5df52b6166" translate="yes" xml:space="preserve">
          <source>Here's my code:</source>
          <target state="translated">これが私のコードだ</target>
        </trans-unit>
        <trans-unit id="11a1d1a2adb285c670d93af2cabba0864a7c6b1d" translate="yes" xml:space="preserve">
          <source>Hope it helps.</source>
          <target state="translated">役に立つことを願っています。</target>
        </trans-unit>
        <trans-unit id="aea1b3a58d2d8732a57c8b95b411a59ab334459d" translate="yes" xml:space="preserve">
          <source>However, finding an efficient solution for storing circular references highly depends on the tasks that need to be solved, and restoring such data is not trivial either.</source>
          <target state="translated">しかし、循環参照を格納するための効率的なソリューションを見つけることは、解決する必要があるタスクに大きく依存し、そのようなデータを復元することも簡単ではありません。</target>
        </trans-unit>
        <trans-unit id="5a724288b88244dcf23e635049d6405e6653dd11" translate="yes" xml:space="preserve">
          <source>I added some types to my wrapper including regular expressions and functions</source>
          <target state="translated">正規表現や関数を含むラッパーにいくつかの型を追加しました。</target>
        </trans-unit>
        <trans-unit id="9ab9425e63e3d134e081780e6755e190d0d8e9a2" translate="yes" xml:space="preserve">
          <source>I arrived at this post after hitting on another post that has been closed as a duplicate of this - titled 'how to store an array in localstorage?'.  Which is fine except neither thread actually provides a full answer as to how you can maintain an array in localStorage - however I have managed to craft a solution based on information contained in both threads.</source>
          <target state="translated">私がこの投稿に辿り着いたのは、この投稿と重複して閉じられている別の投稿-タイトルは 'How to store an array in localstorage?' です。どちらのスレッドも実際には localStorage で配列を維持する方法についての完全な答えを提供していないことを除いては問題ありません-しかし、私は両方のスレッドに含まれている情報に基づいて解決策を作ることができました。</target>
        </trans-unit>
        <trans-unit id="903e02ee16f59511276049472b3c980d46d6f5b8" translate="yes" xml:space="preserve">
          <source>I can store and retrieve primitive JavaScript types and arrays using &lt;code&gt;localStorage&lt;/code&gt;, but objects don't seem to work.  Should they?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;localStorage&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プリミティブなJavaScriptタイプと配列を保存および取得でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、オブジェクトが機能していないようです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らはすべきですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c9d487855fd2e42534dfd731900c0e2185a0c0d" translate="yes" xml:space="preserve">
          <source>I found a way to make it work with objects that have cyclic references.</source>
          <target state="translated">循環参照を持つオブジェクトで動作させる方法を見つけました。</target>
        </trans-unit>
        <trans-unit id="424642cc4bb7d77808eeca840070ed56a8cff5a9" translate="yes" xml:space="preserve">
          <source>I made a thing that doesn't break the existing Storage objects, but creates a wrapper so you can do what you want. The result is a normal object, no methods, with access like any object.</source>
          <target state="translated">既存のStorageオブジェクトを壊さず、ラッパーを作成して好きなことができるようにするものを作ってみました。その結果、普通のオブジェクトで、メソッドもなく、他のオブジェクトと同じようにアクセスできるようになりました。</target>
        </trans-unit>
        <trans-unit id="417f2002829d66f21914ed11131eca7fd53f0ff2" translate="yes" xml:space="preserve">
          <source>I made another minimalistic wrapper with only 20 lines of code to allow using it like it should:</source>
          <target state="translated">20行のコードだけで、これまたミニマムなラッパーを作ってみました。</target>
        </trans-unit>
        <trans-unit id="454f98dd33793dd9b2c1c3479aa0213e4a6886f8" translate="yes" xml:space="preserve">
          <source>I see this behavior in Safari, Chrome, and Firefox, so I assume it's my misunderstanding of the &lt;a href=&quot;http://www.w3.org/TR/webstorage/&quot;&gt;HTML5 Web Storage&lt;/a&gt; spec, not a browser-specific bug or limitation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この動作はSafari、Chrome、Firefoxで見られるので&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ブラウザ固有のバグや制限ではなく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.w3.org/TR/webstorage/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HTML5 Web Storage&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仕様の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誤解だと思い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="297d4cff161c877d89ddbbb07d57e56fb5086dc7" translate="yes" xml:space="preserve">
          <source>I'd like to store a JavaScript object in HTML5 &lt;code&gt;localStorage&lt;/code&gt;, but my object is apparently being converted to a string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptオブジェクトをHTML5 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;localStorage&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に保存したいのです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、オブジェクトが文字列に変換されているようです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6f744c447d9120670179192d7e6a7943ead1205" translate="yes" xml:space="preserve">
          <source>I've tried to make sense of the &lt;em&gt;structured clone&lt;/em&gt; algorithm described in &lt;a href=&quot;http://www.w3.org/TR/html5/infrastructure.html&quot;&gt;http://www.w3.org/TR/html5/infrastructure.html&lt;/a&gt;.  I don't fully understand what it's saying, but maybe my problem has to do with my object's properties not being enumerable (???)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://www.w3.org/TR/html5/infrastructure.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.w3.org/TR/html5/infrastructure.htmlで&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明されて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いる&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構造化クローン&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アルゴリズム&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を理解しようとしました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はそれが何を言っているのか完全には理解していませんが、おそらく私の問題は、列挙できないオブジェクトのプロパティに関係しています（???）&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8660cac5eeea63ae50c0a21ebe9d49fd96f1792a" translate="yes" xml:space="preserve">
          <source>If we need to delete all entries of the store we can simply do:</source>
          <target state="translated">ストアのすべてのエントリを削除する必要がある場合は、単に削除することができます。</target>
        </trans-unit>
        <trans-unit id="170b540f65035cbe17eca019e06d0bb24ff912e7" translate="yes" xml:space="preserve">
          <source>If you need several:</source>
          <target state="translated">いくつか必要な場合</target>
        </trans-unit>
        <trans-unit id="81a8192a523d24c956a576ef07b79fa26584e691" translate="yes" xml:space="preserve">
          <source>If you want 1 &lt;code&gt;localStorage&lt;/code&gt; property to be magic:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;localStorage&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを魔法にし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たい場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15d1994c92bebc7b8f8889f662c8e5e5bf5450c9" translate="yes" xml:space="preserve">
          <source>In theory, it is possible to store objects with functions:</source>
          <target state="translated">理論的には、関数を使ってオブジェクトを格納することが可能です。</target>
        </trans-unit>
        <trans-unit id="96a3a193b1fed533bd89d325a3196038bd5cdfc7" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;JSON.stringify()&lt;/code&gt; will throw a &lt;code&gt;TypeError&lt;/code&gt;&lt;em&gt;&quot;Converting circular structure to JSON&quot;&lt;/em&gt;.
        If storing circular references should be supported, the second parameter of &lt;code&gt;JSON.stringify()&lt;/code&gt; might be used:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この例では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;循環構造をJSONに変換しています&quot;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をスロー&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循環参照の格納をサポートする必要がある場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2番目のパラメーターを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe06a3987401c87459035608180eff500c04a341" translate="yes" xml:space="preserve">
          <source>Is there an easy workaround?</source>
          <target state="translated">簡単な回避策はありますか?</target>
        </trans-unit>
        <trans-unit id="7f3df4801bcbeafa8f2c20d7a1b6819b9864de98" translate="yes" xml:space="preserve">
          <source>It doesn't use JSON.stringify/parse because that would be inaccurate and slow on big objects. Instead, each terminal value has its own localStorage entry.</source>
          <target state="translated">JSON.stringifyparse を使用しないのは、大きなオブジェクトでは不正確で遅いからです。その代わりに、各ターミナルの値はそれ自身の localStorage エントリを持っています。</target>
        </trans-unit>
        <trans-unit id="c5ab39fd815c1f67e18803f41a4fff975bd9e747" translate="yes" xml:space="preserve">
          <source>It looks to me like the &lt;code&gt;setItem&lt;/code&gt; method is converting the input to a string before storing it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;setItem&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドが入力を文字列に変換してから保存する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように見え&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="afe28e1df36634a166f460e8482dcb3a034d0c58" translate="yes" xml:space="preserve">
          <source>It seems that the answers here don't cover all types that are possible in JavaScript, so here are some short examples on how to deal with them correctly:</source>
          <target state="translated">ここでの回答では、JavaScriptで可能なすべての型を網羅しているわけではないようなので、正しい対処法について簡単な例を紹介します。</target>
        </trans-unit>
        <trans-unit id="305435b498970b024d2211ec5ff59a071b517585" translate="yes" xml:space="preserve">
          <source>It'll also implement &lt;strong&gt;delete&lt;/strong&gt; value from localstorage 
and shows how to adds a Getter and Setter layer so instead of</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;localstorageからの値の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;削除&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も実装し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、代わりにGetterおよびSetterレイヤーを追加する方法を示します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c85ef9a635726c3de0d80737faacf3fab1b0fa6b" translate="yes" xml:space="preserve">
          <source>Lawnchair</source>
          <target state="translated">Lawnchair</target>
        </trans-unit>
        <trans-unit id="01326d55ec7e245545aed7ad586fb891cd79557c" translate="yes" xml:space="preserve">
          <source>Let's make an object with cyclic references.</source>
          <target state="translated">環状参照のオブジェクトを作ってみましょう。</target>
        </trans-unit>
        <trans-unit id="17e69a9aaadba47abdecc856a52061e2bce11ab1" translate="yes" xml:space="preserve">
          <source>Looking at the &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/iPhone/Conceptual/SafariJSDatabaseGuide/Name-ValueStorage/Name-ValueStorage.html&quot;&gt;Apple&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API&quot;&gt;Mozilla&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem&quot;&gt;Mozilla again&lt;/a&gt; documentation, the functionality seems to be limited to handle only string key/value pairs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/iPhone/Conceptual/SafariJSDatabaseGuide/Name-ValueStorage/Name-ValueStorage.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Apple&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mozilla&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mozillaの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もう一度&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見ると、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能は文字列のキーと値のペアのみを処理するように制限されているようです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7982013e6d3b7ed1408275836be0c6acb1917bfc" translate="yes" xml:space="preserve">
          <source>OMG</source>
          <target state="translated">OMG</target>
        </trans-unit>
        <trans-unit id="1a890e05a5b1db4346feea44b97ba6cca37fd57e" translate="yes" xml:space="preserve">
          <source>Okay here were go:</source>
          <target state="translated">さて、ここからが本番だ。</target>
        </trans-unit>
        <trans-unit id="cb7ae2ded4aa4e7efd217f3a279fc2eb139bbc08" translate="yes" xml:space="preserve">
          <source>Private members</source>
          <target state="translated">個人会員</target>
        </trans-unit>
        <trans-unit id="338c91ec82ad6af2738b7ae43f3944a07ae274e5" translate="yes" xml:space="preserve">
          <source>Recommend using an abstraction library for many of the features discussed here as well as better compatibility. Lots of options:</source>
          <target state="translated">ここで説明した多くの機能やより良い互換性のために、抽象化ライブラリの使用をお勧めします。多くのオプションがあります。</target>
        </trans-unit>
        <trans-unit id="62c4169631e84d7a595f79513c810e8d73ea65d1" translate="yes" xml:space="preserve">
          <source>So if anyone else is wanting to be able to push/pop/shift items within an array, and they want that array stored in localStorage or indeed sessionStorage, here you go:</source>
          <target state="translated">ですから、もし誰かが配列内でpushpopshiftのアイテムをプッシュできるようにしたいと思っていて、その配列をlocalStorageや実際にsessionStorageに保存したいと思っているのであれば、次のようにしてください。</target>
        </trans-unit>
        <trans-unit id="e1826e19d30db83b66e36de8c916472d22951eda" translate="yes" xml:space="preserve">
          <source>Storing Objects in HTML5 localStorage</source>
          <target state="translated">HTML5 でのオブジェクトの保存 localStorage</target>
        </trans-unit>
        <trans-unit id="1a1bedb88b6e27f460c224fe108409712f6e2df3" translate="yes" xml:space="preserve">
          <source>Stringify doesn't solve all problems</source>
          <target state="translated">Stringifyはすべての問題を解決するわけではありません。</target>
        </trans-unit>
        <trans-unit id="d91b4f16dea59192fd04fa57c4a6442faa900c3a" translate="yes" xml:space="preserve">
          <source>That is why you should convert your data to string whatever it is &lt;em&gt;Array&lt;/em&gt; or &lt;em&gt;Object&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Objectを&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問わず、データを文字列に変換する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="995c08c63cf5cfdcb46105ef15aa849a9672c744" translate="yes" xml:space="preserve">
          <source>The console output is</source>
          <target state="translated">コンソール出力は</target>
        </trans-unit>
        <trans-unit id="3913a9de93589a15c71614e623f22f9ee22f660c" translate="yes" xml:space="preserve">
          <source>The problem with using &lt;code&gt;JSON.stringify()&lt;/code&gt; for storing objects is, that this function can not serialise private members.
This issue can be solved by overwriting the &lt;code&gt;.toString()&lt;/code&gt; method (which is called implicitly when storing data in web storage):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの格納に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する場合の問題&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、この関数がプライベートメンバーをシリアル化できないことです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この問題は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.toString()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド（Webストレージにデータを保存するときに暗黙的に呼び出される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上書きすることで解決できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e820f954a96483f8d497edccfff663ff92c25ac6" translate="yes" xml:space="preserve">
          <source>The thing I made.</source>
          <target state="translated">私が作ったもの。</target>
        </trans-unit>
        <trans-unit id="fb2c8b9db9fa58f77f9a665192e30901c157aa8f" translate="yes" xml:space="preserve">
          <source>Then to retrieve it from the store and convert to an object again:</source>
          <target state="translated">そして、それをストアから取得して、再度オブジェクトに変換するために。</target>
        </trans-unit>
        <trans-unit id="72b0bdb6d34333dcb438e352fcfbe97bcf7c13cd" translate="yes" xml:space="preserve">
          <source>Then when you want to retrieve data , you need to parse the String to Object again.</source>
          <target state="translated">そして、データを取得したいときには、再度StringからObjectへのパースを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="f3660e83c497c6f529035aee9444e5a560670dc2" translate="yes" xml:space="preserve">
          <source>Then, &lt;code&gt;recovered&lt;/code&gt; will be &quot;the same&quot; to obj, in the following sense:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;recovered&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は次の意味でobjと「同じ」になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa0659526a313145b8c06099260180a739be001f" translate="yes" xml:space="preserve">
          <source>There are already some question on SO dealing with this problem: &lt;a href=&quot;https://stackoverflow.com/questions/10392293/stringify-javascript-object-with-circular-reference/12659424#12659424&quot;&gt;Stringify (convert to JSON) a JavaScript object with circular reference&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この問題を処理するSOにはすでにいくつかの質問があります：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10392293/stringify-javascript-object-with-circular-reference/12659424#12659424&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循環参照を持つJavaScriptオブジェクトを文字列化（JSONに変換）します&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c315a294223432269593bb258b573542ee08e9b" translate="yes" xml:space="preserve">
          <source>There is a great library that wraps many solutions so it even supports older browsers called &lt;a href=&quot;https://github.com/andris9/jStorage&quot;&gt;jStorage&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くのソリューションをラップする素晴らしいライブラリーがあるので、&lt;/font&gt;&lt;a href=&quot;https://github.com/andris9/jStorage&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jStorage&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれる古いブラウザーもサポートします&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4339b39be1ebe99074da47d1f6446bdc0fa2c3ef" translate="yes" xml:space="preserve">
          <source>This technique will cause some glitches if you use the letter that you used to split the object, and it's also very experimental.</source>
          <target state="translated">この技は、オブジェクトを分割するときに使った文字を使うとグリッチが発生しますし、実験的でもあります。</target>
        </trans-unit>
        <trans-unit id="bb80cbe571f66a9f330c9a9a53cffe75eea1703e" translate="yes" xml:space="preserve">
          <source>This way you get the functionality that you really wanted even though underneath the API only supports strings.</source>
          <target state="translated">この方法では、APIの下では文字列しかサポートしていないにもかかわらず、本当に欲しかった機能を手に入れることができます。</target>
        </trans-unit>
        <trans-unit id="50724ecf6c06a15461d0dfc2eabac3402fae8e75" translate="yes" xml:space="preserve">
          <source>To Store data in localStorage first of all stringify it using &lt;strong&gt;JSON.stringify()&lt;/strong&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データをlocalStorageに保存するには、まず&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.stringify（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してデータを文字列化し&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27aace4fd8eba8f0e937d5213c436838bc7d9bc0" translate="yes" xml:space="preserve">
          <source>To store an object, you could make a letters that you can use to get an object from a string to an object (may not make sense). For example</source>
          <target state="translated">オブジェクトを格納するには、文字列からオブジェクトを取得するために使用できる文字を作ることができます(意味がないかもしれません)。例えば、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="24ae42a9668125a10f69cb08f5fe9a1528abd335" translate="yes" xml:space="preserve">
          <source>Update: The W3C eventually changed their minds about the structured-clone specification, and decided to change the spec to match the implementations.  See &lt;a href=&quot;https://www.w3.org/Bugs/Public/show_bug.cgi?id=12111&quot;&gt;https://www.w3.org/Bugs/Public/show_bug.cgi?id=12111&lt;/a&gt;. So this question is no longer 100% valid, but the answers still may be of interest.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新：W3Cは最終的に構造化クローン仕様についての考え方を変更し、実装に合わせて仕様を変更することを決定しました。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.w3.org/Bugs/Public/show_bug.cgi?id=12111&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.w3.org/Bugs/Public/show_bug.cgi?id=12111を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、この質問はもはや100％有効ではありませんが、答えはまだ興味深いかもしれません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fd706332579d19b7e0fff493521acdd846574f5" translate="yes" xml:space="preserve">
          <source>User-defined types (see &lt;a href=&quot;https://docs.meteor.com/api/ejson.html#ejson_add_type&quot;&gt;EJSON.addType&lt;/a&gt;. For example, &lt;a href=&quot;https://docs.meteor.com/api/ejson.html#mongo_object_id&quot;&gt;Mongo.ObjectID&lt;/a&gt; is implemented this way.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユーザー定義型（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.meteor.com/api/ejson.html#ejson_add_type&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EJSON.addTypeを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。たとえば、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.meteor.com/api/ejson.html#mongo_object_id&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mongo.ObjectID&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はこの方法で実装されます。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b1c4f0d7fa3db920e25dc4ff8cb30661baac72f" translate="yes" xml:space="preserve">
          <source>We can't do &lt;code&gt;JSON.stringify&lt;/code&gt; here, because of the circular references.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循環参照のため、ここで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実行できません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7735ae06004ca724d2ddf7d54af1be707bcd32f" translate="yes" xml:space="preserve">
          <source>Well you may strip the aliases part with &lt;code&gt;.bind(...)&lt;/code&gt;. However I just put it in since it's really good to know about this. I tooked me hours to find out why a simple &lt;code&gt;get = localStorage.getItem;&lt;/code&gt; don't work</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ええと、あなたは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.bind(...)&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エイリアス部分を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取り除く&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かもしれません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、これについて知っておくのは本当に良いので、私はそれを入れました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜ単純な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get = localStorage.getItem;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かを調べるのに何時間もかかりました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;働かない&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b532c01dce649e7f3761aa011d3adbd53c46c403" translate="yes" xml:space="preserve">
          <source>You can probably guess that I might have something to do with rhaboo ;-)</source>
          <target state="translated">ラブーと関係があるかもしれないと推測できますね ;-)</target>
        </trans-unit>
        <trans-unit id="06b99ecd4c05376cbdaf0b11360a72e5ca71248e" translate="yes" xml:space="preserve">
          <source>You can set an object</source>
          <target state="translated">オブジェクトを設定することができます。</target>
        </trans-unit>
        <trans-unit id="ed818eb24b106ab33144ec6b834be6eba9e768c8" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://docs.meteor.com/api/ejson.html&quot;&gt;ejson&lt;/a&gt; to store the objects as strings.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.meteor.com/api/ejson.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ejson&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オブジェクトを文字列として保存&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d91cf305fbc66527618961fe4731f4bc0a2fb41" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://github.com/macmcmeans/localDataStorage&quot;&gt;localDataStorage&lt;/a&gt; to transparently store javascript data types (Array, Boolean, Date, Float, Integer, String and Object). It also provides lightweight data obfuscation, automatically compresses strings, facilitates query by key (name) as well as query by (key) value, and helps to enforce segmented shared storage within the same domain by prefixing keys.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/macmcmeans/localDataStorage&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;localDataStorage&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptデータ型（配列、ブール、日付、浮動&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;小数点&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、整数、文字列、オブジェクト）を透過的に格納&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、軽量なデータ難読化を提供し、文字列を自動的に圧縮し、キー（名前）によるクエリと（キー）値によるクエリを容易にし、キーにプレフィックスを付けることにより、同じドメイン内でセグメント化された共有ストレージを適用するのに役立ちます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bf91c887657eb4a5bd39cb573d3a5e7f79b25ea" translate="yes" xml:space="preserve">
          <source>You cannot store key value without &lt;strong&gt;String&lt;/strong&gt; Format.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;形式&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がないとキー値を保存できません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78b3287df8fe217ec6673c0cfed59c52b742a473" translate="yes" xml:space="preserve">
          <source>You might find it useful to extend the Storage object with these handy methods:</source>
          <target state="translated">これらの便利なメソッドでStorageオブジェクトを拡張すると便利だと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="5c27f30594942af1477e78edac959eb69e4f16af" translate="yes" xml:space="preserve">
          <source>[DISCLAIMER] I am the author of the utility [/DISCLAIMER]</source>
          <target state="translated">DISCLAIMER]私はユーティリティ[DISCLAIMER]の作者です。</target>
        </trans-unit>
        <trans-unit id="6303f0ea147e69de7d9e30c1d70e15719cbdd60a" translate="yes" xml:space="preserve">
          <source>alekseykulikov/storage</source>
          <target state="translated">alekseykulikov/storage</target>
        </trans-unit>
        <trans-unit id="d16a08ed83bc618991a37afa2214a936b91be256" translate="yes" xml:space="preserve">
          <source>common methods to manipulate arrays:</source>
          <target state="translated">配列を操作するための一般的なメソッドです。</target>
        </trans-unit>
        <trans-unit id="db90223be5ec69d745d4cf4944e487e9a85a8ef1" translate="yes" xml:space="preserve">
          <source>example usage - storing objects in sessionStorage array:</source>
          <target state="translated">使用例-sessionStorage配列にオブジェクトを格納します。</target>
        </trans-unit>
        <trans-unit id="36ffd583073f5cdf7363c482044479388435b07c" translate="yes" xml:space="preserve">
          <source>example usage - storing simple strings in localStorage array:</source>
          <target state="translated">使用例-単純な文字列を localStorage 配列に格納します。</target>
        </trans-unit>
        <trans-unit id="bf2c5a98691511e171f6de36b77fcf652c17b258" translate="yes" xml:space="preserve">
          <source>localForage</source>
          <target state="translated">localForage</target>
        </trans-unit>
        <trans-unit id="831e58656478b19225187d60ec903644c92b2dbf" translate="yes" xml:space="preserve">
          <source>localStorage.clear();</source>
          <target state="translated">localStorage.clear();</target>
        </trans-unit>
        <trans-unit id="61434e1c039a31a46f9dbeb64833e4cd6c703e2f" translate="yes" xml:space="preserve">
          <source>localStorage.setItem('user', JSON.stringify(user));</source>
          <target state="translated">localStorage.setItem('user',JSON.stringify(user))。</target>
        </trans-unit>
        <trans-unit id="dbba44994d12141ede345687bb18024193809987" translate="yes" xml:space="preserve">
          <source>var user = JSON.parse(localStorage.getItem('user'));</source>
          <target state="translated">var user=JSON.parse(localStorage.getItem('user'))。</target>
        </trans-unit>
        <trans-unit id="5c36535a9c2aa5358bd3fa1a809a56719daa66a5" translate="yes" xml:space="preserve">
          <source>you can write</source>
          <target state="translated">書ける</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
