<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/2063480">
    <body>
      <group id="2063480">
        <trans-unit id="46a38bb50117ded0d24290992358c90edab9a70a" translate="yes" xml:space="preserve">
          <source>// here $a is of type int whereas $b is of type string. So here the output</source>
          <target state="translated">/ここで $a は int 型であるのに対し、$b は string 型です。したがって、ここでの出力は次のようになります。</target>
        </trans-unit>
        <trans-unit id="fc5a51a265dad14553d2bd67322f0b7aee5877d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt; is the assignment operator</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; は代入演算子です</target>
        </trans-unit>
        <trans-unit id="67e353bb9f38ae040f7793dc59d3e55383c86b6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;
is the comparison operator (checks if
two variables have equal values)</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; は比較演算子です（2つの変数の値が等しいかどうかを確認します）</target>
        </trans-unit>
        <trans-unit id="26caeafa8d56c5779d17fe1dd8f4d7e7d5a9a54b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;===&lt;/code&gt; is the identical comparison
operator (checks if two variables
have equal values and are of the same
type).</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; は同一の比較演算子です（2つの変数の値が同じで、型が同じかどうかをチェックします）。</target>
        </trans-unit>
        <trans-unit id="d653f8aca6b762d8383fd31bd9a1028e9fc94be8" translate="yes" xml:space="preserve">
          <source>=   assignment operator</source>
          <target state="translated">=代入演算子</target>
        </trans-unit>
        <trans-unit id="3458715682adf89c42a38e788e6b26d7dbd86a1d" translate="yes" xml:space="preserve">
          <source>==  checks if two variables have the same value</source>
          <target state="translated">==2つの変数が同じ値を持つかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="77e50b98002bc3676ad95e1440411a874d3eba6b" translate="yes" xml:space="preserve">
          <source>== operator check if the value of both variables is equal and mostly used in conditions like if statements</source>
          <target state="translated">==演算子は両方の変数の値が等しいかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="9a3bb3f62018401424ab2673673f948f1bbee8b3" translate="yes" xml:space="preserve">
          <source>=== checks if two variables have the same value AND if their types are the same</source>
          <target state="translated">===二つの変数が同じ値を持ち、かつ型が同じかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="2b0a1193b8434c3e9638e07bb8ccdaf259746507" translate="yes" xml:space="preserve">
          <source>=== operator similar to == (check if the value equals) and also check if both of same data type</source>
          <target state="translated">と似たような ===演算子 (値が等しいかどうかをチェックします)と、同じデータ型かどうかもチェックします。</target>
        </trans-unit>
        <trans-unit id="bf4b0ba7c5113872dae9c5c3f8843acb0760dde9" translate="yes" xml:space="preserve">
          <source>For advanced PHP users, knowing the difference between &lt;code&gt;==&lt;/code&gt;and &lt;code&gt;===&lt;/code&gt; and asking themselves &quot;is it faster to compare with &lt;code&gt;==&lt;/code&gt; or with &lt;code&gt;===&lt;/code&gt; when I'm sure that both the operands are the same type?&quot;</source>
          <target state="translated">上級のPHPユーザーの場合、 &lt;code&gt;==&lt;/code&gt; と &lt;code&gt;===&lt;/code&gt; の違いを理解し 、「両方のオペランドが同じ型であると確信している場合、 &lt;code&gt;==&lt;/code&gt; または &lt;code&gt;===&lt;/code&gt; と比較する方が速いですか？」</target>
        </trans-unit>
        <trans-unit id="3d536cf6f4b0db7f3a07f998325f0a7a9cb151ac" translate="yes" xml:space="preserve">
          <source>For more info on the need for &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt;, and situations to use each, look at &lt;a href=&quot;http://il.php.net/manual/en/language.operators.comparison.php&quot;&gt;the docs&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; と &lt;code&gt;===&lt;/code&gt; の必要性、およびそれぞれを使用する状況の詳細については&lt;a href=&quot;http://il.php.net/manual/en/language.operators.comparison.php&quot;&gt;、ドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cfec2c10bbe93fb4df81f527772a0b6e4115a905" translate="yes" xml:space="preserve">
          <source>For the ones interested in benchmarking it themselves, you can use the following code I wrote ad-hoc and try different values for &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt;:</source>
          <target state="translated">それ自体をベンチマークすることに興味がある人は、私がアドホックで書いた次のコードを使用し &lt;code&gt;$a&lt;/code&gt; 、 &lt;code&gt;$b&lt;/code&gt; と$ bに異なる値を試すことができます。</target>
        </trans-unit>
        <trans-unit id="8e7760cdf27d103a6b9c803e0d230892aebffbcd" translate="yes" xml:space="preserve">
          <source>I think using one equal sign is to declare a variable while two equal signs are for a comparison condition and lastly three equal signs are for comparing values of declared variables.</source>
          <target state="translated">1つの等号を使うのは変数の宣言、2つの等号を使うのは比較条件、最後に3つの等号を使うのは宣言された変数の値を比較するためだと思います。</target>
        </trans-unit>
        <trans-unit id="66644bfb49b30440b3737fcafa724b03bc53a635" translate="yes" xml:space="preserve">
          <source>NOTE: The comparison is valid only when each &quot;FIRST TRY&quot; is very close to its &quot;SECOND TRY&quot;. If they are significantly different, it means that the processor was busy doing something else while executing the comparisons and so the results are unreliable and the benchmark should be run again.</source>
          <target state="translated">注意:比較は、各「FIRST TRY」が「SECOND TRY」に非常に近い場合にのみ有効です。もしこれらの比較結果が著しく異なる場合は、比較を実行している間にプロセッサが他の作業に忙しくなっていたため、結果が信頼できず、ベンチマークを再度実行しなければなりません。</target>
        </trans-unit>
        <trans-unit id="380ec1237cab6d1ade13b72b28e24379847c10ed" translate="yes" xml:space="preserve">
          <source>The 3 different equals</source>
          <target state="translated">3つの異なるイコール</target>
        </trans-unit>
        <trans-unit id="a881ca2622c091ff86ae3317620c8a99bb9c9266" translate="yes" xml:space="preserve">
          <source>The = operator assigns the value to a variable
$six = 6; value 6 is assigned to variable $six</source>
          <target state="translated">演算子は、変数 $six=6 に値を代入し、値 6 は変数 $six に代入されます。</target>
        </trans-unit>
        <trans-unit id="ed7bc85bd7b50986460de62edd32e4e7739554b7" translate="yes" xml:space="preserve">
          <source>The short and general answer is: &lt;strong&gt;There is no performance gain in using &lt;code&gt;===&lt;/code&gt; in this cases, so you should probably use &lt;code&gt;==&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">短くて一般的な答えは次のとおりです。 &lt;strong&gt;この場合、 &lt;code&gt;===&lt;/code&gt; を使用してもパフォーマンスは向上しないため、おそらく &lt;code&gt;==&lt;/code&gt; を使用する必要があります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b56c90f6bf9f9a832f5817af1a3becc1b0f7d0c" translate="yes" xml:space="preserve">
          <source>What is the difference between &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, and &lt;code&gt;===&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;===&lt;/code&gt; の違いは何ですか？</target>
        </trans-unit>
        <trans-unit id="a040f429e3d58a3f29ff832dd3b4874b676c0c3b" translate="yes" xml:space="preserve">
          <source>You have &lt;code&gt;=&lt;/code&gt; the &lt;strong&gt;assignment operator&lt;/strong&gt;, &lt;code&gt;==&lt;/code&gt; the &lt;strong&gt;'equal' comparison operator&lt;/strong&gt; and &lt;code&gt;===&lt;/code&gt; the &lt;strong&gt;'identical' comparison operator&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; &lt;strong&gt;代入演算子&lt;/strong&gt; 、 &lt;code&gt;==&lt;/code&gt; &lt;strong&gt;「等しい」比較演算子&lt;/strong&gt; 、 &lt;code&gt;===&lt;/code&gt; &lt;strong&gt;「同一の」比較演算子があり&lt;/strong&gt;ます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
