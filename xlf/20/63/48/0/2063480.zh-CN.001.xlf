<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/2063480">
    <body>
      <group id="2063480">
        <trans-unit id="46a38bb50117ded0d24290992358c90edab9a70a" translate="yes" xml:space="preserve">
          <source>// here $a is of type int whereas $b is of type string. So here the output</source>
          <target state="translated">/这里$a是int类型的,而$b是string类型的。所以这里的输出是</target>
        </trans-unit>
        <trans-unit id="fc5a51a265dad14553d2bd67322f0b7aee5877d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt; is the assignment operator</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; 是赋值运算符</target>
        </trans-unit>
        <trans-unit id="67e353bb9f38ae040f7793dc59d3e55383c86b6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;
is the comparison operator (checks if
two variables have equal values)</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; 是比较运算符（检查两个变量是否具有相等的值）</target>
        </trans-unit>
        <trans-unit id="26caeafa8d56c5779d17fe1dd8f4d7e7d5a9a54b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;===&lt;/code&gt; is the identical comparison
operator (checks if two variables
have equal values and are of the same
type).</source>
          <target state="translated">&lt;code&gt;===&lt;/code&gt; 是相同的比较运算符（检查两个变量是否具有相等的值并且具有相同的类型）。</target>
        </trans-unit>
        <trans-unit id="d653f8aca6b762d8383fd31bd9a1028e9fc94be8" translate="yes" xml:space="preserve">
          <source>=   assignment operator</source>
          <target state="translated">=分配运算器</target>
        </trans-unit>
        <trans-unit id="3458715682adf89c42a38e788e6b26d7dbd86a1d" translate="yes" xml:space="preserve">
          <source>==  checks if two variables have the same value</source>
          <target state="translated">==检查两个变量是否有相同的值。</target>
        </trans-unit>
        <trans-unit id="77e50b98002bc3676ad95e1440411a874d3eba6b" translate="yes" xml:space="preserve">
          <source>== operator check if the value of both variables is equal and mostly used in conditions like if statements</source>
          <target state="translated">==操作符检查两个变量的值是否相等,主要用于if语句等条件中。</target>
        </trans-unit>
        <trans-unit id="9a3bb3f62018401424ab2673673f948f1bbee8b3" translate="yes" xml:space="preserve">
          <source>=== checks if two variables have the same value AND if their types are the same</source>
          <target state="translated">=====检查两个变量是否有相同的值,并且它们的类型是否相同。</target>
        </trans-unit>
        <trans-unit id="2b0a1193b8434c3e9638e07bb8ccdaf259746507" translate="yes" xml:space="preserve">
          <source>=== operator similar to == (check if the value equals) and also check if both of same data type</source>
          <target state="translated">=====操作符类似于===(检查值是否等于),也检查两者是否为相同的数据类型。</target>
        </trans-unit>
        <trans-unit id="bf4b0ba7c5113872dae9c5c3f8843acb0760dde9" translate="yes" xml:space="preserve">
          <source>For advanced PHP users, knowing the difference between &lt;code&gt;==&lt;/code&gt;and &lt;code&gt;===&lt;/code&gt; and asking themselves &quot;is it faster to compare with &lt;code&gt;==&lt;/code&gt; or with &lt;code&gt;===&lt;/code&gt; when I'm sure that both the operands are the same type?&quot;</source>
          <target state="translated">对于高级PHP用户，了解 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;===&lt;/code&gt; 之间的区别并问自己：&amp;ldquo;当我确定两个操作数是同一类型时，与 &lt;code&gt;==&lt;/code&gt; 或 &lt;code&gt;===&lt;/code&gt; 进行比较会更快吗？&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="3d536cf6f4b0db7f3a07f998325f0a7a9cb151ac" translate="yes" xml:space="preserve">
          <source>For more info on the need for &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt;, and situations to use each, look at &lt;a href=&quot;http://il.php.net/manual/en/language.operators.comparison.php&quot;&gt;the docs&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;===&lt;/code&gt; 需求以及使用每种情况的更多信息，请&lt;a href=&quot;http://il.php.net/manual/en/language.operators.comparison.php&quot;&gt;参阅docs&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfec2c10bbe93fb4df81f527772a0b6e4115a905" translate="yes" xml:space="preserve">
          <source>For the ones interested in benchmarking it themselves, you can use the following code I wrote ad-hoc and try different values for &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt;:</source>
          <target state="translated">对于有兴趣对其进行基准测试的人，您可以使用我专门编写的以下代码，并尝试对 &lt;code&gt;$a&lt;/code&gt; 和 &lt;code&gt;$b&lt;/code&gt; 不同的值：</target>
        </trans-unit>
        <trans-unit id="8e7760cdf27d103a6b9c803e0d230892aebffbcd" translate="yes" xml:space="preserve">
          <source>I think using one equal sign is to declare a variable while two equal signs are for a comparison condition and lastly three equal signs are for comparing values of declared variables.</source>
          <target state="translated">我认为用一个等号是声明一个变量,而两个等号是比较条件,最后三个等号是比较声明变量的值。</target>
        </trans-unit>
        <trans-unit id="66644bfb49b30440b3737fcafa724b03bc53a635" translate="yes" xml:space="preserve">
          <source>NOTE: The comparison is valid only when each &quot;FIRST TRY&quot; is very close to its &quot;SECOND TRY&quot;. If they are significantly different, it means that the processor was busy doing something else while executing the comparisons and so the results are unreliable and the benchmark should be run again.</source>
          <target state="translated">注意:只有当每个 &quot;第一次尝试 &quot;与 &quot;第二次尝试 &quot;非常接近时,比较结果才有效。如果它们有明显的差异,说明处理器在执行比较时忙于做其他事情,因此结果不可靠,应该重新运行基准。</target>
        </trans-unit>
        <trans-unit id="380ec1237cab6d1ade13b72b28e24379847c10ed" translate="yes" xml:space="preserve">
          <source>The 3 different equals</source>
          <target state="translated">3个不同的等价物</target>
        </trans-unit>
        <trans-unit id="a881ca2622c091ff86ae3317620c8a99bb9c9266" translate="yes" xml:space="preserve">
          <source>The = operator assigns the value to a variable
$six = 6; value 6 is assigned to variable $six</source>
          <target state="translated">=操作符将值分配给变量$six=6;值6被分配给变量$six。</target>
        </trans-unit>
        <trans-unit id="ed7bc85bd7b50986460de62edd32e4e7739554b7" translate="yes" xml:space="preserve">
          <source>The short and general answer is: &lt;strong&gt;There is no performance gain in using &lt;code&gt;===&lt;/code&gt; in this cases, so you should probably use &lt;code&gt;==&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">简短而通用的答案是： &lt;strong&gt;在这种情况下，使用 &lt;code&gt;===&lt;/code&gt; 不会提高性能，因此您应该使用 &lt;code&gt;==&lt;/code&gt; 。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b56c90f6bf9f9a832f5817af1a3becc1b0f7d0c" translate="yes" xml:space="preserve">
          <source>What is the difference between &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;==&lt;/code&gt;, and &lt;code&gt;===&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; ， &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;===&lt;/code&gt; 有什么区别？</target>
        </trans-unit>
        <trans-unit id="a040f429e3d58a3f29ff832dd3b4874b676c0c3b" translate="yes" xml:space="preserve">
          <source>You have &lt;code&gt;=&lt;/code&gt; the &lt;strong&gt;assignment operator&lt;/strong&gt;, &lt;code&gt;==&lt;/code&gt; the &lt;strong&gt;'equal' comparison operator&lt;/strong&gt; and &lt;code&gt;===&lt;/code&gt; the &lt;strong&gt;'identical' comparison operator&lt;/strong&gt;.</source>
          <target state="translated">您有 &lt;code&gt;=&lt;/code&gt; &lt;strong&gt;赋值运算符&lt;/strong&gt; ， &lt;code&gt;==&lt;/code&gt; &lt;strong&gt;&amp;ldquo;等于&amp;rdquo;比较运算符&lt;/strong&gt;和 &lt;code&gt;===&lt;/code&gt; &lt;strong&gt;&amp;ldquo;相同&amp;rdquo;比较运算符&lt;/strong&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
