<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/20563772">
    <body>
      <group id="20563772">
        <trans-unit id="04c55724768058d5a9709a1afac88b7e9e8c36de" translate="yes" xml:space="preserve">
          <source>&quot;Pretty links&quot; is an often requested topic, but it is rarely fully explained. &lt;a href=&quot;https://en.wikipedia.org/wiki/URL_redirection#Apache_HTTP_Server_mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt; is one way to make &quot;pretty links&quot;, but it's complex and its syntax is very terse, hard to grok, and the documentation assumes a certain level of proficiency in HTTP. Can someone explain in simple terms how &quot;pretty links&quot; work and how mod_rewrite can be used to create them?</source>
          <target state="translated">&quot;Enlaces bonitos&quot; es un tema solicitado con frecuencia, pero rara vez se explica completamente. &lt;a href=&quot;https://en.wikipedia.org/wiki/URL_redirection#Apache_HTTP_Server_mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt; es una forma de hacer &quot;enlaces bonitos&quot;, pero es complejo y su sintaxis es muy concisa, dif&amp;iacute;cil de asimilar, y la documentaci&amp;oacute;n asume un cierto nivel de competencia en HTTP. &amp;iquest;Alguien puede explicar en t&amp;eacute;rminos simples c&amp;oacute;mo funcionan los &quot;enlaces bonitos&quot; y c&amp;oacute;mo se puede usar mod_rewrite para crearlos?</target>
        </trans-unit>
        <trans-unit id="a0144ea22bd63e090c9a57002ef4dca43f06244e" translate="yes" xml:space="preserve">
          <source>&quot;Removing&quot; the PHP extension</source>
          <target state="translated">&quot;Removiendo&quot; la extensi√≥n PHP</target>
        </trans-unit>
        <trans-unit id="597d8e063a87f940aba17a58c3d20ee1aa29b5aa" translate="yes" xml:space="preserve">
          <source>&amp;larr;&amp;rarr;</source>
          <target state="translated">&amp;larr;&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b5513ad1a21d7a31373a546022f3c58ec77d271b" translate="yes" xml:space="preserve">
          <source>&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/234723/generic-htaccess-redirect-www-to-non-www&quot;&gt;Generic htaccess redirect www to non-www&lt;/a&gt;</source>
          <target state="translated">&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/234723/generic-htaccess-redirect-www-to-non-www&quot;&gt;Redireccionamiento gen&amp;eacute;rico de htaccess www a no www&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e9d10a73898648b0aedc5f97de4fe51653ebbb0" translate="yes" xml:space="preserve">
          <source>&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/3634101/url-rewriting-for-different-protocols-in-htaccess&quot;&gt;URL rewriting for different protocols in .htaccess&lt;/a&gt;</source>
          <target state="translated">&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/3634101/url-rewriting-for-different-protocols-in-htaccess&quot;&gt;Reescritura de URL para diferentes protocolos en .htaccess&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11664097a8ffb0d8f28dc915df0128cf941e154f" translate="yes" xml:space="preserve">
          <source>&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/4916222/htaccess-how-to-force-www-in-a-generic-way&quot;&gt;.htaccess - how to force &quot;www.&quot; in a generic way?&lt;/a&gt;</source>
          <target state="translated">&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/4916222/htaccess-how-to-force-www-in-a-generic-way&quot;&gt;.Htaccess: c&amp;oacute;mo forzar &quot;www&quot;.&lt;/a&gt; de manera gen&amp;eacute;rica?</target>
        </trans-unit>
        <trans-unit id="49874443e813166bc4fdbfa82a1bbca93286ff6a" translate="yes" xml:space="preserve">
          <source>&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/9153262/tips-for-debugging-htaccess-rewrite-rules&quot;&gt;Tips for debugging .htaccess rewrite rules&lt;/a&gt;</source>
          <target state="translated">&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/9153262/tips-for-debugging-htaccess-rewrite-rules&quot;&gt;Consejos para depurar reglas de reescritura de .htaccess&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23f298a47c3d469e691054bf2fb011ca932d6db4" translate="yes" xml:space="preserve">
          <source>&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/945047/htaccess-not-working-mod-rewrite&quot;&gt;.htaccess not working (mod_rewrite)&lt;/a&gt;</source>
          <target state="translated">&amp;middot; &lt;a href=&quot;https://stackoverflow.com/questions/945047/htaccess-not-working-mod-rewrite&quot;&gt;.Htaccess no funciona (mod_rewrite)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90b7f713187e69c77adcad3d9680fb1827b33af5" translate="yes" xml:space="preserve">
          <source>&amp;middot; Note that the leading slash is still correct in &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; sections though. Which is why you often see it &lt;code&gt;^/?&lt;/code&gt; optionalized for rule parity.</source>
          <target state="translated">&amp;middot; Tenga en cuenta que la barra inclinada a&amp;uacute;n es correcta en las secciones &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; . Es por eso que a menudo lo ves &lt;code&gt;^/?&lt;/code&gt; opcionalizado para la paridad de regla.</target>
        </trans-unit>
        <trans-unit id="cbe50ec46e66e9fc50014beb0301950e6ccf42b2" translate="yes" xml:space="preserve">
          <source>&amp;middot; Or when using a &lt;code&gt;RewriteCond %{REQUEST_URI}&lt;/code&gt; you'd still match for a leading &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&amp;middot; O cuando se utiliza un &lt;code&gt;RewriteCond %{REQUEST_URI}&lt;/code&gt; a&amp;uacute;n coincidir&amp;iacute;a con un &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="751229f868612475f9aa274c27c6748c3d39d97a" translate="yes" xml:space="preserve">
          <source>&amp;middot; See also &lt;a href=&quot;https://webmasters.stackexchange.com/questions/27118/when-is-the-leading-slash-needed-in-mod-rewrite-patterns&quot;&gt;Webmaster.SE: When is the leading slash (/) needed in mod_rewrite patterns?&lt;/a&gt;</source>
          <target state="translated">&amp;middot; Ver tambi&amp;eacute;n &lt;a href=&quot;https://webmasters.stackexchange.com/questions/27118/when-is-the-leading-slash-needed-in-mod-rewrite-patterns&quot;&gt;Webmaster.SE: &amp;iquest;Cu&amp;aacute;ndo se necesita la barra diagonal (/) en los patrones mod_rewrite?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="09ff1d5e4b8bdd76ba405a3bed899d1c8bef75b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_alias.html#scriptaliasmatch&quot;&gt;&lt;code&gt;ScriptAliasMatch&lt;/code&gt;&lt;/a&gt; is primarily for CGI scripts, but also ought to works for PHP. It allows regexps just like any &lt;code&gt;RewriteRule&lt;/code&gt;. In fact it's perhaps the most robust option to configurate a catch-all front controller.</source>
          <target state="translated">&lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_alias.html#scriptaliasmatch&quot;&gt; &lt;code&gt;ScriptAliasMatch&lt;/code&gt; &lt;/a&gt; es principalmente para scripts CGI, pero tambi&amp;eacute;n deber&amp;iacute;a funcionar para PHP. Permite expresiones regulares como cualquier &lt;code&gt;RewriteRule&lt;/code&gt; . De hecho, es quiz&amp;aacute;s la opci&amp;oacute;n m&amp;aacute;s robusta para configurar un controlador frontal universal.</target>
        </trans-unit>
        <trans-unit id="9a549849bbb01109ba011c5521c50e9b4dab2ca6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html#rewritecond&quot;&gt;Rewrite conditions&lt;/a&gt; make rewrites even more powerful, allowing you to specify rewrites for more specific situations. There are a lot of conditions which you can read about in &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html#rewritecond&quot;&gt;the documentation&lt;/a&gt;, but I'll touch on a few common examples and explain them:</source>
          <target state="translated">&lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html#rewritecond&quot;&gt;Las condiciones de&lt;/a&gt; reescritura hacen que las reescrituras sean a&amp;uacute;n m&amp;aacute;s potentes, lo que le permite especificar reescrituras para situaciones m&amp;aacute;s espec&amp;iacute;ficas. Hay muchas condiciones sobre las que puede leer en &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_rewrite.html#rewritecond&quot;&gt;la documentaci&amp;oacute;n&lt;/a&gt; , pero mencionar&amp;eacute; algunos ejemplos comunes y los explicar&amp;eacute;:</target>
        </trans-unit>
        <trans-unit id="dabf9d101070ea48e2e85c726ecf5e80fe0caccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$&lt;/code&gt; indicates this is the end of the string we want to match</source>
          <target state="translated">&lt;code&gt;$&lt;/code&gt; indica que este es el final de la cadena que queremos hacer coincidir</target>
        </trans-unit>
        <trans-unit id="3841678c9eead3827e8ffd336e806cea70870cfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%{REQUEST_FILENAME} !-d&lt;/code&gt; will check to see if the file exists on the current server, and only execute the rewrite if it doesn't</source>
          <target state="translated">&lt;code&gt;%{REQUEST_FILENAME} !-d&lt;/code&gt; verificar&amp;aacute; si el archivo existe en el servidor actual y solo ejecutar&amp;aacute; la reescritura si no existe</target>
        </trans-unit>
        <trans-unit id="52ef5672eb064f0ebc113e70140ea1eadd1d8617" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%{REQUEST_FILENAME} !-f&lt;/code&gt; will check to see if the file exists on the current server, and only execute the rewrite if it doesn't</source>
          <target state="translated">&lt;code&gt;%{REQUEST_FILENAME} !-f&lt;/code&gt; verificar&amp;aacute; si el archivo existe en el servidor actual y solo ejecutar&amp;aacute; la reescritura si no existe</target>
        </trans-unit>
        <trans-unit id="b5f7869488f52b18660937317e48137ddb57255d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%{REQUEST_URI} \.(jpg|jpeg|gif|png)$ [NC]&lt;/code&gt; will only execute the rewrite for files with a file extension of jpg, jpeg, gif or png (case insensitive).</source>
          <target state="translated">&lt;code&gt;%{REQUEST_URI} \.(jpg|jpeg|gif|png)$ [NC]&lt;/code&gt; solo ejecutar&amp;aacute; la reescritura de archivos con una extensi&amp;oacute;n de archivo de jpg, jpeg, gif o png (sin distinci&amp;oacute;n entre may&amp;uacute;sculas y min&amp;uacute;sculas).</target>
        </trans-unit>
        <trans-unit id="84f88a1c5e685a84649de8e1bb782d50117ee3d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;IfModule *&amp;gt;&lt;/code&gt; wrappers begone!</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfModule *&amp;gt;&lt;/code&gt; envoltorios se fueron!</target>
        </trans-unit>
        <trans-unit id="740e3c6f83451b565f345cfff88bed98503f3438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.*&lt;/code&gt; matches anything, even an empty string. You don't want to use this pattern everywhere, but often in the last fallback rule.</source>
          <target state="translated">&lt;code&gt;.*&lt;/code&gt; coincide con cualquier cosa, incluso una cadena vac&amp;iacute;a. No desea utilizar este patr&amp;oacute;n en todas partes, pero a menudo en la &amp;uacute;ltima regla alternativa.</target>
        </trans-unit>
        <trans-unit id="57a8bb9a55be2beb96f900e52fa775ececf4eb4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.htaccess&lt;/code&gt; vs. &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; vs. &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd8275fe29a7eea617f1c546405e782cf8821462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; means that the preceding character is optional, so in this case both &lt;code&gt;/blog/1/foo/&lt;/code&gt; and &lt;code&gt;/blog/1/foo&lt;/code&gt; would rewrite to the same place</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; significa que el car&amp;aacute;cter anterior es opcional, por lo que en este caso tanto &lt;code&gt;/blog/1/foo/&lt;/code&gt; como &lt;code&gt;/blog/1/foo&lt;/code&gt; se reescribir&amp;aacute;n en el mismo lugar</target>
        </trans-unit>
        <trans-unit id="53ff5984a739c16e5b086e2a03847c8c36b495a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RewriteRule&lt;/code&gt; - starts the rewrite rule</source>
          <target state="translated">&lt;code&gt;RewriteRule&lt;/code&gt; : inicia la regla de reescritura</target>
        </trans-unit>
        <trans-unit id="f6bc4be5b28507c8732dee618da29f11552edf76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[NC,L,QSA]&lt;/code&gt; are flags for the rewrite rule, separated by a comma, which I will explain more on later</source>
          <target state="translated">&lt;code&gt;[NC,L,QSA]&lt;/code&gt; son indicadores de la regla de reescritura, separados por una coma, que explicar&amp;eacute; m&amp;aacute;s adelante.</target>
        </trans-unit>
        <trans-unit id="7f10bfcb87252edf50ae9c562e503f26dba99880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[\w\-.,]+&lt;/code&gt; adds periods and commas. Prefer an escaped &lt;code&gt;\-&lt;/code&gt; dash in &lt;code&gt;[&amp;hellip;]&lt;/code&gt; charclasses.</source>
          <target state="translated">&lt;code&gt;[\w\-.,]+&lt;/code&gt; agrega puntos y comas. Prefiere un &lt;code&gt;\-&lt;/code&gt; gui&amp;oacute;n escapado en &lt;code&gt;[&amp;hellip;]&lt;/code&gt; charclasses.</target>
        </trans-unit>
        <trans-unit id="652e235ffc34df09e53fb0c478bb6569c2f6220f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[\w\-]+&lt;/code&gt; for &quot;slug&quot;-style path segments, using letters, numbers, dash &lt;code&gt;-&lt;/code&gt;&lt;em&gt;and&lt;/em&gt;&lt;code&gt;_&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[\w\-]+&lt;/code&gt; para segmentos de ruta de estilo &quot;slug&quot;, usando letras, n&amp;uacute;meros, guiones &lt;em&gt;y&lt;/em&gt; &lt;code&gt;_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eefc1f169daf6dd207f047f1eca8ec66ccf23d21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[^/]+&lt;/code&gt; is more often used for path segments. It matches anything but the forward slash.</source>
          <target state="translated">&lt;code&gt;[^/]+&lt;/code&gt; se usa con m&amp;aacute;s frecuencia para segmentos de ruta. Coincide con cualquier cosa menos la barra diagonal.</target>
        </trans-unit>
        <trans-unit id="007f7af81afda692adf95fb0f0ea88501e1bf3b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\.&lt;/code&gt; denotes a literal period. Otherwise &lt;code&gt;.&lt;/code&gt; outside of &lt;code&gt;[&amp;hellip;]&lt;/code&gt; is placeholder for any symbol.</source>
          <target state="translated">&lt;code&gt;\.&lt;/code&gt; denota un per&amp;iacute;odo literal. De lo contrario &lt;code&gt;.&lt;/code&gt; fuera de &lt;code&gt;[&amp;hellip;]&lt;/code&gt; hay un marcador de posici&amp;oacute;n para cualquier s&amp;iacute;mbolo.</target>
        </trans-unit>
        <trans-unit id="5a4fb0ae48ecd50b05579d0b16175b9faa2f9145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\d+&lt;/code&gt; only matches numeric strings.</source>
          <target state="translated">&lt;code&gt;\d+&lt;/code&gt; solo coincide con cadenas num&amp;eacute;ricas.</target>
        </trans-unit>
        <trans-unit id="88dd17205e1d1eb1880a3862d44c47469b59bc65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w+&lt;/code&gt; matches alphanumeric characters. It's basically shorthand for &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;\w+&lt;/code&gt; coincide con caracteres alfanum&amp;eacute;ricos. B&amp;aacute;sicamente es una forma abreviada de &lt;code&gt;[A-Za-z0-9_]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecd5b35217c81c63b4a74c2649897e0738e78196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; indicates the start of the page name - so it will rewrite &lt;code&gt;example.com/blog/...&lt;/code&gt; but not &lt;code&gt;example.com/foo/blog/...&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; indica el inicio del nombre de la p&amp;aacute;gina, por lo que reescribir&amp;aacute; &lt;code&gt;example.com/blog/...&lt;/code&gt; pero no &lt;code&gt;example.com/foo/blog/...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76c35aed0c9b66dedf952907da4ac7c5d1e91082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^blog/([0-9]+)/([A-Za-z0-9-\+]+)/?$&lt;/code&gt; - This is called the pattern, however I'll just refer to it as the left hand side of the rule - what you want to rewrite from</source>
          <target state="translated">&lt;code&gt;^blog/([0-9]+)/([A-Za-z0-9-\+]+)/?$&lt;/code&gt; - Esto se llama patr&amp;oacute;n, sin embargo, me referir&amp;eacute; a &amp;eacute;l como el lado izquierdo de la regla: de qu&amp;eacute; quieres reescribir</target>
        </trans-unit>
        <trans-unit id="3c3e47bd9da371a8d996ad9238fb7d0a846ed34f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blog/index.php?id=$1&amp;amp;title=$2&lt;/code&gt; - called the substitution, or right hand side of a rewrite rule - what you want to rewrite to</source>
          <target state="translated">&lt;code&gt;blog/index.php?id=$1&amp;amp;title=$2&lt;/code&gt; - llamado la sustituci&amp;oacute;n, o el lado derecho de una regla de reescritura - a lo que desea reescribir</target>
        </trans-unit>
        <trans-unit id="c018111bc70724dcfa8cb1f7668165f1f8338ea1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(One could use &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_substitute.html&quot;&gt;&lt;code&gt;mod_substitute&lt;/code&gt;&lt;/a&gt; in conjunction to transform outgoing HTML pages and their contained links. Though this is usally more effort than just updating your HTML resources.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Se podr&amp;iacute;a usar &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_substitute.html&quot;&gt; &lt;code&gt;mod_substitute&lt;/code&gt; &lt;/a&gt; en conjunto para transformar las p&amp;aacute;ginas HTML salientes y sus enlaces contenidos. Aunque esto suele ser m&amp;aacute;s esfuerzo que simplemente actualizar sus recursos HTML).&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="13b7ff54bd60680e79ae5fbe5d410830c1d4ba46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Disclaimer: Just a pet peeve.&lt;/em&gt; You often hear pretty URL rewriting schemes referred to as &quot;SEO&quot; links or something. While this is useful for googling examples, it's a dated misnomer.</source>
          <target state="translated">&lt;em&gt;Descargo de responsabilidad: solo un motivo favorito.&lt;/em&gt; A menudo escuchas bonitos esquemas de reescritura de URL conocidos como enlaces &quot;SEO&quot; o algo as&amp;iacute;. Si bien esto es &amp;uacute;til para buscar ejemplos en Google, es un nombre inapropiado.</target>
        </trans-unit>
        <trans-unit id="eac2e867209bf4cc7ac3e6c6c4fa20816e1a9de4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Frequent duplicates:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Duplicados frecuentes:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97e1889f04dc3ae76733cf1c73e291e1aa7e9fa0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Before asking your own question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Antes de hacer tu propia pregunta&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c93e3a38d537bf6691059af6469a46eaab5ed161" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compare &lt;code&gt;access.log&lt;/code&gt; and &lt;code&gt;error.log&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Compare &lt;code&gt;access.log&lt;/code&gt; y &lt;code&gt;error.log&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2eb684fba0d3ae631715207143e21b416e87c173" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Enable the RewriteLog&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Habilite el RewriteLog&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ad2c732c9574e224486865e3a43750bf1d28e9c" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;* &lt;em&gt;If&lt;/em&gt; allowed by the primary Apache configuration file; it's optional, but often enabled.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;* &lt;em&gt;Si lo&lt;/em&gt; permite el archivo de configuraci&amp;oacute;n principal de Apache;&lt;/sub&gt; &lt;sub&gt;Es opcional, pero a menudo est&amp;aacute; habilitado.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="2ac572067e403e7daf793fe6e0ac4b75ec0f146e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;(Keep in mind to remove the slash in &lt;code&gt;^/&lt;/code&gt; pattern prefixes for &lt;code&gt;.htaccess&lt;/code&gt; usage.)&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;(Recuerde eliminar la barra inclinada en los prefijos &lt;code&gt;^/&lt;/code&gt; patr&amp;oacute;n para el uso de &lt;code&gt;.htaccess&lt;/code&gt; ).&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1d70018b10d872204ec89158898067f937b2f3f7" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;a href=&quot;http://httpd.apache.org/docs/2.4/rewrite/intro.html&quot;&gt;Apache manual - mod_rewrite intro&lt;/a&gt;, Copyright 2015 The Apache Software Foundation, AL-2.0&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;a href=&quot;http://httpd.apache.org/docs/2.4/rewrite/intro.html&quot;&gt;Manual de Apache - introducci&amp;oacute;n de mod_rewrite&lt;/a&gt; , Copyright 2015 The Apache Software Foundation, AL-2.0&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="21606782c65e44cac7afbb90977d8b6f82140e76" translate="yes" xml:space="preserve">
          <source>=</source>
          <target state="translated">=</target>
        </trans-unit>
        <trans-unit id="3bb0577c12be030ceb402e055b81983cbc559dc7" translate="yes" xml:space="preserve">
          <source>A common misinterpetation is that a RewriteCond blocks multiple RewriteRules (because they're visually arranged together):</source>
          <target state="translated">Una mala interpretaci√≥n com√∫n es que un RewriteCond bloquea m√∫ltiples Reglas de Reescritura (porque est√°n visualmente dispuestas juntas):</target>
        </trans-unit>
        <trans-unit id="d6fc1b11df2a64cfc4257b5e2e334dcee5fdb582" translate="yes" xml:space="preserve">
          <source>A common variation is to have optional prefixes &lt;em&gt;within&lt;/em&gt; a rule. This usually makes sense if you have static strings or more constrained placeholders around:</source>
          <target state="translated">Una variaci&amp;oacute;n com&amp;uacute;n es tener prefijos opcionales &lt;em&gt;dentro de&lt;/em&gt; una regla. Esto generalmente tiene sentido si tiene cadenas est&amp;aacute;ticas o marcadores de posici&amp;oacute;n m&amp;aacute;s restringidos:</target>
        </trans-unit>
        <trans-unit id="b7d27b8628cafc228ce03267fced905dd8074078" translate="yes" xml:space="preserve">
          <source>A more directed approach to avoid carrying around &lt;code&gt;.php&lt;/code&gt; suffixes in URLs is &lt;a href=&quot;http://php.net/manual/en/security.hiding.php&quot;&gt;configuring the PHP handler&lt;/a&gt; for other file schemes. The simplest option is overriding the default MIME/handler type via &lt;code&gt;.htaccess&lt;/code&gt;:</source>
          <target state="translated">Un enfoque m&amp;aacute;s dirigido para evitar llevar sufijos &lt;code&gt;.php&lt;/code&gt; en las URL es &lt;a href=&quot;http://php.net/manual/en/security.hiding.php&quot;&gt;configurar el controlador PHP&lt;/a&gt; para otros esquemas de archivos. La opci&amp;oacute;n m&amp;aacute;s simple es anular el tipo MIME / controlador predeterminado a trav&amp;eacute;s de &lt;code&gt;.htaccess&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="20fc23c4cb699185bba8ced01fc05186ba75a0a1" translate="yes" xml:space="preserve">
          <source>A more practical use of alternative lists are mapping request paths to distinct scripts. For example to provide uniform URLs for an older and a newer web application based on dates:</source>
          <target state="translated">Un uso m√°s pr√°ctico de las listas alternativas es la asignaci√≥n de las rutas de solicitud a las distintas escrituras.Por ejemplo,para proporcionar direcciones URL uniformes para una aplicaci√≥n web antigua y otra m√°s reciente basadas en fechas:</target>
        </trans-unit>
        <trans-unit id="124f0e78269a525e3a84a54aeffe59146bd971ec" translate="yes" xml:space="preserve">
          <source>A request for &lt;code&gt;/article/123&lt;/code&gt; for example could map to &lt;code&gt;article.php&lt;/code&gt; with a &lt;code&gt;/123&lt;/code&gt; PATH_INFO implicitly. You'd either have to guard your rules then with the commonplace &lt;code&gt;RewriteCond&lt;/code&gt;&lt;code&gt;!-f&lt;/code&gt;+&lt;code&gt;!-d&lt;/code&gt;, and/or disable PATH_INFO support, or perhaps just disable &lt;code&gt;Options -MultiViews&lt;/code&gt;.</source>
          <target state="translated">Una solicitud de &lt;code&gt;/article/123&lt;/code&gt; , por ejemplo, podr&amp;iacute;a correlacionarse con &lt;code&gt;article.php&lt;/code&gt; con un &lt;code&gt;/123&lt;/code&gt; PATH_INFO impl&amp;iacute;citamente. Tendr&amp;iacute;a que proteger sus reglas con &lt;code&gt;RewriteCond&lt;/code&gt; &lt;code&gt;!-f&lt;/code&gt; -F + &lt;code&gt;!-d&lt;/code&gt; , y / o deshabilitar el soporte PATH_INFO, o tal vez simplemente deshabilitar &lt;code&gt;Options -MultiViews&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="433be67f13d6a6039d826a3ae6dabfa87aeb67b2" translate="yes" xml:space="preserve">
          <source>Again take note that such settings propagate from one &lt;code&gt;.htaccess&lt;/code&gt; to subfolders. You always should disable script execution (&lt;code&gt;SetHandler None&lt;/code&gt; and &lt;code&gt;Options -Exec&lt;/code&gt; or &lt;code&gt;php_flag engine off&lt;/code&gt; etc.) for static resources, and upload/ directories etc.</source>
          <target state="translated">Nuevamente, tenga en cuenta que dicha configuraci&amp;oacute;n se propaga desde un &lt;code&gt;.htaccess&lt;/code&gt; a las subcarpetas. Siempre debe deshabilitar la ejecuci&amp;oacute;n del script ( &lt;code&gt;SetHandler None&lt;/code&gt; y &lt;code&gt;Options -Exec&lt;/code&gt; o &lt;code&gt;php_flag engine off&lt;/code&gt; etc.) para recursos est&amp;aacute;ticos, y cargar / directorios, etc.</target>
        </trans-unit>
        <trans-unit id="6c86f75fe82e60b09e41ad6e136753d057e4146d" translate="yes" xml:space="preserve">
          <source>Aliasing old .html paths to .php scripts</source>
          <target state="translated">Alias de los viejos caminos .html a los scripts .php</target>
        </trans-unit>
        <trans-unit id="11b618e5bc8ecbd76c5f38a2fe95c312ffdef55a" translate="yes" xml:space="preserve">
          <source>All of the below examples assume that you have already included &lt;code&gt;RewriteEngine On&lt;/code&gt; in your &lt;code&gt;.htaccess&lt;/code&gt; file.</source>
          <target state="translated">Todos los ejemplos a continuaci&amp;oacute;n asumen que ya ha incluido &lt;code&gt;RewriteEngine On&lt;/code&gt; en su archivo &lt;code&gt;.htaccess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27a22e164a7b422c5235f0d0b21b0dc4423cefeb" translate="yes" xml:space="preserve">
          <source>Alternatively you can utilize PHPs array parameters via &lt;code&gt;?p[]=$1&amp;amp;p[]=$2&amp;amp;p[]=3&lt;/code&gt; query string here - if your script merely prefers them pre-split.
(Though it's more common to just use a catch-all rule, and let the script itself expand the segments out of the REQUEST_URI.)</source>
          <target state="translated">Alternativamente, puede utilizar los par&amp;aacute;metros de la matriz de PHP a trav&amp;eacute;s de &lt;code&gt;?p[]=$1&amp;amp;p[]=$2&amp;amp;p[]=3&lt;/code&gt; cadena de consulta aqu&amp;iacute;, si su script simplemente los prefiere previamente divididos. (Aunque es m&amp;aacute;s com&amp;uacute;n usar una regla general y dejar que el script expanda los segmentos fuera de REQUEST_URI).</target>
        </trans-unit>
        <trans-unit id="e47f4e5a309adcf1b040c5210b5bc773d2eb8468" translate="yes" xml:space="preserve">
          <source>Alternatives to mod_rewrite</source>
          <target state="translated">Alternativas a mod_rewrite</target>
        </trans-unit>
        <trans-unit id="a2ff10145ba39fbaf7ef21bb614d55aaa77793a9" translate="yes" xml:space="preserve">
          <source>Among its many options, Apache provides &lt;code&gt;mod_alias&lt;/code&gt; features - which sometimes work just as well as &lt;code&gt;mod_rewrite&lt;/code&gt;s RewriteRules. Note that most of those must be set up in a &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; section however, not in per-directory &lt;code&gt;.htaccess&lt;/code&gt; config files.</source>
          <target state="translated">Entre sus muchas opciones, Apache proporciona caracter&amp;iacute;sticas &lt;code&gt;mod_alias&lt;/code&gt; , que a veces funcionan tan bien como las RewriteRules de &lt;code&gt;mod_rewrite&lt;/code&gt; . Tenga en cuenta que la mayor&amp;iacute;a de ellos deben configurarse en una secci&amp;oacute;n &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; , no en archivos de configuraci&amp;oacute;n por directorio &lt;code&gt;.htaccess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af99096848ed8cb0eea299166a097937fc97e50b" translate="yes" xml:space="preserve">
          <source>An excerpt from your &lt;code&gt;access.log&lt;/code&gt; and &lt;code&gt;error.log&lt;/code&gt; to verify what the existing rules resolved to. Better yet, a &lt;code&gt;rewrite.log&lt;/code&gt; summary.</source>
          <target state="translated">Un extracto de su &lt;code&gt;error.log&lt;/code&gt; y error.log para verificar qu&amp;eacute; resolvieron las reglas existentes. Mejor a&amp;uacute;n, un resumen &lt;code&gt;rewrite.log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba6a9ee04d540d46321a6a706abef24c659c81df" translate="yes" xml:space="preserve">
          <source>And a plain &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_alias.html#alias&quot;&gt;&lt;code&gt;Alias&lt;/code&gt;&lt;/a&gt; helps with a few simple rewriting schemes as well.</source>
          <target state="translated">Y un &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/mod_alias.html#alias&quot;&gt; &lt;code&gt;Alias&lt;/code&gt; &lt;/a&gt; simple tambi&amp;eacute;n ayuda con algunos esquemas de reescritura simples.</target>
        </trans-unit>
        <trans-unit id="ef9d8db5d3dfaf745489b854e4b254c552aab203" translate="yes" xml:space="preserve">
          <source>And it's commonly distributed for default &lt;code&gt;.htaccess&lt;/code&gt; rulesets with many open source projects. There it's just meant as fallback, and keeps &quot;ugly&quot; URLs work as default.</source>
          <target state="translated">Y se distribuye com&amp;uacute;nmente para los conjuntos de reglas &lt;code&gt;.htaccess&lt;/code&gt; predeterminados con muchos proyectos de c&amp;oacute;digo abierto. Ah&amp;iacute; solo se entiende como reserva, y mantiene las URL &quot;feas&quot; funcionan por defecto.</target>
        </trans-unit>
        <trans-unit id="86da803ab52102ad28a3f8ecce52c7d4a8621043" translate="yes" xml:space="preserve">
          <source>And newcomer-friendly regex overviews even:</source>
          <target state="translated">Y hasta los res√∫menes de regex para reci√©n llegados:</target>
        </trans-unit>
        <trans-unit id="9d30c141612d532ddc9ac96890f3f30fd7097b62" translate="yes" xml:space="preserve">
          <source>And the &lt;a href=&quot;/questions/tagged/mod-rewrite&quot;&gt;mod-rewrite&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/tags/mod-rewrite/info&quot;&gt;tag wiki references&lt;/a&gt;.</source>
          <target state="translated">Y las &lt;a href=&quot;https://stackoverflow.com/tags/mod-rewrite/info&quot;&gt;referencias wiki de etiqueta&lt;/a&gt; &lt;a href=&quot;/questions/tagged/mod-rewrite&quot;&gt;mod-rewrite&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe62757cd069906fac22465f642c8b25e045beee" translate="yes" xml:space="preserve">
          <source>And the short &lt;a href=&quot;http://httpd.apache.org/docs/2.4/rewrite/intro.html#regex&quot;&gt;Apache regex summary&lt;/a&gt;.</source>
          <target state="translated">Y el breve &lt;a href=&quot;http://httpd.apache.org/docs/2.4/rewrite/intro.html#regex&quot;&gt;resumen de expresiones regulares de Apache&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5408edd8784686bb03f95bd3cfbf8d5c4d025f1b" translate="yes" xml:space="preserve">
          <source>Another often encountered rule is this:</source>
          <target state="translated">Otra regla que se encuentra a menudo es esta:</target>
        </trans-unit>
        <trans-unit id="bf5c556e294b25711a0b5a44327bf833cd3e101a" translate="yes" xml:space="preserve">
          <source>Apache &lt;a href=&quot;http://httpd.apache.org/docs/2.4/rewrite/remapping.html&quot;&gt;redirecting and remapping&lt;/a&gt; guide.</source>
          <target state="translated">Gu&amp;iacute;a de &lt;a href=&quot;http://httpd.apache.org/docs/2.4/rewrite/remapping.html&quot;&gt;redireccionamiento y reasignaci&amp;oacute;n de&lt;/a&gt; Apache.</target>
        </trans-unit>
        <trans-unit id="284ef6600e99697d0d7d8d2957a4e47dd26fa3af" translate="yes" xml:space="preserve">
          <source>Apache and PHP versions, OS type, filesystem, DOCUMENT_ROOT, and PHPs &lt;code&gt;$_SERVER&lt;/code&gt; environment if it's about a parameter mismatch.</source>
          <target state="translated">Las versiones de Apache y PHP, tipo de sistema operativo, sistema de archivos, DOCUMENT_ROOT y el entorno PHP &lt;code&gt;$_SERVER&lt;/code&gt; PHP si se trata de una falta de coincidencia de par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="cfe353f8853a9f04a5bdabbcdc53ebd267952363" translate="yes" xml:space="preserve">
          <source>As said before, you don't often want too generic rewrite patterns. It does however make sense to combine static and specific comparisons with a &lt;code&gt;.*&lt;/code&gt; sometimes.</source>
          <target state="translated">Como se dijo antes, a menudo no quieres patrones de reescritura demasiado gen&amp;eacute;ricos. Sin embargo, tiene sentido combinar comparaciones est&amp;aacute;ticas y espec&amp;iacute;ficas con a &lt;code&gt;.*&lt;/code&gt; A veces.</target>
        </trans-unit>
        <trans-unit id="d76c15ceb6076c092e88bddbb37d48859289c9a8" translate="yes" xml:space="preserve">
          <source>As you might know, Stack Overflow is very suitable for asking questions on mod_rewrite. Make them &lt;a href=&quot;https://stackoverflow.com/help/on-topic&quot;&gt;on-topic&lt;/a&gt;
by including prior research and attempts (avoid redundant answers), demonstrate basic &lt;a href=&quot;/questions/tagged/regex&quot;&gt;regex&lt;/a&gt; understanding, and:</source>
          <target state="translated">Como ya sabr&amp;aacute;s, Stack Overflow es muy adecuado para hacer preguntas sobre mod_rewrite. Convi&amp;eacute;rtalos &lt;a href=&quot;https://stackoverflow.com/help/on-topic&quot;&gt;en un tema&lt;/a&gt; incluyendo investigaciones e intentos previos (evite respuestas redundantes), demuestre una comprensi&amp;oacute;n b&amp;aacute;sica de &lt;a href=&quot;/questions/tagged/regex&quot;&gt;expresiones regulares&lt;/a&gt; y:</target>
        </trans-unit>
        <trans-unit id="dff94f3ae82bd649b875179b762ba9d36b194992" translate="yes" xml:space="preserve">
          <source>AskApache &lt;a href=&quot;http://www.askapache.com/htaccess/htaccess.html&quot;&gt;ultimate .htaccess guide&lt;/a&gt;</source>
          <target state="translated">AskApache &lt;a href=&quot;http://www.askapache.com/htaccess/htaccess.html&quot;&gt;ultimate .htaccess guide&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84507ed5b78e9f12ea3e3bf7c3287d27ecaf1074" translate="yes" xml:space="preserve">
          <source>Capture the remainder</source>
          <target state="translated">Capturar el resto</target>
        </trans-unit>
        <trans-unit id="bc24e00f0d506c472f2be3ee5fbfbf1041e1d18a" translate="yes" xml:space="preserve">
          <source>Catch-all for a &lt;a href=&quot;https://stackoverflow.com/questions/8595964/redirect-all-traffic-to-index-php-using-mod-rewrite&quot;&gt;central dispatcher&lt;/a&gt; / front-controller script</source>
          <target state="translated">Catch-all para un script de &lt;a href=&quot;https://stackoverflow.com/questions/8595964/redirect-all-traffic-to-index-php-using-mod-rewrite&quot;&gt;despachador central&lt;/a&gt; / controlador frontal</target>
        </trans-unit>
        <trans-unit id="d5e664288f7b3dfc0c3af90aa9c7fec3210b2112" translate="yes" xml:space="preserve">
          <source>Change the link to a pretty link:</source>
          <target state="translated">Cambie el enlace por un enlace bonito:</target>
        </trans-unit>
        <trans-unit id="edb59b056b2f75d0d2c02a13ae36b3214b3072e9" translate="yes" xml:space="preserve">
          <source>Check that your server has &lt;a href=&quot;https://stackoverflow.com/questions/9234289/verify-if-htaccess-file-is-running&quot;&gt;&lt;code&gt;AllowOverride All&lt;/code&gt; enabled&lt;/a&gt;. Otherwise your per-directory &lt;code&gt;.htaccess&lt;/code&gt; directives will go ignored, and RewriteRules won't work.</source>
          <target state="translated">Verifique que su servidor tenga &lt;a href=&quot;https://stackoverflow.com/questions/9234289/verify-if-htaccess-file-is-running&quot;&gt; &lt;code&gt;AllowOverride All&lt;/code&gt; habilitado&lt;/a&gt; . De lo contrario, sus directivas &lt;code&gt;.htaccess&lt;/code&gt; por directorio se ignorar&amp;aacute;n y RewriteRules no funcionar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="43e02a0b48e4866d690b1c507a06fd483627e959" translate="yes" xml:space="preserve">
          <source>Clients serialize URLs with &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;%20&lt;/code&gt; for spaces. Yet in RewriteRules they're interpreted with literal characters for all relative path segments.</source>
          <target state="translated">Los clientes serializan URL con &lt;code&gt;+&lt;/code&gt; o &lt;code&gt;%20&lt;/code&gt; para espacios. Sin embargo, en RewriteRules se interpretan con caracteres literales para todos los segmentos de ruta relativos.</target>
        </trans-unit>
        <trans-unit id="46769ed18c1d5803b546e2a6cb333b52cf026f52" translate="yes" xml:space="preserve">
          <source>Comment your &lt;code&gt;.htaccess&lt;/code&gt;</source>
          <target state="translated">Comenta tu &lt;code&gt;.htaccess&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2596cd693395e24245479f2e31c3c578dd845a59" translate="yes" xml:space="preserve">
          <source>Disable &lt;code&gt;MultiViews&lt;/code&gt; when virtual paths overlap</source>
          <target state="translated">Deshabilite &lt;code&gt;MultiViews&lt;/code&gt; cuando las rutas virtuales se superponen</target>
        </trans-unit>
        <trans-unit id="36883655179b6ab85d480c08f87d30869c5f79e2" translate="yes" xml:space="preserve">
          <source>Dispatching related URLs to different backends</source>
          <target state="translated">Despachando URLs relacionados a diferentes backends</target>
        </trans-unit>
        <trans-unit id="e0840dbd1ccf3f820f75b9f6644ac7b4d5be4bb3" translate="yes" xml:space="preserve">
          <source>Do's and Dont's in &lt;a href=&quot;https://stackoverflow.com/questions/286004/hidden-features-of-mod-rewrite&quot;&gt;Hidden features of mod_rewrite&lt;/a&gt;.</source>
          <target state="translated">Qu&amp;eacute; hacer y qu&amp;eacute; no hacer en las &lt;a href=&quot;https://stackoverflow.com/questions/286004/hidden-features-of-mod-rewrite&quot;&gt;caracter&amp;iacute;sticas ocultas de mod_rewrite&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="834ed7f21faa963f6520622a494bfc3b58b1ba55" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;RewriteBase&lt;/code&gt; unless needed</source>
          <target state="translated">No use &lt;code&gt;RewriteBase&lt;/code&gt; a menos que sea necesario</target>
        </trans-unit>
        <trans-unit id="21f659d7912dac24fb0f151d94dc06f47abae6ad" translate="yes" xml:space="preserve">
          <source>Each of these placeholders is usually wrapped in &lt;code&gt;(&amp;hellip;)&lt;/code&gt; parentheses as capture group. And the whole pattern often in &lt;code&gt;^&amp;hellip;&amp;hellip;&amp;hellip;$&lt;/code&gt; start + end markers. Quoting &quot;patterns&quot; is optional.</source>
          <target state="translated">Cada uno de estos marcadores de posici&amp;oacute;n suele estar entre par&amp;eacute;ntesis &lt;code&gt;(&amp;hellip;)&lt;/code&gt; como grupo de captura. Y todo el patr&amp;oacute;n a menudo en &lt;code&gt;^&amp;hellip;&amp;hellip;&amp;hellip;$&lt;/code&gt; start + end markers. Citar &quot;patrones&quot; es opcional.</target>
        </trans-unit>
        <trans-unit id="9b7029c092a10a71829815573236b3eb076aec29" translate="yes" xml:space="preserve">
          <source>Each set of &lt;code&gt;(&amp;hellip;)&lt;/code&gt; parentheses represents a regular expression that we can capture as a variable in the right hand side of the rule. In this example:</source>
          <target state="translated">Cada conjunto de par&amp;eacute;ntesis &lt;code&gt;(&amp;hellip;)&lt;/code&gt; representa una expresi&amp;oacute;n regular que podemos capturar como una variable en el lado derecho de la regla. En este ejemplo:</target>
        </trans-unit>
        <trans-unit id="db48663f832a68a6cc97ff86160706f75f79b09e" translate="yes" xml:space="preserve">
          <source>Else &lt;a href=&quot;http://www.regular-expressions.info/quickstart.html&quot;&gt;regexp.info&lt;/a&gt; for easy-to-understand basics.</source>
          <target state="translated">M&amp;aacute;s &lt;a href=&quot;http://www.regular-expressions.info/quickstart.html&quot;&gt;regexp.info&lt;/a&gt; para conceptos b&amp;aacute;sicos f&amp;aacute;ciles de entender.</target>
        </trans-unit>
        <trans-unit id="d919900346eee940f930da58592f8601027964df" translate="yes" xml:space="preserve">
          <source>Enable &lt;a href=&quot;http://httpd.apache.org/docs/2.4/mod/mod_negotiation.html&quot;&gt;MultiViews&lt;/a&gt; to hide the &lt;code&gt;.php&lt;/code&gt; extension</source>
          <target state="translated">Habilite &lt;a href=&quot;http://httpd.apache.org/docs/2.4/mod/mod_negotiation.html&quot;&gt;MultiViews&lt;/a&gt; para ocultar la extensi&amp;oacute;n &lt;code&gt;.php&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d89cfbe7e9590212bd8db77d7953dd70c27090a7" translate="yes" xml:space="preserve">
          <source>Enable &lt;code&gt;mod_rewrite&lt;/code&gt; and &lt;code&gt;.htaccess&lt;/code&gt;</source>
          <target state="translated">Habilite &lt;code&gt;mod_rewrite&lt;/code&gt; y &lt;code&gt;.htaccess&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67f47d9d91b10c7848ba3ab2eb234427fa6f3b4d" translate="yes" xml:space="preserve">
          <source>Ensuring URLs are long-lived (AKA &lt;a href=&quot;https://en.wikipedia.org/wiki/Permalink&quot;&gt;permalinks&lt;/a&gt;).</source>
          <target state="translated">Asegurar que las URL sean de larga duraci&amp;oacute;n (enlaces &lt;a href=&quot;https://en.wikipedia.org/wiki/Permalink&quot;&gt;permanentes&lt;/a&gt; AKA).</target>
        </trans-unit>
        <trans-unit id="0d77e818c790de6920af7153aa064da2c1e29276" translate="yes" xml:space="preserve">
          <source>Even a plain &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/core.html#errordocument&quot;&gt;&lt;code&gt;ErrorDocument&lt;/code&gt;&lt;/a&gt; directive could be used to let a PHP script handle virtual paths. Note that this is a kludgy workaround however, prohibits anything but GET requests, and floods the error.log by definition.</source>
          <target state="translated">Incluso una simple directiva &lt;a href=&quot;http://httpd.apache.org/docs/2.2/mod/core.html#errordocument&quot;&gt; &lt;code&gt;ErrorDocument&lt;/code&gt; &lt;/a&gt; podr&amp;iacute;a usarse para permitir que un script PHP maneje rutas virtuales. Tenga en cuenta que esta es una soluci&amp;oacute;n alternativa, sin embargo, proh&amp;iacute;be todo menos las solicitudes GET e inunda el error.log por definici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="83ec6145cb84f0dee900769119e35d59b3e7d752" translate="yes" xml:space="preserve">
          <source>Firstly, mod_rewrite does not randomly disengage. (If it did, you'd have bigger problems).</source>
          <target state="translated">En primer lugar,mod_rewrite no se desacopla aleatoriamente.(Si lo hiciera,tendr√≠as mayores problemas).</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="b6f02d776f09f6cec4c828de71faf43799655041" translate="yes" xml:space="preserve">
          <source>Flexible segments for virtual paths</source>
          <target state="translated">Segmentos flexibles para caminos virtuales</target>
        </trans-unit>
        <trans-unit id="09583105ba9e06aa15f198d86b54559183928403" translate="yes" xml:space="preserve">
          <source>For the also common</source>
          <target state="translated">Para el tambi√©n com√∫n</target>
        </trans-unit>
        <trans-unit id="8ca49966ea1f0234f7d955d0b2e1ff4363d986f2" translate="yes" xml:space="preserve">
          <source>Fret not.</source>
          <target state="translated">No te preocupes.</target>
        </trans-unit>
        <trans-unit id="8f0e67b093d5ce42b53747a234dad6c49e986688" translate="yes" xml:space="preserve">
          <source>Having readable and obvious resource schemes.</source>
          <target state="translated">Tener esquemas de recursos legibles y obvios.</target>
        </trans-unit>
        <trans-unit id="10aa48f30ba9eb1d996b4bdcdaa78b540e6ae835" translate="yes" xml:space="preserve">
          <source>However don't sacrifice unique requirements for conformism.</source>
          <target state="translated">Sin embargo,no sacrifique los requisitos √∫nicos para el conformismo.</target>
        </trans-unit>
        <trans-unit id="1fba90fa899b377cb4751fbd5881d6c42e5b6ba4" translate="yes" xml:space="preserve">
          <source>However you &lt;strong&gt;don't want&lt;/strong&gt; that usually in your own &lt;code&gt;.htaccess&lt;/code&gt; files.</source>
          <target state="translated">Sin embargo, generalmente &lt;strong&gt;no lo desea&lt;/strong&gt; en sus propios archivos &lt;code&gt;.htaccess&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="daa5192ba9695ec4caf7b9bc31881436591ba4e2" translate="yes" xml:space="preserve">
          <source>If you copy examples from somewhere, take care to include a &lt;code&gt;# comment and origin link&lt;/code&gt;. While it's merely bad manners to omit attribution,
it often really hurts maintenance later. Document any code or tutorial source. In particular while unversed you should be
all the more interested in not treating them like magic blackboxes.</source>
          <target state="translated">Si copia ejemplos de alguna parte, tenga cuidado de incluir un &lt;code&gt;# comment and origin link&lt;/code&gt; . Si bien es simplemente de mala educaci&amp;oacute;n omitir la atribuci&amp;oacute;n, a menudo realmente perjudica el mantenimiento m&amp;aacute;s adelante. Documente cualquier c&amp;oacute;digo o fuente de tutorial. En particular, mientras no est&amp;eacute; versado, deber&amp;iacute;a estar m&amp;aacute;s interesado en no tratarlos como cajas negras m&amp;aacute;gicas.</target>
        </trans-unit>
        <trans-unit id="7bc07c648dc6661d82cf032a6a1256aa5c8a86f1" translate="yes" xml:space="preserve">
          <source>If you have similar rules for multiple virtual page paths, then you can match and compact them with &lt;code&gt;|&lt;/code&gt; alternative lists. And again just reassign them to internal GET parameters:</source>
          <target state="translated">Si tiene reglas similares para m&amp;uacute;ltiples rutas de p&amp;aacute;gina virtuales, puede combinarlas y compactarlas con &lt;code&gt;|&lt;/code&gt; listas alternativas Y nuevamente, simplemente reasignarlos a par&amp;aacute;metros GET internos:</target>
        </trans-unit>
        <trans-unit id="40f9b2a7a4a9787f861888f20e6f6fee7c69fed5" translate="yes" xml:space="preserve">
          <source>If you need up to five path segments, then copy this scheme along into five rules. You can of course use a more specific &lt;code&gt;[^/]+&lt;/code&gt; placeholder each.
Here the ordering isn't as important, as neither overlaps. So having the most frequently used paths first is okay.</source>
          <target state="translated">Si necesita hasta cinco segmentos de ruta, copie este esquema en cinco reglas. Por supuesto, puede usar un marcador de posici&amp;oacute;n &lt;code&gt;[^/]+&lt;/code&gt; m&amp;aacute;s espec&amp;iacute;fico cada uno. Aqu&amp;iacute; el orden no es tan importante, como tampoco se superpone. Por lo tanto, tener los caminos m&amp;aacute;s utilizados primero est&amp;aacute; bien.</target>
        </trans-unit>
        <trans-unit id="f71191a5e264cb63bd6f631ed5e3481ceef06433" translate="yes" xml:space="preserve">
          <source>If you're using RewriteRules in a per-directory config file, then worrying about regex performance is pointless. Apache retains
compiled PCRE patterns longer than a PHP process with a common routing framework. For high-traffic sites you should however consider
moving rulesets into the vhost server configuration, once they've been battle-tested.</source>
          <target state="translated">Si est√°s usando RewriteRules en un archivo de configuraci√≥n por directorios,entonces preocuparse por el rendimiento de regex no tiene sentido.Apache retiene los patrones PCRE compilados m√°s tiempo que un proceso PHP con un marco de trabajo de enrutamiento com√∫n.Para sitios de alto tr√°fico,sin embargo,deber√≠as considerar mover los conjuntos de reglas en la configuraci√≥n del servidor vhost,una vez que hayan sido probados en batalla.</target>
        </trans-unit>
        <trans-unit id="273b2c2b5a292ce481ed96ebfa83369d2f85daa8" translate="yes" xml:space="preserve">
          <source>In this case, prefer the optionalized &lt;code&gt;^/?&lt;/code&gt; directory separator prefix. This allows to move RewriteRules freely between PerDir and server
config files.</source>
          <target state="translated">En este caso, prefiera la opci&amp;oacute;n &lt;code&gt;^/?&lt;/code&gt; prefijo separador de directorio. Esto permite mover RewriteRules libremente entre PerDir y los archivos de configuraci&amp;oacute;n del servidor.</target>
        </trans-unit>
        <trans-unit id="aef9108cecb21bfcd735b644678196233a16cf35" translate="yes" xml:space="preserve">
          <source>Include &lt;em&gt;full&lt;/em&gt; examples of input URLs, falsly rewritten target paths, your real directory structure.</source>
          <target state="translated">Incluya ejemplos &lt;em&gt;completos&lt;/em&gt; de URL de entrada, rutas de destino reescritas falsamente, su estructura de directorio real.</target>
        </trans-unit>
        <trans-unit id="f296f7312d86d0df48d961f47b8c11e9d5bcef5b" translate="yes" xml:space="preserve">
          <source>Introducing shortcuts like &lt;code&gt;http://example.com/article/531&lt;/code&gt; to existing PHP scripts is also easy. The numeric placeholder can just be remapped to a &lt;code&gt;$_GET&lt;/code&gt; parameter:</source>
          <target state="translated">Introducir accesos directos como &lt;code&gt;http://example.com/article/531&lt;/code&gt; a los scripts PHP existentes tambi&amp;eacute;n es f&amp;aacute;cil. El marcador de posici&amp;oacute;n num&amp;eacute;rico se puede reasignar a un par&amp;aacute;metro &lt;code&gt;$_GET&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="deccb5a329125b3a2543074f3d0db866e73f9a4d" translate="yes" xml:space="preserve">
          <source>It &lt;em&gt;does&lt;/em&gt; make sense in &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; sections - if it was combined with another fallback option, such as ScriptAliasMatch. (But nobody ever does that).</source>
          <target state="translated">Tiene sentido en las secciones &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; , si se combin&amp;oacute; con otra opci&amp;oacute;n alternativa, como ScriptAliasMatch. (Pero nadie hace eso nunca).</target>
        </trans-unit>
        <trans-unit id="0301879fb32bdc77402f7413db66117a874fb2e3" translate="yes" xml:space="preserve">
          <source>It makes sense to use with individual web applications in deeper subdirectories. It can shorten RewriteRule patterns in such cases. Generally it's best to prefer relative path specifiers in per-directory rule sets.</source>
          <target state="translated">Tiene sentido usar con aplicaciones web individuales en subdirectorios m√°s profundos.Puede acortar los patrones de la Regla de Reescritura en tales casos.Generalmente es mejor preferir los especificadores de ruta relativos en los conjuntos de reglas por directorios.</target>
        </trans-unit>
        <trans-unit id="5f40de2ca60f034f9b89abc054587e9fe0b8a168" translate="yes" xml:space="preserve">
          <source>It's meant to prevent HTTP &lt;code&gt;500&lt;/code&gt; errors. What it usually accomplishes is gracing your users with HTTP &lt;code&gt;404&lt;/code&gt; errors instead. (Not &lt;em&gt;so much&lt;/em&gt; more user-friendly if you think about it.)</source>
          <target state="translated">Est&amp;aacute; destinado a evitar errores HTTP &lt;code&gt;500&lt;/code&gt; . Lo que generalmente logra es agradecer a sus usuarios con errores HTTP &lt;code&gt;404&lt;/code&gt; . (No &lt;em&gt;es mucho&lt;/em&gt; m&amp;aacute;s f&amp;aacute;cil de usar si lo piensas).</target>
        </trans-unit>
        <trans-unit id="fe7d59926a852a088beeaaee3db79063e7eb9f5e" translate="yes" xml:space="preserve">
          <source>It's not &quot;SEO&quot;-URLs</source>
          <target state="translated">No son &quot;SEO&quot;-URLs</target>
        </trans-unit>
        <trans-unit id="60cd4fcec9f18f17da87abdc46607c7a489cd1f3" translate="yes" xml:space="preserve">
          <source>It's not &lt;em&gt;that pretty&lt;/em&gt; in browser address bars, but you can use spaces in URLs. For rewrite patterns use backslash-escaped &lt;code&gt;\‚ê£&lt;/code&gt; spaces.
Else just &lt;code&gt;&quot;&lt;/code&gt;-quote the whole pattern or substitution:</source>
          <target state="translated">No es tan &lt;em&gt;bonito&lt;/em&gt; en las barras de direcciones del navegador, pero puede usar espacios en las URL. Para reescribir patrones, utilice espacios &lt;code&gt;\‚ê£&lt;/code&gt; barra invertida. De lo contrario, &lt;code&gt;&quot;&lt;/code&gt; -citar todo el patr&amp;oacute;n o sustituci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="bfc7e888699007054c60bf571793536b40294c92" translate="yes" xml:space="preserve">
          <source>Left hand side of the rule</source>
          <target state="translated">El lado izquierdo de la regla</target>
        </trans-unit>
        <trans-unit id="6bee440a86949e7ccce05e9ca4299268e30a2049" translate="yes" xml:space="preserve">
          <source>Lets take this example:</source>
          <target state="translated">Tomemos este ejemplo:</target>
        </trans-unit>
        <trans-unit id="3d960efa71adf65b880313cd6447fa5c5f98e928" translate="yes" xml:space="preserve">
          <source>Look through our &lt;a href=&quot;https://stackoverflow.com/questions/tagged/mod-rewrite?sort=frequent&quot;&gt;most popular mod-rewrite&lt;/a&gt; questions and answers.</source>
          <target state="translated">Mire nuestras preguntas y respuestas de &lt;a href=&quot;https://stackoverflow.com/questions/tagged/mod-rewrite?sort=frequent&quot;&gt;mod-reescritura m&amp;aacute;s populares&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe7bfd847a60a74d96670220635ed35de8d744bc" translate="yes" xml:space="preserve">
          <source>Many basic virtual URL schemes can be achieved without using RewriteRules. Apache allows PHP scripts to be invoked without &lt;code&gt;.php&lt;/code&gt; extension, and with a virtual &lt;code&gt;PATH_INFO&lt;/code&gt; argument.</source>
          <target state="translated">Se pueden lograr muchos esquemas b&amp;aacute;sicos de URL virtual sin usar RewriteRules. Apache permite invocar scripts PHP sin la extensi&amp;oacute;n &lt;code&gt;.php&lt;/code&gt; y con un argumento virtual &lt;code&gt;PATH_INFO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2488526091aa3f6c4f0c336210e3a1890b4fed46" translate="yes" xml:space="preserve">
          <source>Many copy+paste examples contain a &lt;code&gt;RewriteBase /&lt;/code&gt; directive. Which happens to be the implicit default anyway. So you don't actually need this. It's a workaround for fancy VirtualHost rewriting schemes, and misguessed DOCUMENT_ROOT paths for some shared hosters.</source>
          <target state="translated">Muchos ejemplos de copiar + pegar contienen una directiva &lt;code&gt;RewriteBase /&lt;/code&gt; . Que resulta ser el valor impl&amp;iacute;cito predeterminado de todos modos. Entonces realmente no necesitas esto. Es una soluci&amp;oacute;n alternativa para los sofisticados esquemas de reescritura de VirtualHost y las rutas DOCUMENT_ROOT err&amp;oacute;neas para algunos servidores compartidos.</target>
        </trans-unit>
        <trans-unit id="b6ec4f0b45ba608dc99259ba104501c3006e2b98" translate="yes" xml:space="preserve">
          <source>Most rules you'll encounter map a constrained set of &lt;code&gt;/&amp;hellip;/&lt;/code&gt; resource path segments to individual GET parameters. Some scripts &lt;a href=&quot;https://stackoverflow.com/q/3655893&quot;&gt;handle a variable number of options&lt;/a&gt; however.
The Apache regexp engine doesn't allow optionalizing an arbitrary number of them. But you can easily expand it into a rule block yourself:</source>
          <target state="translated">La mayor&amp;iacute;a de las reglas que encontrar&amp;aacute; asignan un conjunto restringido de &lt;code&gt;/&amp;hellip;/&lt;/code&gt; segmentos de ruta de recursos a par&amp;aacute;metros GET individuales. Sin embargo, algunos scripts &lt;a href=&quot;https://stackoverflow.com/q/3655893&quot;&gt;manejan un n&amp;uacute;mero variable de opciones&lt;/a&gt; . El motor regexp de Apache no permite la opci&amp;oacute;n de un n&amp;uacute;mero arbitrario de ellos. Pero puede expandirlo f&amp;aacute;cilmente en un bloque de reglas usted mismo:</target>
        </trans-unit>
        <trans-unit id="91486619ecb50e8edbf96d3a9061ef481aa26b8d" translate="yes" xml:space="preserve">
          <source>Mostly just output &lt;code&gt;[^/]+&lt;/code&gt; generic placeholders, but likely suffices for trivial sites.</source>
          <target state="translated">Principalmente solo genera &lt;code&gt;[^/]+&lt;/code&gt; marcadores de posici&amp;oacute;n gen&amp;eacute;ricos, pero probablemente sea suficiente para sitios triviales.</target>
        </trans-unit>
        <trans-unit id="1d74e7db0e0fdb1eefe36a8b715de7d180085193" translate="yes" xml:space="preserve">
          <source>None of the modern search engines are really disturbed by &lt;code&gt;.html&lt;/code&gt; and &lt;code&gt;.php&lt;/code&gt; in path segments, or &lt;code&gt;?id=123&lt;/code&gt; query strings for that matter. Search engines of old, such as AltaVista, &lt;em&gt;did&lt;/em&gt; avoid crawling websites with potentially ambigious access paths. Modern crawlers are often even craving for deep web resources.</source>
          <target state="translated">Ninguno de los motores de b&amp;uacute;squeda modernos est&amp;aacute; realmente perturbado por &lt;code&gt;.html&lt;/code&gt; y &lt;code&gt;.php&lt;/code&gt; en segmentos de ruta, o &lt;code&gt;?id=123&lt;/code&gt; cadenas de consulta para el caso. Los motores de b&amp;uacute;squeda antiguos, como AltaVista, evitaron rastrear sitios web con rutas de acceso potencialmente ambiguas. Los rastreadores modernos a menudo incluso anhelan recursos web profundos.</target>
        </trans-unit>
        <trans-unit id="f315ee6a0a369040aac7c320f6906f7802ad2aa3" translate="yes" xml:space="preserve">
          <source>Note how this example just uses &lt;code&gt;[END]&lt;/code&gt; instead of &lt;code&gt;[L]&lt;/code&gt; to safely alternate. For older Apache 2.2 versions you can use other workarounds, besides also remapping
query string parameters for example:
&lt;a href=&quot;https://stackoverflow.com/questions/11629896/mod-rewrite-redirect-url-with-query-string-to-pretty-url&quot;&gt;Redirect ugly to pretty URL, remap  back to the ugly path, without infinite loops&lt;/a&gt;</source>
          <target state="translated">Observe c&amp;oacute;mo este ejemplo solo usa &lt;code&gt;[END]&lt;/code&gt; lugar de &lt;code&gt;[L]&lt;/code&gt; para alternar de manera segura. Para versiones anteriores de Apache 2.2, puede usar otras soluciones alternativas, adem&amp;aacute;s de reasignar los par&amp;aacute;metros de la cadena de consulta, por ejemplo: &lt;a href=&quot;https://stackoverflow.com/questions/11629896/mod-rewrite-redirect-url-with-query-string-to-pretty-url&quot;&gt;Redirigir URL fea a bonita, reasignar nuevamente a la ruta fea, sin bucles infinitos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc7223f3c5a01865151b0532dd2483e959ec3aa6" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;your script&lt;/em&gt;&lt;strong&gt;must&lt;/strong&gt; be able (or be adapted) to map those titles back to database-ids. RewriteRules alone can't create or guess information out of thin air.</source>
          <target state="translated">Tenga en cuenta que &lt;em&gt;su script&lt;/em&gt; &lt;strong&gt;debe&lt;/strong&gt; ser capaz (o estar adaptado) de asignar esos t&amp;iacute;tulos nuevamente a los identificadores de la base de datos. RewriteRules solo no puede crear o adivinar informaci&amp;oacute;n de la nada.</target>
        </trans-unit>
        <trans-unit id="0c2965817441b972dd6422436654a2df9f92c29e" translate="yes" xml:space="preserve">
          <source>Note that MultiViews has a different/broader purpose though. It incurs a &lt;em&gt;very minor&lt;/em&gt; performance penalty, because Apache always looks for other files with matching basenames. It's actually meant for &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_negotiation&quot;&gt;Content-Negotiation&lt;/a&gt;, so browsers receive the best alternative among available resources (such as &lt;code&gt;article.en.php&lt;/code&gt;, &lt;code&gt;article.fr.php&lt;/code&gt;, &lt;code&gt;article.jp.mp4&lt;/code&gt;).</source>
          <target state="translated">Sin embargo, tenga en cuenta que MultiViews tiene un prop&amp;oacute;sito diferente / m&amp;aacute;s amplio. Incurre en una penalizaci&amp;oacute;n de rendimiento &lt;em&gt;muy peque&amp;ntilde;a&lt;/em&gt; , porque Apache siempre busca otros archivos con nombres de base coincidentes. En realidad, est&amp;aacute; destinado a &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_negotiation&quot;&gt;la negociaci&amp;oacute;n&lt;/a&gt; de contenido , por lo que los navegadores reciben la mejor alternativa entre los recursos disponibles (como &lt;code&gt;article.en.php&lt;/code&gt; , &lt;code&gt;article.fr.php&lt;/code&gt; , &lt;code&gt;article.jp.mp4&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="421dacfb060756bed4005a3f4a19279a8d0a45ad" translate="yes" xml:space="preserve">
          <source>Note that RewriteCond/RewriteRule combos can be more complex, with matches (&lt;code&gt;%1&lt;/code&gt; and &lt;code&gt;$1&lt;/code&gt;) interacting in both directions even:</source>
          <target state="translated">Tenga en cuenta que los combos RewriteCond / RewriteRule pueden ser m&amp;aacute;s complejos, con coincidencias ( &lt;code&gt;%1&lt;/code&gt; y &lt;code&gt;$1&lt;/code&gt; ) que interact&amp;uacute;an en ambas direcciones, incluso:</target>
        </trans-unit>
        <trans-unit id="ed12e6e43435545c959aae1c59102e543bb2d305" translate="yes" xml:space="preserve">
          <source>Note that this doesn't copy a query string along, etc.</source>
          <target state="translated">Tenga en cuenta que esto no copia una cadena de consulta,etc.</target>
        </trans-unit>
        <trans-unit id="8965d98cc2645af0da6247a2206e79a972c91350" translate="yes" xml:space="preserve">
          <source>Now take this with a grain of salt. Not every advise can be generalized to all contexts.
This is just a simple summary of well-known and a few unobvious stumbling blocks:</source>
          <target state="translated">Ahora toma esto con un grano de sal.No todos los consejos pueden ser generalizados a todos los contextos.Este es s√≥lo un simple resumen de los conocidos y algunos tropiezos no obvios:</target>
        </trans-unit>
        <trans-unit id="d1728adec405a6b225772abbd6bd1fd0974106ab" translate="yes" xml:space="preserve">
          <source>Now the more complex pattern &lt;code&gt;(?:/([^/])+)?&lt;/code&gt; there simply wraps a &lt;em&gt;non-capturing&lt;/em&gt;&lt;code&gt;(?:&amp;hellip;)&lt;/code&gt; group, and makes it optional &lt;code&gt;)?&lt;/code&gt;. The contained
placeholder &lt;code&gt;([^/]+)&lt;/code&gt; would be substitution pattern &lt;code&gt;$2&lt;/code&gt;, but be empty if there's no middle &lt;code&gt;/&amp;hellip;/&lt;/code&gt; path.</source>
          <target state="translated">&amp;iquest;Ahora el patr&amp;oacute;n m&amp;aacute;s complejo &lt;code&gt;(?:/([^/])+)?&lt;/code&gt; simplemente envuelve un grupo que &lt;em&gt;no captura&lt;/em&gt; &lt;code&gt;(?:&amp;hellip;)&lt;/code&gt; y lo hace opcional &lt;code&gt;)?&lt;/code&gt; . El marcador de posici&amp;oacute;n contenido &lt;code&gt;([^/]+)&lt;/code&gt; ser&amp;iacute;a el patr&amp;oacute;n de sustituci&amp;oacute;n &lt;code&gt;$2&lt;/code&gt; , pero estar&amp;aacute; vac&amp;iacute;o si no hay un medio &lt;code&gt;/&amp;hellip;/&lt;/code&gt; ruta.</target>
        </trans-unit>
        <trans-unit id="45683ef59f00892047993aca6b972c98e9a0ee43" translate="yes" xml:space="preserve">
          <source>Now this &lt;code&gt;/virtual/path&lt;/code&gt; shows up in PHP as &lt;a href=&quot;https://secure.php.net/manual/en/reserved.variables.server.php#~PATH_INFO&quot;&gt;&lt;code&gt;$_SERVER[&quot;PATH_INFO&quot;]&lt;/code&gt;&lt;/a&gt; where you can handle any extra arguments however you like.</source>
          <target state="translated">Ahora esta &lt;code&gt;/virtual/path&lt;/code&gt; aparece en PHP como &lt;a href=&quot;https://secure.php.net/manual/en/reserved.variables.server.php#~PATH_INFO&quot;&gt; &lt;code&gt;$_SERVER[&quot;PATH_INFO&quot;]&lt;/code&gt; &lt;/a&gt; donde puede manejar cualquier argumento adicional como desee.</target>
        </trans-unit>
        <trans-unit id="f37afffd1053ca926ca822a035ccdafe43d5cba9" translate="yes" xml:space="preserve">
          <source>Now this can have some security and performance implications, because all extensionless files would be piped through PHP now. Therefore you can alternatively set this behaviour for individual files only:</source>
          <target state="translated">Ahora esto puede tener algunas implicaciones de seguridad y rendimiento,porque todos los archivos sin extensi√≥n ser√≠an canalizados a trav√©s de PHP ahora.Por lo tanto,usted puede alternativamente establecer este comportamiento para archivos individuales solamente:</target>
        </trans-unit>
        <trans-unit id="7867d100537d9098a99e4b192ff17b1002e490bb" translate="yes" xml:space="preserve">
          <source>Now this handles both &lt;code&gt;http://example.com/blog/123&lt;/code&gt; and &lt;code&gt;/blog/123/&lt;/code&gt;. And the</source>
          <target state="translated">Ahora esto maneja tanto &lt;code&gt;http://example.com/blog/123&lt;/code&gt; como &lt;code&gt;/blog/123/&lt;/code&gt; . Y el</target>
        </trans-unit>
        <trans-unit id="b48064afbe59853d0a5c42248122b5a14e1f1c10" translate="yes" xml:space="preserve">
          <source>Now you could just skip passing the &lt;code&gt;title=$2&lt;/code&gt; anyway, because your script will typically rely on the database-id anyway. The &lt;code&gt;-title-slug&lt;/code&gt; has become arbitrary URL decoration.</source>
          <target state="translated">Ahora puede omitir pasar el &lt;code&gt;title=$2&lt;/code&gt; todos modos, ya que su script generalmente depender&amp;aacute; de la base de datos de identificaci&amp;oacute;n de todos modos. El &lt;code&gt;-title-slug&lt;/code&gt; se ha convertido en una decoraci&amp;oacute;n de URL arbitraria.</target>
        </trans-unit>
        <trans-unit id="ed748a9515391cfb1af34a967ee70140171d18c6" translate="yes" xml:space="preserve">
          <source>Nowadays &lt;a href=&quot;http://httpd.apache.org/docs/2.4/en/mod/core.html#acceptpathinfo&quot;&gt;&lt;code&gt;AcceptPathInfo On&lt;/code&gt;&lt;/a&gt; is often enabled by default. Which basically allows &lt;code&gt;.php&lt;/code&gt; and other resource URLs to carry a virtual argument:</source>
          <target state="translated">Hoy en d&amp;iacute;a, &lt;a href=&quot;http://httpd.apache.org/docs/2.4/en/mod/core.html#acceptpathinfo&quot;&gt; &lt;code&gt;AcceptPathInfo On&lt;/code&gt; a&lt;/a&gt; menudo est&amp;aacute; habilitado de manera predeterminada. Lo que b&amp;aacute;sicamente permite que &lt;code&gt;.php&lt;/code&gt; y otras URL de recursos lleven un argumento virtual:</target>
        </trans-unit>
        <trans-unit id="0afd56482356096622a5660a16723100cd4fa634" translate="yes" xml:space="preserve">
          <source>Numeric identifiers</source>
          <target state="translated">Identificadores num√©ricos</target>
        </trans-unit>
        <trans-unit id="5f378de1046672c4099905b347e55ac91af76926" translate="yes" xml:space="preserve">
          <source>Obviously &lt;a href=&quot;https://stackoverflow.com/questions/869092/how-to-enable-mod-rewrite-for-apache-2-2&quot;&gt;have &lt;code&gt;mod_rewrite&lt;/code&gt; enabled&lt;/a&gt; in your &lt;code&gt;httpd.conf&lt;/code&gt; modules section.</source>
          <target state="translated">Obviamente &lt;a href=&quot;https://stackoverflow.com/questions/869092/how-to-enable-mod-rewrite-for-apache-2-2&quot;&gt;tiene &lt;code&gt;mod_rewrite&lt;/code&gt; habilitado&lt;/a&gt; en su secci&amp;oacute;n de m&amp;oacute;dulos &lt;code&gt;httpd.conf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ddb71358a682b6ae3c886c00e05b6ee0351e570" translate="yes" xml:space="preserve">
          <source>Occasionally it's suitable to alternate between &lt;code&gt;/&lt;/code&gt;-delimiters and &lt;code&gt;:&lt;/code&gt; or &lt;code&gt;.&lt;/code&gt; in the same rule even. Or have two RewriteRules again to map variants onto different scripts.</source>
          <target state="translated">Ocasionalmente es adecuado alternar entre &lt;code&gt;/&lt;/code&gt; -delimitadores y &lt;code&gt;:&lt;/code&gt; o &lt;code&gt;.&lt;/code&gt; en la misma regla incluso. O tenga dos RewriteRules nuevamente para mapear variantes en diferentes scripts.</target>
        </trans-unit>
        <trans-unit id="382738c5157f5ee201cf389409adf7a1a5d95f2c" translate="yes" xml:space="preserve">
          <source>Oft-used placeholders</source>
          <target state="translated">Marcadores de posici√≥n de uso frecuente</target>
        </trans-unit>
        <trans-unit id="a4d4b59e499759015fe91837364116829ea9c319" translate="yes" xml:space="preserve">
          <source>Often simply by adding &lt;code&gt;&amp;lt;base href=&quot;/index&quot;&amp;gt;&lt;/code&gt; into your HTML &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section.
This implicitly rebinds relative references to what they were before.</source>
          <target state="translated">A menudo, simplemente agregando &lt;code&gt;&amp;lt;base href=&quot;/index&quot;&amp;gt;&lt;/code&gt; en su secci&amp;oacute;n HTML &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; . Esto impl&amp;iacute;citamente vuelve a unir referencias relativas a lo que eran antes.</target>
        </trans-unit>
        <trans-unit id="64dd841b1c90885ac80fd0d55f39f4aa949aefcb" translate="yes" xml:space="preserve">
          <source>Often you can figure out how a RewriteRule misbehaves just from looking at your &lt;code&gt;error.log&lt;/code&gt; and &lt;code&gt;access.log&lt;/code&gt;.
Correlate access times to see which request path originally came in, and which path/file Apache couldn't resolve to (error 404/500).</source>
          <target state="translated">A menudo puede descubrir c&amp;oacute;mo se comporta mal una RewriteRule con solo mirar su &lt;code&gt;error.log&lt;/code&gt; y &lt;code&gt;access.log&lt;/code&gt; . Correlacione los tiempos de acceso para ver qu&amp;eacute; ruta de solicitud entr&amp;oacute; originalmente y qu&amp;eacute; ruta / archivo no pudo resolver Apache (error 404/500).</target>
        </trans-unit>
        <trans-unit id="0df724c30480f21eaa050c58057282993948b80e" translate="yes" xml:space="preserve">
          <source>Only using server-absolute references &lt;code&gt;href=&quot;/old.html&quot;&lt;/code&gt; or &lt;code&gt;src=&quot;/logo.png&quot;&lt;/code&gt;</source>
          <target state="translated">Solo utilizando referencias absolutas del servidor &lt;code&gt;href=&quot;/old.html&quot;&lt;/code&gt; o &lt;code&gt;src=&quot;/logo.png&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="154c95281c3d555dc7266790046d6d0c55b5ef77" translate="yes" xml:space="preserve">
          <source>Optional segments</source>
          <target state="translated">Segmentos opcionales</target>
        </trans-unit>
        <trans-unit id="bf0dfa52ba48f0808d587223064703f75f816c3a" translate="yes" xml:space="preserve">
          <source>Optional trailing &lt;code&gt;/&lt;/code&gt; slash</source>
          <target state="translated">Trailing &lt;code&gt;/&lt;/code&gt; slash opcional</target>
        </trans-unit>
        <trans-unit id="bd4bedf42533e868451f1a4c9022eac830c1394e" translate="yes" xml:space="preserve">
          <source>Ordering is important</source>
          <target state="translated">El pedido es importante</target>
        </trans-unit>
        <trans-unit id="ed609198a95c9be6f04ce9d1d822a9807996d79c" translate="yes" xml:space="preserve">
          <source>Other Apache rewriting schemes</source>
          <target state="translated">Otros planes de reescritura de Apache</target>
        </trans-unit>
        <trans-unit id="81af1ba5d512fd109cf684ae0943af6787277fa0" translate="yes" xml:space="preserve">
          <source>Other common names, aliases, terms for clean URLs: &lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services&quot;&gt;RESTful&lt;/a&gt; URLs, user-friendly URLs, &lt;a href=&quot;http://en.wikipedia.org/wiki/Search_engine_optimization&quot;&gt;SEO&lt;/a&gt;-friendly URLs, &lt;a href=&quot;https://en.wikipedia.org/wiki/Clean_URL#Slug&quot;&gt;slugging&lt;/a&gt;, and MVC URLs (probably a misnomer)</source>
          <target state="translated">Otros nombres comunes, alias, t&amp;eacute;rminos para URL limpias: URL &lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services&quot;&gt;RESTful&lt;/a&gt; , URL amigables para el usuario, URL amigables para &lt;a href=&quot;http://en.wikipedia.org/wiki/Search_engine_optimization&quot;&gt;SEO&lt;/a&gt; , &lt;a href=&quot;https://en.wikipedia.org/wiki/Clean_URL#Slug&quot;&gt;slugging&lt;/a&gt; y URL MVC (probablemente un nombre inapropiado)</target>
        </trans-unit>
        <trans-unit id="a2d1e8d66be83edd5b4bb78c85706e2242b6ca4d" translate="yes" xml:space="preserve">
          <source>Other common uses are remapping obsolete &lt;code&gt;.html&lt;/code&gt; paths to newer &lt;code&gt;.php&lt;/code&gt; handlers, or just aliasing directory names only for individual (actual/real) files.</source>
          <target state="translated">Otros usos comunes son la reasignaci&amp;oacute;n de rutas &lt;code&gt;.html&lt;/code&gt; obsoletas a controladores &lt;code&gt;.php&lt;/code&gt; m&amp;aacute;s nuevos, o simplemente alias de nombres de directorio solo para archivos individuales (reales / reales).</target>
        </trans-unit>
        <trans-unit id="e22c6117eec085066b8864ee86848a7fc70b8391" translate="yes" xml:space="preserve">
          <source>Other delimiters than just &lt;code&gt;/&lt;/code&gt; path slashes</source>
          <target state="translated">Otros delimitadores que solo barras &lt;code&gt;/&lt;/code&gt; camino</target>
        </trans-unit>
        <trans-unit id="ad8bf9cefe3a521ea2a0949d248eaeec3191518a" translate="yes" xml:space="preserve">
          <source>Our &lt;a href=&quot;/questions/tagged/regex&quot;&gt;regex&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/tags/regex/info&quot;&gt;tag wiki&lt;/a&gt; for a syntax compendium.</source>
          <target state="translated">Nuestro &lt;a href=&quot;https://stackoverflow.com/tags/regex/info&quot;&gt;wiki de etiquetas de&lt;/a&gt; &lt;a href=&quot;/questions/tagged/regex&quot;&gt;expresiones regulares&lt;/a&gt; para un compendio de sintaxis.</target>
        </trans-unit>
        <trans-unit id="ed7ce6a62d983c526aa157e7a48cda050f92f59e" translate="yes" xml:space="preserve">
          <source>Ping-Pong (redirects and rewrites in unison)</source>
          <target state="translated">Ping-Pong (redirige y reescribe al un√≠sono)</target>
        </trans-unit>
        <trans-unit id="735003089a236c0d060fcfb96e6c5c0337f5d272" translate="yes" xml:space="preserve">
          <source>Practically it just suppresses the more useful log entries, or server notification mails. You'd be &lt;strong&gt;none the wiser&lt;/strong&gt; as to why your RewriteRules never work.</source>
          <target state="translated">Pr&amp;aacute;cticamente solo suprime las entradas de registro m&amp;aacute;s &amp;uacute;tiles o los correos de notificaci&amp;oacute;n del servidor. No ser&amp;iacute;a &lt;strong&gt;m&amp;aacute;s sabio&lt;/strong&gt; por qu&amp;eacute; sus RewriteRules nunca funcionan.</target>
        </trans-unit>
        <trans-unit id="62b88add85f24690a5fdaa48492419bf137450cf" translate="yes" xml:space="preserve">
          <source>Prepend each list of rules with &lt;code&gt;RewriteEngine On&lt;/code&gt; still. While mod_rewrite is implicitly active in &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; sections,
the per-directory &lt;code&gt;.htaccess&lt;/code&gt; files need it individually summoned.</source>
          <target state="translated">Anteponga cada lista de reglas con &lt;code&gt;RewriteEngine On&lt;/code&gt; still. Si bien mod_rewrite est&amp;aacute; impl&amp;iacute;citamente activo en las secciones &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; , los archivos &lt;code&gt;.htaccess&lt;/code&gt; por directorio necesitan que se invoquen individualmente.</target>
        </trans-unit>
        <trans-unit id="0d460c402637ee80e5cbe8fb8827d4a768e09bd5" translate="yes" xml:space="preserve">
          <source>Prevalent &lt;code&gt;.htaccess&lt;/code&gt; pitfalls</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; frecuentes de .htaccess</target>
        </trans-unit>
        <trans-unit id="20511274c0bc24f9a1ab6b20592c13f82d99001b" translate="yes" xml:space="preserve">
          <source>Primarily you put these rewrite rules into your &lt;em&gt;web server configuration file&lt;/em&gt;. Apache also allows* you to put them into a file called &lt;code&gt;.htaccess&lt;/code&gt; within your document root (i.e. next to your .php files).</source>
          <target state="translated">Principalmente pones estas reglas de reescritura en el &lt;em&gt;archivo de configuraci&amp;oacute;n de&lt;/em&gt; tu &lt;em&gt;servidor web&lt;/em&gt; . Apache tambi&amp;eacute;n le permite * ponerlos en un archivo llamado &lt;code&gt;.htaccess&lt;/code&gt; dentro de la ra&amp;iacute;z de su documento (es decir, al lado de sus archivos .php).</target>
        </trans-unit>
        <trans-unit id="06be8bc5c902a2c2133ad9c03a3c1779b99bf463" translate="yes" xml:space="preserve">
          <source>Providing discoverability through &lt;code&gt;/common/tree/nesting&lt;/code&gt;.</source>
          <target state="translated">Proporcionando capacidad de descubrimiento a trav&amp;eacute;s de &lt;code&gt;/common/tree/nesting&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e64b81cf93d82d98226806bc2fc8bb197ca884ba" translate="yes" xml:space="preserve">
          <source>QUERY_STRING exempt from RewriteRules</source>
          <target state="translated">QUERY_STRING exento de RewriteRules</target>
        </trans-unit>
        <trans-unit id="4d404d57141e26e7d22d02e55784084ff540a4ad" translate="yes" xml:space="preserve">
          <source>Redirect subdomain to a folder</source>
          <target state="translated">Redirigir el subdominio a una carpeta</target>
        </trans-unit>
        <trans-unit id="063e567c28ac61d9564af15349713acbb573d5e8" translate="yes" xml:space="preserve">
          <source>Redirect to &lt;code&gt;HTTPS://&lt;/code&gt;</source>
          <target state="translated">Redireccionar a &lt;code&gt;HTTPS://&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="722b8910bdb4f2c78164bcda5bd90f374a6c66ef" translate="yes" xml:space="preserve">
          <source>Reference: mod_rewrite, URL rewriting and ‚Äúpretty links‚Äù explained</source>
          <target state="translated">Referencia:mod_rewrite,reescritura de URL y &quot;enlaces bonitos&quot; explicados</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="b3a5d38cea5644b9e304ef62096e6a606a4a0fc6" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;www.&lt;/code&gt; from hostname</source>
          <target state="translated">Eliminar &lt;code&gt;www.&lt;/code&gt; del nombre de host</target>
        </trans-unit>
        <trans-unit id="8dc518c3281af6a76845d45893812e8170cd0c54" translate="yes" xml:space="preserve">
          <source>Rewrite Conditions</source>
          <target state="translated">Reescribir las condiciones</target>
        </trans-unit>
        <trans-unit id="0415eb50a540339c28aa38e25535d693e139d107" translate="yes" xml:space="preserve">
          <source>Rewrite Example</source>
          <target state="translated">Ejemplo de reescritura</target>
        </trans-unit>
        <trans-unit id="87715289f6fd0761155779b729e2b1ef1f55f404" translate="yes" xml:space="preserve">
          <source>Rewrite from URL like &quot;/page&quot; to a script such as &quot;/index.php/page&quot;</source>
          <target state="translated">Reescribir desde el URL como &quot;p√°gina&quot; a un gui√≥n como &quot;index.phppage&quot;</target>
        </trans-unit>
        <trans-unit id="54ae8a2bb1e1e0463d622aac404cc75b66ddf407" translate="yes" xml:space="preserve">
          <source>RewriteConds just mask one RewriteRule</source>
          <target state="translated">Los mensajes de reescritura s√≥lo enmascaran una regla de reescritura...</target>
        </trans-unit>
        <trans-unit id="243d3756aea59bb3aca4be6b1c289ef6f5eac31f" translate="yes" xml:space="preserve">
          <source>RewriteRules</source>
          <target state="translated">RewriteRules</target>
        </trans-unit>
        <trans-unit id="6f3c0b0fa9441f73d1225a5ad3aebf8aa68e29c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://httpd.apache.org/docs/2.2/urlmapping.html&quot;&gt;http://httpd.apache.org/docs/2.2/urlmapping.html&lt;/a&gt; for further tips.</source>
          <target state="translated">Consulte &lt;a href=&quot;http://httpd.apache.org/docs/2.2/urlmapping.html&quot;&gt;http://httpd.apache.org/docs/2.2/urlmapping.html&lt;/a&gt; para obtener m&amp;aacute;s consejos.</target>
        </trans-unit>
        <trans-unit id="7734994bbf366e6199ab98306f2955556acb72dc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://serverfault.com/questions/214512/redirect-change-urls-or-redirect-http-to-https-in-apache-everything-you-ever&quot;&gt;Everything you ever wanted to know about mod_rewrite&lt;/a&gt;
if you haven't already. Combining multiple RewriteRules often leads to interaction. This isn't something to prevent habitually per &lt;code&gt;[L]&lt;/code&gt; flag, but a scheme you'll embrace once versed.
You &lt;strong&gt;can &lt;em&gt;re-re-re&lt;/em&gt;write&lt;/strong&gt; virtual paths from one rule to another, until it reaches an actual target handler.</source>
          <target state="translated">Vea &lt;a href=&quot;https://serverfault.com/questions/214512/redirect-change-urls-or-redirect-http-to-https-in-apache-everything-you-ever&quot;&gt;todo lo que siempre quiso saber sobre mod_rewrite&lt;/a&gt; si a&amp;uacute;n no lo ha hecho. La combinaci&amp;oacute;n de m&amp;uacute;ltiples RewriteRules a menudo conduce a la interacci&amp;oacute;n. Esto no es algo para evitar habitualmente seg&amp;uacute;n la bandera &lt;code&gt;[L]&lt;/code&gt; , sino un esquema que adoptar&amp;aacute; una vez versado. Puede &lt;strong&gt;&lt;em&gt;volver a&lt;/em&gt; escribir&lt;/strong&gt; rutas virtuales de una regla a otra, hasta que alcance un controlador de destino real.</target>
        </trans-unit>
        <trans-unit id="769cf2ef46bdfff4b362894473e1b5713284e118" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/q/265898&quot;&gt;mod_rewrite, php and the .htaccess file&lt;/a&gt;</source>
          <target state="translated">Ver &lt;a href=&quot;https://stackoverflow.com/q/265898&quot;&gt;mod_rewrite, php y el archivo .htaccess&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22c8fcf96a97b6e5abcdae84c4db3db1d01058d9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/questions/2978907/how-can-i-get-my-htaccess-to-work-subdomains&quot;&gt;How can i get my htaccess to work (subdomains)?&lt;/a&gt;</source>
          <target state="translated">Consulte &lt;a href=&quot;https://stackoverflow.com/questions/2978907/how-can-i-get-my-htaccess-to-work-subdomains&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo hacer que mi htaccess funcione (subdominios)?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="006a84e14e20a75e524061fa1fe8dba5660bdff1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://wiki.apache.org/httpd/RewriteLog&quot;&gt;Apache RewriteLog&lt;/a&gt; docs. For debugging you can enable it in the vhost sections:</source>
          <target state="translated">Vea &lt;a href=&quot;https://wiki.apache.org/httpd/RewriteLog&quot;&gt;los&lt;/a&gt; documentos de Apache RewriteLog . Para la depuraci&amp;oacute;n, puede habilitarlo en las secciones de vhost:</target>
        </trans-unit>
        <trans-unit id="9cd936e48a20e2da69c8f25159cd8cbee422363f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://stackoverflow.com/questions/2252238/how-can-i-match-query-string-variables-with-mod-rewrite&quot;&gt;How can I match query string variables with mod_rewrite?&lt;/a&gt;</source>
          <target state="translated">Consulte tambi&amp;eacute;n &lt;a href=&quot;https://stackoverflow.com/questions/2252238/how-can-i-match-query-string-variables-with-mod-rewrite&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo hacer coincidir las variables de cadena de consulta con mod_rewrite?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef15dc12c82e77842eafff393a8434759690e4c5" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://stackoverflow.com/questions/704102/how-does-rewritebase-work-in-htaccess&quot;&gt;How does RewriteBase work in .htaccess&lt;/a&gt;</source>
          <target state="translated">Consulte tambi&amp;eacute;n &lt;a href=&quot;https://stackoverflow.com/questions/704102/how-does-rewritebase-work-in-htaccess&quot;&gt;C&amp;oacute;mo funciona RewriteBase en .htaccess&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">Ver tambi√©n:</target>
        </trans-unit>
        <trans-unit id="8de810eb4c19512b1bcf1333a62369476c4d7c77" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://stackoverflow.com/questions/27744603/css-js-and-images-do-not-display-with-pretty-url&quot;&gt;CSS, JS and images do not display with pretty url&lt;/a&gt;</source>
          <target state="translated">Ver tambi&amp;eacute;n: &lt;a href=&quot;https://stackoverflow.com/questions/27744603/css-js-and-images-do-not-display-with-pretty-url&quot;&gt;CSS, JS y las im&amp;aacute;genes no se muestran con URL bonita&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3db13cb00377ed34be5480543c7e55ed4f98496" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://stackoverflow.com/questions/3655893&quot;&gt;How do I transform my URL path segments into query string key-value pairs?&lt;/a&gt;</source>
          <target state="translated">Consulte tambi&amp;eacute;n: &lt;a href=&quot;https://stackoverflow.com/questions/3655893&quot;&gt;&amp;iquest;C&amp;oacute;mo transformo mis segmentos de ruta URL en pares de clave-valor de cadena de consulta?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b77f4be08babffac9435d191760ac9736013dd5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://stackoverflow.com/questions/4908122/removing-the-php-extension-with-mod-rewrite&quot;&gt;Removing the .php extension with mod_rewrite&lt;/a&gt;</source>
          <target state="translated">Ver tambi&amp;eacute;n: &lt;a href=&quot;https://stackoverflow.com/questions/4908122/removing-the-php-extension-with-mod-rewrite&quot;&gt;Eliminar la extensi&amp;oacute;n .php con mod_rewrite&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="566b13b8f401ee2428d3cd8f11f3c6fe104dc463" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://wiki.apache.org/httpd/RewriteHTTPToHTTPS&quot;&gt;https://wiki.apache.org/httpd/RewriteHTTPToHTTPS&lt;/a&gt;</source>
          <target state="translated">Ver tambi&amp;eacute;n: &lt;a href=&quot;https://wiki.apache.org/httpd/RewriteHTTPToHTTPS&quot;&gt;https://wiki.apache.org/httpd/RewriteHTTPToHTTPS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f1913e2533a26bdd25c26d90fab7cc90bd95e2a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_rewrite.html&quot;&gt;official documentation&lt;/a&gt; for all the possible flags and options.</source>
          <target state="translated">Consulte la &lt;a href=&quot;http://httpd.apache.org/docs/current/mod/mod_rewrite.html&quot;&gt;documentaci&amp;oacute;n oficial&lt;/a&gt; para ver todas las banderas y opciones posibles.</target>
        </trans-unit>
        <trans-unit id="9fa04c4d408fbb4f618dc13714c5ebc1ab770915" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;http://httpd.apache.org/docs/2.4/rewrite/remapping.html#backward-compatibility&quot;&gt;http://httpd.apache.org/docs/2.4/rewrite/remapping.html#backward-compatibility&lt;/a&gt;</source>
          <target state="translated">Ver: &lt;a href=&quot;http://httpd.apache.org/docs/2.4/rewrite/remapping.html#backward-compatibility&quot;&gt;http://httpd.apache.org/docs/2.4/rewrite/remapping.html#backward-compatibility&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99e6a073ff5e6c011154a5c38d8a47d031eb6740" translate="yes" xml:space="preserve">
          <source>Serverfault: &lt;strong&gt;Everything you ever wanted to know about mod_rewrite&lt;/strong&gt;</source>
          <target state="translated">Serverfault: &lt;strong&gt;todo lo que siempre quisiste saber sobre mod_rewrite&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="153142254f89758d473a9ea12c5e164444dc53cf" translate="yes" xml:space="preserve">
          <source>SetType or SetHandler for extensionless &lt;code&gt;.php&lt;/code&gt; scripts</source>
          <target state="translated">SetType o SetHandler para scripts &lt;code&gt;.php&lt;/code&gt; sin extensi&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="5a864b80ff234f7cae642c6501bfd4c017e44fd0" translate="yes" xml:space="preserve">
          <source>Shortening a few page names to internal file schemes is most simple:</source>
          <target state="translated">Acortar unos cuantos nombres de p√°ginas a esquemas de archivos internos es muy simple:</target>
        </trans-unit>
        <trans-unit id="0b832bc70477bdef81bfff11de849565e3c94623" translate="yes" xml:space="preserve">
          <source>Since Apache 2.4 you can also use the &lt;code&gt;[END]&lt;/code&gt; flag. A matching rule with it will &lt;em&gt;completely&lt;/em&gt; terminate further alias/rewrite processing. (Whereas the &lt;code&gt;[L]&lt;/code&gt; flag can oftentimes trigger a second round, for example when rewriting into or out of subdirectories.)</source>
          <target state="translated">Desde Apache 2.4 tambi&amp;eacute;n puede usar el indicador &lt;code&gt;[END]&lt;/code&gt; . Una regla que coincida con ella terminar&amp;aacute; &lt;em&gt;completamente el&lt;/em&gt; procesamiento de alias / reescritura adicional. (Mientras que la bandera &lt;code&gt;[L]&lt;/code&gt; a menudo puede desencadenar una segunda ronda, por ejemplo, al reescribir dentro o fuera de subdirectorios).</target>
        </trans-unit>
        <trans-unit id="0b205cd34e49d99ca6bc4b7cfdc75f4c82118ad9" translate="yes" xml:space="preserve">
          <source>Slug-style placeholders</source>
          <target state="translated">Marcadores de posici√≥n estilo babosa</target>
        </trans-unit>
        <trans-unit id="0126c12f6cbf075a76cababf0457921f8420def3" translate="yes" xml:space="preserve">
          <source>Slugs with numeric prefixes</source>
          <target state="translated">Las balas con prefijos num√©ricos</target>
        </trans-unit>
        <trans-unit id="ecebb061edd3e7bf58aa5e1134401163d6e5ea2c" translate="yes" xml:space="preserve">
          <source>So at some point you're rewriting your HTML pages to carry only pretty links, as &lt;a href=&quot;https://stackoverflow.com/a/20563773#~What+mod_rewrite+does+not+do&quot;&gt;outlined by deceze&lt;/a&gt;.
Meanwhile you'll still receive requests for the &lt;em&gt;old&lt;/em&gt; paths, sometimes even from bookmarks. As &lt;em&gt;workaround&lt;/em&gt;, you can ping-pong browsers to display/establish
the new URLs.</source>
          <target state="translated">Entonces, en alg&amp;uacute;n momento, est&amp;aacute; reescribiendo sus p&amp;aacute;ginas HTML para que solo &lt;a href=&quot;https://stackoverflow.com/a/20563773#~What+mod_rewrite+does+not+do&quot;&gt;contengan&lt;/a&gt; enlaces bonitos, como se describe en deceze . Mientras tanto, seguir&amp;aacute; recibiendo solicitudes de los &lt;em&gt;viejos&lt;/em&gt; caminos, a veces incluso de marcadores. Como &lt;em&gt;soluci&amp;oacute;n alternativa&lt;/em&gt; , puede utilizar los navegadores de ping-pong para mostrar / establecer las nuevas URL.</target>
        </trans-unit>
        <trans-unit id="9b584b52b28402594628cea231d8d1cd0eb03d50" translate="yes" xml:space="preserve">
          <source>Spaces</source>
          <target state="translated">Spaces</target>
        </trans-unit>
        <trans-unit id="85e989878c716e36b051efddbe0395a8c643d71a" translate="yes" xml:space="preserve">
          <source>Stack Overflow has &lt;em&gt;many&lt;/em&gt; other great resources to get started:</source>
          <target state="translated">Stack Overflow tiene &lt;em&gt;muchos&lt;/em&gt; otros excelentes recursos para comenzar:</target>
        </trans-unit>
        <trans-unit id="48fc570e8e866f7f574a291b7bacd57b75c6ab5b" translate="yes" xml:space="preserve">
          <source>Static mapping</source>
          <target state="translated">Cartograf√≠a est√°tica</target>
        </trans-unit>
        <trans-unit id="8001a2b0ee6473dba8f8f19c9bcf26b8ca6205c1" translate="yes" xml:space="preserve">
          <source>Still you'd &lt;em&gt;often&lt;/em&gt; want to have the most specific rules (fixed string &lt;code&gt;/forum/&amp;hellip;&lt;/code&gt; patterns, or more restrictive placeholders &lt;code&gt;[^/.]+&lt;/code&gt;) in the &lt;em&gt;early&lt;/em&gt; rules.
Generic slurp-all rules (&lt;code&gt;.*&lt;/code&gt;) are better left to the &lt;em&gt;later&lt;/em&gt; ones. (An exception is a &lt;code&gt;RewriteCond -f/-d&lt;/code&gt; guard as primary block.)</source>
          <target state="translated">A&amp;uacute;n as&amp;iacute;, a &lt;em&gt;menudo&lt;/em&gt; querr&amp;aacute;s tener las reglas m&amp;aacute;s espec&amp;iacute;ficas (cadenas fijas &lt;code&gt;/forum/&amp;hellip;&lt;/code&gt; patrones, o marcadores de posici&amp;oacute;n m&amp;aacute;s restrictivos &lt;code&gt;[^/.]+&lt;/code&gt; ) En las &lt;em&gt;primeras&lt;/em&gt; reglas. Es mejor dejar las reglas gen&amp;eacute;ricas de slurp-all ( &lt;code&gt;.*&lt;/code&gt; ) A las &lt;em&gt;posteriores&lt;/em&gt; . (Una excepci&amp;oacute;n es una &lt;code&gt;RewriteCond -f/-d&lt;/code&gt; como bloque primario).</target>
        </trans-unit>
        <trans-unit id="e88877188929b587a6202b5d626e2de4ef74c025" translate="yes" xml:space="preserve">
          <source>Stylesheets and images stop working</source>
          <target state="translated">Las hojas de estilo y las im√°genes dejan de funcionar</target>
        </trans-unit>
        <trans-unit id="1a378406d18f6750149ae24909a93a9ccb6fc19e" translate="yes" xml:space="preserve">
          <source>That yields a detailed summary of how incoming request paths get modified by each rule:</source>
          <target state="translated">Esto da un resumen detallado de c√≥mo las rutas de solicitud entrantes son modificadas por cada regla:</target>
        </trans-unit>
        <trans-unit id="6d6fab96ebe243a8ed7f16439ab504edd8a35174" translate="yes" xml:space="preserve">
          <source>The above rewrite would allow you to link to something like &lt;code&gt;/blog/1/foo/&lt;/code&gt; and it would actually load &lt;code&gt;/blog/index.php?id=1&amp;amp;title=foo&lt;/code&gt;.</source>
          <target state="translated">La reescritura anterior le permitir&amp;iacute;a vincular a algo como &lt;code&gt;/blog/1/foo/&lt;/code&gt; y en realidad cargar&amp;iacute;a &lt;code&gt;/blog/index.php?id=1&amp;amp;title=foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ba4a51130ff56537f6d3a9055715230bfef9e5f" translate="yes" xml:space="preserve">
          <source>The complete RewriteRule set, but &lt;em&gt;also&lt;/em&gt; single out the presumed defective one.</source>
          <target state="translated">El conjunto completo RewriteRule, pero &lt;em&gt;tambi&amp;eacute;n&lt;/em&gt; destaca el supuesto defecto defectuoso.</target>
        </trans-unit>
        <trans-unit id="e228ac5b8f8d575c20a15333bcfad05518e80ac0" translate="yes" xml:space="preserve">
          <source>The default configuration of most web servers is to look for a file that matches the URL on the hard disk. If the &lt;em&gt;document root&lt;/em&gt; of the server is set to, say, &lt;code&gt;/var/www&lt;/code&gt;, it may look whether the file &lt;code&gt;/var/www/foo/bar.html&lt;/code&gt; exists and serve it if so. If the file ends in &quot;.php&quot; it will invoke the PHP interpreter and &lt;em&gt;then&lt;/em&gt; return the result. All this association is completely configurable; a file doesn't have to end in &quot;.php&quot; for the web server to run it through the PHP interpreter, and the URL doesn't have to match any particular file on disk for something to happen.</source>
          <target state="translated">La configuraci&amp;oacute;n predeterminada de la mayor&amp;iacute;a de los servidores web es buscar un archivo que coincida con la URL en el disco duro. Si la &lt;em&gt;ra&amp;iacute;z&lt;/em&gt; del &lt;em&gt;documento&lt;/em&gt; del servidor est&amp;aacute; configurada en, por ejemplo, &lt;code&gt;/var/www&lt;/code&gt; , puede ver si el archivo &lt;code&gt;/var/www/foo/bar.html&lt;/code&gt; existe y servirlo si es as&amp;iacute;. Si el archivo termina en &quot;.php&quot;, invocar&amp;aacute; al int&amp;eacute;rprete PHP y &lt;em&gt;luego&lt;/em&gt; devolver&amp;aacute; el resultado. Toda esta asociaci&amp;oacute;n es completamente configurable; un archivo no tiene que terminar en &quot;.php&quot; para que el servidor web lo ejecute a trav&amp;eacute;s del int&amp;eacute;rprete PHP, y la URL no tiene que coincidir con ning&amp;uacute;n archivo en particular en el disco para que algo suceda.</target>
        </trans-unit>
        <trans-unit id="46df60a282712a506bc72414500b3830c3f7622b" translate="yes" xml:space="preserve">
          <source>The first set of brackets - &lt;code&gt;([0-9]+)&lt;/code&gt; - matches a string with a minimum of 1 character in length and with only numeric values (i.e. 0-9). This can be referenced with &lt;code&gt;$1&lt;/code&gt; in the right hand side of the rule</source>
          <target state="translated">El primer conjunto de corchetes - &lt;code&gt;([0-9]+)&lt;/code&gt; - coincide con una cadena con un m&amp;iacute;nimo de 1 car&amp;aacute;cter de longitud y solo con valores num&amp;eacute;ricos (es decir, 0-9). Esto puede ser referenciado con &lt;code&gt;$1&lt;/code&gt; en el lado derecho de la regla</target>
        </trans-unit>
        <trans-unit id="7ac23b9ac3e8ebb020e1a5fab826fbe6cccd47f8" translate="yes" xml:space="preserve">
          <source>The following examples are PHP-centric and a bit more incremental, easier to adapt for similar cases.
They're just summaries, often link to more variations or detailed Q&amp;amp;As.</source>
          <target state="translated">Los siguientes ejemplos est&amp;aacute;n centrados en PHP y son un poco m&amp;aacute;s incrementales, m&amp;aacute;s f&amp;aacute;ciles de adaptar para casos similares. Son solo res&amp;uacute;menes, a menudo vinculados a m&amp;aacute;s variaciones o preguntas y respuestas detalladas.</target>
        </trans-unit>
        <trans-unit id="a54a48205d3f14912b7eeff2751a1df039b641ef" translate="yes" xml:space="preserve">
          <source>The last flag indicates that this is the last rule that should be processed. This means that if and only if this rule matches, no further rules will be evaluated in the current rewrite processing run. If the rule does not match, all other rules will be tried in order as usual. If you do not set the &lt;code&gt;L&lt;/code&gt; flag, all following rules will be applied to the &lt;em&gt;rewritten&lt;/em&gt; URL afterwards.</source>
          <target state="translated">El &amp;uacute;ltimo indicador indica que esta es la &amp;uacute;ltima regla que debe procesarse. Esto significa que si y solo si esta regla coincide, no se evaluar&amp;aacute;n m&amp;aacute;s reglas en la ejecuci&amp;oacute;n del proceso de reescritura actual. Si la regla no coincide, todas las dem&amp;aacute;s reglas se probar&amp;aacute;n en el orden habitual. Si no establece el indicador &lt;code&gt;L&lt;/code&gt; , todas las siguientes reglas se aplicar&amp;aacute;n a la URL &lt;em&gt;reescrita&lt;/em&gt; despu&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="e2dcea71d18770c2097f41c39eae9392bca0c8a4" translate="yes" xml:space="preserve">
          <source>The leading slash &lt;code&gt;^/&lt;/code&gt; won't match</source>
          <target state="translated">La barra inclinada &lt;code&gt;^/&lt;/code&gt; no coincidir&amp;aacute;</target>
        </trans-unit>
        <trans-unit id="549c3e4d9d2e3d169f232931ea8636c3d1480369" translate="yes" xml:space="preserve">
          <source>The no case flag means that the rewrite rule is case insensitive, so for the example rule above this would mean that both &lt;code&gt;/blog/1/foo/&lt;/code&gt; and &lt;code&gt;/BLOG/1/foo/&lt;/code&gt; (or any variation of this) would be matched.</source>
          <target state="translated">El indicador de no caso significa que la regla de reescritura no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas, por lo que para la regla de ejemplo anterior esto significar&amp;iacute;a que tanto &lt;code&gt;/blog/1/foo/&lt;/code&gt; como &lt;code&gt;/BLOG/1/foo/&lt;/code&gt; (o cualquier variaci&amp;oacute;n de esto) coincidir&amp;iacute;an.</target>
        </trans-unit>
        <trans-unit id="83c803d5174f2e1e70b82894f7bc34cb1d99cf98" translate="yes" xml:space="preserve">
          <source>The query string append flag allows us to pass in extra variables to the specified URL which will get added to the original get parameters. For our example this means that something like &lt;code&gt;/blog/1/foo/?comments=15&lt;/code&gt; would load &lt;code&gt;/blog/index.php?id=1&amp;amp;title=foo&amp;amp;comments=15&lt;/code&gt;</source>
          <target state="translated">El indicador de cadena de consulta nos permite pasar variables adicionales a la URL especificada que se agregar&amp;aacute; a los par&amp;aacute;metros de obtenci&amp;oacute;n originales. Para nuestro ejemplo, esto significa que algo como &lt;code&gt;/blog/1/foo/?comments=15&lt;/code&gt; cargar&amp;iacute;a &lt;code&gt;/blog/index.php?id=1&amp;amp;title=foo&amp;amp;comments=15&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a75416b595fbf14696df582ef4381352dbaaade" translate="yes" xml:space="preserve">
          <source>The rewrite will attempt to load the same file on another domain</source>
          <target state="translated">La reescritura intentar√° cargar el mismo archivo en otro dominio</target>
        </trans-unit>
        <trans-unit id="833afbd5f1f23c47a97009c28e05f47b2667d6ea" translate="yes" xml:space="preserve">
          <source>The rule is split into 4 sections:</source>
          <target state="translated">La regla se divide en 4 secciones:</target>
        </trans-unit>
        <trans-unit id="7aebe4dbf5a75928bd1986451a2093d287864dbd" translate="yes" xml:space="preserve">
          <source>The second set of parentheses matches a string with a minimum of 1 character in length, containing only alphanumeric characters (A-Z, a-z, or 0-9) or &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;+&lt;/code&gt; (note &lt;code&gt;+&lt;/code&gt; is escaped with a backslash as without escaping it this will execute as a &lt;a href=&quot;http://www.regular-expressions.info/repeat.html&quot;&gt;regex repetition character&lt;/a&gt;). This can be referenced with &lt;code&gt;$2&lt;/code&gt; in the right hand side of the rule</source>
          <target state="translated">El segundo conjunto de par&amp;eacute;ntesis coincide con una cadena con un m&amp;iacute;nimo de 1 car&amp;aacute;cter de longitud, que contiene solo caracteres alfanum&amp;eacute;ricos (AZ, az o 0-9) o &lt;code&gt;-&lt;/code&gt; o &lt;code&gt;+&lt;/code&gt; (nota &lt;code&gt;+&lt;/code&gt; se escapa con una barra invertida, ya que sin escapar se ejecutar&amp;aacute;) como un &lt;a href=&quot;http://www.regular-expressions.info/repeat.html&quot;&gt;personaje de repetici&amp;oacute;n regex&lt;/a&gt; ). Esto puede ser referenciado con &lt;code&gt;$2&lt;/code&gt; en el lado derecho de la regla</target>
        </trans-unit>
        <trans-unit id="04c8e0a990ad304eb54df5972cfebfc98f757529" translate="yes" xml:space="preserve">
          <source>The simplest option to also eschew &lt;code&gt;.php&lt;/code&gt; &quot;file extensions&quot; in URLs is enabling:</source>
          <target state="translated">La opci&amp;oacute;n m&amp;aacute;s simple para evitar las &quot;extensiones de archivo&quot; &lt;code&gt;.php&lt;/code&gt; en las URL es habilitar:</target>
        </trans-unit>
        <trans-unit id="0e2f7a407bd6041b3f1f32b83f940cec25221f9b" translate="yes" xml:space="preserve">
          <source>The web server is an application listening on a port, accepting HTTP requests coming in on that port and returning a response. A web server is entirely free to respond to any request in any way it sees fit/in any way you have configured it to respond. This response is not a file, it's an &lt;em&gt;HTTP response&lt;/em&gt; which may or may not have anything to do with physical files on any disk. A web server doesn't have to be Apache, there are many other web servers which are all just programs which run persistently and are attached to a port which respond to HTTP requests. You can write one yourself. This paragraph was intended to divorce you from any notion that URLs directly equal files, which is really important to understand. :)</source>
          <target state="translated">El servidor web es una aplicaci&amp;oacute;n que escucha en un puerto, acepta solicitudes HTTP que ingresan en ese puerto y devuelve una respuesta. Un servidor web es completamente libre de responder a cualquier solicitud de la forma que considere adecuada / de cualquier forma que haya configurado para responder. Esta respuesta no es un archivo, es una &lt;em&gt;respuesta HTTP&lt;/em&gt; que puede o no tener algo que ver con archivos f&amp;iacute;sicos en cualquier disco. Un servidor web no tiene que ser Apache, hay muchos otros servidores web que son solo programas que se ejecutan de manera persistente y est&amp;aacute;n conectados a un puerto que responde a las solicitudes HTTP. Puedes escribir uno t&amp;uacute; mismo. Este p&amp;aacute;rrafo ten&amp;iacute;a la intenci&amp;oacute;n de divorciarte de cualquier noci&amp;oacute;n de que las URL son iguales directamente a los archivos, lo cual es realmente importante de entender. :)</target>
        </trans-unit>
        <trans-unit id="159c459f715b62a82d49181a2596095e72ac845a" translate="yes" xml:space="preserve">
          <source>There are various online tools to generate RewriteRules for most GET-parameterish URLs:</source>
          <target state="translated">Hay varias herramientas en l√≠nea para generar RewriteRules para la mayor√≠a de los URLs con par√°metros GET:</target>
        </trans-unit>
        <trans-unit id="c82a2f0ef8ac4ecf1da9d191346d5140c761cc14" translate="yes" xml:space="preserve">
          <source>There's a lot mod_rewrite can do and very complex matching rules you can create, including chaining several rewrites, proxying requests to a completely different service or machine, returning specific HTTP status codes as responses, redirecting requests etc. It's very powerful and can be used to great good if you understand the fundamental HTTP request-response mechanism. It does &lt;em&gt;not&lt;/em&gt; automatically make your links pretty.</source>
          <target state="translated">Hay muchas cosas que mod_rewrite puede hacer y reglas de coincidencia muy complejas que puede crear, incluyendo encadenar varias reescrituras, enviar solicitudes a un servicio o m&amp;aacute;quina completamente diferente, devolver c&amp;oacute;digos de estado HTTP espec&amp;iacute;ficos como respuestas, redireccionar solicitudes, etc. Es muy poderoso y puede usarse para muy bueno si entiendes el mecanismo fundamental de solicitud-respuesta HTTP. No hace que tus enlaces sean bonitos autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="c9ba3f02e7e2d45a3c1fdc93f62d6055d0ba77ad" translate="yes" xml:space="preserve">
          <source>Therefore you'll often see mixed &lt;code&gt;/article/529-title-slug&lt;/code&gt; paths used in practice:</source>
          <target state="translated">Por lo tanto, a menudo ver&amp;aacute; las rutas mixtas &lt;code&gt;/article/529-title-slug&lt;/code&gt; utilizadas en la pr&amp;aacute;ctica:</target>
        </trans-unit>
        <trans-unit id="cb15bb19b67a700556e5d4e90ad59605ca293dde" translate="yes" xml:space="preserve">
          <source>These are options that are added in square brackets at the end of your rewrite rule to specify certain conditions. Again, there are a lot of different flags which you can read up on in &lt;a href=&quot;http://httpd.apache.org/docs/2.2/rewrite/flags.html&quot;&gt;the documentation&lt;/a&gt;, but I'll go through some of the more common flags:</source>
          <target state="translated">Estas son opciones que se agregan entre corchetes al final de la regla de reescritura para especificar ciertas condiciones. Nuevamente, hay muchos indicadores diferentes que puede leer en &lt;a href=&quot;http://httpd.apache.org/docs/2.2/rewrite/flags.html&quot;&gt;la documentaci&amp;oacute;n&lt;/a&gt; , pero pasar&amp;eacute; por algunos de los indicadores m&amp;aacute;s comunes:</target>
        </trans-unit>
        <trans-unit id="7cb52ffb24a80ad734695950723670b446fd208a" translate="yes" xml:space="preserve">
          <source>This common trick involves sending a 30x/Location &lt;em&gt;redirect&lt;/em&gt; whenever an incoming URL follows the obsolete/ugly naming scheme.
Browsers will then &lt;em&gt;rerequest&lt;/em&gt; the new/pretty URL, which afterwards is rewritten (just internally) to the original or new location.</source>
          <target state="translated">Este truco com&amp;uacute;n implica enviar una &lt;em&gt;redirecci&amp;oacute;n&lt;/em&gt; 30x / Location cada vez que una URL entrante sigue el esquema de nombres obsoleto / feo. Los navegadores volver&amp;aacute;n a &lt;em&gt;solicitar&lt;/em&gt; la nueva / bonita URL, que luego se reescribe (solo internamente) a la ubicaci&amp;oacute;n original o nueva.</target>
        </trans-unit>
        <trans-unit id="eac456246f01a69b6fa960c525f4d3493e5955b6" translate="yes" xml:space="preserve">
          <source>This doesn't tell you which RewriteRule is the culprit. But inaccessible final paths like &lt;code&gt;/docroot/21-.itle?index.php&lt;/code&gt; may give away where to inspect further.
Otherwise disable rules until you get some predictable paths.</source>
          <target state="translated">Esto no te dice qu&amp;eacute; RewriteRule es el culpable. Pero las rutas finales inaccesibles como &lt;code&gt;/docroot/21-.itle?index.php&lt;/code&gt; pueden revelar d&amp;oacute;nde inspeccionar m&amp;aacute;s. De lo contrario, deshabilite las reglas hasta que obtenga algunas rutas predecibles.</target>
        </trans-unit>
        <trans-unit id="126b9d7dfbd968a54edaca8a4d158902a1949796" translate="yes" xml:space="preserve">
          <source>This flag isn't one I used in the example above, but is one I thought is worth mentioning. This allows you to specify a http redirect, with the option to include a status code (e.g. &lt;code&gt;R=301&lt;/code&gt;). For example if you wanted to do a 301 redirect on /myblog/ to /blog/ you would simply write a rule something like this:</source>
          <target state="translated">Esta bandera no es una que us&amp;eacute; en el ejemplo anterior, pero creo que vale la pena mencionarla. Esto le permite especificar una redirecci&amp;oacute;n http, con la opci&amp;oacute;n de incluir un c&amp;oacute;digo de estado (por ejemplo, &lt;code&gt;R=301&lt;/code&gt; ). Por ejemplo, si quisiera hacer una redirecci&amp;oacute;n 301 en / myblog / to / blog /, simplemente escribir&amp;iacute;a una regla como esta:</target>
        </trans-unit>
        <trans-unit id="37b731c00b0df987bf9c1b533cd5f5cce0e31a8d" translate="yes" xml:space="preserve">
          <source>This has Apache select &lt;code&gt;article.php&lt;/code&gt; for HTTP requests on &lt;code&gt;/article&lt;/code&gt; due to the matching basename. And this works well together with the aforementioned PATH_INFO feature. So you can just use URLs like &lt;code&gt;http://example.com/article/virtual/title&lt;/code&gt;. Which makes sense if you have a traditional web application with multiple PHP invocation points/scripts.</source>
          <target state="translated">Esto tiene Apache select &lt;code&gt;article.php&lt;/code&gt; para solicitudes HTTP en &lt;code&gt;/article&lt;/code&gt; debido al nombre base coincidente. Y esto funciona bien junto con la funci&amp;oacute;n PATH_INFO antes mencionada. Por lo tanto, puede usar URL como &lt;code&gt;http://example.com/article/virtual/title&lt;/code&gt; . Lo que tiene sentido si tiene una aplicaci&amp;oacute;n web tradicional con m&amp;uacute;ltiples puntos / scripts de invocaci&amp;oacute;n PHP.</target>
        </trans-unit>
        <trans-unit id="7821c92c23729c6e3b5d689391cb1070c9721c06" translate="yes" xml:space="preserve">
          <source>This is a very common practice, which will prepend your domain with &lt;code&gt;www.&lt;/code&gt; (if it isn't there already) and execute a 301 redirect. For example, loading up &lt;code&gt;http://example.com/blog/&lt;/code&gt; it would redirect you to &lt;code&gt;http://www.example.com/blog/&lt;/code&gt;</source>
          <target state="translated">Esta es una pr&amp;aacute;ctica muy com&amp;uacute;n, que antepondr&amp;aacute; su dominio con &lt;code&gt;www.&lt;/code&gt; (si a&amp;uacute;n no est&amp;aacute; all&amp;iacute;) y ejecute una redirecci&amp;oacute;n 301. Por ejemplo, cargando &lt;code&gt;http://example.com/blog/&lt;/code&gt; te redirigir&amp;iacute;a a &lt;code&gt;http://www.example.com/blog/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d80c4ef1a166355292a1990b7a7af44ad9122e8" translate="yes" xml:space="preserve">
          <source>This is just as valid a request for a URL, and it has more obviously nothing to do with files.</source>
          <target state="translated">Esto es igual de v√°lido que una solicitud de una URL,y m√°s obviamente no tiene nada que ver con los archivos.</target>
        </trans-unit>
        <trans-unit id="c69886ec55e1ba20b0fa5f101a1225eaf0019fd1" translate="yes" xml:space="preserve">
          <source>This is often seen in old tutorials. And it used to be correct for ancient Apache 1.x versions. Nowadays request paths are conveniently &lt;em&gt;fully &lt;strong&gt;directory-relative&lt;/strong&gt;&lt;/em&gt; in &lt;code&gt;.htaccess&lt;/code&gt; RewriteRules. Just leave the leading &lt;code&gt;/&lt;/code&gt; out.</source>
          <target state="translated">Esto se ve a menudo en los antiguos tutoriales. Y sol&amp;iacute;a ser correcto para las antiguas versiones de Apache 1.x. En la actualidad, las rutas de solicitud est&amp;aacute;n convenientemente relacionadas &lt;em&gt;con el &lt;strong&gt;directorio&lt;/strong&gt;&lt;/em&gt; en &lt;code&gt;.htaccess&lt;/code&gt; RewriteRules. Solo deja el l&amp;iacute;der &lt;code&gt;/&lt;/code&gt; fuera.</target>
        </trans-unit>
        <trans-unit id="52a895915ec9566af7e25dd82c968182fc5c0f3e" translate="yes" xml:space="preserve">
          <source>This is slightly less common, but is a good example of a rule that doesn't execute if the filename is a directory or file that exists on the server.</source>
          <target state="translated">Esto es un poco menos com√∫n,pero es un buen ejemplo de una regla que no se ejecuta si el nombre del archivo es un directorio o un archivo que existe en el servidor.</target>
        </trans-unit>
        <trans-unit id="77620a284d982bf7c67daa1601fbd5c8de86c151" translate="yes" xml:space="preserve">
          <source>This is somewhat dependent on your server setup and the used PHP SAPI. Common alternatives include &lt;code&gt;ForceType application/x-httpd-php&lt;/code&gt; or &lt;code&gt;AddHandler php5-script&lt;/code&gt;.</source>
          <target state="translated">Esto depende en cierta medida de la configuraci&amp;oacute;n de su servidor y del PHP SAPI utilizado. Las alternativas comunes incluyen la &lt;code&gt;ForceType application/x-httpd-php&lt;/code&gt; o &lt;code&gt;AddHandler php5-script&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e43a1df57f3dcef1bda106987332480923a8e7b2" translate="yes" xml:space="preserve">
          <source>This is the simple request of a browser to a web server requesting the &lt;em&gt;URL&lt;/em&gt;&lt;code&gt;/foo/bar.html&lt;/code&gt; from it. It is important to stress that it does not request a &lt;em&gt;file&lt;/em&gt;, it requests just some arbitrary URL. The request may also look like this:</source>
          <target state="translated">Esta es la simple solicitud de un navegador a un servidor web que le solicita la &lt;em&gt;URL&lt;/em&gt; &lt;code&gt;/foo/bar.html&lt;/code&gt; . Es importante destacar que no solicita un &lt;em&gt;archivo&lt;/em&gt; , solo solicita una URL arbitraria. La solicitud tambi&amp;eacute;n puede verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="01e466565580b17decbd9ff474a0fe27c298e507" translate="yes" xml:space="preserve">
          <source>This isn't as convenient as having Apache separate input path segments into &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt; and passing them as distinct &lt;code&gt;$_GET&lt;/code&gt; variables to PHP. It's merely emulating &quot;pretty URLs&quot; with less configuration effort.</source>
          <target state="translated">Esto no es tan conveniente como hacer que Apache separe segmentos de ruta de entrada en &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , &lt;code&gt;$3&lt;/code&gt; y los pase como variables distintas de &lt;code&gt;$_GET&lt;/code&gt; a PHP. Simplemente est&amp;aacute; emulando &quot;URL bonitas&quot; con menos esfuerzo de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="678cdd0d663cc49ab66acef486598ae2d96c6601" translate="yes" xml:space="preserve">
          <source>This nets quicker and more exact answers, and makes them more useful to others.</source>
          <target state="translated">Esto permite obtener respuestas m√°s r√°pidas y exactas,y las hace m√°s √∫tiles para los dem√°s.</target>
        </trans-unit>
        <trans-unit id="f16dfc9b713dca91d180a83ddd93a12f0f5f49f9" translate="yes" xml:space="preserve">
          <source>This optionalized any &lt;code&gt;/&amp;hellip;/&amp;hellip;/&amp;hellip;&lt;/code&gt; trailing path segments. Which then of course requires the handling script to split them up, and &lt;em&gt;variabl-ify&lt;/em&gt; extracted parameters
itself (which is what &lt;em&gt;Web-&quot;MVC&quot;&lt;/em&gt; frameworks do).</source>
          <target state="translated">Esto opcionalizaba cualquier segmento de ruta final &lt;code&gt;/&amp;hellip;/&amp;hellip;/&amp;hellip;&lt;/code&gt; Lo cual, por supuesto, requiere la secuencia de comandos de manejo para dividirlos, y los par&amp;aacute;metros extra&amp;iacute;dos de forma &lt;em&gt;variable&lt;/em&gt; (que es lo que hacen los marcos &lt;em&gt;web &quot;MVC&quot;&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="4f0a25ea5b6c1efa50d189b93b865b7cd7502f46" translate="yes" xml:space="preserve">
          <source>This rule matches anything (&lt;code&gt;.*&lt;/code&gt;) and &lt;em&gt;captures&lt;/em&gt; it (&lt;code&gt;(..)&lt;/code&gt;), then rewrites it to append &quot;.html&quot;. In other words, if &lt;code&gt;/foo/bar&lt;/code&gt; was the requested URL, it will be handled as if &lt;code&gt;/foo/bar.html&lt;/code&gt; had been requested. See &lt;a href=&quot;http://regular-expressions.info&quot;&gt;http://regular-expressions.info&lt;/a&gt; for more information about regular expression matching, capturing and replacements.</source>
          <target state="translated">Esta regla coincide con cualquier cosa ( &lt;code&gt;.*&lt;/code&gt; ) Y la &lt;em&gt;captura&lt;/em&gt; ( &lt;code&gt;(..)&lt;/code&gt; ), luego la reescribe para agregar &quot;.html&quot;. En otras palabras, si &lt;code&gt;/foo/bar&lt;/code&gt; fue la URL solicitada, se manejar&amp;aacute; como si se hubiera solicitado &lt;code&gt;/foo/bar.html&lt;/code&gt; . Consulte &lt;a href=&quot;http://regular-expressions.info&quot;&gt;http://regular-expressions.info&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la coincidencia, captura y reemplazo de expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="3b2ea9bc6efb3aff08b2c67c59e0c49c40b9a8b9" translate="yes" xml:space="preserve">
          <source>This rule says &lt;em&gt;whenever a request matches &quot;/foo/bar&quot;, rewrite it to &quot;/foo/baz&quot;.&lt;/em&gt; The request will then be handled as if &lt;code&gt;/foo/baz&lt;/code&gt; had been requested instead. This can be used for various effects, for example:</source>
          <target state="translated">Esta regla dice que &lt;em&gt;siempre que una solicitud coincida con &quot;/ foo / bar&quot;, vuelva a escribirla en &quot;/ foo / baz&quot;.&lt;/em&gt; La solicitud se manejar&amp;aacute; como si se hubiera solicitado &lt;code&gt;/foo/baz&lt;/code&gt; en su lugar. Esto se puede usar para varios efectos, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f6e5c51f6d07a6fda3f35853c7cbc032504a01a3" translate="yes" xml:space="preserve">
          <source>This simply remaps 2009-2011 posts onto one script, and all other years implicitly to another handler.
Note the &lt;em&gt;more specific rule coming first&lt;/em&gt;. Each script might use different GET params.</source>
          <target state="translated">Esto simplemente reasigna las publicaciones de 2009-2011 en un script, y todos los dem&amp;aacute;s a&amp;ntilde;os impl&amp;iacute;citamente en otro controlador. Tenga en cuenta que la &lt;em&gt;regla m&amp;aacute;s espec&amp;iacute;fica es lo primero&lt;/em&gt; . Cada script puede usar diferentes par&amp;aacute;metros GET.</target>
        </trans-unit>
        <trans-unit id="a1c37412960d01550e537eeede8eb49d03ce4cc9" translate="yes" xml:space="preserve">
          <source>This way you could just rename your &lt;code&gt;article.php&lt;/code&gt; script to just &lt;code&gt;article&lt;/code&gt; (without extension), but still have it processed as PHP script.</source>
          <target state="translated">De esta forma, puede cambiar el nombre de su script &lt;code&gt;article.php&lt;/code&gt; a solo &lt;code&gt;article&lt;/code&gt; (sin extensi&amp;oacute;n), pero a&amp;uacute;n as&amp;iacute; procesarlo como script PHP.</target>
        </trans-unit>
        <trans-unit id="211b69704ff35b0a39c4be33762622ae6379f372" translate="yes" xml:space="preserve">
          <source>This, again, matches anything and rewrites it to the file index.php with the originally requested URL appended in the &lt;code&gt;url&lt;/code&gt; query parameter. I.e., for any and all requests coming in, the file index.php is executed and this file will have access to the original request in &lt;code&gt;$_GET['url']&lt;/code&gt;, so it can do anything it wants with it.</source>
          <target state="translated">Esto, nuevamente, coincide con cualquier cosa y lo reescribe en el archivo index.php con la URL solicitada originalmente adjunta en el par&amp;aacute;metro de consulta de &lt;code&gt;url&lt;/code&gt; . Es decir, para todas y cada una de las solicitudes entrantes, el archivo index.php se ejecuta y este archivo tendr&amp;aacute; acceso a la solicitud original en &lt;code&gt;$_GET['url']&lt;/code&gt; , por lo que puede hacer lo que quiera con &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="a8c5fe091e3cffc8b0c5e5c2b1598310dff0e558" translate="yes" xml:space="preserve">
          <source>To actually use RewriteRules in per-directory configuration files you must:</source>
          <target state="translated">Para usar RewriteRules en los archivos de configuraci√≥n de cada directorio,debes..:</target>
        </trans-unit>
        <trans-unit id="302e8c9231b475103b1b38d200a19d9417800479" translate="yes" xml:space="preserve">
          <source>To expand on &lt;a href=&quot;https://stackoverflow.com/a/20563773/1011145&quot;&gt;deceze's answer&lt;/a&gt;, I wanted to provide a few examples and explanation of some other mod_rewrite functionality.</source>
          <target state="translated">Para ampliar &lt;a href=&quot;https://stackoverflow.com/a/20563773/1011145&quot;&gt;la respuesta de deceze&lt;/a&gt; , quer&amp;iacute;a proporcionar algunos ejemplos y explicaciones de alguna otra funcionalidad mod_rewrite.</target>
        </trans-unit>
        <trans-unit id="e0bb75b10308d21179997cfdc7b880808864c79a" translate="yes" xml:space="preserve">
          <source>To understand what mod_rewrite does you first need to understand how a web server works. A web server responds to &lt;a href=&quot;http://en.wikipedia.org/wiki/Http&quot;&gt;&lt;em&gt;HTTP requests&lt;/em&gt;&lt;/a&gt;. An HTTP request at its most basic level looks like this:</source>
          <target state="translated">Para comprender qu&amp;eacute; mod_rewrite necesita primero comprender c&amp;oacute;mo funciona un servidor web. Un servidor web responde a &lt;a href=&quot;http://en.wikipedia.org/wiki/Http&quot;&gt;&lt;em&gt;las solicitudes HTTP&lt;/em&gt;&lt;/a&gt; . Una solicitud HTTP en su nivel m&amp;aacute;s b&amp;aacute;sico se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">Tools</target>
        </trans-unit>
        <trans-unit id="58245d2ae3eef010b5b66c0f91d98d0ced9ae5a7" translate="yes" xml:space="preserve">
          <source>Trailing file &quot;extensions&quot;</source>
          <target state="translated">Las &quot;extensiones&quot; de los archivos de seguimiento</target>
        </trans-unit>
        <trans-unit id="42c250d9422aa8b9548f27e829e74fff8a6655de" translate="yes" xml:space="preserve">
          <source>URL rewriting is primarily used for supporting &lt;em&gt;virtual&lt;/em&gt; incoming paths. Commonly you just have one dispatcher script (&lt;code&gt;index.php&lt;/code&gt;) or a few individual handlers (&lt;code&gt;articles.php&lt;/code&gt;, &lt;code&gt;blog.php&lt;/code&gt;, &lt;code&gt;wiki.php&lt;/code&gt;, &amp;hellip;). The latter &lt;a href=&quot;https://stackoverflow.com/a/1298917&quot;&gt;might clash&lt;/a&gt; with similar virtual RewriteRule paths.</source>
          <target state="translated">La reescritura de URL se utiliza principalmente para admitir rutas de entrada &lt;em&gt;virtuales&lt;/em&gt; . Por lo general, solo tiene un script de despachador ( &lt;code&gt;index.php&lt;/code&gt; ) o algunos manejadores individuales ( &lt;code&gt;articles.php&lt;/code&gt; , &lt;code&gt;wiki.php&lt;/code&gt; , wiki.php , ...). Este &amp;uacute;ltimo &lt;a href=&quot;https://stackoverflow.com/a/1298917&quot;&gt;podr&amp;iacute;a chocar&lt;/a&gt; con rutas virtuales similares de RewriteRule.</target>
        </trans-unit>
        <trans-unit id="936c1eadd423e11d0419edc5c0a50907603bcf5b" translate="yes" xml:space="preserve">
          <source>URLs don't really have file extensions. Which is what this entire reference is about (= URLs are virtual locators, not necessarily a direct filesystem image).
However if you had a 1:1 file mapping before, you &lt;em&gt;can&lt;/em&gt; craft simpler rules:</source>
          <target state="translated">Las URL realmente no tienen extensiones de archivo. De eso se trata toda esta referencia (= las URL son localizadores virtuales, no necesariamente una imagen directa del sistema de archivos). Sin embargo, si antes ten&amp;iacute;a una asignaci&amp;oacute;n de archivos 1: 1, &lt;em&gt;puede&lt;/em&gt; crear reglas m&amp;aacute;s simples:</target>
        </trans-unit>
        <trans-unit id="748dcaf65cc260bb40913050765500212f87a4c3" translate="yes" xml:space="preserve">
          <source>Uniformity with alternative lists</source>
          <target state="translated">Uniformidad con las listas alternativas</target>
        </trans-unit>
        <trans-unit id="171f5f83a5e1cc88faf76682f9ab5dec103babb8" translate="yes" xml:space="preserve">
          <source>Use mod_rewrite on the server to handle the request to the URL &lt;code&gt;/my/pretty/link&lt;/code&gt; using any one of the methods described above.</source>
          <target state="translated">Use mod_rewrite en el servidor para manejar la solicitud a la URL &lt;code&gt;/my/pretty/link&lt;/code&gt; usando cualquiera de los m&amp;eacute;todos descritos anteriormente.</target>
        </trans-unit>
        <trans-unit id="314b923c11804470bedda27a5e010368e52f966a" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://stackoverflow.com/questions/2261951/what-exactly-is-path-info-in-php&quot;&gt;PATH_INFO&lt;/a&gt;, Luke</source>
          <target state="translated">Usa el &lt;a href=&quot;https://stackoverflow.com/questions/2261951/what-exactly-is-path-info-in-php&quot;&gt;PATH_INFO&lt;/a&gt; , Luke</target>
        </trans-unit>
        <trans-unit id="b06ad5cb5d4d5adc3d4c61b06b4b81b4e2fc280c" translate="yes" xml:space="preserve">
          <source>Were it really be disabled, your RewriteRules still wouldn't work anyway.</source>
          <target state="translated">Si estuviera realmente desactivado,tus Reglas de Reescritura no funcionar√≠an de todos modos.</target>
        </trans-unit>
        <trans-unit id="d0cbc1290725122d94fb5a18b92c5702e6822572" translate="yes" xml:space="preserve">
          <source>What &quot;pretty&quot; URLs should conceptionally be used for is making websites &lt;strong&gt;&lt;em&gt;user-friendly&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">Lo que las URL &quot;bonitas&quot; deber&amp;iacute;an usarse conceptualmente es hacer que los sitios web sean &lt;strong&gt;&lt;em&gt;f&amp;aacute;ciles de usar&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="09b7efa758045019b58e1428653c1f860a31dcd6" translate="yes" xml:space="preserve">
          <source>What mod_rewrite does &lt;em&gt;not&lt;/em&gt; do</source>
          <target state="translated">Lo que &lt;em&gt;no&lt;/em&gt; hace mod_rewrite</target>
        </trans-unit>
        <trans-unit id="360f3bc410da35a3cfaf91a34475047f7d1fbd2b" translate="yes" xml:space="preserve">
          <source>What seems enticing as generalized safeguard, often turns out to be an obstacle in practice.</source>
          <target state="translated">Lo que parece tentador como salvaguarda generalizada,a menudo resulta ser un obst√°culo en la pr√°ctica.</target>
        </trans-unit>
        <trans-unit id="60ab540d4d5fa82c04683e07b642ce0708dabbf4" translate="yes" xml:space="preserve">
          <source>When opting for directory-style paths, you can make it reachable with and without a final</source>
          <target state="translated">Cuando se opta por los caminos del estilo de los directorios,puedes hacerlos accesibles con y sin un final</target>
        </trans-unit>
        <trans-unit id="c5b3b194631676b25d479ba8960b569223e4c363" translate="yes" xml:space="preserve">
          <source>When you introduce virtual directory structures &lt;code&gt;/blog/article/123&lt;/code&gt; this impacts relative resource references in HTML (such as &lt;code&gt;&amp;lt;img src=mouse.png&amp;gt;&lt;/code&gt;).
Which can be solved by:</source>
          <target state="translated">Cuando introduce estructuras de directorios virtuales &lt;code&gt;/blog/article/123&lt;/code&gt; , esto afecta las referencias relativas de recursos en HTML (como &lt;code&gt;&amp;lt;img src=mouse.png&amp;gt;&lt;/code&gt; ). Que se puede resolver mediante:</target>
        </trans-unit>
        <trans-unit id="22eb5ad30eff3a83a982c487a7eeafa78266307c" translate="yes" xml:space="preserve">
          <source>Whenever something &lt;em&gt;doesn't work&lt;/em&gt;</source>
          <target state="translated">Cuando algo &lt;em&gt;no funciona&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="73279bd5b2034996f948348aaf4405c0d1d8ebfc" translate="yes" xml:space="preserve">
          <source>Which helps to narrow down overly generic rules and regex mishaps.</source>
          <target state="translated">Lo que ayuda a reducir las reglas demasiado gen√©ricas y los percances regex.</target>
        </trans-unit>
        <trans-unit id="ef42d9dca7c76ff93fcf4f46cc65e5e50e1ea14b" translate="yes" xml:space="preserve">
          <source>Which is not to say you always &lt;em&gt;have to&lt;/em&gt;. Content-Negotiation is just an automatism to virtual resources.</source>
          <target state="translated">Lo que no quiere decir que siempre &lt;em&gt;tengas que hacerlo&lt;/em&gt; . La negociaci&amp;oacute;n de contenido es solo un automatismo de los recursos virtuales.</target>
        </trans-unit>
        <trans-unit id="8178d60b1be6e325d969a1f01cbe50a62bca55c9" translate="yes" xml:space="preserve">
          <source>Which is often used by PHP frameworks or WebCMS / portal scripts. The actual path splitting then is handled in PHP using &lt;code&gt;$_SERVER[&quot;REQUEST_URI&quot;]&lt;/code&gt;. So conceptionally it's pretty much the opposite of URL handling &quot;per mod_rewrite&quot;. (Just use &lt;a href=&quot;https://httpd.apache.org/docs/2.4/rewrite/remapping.html#fallback-resource&quot;&gt;&lt;code&gt;FallBackResource&lt;/code&gt;&lt;/a&gt; instead.)</source>
          <target state="translated">Que a menudo usan los frameworks PHP o los scripts de WebCMS / portal. La divisi&amp;oacute;n de ruta real se maneja en PHP usando &lt;code&gt;$_SERVER[&quot;REQUEST_URI&quot;]&lt;/code&gt; . As&amp;iacute; que, conceptualmente, es casi lo opuesto al manejo de URL &quot;por mod_rewrite&quot;. (Solo use &lt;a href=&quot;https://httpd.apache.org/docs/2.4/rewrite/remapping.html#fallback-resource&quot;&gt; &lt;code&gt;FallBackResource&lt;/code&gt; &lt;/a&gt; en su lugar).</target>
        </trans-unit>
        <trans-unit id="66300ff1c036bd0e881fe379dec2cb88970a4d4c" translate="yes" xml:space="preserve">
          <source>Which it doesn't per default. You can &lt;a href=&quot;https://stackoverflow.com/questions/7218164/multiple-rewriterules-for-single-rewritecond-in-htaccess&quot;&gt;chain them&lt;/a&gt; using the &lt;code&gt;[S=2]&lt;/code&gt; flag. Else you'll have to repeat them. While sometimes you can craft an &quot;inverted&quot; primary rule to [END] the rewrite processing early.</source>
          <target state="translated">Que no lo hace por defecto. Puede &lt;a href=&quot;https://stackoverflow.com/questions/7218164/multiple-rewriterules-for-single-rewritecond-in-htaccess&quot;&gt;encadenarlos&lt;/a&gt; usando la bandera &lt;code&gt;[S=2]&lt;/code&gt; . De lo contrario, tendr&amp;aacute;s que repetirlos. Si bien a veces puede crear una regla primaria &quot;invertida&quot; para [FINALIZAR] el proceso de reescritura temprano.</target>
        </trans-unit>
        <trans-unit id="dfa0314a5be793cf2743f125195fe1bfb6a4399d" translate="yes" xml:space="preserve">
          <source>You can easily extend that rule to allow for &lt;code&gt;/article/title-string&lt;/code&gt; placeholders:</source>
          <target state="translated">Puede extender f&amp;aacute;cilmente esa regla para permitir &lt;code&gt;/article/title-string&lt;/code&gt; marcadores de posici&amp;oacute;n / article / title-string :</target>
        </trans-unit>
        <trans-unit id="6a6877229f800cd4d7bb88f9850b271d0487be6f" translate="yes" xml:space="preserve">
          <source>You can split them out into individual &lt;code&gt;RewriteRule&lt;/code&gt;s should this get too complex.</source>
          <target state="translated">Puede dividirlos en &lt;code&gt;RewriteRule&lt;/code&gt; individuales si esto se vuelve demasiado complejo.</target>
        </trans-unit>
        <trans-unit id="8585e0db233781f56ebd06de62c7eb1f8f5b3a5a" translate="yes" xml:space="preserve">
          <source>You can't match &lt;code&gt;RewriteRule index.php\?x=y&lt;/code&gt;, because mod_rewrite compares just against relative paths per default. You can match them separately however via:</source>
          <target state="translated">No puede coincidir con &lt;code&gt;RewriteRule index.php\?x=y&lt;/code&gt; , porque mod_rewrite se compara solo con las rutas relativas por defecto. Sin embargo, puede combinarlos por separado a trav&amp;eacute;s de:</target>
        </trans-unit>
        <trans-unit id="d222b87fbace9b84595f1388716086c2a42d24b7" translate="yes" xml:space="preserve">
          <source>You could alternatively craft further RewriteRules to rebind &lt;code&gt;.css&lt;/code&gt; or &lt;code&gt;.png&lt;/code&gt; paths to their original locations.
But that's both unneeded, or incurs extra redirects and hampers caching.</source>
          <target state="translated">Alternativamente, puede crear m&amp;aacute;s RewriteRules para volver a vincular rutas .css o &lt;code&gt;.png&lt;/code&gt; a sus ubicaciones originales. Pero eso es innecesario o incurre en redirecciones adicionales y dificulta el almacenamiento en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="44a6fa9efc666a65a1bd62ec9dc5ea3f7942e480" translate="yes" xml:space="preserve">
          <source>You shouldn't start your &lt;code&gt;.htaccess&lt;/code&gt; RewriteRule patterns with &lt;code&gt;^/&lt;/code&gt; normally:</source>
          <target state="translated">No debe iniciar sus patrones &lt;code&gt;.htaccess&lt;/code&gt; RewriteRule con &lt;code&gt;^/&lt;/code&gt; normalmente:</target>
        </trans-unit>
        <trans-unit id="815d892a020c87eb8dcd1e707d7e6e98c8c8c3ca" translate="yes" xml:space="preserve">
          <source>You're most commonly seeing RewriteRules to simulate a virtual directory structure. But you're not forced to be uncreative. You can as well use &lt;code&gt;-&lt;/code&gt; hyphens for segmenting or structure.</source>
          <target state="translated">Lo m&amp;aacute;s com&amp;uacute;n es ver RewriteRules para simular una estructura de directorio virtual. Pero no est&amp;aacute;s obligado a ser poco creativo. Tambi&amp;eacute;n puede usar guiones para segmentar o estructurar.</target>
        </trans-unit>
        <trans-unit id="d0f0d732863ee895a309758e84227312d39f3171" translate="yes" xml:space="preserve">
          <source>You've probably seen this in many examples:</source>
          <target state="translated">Probablemente has visto esto en muchos ejemplos:</target>
        </trans-unit>
        <trans-unit id="a8f5998b0f4e9bd3bbc4db8f81b5de80b7f6c2ed" translate="yes" xml:space="preserve">
          <source>approach is easy to append onto any other RewriteRule.</source>
          <target state="translated">es f√°cil de a√±adir a cualquier otra Regla de Reescritura.</target>
        </trans-unit>
        <trans-unit id="6ec7f782439e58bed3a8696b026c30a1d9093ec8" translate="yes" xml:space="preserve">
          <source>in patterns</source>
          <target state="translated">en los patrones</target>
        </trans-unit>
        <trans-unit id="a56c70ab2c290c7937cb7e100dd4b3b8f2b82d94" translate="yes" xml:space="preserve">
          <source>mod_rewrite does not magically make all your URLs &quot;pretty&quot;. This is a common misunderstanding. If you have this link in your web site:</source>
          <target state="translated">mod_rewrite no hace m√°gicamente que todas tus URLs sean &quot;bonitas&quot;.Este es un malentendido com√∫n.Si tienes este enlace en tu sitio web:</target>
        </trans-unit>
        <trans-unit id="043d0819e92bf8f0d7f33ab50480ff32c04dd7c1" translate="yes" xml:space="preserve">
          <source>mod_rewrite is a way to &lt;em&gt;rewrite&lt;/em&gt; the internal request handling. When the web server receives a request for the URL &lt;code&gt;/foo/bar&lt;/code&gt;, you can &lt;em&gt;rewrite&lt;/em&gt; that URL into something else before the web server will look for a file on disk to match it. Simple example:</source>
          <target state="translated">mod_rewrite es una forma de &lt;em&gt;reescribir&lt;/em&gt; el manejo interno de solicitudes. Cuando el servidor web recibe una solicitud de URL &lt;code&gt;/foo/bar&lt;/code&gt; , puede &lt;em&gt;volver a escribir&lt;/em&gt; esa URL en otra cosa antes de que el servidor web busque un archivo en el disco para que coincida. Ejemplo simple:</target>
        </trans-unit>
        <trans-unit id="c838466232ea0f7c751192a9afce76a1b060ebe8" translate="yes" xml:space="preserve">
          <source>scheme:</source>
          <target state="translated">scheme:</target>
        </trans-unit>
        <trans-unit id="f37e25064bedecaffcd022221184a14425448ecb" translate="yes" xml:space="preserve">
          <source>there's nothing mod_rewrite can do to make that pretty. In order to make this a pretty link, you have to:</source>
          <target state="translated">no hay nada que mod_rewrite pueda hacer para que eso sea bonito.Para hacer de esto un bonito enlace,tienes que hacerlo:</target>
        </trans-unit>
        <trans-unit id="72bba5fd6da4f8012e901d27e8f7631e871b0922" translate="yes" xml:space="preserve">
          <source>‚ê£</source>
          <target state="translated">‚ê£</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
