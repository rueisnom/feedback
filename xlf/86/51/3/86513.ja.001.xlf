<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/86513">
    <body>
      <group id="86513">
        <trans-unit id="e8da74d117732daae1ec6eced513ab4442893f06" translate="yes" xml:space="preserve">
          <source>(But then, someone who /really/ knew what they were doing would say:</source>
          <target state="translated">(しかし、そうすると、本当に自分が何をしているのかを知っている人が言うのでしょう。</target>
        </trans-unit>
        <trans-unit id="c854ac93991da55521bfe15bb671f855074e82c7" translate="yes" xml:space="preserve">
          <source>*As long as your server endpoints have the correct validation &amp;amp; sanitisation of user supplied values, it should not matter what gets parsed and eval'd in your client side javascript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*サーバーエンドポイントがユーザー指定の値の正しい検証とサニタイズを備えている限り、クライアント側のJavaScriptで何が解析および評価されるかは問題ではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1216171f6b14f8050f363786c3b695062989583e" translate="yes" xml:space="preserve">
          <source>...which is much easier to read as well as less potentially buggy.</source>
          <target state="translated">...その方がずっと読みやすいし、バグも少ない。</target>
        </trans-unit>
        <trans-unit id="a4c4530f99dceb59d9b5f2c1b1e4b43d1913e4d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Debugging&lt;/strong&gt; can be more challenging
(no line numbers, etc.)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デバッグ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はより困難になる可能性があります（行番号なしなど）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68827a63b5078f9a50c23ab76de31607123511a8" translate="yes" xml:space="preserve">
          <source>All modern browsers have a developer console where you can execute arbitrary javascript anyway and any semi-smart developer can look at your JS source and put whatever bits of it they need to into the dev console to do what they wish.</source>
          <target state="translated">最近のブラウザには開発者コンソールがあり、任意のjavascriptを実行できるようになっています。</target>
        </trans-unit>
        <trans-unit id="efc7386ceb8449e138c1ffecfb668b89e72781e3" translate="yes" xml:space="preserve">
          <source>Along with the rest of the answers, I don't think eval statements can have advanced minimization.</source>
          <target state="translated">他の回答と一緒で、eval文が高度な最小化を持つことはないと思います。</target>
        </trans-unit>
        <trans-unit id="04f073718f97b7a0620837423dbd160f9efde52e" translate="yes" xml:space="preserve">
          <source>Another way to prevent automatic globals is to wrap the
&lt;code&gt;eval()&lt;/code&gt; call into an immediate function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動グローバルを防ぐ別の方法は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出しを即時関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にラップする &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29a3e2a33db16ab92bf0e28b6d2254865dd52c91" translate="yes" xml:space="preserve">
          <source>Basically from</source>
          <target state="translated">基本的には</target>
        </trans-unit>
        <trans-unit id="68f751cf48a145fd656a026a713a49fe39869d0e" translate="yes" xml:space="preserve">
          <source>Behind the scenes, JavaScript still has to evaluate and execute
the string you pass as programming code:</source>
          <target state="translated">裏では、JavaScriptはまだプログラミングコードとして渡した文字列を評価して実行しなければなりません。</target>
        </trans-unit>
        <trans-unit id="6de8012b0b5762ab8293b8a7887b69c33081f049" translate="yes" xml:space="preserve">
          <source>Besides the possible security issues if you are executing user-submitted code, most of the time there's a better way that doesn't involve re-parsing the code every time it's executed. Anonymous functions or object properties can replace most uses of eval and are much safer and faster.</source>
          <target state="translated">ユーザが提出したコードを実行する場合に起こりうるセキュリティ上の問題の他に、ほとんどの場合、コードを実行するたびに再解析する必要のない、より良い方法があります。匿名関数やオブジェクトのプロパティは eval のほとんどの使用法を置き換えることができ、より安全で高速です。</target>
        </trans-unit>
        <trans-unit id="85c8f9654ce736912618edd0981f92704b35e280" translate="yes" xml:space="preserve">
          <source>But if the Engine finds an eval(..) in the code, it essentially has to assume that all its awareness of identifier location may be invalid, because it cannot know at lexing time exactly what code you may pass to eval(..) to modify the lexical scope, or the contents of the object you may pass to with to create a new lexical scope to be consulted.</source>
          <target state="translated">しかし、もしエンジンがコード中に eval(...)を見つけた場合、本質的には識別子の位置に関するすべての認識が無効である可能性があると仮定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="708ad811ceaadce04eda4ed9426ac29d31be3a58" translate="yes" xml:space="preserve">
          <source>EDIT:  by the way, I wouldn't suggest (for all the security reasons pointed out heretofore) that you base you object names on user input.  I can't imagine any good reason you'd want to do that though.  Still, thought I'd point it out that it wouldn't be a good idea :)</source>
          <target state="translated">EDIT:ところで、(これまで指摘されてきたセキュリティ上の理由から)ユーザー入力に基づいてオブジェクト名を作成することはお勧めしません。しかし、そんなことをしたいと思う理由が思いつきません。それでも、それが良い考えではないことを指摘しておこうと思いました :)</target>
        </trans-unit>
        <trans-unit id="e912f4005bab4ffe00de9bda5fe37444d9215a0d" translate="yes" xml:space="preserve">
          <source>Edit: As @Jeff Walden points out in comments, #3 is less true today than it was in 2008. However, while some caching of compiled scripts may happen this will only be limited to scripts that are eval'd repeated with no modification. A more likely scenario is that you are eval'ing scripts that have undergone slight modification each time and as such could not be cached. Let's just say that SOME eval'd code executes more slowly.</source>
          <target state="translated">編集:@Jeff Walden がコメントで指摘しているように、#3 は 2008 年に比べて現在ではあまり当てはまりません。しかし、コンパイルされたスクリプトのキャッシュが発生することはあるかもしれませんが、これは何も変更せずに何度も評価を繰り返しているスクリプトに限られます。より可能性が高いのは、毎回わずかな修正が加えられているスクリプトを eval している場合で、そのようなスクリプトはキャッシュされない可能性があるということです。ここでは、一部の eval されたコードの実行がより遅くなっているとしましょう。</target>
        </trans-unit>
        <trans-unit id="84841ccacb20efbdee1996b961b9cb5573918289" translate="yes" xml:space="preserve">
          <source>Garbage collection</source>
          <target state="translated">ゴミの収集</target>
        </trans-unit>
        <trans-unit id="b6d7540d21081b0823e787c495d22c2e6a29acd1" translate="yes" xml:space="preserve">
          <source>Here's a script to demo the problem</source>
          <target state="translated">問題をデモするためのスクリプトは以下の通りです</target>
        </trans-unit>
        <trans-unit id="75feee4bba342c7d1a150d617df26a5b84f7c599" translate="yes" xml:space="preserve">
          <source>However, eval is currently and historically massively over-used by people who don't know what they're doing. That includes people writing JavaScript tutorials, unfortunately, and in some cases this can indeed have security consequences - or, more often, simple bugs. So the more we can do to throw a question mark over eval, the better. Any time you use eval you need to sanity-check what you're doing, because chances are you could be doing it a better, safer, cleaner way.</source>
          <target state="translated">しかし、eval は現在も歴史的にも、何をやっているのかわからない人たちによって大量に過剰に使われています。これには残念ながら JavaScript のチュートリアルを書いている人たちも含まれており、場合によってはこれがセキュリティ上の問題を引き起こすこともあります。そのため、eval に疑問符をつけることができれば、それはより良いことなのです。eval を使うときはいつでも、自分が何をしているのかをサニティーチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="b0cc8a90cfd59a17fbc14979055df165cbd77f75" translate="yes" xml:space="preserve">
          <source>However, for all the reasons mentioned above, you shouldn't use it for your own code, where you have complete control - it's just not necessary, and better-off relegated to the 'tricky JavaScript hacks' shelf.</source>
          <target state="translated">しかし、上記のすべての理由のために、あなたは完全に制御を持っているあなた自身のコードのためにそれを使用するべきではありません-それはちょうど必要ではありませんし、より良い「トリッキーなJavaScriptハック」の棚に追いやられています。</target>
        </trans-unit>
        <trans-unit id="0d2efd49cfff0a15360537f164259f4616c0e72a" translate="yes" xml:space="preserve">
          <source>I believe it's because it can execute any JavaScript function from a string. Using it makes it easier for people to inject rogue code into the application.</source>
          <target state="translated">文字列から任意の JavaScript 関数を実行できるからだと思います。これを使うことで、不正なコードをアプリケーションに注入することが容易になります。</target>
        </trans-unit>
        <trans-unit id="edba6850417672557191720478e91372debe060d" translate="yes" xml:space="preserve">
          <source>I know this discussion is old, but I really like &lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=6EJ801el-I8#t=1729s&quot;&gt;this&lt;/a&gt; approach by Google and wanted to share that feeling with others ;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はこの議論が古いことを知っ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ていますが、Googleによる&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=6EJ801el-I8#t=1729s&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アプローチ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が本当に好きであり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その気持ちを他の人と共有したいと思いました&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc70f4cb34b43ea51c23addc083f3c8caad5fc21" translate="yes" xml:space="preserve">
          <source>I won't attempt to refute anything said heretofore, but i will offer this use of eval() that (as far as I know) can't be done any other way.  There's probably other ways to code this, and probably ways to optimize it, but this is done longhand and without any bells and whistles for clarity sake to illustrate a use of eval that really doesn't have any other alternatives.  That is: dynamical (or more accurately) programmically-created object names (as opposed to values).</source>
          <target state="translated">これまでに述べられたことに反論するつもりはありませんが、(私の知る限りでは)他の方法ではできない eval()の使い方を紹介します。これをコード化する方法は他にもあるでしょうし、最適化する方法もあるでしょうが、これは明確にするために、他に選択肢のない eval の使用法を説明するために、何の飾り気もなく、手探りで行ったものです。つまり、動的な(より正確には)プログラムで作成された(値ではなく)オブジェクト名です。</target>
        </trans-unit>
        <trans-unit id="44f1a7e0acb79a925f0a5eb2f48fbce6d2a201ff" translate="yes" xml:space="preserve">
          <source>I would go as far as to say that it doesn't really matter if you use &lt;code&gt;eval()&lt;/code&gt; in javascript which is run in browsers.*(caveat)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブラウザで実行されるjavascriptで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するかどうかは、実際には問題にならないとまで言って&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おきます。*（警告）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcf7355fa794212df970cc7d5b845c63c7a95cb8" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m not saying you should go run out and start using eval()
  everywhere. In fact, there are very few good use cases for running
  eval() at all. There are definitely concerns with code clarity,
  debugability, and certainly performance that should not be overlooked.
  But you shouldn&amp;rsquo;t be afraid to use it when you have a case where
  eval() makes sense. Try not using it first, but don&amp;rsquo;t let anyone scare
  you into thinking your code is more fragile or less secure when eval()
  is used appropriately.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どこにでもeval（）を使い始める必要があると言っているのではありません。実際、eval（）を実行するための良いユースケースはほとんどありません。コードの明快さ、デバッグ可能性、そして確かに見落としてはならないパフォーマンスについては、確かに懸念があります。しかし、eval（）が理にかなっているケースがある場合、それを使用することを恐れるべきではありません。最初にそれを使用しないでください。ただし、eval（）が適切に使用されている場合、コードが脆弱であるか安全性が低いと誰もが怖がらせないようにしてください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b07728bbbfd376d8b79bdf7dfdada9b7a5a3a8ff" translate="yes" xml:space="preserve">
          <source>If the authors of the kind of code above had a clue about the basics of how JavaScript objects work, they'd have realised that square brackets can be used instead of literal dot-names, obviating the need for eval:</source>
          <target state="translated">上のようなコードの作者が JavaScript オブジェクトがどのように動作するかの基本を理解していれば、リテラルのドット名の代わりに角括弧を使うことができることに気付いていたはずで、 eval を使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="7a9210275eab4c37ef5ac1d41a84323394920187" translate="yes" xml:space="preserve">
          <source>If you spot the use of eval() in your code, remember the mantra &amp;ldquo;eval() is evil.&amp;rdquo;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードでeval（）の使用を見つけたら、「eval（）は悪である」というスローガンを思い出してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1e6c44d75d7af9e8969d55a4397d71b07326d5f" translate="yes" xml:space="preserve">
          <source>If you want the user to input some logical functions and evaluate for AND the OR then the JavaScript eval function is perfect. I can accept two strings and &lt;code&gt;eval(uate) string1 === string2&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユーザーがいくつかの論理関数を入力してAND AND ORを評価するようにしたい場合は、JavaScript eval関数が最適です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの文字列と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval(uate) string1 === string2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を受け入れることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3031dedc7540794a7092138701cb532acae72ab" translate="yes" xml:space="preserve">
          <source>If you were to ask if it's suitable to use &lt;code&gt;eval()&lt;/code&gt; in PHP however, the answer is &lt;strong&gt;NO&lt;/strong&gt;, unless you &lt;strong&gt;whitelist&lt;/strong&gt; any values which may be passed to your eval statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、PHPで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するのが適切かどうかを尋ねる場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、evalステートメントに渡される可能性のある値を&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ホワイトリストに登録し&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない限り&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、答えは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c48a549b1d6f103cd7da2f5411479e65b3492ed4" translate="yes" xml:space="preserve">
          <source>If your application is using &lt;code&gt;eval()&lt;/code&gt; to create an object from some JSON which has come back from an &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt; to your own site, created by your trusted server-side code, it's probably not a problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アプリケーションが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、信頼されたサーバー側コードによって作成された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XMLHttpRequest&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から独自のサイトに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返されたJSONからオブジェクトを作成する場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、おそらく問題ありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c8a85d8fc546b1eb106d07c70fa24db9d6bac6f" translate="yes" xml:space="preserve">
          <source>Improper use of &lt;strong&gt;eval&lt;/strong&gt; opens up your
code for injection attacks</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;evalの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不適切な使用は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、インジェクション攻撃のコードを開きます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14d6fe3adbcdf0f5b6ca6fb7ea8cba66668180d5" translate="yes" xml:space="preserve">
          <source>In other words, in the pessimistic sense, most of those optimizations it would make are pointless if eval(..) is present, so it simply doesn't perform the optimizations at all.</source>
          <target state="translated">言い換えれば、悲観的な意味では、eval(...)が存在する場合には、最適化のほとんどは無意味なものであり、最適化を全く行わないということになります。</target>
        </trans-unit>
        <trans-unit id="2bf3bffa2873d5b6030df088077ed6930916a446" translate="yes" xml:space="preserve">
          <source>It greatly reduces your level of confidence about security.</source>
          <target state="translated">それは、セキュリティに関するあなたの信頼度を大幅に低下させます。</target>
        </trans-unit>
        <trans-unit id="6f03d1d2d23aa04e158c4ae98f058def0948b3b6" translate="yes" xml:space="preserve">
          <source>It is a possible security risk, it has a different scope of execution, and is quite inefficient, as it creates an entirely new scripting environment for the execution of the code. See here for some more info: &lt;a href=&quot;http://userjs.org/help/tutorials/efficient-code#evalevil&quot;&gt;eval&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはセキュリティリスクの可能性があり、実行範囲が異なり、コードの実行用にまったく新しいスクリプト環境を作成するため、非常に非効率的です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、こちらをご覧ください：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://userjs.org/help/tutorials/efficient-code#evalevil&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8961c0347a3eacf41d26a8b6650e23806802192" translate="yes" xml:space="preserve">
          <source>It is quite useful, though, and used with moderation can add a lot of good functionality.</source>
          <target state="translated">しかし、それは非常に便利で、節度を持って使用することで多くの良い機能を追加することができます。</target>
        </trans-unit>
        <trans-unit id="6dfa9b7f1d8c876ae6c2dd750e25f385454bcfcd" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also important to remember that passing strings to &lt;code&gt;setInterval()&lt;/code&gt;, &lt;code&gt;setTimeout()&lt;/code&gt;,
and the &lt;code&gt;Function()&lt;/code&gt; constructor is, for the most part, similar to using &lt;code&gt;eval()&lt;/code&gt; and therefore
should be avoided.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、文字列を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクターに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;渡すこと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、ほとんどの場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するのと似ている&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、避ける必要がある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを覚えておくことも重要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8c3cc80491fbfb8cbd6e3ac6b00259872abd652" translate="yes" xml:space="preserve">
          <source>It's generally only an issue if you're passing eval user input.</source>
          <target state="translated">一般的には eval のユーザ入力を渡している場合にのみ問題となります。</target>
        </trans-unit>
        <trans-unit id="8c42fa01d170f0ba1c3ba79193d4093073ef1646" translate="yes" xml:space="preserve">
          <source>It's not always a bad idea. Take for example, code generation. I recently wrote a library called &lt;a href=&quot;https://github.com/vincentracine/hyperbars&quot;&gt;Hyperbars&lt;/a&gt; which bridges the gap between &lt;a href=&quot;https://github.com/Matt-Esch/virtual-dom&quot;&gt;virtual-dom&lt;/a&gt; and &lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;handlebars&lt;/a&gt;. It does this by parsing a handlebars template and converting it to &lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;hyperscript&lt;/a&gt; which is subsequently used by virtual-dom. The hyperscript is generated as a string first and before returning it, &lt;code&gt;eval()&lt;/code&gt; it to turn it into executable code. I have found &lt;code&gt;eval()&lt;/code&gt; in this particular situation the exact opposite of evil.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは常に悪い考えではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、コード生成を見てみましょう。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は最近&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;a href=&quot;https://github.com/Matt-Esch/virtual-dom&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仮想dom&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハンドルバー&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間のギャップを埋める&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vincentracine/hyperbars&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハイパー&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バー&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるライブラリを書きました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、ハンドルバーテンプレートを解析し、それを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;後でvirtual-domで使用される&lt;/font&gt;&lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハイパースクリプトに&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変換することで行われ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハイパースクリプトは最初に文字列として生成され、それを返す前に&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実行して実行可能コードに変換します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が発見した&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、この特定の状況の悪とは正反対に。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31da5fad3f0e5a2f90cae8dbe47b9ff1d4257b20" translate="yes" xml:space="preserve">
          <source>It's not necessarily that bad provided you know what context you're using it in.</source>
          <target state="translated">それは必ずしも悪いことではありません あなたがそれを使用している文脈を知っているならば。</target>
        </trans-unit>
        <trans-unit id="6fdf367987c4f683a398eb84746d6c7cffa8f46a" translate="yes" xml:space="preserve">
          <source>Mainly, it's a lot harder to maintain and debug. It's like a &lt;code&gt;goto&lt;/code&gt;. You can use it, but it makes it harder to find problems and harder on the people who may need to make changes later.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主に、保守とデバッグがはるかに困難です。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;goto&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;みたい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたはそれを使うことができますが、それは問題を見つけることを難しくし、後で変更を加える必要があるかもしれない人々を難しくします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6816994f89090ba2d1e15d75329ea4bd59ca4afc" translate="yes" xml:space="preserve">
          <source>One thing to keep in mind is that you can often use eval() to execute code in an otherwise restricted environment - social networking sites that block specific JavaScript functions can sometimes be fooled by breaking them up in an eval block -</source>
          <target state="translated">心に留めておくべきことの一つは、他の制限された環境では eval()を使ってコードを実行することがよくあるということです。</target>
        </trans-unit>
        <trans-unit id="286c00910c6d09f3a9fbe2684368745980787a14" translate="yes" xml:space="preserve">
          <source>Passing user input to eval() is a security risk, but also each invocation of eval() creates a new instance of the JavaScript interpreter. This can be a resource hog.</source>
          <target state="translated">eval()にユーザの入力を渡すことはセキュリティ上のリスクがありますが、 eval()を呼び出すたびに JavaScript インタプリタの新しいインスタンスが生成されます。これはリソースを大量に消費する可能性があります。</target>
        </trans-unit>
        <trans-unit id="df4727fbdcb3341721f9c555bf1cbb200fd36b28" translate="yes" xml:space="preserve">
          <source>Performance: until the code to be executed is unknown, it cannot be optimized.  (about javascript and performance, certainly &lt;a href=&quot;http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html&quot;&gt;Steve Yegge's presentation&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パフォーマンス：実行されるコードが不明になるまで、最適化できません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（javascriptとパフォーマンスについては、確かに&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Steve Yeggeのプレゼンテーション&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64aa4d557cc62d15e8de600185aa21dbf6018da0" translate="yes" xml:space="preserve">
          <source>Reference :</source>
          <target state="translated">参考にしてください。</target>
        </trans-unit>
        <trans-unit id="5e60db53c154faf8e7afbee52db6ba5fc5c47e87" translate="yes" xml:space="preserve">
          <source>Security (but as long as you generate the string to be evaluated yourself, this might be a non-issue)</source>
          <target state="translated">セキュリティ (ただし、評価される文字列を自分で生成する限り、これは問題にならないかもしれません)</target>
        </trans-unit>
        <trans-unit id="14685695470c1f8b261fc20c5c317f1a512aa650" translate="yes" xml:space="preserve">
          <source>So if you're looking to run some JavaScript code where it might not otherwise be allowed (&lt;a href=&quot;http://en.wikipedia.org/wiki/Myspace&quot;&gt;Myspace&lt;/a&gt;, I'm looking at you...) then eval() can be a useful trick.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、JavaScriptのコードを実行する場合、それが許可されていない可能性がある場合（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Myspace&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Myspace&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、私はあなたを見ている...）、eval（）は便利なトリックになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29ca7e51eaa8f10f1aa783d05d0cdd8080017091" translate="yes" xml:space="preserve">
          <source>Something as simple as the above code causes a small amount of memory to be store until the app dies. 
This is worse when the evaled script is a giant function, and called on interval.</source>
          <target state="translated">上記のコードのような単純なものは、アプリが死ぬまで少量のメモリを保存してしまいます。これは evaled スクリプトが巨大な関数であり、間隔をおいて呼び出された場合に悪化します。</target>
        </trans-unit>
        <trans-unit id="41399e76633f1ba3e54bb4e075d2084afd4fcd9f" translate="yes" xml:space="preserve">
          <source>The JavaScript Engine has a number of performance optimizations that it performs during the compilation phase. Some of these boil down to being able to essentially statically analyze the code as it lexes, and pre-determine where all the variable and function declarations are, so that it takes less effort to resolve identifiers during execution.</source>
          <target state="translated">JavaScript エンジンには、コンパイル段階で実行される多くのパフォーマンス最適化があります。これらのうちのいくつかは、本質的にコードを静的に解析し、すべての変数と関数の宣言がどこにあるかを事前に決定することで、実行中に識別子を解決する手間を省くことができるようにすることです。</target>
        </trans-unit>
        <trans-unit id="148e0c7f81d9a3698c5049c257860541935ee71e" translate="yes" xml:space="preserve">
          <source>The browsers garbage collection has no idea if the code that's eval'ed can be removed from memory so it just keeps it stored until the page is reloaded. 
Not too bad if your users are only on your page shortly, but it can be a problem for webapp's.</source>
          <target state="translated">ブラウザのガベージコレクションは、評価されたコードがメモリから削除されるかどうかを知らないので、ページがリロードされるまで保存されてしまいます。ユーザがあなたのページを短時間しか見ていないのであれば、それほど悪いことではありませんが、ウェブアプリケーションにとっては問題になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="24be6ca54f3f04a72a882c99dcb539c99444e81b" translate="yes" xml:space="preserve">
          <source>The eval function is a powerful and easy way to dynamically generate code, so what are the caveats?</source>
          <target state="translated">eval関数はコードを動的に生成するための強力で簡単な方法ですが、注意点は何でしょうか?</target>
        </trans-unit>
        <trans-unit id="68865d1d8d64a6c8ba9da456612b2787bc0b5b95" translate="yes" xml:space="preserve">
          <source>The other thing is that the better You get the more You try to understand and finally You just don't believe that something is good or bad just because someone said so :) 
This is a very inspirational &lt;a href=&quot;http://www.youtube.com/watch?v=MFtijdklZDo&quot;&gt;video&lt;/a&gt; that helped me to think more by myself :) GOOD PRACTICES are good, but don't use them mindelessly :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の事は、より良いあなたがより多くのあなたが理解しようと最終的にはあなただけでは何かが誰かがそう言ったからといっ:)これは非常にインスピレーションで良いか悪いかであるとは考えていない得るということである&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=MFtijdklZDo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ビデオ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は自分自身でもっと考えるように役立ちました:)良い習慣は良いですが、気にせず使用しないでください:)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d16f9ac85bd63b35f45508e21cf50ad7aeb3cb1f" translate="yes" xml:space="preserve">
          <source>The performance of &lt;code&gt;eval()&lt;/code&gt; isn't an issue in a situation like this because you only need to interpret the generated string once and then reuse the executable output many times over.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような状況では&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のパフォーマンスは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題になりません。生成された文字列を1回だけ解釈し、実行可能出力を何度も再利用する必要があるためです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7633212c2dd3cc676f1ba1372322ebac779d750f" translate="yes" xml:space="preserve">
          <source>There is a small potential
benefit because the code evaluated in new Function() will be running in a local function
scope, so any variables defined with var in the code being evaluated will not become
globals automatically.</source>
          <target state="translated">なぜなら、new Function()で評価されるコードはローカルの関数スコープで実行されるため、評価されるコードで var で定義された変数は自動的にグローバルにはならないからです。</target>
        </trans-unit>
        <trans-unit id="4584f4b326d529ce961e584e35dd41b651162eb7" translate="yes" xml:space="preserve">
          <source>This
function takes an arbitrary string and executes it as JavaScript code. When the code in
question is known beforehand (not determined at runtime), there&amp;rsquo;s no reason to use
eval(). 
If the code is dynamically generated at runtime, there&amp;rsquo;s often a better way to
achieve the goal without eval(). 
For example, just using square bracket notation to
access dynamic properties is better and simpler:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この関数は、任意の文字列を取り、それをJavaScriptコードとして実行します。問題のコードが事前にわかっている場合（実行時に決定されない）、eval（）を使用する理由はありません。コードが実行時に動的に生成される場合、eval（）なしで目標を達成するためのより良い方法がしばしばあります。たとえば、動的プロパティにアクセスするために角かっこ表記を使用するだけの方が簡単で優れています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ccfc53cb017769dd7ae987a142efdb9302c67cd" translate="yes" xml:space="preserve">
          <source>This explains it all.</source>
          <target state="translated">これが全てを説明しています。</target>
        </trans-unit>
        <trans-unit id="ee72c7e2a527cacf1dc21f1420f881a587b5bf1d" translate="yes" xml:space="preserve">
          <source>This is one of good articles talking about eval and how it is not an evil:
&lt;a href=&quot;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&quot;&gt;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはevalとそれが悪ではない方法について話している良い記事の1つです：&lt;/font&gt;&lt;a href=&quot;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="206747b449bd6d921232d550ccc476c2741e014c" translate="yes" xml:space="preserve">
          <source>This may become more of an issue as the next generation of browsers come out with some flavor of a JavaScript compiler. Code executed via Eval may not perform as well as the rest of your JavaScript against these newer browsers. Someone should do some profiling.</source>
          <target state="translated">これは、次世代のブラウザが何らかのフレーバーの JavaScript コンパイラを搭載するようになると、より問題になるかもしれません。Evalを介して実行されるコードは、これらの新しいブラウザに対して他のJavaScriptと同じように動作しないかもしれません。誰かがプロファイリングを行うべきです。</target>
        </trans-unit>
        <trans-unit id="f0f8ad23e65b95f25bbdd8df86f29ae3982527e0" translate="yes" xml:space="preserve">
          <source>To give an all-too-typical example, to set the colour of an element with an id stored in the variable 'potato':</source>
          <target state="translated">あまりにも典型的な例を挙げると、変数 'potato' に格納されている id を持つ要素の色を設定します。</target>
        </trans-unit>
        <trans-unit id="f4c65e507b7f93297ee2268d7252cbd7eb37d296" translate="yes" xml:space="preserve">
          <source>To this</source>
          <target state="translated">これに</target>
        </trans-unit>
        <trans-unit id="b34c39225645dafeee78e3812eddc5e31d4bb53b" translate="yes" xml:space="preserve">
          <source>Two points come to mind:</source>
          <target state="translated">2つのポイントが浮かびます。</target>
        </trans-unit>
        <trans-unit id="d9b8f5845abccd0b52ea08432402c9e42002ef09" translate="yes" xml:space="preserve">
          <source>Unless you are 100% sure that the code being evaluated is from a trusted source (usually your own application) then it's a surefire way of exposing your system to a cross-site scripting attack.</source>
          <target state="translated">評価されるコードが信頼できるソース(通常は自分のアプリケーション)からのものであることを100%確信していない限り、クロスサイトスクリプティング攻撃にシステムを晒すことは確実な方法です。</target>
        </trans-unit>
        <trans-unit id="e3090c0855982eee09e2769634d70840bc3e123f" translate="yes" xml:space="preserve">
          <source>Unless you let eval() a dynamic content (through cgi or input), it is as safe and solid as all other JavaScript in your page.</source>
          <target state="translated">eval()に (cgi や入力を介して)動的なコンテンツを含ませない限り、ページ内の他のすべての JavaScript と同様に安全で堅固なものとなります。</target>
        </trans-unit>
        <trans-unit id="828ef76c49e81348c8216226d09ee2f8044a35d7" translate="yes" xml:space="preserve">
          <source>Untrusted client-side JavaScript code can't do that much anyway. Provided the thing you're executing &lt;code&gt;eval()&lt;/code&gt; on has come from a reasonable source, you're fine.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;信頼されていないクライアント側のJavaScriptコードは、とにかくそんなに多くはできません。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行しているものが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適切なソースからのものであれば、問題ありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9d7c43ed517909799508794915cbb170a228986" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;eval()&lt;/code&gt; also has security implications, because you might be executing code (for
example coming from the network) that has been tampered with. 
This is a common antipattern when dealing with a JSON response from an Ajax request. 
In those cases
it&amp;rsquo;s better to use the browsers&amp;rsquo; built-in methods to parse the JSON response to make
sure it&amp;rsquo;s safe and valid. For browsers that don&amp;rsquo;t support &lt;code&gt;JSON.parse()&lt;/code&gt; natively, you can
use a library from JSON.org.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると、改ざんされたコード（たとえば、ネットワークからのコード）を実行する可能性があるため、セキュリティにも影響します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、AjaxリクエストからのJSONレスポンスを処理する場合の一般的なアンチパターンです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのような場合は、ブラウザーの組み込みメソッドを使用してJSON応答を解析し、安全で有効であることを確認することをお勧めします。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネイティブで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サポートしていないブラウザーの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、JSON.orgのライブラリーを使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6b34e4ed2beda88578b9d4ffae571828b3a96fe" translate="yes" xml:space="preserve">
          <source>Using the new Function() constructor is similar to eval() and should be approached
with care. It could be a powerful construct but is often misused. 
If you absolutely must
use &lt;code&gt;eval()&lt;/code&gt;, you can consider using new Function() instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new Function（）コンストラクターの使用はeval（）に似ており、注意してアプローチする必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは強力な構成要素になる可能性がありますが、誤用されることがよくあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どうしても&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する必要がある場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、代わりにnew Function（）の使用を検討できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfd49273a1375934f5c848fad258380f58fc832e" translate="yes" xml:space="preserve">
          <source>Why is using the JavaScript eval function a bad idea</source>
          <target state="translated">なぜJavaScriptのeval関数を使うのが悪いのか</target>
        </trans-unit>
        <trans-unit id="baa0684dab15c8994c1b20edf616d0265609e87c" translate="yes" xml:space="preserve">
          <source>You can see how the code generation was achieved if you're curious &lt;a href=&quot;https://github.com/vincentracine/hyperbars/blob/master/src/hyperbars.js#L131&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vincentracine/hyperbars/blob/master/src/hyperbars.js#L131&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;興味があれば、コード生成がどのように行われたかを確認できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ee2d5d74a937a388d34da3fa1e839789d7bfc1" translate="yes" xml:space="preserve">
          <source>eval isn't always evil. There are times where it's perfectly appropriate.</source>
          <target state="translated">eval は常に邪悪なものではありません。完全に適切な場合もあります。</target>
        </trans-unit>
        <trans-unit id="fe78ef92fe2e03888205d149e55224d05ac1f054" translate="yes" xml:space="preserve">
          <source>eval'd code executes slower (no opportunity to compile/cache eval'd code)</source>
          <target state="translated">eval'd コードの実行が遅い (eval'd コードをコンパイルする機会がない)</target>
        </trans-unit>
        <trans-unit id="2237830e035cd30c9631188a7c1490660cccb742" translate="yes" xml:space="preserve">
          <source>eval() is very powerful and can be used to execute a JS statement or evaluate an expression. But the question isn't about the uses of eval() but lets just say some how the string you running with eval() is affected by a malicious party. At the end you will be running malicious code. With power comes great responsibility. So use it wisely is you are using it. 
 This isn't related much to eval() function but this article has pretty good information:
 &lt;a href=&quot;http://blogs.popart.com/2009/07/javascript-injection-attacks/&quot;&gt;http://blogs.popart.com/2009/07/javascript-injection-attacks/&lt;/a&gt;
If you are looking for the basics of eval() look here: 
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval（）は非常に強力であり、JSステートメントの実行や式の評価に使用できます。しかし、問題はeval（）の使用についてではなく、eval（）で実行している文字列が悪意のあるパーティによってどのように影響を受けるかを簡単に説明します。最後に、悪意のあるコードを実行します。力には大きな責任が伴います。だから賢く使ってください。これはeval（）関数とあまり関係ありませんが、この記事にはかなり良い情報があります：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.popart.com/2009/07/javascript-injection-attacks/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//blogs.popart.com/2009/07/javascript-injection-attacks/&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; eval（）の基本を探している場合こちらを&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧ください&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d118d441bbdad12f46b572679b98788e81ea43d" translate="yes" xml:space="preserve">
          <source>which is more reliable than the dodgy old trick of accessing DOM elements straight out of the document object.)</source>
          <target state="translated">これは、ドキュメントオブジェクトから直接 DOM 要素にアクセスするという古くさいトリックよりも信頼性が高いです)。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
