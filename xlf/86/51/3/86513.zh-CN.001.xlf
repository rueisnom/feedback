<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/86513">
    <body>
      <group id="86513">
        <trans-unit id="e8da74d117732daae1ec6eced513ab4442893f06" translate="yes" xml:space="preserve">
          <source>(But then, someone who /really/ knew what they were doing would say:</source>
          <target state="translated">(但后来,真正知道自己在做什么的人就会说。</target>
        </trans-unit>
        <trans-unit id="c854ac93991da55521bfe15bb671f855074e82c7" translate="yes" xml:space="preserve">
          <source>*As long as your server endpoints have the correct validation &amp;amp; sanitisation of user supplied values, it should not matter what gets parsed and eval'd in your client side javascript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*只要您的服务器端点具有对用户提供的值的正确验证和清除，则在客户端javascript中解析和评估的内容无关紧要。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1216171f6b14f8050f363786c3b695062989583e" translate="yes" xml:space="preserve">
          <source>...which is much easier to read as well as less potentially buggy.</source>
          <target state="translated">............这样更容易读,也更不容易出错。</target>
        </trans-unit>
        <trans-unit id="a4c4530f99dceb59d9b5f2c1b1e4b43d1913e4d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Debugging&lt;/strong&gt; can be more challenging
(no line numbers, etc.)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调试&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能会更具挑战性（没有行号等）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68827a63b5078f9a50c23ab76de31607123511a8" translate="yes" xml:space="preserve">
          <source>All modern browsers have a developer console where you can execute arbitrary javascript anyway and any semi-smart developer can look at your JS source and put whatever bits of it they need to into the dev console to do what they wish.</source>
          <target state="translated">所有的现代浏览器都有一个开发者控制台,你可以在这里执行任意的javascript,任何半智能的开发者都可以查看你的JS源码,然后把他们需要的任何部分放到dev控制台中去做他们想做的事情。</target>
        </trans-unit>
        <trans-unit id="efc7386ceb8449e138c1ffecfb668b89e72781e3" translate="yes" xml:space="preserve">
          <source>Along with the rest of the answers, I don't think eval statements can have advanced minimization.</source>
          <target state="translated">连同其余的答案,我认为eval语句不可能有高级最小化。</target>
        </trans-unit>
        <trans-unit id="04f073718f97b7a0620837423dbd160f9efde52e" translate="yes" xml:space="preserve">
          <source>Another way to prevent automatic globals is to wrap the
&lt;code&gt;eval()&lt;/code&gt; call into an immediate function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;防止自动全局变量的另一种方法是将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包装 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到立即函数中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29a3e2a33db16ab92bf0e28b6d2254865dd52c91" translate="yes" xml:space="preserve">
          <source>Basically from</source>
          <target state="translated">基本上从</target>
        </trans-unit>
        <trans-unit id="68f751cf48a145fd656a026a713a49fe39869d0e" translate="yes" xml:space="preserve">
          <source>Behind the scenes, JavaScript still has to evaluate and execute
the string you pass as programming code:</source>
          <target state="translated">在幕后,JavaScript仍然需要对你传递的字符串作为编程代码进行评估和执行。</target>
        </trans-unit>
        <trans-unit id="6de8012b0b5762ab8293b8a7887b69c33081f049" translate="yes" xml:space="preserve">
          <source>Besides the possible security issues if you are executing user-submitted code, most of the time there's a better way that doesn't involve re-parsing the code every time it's executed. Anonymous functions or object properties can replace most uses of eval and are much safer and faster.</source>
          <target state="translated">除了执行用户提交的代码可能存在安全问题外,大多数情况下,还有一个更好的方法,那就是不需要每次执行代码时都要重新分配代码。匿名函数或对象属性可以代替大多数使用eval的方法,而且更安全、更快捷。</target>
        </trans-unit>
        <trans-unit id="85c8f9654ce736912618edd0981f92704b35e280" translate="yes" xml:space="preserve">
          <source>But if the Engine finds an eval(..) in the code, it essentially has to assume that all its awareness of identifier location may be invalid, because it cannot know at lexing time exactly what code you may pass to eval(..) to modify the lexical scope, or the contents of the object you may pass to with to create a new lexical scope to be consulted.</source>
          <target state="translated">但是如果引擎在代码中发现了eval(...),它本质上就不得不假设它对标识符位置的所有意识可能都是无效的,因为它无法在词法时准确地知道你可以通过eval(...)来修改词法范围的代码,或者你可以通过与对象的内容来创建一个新的词法范围来查询。</target>
        </trans-unit>
        <trans-unit id="708ad811ceaadce04eda4ed9426ac29d31be3a58" translate="yes" xml:space="preserve">
          <source>EDIT:  by the way, I wouldn't suggest (for all the security reasons pointed out heretofore) that you base you object names on user input.  I can't imagine any good reason you'd want to do that though.  Still, thought I'd point it out that it wouldn't be a good idea :)</source>
          <target state="translated">EDIT:顺便说一下,我不建议你把对象名称建立在用户输入的基础上(出于安全原因)。我想不出有什么好的理由让你这么做。不过,我想我还是要指出这不是一个好主意:)</target>
        </trans-unit>
        <trans-unit id="e912f4005bab4ffe00de9bda5fe37444d9215a0d" translate="yes" xml:space="preserve">
          <source>Edit: As @Jeff Walden points out in comments, #3 is less true today than it was in 2008. However, while some caching of compiled scripts may happen this will only be limited to scripts that are eval'd repeated with no modification. A more likely scenario is that you are eval'ing scripts that have undergone slight modification each time and as such could not be cached. Let's just say that SOME eval'd code executes more slowly.</source>
          <target state="translated">编辑:正如 @Jeff Walden 在评论中所指出的,#3 在今天的情况不如 2008 年时那么真实。然而,虽然编译后的脚本可能会出现一些缓存,但这只限于那些没有修改就重复评估的脚本。更有可能的情况是,你所使用的脚本每次都经过了轻微的修改,因此不能被缓存。假设有些eval'd代码执行起来比较慢。</target>
        </trans-unit>
        <trans-unit id="84841ccacb20efbdee1996b961b9cb5573918289" translate="yes" xml:space="preserve">
          <source>Garbage collection</source>
          <target state="translated">垃圾收集</target>
        </trans-unit>
        <trans-unit id="b6d7540d21081b0823e787c495d22c2e6a29acd1" translate="yes" xml:space="preserve">
          <source>Here's a script to demo the problem</source>
          <target state="translated">这里有一个脚本来演示这个问题</target>
        </trans-unit>
        <trans-unit id="75feee4bba342c7d1a150d617df26a5b84f7c599" translate="yes" xml:space="preserve">
          <source>However, eval is currently and historically massively over-used by people who don't know what they're doing. That includes people writing JavaScript tutorials, unfortunately, and in some cases this can indeed have security consequences - or, more often, simple bugs. So the more we can do to throw a question mark over eval, the better. Any time you use eval you need to sanity-check what you're doing, because chances are you could be doing it a better, safer, cleaner way.</source>
          <target state="translated">然而,eval目前和历史上都被一些不知道自己在做什么的人过度使用。不幸的是,这也包括编写JavaScript教程的人,在某些情况下,这确实会造成安全后果--或者说,更多的时候是简单的bug。所以,我们越是能在eval上打上一个问号就越好。当你使用eval的时候,你需要对你正在做的事情进行理智检查,因为你可能会用更好、更安全、更干净的方式来做。</target>
        </trans-unit>
        <trans-unit id="b0cc8a90cfd59a17fbc14979055df165cbd77f75" translate="yes" xml:space="preserve">
          <source>However, for all the reasons mentioned above, you shouldn't use it for your own code, where you have complete control - it's just not necessary, and better-off relegated to the 'tricky JavaScript hacks' shelf.</source>
          <target state="translated">然而,由于上述的所有原因,你不应该把它用于你自己的代码,在你有完全的控制权的地方--它只是没有必要,最好是放在 &quot;棘手的JavaScript黑客 &quot;的架子上。</target>
        </trans-unit>
        <trans-unit id="0d2efd49cfff0a15360537f164259f4616c0e72a" translate="yes" xml:space="preserve">
          <source>I believe it's because it can execute any JavaScript function from a string. Using it makes it easier for people to inject rogue code into the application.</source>
          <target state="translated">我相信这是因为它可以从一个字符串中执行任何JavaScript函数。使用它可以让人们更容易在应用程序中注入流氓代码。</target>
        </trans-unit>
        <trans-unit id="edba6850417672557191720478e91372debe060d" translate="yes" xml:space="preserve">
          <source>I know this discussion is old, but I really like &lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=6EJ801el-I8#t=1729s&quot;&gt;this&lt;/a&gt; approach by Google and wanted to share that feeling with others ;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我知道这个讨论很古老，但是我真的很喜欢&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Google的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=6EJ801el-I8#t=1729s&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法，并希望与他人分享这种感觉；）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc70f4cb34b43ea51c23addc083f3c8caad5fc21" translate="yes" xml:space="preserve">
          <source>I won't attempt to refute anything said heretofore, but i will offer this use of eval() that (as far as I know) can't be done any other way.  There's probably other ways to code this, and probably ways to optimize it, but this is done longhand and without any bells and whistles for clarity sake to illustrate a use of eval that really doesn't have any other alternatives.  That is: dynamical (or more accurately) programmically-created object names (as opposed to values).</source>
          <target state="translated">我不会试图反驳前面说过的任何东西,但我要提供这样一个eval()的使用方法(据我所知),这是其他方法无法做到的。也许还有其他的方法可以编码,也可能有优化的方法,但为了清晰起见,我在此不做任何说明,只是为了说明eval()的使用方法,没有任何其他的选择。那就是:动态的(或者更准确的说是)由程序创建的对象名称(相对于值)。</target>
        </trans-unit>
        <trans-unit id="44f1a7e0acb79a925f0a5eb2f48fbce6d2a201ff" translate="yes" xml:space="preserve">
          <source>I would go as far as to say that it doesn't really matter if you use &lt;code&gt;eval()&lt;/code&gt; in javascript which is run in browsers.*(caveat)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我要说的是，如果您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在浏览器中运行的javascript中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并没有关系，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*（caveat）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcf7355fa794212df970cc7d5b845c63c7a95cb8" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m not saying you should go run out and start using eval()
  everywhere. In fact, there are very few good use cases for running
  eval() at all. There are definitely concerns with code clarity,
  debugability, and certainly performance that should not be overlooked.
  But you shouldn&amp;rsquo;t be afraid to use it when you have a case where
  eval() makes sense. Try not using it first, but don&amp;rsquo;t let anyone scare
  you into thinking your code is more fragile or less secure when eval()
  is used appropriately.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我并不是说您应该精疲力尽，并开始在任何地方使用eval（）。实际上，运行eval（）的好用例很少。绝对存在代码清晰度，可调试性和性能方面的问题，这些问题不容忽视。但是当您遇到eval（）有意义的情况时，就不用担心使用它。尝试先不要使用它，但是当适当使用eval（）时，不要让任何人吓到您认为您的代码更脆弱或更不安全。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b07728bbbfd376d8b79bdf7dfdada9b7a5a3a8ff" translate="yes" xml:space="preserve">
          <source>If the authors of the kind of code above had a clue about the basics of how JavaScript objects work, they'd have realised that square brackets can be used instead of literal dot-names, obviating the need for eval:</source>
          <target state="translated">如果上面这类代码的作者对JavaScript对象的基本工作原理有所了解,他们就会意识到,方括号可以用来代替字面的点名,从而省去了eval的需求。</target>
        </trans-unit>
        <trans-unit id="7a9210275eab4c37ef5ac1d41a84323394920187" translate="yes" xml:space="preserve">
          <source>If you spot the use of eval() in your code, remember the mantra &amp;ldquo;eval() is evil.&amp;rdquo;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果在代码中发现使用eval（），请记住&amp;ldquo; eval（）是邪恶的咒语&amp;rdquo;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1e6c44d75d7af9e8969d55a4397d71b07326d5f" translate="yes" xml:space="preserve">
          <source>If you want the user to input some logical functions and evaluate for AND the OR then the JavaScript eval function is perfect. I can accept two strings and &lt;code&gt;eval(uate) string1 === string2&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您希望用户输入一些逻辑函数并求与与或，则JavaScript eval函数非常理想。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我可以接受两个字符串和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval(uate) string1 === string2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3031dedc7540794a7092138701cb532acae72ab" translate="yes" xml:space="preserve">
          <source>If you were to ask if it's suitable to use &lt;code&gt;eval()&lt;/code&gt; in PHP however, the answer is &lt;strong&gt;NO&lt;/strong&gt;, unless you &lt;strong&gt;whitelist&lt;/strong&gt; any values which may be passed to your eval statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，如果您询问&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在PHP中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否合适&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，答案是&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;否&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，除非您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将可能传递给eval语句的所有值&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;列入白名单&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c48a549b1d6f103cd7da2f5411479e65b3492ed4" translate="yes" xml:space="preserve">
          <source>If your application is using &lt;code&gt;eval()&lt;/code&gt; to create an object from some JSON which has come back from an &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt; to your own site, created by your trusted server-side code, it's probably not a problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您的应用程序正在使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从某个JSON创建对象，而该JSON从&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XMLHttpRequest&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返回&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到您自己的站点（由受信任的服务器端代码创建），则可能不是问题。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c8a85d8fc546b1eb106d07c70fa24db9d6bac6f" translate="yes" xml:space="preserve">
          <source>Improper use of &lt;strong&gt;eval&lt;/strong&gt; opens up your
code for injection attacks</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;错误使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval会&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;打开代码以进行注入攻击&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14d6fe3adbcdf0f5b6ca6fb7ea8cba66668180d5" translate="yes" xml:space="preserve">
          <source>In other words, in the pessimistic sense, most of those optimizations it would make are pointless if eval(..) is present, so it simply doesn't perform the optimizations at all.</source>
          <target state="translated">换句话说,从悲观的意义上说,如果eval(...)存在的话,它所做的那些优化大部分都是毫无意义的,所以它根本就没有执行优化。</target>
        </trans-unit>
        <trans-unit id="2bf3bffa2873d5b6030df088077ed6930916a446" translate="yes" xml:space="preserve">
          <source>It greatly reduces your level of confidence about security.</source>
          <target state="translated">这大大降低了你对安全的信心程度。</target>
        </trans-unit>
        <trans-unit id="6f03d1d2d23aa04e158c4ae98f058def0948b3b6" translate="yes" xml:space="preserve">
          <source>It is a possible security risk, it has a different scope of execution, and is quite inefficient, as it creates an entirely new scripting environment for the execution of the code. See here for some more info: &lt;a href=&quot;http://userjs.org/help/tutorials/efficient-code#evalevil&quot;&gt;eval&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这可能会带来安全风险，执行范围不同，效率很低，因为它会为代码执行创建全新的脚本环境。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关更多信息，请参见此处：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://userjs.org/help/tutorials/efficient-code#evalevil&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8961c0347a3eacf41d26a8b6650e23806802192" translate="yes" xml:space="preserve">
          <source>It is quite useful, though, and used with moderation can add a lot of good functionality.</source>
          <target state="translated">不过它还是挺好用的,配合节制使用可以增加很多好的功能。</target>
        </trans-unit>
        <trans-unit id="6dfa9b7f1d8c876ae6c2dd750e25f385454bcfcd" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also important to remember that passing strings to &lt;code&gt;setInterval()&lt;/code&gt;, &lt;code&gt;setTimeout()&lt;/code&gt;,
and the &lt;code&gt;Function()&lt;/code&gt; constructor is, for the most part, similar to using &lt;code&gt;eval()&lt;/code&gt; and therefore
should be avoided.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样重要的是要记住，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在大多数情况下，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将字符串传递给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类似于使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此应避免使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8c3cc80491fbfb8cbd6e3ac6b00259872abd652" translate="yes" xml:space="preserve">
          <source>It's generally only an issue if you're passing eval user input.</source>
          <target state="translated">一般来说,只有当你通过评估用户输入时才会有问题。</target>
        </trans-unit>
        <trans-unit id="8c42fa01d170f0ba1c3ba79193d4093073ef1646" translate="yes" xml:space="preserve">
          <source>It's not always a bad idea. Take for example, code generation. I recently wrote a library called &lt;a href=&quot;https://github.com/vincentracine/hyperbars&quot;&gt;Hyperbars&lt;/a&gt; which bridges the gap between &lt;a href=&quot;https://github.com/Matt-Esch/virtual-dom&quot;&gt;virtual-dom&lt;/a&gt; and &lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;handlebars&lt;/a&gt;. It does this by parsing a handlebars template and converting it to &lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;hyperscript&lt;/a&gt; which is subsequently used by virtual-dom. The hyperscript is generated as a string first and before returning it, &lt;code&gt;eval()&lt;/code&gt; it to turn it into executable code. I have found &lt;code&gt;eval()&lt;/code&gt; in this particular situation the exact opposite of evil.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这并不总是一个坏主意。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以代码生成为例。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我最近写了一个名为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vincentracine/hyperbars&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hyperbars&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的库&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该库&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;弥合了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Matt-Esch/virtual-dom&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Virtual-dom&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;handlebars&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间的鸿沟&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它通过解析车把模板并将其转换为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;超脚本&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（随后由虚拟域使用）来实现。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;超级脚本首先作为字符串生成，然后在返回之前，通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将其转换为可执行代码。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我发现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种特殊情况下&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与邪恶完全相反。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31da5fad3f0e5a2f90cae8dbe47b9ff1d4257b20" translate="yes" xml:space="preserve">
          <source>It's not necessarily that bad provided you know what context you're using it in.</source>
          <target state="translated">只要你知道你在什么语境下使用它,也不一定是坏事。</target>
        </trans-unit>
        <trans-unit id="6fdf367987c4f683a398eb84746d6c7cffa8f46a" translate="yes" xml:space="preserve">
          <source>Mainly, it's a lot harder to maintain and debug. It's like a &lt;code&gt;goto&lt;/code&gt;. You can use it, but it makes it harder to find problems and harder on the people who may need to make changes later.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主要是，它很难维护和调试。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;就像&lt;/font&gt;&lt;/font&gt; &lt;code&gt;goto&lt;/code&gt; 一样&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用它，但是它使发现问题变得更加困难，并且使以后可能需要进行更改的人员变得更加困难。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6816994f89090ba2d1e15d75329ea4bd59ca4afc" translate="yes" xml:space="preserve">
          <source>One thing to keep in mind is that you can often use eval() to execute code in an otherwise restricted environment - social networking sites that block specific JavaScript functions can sometimes be fooled by breaking them up in an eval block -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286c00910c6d09f3a9fbe2684368745980787a14" translate="yes" xml:space="preserve">
          <source>Passing user input to eval() is a security risk, but also each invocation of eval() creates a new instance of the JavaScript interpreter. This can be a resource hog.</source>
          <target state="translated">将用户输入传递给eval()是一个安全风险,而且每次调用eval()都会创建一个新的JavaScript解释器实例。这可能是一个资源占用者。</target>
        </trans-unit>
        <trans-unit id="df4727fbdcb3341721f9c555bf1cbb200fd36b28" translate="yes" xml:space="preserve">
          <source>Performance: until the code to be executed is unknown, it cannot be optimized.  (about javascript and performance, certainly &lt;a href=&quot;http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html&quot;&gt;Steve Yegge's presentation&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;性能：除非要执行的代码未知，否则无法对其进行优化。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（关于javascript和性能，当然是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Steve Yegge的介绍&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64aa4d557cc62d15e8de600185aa21dbf6018da0" translate="yes" xml:space="preserve">
          <source>Reference :</source>
          <target state="translated">参考资料:</target>
        </trans-unit>
        <trans-unit id="5e60db53c154faf8e7afbee52db6ba5fc5c47e87" translate="yes" xml:space="preserve">
          <source>Security (but as long as you generate the string to be evaluated yourself, this might be a non-issue)</source>
          <target state="translated">安全性(但只要你自己生成要评估的字符串,这可能不是问题)</target>
        </trans-unit>
        <trans-unit id="14685695470c1f8b261fc20c5c317f1a512aa650" translate="yes" xml:space="preserve">
          <source>So if you're looking to run some JavaScript code where it might not otherwise be allowed (&lt;a href=&quot;http://en.wikipedia.org/wiki/Myspace&quot;&gt;Myspace&lt;/a&gt;, I'm looking at you...) then eval() can be a useful trick.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，如果您正在运行某些可能不允许这样做的JavaScript代码（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Myspace&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Myspace&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我正在看着您...），那么eval（）可能是一个有用的技巧。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29ca7e51eaa8f10f1aa783d05d0cdd8080017091" translate="yes" xml:space="preserve">
          <source>Something as simple as the above code causes a small amount of memory to be store until the app dies. 
This is worse when the evaled script is a giant function, and called on interval.</source>
          <target state="translated">像上面的代码这么简单的东西会导致少量的内存被存储,直到app死掉。当evaled脚本是一个巨大的函数,并在间隔时调用时,情况就更糟糕了。</target>
        </trans-unit>
        <trans-unit id="41399e76633f1ba3e54bb4e075d2084afd4fcd9f" translate="yes" xml:space="preserve">
          <source>The JavaScript Engine has a number of performance optimizations that it performs during the compilation phase. Some of these boil down to being able to essentially statically analyze the code as it lexes, and pre-determine where all the variable and function declarations are, so that it takes less effort to resolve identifiers during execution.</source>
          <target state="translated">JavaScript引擎在编译阶段有许多性能优化。其中的一些优化可以归结为能够在代码的词库中对代码进行静态分析,并预先确定所有的变量和函数声明的位置,这样在执行过程中就可以减少解析标识符的工作量。</target>
        </trans-unit>
        <trans-unit id="148e0c7f81d9a3698c5049c257860541935ee71e" translate="yes" xml:space="preserve">
          <source>The browsers garbage collection has no idea if the code that's eval'ed can be removed from memory so it just keeps it stored until the page is reloaded. 
Not too bad if your users are only on your page shortly, but it can be a problem for webapp's.</source>
          <target state="translated">浏览器的垃圾收集器不知道评估过的代码是否可以从内存中删除,所以它只是将其存储起来,直到页面被重新加载。如果你的用户只在你的页面上不久,这并不是太坏,但对于webapp来说,这可能是个问题。</target>
        </trans-unit>
        <trans-unit id="24be6ca54f3f04a72a882c99dcb539c99444e81b" translate="yes" xml:space="preserve">
          <source>The eval function is a powerful and easy way to dynamically generate code, so what are the caveats?</source>
          <target state="translated">评价函数是一种强大而简单的动态生成代码的方法,那么有哪些注意事项呢?</target>
        </trans-unit>
        <trans-unit id="68865d1d8d64a6c8ba9da456612b2787bc0b5b95" translate="yes" xml:space="preserve">
          <source>The other thing is that the better You get the more You try to understand and finally You just don't believe that something is good or bad just because someone said so :) 
This is a very inspirational &lt;a href=&quot;http://www.youtube.com/watch?v=MFtijdklZDo&quot;&gt;video&lt;/a&gt; that helped me to think more by myself :) GOOD PRACTICES are good, but don't use them mindelessly :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一件事是，您越了解越多，您就会尝试去理解，最后您只是不相信某事是好是坏，只是因为有人这么说:)这是一部非常鼓舞人心的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=MFtijdklZDo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;视频&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，帮助我独自思考了更多:)好的做法很好，但是请不要轻率地使用它们:)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d16f9ac85bd63b35f45508e21cf50ad7aeb3cb1f" translate="yes" xml:space="preserve">
          <source>The performance of &lt;code&gt;eval()&lt;/code&gt; isn't an issue in a situation like this because you only need to interpret the generated string once and then reuse the executable output many times over.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的性能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是问题，因为您只需要解释一次生成的字符串，然后多次重复使用可执行输出即可。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7633212c2dd3cc676f1ba1372322ebac779d750f" translate="yes" xml:space="preserve">
          <source>There is a small potential
benefit because the code evaluated in new Function() will be running in a local function
scope, so any variables defined with var in the code being evaluated will not become
globals automatically.</source>
          <target state="translated">有一个小的潜在好处,因为在new Function()中评价的代码将在本地函数作用域中运行,所以任何在被评价的代码中定义了var的变量都不会自动成为globals。</target>
        </trans-unit>
        <trans-unit id="4584f4b326d529ce961e584e35dd41b651162eb7" translate="yes" xml:space="preserve">
          <source>This
function takes an arbitrary string and executes it as JavaScript code. When the code in
question is known beforehand (not determined at runtime), there&amp;rsquo;s no reason to use
eval(). 
If the code is dynamically generated at runtime, there&amp;rsquo;s often a better way to
achieve the goal without eval(). 
For example, just using square bracket notation to
access dynamic properties is better and simpler:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此函数采用任意字符串并将其作为JavaScript代码执行。当相关代码事先已知（在运行时未确定）时，没有理由使用eval（）。如果代码是在运行时动态生成的，那么通常无需使用eval（）即可实现更好的目标。例如，仅使用方括号符号来访问动态属性会更好，更简单：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ccfc53cb017769dd7ae987a142efdb9302c67cd" translate="yes" xml:space="preserve">
          <source>This explains it all.</source>
          <target state="translated">这说明了一切。</target>
        </trans-unit>
        <trans-unit id="ee72c7e2a527cacf1dc21f1420f881a587b5bf1d" translate="yes" xml:space="preserve">
          <source>This is one of good articles talking about eval and how it is not an evil:
&lt;a href=&quot;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&quot;&gt;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一篇有关eval以及它不是邪恶的好文章：&lt;/font&gt;&lt;a href=&quot;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="206747b449bd6d921232d550ccc476c2741e014c" translate="yes" xml:space="preserve">
          <source>This may become more of an issue as the next generation of browsers come out with some flavor of a JavaScript compiler. Code executed via Eval may not perform as well as the rest of your JavaScript against these newer browsers. Someone should do some profiling.</source>
          <target state="translated">随着下一代的浏览器推出了一些JavaScript编译器,这可能会成为一个更多的问题。通过Eval执行的代码可能无法像其他的JavaScript一样在这些新的浏览器中表现得很好。应该有人去做一些分析。</target>
        </trans-unit>
        <trans-unit id="f0f8ad23e65b95f25bbdd8df86f29ae3982527e0" translate="yes" xml:space="preserve">
          <source>To give an all-too-typical example, to set the colour of an element with an id stored in the variable 'potato':</source>
          <target state="translated">举一个非常典型的例子,要设置一个元素的颜色,这个元素的id存储在变量'土豆'中。</target>
        </trans-unit>
        <trans-unit id="f4c65e507b7f93297ee2268d7252cbd7eb37d296" translate="yes" xml:space="preserve">
          <source>To this</source>
          <target state="translated">对此,</target>
        </trans-unit>
        <trans-unit id="b34c39225645dafeee78e3812eddc5e31d4bb53b" translate="yes" xml:space="preserve">
          <source>Two points come to mind:</source>
          <target state="translated">这时我想到了两点。</target>
        </trans-unit>
        <trans-unit id="d9b8f5845abccd0b52ea08432402c9e42002ef09" translate="yes" xml:space="preserve">
          <source>Unless you are 100% sure that the code being evaluated is from a trusted source (usually your own application) then it's a surefire way of exposing your system to a cross-site scripting attack.</source>
          <target state="translated">除非你100%确定被评估的代码是来自于一个受信任的源头(通常是你自己的应用程序),否则,这将使你的系统受到跨站脚本攻击。</target>
        </trans-unit>
        <trans-unit id="e3090c0855982eee09e2769634d70840bc3e123f" translate="yes" xml:space="preserve">
          <source>Unless you let eval() a dynamic content (through cgi or input), it is as safe and solid as all other JavaScript in your page.</source>
          <target state="translated">除非你让eval()成为一个动态内容(通过cgi或输入),否则它和你的页面中所有其他的JavaScript一样安全和稳固。</target>
        </trans-unit>
        <trans-unit id="828ef76c49e81348c8216226d09ee2f8044a35d7" translate="yes" xml:space="preserve">
          <source>Untrusted client-side JavaScript code can't do that much anyway. Provided the thing you're executing &lt;code&gt;eval()&lt;/code&gt; on has come from a reasonable source, you're fine.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无论如何，不​​受信任的客户端JavaScript代码不能做太多事情。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只要您执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的东西&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来自合理的来源，就可以了。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9d7c43ed517909799508794915cbb170a228986" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;eval()&lt;/code&gt; also has security implications, because you might be executing code (for
example coming from the network) that has been tampered with. 
This is a common antipattern when dealing with a JSON response from an Ajax request. 
In those cases
it&amp;rsquo;s better to use the browsers&amp;rsquo; built-in methods to parse the JSON response to make
sure it&amp;rsquo;s safe and valid. For browsers that don&amp;rsquo;t support &lt;code&gt;JSON.parse()&lt;/code&gt; natively, you can
use a library from JSON.org.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也有安全隐患，因为您可能正在执行被篡改的代码（例如，来自网络的代码）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;处理来自Ajax请求的JSON响应时，这是常见的反模式。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，最好使用浏览器的内置方法来解析JSON响应，以确保其安全有效。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本机&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不支持&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浏览器，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用JSON.org中的库。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6b34e4ed2beda88578b9d4ffae571828b3a96fe" translate="yes" xml:space="preserve">
          <source>Using the new Function() constructor is similar to eval() and should be approached
with care. It could be a powerful construct but is often misused. 
If you absolutely must
use &lt;code&gt;eval()&lt;/code&gt;, you can consider using new Function() instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用新的Function（）构造函数与eval（）相似，应谨慎使用。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它可能是一个强大的结构，但经常被滥用。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果绝对必须使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则可以考虑使用新的Function（）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfd49273a1375934f5c848fad258380f58fc832e" translate="yes" xml:space="preserve">
          <source>Why is using the JavaScript eval function a bad idea</source>
          <target state="translated">为什么使用JavaScript评估函数是个坏主意?</target>
        </trans-unit>
        <trans-unit id="baa0684dab15c8994c1b20edf616d0265609e87c" translate="yes" xml:space="preserve">
          <source>You can see how the code generation was achieved if you're curious &lt;a href=&quot;https://github.com/vincentracine/hyperbars/blob/master/src/hyperbars.js#L131&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;你可以看到，如果你好奇的代码生成是如何实现的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vincentracine/hyperbars/blob/master/src/hyperbars.js#L131&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ee2d5d74a937a388d34da3fa1e839789d7bfc1" translate="yes" xml:space="preserve">
          <source>eval isn't always evil. There are times where it's perfectly appropriate.</source>
          <target state="translated">评估并不总是邪恶的。有的时候,它是完全合适的。</target>
        </trans-unit>
        <trans-unit id="fe78ef92fe2e03888205d149e55224d05ac1f054" translate="yes" xml:space="preserve">
          <source>eval'd code executes slower (no opportunity to compile/cache eval'd code)</source>
          <target state="translated">评估的代码执行速度较慢(没有机会编译缓存评估的代码</target>
        </trans-unit>
        <trans-unit id="2237830e035cd30c9631188a7c1490660cccb742" translate="yes" xml:space="preserve">
          <source>eval() is very powerful and can be used to execute a JS statement or evaluate an expression. But the question isn't about the uses of eval() but lets just say some how the string you running with eval() is affected by a malicious party. At the end you will be running malicious code. With power comes great responsibility. So use it wisely is you are using it. 
 This isn't related much to eval() function but this article has pretty good information:
 &lt;a href=&quot;http://blogs.popart.com/2009/07/javascript-injection-attacks/&quot;&gt;http://blogs.popart.com/2009/07/javascript-injection-attacks/&lt;/a&gt;
If you are looking for the basics of eval() look here: 
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval（）非常强大，可用于执行JS语句或评估表达式。但是问题不关乎eval（）的使用，而只是说一些您用eval（）运行的字符串如何受到恶意方的影响。最后，您将运行恶意代码。权力伴随着巨大的责任。因此，明智地使用它就是您正在使用它。这与eval（）函数关系不大，但是本文提供了相当不错的信息：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.popart.com/2009/07/javascript-injection-attacks/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//blogs.popart.com/2009/07/javascript-injection-attacks/&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 如果您正在寻找eval（）的基础知识在这里查看：&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d118d441bbdad12f46b572679b98788e81ea43d" translate="yes" xml:space="preserve">
          <source>which is more reliable than the dodgy old trick of accessing DOM elements straight out of the document object.)</source>
          <target state="translated">这比从文档对象中直接访问DOM元素更可靠。)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
