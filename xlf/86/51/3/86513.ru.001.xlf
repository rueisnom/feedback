<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/86513">
    <body>
      <group id="86513">
        <trans-unit id="e8da74d117732daae1ec6eced513ab4442893f06" translate="yes" xml:space="preserve">
          <source>(But then, someone who /really/ knew what they were doing would say:</source>
          <target state="translated">(Но тогда кто-то,кто действительно знал,что делает,скажет:</target>
        </trans-unit>
        <trans-unit id="c854ac93991da55521bfe15bb671f855074e82c7" translate="yes" xml:space="preserve">
          <source>*As long as your server endpoints have the correct validation &amp;amp; sanitisation of user supplied values, it should not matter what gets parsed and eval'd in your client side javascript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* Пока ваши конечные точки сервера имеют правильную проверку и санацию предоставленных пользователем значений, не должно иметь значения, что анализируется и обрабатывается в вашем клиентском JavaScript.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1216171f6b14f8050f363786c3b695062989583e" translate="yes" xml:space="preserve">
          <source>...which is much easier to read as well as less potentially buggy.</source>
          <target state="translated">...что намного проще для чтения,а также менее потенциально багги.</target>
        </trans-unit>
        <trans-unit id="a4c4530f99dceb59d9b5f2c1b1e4b43d1913e4d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Debugging&lt;/strong&gt; can be more challenging
(no line numbers, etc.)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Отладка&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может быть более сложной (без номеров строк и т. Д.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68827a63b5078f9a50c23ab76de31607123511a8" translate="yes" xml:space="preserve">
          <source>All modern browsers have a developer console where you can execute arbitrary javascript anyway and any semi-smart developer can look at your JS source and put whatever bits of it they need to into the dev console to do what they wish.</source>
          <target state="translated">Во всех современных браузерах есть консоль разработчика,где вы можете в любом случае выполнить произвольный javascript,а любой полу-умный разработчик может посмотреть на ваш JS источник и поместить все необходимые ему биты в консоль разработчика,чтобы сделать то,что он хочет.</target>
        </trans-unit>
        <trans-unit id="efc7386ceb8449e138c1ffecfb668b89e72781e3" translate="yes" xml:space="preserve">
          <source>Along with the rest of the answers, I don't think eval statements can have advanced minimization.</source>
          <target state="translated">Наряду с остальными ответами,я не думаю,что оценочные заявления могут иметь продвинутую минимизацию.</target>
        </trans-unit>
        <trans-unit id="04f073718f97b7a0620837423dbd160f9efde52e" translate="yes" xml:space="preserve">
          <source>Another way to prevent automatic globals is to wrap the
&lt;code&gt;eval()&lt;/code&gt; call into an immediate function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другой способ предотвратить автоматические глобальные переменные - это &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;превратить вызов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в непосредственную функцию.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29a3e2a33db16ab92bf0e28b6d2254865dd52c91" translate="yes" xml:space="preserve">
          <source>Basically from</source>
          <target state="translated">В основном из</target>
        </trans-unit>
        <trans-unit id="68f751cf48a145fd656a026a713a49fe39869d0e" translate="yes" xml:space="preserve">
          <source>Behind the scenes, JavaScript still has to evaluate and execute
the string you pass as programming code:</source>
          <target state="translated">За кулисами JavaScript все еще должен оценить и выполнить строку,которую вы передаете как программный код:</target>
        </trans-unit>
        <trans-unit id="6de8012b0b5762ab8293b8a7887b69c33081f049" translate="yes" xml:space="preserve">
          <source>Besides the possible security issues if you are executing user-submitted code, most of the time there's a better way that doesn't involve re-parsing the code every time it's executed. Anonymous functions or object properties can replace most uses of eval and are much safer and faster.</source>
          <target state="translated">Помимо возможных проблем с безопасностью,если вы выполняете код,предоставленный пользователем,в большинстве случаев существует лучший способ,не связанный с повторной парсингом кода каждый раз,когда он выполняется.Анонимные функции или свойства объектов могут заменить большинство применений eval и являются гораздо более безопасными и быстрыми.</target>
        </trans-unit>
        <trans-unit id="85c8f9654ce736912618edd0981f92704b35e280" translate="yes" xml:space="preserve">
          <source>But if the Engine finds an eval(..) in the code, it essentially has to assume that all its awareness of identifier location may be invalid, because it cannot know at lexing time exactly what code you may pass to eval(..) to modify the lexical scope, or the contents of the object you may pass to with to create a new lexical scope to be consulted.</source>
          <target state="translated">Но если движок находит eval(...)в коде,то он,по сути,должен предполагать,что вся его осведомленность о местоположении идентификатора может быть недействительной,так как он не может точно знать во время лексирования,какой код вы можете передать eval(...)для модификации лексической области видимости,или содержимое объекта,к которому вы можете передать для создания новой лексической области видимости,с которой вы будете обращаться за консультацией.</target>
        </trans-unit>
        <trans-unit id="708ad811ceaadce04eda4ed9426ac29d31be3a58" translate="yes" xml:space="preserve">
          <source>EDIT:  by the way, I wouldn't suggest (for all the security reasons pointed out heretofore) that you base you object names on user input.  I can't imagine any good reason you'd want to do that though.  Still, thought I'd point it out that it wouldn't be a good idea :)</source>
          <target state="translated">EDIT:кстати,я бы не предложил (по всем указанным здесь причинам безопасности),чтобы вы основывали имена объектов на пользовательском вводе.Однако,я не могу представить,чтобы вы захотели сделать это по каким-то веским причинам.Тем не менее,я решил указать на то,что это было бы не очень хорошей идеей :)</target>
        </trans-unit>
        <trans-unit id="e912f4005bab4ffe00de9bda5fe37444d9215a0d" translate="yes" xml:space="preserve">
          <source>Edit: As @Jeff Walden points out in comments, #3 is less true today than it was in 2008. However, while some caching of compiled scripts may happen this will only be limited to scripts that are eval'd repeated with no modification. A more likely scenario is that you are eval'ing scripts that have undergone slight modification each time and as such could not be cached. Let's just say that SOME eval'd code executes more slowly.</source>
          <target state="translated">Правка:Как указывает в комментариях @Jeff Walden,#3 сегодня менее правдиво,чем в 2008 году.Однако,хотя некоторые кэширование скомпилированных сценариев может произойти,это будет ограничено только теми сценариями,которые eval's повторил без изменений.Более вероятный сценарий заключается в том,что вы являетесь оценочными сценариями,которые каждый раз подвергались небольшим изменениям и поэтому не могли быть кэшированы.Скажем так,код SOME eval'd выполняется медленнее.</target>
        </trans-unit>
        <trans-unit id="84841ccacb20efbdee1996b961b9cb5573918289" translate="yes" xml:space="preserve">
          <source>Garbage collection</source>
          <target state="translated">сбор мусора</target>
        </trans-unit>
        <trans-unit id="b6d7540d21081b0823e787c495d22c2e6a29acd1" translate="yes" xml:space="preserve">
          <source>Here's a script to demo the problem</source>
          <target state="translated">Вот сценарий для демонстрации проблемы.</target>
        </trans-unit>
        <trans-unit id="75feee4bba342c7d1a150d617df26a5b84f7c599" translate="yes" xml:space="preserve">
          <source>However, eval is currently and historically massively over-used by people who don't know what they're doing. That includes people writing JavaScript tutorials, unfortunately, and in some cases this can indeed have security consequences - or, more often, simple bugs. So the more we can do to throw a question mark over eval, the better. Any time you use eval you need to sanity-check what you're doing, because chances are you could be doing it a better, safer, cleaner way.</source>
          <target state="translated">Тем не менее,в настоящее время и исторически сложилось так,что оценкой в массовом порядке злоупотребляют люди,которые не знают,что они делают.Это включает людей,пишущих учебники по JavaScript,к сожалению,и в некоторых случаях это действительно может иметь последствия для безопасности-или,чаще всего,простые ошибки.Так что чем больше мы можем сделать,чтобы поставить знак вопроса над оценкой,тем лучше.Всякий раз,когда вы используете eval,вы должны проверять,что вы делаете,потому что есть шанс,что вы будете делать это лучше,безопаснее,чище.</target>
        </trans-unit>
        <trans-unit id="b0cc8a90cfd59a17fbc14979055df165cbd77f75" translate="yes" xml:space="preserve">
          <source>However, for all the reasons mentioned above, you shouldn't use it for your own code, where you have complete control - it's just not necessary, and better-off relegated to the 'tricky JavaScript hacks' shelf.</source>
          <target state="translated">Однако,по всем вышеперечисленным причинам,не стоит использовать его для собственного кода,где у вас есть полный контроль-он просто не нужен,а лучше убрать его на полку &quot;хитрых JavaScript-взломов&quot;.</target>
        </trans-unit>
        <trans-unit id="0d2efd49cfff0a15360537f164259f4616c0e72a" translate="yes" xml:space="preserve">
          <source>I believe it's because it can execute any JavaScript function from a string. Using it makes it easier for people to inject rogue code into the application.</source>
          <target state="translated">Думаю,это потому,что он может выполнить любую JavaScript-функцию из строки.Ее использование облегчает ввод неавторизованного кода в приложение.</target>
        </trans-unit>
        <trans-unit id="edba6850417672557191720478e91372debe060d" translate="yes" xml:space="preserve">
          <source>I know this discussion is old, but I really like &lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=6EJ801el-I8#t=1729s&quot;&gt;this&lt;/a&gt; approach by Google and wanted to share that feeling with others ;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я знаю, что эта дискуссия старая, но мне действительно нравится &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=6EJ801el-I8#t=1729s&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;этот&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; подход от Google, и я хотел поделиться этим чувством с другими;)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc70f4cb34b43ea51c23addc083f3c8caad5fc21" translate="yes" xml:space="preserve">
          <source>I won't attempt to refute anything said heretofore, but i will offer this use of eval() that (as far as I know) can't be done any other way.  There's probably other ways to code this, and probably ways to optimize it, but this is done longhand and without any bells and whistles for clarity sake to illustrate a use of eval that really doesn't have any other alternatives.  That is: dynamical (or more accurately) programmically-created object names (as opposed to values).</source>
          <target state="translated">Я не буду пытаться опровергнуть все,что было сказано ранее,но я предложу использовать eval(),что (насколько я знаю)не может быть сделано никаким другим способом.Вероятно,есть и другие способы кодирования,и,возможно,способы оптимизации,но это делается длинно и без звонков и свистков ради ясности,чтобы проиллюстрировать использование eval(),которое на самом деле не имеет никаких других альтернатив.То есть:динамические (или точнее)программные имена объектов (в отличие от значений).</target>
        </trans-unit>
        <trans-unit id="44f1a7e0acb79a925f0a5eb2f48fbce6d2a201ff" translate="yes" xml:space="preserve">
          <source>I would go as far as to say that it doesn't really matter if you use &lt;code&gt;eval()&lt;/code&gt; in javascript which is run in browsers.*(caveat)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я бы сказал, что на самом деле не имеет значения, используете ли вы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в javascript, который запускается в браузерах. * (Caveat)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcf7355fa794212df970cc7d5b845c63c7a95cb8" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m not saying you should go run out and start using eval()
  everywhere. In fact, there are very few good use cases for running
  eval() at all. There are definitely concerns with code clarity,
  debugability, and certainly performance that should not be overlooked.
  But you shouldn&amp;rsquo;t be afraid to use it when you have a case where
  eval() makes sense. Try not using it first, but don&amp;rsquo;t let anyone scare
  you into thinking your code is more fragile or less secure when eval()
  is used appropriately.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я не говорю, что вы должны убежать и начать использовать eval () везде. На самом деле хороших вариантов использования для запуска eval () совсем немного. Определенно существуют проблемы с ясностью кода, отладкой и, безусловно, производительностью, которые не следует упускать из виду. Но вы не должны бояться использовать его, когда у вас есть случай, когда eval () имеет смысл. Попробуйте сначала не использовать его, но не позволяйте никому пугать вас, думая, что ваш код более хрупок или менее безопасен при правильном использовании eval ().&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b07728bbbfd376d8b79bdf7dfdada9b7a5a3a8ff" translate="yes" xml:space="preserve">
          <source>If the authors of the kind of code above had a clue about the basics of how JavaScript objects work, they'd have realised that square brackets can be used instead of literal dot-names, obviating the need for eval:</source>
          <target state="translated">Если бы авторы такого рода кода имели представление об основах работы JavaScript-объектов,они бы поняли,что вместо буквальных точечных имен можно использовать квадратные скобки,что избавляет от необходимости оценки:</target>
        </trans-unit>
        <trans-unit id="7a9210275eab4c37ef5ac1d41a84323394920187" translate="yes" xml:space="preserve">
          <source>If you spot the use of eval() in your code, remember the mantra &amp;ldquo;eval() is evil.&amp;rdquo;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы заметили использование eval () в своем коде, помните мантру &amp;laquo;eval () - зло&amp;raquo;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1e6c44d75d7af9e8969d55a4397d71b07326d5f" translate="yes" xml:space="preserve">
          <source>If you want the user to input some logical functions and evaluate for AND the OR then the JavaScript eval function is perfect. I can accept two strings and &lt;code&gt;eval(uate) string1 === string2&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы хотите, чтобы пользователь вводил некоторые логические функции и вычислял для И ИЛИ, тогда функция JavaScript eval идеально подходит &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я могу принять две строки и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval(uate) string1 === string2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и т. Д.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3031dedc7540794a7092138701cb532acae72ab" translate="yes" xml:space="preserve">
          <source>If you were to ask if it's suitable to use &lt;code&gt;eval()&lt;/code&gt; in PHP however, the answer is &lt;strong&gt;NO&lt;/strong&gt;, unless you &lt;strong&gt;whitelist&lt;/strong&gt; any values which may be passed to your eval statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы спросите, подходит ли использование &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в PHP, ответ будет &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;НЕТ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , если вы не &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;внесете в белый список&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; какие-либо значения, которые могут быть переданы в ваш оператор eval.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c48a549b1d6f103cd7da2f5411479e65b3492ed4" translate="yes" xml:space="preserve">
          <source>If your application is using &lt;code&gt;eval()&lt;/code&gt; to create an object from some JSON which has come back from an &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt; to your own site, created by your trusted server-side code, it's probably not a problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если ваше приложение использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для создания объекта из некоторого JSON, который вернулся из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XMLHttpRequest&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на ваш собственный сайт, созданный вашим доверенным кодом на стороне сервера, это, вероятно, не проблема.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c8a85d8fc546b1eb106d07c70fa24db9d6bac6f" translate="yes" xml:space="preserve">
          <source>Improper use of &lt;strong&gt;eval&lt;/strong&gt; opens up your
code for injection attacks</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Неправильное использование &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; открывает ваш код для инъекционных атак&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14d6fe3adbcdf0f5b6ca6fb7ea8cba66668180d5" translate="yes" xml:space="preserve">
          <source>In other words, in the pessimistic sense, most of those optimizations it would make are pointless if eval(..) is present, so it simply doesn't perform the optimizations at all.</source>
          <target state="translated">Другими словами,в пессимистическом смысле большинство оптимизаций,которые она сделает,бессмысленны,если eval(...)присутствует,поэтому она просто не выполняет оптимизаций вообще.</target>
        </trans-unit>
        <trans-unit id="2bf3bffa2873d5b6030df088077ed6930916a446" translate="yes" xml:space="preserve">
          <source>It greatly reduces your level of confidence about security.</source>
          <target state="translated">Это значительно снижает ваш уровень уверенности в безопасности.</target>
        </trans-unit>
        <trans-unit id="6f03d1d2d23aa04e158c4ae98f058def0948b3b6" translate="yes" xml:space="preserve">
          <source>It is a possible security risk, it has a different scope of execution, and is quite inefficient, as it creates an entirely new scripting environment for the execution of the code. See here for some more info: &lt;a href=&quot;http://userjs.org/help/tutorials/efficient-code#evalevil&quot;&gt;eval&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это возможный риск для безопасности, он имеет другую область исполнения и совершенно неэффективен, поскольку создает совершенно новую среду сценариев для выполнения кода. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите здесь для получения дополнительной информации: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://userjs.org/help/tutorials/efficient-code#evalevil&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eval&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8961c0347a3eacf41d26a8b6650e23806802192" translate="yes" xml:space="preserve">
          <source>It is quite useful, though, and used with moderation can add a lot of good functionality.</source>
          <target state="translated">Впрочем,она весьма полезна и при использовании с модерацией может добавить много хорошего функционала.</target>
        </trans-unit>
        <trans-unit id="6dfa9b7f1d8c876ae6c2dd750e25f385454bcfcd" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also important to remember that passing strings to &lt;code&gt;setInterval()&lt;/code&gt;, &lt;code&gt;setTimeout()&lt;/code&gt;,
and the &lt;code&gt;Function()&lt;/code&gt; constructor is, for the most part, similar to using &lt;code&gt;eval()&lt;/code&gt; and therefore
should be avoided.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Также важно помнить, что передача строк в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и конструктор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по большей части похожа на использование &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и, следовательно, ее следует избегать.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8c3cc80491fbfb8cbd6e3ac6b00259872abd652" translate="yes" xml:space="preserve">
          <source>It's generally only an issue if you're passing eval user input.</source>
          <target state="translated">Обычно это проблема только в том случае,если вы передаете пользовательские данные для оценки.</target>
        </trans-unit>
        <trans-unit id="8c42fa01d170f0ba1c3ba79193d4093073ef1646" translate="yes" xml:space="preserve">
          <source>It's not always a bad idea. Take for example, code generation. I recently wrote a library called &lt;a href=&quot;https://github.com/vincentracine/hyperbars&quot;&gt;Hyperbars&lt;/a&gt; which bridges the gap between &lt;a href=&quot;https://github.com/Matt-Esch/virtual-dom&quot;&gt;virtual-dom&lt;/a&gt; and &lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;handlebars&lt;/a&gt;. It does this by parsing a handlebars template and converting it to &lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;hyperscript&lt;/a&gt; which is subsequently used by virtual-dom. The hyperscript is generated as a string first and before returning it, &lt;code&gt;eval()&lt;/code&gt; it to turn it into executable code. I have found &lt;code&gt;eval()&lt;/code&gt; in this particular situation the exact opposite of evil.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это не всегда плохая идея. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Взять, к примеру, генерацию кода. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Недавно я написал библиотеку под названием &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vincentracine/hyperbars&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hyperbars,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которая ликвидирует разрыв между &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Matt-Esch/virtual-dom&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;virtual-dom&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;рулем&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это делается путем анализа шаблона руля и преобразования его в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;гиперскрипт,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который впоследствии используется virtual-dom. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Гиперскрипт сначала генерируется как строка, а перед ее возвратом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; превращает ее в исполняемый код. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я обнаружил, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в этой конкретной ситуации является полной противоположностью зла.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31da5fad3f0e5a2f90cae8dbe47b9ff1d4257b20" translate="yes" xml:space="preserve">
          <source>It's not necessarily that bad provided you know what context you're using it in.</source>
          <target state="translated">Это не обязательно так плохо при условии,что ты знаешь,в каком контексте ты его используешь.</target>
        </trans-unit>
        <trans-unit id="6fdf367987c4f683a398eb84746d6c7cffa8f46a" translate="yes" xml:space="preserve">
          <source>Mainly, it's a lot harder to maintain and debug. It's like a &lt;code&gt;goto&lt;/code&gt;. You can use it, but it makes it harder to find problems and harder on the people who may need to make changes later.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В основном, это намного сложнее поддерживать и отлаживать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;goto&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете использовать его, но это усложняет поиск проблем и усложняет работу с людьми, которым, возможно, потребуется внести изменения позже.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6816994f89090ba2d1e15d75329ea4bd59ca4afc" translate="yes" xml:space="preserve">
          <source>One thing to keep in mind is that you can often use eval() to execute code in an otherwise restricted environment - social networking sites that block specific JavaScript functions can sometimes be fooled by breaking them up in an eval block -</source>
          <target state="translated">Следует помнить,что часто можно использовать eval()для выполнения кода в ограниченной среде-сайты социальных сетей,блокирующие определенные JavaScript-функции,иногда могут быть обмануты,разбивая их на eval-блок -</target>
        </trans-unit>
        <trans-unit id="286c00910c6d09f3a9fbe2684368745980787a14" translate="yes" xml:space="preserve">
          <source>Passing user input to eval() is a security risk, but also each invocation of eval() creates a new instance of the JavaScript interpreter. This can be a resource hog.</source>
          <target state="translated">Передача пользовательского ввода в eval()представляет собой риск для безопасности,но также каждый вызов eval()создает новый экземпляр JavaScript-интерпретатора.Это может быть ресурсный хог.</target>
        </trans-unit>
        <trans-unit id="df4727fbdcb3341721f9c555bf1cbb200fd36b28" translate="yes" xml:space="preserve">
          <source>Performance: until the code to be executed is unknown, it cannot be optimized.  (about javascript and performance, certainly &lt;a href=&quot;http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html&quot;&gt;Steve Yegge's presentation&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Производительность: до тех пор, пока исполняемый код неизвестен, его нельзя оптимизировать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(о JavaScript и производительности, конечно &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;же, презентации Стива Йегге&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64aa4d557cc62d15e8de600185aa21dbf6018da0" translate="yes" xml:space="preserve">
          <source>Reference :</source>
          <target state="translated">Ссылка :</target>
        </trans-unit>
        <trans-unit id="5e60db53c154faf8e7afbee52db6ba5fc5c47e87" translate="yes" xml:space="preserve">
          <source>Security (but as long as you generate the string to be evaluated yourself, this might be a non-issue)</source>
          <target state="translated">Безопасность (но до тех пор,пока вы сами генерируете строку для оценки,это может быть не проблема).</target>
        </trans-unit>
        <trans-unit id="14685695470c1f8b261fc20c5c317f1a512aa650" translate="yes" xml:space="preserve">
          <source>So if you're looking to run some JavaScript code where it might not otherwise be allowed (&lt;a href=&quot;http://en.wikipedia.org/wiki/Myspace&quot;&gt;Myspace&lt;/a&gt;, I'm looking at you...) then eval() can be a useful trick.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что, если вы хотите запустить какой-то код JavaScript, который иначе не мог бы быть разрешен ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Myspace&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Myspace&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , я смотрю на вас ...), тогда eval () может быть полезным трюком.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29ca7e51eaa8f10f1aa783d05d0cdd8080017091" translate="yes" xml:space="preserve">
          <source>Something as simple as the above code causes a small amount of memory to be store until the app dies. 
This is worse when the evaled script is a giant function, and called on interval.</source>
          <target state="translated">Что-то настолько простое,как вышеприведенный код,заставляет хранить небольшой объем памяти до тех пор,пока приложение не умрет.Это еще хуже,когда оцененный скрипт является гигантской функцией и вызывается с интервалом.</target>
        </trans-unit>
        <trans-unit id="41399e76633f1ba3e54bb4e075d2084afd4fcd9f" translate="yes" xml:space="preserve">
          <source>The JavaScript Engine has a number of performance optimizations that it performs during the compilation phase. Some of these boil down to being able to essentially statically analyze the code as it lexes, and pre-determine where all the variable and function declarations are, so that it takes less effort to resolve identifiers during execution.</source>
          <target state="translated">JavaScript Engine имеет ряд оптимизаций производительности,которые он выполняет на этапе компиляции.Некоторые из них сводятся к тому,чтобы иметь возможность по существу статически анализировать код как лексику,и предопределять,где находятся все объявления переменных и функций,таким образом,чтобы меньше усилий уходило на разрешение идентификаторов во время выполнения.</target>
        </trans-unit>
        <trans-unit id="148e0c7f81d9a3698c5049c257860541935ee71e" translate="yes" xml:space="preserve">
          <source>The browsers garbage collection has no idea if the code that's eval'ed can be removed from memory so it just keeps it stored until the page is reloaded. 
Not too bad if your users are only on your page shortly, but it can be a problem for webapp's.</source>
          <target state="translated">Коллекция мусора браузеров понятия не имеет,можно ли удалить код,который eval'ed может быть удален из памяти,поэтому он просто хранит его до тех пор,пока страница не будет перезагружена.Не так уж и плохо,если ваши пользователи вскоре окажутся на вашей странице,но это может стать проблемой для webapp'а.</target>
        </trans-unit>
        <trans-unit id="24be6ca54f3f04a72a882c99dcb539c99444e81b" translate="yes" xml:space="preserve">
          <source>The eval function is a powerful and easy way to dynamically generate code, so what are the caveats?</source>
          <target state="translated">Функция eval-это мощный и простой способ динамической генерации кода,так что о чем предостережения?</target>
        </trans-unit>
        <trans-unit id="68865d1d8d64a6c8ba9da456612b2787bc0b5b95" translate="yes" xml:space="preserve">
          <source>The other thing is that the better You get the more You try to understand and finally You just don't believe that something is good or bad just because someone said so :) 
This is a very inspirational &lt;a href=&quot;http://www.youtube.com/watch?v=MFtijdklZDo&quot;&gt;video&lt;/a&gt; that helped me to think more by myself :) GOOD PRACTICES are good, but don't use them mindelessly :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другое дело, что чем лучше Ты получаешь, тем больше Ты пытаешься понять, и, в конце концов, Ты просто не веришь, что что-то хорошо или плохо, просто потому, что кто-то так сказал :) Это очень вдохновляющее &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=MFtijdklZDo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;видео,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которое помогло мне больше думать самостоятельно :) ХОРОШИЕ ПРАКТИКИ хороши, но не используйте их безрассудно :)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d16f9ac85bd63b35f45508e21cf50ad7aeb3cb1f" translate="yes" xml:space="preserve">
          <source>The performance of &lt;code&gt;eval()&lt;/code&gt; isn't an issue in a situation like this because you only need to interpret the generated string once and then reuse the executable output many times over.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Производительность &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не является проблемой в такой ситуации, потому что вам нужно только один раз интерпретировать сгенерированную строку, а затем многократно использовать исполняемый вывод.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7633212c2dd3cc676f1ba1372322ebac779d750f" translate="yes" xml:space="preserve">
          <source>There is a small potential
benefit because the code evaluated in new Function() will be running in a local function
scope, so any variables defined with var in the code being evaluated will not become
globals automatically.</source>
          <target state="translated">Существует небольшое потенциальное преимущество,так как код,вычисляемый в new Function(),будет выполняться в локальной области видимости функции,поэтому любые переменные,определенные с помощью var в вычисляемом коде,не станут глобусами автоматически.</target>
        </trans-unit>
        <trans-unit id="4584f4b326d529ce961e584e35dd41b651162eb7" translate="yes" xml:space="preserve">
          <source>This
function takes an arbitrary string and executes it as JavaScript code. When the code in
question is known beforehand (not determined at runtime), there&amp;rsquo;s no reason to use
eval(). 
If the code is dynamically generated at runtime, there&amp;rsquo;s often a better way to
achieve the goal without eval(). 
For example, just using square bracket notation to
access dynamic properties is better and simpler:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта функция принимает произвольную строку и выполняет ее как код JavaScript. Когда рассматриваемый код известен заранее (не определяется во время выполнения), нет смысла использовать eval (). Если код генерируется динамически во время выполнения, часто есть лучший способ достичь цели без eval (). Например, просто использовать квадратную скобку для доступа к динамическим свойствам лучше и проще:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ccfc53cb017769dd7ae987a142efdb9302c67cd" translate="yes" xml:space="preserve">
          <source>This explains it all.</source>
          <target state="translated">Это все объясняет.</target>
        </trans-unit>
        <trans-unit id="ee72c7e2a527cacf1dc21f1420f881a587b5bf1d" translate="yes" xml:space="preserve">
          <source>This is one of good articles talking about eval and how it is not an evil:
&lt;a href=&quot;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&quot;&gt;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это одна из хороших статей, рассказывающих о eval и о том, как он не является злом: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="206747b449bd6d921232d550ccc476c2741e014c" translate="yes" xml:space="preserve">
          <source>This may become more of an issue as the next generation of browsers come out with some flavor of a JavaScript compiler. Code executed via Eval may not perform as well as the rest of your JavaScript against these newer browsers. Someone should do some profiling.</source>
          <target state="translated">Это может стать проблемой,так как следующее поколение браузеров выйдет с каким-то привкусом компилятора JavaScript.Код,выполняемый через Eval,может работать не так хорошо,как остальные JavaScript против этих новых браузеров.Кто-то должен сделать профилирование.</target>
        </trans-unit>
        <trans-unit id="f0f8ad23e65b95f25bbdd8df86f29ae3982527e0" translate="yes" xml:space="preserve">
          <source>To give an all-too-typical example, to set the colour of an element with an id stored in the variable 'potato':</source>
          <target state="translated">Чтобы привести типичный пример,установите цвет элемента с id,сохраненным в переменной 'картофель':</target>
        </trans-unit>
        <trans-unit id="f4c65e507b7f93297ee2268d7252cbd7eb37d296" translate="yes" xml:space="preserve">
          <source>To this</source>
          <target state="translated">К этому</target>
        </trans-unit>
        <trans-unit id="b34c39225645dafeee78e3812eddc5e31d4bb53b" translate="yes" xml:space="preserve">
          <source>Two points come to mind:</source>
          <target state="translated">На ум приходят два момента:</target>
        </trans-unit>
        <trans-unit id="d9b8f5845abccd0b52ea08432402c9e42002ef09" translate="yes" xml:space="preserve">
          <source>Unless you are 100% sure that the code being evaluated is from a trusted source (usually your own application) then it's a surefire way of exposing your system to a cross-site scripting attack.</source>
          <target state="translated">Если вы не уверены на 100%,что код,который вы оцениваете,исходит из доверенного источника (обычно это ваше собственное приложение),то это верный способ подвергнуть вашу систему межсайтовой атаке с помощью скриптов.</target>
        </trans-unit>
        <trans-unit id="e3090c0855982eee09e2769634d70840bc3e123f" translate="yes" xml:space="preserve">
          <source>Unless you let eval() a dynamic content (through cgi or input), it is as safe and solid as all other JavaScript in your page.</source>
          <target state="translated">Если вы не позволяете eval()динамическое содержимое (через cgi или вход),оно является таким же безопасным и надежным,как и все остальные JavaScript на вашей странице.</target>
        </trans-unit>
        <trans-unit id="828ef76c49e81348c8216226d09ee2f8044a35d7" translate="yes" xml:space="preserve">
          <source>Untrusted client-side JavaScript code can't do that much anyway. Provided the thing you're executing &lt;code&gt;eval()&lt;/code&gt; on has come from a reasonable source, you're fine.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ненадежный клиентский код JavaScript в любом случае не может этого сделать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;При условии, что вы выполняете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из разумного источника, у вас все в порядке.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9d7c43ed517909799508794915cbb170a228986" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;eval()&lt;/code&gt; also has security implications, because you might be executing code (for
example coming from the network) that has been tampered with. 
This is a common antipattern when dealing with a JSON response from an Ajax request. 
In those cases
it&amp;rsquo;s better to use the browsers&amp;rsquo; built-in methods to parse the JSON response to make
sure it&amp;rsquo;s safe and valid. For browsers that don&amp;rsquo;t support &lt;code&gt;JSON.parse()&lt;/code&gt; natively, you can
use a library from JSON.org.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Использование &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; также имеет последствия для безопасности, поскольку вы можете выполнять код (например, поступающий из сети), который был подделан. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это распространенный антипаттерн при работе с JSON-ответом на Ajax-запрос. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этих случаях лучше использовать встроенные в браузер методы для анализа ответа JSON, чтобы убедиться в его безопасности и допустимости. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для браузеров, которые &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;изначально &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не поддерживают &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы можете использовать библиотеку из JSON.org.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6b34e4ed2beda88578b9d4ffae571828b3a96fe" translate="yes" xml:space="preserve">
          <source>Using the new Function() constructor is similar to eval() and should be approached
with care. It could be a powerful construct but is often misused. 
If you absolutely must
use &lt;code&gt;eval()&lt;/code&gt;, you can consider using new Function() instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Использование нового конструктора Function () аналогично eval () и к нему следует подходить с осторожностью. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это может быть мощная конструкция, но часто используется неправильно. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вам абсолютно необходимо использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы можете использовать вместо него новую функцию ().&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfd49273a1375934f5c848fad258380f58fc832e" translate="yes" xml:space="preserve">
          <source>Why is using the JavaScript eval function a bad idea</source>
          <target state="translated">Почему использование функции оценки JavaScript-плохая идея.</target>
        </trans-unit>
        <trans-unit id="baa0684dab15c8994c1b20edf616d0265609e87c" translate="yes" xml:space="preserve">
          <source>You can see how the code generation was achieved if you're curious &lt;a href=&quot;https://github.com/vincentracine/hyperbars/blob/master/src/hyperbars.js#L131&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете увидеть , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как генерация кода было достигнуто , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если вам интересно &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vincentracine/hyperbars/blob/master/src/hyperbars.js#L131&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ee2d5d74a937a388d34da3fa1e839789d7bfc1" translate="yes" xml:space="preserve">
          <source>eval isn't always evil. There are times where it's perfectly appropriate.</source>
          <target state="translated">Ивэл не всегда зло.Бывают моменты,когда это идеально подходит.</target>
        </trans-unit>
        <trans-unit id="fe78ef92fe2e03888205d149e55224d05ac1f054" translate="yes" xml:space="preserve">
          <source>eval'd code executes slower (no opportunity to compile/cache eval'd code)</source>
          <target state="translated">eval'd код выполняется медленнее (нет возможности компилировать eval'd код)</target>
        </trans-unit>
        <trans-unit id="2237830e035cd30c9631188a7c1490660cccb742" translate="yes" xml:space="preserve">
          <source>eval() is very powerful and can be used to execute a JS statement or evaluate an expression. But the question isn't about the uses of eval() but lets just say some how the string you running with eval() is affected by a malicious party. At the end you will be running malicious code. With power comes great responsibility. So use it wisely is you are using it. 
 This isn't related much to eval() function but this article has pretty good information:
 &lt;a href=&quot;http://blogs.popart.com/2009/07/javascript-injection-attacks/&quot;&gt;http://blogs.popart.com/2009/07/javascript-injection-attacks/&lt;/a&gt;
If you are looking for the basics of eval() look here: 
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval () очень мощный и может использоваться для выполнения оператора JS или оценки выражения. Но вопрос не в том, как использовать eval (), а просто скажем, как злоумышленник влияет на строку, которую вы запускаете с помощью eval (). В конце вы будете использовать вредоносный код. С силой приходит большая ответственность. Так что используйте это с умом, если вы используете это. Это не сильно связано с функцией eval (), но эта статья содержит довольно хорошую информацию: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.popart.com/2009/07/javascript-injection-attacks/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://blogs.popart.com/2009/07/javascript-injection-attacks/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Если вы ищете основы eval () смотрите здесь: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d118d441bbdad12f46b572679b98788e81ea43d" translate="yes" xml:space="preserve">
          <source>which is more reliable than the dodgy old trick of accessing DOM elements straight out of the document object.)</source>
          <target state="translated">что более надежно,чем изворотливый старый трюк доступа к DOM-элементам прямо из объекта документа).)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
