<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/86513">
    <body>
      <group id="86513">
        <trans-unit id="e8da74d117732daae1ec6eced513ab4442893f06" translate="yes" xml:space="preserve">
          <source>(But then, someone who /really/ knew what they were doing would say:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(그러나, 자신이하고있는 일을 / 정말로 / 알고있는 사람은 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c854ac93991da55521bfe15bb671f855074e82c7" translate="yes" xml:space="preserve">
          <source>*As long as your server endpoints have the correct validation &amp;amp; sanitisation of user supplied values, it should not matter what gets parsed and eval'd in your client side javascript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* 서버 엔드 포인트가 사용자 제공 값의 올바른 유효성 검사 및 위생 처리를하는 한, 클라이언트 측 자바 스크립트에서 구문 분석되고 평가되는 것이 중요하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1216171f6b14f8050f363786c3b695062989583e" translate="yes" xml:space="preserve">
          <source>...which is much easier to read as well as less potentially buggy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... 읽기가 훨씬 쉽고 버그가 적습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4c4530f99dceb59d9b5f2c1b1e4b43d1913e4d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Debugging&lt;/strong&gt; can be more challenging
(no line numbers, etc.)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;디버깅&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 더 어려울 수 있습니다 (행 번호 등 없음)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68827a63b5078f9a50c23ab76de31607123511a8" translate="yes" xml:space="preserve">
          <source>All modern browsers have a developer console where you can execute arbitrary javascript anyway and any semi-smart developer can look at your JS source and put whatever bits of it they need to into the dev console to do what they wish.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 최신 브라우저에는 어쨌든 임의의 자바 스크립트를 실행할 수있는 개발자 콘솔이 있으며 모든 세미 스마트 개발자는 JS 소스를보고 개발자 콘솔에 필요한 비트를 넣어 원하는 작업을 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efc7386ceb8449e138c1ffecfb668b89e72781e3" translate="yes" xml:space="preserve">
          <source>Along with the rest of the answers, I don't think eval statements can have advanced minimization.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나머지 답변과 함께 평가 진술이 고급 최소화 될 수 있다고 생각하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04f073718f97b7a0620837423dbd160f9efde52e" translate="yes" xml:space="preserve">
          <source>Another way to prevent automatic globals is to wrap the
&lt;code&gt;eval()&lt;/code&gt; call into an immediate function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자동 전역을 방지하는 또 다른 방법은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출을 즉시 함수로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;래핑하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29a3e2a33db16ab92bf0e28b6d2254865dd52c91" translate="yes" xml:space="preserve">
          <source>Basically from</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68f751cf48a145fd656a026a713a49fe39869d0e" translate="yes" xml:space="preserve">
          <source>Behind the scenes, JavaScript still has to evaluate and execute
the string you pass as programming code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배후에서 JavaScript는 여전히 프로그래밍 코드로 전달한 문자열을 평가하고 실행해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6de8012b0b5762ab8293b8a7887b69c33081f049" translate="yes" xml:space="preserve">
          <source>Besides the possible security issues if you are executing user-submitted code, most of the time there's a better way that doesn't involve re-parsing the code every time it's executed. Anonymous functions or object properties can replace most uses of eval and are much safer and faster.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자가 제출 한 코드를 실행하는 경우 가능한 보안 문제 외에도 대부분의 경우 코드를 실행할 때마다 코드를 구문 분석하지 않는 더 좋은 방법이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;익명 함수 또는 객체 속성은 대부분의 평가 사용을 대체 할 수 있으며 훨씬 안전하고 빠릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85c8f9654ce736912618edd0981f92704b35e280" translate="yes" xml:space="preserve">
          <source>But if the Engine finds an eval(..) in the code, it essentially has to assume that all its awareness of identifier location may be invalid, because it cannot know at lexing time exactly what code you may pass to eval(..) to modify the lexical scope, or the contents of the object you may pass to with to create a new lexical scope to be consulted.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 엔진이 코드에서 eval (..)을 찾으면 본질적으로 식별자 위치에 대한 모든 인식이 유효하지 않은 것으로 가정해야합니다. 여기서 eval (..)에 전달할 코드를 정확히 알 수 없기 때문입니다. 어휘 범위 또는 수정하려는 새로운 어휘 범위를 만들기 위해 전달할 수있는 객체의 내용을 수정합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="708ad811ceaadce04eda4ed9426ac29d31be3a58" translate="yes" xml:space="preserve">
          <source>EDIT:  by the way, I wouldn't suggest (for all the security reasons pointed out heretofore) that you base you object names on user input.  I can't imagine any good reason you'd want to do that though.  Still, thought I'd point it out that it wouldn't be a good idea :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 : 그건 그렇고, (당신이 지적한 모든 보안상의 이유로) 당신이 사용자 입력에 기반한 객체 이름을 제안하지는 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래도 그렇게하고 싶은 좋은 이유는 상상할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아직도, 나는 그것이 좋은 생각이 아니라고 지적 할 것이라고 생각했다. :)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e912f4005bab4ffe00de9bda5fe37444d9215a0d" translate="yes" xml:space="preserve">
          <source>Edit: As @Jeff Walden points out in comments, #3 is less true today than it was in 2008. However, while some caching of compiled scripts may happen this will only be limited to scripts that are eval'd repeated with no modification. A more likely scenario is that you are eval'ing scripts that have undergone slight modification each time and as such could not be cached. Let's just say that SOME eval'd code executes more slowly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 : @ Jeff Walden이 의견에서 지적했듯이 # 3은 2008 년보다 오늘날에는 덜 사실입니다. 그러나 컴파일 된 스크립트의 일부 캐싱이 발생할 수 있지만 수정없이 반복되는 스크립트로만 제한됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 가능성이 높은 시나리오는 매번 약간 씩 수정 된 스크립트를 평가하여 캐시 할 수 없다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 평가 된 코드가 더 느리게 실행된다고 가정 해 봅시다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84841ccacb20efbdee1996b961b9cb5573918289" translate="yes" xml:space="preserve">
          <source>Garbage collection</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가비지 콜렉션&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6d7540d21081b0823e787c495d22c2e6a29acd1" translate="yes" xml:space="preserve">
          <source>Here's a script to demo the problem</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제를 시연하는 스크립트는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75feee4bba342c7d1a150d617df26a5b84f7c599" translate="yes" xml:space="preserve">
          <source>However, eval is currently and historically massively over-used by people who don't know what they're doing. That includes people writing JavaScript tutorials, unfortunately, and in some cases this can indeed have security consequences - or, more often, simple bugs. So the more we can do to throw a question mark over eval, the better. Any time you use eval you need to sanity-check what you're doing, because chances are you could be doing it a better, safer, cleaner way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 평가는 현재 그리고 역사적으로 자신이하는 일을 모르는 사람들에 의해 과도하게 사용되고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;불행히도 JavaScript 자습서를 작성하는 사람들이 포함되며 경우에 따라 보안에 영향을 줄 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 eval에 물음표를 던질수록할수록 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval을 사용할 때마다 수행중인 작업의 위생 상태를 점검해야합니다. 더 안전하고 깔끔한 방법으로 수행 할 수 있기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0cc8a90cfd59a17fbc14979055df165cbd77f75" translate="yes" xml:space="preserve">
          <source>However, for all the reasons mentioned above, you shouldn't use it for your own code, where you have complete control - it's just not necessary, and better-off relegated to the 'tricky JavaScript hacks' shelf.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 위에서 언급 한 모든 이유로 인해 완전한 제어 권한이있는 자체 코드에는이 코드를 사용하지 않아야합니다. 필요하지 않으며 'tricky JavaScript hacks'선반으로 강등됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d2efd49cfff0a15360537f164259f4616c0e72a" translate="yes" xml:space="preserve">
          <source>I believe it's because it can execute any JavaScript function from a string. Using it makes it easier for people to inject rogue code into the application.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열에서 JavaScript 함수를 실행할 수 있기 때문이라고 생각합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 사용하면 사람들이 악성 코드를 응용 프로그램에 쉽게 삽입 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="edba6850417672557191720478e91372debe060d" translate="yes" xml:space="preserve">
          <source>I know this discussion is old, but I really like &lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=6EJ801el-I8#t=1729s&quot;&gt;this&lt;/a&gt; approach by Google and wanted to share that feeling with others ;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는이 토론이 오래 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되었다는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것을 알고 있지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Google &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=6EJ801el-I8#t=1729s&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 접근법을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정말로 좋아 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하며 다른 사람들과 그 느낌을 나누고 싶었습니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc70f4cb34b43ea51c23addc083f3c8caad5fc21" translate="yes" xml:space="preserve">
          <source>I won't attempt to refute anything said heretofore, but i will offer this use of eval() that (as far as I know) can't be done any other way.  There's probably other ways to code this, and probably ways to optimize it, but this is done longhand and without any bells and whistles for clarity sake to illustrate a use of eval that really doesn't have any other alternatives.  That is: dynamical (or more accurately) programmically-created object names (as opposed to values).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 지금까지 언급 한 것을 반박하려고 시도하지는 않지만, 내가 알고있는 한 다른 방법으로는 할 수없는 eval () 사용을 제공 할 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 코딩하는 다른 방법과 아마도 그것을 최적화하는 방법이있을 수 있지만, 이것은 실제로 다른 대안이없는 eval의 사용을 설명하기 위해 명확하게하기 위해 종소리와 휘파람없이 오랫동안 수행되었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 프로그래밍 방식으로 생성 된 동적 (또는보다 정확한) 객체 이름 (값과 반대)입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44f1a7e0acb79a925f0a5eb2f48fbce6d2a201ff" translate="yes" xml:space="preserve">
          <source>I would go as far as to say that it doesn't really matter if you use &lt;code&gt;eval()&lt;/code&gt; in javascript which is run in browsers.*(caveat)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;브라우저에서 실행되는 자바 스크립트에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하면 실제로 중요하지 않다고 말하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다. * (caveat)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcf7355fa794212df970cc7d5b845c63c7a95cb8" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m not saying you should go run out and start using eval()
  everywhere. In fact, there are very few good use cases for running
  eval() at all. There are definitely concerns with code clarity,
  debugability, and certainly performance that should not be overlooked.
  But you shouldn&amp;rsquo;t be afraid to use it when you have a case where
  eval() makes sense. Try not using it first, but don&amp;rsquo;t let anyone scare
  you into thinking your code is more fragile or less secure when eval()
  is used appropriately.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 당신이 밖으로 나가서 eval () 사용을 시작해야한다고 말하는 것이 아닙니다. 실제로 eval ()을 실행하기위한 좋은 사용 사례는 거의 없습니다. 코드 명확성, 디버깅 가능성 및 간과해서는 안되는 성능에 대한 우려가 있습니다. 그러나 eval ()이 적합한 경우에 사용하는 것을 두려워해서는 안됩니다. 먼저 사용하지 말고 eval ()을 적절하게 사용할 때 코드가 더 취약하거나 덜 안전하다고 누군가를 놀라게하지 마십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b07728bbbfd376d8b79bdf7dfdada9b7a5a3a8ff" translate="yes" xml:space="preserve">
          <source>If the authors of the kind of code above had a clue about the basics of how JavaScript objects work, they'd have realised that square brackets can be used instead of literal dot-names, obviating the need for eval:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위와 같은 코드의 작성자가 JavaScript 객체의 작동 원리에 대한 단서가 있었다면 리터럴 점 이름 대신 대괄호를 사용할 수 있다는 사실을 깨달았을 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a9210275eab4c37ef5ac1d41a84323394920187" translate="yes" xml:space="preserve">
          <source>If you spot the use of eval() in your code, remember the mantra &amp;ldquo;eval() is evil.&amp;rdquo;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드에서 eval ()의 사용을 발견하면&amp;ldquo;eval ()은 악하다&amp;rdquo;라는 진언을 기억하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1e6c44d75d7af9e8969d55a4397d71b07326d5f" translate="yes" xml:space="preserve">
          <source>If you want the user to input some logical functions and evaluate for AND the OR then the JavaScript eval function is perfect. I can accept two strings and &lt;code&gt;eval(uate) string1 === string2&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자가 일부 논리 함수를 입력하고 AND OR을 평가하도록하려면 JavaScript 평가 함수가 완벽합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 개의 문자열과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval(uate) string1 === string2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 등을 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3031dedc7540794a7092138701cb532acae72ab" translate="yes" xml:space="preserve">
          <source>If you were to ask if it's suitable to use &lt;code&gt;eval()&lt;/code&gt; in PHP however, the answer is &lt;strong&gt;NO&lt;/strong&gt;, unless you &lt;strong&gt;whitelist&lt;/strong&gt; any values which may be passed to your eval statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 PHP에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하는 것이 적합한 지 묻는다면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval 문에 전달 될 수있는 값을 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;허용&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하지 않는 한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대답은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c48a549b1d6f103cd7da2f5411479e65b3492ed4" translate="yes" xml:space="preserve">
          <source>If your application is using &lt;code&gt;eval()&lt;/code&gt; to create an object from some JSON which has come back from an &lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;XMLHttpRequest&lt;/a&gt; to your own site, created by your trusted server-side code, it's probably not a problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;응용 프로그램이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하여 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;XMLHttpRequest&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 신뢰할 수있는 서버 측 코드로 만든 자체 사이트로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;돌아온 일부 JSON에서 객체를 생성하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 문제가되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c8a85d8fc546b1eb106d07c70fa24db9d6bac6f" translate="yes" xml:space="preserve">
          <source>Improper use of &lt;strong&gt;eval&lt;/strong&gt; opens up your
code for injection attacks</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 잘못 사용하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주입 공격에 대한 코드가 열립니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14d6fe3adbcdf0f5b6ca6fb7ea8cba66668180d5" translate="yes" xml:space="preserve">
          <source>In other words, in the pessimistic sense, most of those optimizations it would make are pointless if eval(..) is present, so it simply doesn't perform the optimizations at all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 말해서 비관적 의미에서 eval (..)이 있으면 최적화하는 것이 무의미하므로 최적화를 전혀 수행하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bf3bffa2873d5b6030df088077ed6930916a446" translate="yes" xml:space="preserve">
          <source>It greatly reduces your level of confidence about security.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보안에 대한 신뢰 수준이 크게 줄어 듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f03d1d2d23aa04e158c4ae98f058def0948b3b6" translate="yes" xml:space="preserve">
          <source>It is a possible security risk, it has a different scope of execution, and is quite inefficient, as it creates an entirely new scripting environment for the execution of the code. See here for some more info: &lt;a href=&quot;http://userjs.org/help/tutorials/efficient-code#evalevil&quot;&gt;eval&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보안 위험 가능성이 있으며 실행 범위가 다르며 코드 실행을위한 완전히 새로운 스크립팅 환경을 생성하므로 매우 비효율적입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 여기를 참조하십시오 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://userjs.org/help/tutorials/efficient-code#evalevil&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8961c0347a3eacf41d26a8b6650e23806802192" translate="yes" xml:space="preserve">
          <source>It is quite useful, though, and used with moderation can add a lot of good functionality.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 매우 유용하며 중재와 함께 사용하면 많은 기능을 추가 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6dfa9b7f1d8c876ae6c2dd750e25f385454bcfcd" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also important to remember that passing strings to &lt;code&gt;setInterval()&lt;/code&gt;, &lt;code&gt;setTimeout()&lt;/code&gt;,
and the &lt;code&gt;Function()&lt;/code&gt; constructor is, for the most part, similar to using &lt;code&gt;eval()&lt;/code&gt; and therefore
should be avoided.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 생성자로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열을 전달 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 것은 대부분 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용과 유사 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하므로 피해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8c3cc80491fbfb8cbd6e3ac6b00259872abd652" translate="yes" xml:space="preserve">
          <source>It's generally only an issue if you're passing eval user input.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 평가판 사용자 입력을 전달하는 경우에만 문제가됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c42fa01d170f0ba1c3ba79193d4093073ef1646" translate="yes" xml:space="preserve">
          <source>It's not always a bad idea. Take for example, code generation. I recently wrote a library called &lt;a href=&quot;https://github.com/vincentracine/hyperbars&quot;&gt;Hyperbars&lt;/a&gt; which bridges the gap between &lt;a href=&quot;https://github.com/Matt-Esch/virtual-dom&quot;&gt;virtual-dom&lt;/a&gt; and &lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;handlebars&lt;/a&gt;. It does this by parsing a handlebars template and converting it to &lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;hyperscript&lt;/a&gt; which is subsequently used by virtual-dom. The hyperscript is generated as a string first and before returning it, &lt;code&gt;eval()&lt;/code&gt; it to turn it into executable code. I have found &lt;code&gt;eval()&lt;/code&gt; in this particular situation the exact opposite of evil.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항상 나쁜 생각은 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 생성을 예로 들어 보겠습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필자는 최근 &lt;/font&gt;&lt;a href=&quot;https://github.com/Matt-Esch/virtual-dom&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;virtual-dom&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;handlebars&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 격차를 해소하는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vincentracine/hyperbars&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hyperbars&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라는 라이브러리를 작성했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;핸들 바 템플릿을 파싱하고이를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이후 virtual-dom에서 사용하는 &lt;/font&gt;&lt;a href=&quot;https://github.com/dominictarr/hyperscript&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하이퍼 스크립트&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 변환하여이를 수행합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하이퍼 스크립트는 먼저 문자열로 생성되고 반환하기 전에 &lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 실행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 변환합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 특정 상황에서 &lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 악의 정반대 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라는 것을 알았습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31da5fad3f0e5a2f90cae8dbe47b9ff1d4257b20" translate="yes" xml:space="preserve">
          <source>It's not necessarily that bad provided you know what context you're using it in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용중인 컨텍스트를 알고 있다면 반드시 나쁘지는 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fdf367987c4f683a398eb84746d6c7cffa8f46a" translate="yes" xml:space="preserve">
          <source>Mainly, it's a lot harder to maintain and debug. It's like a &lt;code&gt;goto&lt;/code&gt;. You can use it, but it makes it harder to find problems and harder on the people who may need to make changes later.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주로 유지 관리 및 디버그가 훨씬 어렵습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;goto&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 수는 있지만 나중에 변경해야 할 사람들에게 문제를 찾기 어렵고 어렵게 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6816994f89090ba2d1e15d75329ea4bd59ca4afc" translate="yes" xml:space="preserve">
          <source>One thing to keep in mind is that you can often use eval() to execute code in an otherwise restricted environment - social networking sites that block specific JavaScript functions can sometimes be fooled by breaking them up in an eval block -</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명심해야 할 것은 eval ()을 사용하여 제한된 환경에서 코드를 실행할 수 있다는 것입니다. 특정 JavaScript 함수를 차단하는 소셜 네트워킹 사이트는 eval 블록으로 분리하여 속일 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="286c00910c6d09f3a9fbe2684368745980787a14" translate="yes" xml:space="preserve">
          <source>Passing user input to eval() is a security risk, but also each invocation of eval() creates a new instance of the JavaScript interpreter. This can be a resource hog.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자 입력을 eval ()에 전달하는 것은 보안 위험이지만 eval ()을 호출 할 때마다 JavaScript 인터프리터의 새 인스턴스가 작성됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 자원 돼지 일 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df4727fbdcb3341721f9c555bf1cbb200fd36b28" translate="yes" xml:space="preserve">
          <source>Performance: until the code to be executed is unknown, it cannot be optimized.  (about javascript and performance, certainly &lt;a href=&quot;http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html&quot;&gt;Steve Yegge's presentation&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;성능 : 실행될 코드를 알 수 없을 때까지 최적화 할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(자바 스크립트 및 성능, 확실히 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://steve-yegge.blogspot.com/2008/05/dynamic-languages-strike-back.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Steve Yegge의 프레젠테이션&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64aa4d557cc62d15e8de600185aa21dbf6018da0" translate="yes" xml:space="preserve">
          <source>Reference :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e60db53c154faf8e7afbee52db6ba5fc5c47e87" translate="yes" xml:space="preserve">
          <source>Security (but as long as you generate the string to be evaluated yourself, this might be a non-issue)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보안 (그러나 사용자가 직접 평가할 문자열을 생성하는 한 문제가 아닐 수 있음)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14685695470c1f8b261fc20c5c317f1a512aa650" translate="yes" xml:space="preserve">
          <source>So if you're looking to run some JavaScript code where it might not otherwise be allowed (&lt;a href=&quot;http://en.wikipedia.org/wiki/Myspace&quot;&gt;Myspace&lt;/a&gt;, I'm looking at you...) then eval() can be a useful trick.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 허용되지 않을 수있는 JavaScript 코드를 실행하려는 경우 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Myspace&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Myspace&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 당신을보고 있습니다 ...) eval ()은 유용한 트릭입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29ca7e51eaa8f10f1aa783d05d0cdd8080017091" translate="yes" xml:space="preserve">
          <source>Something as simple as the above code causes a small amount of memory to be store until the app dies. 
This is worse when the evaled script is a giant function, and called on interval.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 코드만큼 간단한 것은 앱이 죽을 때까지 적은 양의 메모리가 저장되도록합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;회피 된 스크립트가 거대한 함수이고 간헐적으로 호출 될 때 이것은 더 나쁩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="41399e76633f1ba3e54bb4e075d2084afd4fcd9f" translate="yes" xml:space="preserve">
          <source>The JavaScript Engine has a number of performance optimizations that it performs during the compilation phase. Some of these boil down to being able to essentially statically analyze the code as it lexes, and pre-determine where all the variable and function declarations are, so that it takes less effort to resolve identifiers during execution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript 엔진에는 컴파일 단계에서 수행하는 여러 가지 성능 최적화 기능이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 중 일부는 코드가 실행되는 동안 코드를 본질적으로 정적으로 분석하고 모든 변수 및 함수 선언이있는 위치를 미리 결정하여 실행 중에 식별자를 확인하는 데 드는 노력을 덜 들게됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="148e0c7f81d9a3698c5049c257860541935ee71e" translate="yes" xml:space="preserve">
          <source>The browsers garbage collection has no idea if the code that's eval'ed can be removed from memory so it just keeps it stored until the page is reloaded. 
Not too bad if your users are only on your page shortly, but it can be a problem for webapp's.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;브라우저 가비지 수집은 평가 된 코드를 메모리에서 제거 할 수 있는지 여부를 모릅니다. 따라서 페이지를 다시로드 할 때까지 코드를 저장 상태로 유지합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자가 곧 페이지에 있으면 웹앱에 문제가 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24be6ca54f3f04a72a882c99dcb539c99444e81b" translate="yes" xml:space="preserve">
          <source>The eval function is a powerful and easy way to dynamically generate code, so what are the caveats?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval 함수는 코드를 동적으로 생성하는 강력하고 쉬운 방법이므로주의 할 점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68865d1d8d64a6c8ba9da456612b2787bc0b5b95" translate="yes" xml:space="preserve">
          <source>The other thing is that the better You get the more You try to understand and finally You just don't believe that something is good or bad just because someone said so :) 
This is a very inspirational &lt;a href=&quot;http://www.youtube.com/watch?v=MFtijdklZDo&quot;&gt;video&lt;/a&gt; that helped me to think more by myself :) GOOD PRACTICES are good, but don't use them mindelessly :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 것은 더 나은 당신이 얻을 것이다 더 많이 이해하려고 노력 그리고 마지막으로 당신은 그냥 뭔가 누군가가 그렇게 :)이 매우 영감했다해서 좋거나 나쁜 생각하지 않는다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=MFtijdklZDo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비디오&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나 자신에 의해 더 생각하는 데 도움이 :) 좋은 연습은 좋지만 마음대로 사용하지 마십시오. :)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d16f9ac85bd63b35f45508e21cf50ad7aeb3cb1f" translate="yes" xml:space="preserve">
          <source>The performance of &lt;code&gt;eval()&lt;/code&gt; isn't an issue in a situation like this because you only need to interpret the generated string once and then reuse the executable output many times over.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 성능은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성 된 문자열을 한 번만 해석 한 다음 실행 가능한 출력을 여러 번 재사용해야하기 때문에 이와 같은 상황에서는 문제가되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7633212c2dd3cc676f1ba1372322ebac779d750f" translate="yes" xml:space="preserve">
          <source>There is a small potential
benefit because the code evaluated in new Function() will be running in a local function
scope, so any variables defined with var in the code being evaluated will not become
globals automatically.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new Function ()에서 평가 된 코드가 로컬 함수 범위에서 실행되므로 평가중인 코드에서 var로 정의 된 모든 변수가 자동으로 전역 변수가되지 않기 때문에 잠재적 인 이점이 거의 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4584f4b326d529ce961e584e35dd41b651162eb7" translate="yes" xml:space="preserve">
          <source>This
function takes an arbitrary string and executes it as JavaScript code. When the code in
question is known beforehand (not determined at runtime), there&amp;rsquo;s no reason to use
eval(). 
If the code is dynamically generated at runtime, there&amp;rsquo;s often a better way to
achieve the goal without eval(). 
For example, just using square bracket notation to
access dynamic properties is better and simpler:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수는 임의의 문자열을 받아서 JavaScript 코드로 실행합니다. 문제의 코드를 미리 알고 있으면 (런타임에 결정되지 않음) eval ()을 사용할 이유가 없습니다. 런타임에 코드가 동적으로 생성되면 eval ()없이 목표를 달성하는 더 좋은 방법이 종종 있습니다. 예를 들어 대괄호 표기법을 사용하여 동적 속성에 액세스하는 것이 더 좋고 간단합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ccfc53cb017769dd7ae987a142efdb9302c67cd" translate="yes" xml:space="preserve">
          <source>This explains it all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 모든 것을 설명합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee72c7e2a527cacf1dc21f1420f881a587b5bf1d" translate="yes" xml:space="preserve">
          <source>This is one of good articles talking about eval and how it is not an evil:
&lt;a href=&quot;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&quot;&gt;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 eval에 대해 이야기하고 악이 아닌 방법에 대해 이야기하는 좋은 기사 중 하나입니다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="206747b449bd6d921232d550ccc476c2741e014c" translate="yes" xml:space="preserve">
          <source>This may become more of an issue as the next generation of browsers come out with some flavor of a JavaScript compiler. Code executed via Eval may not perform as well as the rest of your JavaScript against these newer browsers. Someone should do some profiling.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차세대 브라우저가 약간의 JavaScript 컴파일러와 함께 나올 때 이것은 더 큰 문제가 될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eval을 통해 실행 된 코드는 이러한 최신 브라우저에 대해 나머지 JavaScript만큼 성능이 떨어질 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;누군가 프로파일 링을해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0f8ad23e65b95f25bbdd8df86f29ae3982527e0" translate="yes" xml:space="preserve">
          <source>To give an all-too-typical example, to set the colour of an element with an id stored in the variable 'potato':</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수를 'potato'에 저장 한 id로 요소의 색상을 설정하려면 너무 일반적인 예를 들자면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4c65e507b7f93297ee2268d7252cbd7eb37d296" translate="yes" xml:space="preserve">
          <source>To this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이에&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b34c39225645dafeee78e3812eddc5e31d4bb53b" translate="yes" xml:space="preserve">
          <source>Two points come to mind:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 가지 점이 생각납니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9b8f5845abccd0b52ea08432402c9e42002ef09" translate="yes" xml:space="preserve">
          <source>Unless you are 100% sure that the code being evaluated is from a trusted source (usually your own application) then it's a surefire way of exposing your system to a cross-site scripting attack.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;평가중인 코드가 신뢰할 수있는 소스 (일반적으로 자신의 응용 프로그램)에서 온 것임을 100 % 확신하지 않는 한 시스템을 사이트 간 스크립팅 공격에 노출시키는 확실한 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3090c0855982eee09e2769634d70840bc3e123f" translate="yes" xml:space="preserve">
          <source>Unless you let eval() a dynamic content (through cgi or input), it is as safe and solid as all other JavaScript in your page.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval ()이 cgi 또는 input을 통해 동적 내용을 허용하지 않으면 페이지의 다른 모든 JavaScript와 마찬가지로 안전하고 견고합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="828ef76c49e81348c8216226d09ee2f8044a35d7" translate="yes" xml:space="preserve">
          <source>Untrusted client-side JavaScript code can't do that much anyway. Provided the thing you're executing &lt;code&gt;eval()&lt;/code&gt; on has come from a reasonable source, you're fine.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;신뢰할 수없는 클라이언트 측 JavaScript 코드는 어쨌든 그렇게 할 수 없습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행하는 것이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합리적인 소스에서 온 것이라면 괜찮습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9d7c43ed517909799508794915cbb170a228986" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;eval()&lt;/code&gt; also has security implications, because you might be executing code (for
example coming from the network) that has been tampered with. 
This is a common antipattern when dealing with a JSON response from an Ajax request. 
In those cases
it&amp;rsquo;s better to use the browsers&amp;rsquo; built-in methods to parse the JSON response to make
sure it&amp;rsquo;s safe and valid. For browsers that don&amp;rsquo;t support &lt;code&gt;JSON.parse()&lt;/code&gt; natively, you can
use a library from JSON.org.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;조작 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 (예 : 네트워크에서 온 코드)를 실행 중일 수 있으므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보안에 영향을줍니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 Ajax 요청의 JSON 응답을 처리 할 때 일반적인 반 패턴입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 경우 브라우저의 내장 메소드를 사용하여 JSON 응답을 구문 분석하여 안전하고 유효한지 확인하는 것이 좋습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기본적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지원하지 않는 브라우저의 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.org의 라이브러리를 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6b34e4ed2beda88578b9d4ffae571828b3a96fe" translate="yes" xml:space="preserve">
          <source>Using the new Function() constructor is similar to eval() and should be approached
with care. It could be a powerful construct but is often misused. 
If you absolutely must
use &lt;code&gt;eval()&lt;/code&gt;, you can consider using new Function() instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new Function () 생성자를 사용하는 것은 eval ()과 유사하며주의해서 접근해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 강력한 구조 일 수 있지만 종종 오용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반드시 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용해야하는 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 new Function () 사용을 고려할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfd49273a1375934f5c848fad258380f58fc832e" translate="yes" xml:space="preserve">
          <source>Why is using the JavaScript eval function a bad idea</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript eval 함수를 사용하는 것이 나쁜 생각 인 이유&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="baa0684dab15c8994c1b20edf616d0265609e87c" translate="yes" xml:space="preserve">
          <source>You can see how the code generation was achieved if you're curious &lt;a href=&quot;https://github.com/vincentracine/hyperbars/blob/master/src/hyperbars.js#L131&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 당신이 궁금하면 코드 생성이 달성 방식을 볼 수 있습니다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/vincentracine/hyperbars/blob/master/src/hyperbars.js#L131&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ee2d5d74a937a388d34da3fa1e839789d7bfc1" translate="yes" xml:space="preserve">
          <source>eval isn't always evil. There are times where it's perfectly appropriate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;평가가 항상 악한 것은 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완벽하게 적절한 때가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe78ef92fe2e03888205d149e55224d05ac1f054" translate="yes" xml:space="preserve">
          <source>eval'd code executes slower (no opportunity to compile/cache eval'd code)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval'd 코드가 느리게 실행 됨 (eval'd 코드를 컴파일 / 캐시 할 기회 없음)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2237830e035cd30c9631188a7c1490660cccb742" translate="yes" xml:space="preserve">
          <source>eval() is very powerful and can be used to execute a JS statement or evaluate an expression. But the question isn't about the uses of eval() but lets just say some how the string you running with eval() is affected by a malicious party. At the end you will be running malicious code. With power comes great responsibility. So use it wisely is you are using it. 
 This isn't related much to eval() function but this article has pretty good information:
 &lt;a href=&quot;http://blogs.popart.com/2009/07/javascript-injection-attacks/&quot;&gt;http://blogs.popart.com/2009/07/javascript-injection-attacks/&lt;/a&gt;
If you are looking for the basics of eval() look here: 
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval ()은 매우 강력하며 JS 문을 실행하거나 표현식을 평가하는 데 사용할 수 있습니다. 그러나 질문은 eval ()의 사용에 관한 것이 아니라 eval ()으로 실행하는 문자열이 악의적 인 당사자에 의해 어떻게 영향을 받는지 간단히 말해줍니다. 결국 악성 코드가 실행됩니다. 힘으로 큰 책임이 따른다. 따라서 현명하게 사용하십시오. 이것은 평가에 많은 관련이 없습니다 () 함수하지만이 문서가 꽤 좋은 정보를 가지고 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.popart.com/2009/07/javascript-injection-attacks/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://blogs.popart.com/2009/07/javascript-injection-attacks/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신이 평가의 기초를 찾고 있다면 () 여기를보십시오 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d118d441bbdad12f46b572679b98788e81ea43d" translate="yes" xml:space="preserve">
          <source>which is more reliable than the dodgy old trick of accessing DOM elements straight out of the document object.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서 객체에서 DOM 요소에 직접 액세스하는 오래된 트릭보다 더 안정적입니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
