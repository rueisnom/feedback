<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/5240789">
    <body>
      <group id="5240789">
        <trans-unit id="f933529d12a63f827169f14187c497d37d908102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scanf&lt;/code&gt; will then read the next char (that is, the newline) but not assign it to any pointer.</source>
          <target state="translated">&lt;code&gt;scanf&lt;/code&gt; は次の文字（つまり改行）を読み取りますが、それをポインターに割り当てません。</target>
        </trans-unit>
        <trans-unit id="cc7c3bf8e123d90d4454e06d240b02290f468268" translate="yes" xml:space="preserve">
          <source>Another option (that I got from &lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;here&lt;/a&gt;) is to read and discard the newline by using the &lt;em&gt;assignment-supression option&lt;/em&gt;. To do that, we just put a format to read a character with an asterisk between &lt;code&gt;%&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;:</source>
          <target state="translated">別のオプション（ &lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;ここ&lt;/a&gt;から得たもの ）は、 &lt;em&gt;割り当て抑制オプション&lt;/em&gt;を使用して改行を読み取って破棄する&lt;em&gt;こと&lt;/em&gt;です。 これを行うには、 &lt;code&gt;%&lt;/code&gt; と &lt;code&gt;c&lt;/code&gt; の間にアスタリスクが付いた文字を読み取るための形式を指定します。</target>
        </trans-unit>
        <trans-unit id="046b39dee7fbf35f062765618aa86395d876dcbb" translate="yes" xml:space="preserve">
          <source>As I read in the C book, the author says that &lt;code&gt;scanf()&lt;/code&gt; left a new line character in the buffer, therefore, the program does not stop at line 4 for user to enter the data, rather it stores the new line character in c2 and moves to line 5.</source>
          <target state="translated">Cの本を読んだとき、作者は &lt;code&gt;scanf()&lt;/code&gt; がバッファに改行文字を残したため、ユーザーがデータを入力するためにプログラムが4行目で停止するのではなく、改行文字をc2に保存すると言います。 5行目に移動します。</target>
        </trans-unit>
        <trans-unit id="825625d111b9b10f7717d1b26fd8039db163f2ee" translate="yes" xml:space="preserve">
          <source>However, does this only happen with &lt;code&gt;char&lt;/code&gt; data types? Because I did not see this problem with &lt;code&gt;int&lt;/code&gt; data types as in line 1, 2, 3. Is it right?</source>
          <target state="translated">ただし、これは &lt;code&gt;char&lt;/code&gt; データ型でのみ発生しますか？ 1、2、3行目のように、 &lt;code&gt;int&lt;/code&gt; データ型でこの問題が発生しなかったためです。</target>
        </trans-unit>
        <trans-unit id="5f974fb8b827999733ad10a4b6e99eac950a4dad" translate="yes" xml:space="preserve">
          <source>I have the following program:</source>
          <target state="translated">私は以下のようなプログラムを持っています。</target>
        </trans-unit>
        <trans-unit id="8c9fee72c5f2cfd8616dd20d0d6e90683f071bfd" translate="yes" xml:space="preserve">
          <source>In the end, however, I would second &lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;the FAQ's last option&lt;/a&gt;:</source>
          <target state="translated">しかし、最後に、私は&lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;FAQの最後のオプションを&lt;/a&gt; 2番目にします 。</target>
        </trans-unit>
        <trans-unit id="761e1e531d5379ce8ff1bd64d090ba4983f59ccc" translate="yes" xml:space="preserve">
          <source>Is that right?</source>
          <target state="translated">そうなんですか?</target>
        </trans-unit>
        <trans-unit id="4f94e199059b049ac1280e4330baba0b53592ad0" translate="yes" xml:space="preserve">
          <source>Note that non-whitespace &quot;directives&quot; (to use &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt;POSIX scanf terminology&lt;/a&gt;) other than conversions, like the literal text in &lt;code&gt;scanf(&quot;order = %d&quot;, &amp;amp;order);&lt;/code&gt; doesn't skip whitespace either.  The literal &lt;code&gt;order&lt;/code&gt; has to match the next character to be read.</source>
          <target state="translated">&lt;code&gt;scanf(&quot;order = %d&quot;, &amp;amp;order);&lt;/code&gt; のリテラルテキストのように、変換以外の空白以外の &quot;ディレクティブ&quot;（ &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt;POSIX scanf用語&lt;/a&gt;を使用する）に注意してください。 空白もスキップしません。 文字通りの &lt;code&gt;order&lt;/code&gt; は、次に読み取られる文字と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="724e7966571c209b3e01084023429cabcc8f5ad9" translate="yes" xml:space="preserve">
          <source>Note that this still doesn't consume any trailing whitespace left in the input stream, not even to the end of a line, so beware of that if also using &lt;a href=&quot;http://en.cppreference.com/w/c/io/getchar&quot;&gt;&lt;code&gt;getchar()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://en.cppreference.com/w/c/io/fgets&quot;&gt;&lt;code&gt;fgets()&lt;/code&gt;&lt;/a&gt; on the same input stream.  We're just getting scanf to skip over whitespace &lt;em&gt;before&lt;/em&gt; conversions, like it does for &lt;code&gt;%d&lt;/code&gt; and other non-character conversions.</source>
          <target state="translated">これでも、行の終わりまでではなく、入力ストリームに残っている末尾の空白は消費されないので、同じ入力ストリームで&lt;a href=&quot;http://en.cppreference.com/w/c/io/getchar&quot;&gt; &lt;code&gt;getchar()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;http://en.cppreference.com/w/c/io/fgets&quot;&gt; &lt;code&gt;fgets()&lt;/code&gt; &lt;/a&gt;を使用する場合は注意してください。 &lt;code&gt;%d&lt;/code&gt; やその他の文字以外の変換の場合と同様に、変換&lt;em&gt;前に&lt;/em&gt; scanfが空白をスキップするようにしています。</target>
        </trans-unit>
        <trans-unit id="66a0938676e71d234343b452186d8c4dabcb624d" translate="yes" xml:space="preserve">
          <source>Or, depending on your requirements, you could also forget about scanf()/getchar(), use fgets() to get a line of text from the user and parse it yourself.</source>
          <target state="translated">あるいは、必要に応じて、scanf()getchar()を忘れて、fgets()を使ってユーザからテキストの行を取得し、自分でそれを解析することもできます。</target>
        </trans-unit>
        <trans-unit id="3d7f898e9536b25b8fae927214a88358936787a1" translate="yes" xml:space="preserve">
          <source>So you probably want &lt;code&gt;&quot; order = %d&quot;&lt;/code&gt; there if you want to skip a newline from the previous line but still require a literal match on a fixed string, &lt;a href=&quot;https://stackoverflow.com/questions/49923312/scanf-run-twice-instead-of-one-time-at-assembly-x86-64&quot;&gt;like this question&lt;/a&gt;.</source>
          <target state="translated">したがって、前の行から改行をスキップしたいが、 &lt;a href=&quot;https://stackoverflow.com/questions/49923312/scanf-run-twice-instead-of-one-time-at-assembly-x86-64&quot;&gt;この質問のよう&lt;/a&gt;に、固定文字列でリテラルの一致が必要な場合は、おそらくそこに &lt;code&gt;&quot; order = %d&quot;&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="3c00448b2e4fd712712cda090d3c14cda6d3142b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt;&lt;code&gt;scanf()&lt;/code&gt;&lt;/a&gt; function skips leading whitespace automatically before trying to parse conversions other than characters.  The character formats (primarily &lt;code&gt;%c&lt;/code&gt;; also scan sets &lt;code&gt;%[&amp;hellip;]&lt;/code&gt; &amp;mdash; and &lt;code&gt;%n&lt;/code&gt;) are the exception; they don't skip whitespace.</source>
          <target state="translated">&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt; &lt;code&gt;scanf()&lt;/code&gt; &lt;/a&gt;関数は、文字以外の変換を解析する前に、先頭の空白を自動的にスキップします。 文字フォーマット（主に &lt;code&gt;%c&lt;/code&gt; ;スキャンセット &lt;code&gt;%[&amp;hellip;]&lt;/code&gt; &amp;mdash;および &lt;code&gt;%n&lt;/code&gt; ）は例外です。 空白をスキップしません。</target>
        </trans-unit>
        <trans-unit id="646a629b1c7bd53cfa549e3b4607aecb21fd6ab0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&quot; %c&quot;&lt;/code&gt; with a leading blank to skip optional white space.  Do not use a trailing blank in a &lt;code&gt;scanf()&lt;/code&gt; format string.</source>
          <target state="translated">&lt;code&gt;&quot; %c&quot;&lt;/code&gt; を先頭に空白を付けて使用すると、オプションの空白をスキップできます。 &lt;code&gt;scanf()&lt;/code&gt; 形式の文字列では、末尾の空白を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="9b2af5c9e78f20f0c0b651f3c3b40d58f355fbbb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getchar()&lt;/code&gt; before calling second &lt;code&gt;scanf()&lt;/code&gt;.</source>
          <target state="translated">2番目の &lt;code&gt;scanf()&lt;/code&gt; を呼び出す前に &lt;code&gt;getchar()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="5bc4388c0d38b4213c63476101d6b199eab0366d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;scanf(&quot; %c&quot;, &amp;amp;c2);&lt;/code&gt;. This will solve your problem.</source>
          <target state="translated">&lt;code&gt;scanf(&quot; %c&quot;, &amp;amp;c2);&lt;/code&gt; 。 これはあなたの問題を解決します。</target>
        </trans-unit>
        <trans-unit id="a657963f850559de4877656311a7b69804613b50" translate="yes" xml:space="preserve">
          <source>scanf() leaves the new line char in the buffer</source>
          <target state="translated">scanf()は新しい行の文字をバッファに残します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
