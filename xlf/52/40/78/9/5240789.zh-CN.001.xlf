<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/5240789">
    <body>
      <group id="5240789">
        <trans-unit id="f933529d12a63f827169f14187c497d37d908102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scanf&lt;/code&gt; will then read the next char (that is, the newline) but not assign it to any pointer.</source>
          <target state="translated">然后 &lt;code&gt;scanf&lt;/code&gt; 将读取下一个字符（即换行符），但不会将其分配给任何指针。</target>
        </trans-unit>
        <trans-unit id="cc7c3bf8e123d90d4454e06d240b02290f468268" translate="yes" xml:space="preserve">
          <source>Another option (that I got from &lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;here&lt;/a&gt;) is to read and discard the newline by using the &lt;em&gt;assignment-supression option&lt;/em&gt;. To do that, we just put a format to read a character with an asterisk between &lt;code&gt;%&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;:</source>
          <target state="translated">另一个选项（我从&lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;这里&lt;/a&gt;得到）是通过使用&lt;em&gt;assignment-supression选项&lt;/em&gt;读取和丢弃换行符。 为此，我们只需要输入一种格式来读取 &lt;code&gt;%&lt;/code&gt; 和 &lt;code&gt;c&lt;/code&gt; 之间带有星号的字符：</target>
        </trans-unit>
        <trans-unit id="046b39dee7fbf35f062765618aa86395d876dcbb" translate="yes" xml:space="preserve">
          <source>As I read in the C book, the author says that &lt;code&gt;scanf()&lt;/code&gt; left a new line character in the buffer, therefore, the program does not stop at line 4 for user to enter the data, rather it stores the new line character in c2 and moves to line 5.</source>
          <target state="translated">正如我在C本书中所读的那样，作者说 &lt;code&gt;scanf()&lt;/code&gt; 在缓冲区中留下了新行字符，因此，该程序不会在用户输入数据的第4行处停止，而是将新行字符存储在c2中并移至第5行。</target>
        </trans-unit>
        <trans-unit id="825625d111b9b10f7717d1b26fd8039db163f2ee" translate="yes" xml:space="preserve">
          <source>However, does this only happen with &lt;code&gt;char&lt;/code&gt; data types? Because I did not see this problem with &lt;code&gt;int&lt;/code&gt; data types as in line 1, 2, 3. Is it right?</source>
          <target state="translated">但是，这仅在 &lt;code&gt;char&lt;/code&gt; 数据类型中发生吗？ 因为我没有看到第1、2、3行中的 &lt;code&gt;int&lt;/code&gt; 数据类型的问题，对吗？</target>
        </trans-unit>
        <trans-unit id="5f974fb8b827999733ad10a4b6e99eac950a4dad" translate="yes" xml:space="preserve">
          <source>I have the following program:</source>
          <target state="translated">我有以下程序。</target>
        </trans-unit>
        <trans-unit id="8c9fee72c5f2cfd8616dd20d0d6e90683f071bfd" translate="yes" xml:space="preserve">
          <source>In the end, however, I would second &lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;the FAQ's last option&lt;/a&gt;:</source>
          <target state="translated">最后，我将&lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;选择FAQ的最后一个选项&lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="761e1e531d5379ce8ff1bd64d090ba4983f59ccc" translate="yes" xml:space="preserve">
          <source>Is that right?</source>
          <target state="translated">是这样吗?</target>
        </trans-unit>
        <trans-unit id="4f94e199059b049ac1280e4330baba0b53592ad0" translate="yes" xml:space="preserve">
          <source>Note that non-whitespace &quot;directives&quot; (to use &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt;POSIX scanf terminology&lt;/a&gt;) other than conversions, like the literal text in &lt;code&gt;scanf(&quot;order = %d&quot;, &amp;amp;order);&lt;/code&gt; doesn't skip whitespace either.  The literal &lt;code&gt;order&lt;/code&gt; has to match the next character to be read.</source>
          <target state="translated">请注意，转换以外的非空白&amp;ldquo;指令&amp;rdquo;（使用&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt;POSIX scanf术语&lt;/a&gt; ），例如 &lt;code&gt;scanf(&quot;order = %d&quot;, &amp;amp;order);&lt;/code&gt; 的原义文本。 也不会跳过空格。 文字 &lt;code&gt;order&lt;/code&gt; 必须匹配要读取的下一个字符。</target>
        </trans-unit>
        <trans-unit id="724e7966571c209b3e01084023429cabcc8f5ad9" translate="yes" xml:space="preserve">
          <source>Note that this still doesn't consume any trailing whitespace left in the input stream, not even to the end of a line, so beware of that if also using &lt;a href=&quot;http://en.cppreference.com/w/c/io/getchar&quot;&gt;&lt;code&gt;getchar()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://en.cppreference.com/w/c/io/fgets&quot;&gt;&lt;code&gt;fgets()&lt;/code&gt;&lt;/a&gt; on the same input stream.  We're just getting scanf to skip over whitespace &lt;em&gt;before&lt;/em&gt; conversions, like it does for &lt;code&gt;%d&lt;/code&gt; and other non-character conversions.</source>
          <target state="translated">请注意，这仍然不会消耗输入流中甚至行尾的空白，因此请注意在同一输入流上同时使用&lt;a href=&quot;http://en.cppreference.com/w/c/io/getchar&quot;&gt; &lt;code&gt;getchar()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;http://en.cppreference.com/w/c/io/fgets&quot;&gt; &lt;code&gt;fgets()&lt;/code&gt; &lt;/a&gt; 。 我们只是让scanf &lt;em&gt;在&lt;/em&gt;转换&lt;em&gt;前&lt;/em&gt;跳过空格，就像 &lt;code&gt;%d&lt;/code&gt; 和其他非字符转换一样。</target>
        </trans-unit>
        <trans-unit id="66a0938676e71d234343b452186d8c4dabcb624d" translate="yes" xml:space="preserve">
          <source>Or, depending on your requirements, you could also forget about scanf()/getchar(), use fgets() to get a line of text from the user and parse it yourself.</source>
          <target state="translated">或者,根据你的需求,你也可以忘记scanf()getchar(),使用fgets()从用户那里获取一行文字,然后自己解析。</target>
        </trans-unit>
        <trans-unit id="3d7f898e9536b25b8fae927214a88358936787a1" translate="yes" xml:space="preserve">
          <source>So you probably want &lt;code&gt;&quot; order = %d&quot;&lt;/code&gt; there if you want to skip a newline from the previous line but still require a literal match on a fixed string, &lt;a href=&quot;https://stackoverflow.com/questions/49923312/scanf-run-twice-instead-of-one-time-at-assembly-x86-64&quot;&gt;like this question&lt;/a&gt;.</source>
          <target state="translated">因此，如果您想从上一行跳过换行符，但仍需要在固定字符串上进行文字匹配，则可能需要 &lt;code&gt;&quot; order = %d&quot;&lt;/code&gt; ， &lt;a href=&quot;https://stackoverflow.com/questions/49923312/scanf-run-twice-instead-of-one-time-at-assembly-x86-64&quot;&gt;例如这个问题&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c00448b2e4fd712712cda090d3c14cda6d3142b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt;&lt;code&gt;scanf()&lt;/code&gt;&lt;/a&gt; function skips leading whitespace automatically before trying to parse conversions other than characters.  The character formats (primarily &lt;code&gt;%c&lt;/code&gt;; also scan sets &lt;code&gt;%[&amp;hellip;]&lt;/code&gt; &amp;mdash; and &lt;code&gt;%n&lt;/code&gt;) are the exception; they don't skip whitespace.</source>
          <target state="translated">&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt; &lt;code&gt;scanf()&lt;/code&gt; &lt;/a&gt;函数在尝试分析字符以外的转换之前会自动跳过前导空格。 字符格式（主要是 &lt;code&gt;%c&lt;/code&gt; ；还有扫描集 &lt;code&gt;%[&amp;hellip;]&lt;/code&gt; &amp;mdash;和 &lt;code&gt;%n&lt;/code&gt; ）是例外； 他们不会跳过空格。</target>
        </trans-unit>
        <trans-unit id="646a629b1c7bd53cfa549e3b4607aecb21fd6ab0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&quot; %c&quot;&lt;/code&gt; with a leading blank to skip optional white space.  Do not use a trailing blank in a &lt;code&gt;scanf()&lt;/code&gt; format string.</source>
          <target state="translated">使用 &lt;code&gt;&quot; %c&quot;&lt;/code&gt; 和前导空格可以跳过可选的空格。 不要在 &lt;code&gt;scanf()&lt;/code&gt; 格式字符串中使用尾随空白。</target>
        </trans-unit>
        <trans-unit id="9b2af5c9e78f20f0c0b651f3c3b40d58f355fbbb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getchar()&lt;/code&gt; before calling second &lt;code&gt;scanf()&lt;/code&gt;.</source>
          <target state="translated">在调用第二个 &lt;code&gt;scanf()&lt;/code&gt; 之前使用 &lt;code&gt;getchar()&lt;/code&gt; （） 。</target>
        </trans-unit>
        <trans-unit id="5bc4388c0d38b4213c63476101d6b199eab0366d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;scanf(&quot; %c&quot;, &amp;amp;c2);&lt;/code&gt;. This will solve your problem.</source>
          <target state="translated">使用 &lt;code&gt;scanf(&quot; %c&quot;, &amp;amp;c2);&lt;/code&gt; 。 这样可以解决您的问题。</target>
        </trans-unit>
        <trans-unit id="a657963f850559de4877656311a7b69804613b50" translate="yes" xml:space="preserve">
          <source>scanf() leaves the new line char in the buffer</source>
          <target state="translated">scanf()将新的行char留在缓冲区中</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
