<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/5240789">
    <body>
      <group id="5240789">
        <trans-unit id="f933529d12a63f827169f14187c497d37d908102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scanf&lt;/code&gt; will then read the next char (that is, the newline) but not assign it to any pointer.</source>
          <target state="translated">Затем &lt;code&gt;scanf&lt;/code&gt; прочитает следующий символ (то есть символ новой строки), но не назначит его ни одному указателю.</target>
        </trans-unit>
        <trans-unit id="cc7c3bf8e123d90d4454e06d240b02290f468268" translate="yes" xml:space="preserve">
          <source>Another option (that I got from &lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;here&lt;/a&gt;) is to read and discard the newline by using the &lt;em&gt;assignment-supression option&lt;/em&gt;. To do that, we just put a format to read a character with an asterisk between &lt;code&gt;%&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;:</source>
          <target state="translated">Другой вариант (который я получил &lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;отсюда&lt;/a&gt; ) - читать и отбрасывать символ новой строки, используя &lt;em&gt;опцию подавления присваивания&lt;/em&gt; . Для этого мы просто помещаем формат для чтения символа со звездочкой между &lt;code&gt;%&lt;/code&gt; и &lt;code&gt;c&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="046b39dee7fbf35f062765618aa86395d876dcbb" translate="yes" xml:space="preserve">
          <source>As I read in the C book, the author says that &lt;code&gt;scanf()&lt;/code&gt; left a new line character in the buffer, therefore, the program does not stop at line 4 for user to enter the data, rather it stores the new line character in c2 and moves to line 5.</source>
          <target state="translated">Как я читал в книге C, автор говорит, что &lt;code&gt;scanf()&lt;/code&gt; оставил символ новой строки в буфере, поэтому программа не останавливается на строке 4 для ввода данных пользователем, а сохраняет символ новой строки в c2 и переходит к строке 5.</target>
        </trans-unit>
        <trans-unit id="825625d111b9b10f7717d1b26fd8039db163f2ee" translate="yes" xml:space="preserve">
          <source>However, does this only happen with &lt;code&gt;char&lt;/code&gt; data types? Because I did not see this problem with &lt;code&gt;int&lt;/code&gt; data types as in line 1, 2, 3. Is it right?</source>
          <target state="translated">Однако происходит ли это только с типами данных &lt;code&gt;char&lt;/code&gt; ? Потому что я не видел этой проблемы с типами данных &lt;code&gt;int&lt;/code&gt; , как в строке 1, 2, 3. Это правильно?</target>
        </trans-unit>
        <trans-unit id="5f974fb8b827999733ad10a4b6e99eac950a4dad" translate="yes" xml:space="preserve">
          <source>I have the following program:</source>
          <target state="translated">У меня есть следующая программа:</target>
        </trans-unit>
        <trans-unit id="8c9fee72c5f2cfd8616dd20d0d6e90683f071bfd" translate="yes" xml:space="preserve">
          <source>In the end, however, I would second &lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;the FAQ's last option&lt;/a&gt;:</source>
          <target state="translated">В конце, однако, я бы &lt;a href=&quot;https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&amp;amp;id=1043284392&quot;&gt;поддержал последний вариант FAQ&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="761e1e531d5379ce8ff1bd64d090ba4983f59ccc" translate="yes" xml:space="preserve">
          <source>Is that right?</source>
          <target state="translated">Правда?</target>
        </trans-unit>
        <trans-unit id="4f94e199059b049ac1280e4330baba0b53592ad0" translate="yes" xml:space="preserve">
          <source>Note that non-whitespace &quot;directives&quot; (to use &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt;POSIX scanf terminology&lt;/a&gt;) other than conversions, like the literal text in &lt;code&gt;scanf(&quot;order = %d&quot;, &amp;amp;order);&lt;/code&gt; doesn't skip whitespace either.  The literal &lt;code&gt;order&lt;/code&gt; has to match the next character to be read.</source>
          <target state="translated">Обратите внимание, что непропускные &amp;laquo;директивы&amp;raquo; (для использования &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt;терминологии scanf&lt;/a&gt; для POSIX ), кроме преобразований, такие как буквальный текст в &lt;code&gt;scanf(&quot;order = %d&quot;, &amp;amp;order);&lt;/code&gt; также не пропускает пробелы. Буквенный &lt;code&gt;order&lt;/code&gt; должен соответствовать следующему символу, который будет прочитан.</target>
        </trans-unit>
        <trans-unit id="724e7966571c209b3e01084023429cabcc8f5ad9" translate="yes" xml:space="preserve">
          <source>Note that this still doesn't consume any trailing whitespace left in the input stream, not even to the end of a line, so beware of that if also using &lt;a href=&quot;http://en.cppreference.com/w/c/io/getchar&quot;&gt;&lt;code&gt;getchar()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://en.cppreference.com/w/c/io/fgets&quot;&gt;&lt;code&gt;fgets()&lt;/code&gt;&lt;/a&gt; on the same input stream.  We're just getting scanf to skip over whitespace &lt;em&gt;before&lt;/em&gt; conversions, like it does for &lt;code&gt;%d&lt;/code&gt; and other non-character conversions.</source>
          <target state="translated">Обратите внимание, что это по-прежнему не использует конечные пробелы, оставшиеся во входном потоке, даже до конца строки, поэтому остерегайтесь этого, если также использовать &lt;a href=&quot;http://en.cppreference.com/w/c/io/getchar&quot;&gt; &lt;code&gt;getchar()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;http://en.cppreference.com/w/c/io/fgets&quot;&gt; &lt;code&gt;fgets()&lt;/code&gt; &lt;/a&gt; в том же входном потоке. Мы просто заставляем scanf пропускать пробелы &lt;em&gt;перед&lt;/em&gt; преобразованиями, как это делается для &lt;code&gt;%d&lt;/code&gt; и других преобразований, не связанных с символами.</target>
        </trans-unit>
        <trans-unit id="66a0938676e71d234343b452186d8c4dabcb624d" translate="yes" xml:space="preserve">
          <source>Or, depending on your requirements, you could also forget about scanf()/getchar(), use fgets() to get a line of text from the user and parse it yourself.</source>
          <target state="translated">Или,в зависимости от ваших требований,вы также можете забыть о scanf()getchar(),использовать fgets(),чтобы получить строку текста от пользователя и разобрать его самостоятельно.</target>
        </trans-unit>
        <trans-unit id="3d7f898e9536b25b8fae927214a88358936787a1" translate="yes" xml:space="preserve">
          <source>So you probably want &lt;code&gt;&quot; order = %d&quot;&lt;/code&gt; there if you want to skip a newline from the previous line but still require a literal match on a fixed string, &lt;a href=&quot;https://stackoverflow.com/questions/49923312/scanf-run-twice-instead-of-one-time-at-assembly-x86-64&quot;&gt;like this question&lt;/a&gt;.</source>
          <target state="translated">Таким образом, вы, вероятно, захотите использовать здесь &lt;code&gt;&quot; order = %d&quot;&lt;/code&gt; если вы хотите пропустить новую строку из предыдущей строки, но при этом все же требуется буквальное совпадение с фиксированной строкой, &lt;a href=&quot;https://stackoverflow.com/questions/49923312/scanf-run-twice-instead-of-one-time-at-assembly-x86-64&quot;&gt;как этот вопрос&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c00448b2e4fd712712cda090d3c14cda6d3142b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt;&lt;code&gt;scanf()&lt;/code&gt;&lt;/a&gt; function skips leading whitespace automatically before trying to parse conversions other than characters.  The character formats (primarily &lt;code&gt;%c&lt;/code&gt;; also scan sets &lt;code&gt;%[&amp;hellip;]&lt;/code&gt; &amp;mdash; and &lt;code&gt;%n&lt;/code&gt;) are the exception; they don't skip whitespace.</source>
          <target state="translated">Функция &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/scanf.html&quot;&gt; &lt;code&gt;scanf()&lt;/code&gt; &lt;/a&gt; автоматически пропускает первые пробелы, прежде чем пытаться проанализировать преобразования, отличные от символов. Форматы символов (в основном &lt;code&gt;%c&lt;/code&gt; ; также наборы сканирования &lt;code&gt;%[&amp;hellip;]&lt;/code&gt; - и &lt;code&gt;%n&lt;/code&gt; ) являются исключением; они не пропускают пробелы.</target>
        </trans-unit>
        <trans-unit id="646a629b1c7bd53cfa549e3b4607aecb21fd6ab0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&quot; %c&quot;&lt;/code&gt; with a leading blank to skip optional white space.  Do not use a trailing blank in a &lt;code&gt;scanf()&lt;/code&gt; format string.</source>
          <target state="translated">Используйте &lt;code&gt;&quot; %c&quot;&lt;/code&gt; с начальным пробелом, чтобы пропустить необязательный пробел. Не используйте конечный пробел в строке формата &lt;code&gt;scanf()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b2af5c9e78f20f0c0b651f3c3b40d58f355fbbb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getchar()&lt;/code&gt; before calling second &lt;code&gt;scanf()&lt;/code&gt;.</source>
          <target state="translated">Используйте &lt;code&gt;getchar()&lt;/code&gt; перед вызовом второго &lt;code&gt;scanf()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bc4388c0d38b4213c63476101d6b199eab0366d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;scanf(&quot; %c&quot;, &amp;amp;c2);&lt;/code&gt;. This will solve your problem.</source>
          <target state="translated">Используйте &lt;code&gt;scanf(&quot; %c&quot;, &amp;amp;c2);&lt;/code&gt; , Это решит вашу проблему.</target>
        </trans-unit>
        <trans-unit id="a657963f850559de4877656311a7b69804613b50" translate="yes" xml:space="preserve">
          <source>scanf() leaves the new line char in the buffer</source>
          <target state="translated">scanf()оставляет в буфере новый строковый график</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
