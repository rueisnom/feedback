<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/529085">
    <body>
      <group id="529085">
        <trans-unit id="5256ba6e715004a286881bf75f6f52fb1d901799" translate="yes" xml:space="preserve">
          <source>-&amp;gt; in that case, you should write</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-&amp;gt;이 경우에는 작성해야합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b92d2040b4ab1ab2f2cbfe0316c2d2e2d1591c13" translate="yes" xml:space="preserve">
          <source>-&amp;gt; in that case, you should write:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 다음과 같이 작성해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2a9adb02b942d52dbe3c314f7f5d8acbadfcb05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt; itself is generic (declared as &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; stands for the type that the &lt;code&gt;Class&lt;/code&gt; object is representing), meaning that the type of &lt;code&gt;String.class&lt;/code&gt; is &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자체는 일반적입니다 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 선언되며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체가 나타내는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유형을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나타냄). 이는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 유형 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 임을 의미합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78d63fad6447bcd19ccc71052e9c5bfd51e5fcff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Checked&lt;/strong&gt;: &lt;em&gt;strong typing&lt;/em&gt;. &lt;code&gt;GenSet&lt;/code&gt; knows explicitly what type of objects it contains (i.e. its constructor was explicitly called with a &lt;code&gt;Class&amp;lt;E&amp;gt;&lt;/code&gt; argument, and methods will throw an exception when they are passed arguments that are not of type &lt;code&gt;E&lt;/code&gt;. See &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#checkedCollection%28java.util.Collection,%20java.lang.Class%29&quot;&gt;&lt;code&gt;Collections.checkedCollection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확인&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;강력한 타이핑&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 포함 된 객체 유형을 명시 적으로 알고 있습니다 (예 : 생성자가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;E&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 명시 적으로 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되었으며 메소드가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;E&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형이 아닌 인수를 전달하면 예외가 발생 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#checkedCollection%28java.util.Collection,%20java.lang.Class%29&quot;&gt; &lt;code&gt;Collections.checkedCollection&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a478f76417a8f9b71d1a58143d46c10f3a99e36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unchecked&lt;/strong&gt;: &lt;em&gt;weak typing&lt;/em&gt;. No type checking is actually done on any of the objects passed as argument.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선택하지 않은 경우&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약한 입력&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인수로 전달 된 객체에 대해서는 실제로 유형 검사가 수행되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fda34727fe4a8c3c6f27c6428b14c915bbf792ce" translate="yes" xml:space="preserve">
          <source>Actually an easier way to do so, is to create an array of objects and cast it to your desired type like the following example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 더 쉬운 방법은 객체 배열을 만들고 다음 예제와 같이 원하는 유형으로 캐스팅하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b27c1ffca74b49757bb2714552acded307ac2bdc" translate="yes" xml:space="preserve">
          <source>All of this results from a known, and deliberate, weakness of generics in Java: it was implemented using erasure, so &quot;generic&quot; classes don't know what type argument they were created with at run time, and therefore can not provide type-safety unless some explicit mechanism (type-checking) is implemented.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 모든 것은 Java에서 알려진 고의적이며 제네릭의 약점에서 비롯됩니다. 삭제를 사용하여 구현되었으므로 &quot;일반&quot;클래스는 런타임에 어떤 유형 인수로 작성되었는지 알 수 없으므로 유형을 제공 할 수 없습니다. 명시 적 메커니즘 (유형 검사)이 구현되지 않는 한 안전.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55c30268952da3aa86e683b07ed4972c026eb26b" translate="yes" xml:space="preserve">
          <source>Although we cannot instantiate a generic array of a specific type parameter, we can pass an already created array to a generic class constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 형식 매개 변수의 제네릭 배열을 인스턴스화 할 수는 없지만 이미 생성 된 배열을 제네릭 클래스 생성자에 전달할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d87d46e1c739b077ad3a79cd5e27875b6b946272" translate="yes" xml:space="preserve">
          <source>An easy, albeit messy workaround to this would be to nest a second &quot;holder&quot; class inside of your main class, and use it to hold your data.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것에 대한 쉬운 해결 방법은 주 클래스 내부에 두 번째 &quot;홀더&quot;클래스를 중첩시키고이를 사용하여 데이터를 보유하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1184a88ce9bf3b04a340710cf59420a373394d7" translate="yes" xml:space="preserve">
          <source>And the add function can be added like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 add 함수는 다음과 같이 추가 될 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="848056b577f734df63df4cbee87e2efbb71b38f1" translate="yes" xml:space="preserve">
          <source>Arrays on the other hand &lt;em&gt;do&lt;/em&gt; know their component type at runtime.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반면에 배열은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 런타임에 자신의 구성 요소 유형을 알고있다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85c828fc90d47c75cff32075e7d854019d39ca8d" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, this behavior is safe as long as the cast array is used internally (e.g. to back a data structure), and not returned or exposed to client code.  Should you need to return an array of a generic type to other code, the reflection &lt;code&gt;Array&lt;/code&gt; class you mention is the right way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로이 동작은 캐스트 배열이 내부적으로 (예 : 데이터 구조를 백업하기 위해) 사용되고 클라이언트 코드에 반환되거나 노출되지 않는 한 안전합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제네릭 형식의 배열을 다른 코드로 반환해야하는 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언급 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 리플렉션 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스가 올바른 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ae02f7d3480c40e465ef8f1cc2fcc7143d064d3" translate="yes" xml:space="preserve">
          <source>As others have said generics are &quot;erased&quot; during compilation. So at runtime an instance of a generic doesn't know what its component type is. The reason for this is historical, Sun wanted to add generics without breaking the existing interface (both source and binary).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 사람들이 말했듯이 컴파일 중에 제네릭이 &quot;지워졌습니다&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 런타임에 제네릭 인스턴스는 구성 요소 유형이 무엇인지 알 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 이유는 역사적으로, Sun은 기존 인터페이스 (소스 및 이진 모두)를 손상시키지 않고 제네릭을 추가하려고했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c3427736c68c1dc9cd88d3b18d103594bb9ec6eb" translate="yes" xml:space="preserve">
          <source>BeanUtils is part of Spring.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BeanUtils는 Spring의 일부입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a4c3995e1c36a52527e4933fe77e46b13e4a216" translate="yes" xml:space="preserve">
          <source>But I really don't get what's going on.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 나는 정말로 무슨 일이 일어나고 있지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6491ec2981a44a2be8839f5e8ef424385764dc71" translate="yes" xml:space="preserve">
          <source>Check this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 확인하십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9643af0511ba009bd3d8c9053fe41234a24cb86" translate="yes" xml:space="preserve">
          <source>Do don't worry about typecasting warnings when you are writing generic class. Worry when you are using it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제네릭 클래스를 작성할 때 타입 캐스팅 경고에 대해 걱정하지 마십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 때 걱정하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ae85e1afab64ec789fd9cc6abc7831ca23fd44d" translate="yes" xml:space="preserve">
          <source>Due to the implementation of Java generics, you can't have code like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 제네릭의 구현으로 인해 다음과 같은 코드를 가질 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a070cb875ce38f617daa7725277ba55fda758cdb" translate="yes" xml:space="preserve">
          <source>Edit regarding Ingo's comments:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ingo의 의견에 관한 편집 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f9abcab08970ebf58b6e42e52ff550eb98adc7c" translate="yes" xml:space="preserve">
          <source>Edit: Perhaps an alternate way of creating such an array, if the size you required was known and small, would be to simply feed the required number of &quot;null&quot;s into the zeroArray command?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 : 아마도 필요한 크기가 알려져 있고 작은 경우 이러한 배열을 만드는 다른 방법은 필요한 수의 &quot;null&quot;을 zeroArray 명령에 공급하는 것입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="72ff74127a0f808b8c6a3dd63fb3e33e1c3cc7cf" translate="yes" xml:space="preserve">
          <source>Finally we have a type cast because the compiler has no way of knowing that the array returned by &lt;code&gt;Array#newInstance()&lt;/code&gt; is the correct type (even though we know).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막으로 컴파일러는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array#newInstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의해 반환 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 올바른 형식 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;임을 알 수있는 방법이 없기 때문에 형식 캐스트가 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(아직 알고 있지만).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9caf0a34f39780f9e5d8f33e38f78e286553419" translate="yes" xml:space="preserve">
          <source>For example, this is used by &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#toArray-java.util.function.IntFunction-&quot;&gt;&lt;code&gt;&amp;lt;A&amp;gt; A[] Stream.toArray(IntFunction&amp;lt;A[]&amp;gt;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 이것은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#toArray-java.util.function.IntFunction-&quot;&gt; &lt;code&gt;&amp;lt;A&amp;gt; A[] Stream.toArray(IntFunction&amp;lt;A[]&amp;gt;)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의해 사용됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20e889c7939e047d457f409d0b44dea04a0cc1b9" translate="yes" xml:space="preserve">
          <source>For more flexibility with your arrays you can use a linked list eg. the ArrayList and other methods found in the Java.util.ArrayList class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열의 유연성을 높이기 위해 링크 된 목록을 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java.util.ArrayList 클래스에있는 ArrayList 및 기타 메소드&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb706c17ccc1b003bb39f24acd6128c68fc3ecb5" translate="yes" xml:space="preserve">
          <source>Generic array creation is disallowed in java but you can do it like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반 배열 생성은 Java에서 허용되지 않지만 다음과 같이 할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b103b2ec12d0f79896e129fa04e9ac22f011751" translate="yes" xml:space="preserve">
          <source>Generics is used for type checking during compile time:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제네릭은 컴파일 타임 동안 유형 검사에 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dae8b29e8c574cffe0e2ae657ea0ce2578078c3d" translate="yes" xml:space="preserve">
          <source>Here's how to use generics to get an array of precisely the type you&amp;rsquo;re looking for while preserving type safety (as opposed to the other answers, which will either give you back an &lt;code&gt;Object&lt;/code&gt; array or result in warnings at compile time):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 제네릭을 사용하여 형식 안전을 유지하면서 찾고있는 형식의 배열을 얻는 방법입니다 (다른 답변과 달리 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 반환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하거나 컴파일 타임에 경고를 표시 함).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e30cac4fe4524f6b8750c485a3528b017c302b3" translate="yes" xml:space="preserve">
          <source>Hi although the thread is dead, I would like to draw your attention to this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;안녕하세요 스레드가 죽었지 만 이것에주의를 기울이고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7092545bda55e9d49db1a3020b4de85b0af6aea3" translate="yes" xml:space="preserve">
          <source>How can I implement this while maintaining type safety?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;타입 안전을 유지하면서 이것을 어떻게 구현할 수 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b02fd75a6218b3d96c8fba8d980ab75ca6bc25b0" translate="yes" xml:space="preserve">
          <source>How to create a generic array in Java</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java에서 일반 배열을 만드는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2648e8d91872250ab267f8d15aff7b213e879359" translate="yes" xml:space="preserve">
          <source>However if I encapsulate &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; in a separate class, it works.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 별도의 클래스로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캡슐화 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="458c19a5b85d1c69a44e8d4db638e4a39a0ffe17" translate="yes" xml:space="preserve">
          <source>However, it would probably be better to use a List instead of an Array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 Array 대신 List를 사용하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af35105618053cf28b99a5e842ffe519693b21fa" translate="yes" xml:space="preserve">
          <source>However, this implicit cast worked fine:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 암시 적 캐스트는 정상적으로 작동했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb998e78166bdbeb52b8f59a5580fbad5a6c7cc2" translate="yes" xml:space="preserve">
          <source>I actually found a pretty unique solution to bypass the inability to initiate a generic array. What you have to do is create a class that takes in the generic variable T like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 제네릭 배열을 시작할 수 없다는 우회 할 수있는 매우 독특한 솔루션을 찾았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이해야 할 일은 다음과 같이 일반 변수 T를 취하는 클래스를 만드는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8102d5b25d37f57b41cfb492919248f4aec49c1" translate="yes" xml:space="preserve">
          <source>I find out the following works (and worked for me) with  &lt;code&gt;@SuppressWarnings({&quot;unchecked&quot;})&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@SuppressWarnings({&quot;unchecked&quot;})&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 함께 다음과 같은 작업을 발견했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2077a8b7a241451326b5fd0ee3e26e18c0bb9fc" translate="yes" xml:space="preserve">
          <source>I found a sort of a work around to this problem.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문제에 대한 일종의 해결 방법을 찾았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="138bc620e42e624d84f25de50b69e1879367e21f" translate="yes" xml:space="preserve">
          <source>I have found a quick and easy way that works for me. Note that i have only used this on Java JDK 8. I don't know if it will work with previous versions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 나를 위해 빠르고 쉬운 방법을 찾았습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java JDK 8에서만 이것을 사용했습니다. 이전 버전에서 작동하는지 모르겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25731a7951d4cc55181699535d4e8a33ede74607" translate="yes" xml:space="preserve">
          <source>I have to ask a question in return: is your &lt;code&gt;GenSet&lt;/code&gt; &quot;checked&quot; or &quot;unchecked&quot;?
What does that mean?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문에 답해야합니다 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; 이&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;체크&quot;또는 &quot;체크 해제&quot;입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그게 무슨 뜻이야?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94bf3e923cdc7de99a109e4724eb5b075cdc1ee1" translate="yes" xml:space="preserve">
          <source>I made this code snippet to reflectively instantiate a class which is passed for a simple automated test utility.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 코드 스 니펫을 작성하여 간단한 자동 테스트 유틸리티를 위해 전달되는 클래스를 반사적으로 인스턴스화했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4739343a2e3dc3dcf192f5507297f82c33c0904e" translate="yes" xml:space="preserve">
          <source>I needed something like this in some code I was working on and this is what I did to get it to work. So far no problems.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 작업하고있는 일부 코드에서 이와 같은 것이 필요했으며 이것이 작동하도록하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지금까지 아무런 문제가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b631fdf9b6d54720c72bd40b118520b2d7697f85" translate="yes" xml:space="preserve">
          <source>I saw a solution on the Java forums that goes like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 포럼에서 다음과 같은 솔루션을 보았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f102d0ccea342f912b579f5f17c866b0ad4b2bd" translate="yes" xml:space="preserve">
          <source>I'm wondering if this code would create an effective generic array?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 코드가 효과적인 일반 배열을 만들지 궁금합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdb56dbfb55184785a9349344e54ed2a5d37ca3b" translate="yes" xml:space="preserve">
          <source>If you really want to wrap a generic array of fixed size you will have a method to add data to that array, hence you can initialize properly the array there doing something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;고정 크기의 일반 배열을 실제로 래핑하려면 해당 배열에 데이터를 추가하는 방법이 있으므로 다음과 같이 배열을 올바르게 초기화 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21ceed053711f50516747d1e48937b61979c18aa" translate="yes" xml:space="preserve">
          <source>In Java 8, we can do a kind of generic array creation using a lambda or method reference. This is similar to the reflective approach (which passes a &lt;code&gt;Class&lt;/code&gt;), but here we aren't using reflection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8에서는 람다 또는 메서드 참조를 사용하여 일종의 일반 배열을 만들 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 반사 접근 방식과 유사 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 전달 함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;) 여기서는 반사를 사용하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd0e74871c6e95ff64be642dc705c62f2933b08c" translate="yes" xml:space="preserve">
          <source>Inside the constructor, calling the method &lt;code&gt;cast&lt;/code&gt; returns the passed &lt;code&gt;Object&lt;/code&gt; argument cast to the class represented by the &lt;code&gt;Class&lt;/code&gt; object on which the method was called. Calling the static method &lt;code&gt;newInstance&lt;/code&gt; in &lt;code&gt;java.lang.reflect.Array&lt;/code&gt; returns as an &lt;code&gt;Object&lt;/code&gt; an array of the type represented by the &lt;code&gt;Class&lt;/code&gt; object passed as the first argument and of the length specified by the &lt;code&gt;int&lt;/code&gt; passed as the second argument. Calling the method &lt;code&gt;getComponentType&lt;/code&gt; returns a &lt;code&gt;Class&lt;/code&gt; object representing the component type of the array represented by the &lt;code&gt;Class&lt;/code&gt; object on which the method was called (e.g. &lt;code&gt;String.class&lt;/code&gt; for &lt;code&gt;String[].class&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; if the &lt;code&gt;Class&lt;/code&gt; object doesn't represent an array).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자 안에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cast&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 호출하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달 된 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 메소드가 호출 된 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 오브젝트가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나타내는 클래스로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;리턴 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다. &lt;/font&gt; &lt;code&gt;java.lang.reflect.Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;static 메소드 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;newInstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 인수로 전달 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;된 &lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나타내는 유형의 배열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 인수로 전달 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;된 &lt;/font&gt; &lt;code&gt;int&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지정된 길이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 배열이 &lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 리턴됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 메소드 호출 &lt;/font&gt; &lt;code&gt;getComponentType&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 복귀 &lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열의 요소의 형태를 나타내는 객체에 의해 표현되는 &lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드가 호출되는 객체 (예 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 위한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String[].class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 경우 생성 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체가 배열을 나타내지 않음).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab602ec3b989efd8de962f4829da4165f1c65bac" translate="yes" xml:space="preserve">
          <source>It converts a list of any kind of object to an array of the same type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 종류의 객체 목록을 동일한 유형의 배열로 변환합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d6ab1f93011bae7b26c9070c55cba2fb2e0d73a" translate="yes" xml:space="preserve">
          <source>It works and looks too simple to be true. Is there any drawback?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작동하고 너무 단순 해 보이지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단점이 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4caa1bb1d671a9b3d20e4efc50482ed4f9fc723" translate="yes" xml:space="preserve">
          <source>It works by using class literals as runtime type tokens, as discussed in the &lt;a href=&quot;http://download.oracle.com/javase/tutorial/extra/generics/literals.html&quot;&gt;Java Tutorials&lt;/a&gt;. Class literals are treated by the compiler as instances of &lt;code&gt;java.lang.Class&lt;/code&gt;. To use one, simply follow the name of a class with &lt;code&gt;.class&lt;/code&gt;. So, &lt;code&gt;String.class&lt;/code&gt; acts as a &lt;code&gt;Class&lt;/code&gt; object representing the class &lt;code&gt;String&lt;/code&gt;. This also works for interfaces, enums, any-dimensional arrays (e.g. &lt;code&gt;String[].class&lt;/code&gt;), primitives (e.g. &lt;code&gt;int.class&lt;/code&gt;), and the keyword &lt;code&gt;void&lt;/code&gt; (i.e. &lt;code&gt;void.class&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://download.oracle.com/javase/tutorial/extra/generics/literals.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java Tutorials&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 설명한 것처럼 클래스 리터럴을 런타임 유형 토큰으로 사용하여 작동합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 클래스 리터럴은 컴파일러에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;java.lang.Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인스턴스로 처리됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 하나를 사용하려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스 이름을 따르십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스를 나타내는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 작동 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 인터페이스, 열거 형, 모든 차원 배열 (예 : &lt;/font&gt; &lt;code&gt;String[].class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), 프리미티브 (예 : &lt;/font&gt; &lt;code&gt;int.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 및 키워드 &lt;/font&gt; &lt;code&gt;void&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; (예 : &lt;/font&gt; &lt;code&gt;void.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; )에서도 작동합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba396f86823831061c16b320c0846d89f33589c4" translate="yes" xml:space="preserve">
          <source>Java generics work by checking types at compile time and inserting appropriate casts, but &lt;em&gt;erasing&lt;/em&gt; the types in the compiled files. This makes generic libraries usable by code which doesn't understand generics (which was a deliberate design decision) but which means you can't normally find out what the type is at run time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 제네릭은 컴파일 타임에 유형을 확인하고 적절한 캐스트를 삽입하지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일 된 파일에서 유형을 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지우는&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방식으로 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이로 인해 제네릭을 이해하지 못하는 (고의적 인 디자인 결정) 코드로 제네릭 라이브러리를 사용할 수 있지만 런타임시 유형이 무엇인지 일반적으로 알 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcfea5954d6b17c1cfa4f33dba97b45fc67dfaf1" translate="yes" xml:space="preserve">
          <source>Look also to this code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 코드를보십시오 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb35d38fdf528256e3a1b9f4f0e6795a26e709f9" translate="yes" xml:space="preserve">
          <source>Maybe unrelated to this question but while I was getting the &quot;&lt;code&gt;generic array creation&lt;/code&gt;&quot; error for using</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어쩌면이 질문과 관련이 없지만 사용하기 위해 &quot; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;generic array creation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;오류가 발생하는 동안&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76d45669c37265202c1a2bf3bdc6a10caeb9d640" translate="yes" xml:space="preserve">
          <source>No one else has answered the question of what is going on in the example you posted.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;귀하가 게시 한 예에서 무슨 일이 일어나고 있는지에 대한 아무도 대답하지 않았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4ebde56988a5443e56391d78606fb01d312f7f0" translate="yes" xml:space="preserve">
          <source>Note that the component type of the array should be the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/generics/erasure.html&quot;&gt;&lt;em&gt;erasure&lt;/em&gt;&lt;/a&gt; of the type parameter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열의 구성 요소 유형은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;type 매개 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/generics/erasure.html&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;삭제&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b17452d0896601f6affcd65767ebb0c3d4e264e" translate="yes" xml:space="preserve">
          <source>Note this segment:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 세그먼트에 유의하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f6c062767df7549894ad2c5420c2527bac277cd" translate="yes" xml:space="preserve">
          <source>Now in main we can create the array like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 메인에서 다음과 같이 배열을 만들 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c262fa05b18a24644a8fd81a6f55f5d93672732" translate="yes" xml:space="preserve">
          <source>Passing a list of values...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;값 목록 전달 중 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad86bdac95c44e53082548c0e593a344b6d4c2f5" translate="yes" xml:space="preserve">
          <source>Regarding Joachim Sauer's comment on &lt;a href=&quot;https://stackoverflow.com/questions/529085/java-how-to-generic-array-creation/529094#529094&quot;&gt;this answer&lt;/a&gt; (I don't have enough reputation to comment on it myself), the example using the cast to &lt;code&gt;T[]&lt;/code&gt; will result in a warning because the compiler can't guarantee type safety in that case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/529085/java-how-to-generic-array-creation/529094#529094&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 답변에 대한&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Joachim Sauer의 의견에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대해&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (나는 스스로 의견을 제시 할만큼 평판이 충분하지 않습니다), &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 캐스트를 사용하는 예제 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 컴파일러가 유형 안전을 보장 할 수 없기 때문에 경고를 표시합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3dc19ef1adf29bc710c8cae0527da16f0c1766a" translate="yes" xml:space="preserve">
          <source>Same goes for every method in &lt;code&gt;Class&lt;/code&gt; that returns a &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일은 모든 방법 간다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반환 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체를.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a7ed0b643ec86713d206693ab04c647d0197ceb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Array.html#newInstance%28java.lang.Class,%20int...%29&quot;&gt;&lt;code&gt;Array.newInstance()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Array.html#newInstance%28java.lang.Class,%20int...%29&quot;&gt; &lt;code&gt;Array.newInstance()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b15b301a124f2fbf4c643bcc7d4db7dc7feefb3b" translate="yes" xml:space="preserve">
          <source>So the application would construct the class with something like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 응용 프로그램은 다음과 같은 클래스를 구성합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ccbda7af81f65a30227bd7f3992b00b1b6f9903" translate="yes" xml:space="preserve">
          <source>So, whenever you call the constructor for &lt;code&gt;GenSet&lt;/code&gt;, you pass in a class literal for the first argument representing an array of the &lt;code&gt;GenSet&lt;/code&gt; instance's declared type (e.g. &lt;code&gt;String[].class&lt;/code&gt; for &lt;code&gt;GenSet&amp;lt;String&amp;gt;&lt;/code&gt;). Note that you won't be able to get an array of primitives, since primitives can't be used for type variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신의 생성자를 호출 할 때마다 그래서, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 당신은의 배열을 나타내는 첫 번째 인수에 대한 클래스 리터럴을 전달 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (예를 들어, 인스턴스의 선언 된 유형 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String[].class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&amp;lt;String&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프리미티브는 유형 변수에 사용할 수 없으므로 프리미티브 배열을 가져올 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7748f1a183c460e064f397442f9e3a24933cbd68" translate="yes" xml:space="preserve">
          <source>Still this is somewhat pointless: you store data via push and it is the signature of the method that guarantees only T elements will enter. So it is more or less irrelevant that the array is Object[] or T[].</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여전히 이것은 다소 의미가 없습니다. 푸시를 통해 데이터를 저장하면 T 요소 만 입력 할 수있는 방법의 서명입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 배열이 Object [] 또는 T [] 인 것은 다소 관련이 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d39d85a884e20788e0315bf98bc82e20a18d4d62" translate="yes" xml:space="preserve">
          <source>That compiles without warnings, and as you can see in &lt;code&gt;main&lt;/code&gt;, for whatever type you declare an instance of &lt;code&gt;GenSet&lt;/code&gt; as, you can assign &lt;code&gt;a&lt;/code&gt; to an array of that type, and you can assign an element from &lt;code&gt;a&lt;/code&gt; to a variable of that type, meaning that the array and the values in the array are of the correct type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일 경고없이, 그리고 당신이 볼 수 있다는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 무엇 이건 당신의 인스턴스 선언 유형, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 당신이 할당 할 수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 해당 유형의 배열에, 당신은에서 요소를 할당 할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 유형의 변수에, 배열과 배열의 값이 올바른 유형임을 의미합니다.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7595fdb77d727f88c1985305b9a35234a4633048" translate="yes" xml:space="preserve">
          <source>That last sentence isn't entirely accurate. Calling &lt;code&gt;String[].class.getComponentType()&lt;/code&gt; returns a &lt;code&gt;Class&lt;/code&gt; object representing the class &lt;code&gt;String&lt;/code&gt;, but its type is &lt;code&gt;Class&amp;lt;?&amp;gt;&lt;/code&gt;, not &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt;, which is why you can't do something like the following.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막 문장은 완전히 정확하지는 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;호출 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String[].class.getComponentType()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반환 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 클래스를 나타내는 객체 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 그러나 그것의 유형이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;?&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ,하지 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 다음과 같은 일을 할 수없는 이유이다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9da9ca52822b78748b379d39530c900d12e711e" translate="yes" xml:space="preserve">
          <source>The example is using Java reflection to create an array. Doing this is generally not recommended, since it isn't typesafe. Instead, what you should do is just use an internal List, and avoid the array at all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예제는 Java 리플렉션을 사용하여 배열을 만드는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작업은 일반적으로 형식이 안전하지 않으므로 권장하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신, 당신이해야 할 일은 내부 List를 사용하고 배열을 피하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0547ea4bb11ade38992f77ef20c40aee738e3020" translate="yes" xml:space="preserve">
          <source>The forced cast suggested by other people did not work for me, throwing an exception of illegal casting.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 사람들이 제안한 강요된 캐스트는 저에게 효과적이지 않아 불법적 인 캐스트를 예외로합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="893703448155265c4ea1af0d290978dadb62aed2" translate="yes" xml:space="preserve">
          <source>The line below throws generic array creation error</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 줄은 일반 배열 생성 오류를 발생시킵니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7e38d8de6ad16acf44e8f311f0beb087f046293" translate="yes" xml:space="preserve">
          <source>The public &lt;code&gt;Stack(Class&amp;lt;T&amp;gt; clazz,int capacity)&lt;/code&gt; constructor requires you to pass a Class object at run time, which means class information &lt;em&gt;is&lt;/em&gt; available at runtime to code that needs it. And the &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt; form means that the compiler will check that the Class object you pass is precisely the Class object for type T. Not a subclass of T, not a superclass of T, but precisely T.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;public &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Stack(Class&amp;lt;T&amp;gt; clazz,int capacity)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 생성자는 런타임에 Class 객체를 전달 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해야합니다. 즉, 런타임에 필요한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스 정보를 클래스 정보 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 형식은 컴파일러가 전달한 Class 객체가 T 유형의 Class 객체인지 정확하게 확인한다는 것을 의미합니다. T의 하위 클래스가 아니라 T의 수퍼 클래스가 아니라 정확하게 T입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28568cdbe8e2736734f26fc601403af7cfc1fbef" translate="yes" xml:space="preserve">
          <source>The rest, such as resizing the array can be done with Arrays.copyOf() like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 크기 조정과 같은 나머지는 Arrays.copyOf ()를 사용하여 다음과 같이 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94a865a1d9f7002ed10826aa73f099a177970f7f" translate="yes" xml:space="preserve">
          <source>There's an interesting discussion of this bug/feature on &lt;a href=&quot;https://bugs.openjdk.java.net/browse/JDK-5105887&quot;&gt;the OpenJDK project site&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://bugs.openjdk.java.net/browse/JDK-5105887&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OpenJDK 프로젝트 사이트&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서이 버그 / 기능에 대한 흥미로운 토론이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce7e6c77f8519fa3381d832c4b9d28a685bb49d9" translate="yes" xml:space="preserve">
          <source>Therefore the purpose is to check that what comes in is what you need.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 목적은 들어오는 것이 필요한 것인지 확인하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6dd9da45c4b8301c4568251b7ce0a967dc4a0230" translate="yes" xml:space="preserve">
          <source>This &lt;em&gt;could&lt;/em&gt; also be done pre-Java 8 using anonymous classes but it's more cumbersome.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 익명 클래스를 사용하여 사전에 자바 (8)을 수행 할 수 있지만, 더 복잡합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2d3b2df6a48a3f46de1d6c16486e3ca57ccd589" translate="yes" xml:space="preserve">
          <source>This example works around the problem by having the code that calls the constructor (which does know the type) pass a parameter telling the class the required type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예제는 생성자를 호출하는 코드 (유형을 아는)가 클래스에 필요한 유형을 알려주는 매개 변수를 전달함으로써 문제를 해결합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43333a72fe134b46dd30df8830d3288a761c204c" translate="yes" xml:space="preserve">
          <source>This is covered in Chapter 5 (Generics) of &lt;a href=&quot;http://java.sun.com/docs/books/effective/&quot;&gt;Effective Java, 2nd Edition&lt;/a&gt;, item 25...&lt;strong&gt;Prefer lists to arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/docs/books/effective/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;효과적인 Java, 제 2 판&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 항목 25 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 5 장 (Generics)에서 다룹니다. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 목록 선호&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="933c14cc80d735c250d51af9a1bde0fa8cd25999" translate="yes" xml:space="preserve">
          <source>This is one of the suggested ways of implementing a generic collection in &lt;em&gt;Effective Java; Item 26&lt;/em&gt;.  No type errors, no need to cast the array repeatedly.  &lt;em&gt;However&lt;/em&gt; this triggers a warning because it is potentially dangerous, and should be used with caution.  As detailed in the comments, this &lt;code&gt;Object[]&lt;/code&gt; is now masquerading as our &lt;code&gt;E[]&lt;/code&gt; type, and can cause unexpected errors or &lt;code&gt;ClassCastException&lt;/code&gt;s if used unsafely.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;효과적인 Java&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 일반 컬렉션을 구현하는 제안 된 방법 중 하나입니다 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/em&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항목 26&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유형 오류가 없으며 배열을 반복적으로 캐스팅 할 필요가 없습니다. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이것은 잠재적으로 위험하므로주의해서 사용해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주석에 자세히 설명 된 바와 같이이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 이제 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;E[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;으로 가장 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 있으며, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;안전하지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않은 경우 예기치 않은 오류나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ClassCastException&lt;/code&gt; 이&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 발생할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bda17a7647c74183d1eefdb4c2c6bf3be6b8b220" translate="yes" xml:space="preserve">
          <source>This is the only answer that is type safe</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 안전한 유형의 유일한 답변입니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="741e75a81db3271934733f789fa51f6bcde49c40" translate="yes" xml:space="preserve">
          <source>This style is a bit ugly but it can sometimes be the least bad solution to creating generic types that do need to know their component type at runtime for whatever reason (creating arrays, or creating instances of their component type, etc.).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 스타일은 약간 추악하지만 때로는 어떤 이유로 든 런타임에 구성 요소 유형을 알아야하는 일반 유형을 작성 (배열 작성 또는 구성 요소 유형의 인스턴스 작성 등)하기에 가장 나쁜 솔루션 일 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a47cffcbb04f0115e80ce033a233ed23df9c8a3b" translate="yes" xml:space="preserve">
          <source>This then means that you can create an array object of the appropriate type in your constructor, which means that the type of the objects you store in your collection will have their types checked at the point they are added to the collection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 생성자에 적절한 유형의 배열 객체를 만들 수 있음을 의미합니다. 즉, 컬렉션에 저장 한 객체의 유형에 따라 컬렉션에 추가 된 시점에서 유형이 확인됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba545919b65dd2875da03ab1b8f0d38742918061" translate="yes" xml:space="preserve">
          <source>This way you get an array of type K (if the item only has the value) or any generic type you want defined in the class Item.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법으로 K 유형의 배열 (항목에 값만있는 경우) 또는 클래스 클래스에 정의하려는 일반 유형의 배열을 얻을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="511195dd067dcc78bdd746ae8e4777ea678a7035" translate="yes" xml:space="preserve">
          <source>Though obviously this isn't as versatile as using the createArray code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분명히 이것은 createArray 코드를 사용하는 것만 큼 다재다능하지는 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0162bf370cdc88793a8cc2021a7abf97d8529b8a" translate="yes" xml:space="preserve">
          <source>To extend to more dimensions, just add &lt;code&gt;[]&lt;/code&gt;'s and dimension parameters to &lt;code&gt;newInstance()&lt;/code&gt; (&lt;code&gt;T&lt;/code&gt; is a type parameter, &lt;code&gt;cls&lt;/code&gt; is a &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;d1&lt;/code&gt; through &lt;code&gt;d5&lt;/code&gt; are integers):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 많은 차원으로 확장하려면 &lt;/font&gt; &lt;code&gt;newInstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 차원 매개 변수를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 유형 매개 변수, &lt;/font&gt; &lt;code&gt;cls&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt; &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt; &lt;code&gt;d1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt; &lt;code&gt;d5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 정수임).&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdc50a4d64557edca2af0f0fbe424262769abed4" translate="yes" xml:space="preserve">
          <source>To get from the array you should call the array[i].variable like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열에서 얻으려면 다음과 같이 array [i] .variable을 호출해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c063fb3fefa3d747cc629d31df8d84bd7676161f" translate="yes" xml:space="preserve">
          <source>What about this solution?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 솔루션은 어떻습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee3f046aa5ffc4a045cd5a72a236056a96b84282" translate="yes" xml:space="preserve">
          <source>What you return is what the consumer needs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 돌려주는 것은 소비자에게 필요한 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74b00b76fb41e4de11fa5cad2aad98c166bbc7e8" translate="yes" xml:space="preserve">
          <source>Worth mentioning that wherever possible, you'll have a much happier time working with &lt;code&gt;List&lt;/code&gt;s rather than arrays if you're using generics.  Certainly sometimes you don't have a choice, but using the collections framework is far more robust.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가능한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 제네릭을 사용하는 경우 배열이 아닌 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작업하는 것이 훨씬 행복 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확실히 선택의 여지가 없지만 컬렉션 프레임 워크를 사용하는 것이 훨씬 강력합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc5e54f4c9f2681608006b5b631799b3d6de7e32" translate="yes" xml:space="preserve">
          <source>You can do this:</source>
          <target state="translated">당신은 이것을 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="16487d3dc196a0b2dabc12b795d3bbaf54bd376e" translate="yes" xml:space="preserve">
          <source>You can expose people in the class PersonList thru a getter. The line below will give you an array, that has a &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; in every element. In other words array of &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;게터를 통해 PersonList 클래스의 사람들을 노출시킬 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 줄 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 모든 요소에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이있는 배열을 제공합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다시 말해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84f8fc1632adc492daf66d87b08e5e3a1d7bf308" translate="yes" xml:space="preserve">
          <source>You could create an Object array and cast it to E everywhere. Yeah, it's not very clean way to do it but it should at least work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object 배열을 만들어 어디서나 E로 캐스트 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예, 그렇게하는 것이 깨끗하지는 않지만 적어도 작동해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9942ed1ec2a651d493dd301971dd1a7eae9c5da2" translate="yes" xml:space="preserve">
          <source>You could use a cast:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;캐스트를 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bad104ef691f603008fd690d83c722a18555e4fc" translate="yes" xml:space="preserve">
          <source>You do not need to pass the Class argument to the constructor.
Try this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Class 인수를 생성자에 전달할 필요는 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시도.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f4831edb7ac05f03bc0826b777c23085688511b" translate="yes" xml:space="preserve">
          <source>Your code will work, although it will generate an unchecked warning (which you could suppress with the following annotation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드는 확인되지 않은 경고를 생성하지만 다음 주석으로 억제 할 수는 있지만 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="5f8c4995fba3a45dcd60d1948211c803b4c2d015" translate="yes" xml:space="preserve">
          <source>and the constructor now knows (at runtime) what the component type is and can use that information to construct the array through the reflection API.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 생성자는 이제 (런타임에서) 구성 요소 유형이 무엇인지 알고 있으며 해당 정보를 사용하여 리플렉션 API를 통해 배열을 구성 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d8a5b906deca90a251605c0f258b166f90b0b58" translate="yes" xml:space="preserve">
          <source>and then in your array class just have it start like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 배열 클래스에서 다음과 같이 시작하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b12cc81f6a4d00eece3e0f6ae508cc8b4c32f59" translate="yes" xml:space="preserve">
          <source>for array initiating where &lt;strong&gt;Array.newInstance(class of array, size of array)&lt;/strong&gt;. Class can be both primitive (int.class) and object (Integer.class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array.newInstance (클래스의 클래스, 배열의 크기)를 시작하는 배열&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;클래스는 기본 (int.class) 및 객체 (Integer.class) 둘 다일 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13b657f1bfb3dcf5a2120341e08c0996b3657ace" translate="yes" xml:space="preserve">
          <source>in this case you use a java.lang.reflect.Array.newInstance to create the array, and it will not be an Object[], but a real T[].
You should not worry of it not being final, since it is managed inside your class.
Note that you need a non null object on the push() to be able to get the type to use, so I added a check on the data you push and throw an exception there.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 java.lang.reflect.Array.newInstance를 사용하여 배열을 작성하면 Object []가 아니라 실제 T []가됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수업 내에서 관리되므로 최종적이지 않을까 걱정하지 않아도됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;push ()에 null이 아닌 객체가 있어야 유형을 사용할 수 있으므로 푸시하는 데이터를 확인하고 예외를 throw합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d575e92f6e78dfc9ee7b6d9f6680fd8e354625d8" translate="yes" xml:space="preserve">
          <source>result:</source>
          <target state="translated">result:</target>
        </trans-unit>
        <trans-unit id="d0431ed373bfd98aaa10ea4140729e6d20c83920" translate="yes" xml:space="preserve">
          <source>starting a &lt;code&gt;new Generic Invoker[]&lt;/code&gt; will cause an issue with unchecked but there shouldn't actually be any issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;new Generic Invoker[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시작하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;체크되지 않은 문제가 발생하지만 실제로는 문제가되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10eab4850ec6f4bb16c0a5e5d691b70c53338706" translate="yes" xml:space="preserve">
          <source>try this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시도.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a7c779c62a097b358907b5e85dd56db377c8b60" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;SIZE&lt;/code&gt; is a constant and &lt;code&gt;T&lt;/code&gt; is a type identifier</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SIZE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 상수이고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 유형 식별자입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8ea2a26fb17636f2877de462b56c1020c26ddd8" translate="yes" xml:space="preserve">
          <source>where Item is a class I defined containing the member:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 Item은 멤버를 포함하여 정의한 클래스입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
