<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/529085">
    <body>
      <group id="529085">
        <trans-unit id="5256ba6e715004a286881bf75f6f52fb1d901799" translate="yes" xml:space="preserve">
          <source>-&amp;gt; in that case, you should write</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-&amp;gt; в этом случае, вы должны написать&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b92d2040b4ab1ab2f2cbfe0316c2d2e2d1591c13" translate="yes" xml:space="preserve">
          <source>-&amp;gt; in that case, you should write:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-&amp;gt; в этом случае вы должны написать:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2a9adb02b942d52dbe3c314f7f5d8acbadfcb05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt; itself is generic (declared as &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt;, where &lt;code&gt;T&lt;/code&gt; stands for the type that the &lt;code&gt;Class&lt;/code&gt; object is representing), meaning that the type of &lt;code&gt;String.class&lt;/code&gt; is &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сам &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класс&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является общим (объявлен как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; обозначает тип, который представляет &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), что означает, что тип &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78d63fad6447bcd19ccc71052e9c5bfd51e5fcff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Checked&lt;/strong&gt;: &lt;em&gt;strong typing&lt;/em&gt;. &lt;code&gt;GenSet&lt;/code&gt; knows explicitly what type of objects it contains (i.e. its constructor was explicitly called with a &lt;code&gt;Class&amp;lt;E&amp;gt;&lt;/code&gt; argument, and methods will throw an exception when they are passed arguments that are not of type &lt;code&gt;E&lt;/code&gt;. See &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#checkedCollection%28java.util.Collection,%20java.lang.Class%29&quot;&gt;&lt;code&gt;Collections.checkedCollection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Проверено&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сильная типизация&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; точно знает, какой тип объектов он содержит (т. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;E&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Его конструктор был явно вызван с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аргументом &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класса &amp;lt;E&amp;gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , и методы вызовут исключение, когда им будут переданы аргументы, не относящиеся к типу &lt;/font&gt;&lt;/font&gt; &lt;code&gt;E&lt;/code&gt; .&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; См. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#checkedCollection%28java.util.Collection,%20java.lang.Class%29&quot;&gt; &lt;code&gt;Collections.checkedCollection&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a478f76417a8f9b71d1a58143d46c10f3a99e36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unchecked&lt;/strong&gt;: &lt;em&gt;weak typing&lt;/em&gt;. No type checking is actually done on any of the objects passed as argument.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Не проверено&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;слабая типизация&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Проверка типов на самом деле не выполняется ни для одного из объектов, переданных в качестве аргумента.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fda34727fe4a8c3c6f27c6428b14c915bbf792ce" translate="yes" xml:space="preserve">
          <source>Actually an easier way to do so, is to create an array of objects and cast it to your desired type like the following example:</source>
          <target state="translated">На самом деле,более простой способ сделать это-это создать массив объектов и привести его к нужному типу,как показано на следующем примере:</target>
        </trans-unit>
        <trans-unit id="b27c1ffca74b49757bb2714552acded307ac2bdc" translate="yes" xml:space="preserve">
          <source>All of this results from a known, and deliberate, weakness of generics in Java: it was implemented using erasure, so &quot;generic&quot; classes don't know what type argument they were created with at run time, and therefore can not provide type-safety unless some explicit mechanism (type-checking) is implemented.</source>
          <target state="translated">Все это является результатом известной и преднамеренной слабости дженериков в Java:они были реализованы с помощью стирания,поэтому &quot;общие&quot; классы не знают,с какими аргументами типа они были созданы во время выполнения,и поэтому не могут обеспечить безопасность типов,если не реализован какой-нибудь явный механизм (проверка типов).</target>
        </trans-unit>
        <trans-unit id="55c30268952da3aa86e683b07ed4972c026eb26b" translate="yes" xml:space="preserve">
          <source>Although we cannot instantiate a generic array of a specific type parameter, we can pass an already created array to a generic class constructor.</source>
          <target state="translated">Хотя мы не можем инстанцировать универсальный массив с определенным параметром типа,мы можем передать уже созданный массив в универсальный конструктор класса.</target>
        </trans-unit>
        <trans-unit id="d87d46e1c739b077ad3a79cd5e27875b6b946272" translate="yes" xml:space="preserve">
          <source>An easy, albeit messy workaround to this would be to nest a second &quot;holder&quot; class inside of your main class, and use it to hold your data.</source>
          <target state="translated">Легким,хотя и грязным способом решения этой проблемы было бы разместить второй класс &quot;держателя&quot; внутри вашего основного класса и использовать его для хранения ваших данных.</target>
        </trans-unit>
        <trans-unit id="b1184a88ce9bf3b04a340710cf59420a373394d7" translate="yes" xml:space="preserve">
          <source>And the add function can be added like so:</source>
          <target state="translated">И функция добавления может быть добавлена таким образом:</target>
        </trans-unit>
        <trans-unit id="848056b577f734df63df4cbee87e2efbb71b38f1" translate="yes" xml:space="preserve">
          <source>Arrays on the other hand &lt;em&gt;do&lt;/em&gt; know their component type at runtime.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Массивы с другой стороны &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;делать&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; знают их компоненты типа во время выполнения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85c828fc90d47c75cff32075e7d854019d39ca8d" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, this behavior is safe as long as the cast array is used internally (e.g. to back a data structure), and not returned or exposed to client code.  Should you need to return an array of a generic type to other code, the reflection &lt;code&gt;Array&lt;/code&gt; class you mention is the right way to go.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как правило, такое поведение безопасно, если массив приведения используется внутренне (например, для поддержки структуры данных), а не возвращается или подвергается воздействию клиентского кода. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вам нужно вернуть массив универсального типа в другой код, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;упомянутый вами класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; отражения &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- правильный путь.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ae02f7d3480c40e465ef8f1cc2fcc7143d064d3" translate="yes" xml:space="preserve">
          <source>As others have said generics are &quot;erased&quot; during compilation. So at runtime an instance of a generic doesn't know what its component type is. The reason for this is historical, Sun wanted to add generics without breaking the existing interface (both source and binary).</source>
          <target state="translated">Как говорили другие,дженерики &quot;стираются&quot; во время компиляции.Таким образом,во время исполнения экземпляр генератора не знает,какой у него тип компонента.Причина этого историческая:Sun хотел добавить дженерики,не нарушая существующего интерфейса (как исходного,так и двоичного).</target>
        </trans-unit>
        <trans-unit id="c3427736c68c1dc9cd88d3b18d103594bb9ec6eb" translate="yes" xml:space="preserve">
          <source>BeanUtils is part of Spring.</source>
          <target state="translated">BeanUtils-это часть весны.</target>
        </trans-unit>
        <trans-unit id="8a4c3995e1c36a52527e4933fe77e46b13e4a216" translate="yes" xml:space="preserve">
          <source>But I really don't get what's going on.</source>
          <target state="translated">Но я действительно не понимаю,что происходит.</target>
        </trans-unit>
        <trans-unit id="6491ec2981a44a2be8839f5e8ef424385764dc71" translate="yes" xml:space="preserve">
          <source>Check this:</source>
          <target state="translated">Проверьте это:</target>
        </trans-unit>
        <trans-unit id="e9643af0511ba009bd3d8c9053fe41234a24cb86" translate="yes" xml:space="preserve">
          <source>Do don't worry about typecasting warnings when you are writing generic class. Worry when you are using it.</source>
          <target state="translated">Не беспокойтесь о печатных предупреждениях,когда вы пишете общий класс.Волнуйся,когда используешь его.</target>
        </trans-unit>
        <trans-unit id="1ae85e1afab64ec789fd9cc6abc7831ca23fd44d" translate="yes" xml:space="preserve">
          <source>Due to the implementation of Java generics, you can't have code like this:</source>
          <target state="translated">Из-за реализации Java-генериков такой код не может быть:</target>
        </trans-unit>
        <trans-unit id="a070cb875ce38f617daa7725277ba55fda758cdb" translate="yes" xml:space="preserve">
          <source>Edit regarding Ingo's comments:</source>
          <target state="translated">Отредактируй по поводу комментариев Инго:</target>
        </trans-unit>
        <trans-unit id="6f9abcab08970ebf58b6e42e52ff550eb98adc7c" translate="yes" xml:space="preserve">
          <source>Edit: Perhaps an alternate way of creating such an array, if the size you required was known and small, would be to simply feed the required number of &quot;null&quot;s into the zeroArray command?</source>
          <target state="translated">Правка:Возможно,альтернативным способом создания такого массива,если требуемый размер известен и мал,будет простая подача требуемого количества &quot;нулей&quot; в команду zeroArray?</target>
        </trans-unit>
        <trans-unit id="72ff74127a0f808b8c6a3dd63fb3e33e1c3cc7cf" translate="yes" xml:space="preserve">
          <source>Finally we have a type cast because the compiler has no way of knowing that the array returned by &lt;code&gt;Array#newInstance()&lt;/code&gt; is the correct type (even though we know).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наконец, у нас есть приведение типа, потому что компилятор не может знать, что массив, возвращаемый &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array#newInstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является правильным типом (даже если мы знаем).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9caf0a34f39780f9e5d8f33e38f78e286553419" translate="yes" xml:space="preserve">
          <source>For example, this is used by &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#toArray-java.util.function.IntFunction-&quot;&gt;&lt;code&gt;&amp;lt;A&amp;gt; A[] Stream.toArray(IntFunction&amp;lt;A[]&amp;gt;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, это используется &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#toArray-java.util.function.IntFunction-&quot;&gt; &lt;code&gt;&amp;lt;A&amp;gt; A[] Stream.toArray(IntFunction&amp;lt;A[]&amp;gt;)&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20e889c7939e047d457f409d0b44dea04a0cc1b9" translate="yes" xml:space="preserve">
          <source>For more flexibility with your arrays you can use a linked list eg. the ArrayList and other methods found in the Java.util.ArrayList class.</source>
          <target state="translated">Для большей гибкости с вашими массивами вы можете использовать связанный список,например,ArrayList и другие методы,найденные в классе Java.util.ArrayList.</target>
        </trans-unit>
        <trans-unit id="bb706c17ccc1b003bb39f24acd6128c68fc3ecb5" translate="yes" xml:space="preserve">
          <source>Generic array creation is disallowed in java but you can do it like</source>
          <target state="translated">Создание общих массивов запрещено на java,но вы можете сделать это так.</target>
        </trans-unit>
        <trans-unit id="6b103b2ec12d0f79896e129fa04e9ac22f011751" translate="yes" xml:space="preserve">
          <source>Generics is used for type checking during compile time:</source>
          <target state="translated">Дженерики используются для проверки типов во время компиляции:</target>
        </trans-unit>
        <trans-unit id="dae8b29e8c574cffe0e2ae657ea0ce2578078c3d" translate="yes" xml:space="preserve">
          <source>Here's how to use generics to get an array of precisely the type you&amp;rsquo;re looking for while preserving type safety (as opposed to the other answers, which will either give you back an &lt;code&gt;Object&lt;/code&gt; array or result in warnings at compile time):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот как использовать обобщенные элементы для получения массива именно того типа, который вы ищете при сохранении безопасности типов (в отличие от других ответов, которые либо вернут вам &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;массив &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; либо приведут к предупреждениям во время компиляции):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e30cac4fe4524f6b8750c485a3528b017c302b3" translate="yes" xml:space="preserve">
          <source>Hi although the thread is dead, I would like to draw your attention to this:</source>
          <target state="translated">Привет,хотя нить мертва,я хотел бы обратить ваше внимание на это:</target>
        </trans-unit>
        <trans-unit id="7092545bda55e9d49db1a3020b4de85b0af6aea3" translate="yes" xml:space="preserve">
          <source>How can I implement this while maintaining type safety?</source>
          <target state="translated">Как я могу это реализовать,сохраняя при этом безопасность типа?</target>
        </trans-unit>
        <trans-unit id="b02fd75a6218b3d96c8fba8d980ab75ca6bc25b0" translate="yes" xml:space="preserve">
          <source>How to create a generic array in Java</source>
          <target state="translated">Как создать общий массив в Java</target>
        </trans-unit>
        <trans-unit id="2648e8d91872250ab267f8d15aff7b213e879359" translate="yes" xml:space="preserve">
          <source>However if I encapsulate &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; in a separate class, it works.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако, если я инкапсулирую &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в отдельный класс, это работает.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="458c19a5b85d1c69a44e8d4db638e4a39a0ffe17" translate="yes" xml:space="preserve">
          <source>However, it would probably be better to use a List instead of an Array.</source>
          <target state="translated">Однако,возможно,было бы лучше использовать список вместо массива.</target>
        </trans-unit>
        <trans-unit id="af35105618053cf28b99a5e842ffe519693b21fa" translate="yes" xml:space="preserve">
          <source>However, this implicit cast worked fine:</source>
          <target state="translated">Однако,этот неявный слепок сработал отлично:</target>
        </trans-unit>
        <trans-unit id="bb998e78166bdbeb52b8f59a5580fbad5a6c7cc2" translate="yes" xml:space="preserve">
          <source>I actually found a pretty unique solution to bypass the inability to initiate a generic array. What you have to do is create a class that takes in the generic variable T like so:</source>
          <target state="translated">На самом деле я нашел довольно уникальное решение,позволяющее обойти невозможность инициировать общий массив.Что вам нужно сделать,так это создать класс,который будет принимать общую переменную T:</target>
        </trans-unit>
        <trans-unit id="b8102d5b25d37f57b41cfb492919248f4aec49c1" translate="yes" xml:space="preserve">
          <source>I find out the following works (and worked for me) with  &lt;code&gt;@SuppressWarnings({&quot;unchecked&quot;})&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я обнаружил следующие работы (и работал для меня) с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@SuppressWarnings({&quot;unchecked&quot;})&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2077a8b7a241451326b5fd0ee3e26e18c0bb9fc" translate="yes" xml:space="preserve">
          <source>I found a sort of a work around to this problem.</source>
          <target state="translated">Я нашел что-то вроде работы по решению этой проблемы.</target>
        </trans-unit>
        <trans-unit id="138bc620e42e624d84f25de50b69e1879367e21f" translate="yes" xml:space="preserve">
          <source>I have found a quick and easy way that works for me. Note that i have only used this on Java JDK 8. I don't know if it will work with previous versions.</source>
          <target state="translated">Я нашел быстрый и простой способ,который работает на меня.Обратите внимание,что я использовал его только на Java JDK 8.Я не знаю,будет ли он работать с предыдущими версиями.</target>
        </trans-unit>
        <trans-unit id="25731a7951d4cc55181699535d4e8a33ede74607" translate="yes" xml:space="preserve">
          <source>I have to ask a question in return: is your &lt;code&gt;GenSet&lt;/code&gt; &quot;checked&quot; or &quot;unchecked&quot;?
What does that mean?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В ответ я должен задать вопрос: ваш &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;проверен&quot; или &quot;не проверен&quot;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что это значит?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94bf3e923cdc7de99a109e4724eb5b075cdc1ee1" translate="yes" xml:space="preserve">
          <source>I made this code snippet to reflectively instantiate a class which is passed for a simple automated test utility.</source>
          <target state="translated">Я сделал этот фрагмент кода,чтобы отразить в деталях класс,который передается для простой утилиты автоматического тестирования.</target>
        </trans-unit>
        <trans-unit id="4739343a2e3dc3dcf192f5507297f82c33c0904e" translate="yes" xml:space="preserve">
          <source>I needed something like this in some code I was working on and this is what I did to get it to work. So far no problems.</source>
          <target state="translated">Мне нужно было что-то подобное в каком-то коде,над которым я работал,и это то,что я делал,чтобы заставить его работать.Пока никаких проблем.</target>
        </trans-unit>
        <trans-unit id="b631fdf9b6d54720c72bd40b118520b2d7697f85" translate="yes" xml:space="preserve">
          <source>I saw a solution on the Java forums that goes like this:</source>
          <target state="translated">Я видел на Java-форумах такое решение:</target>
        </trans-unit>
        <trans-unit id="3f102d0ccea342f912b579f5f17c866b0ad4b2bd" translate="yes" xml:space="preserve">
          <source>I'm wondering if this code would create an effective generic array?</source>
          <target state="translated">Мне интересно,создаст ли этот код эффективный универсальный массив?</target>
        </trans-unit>
        <trans-unit id="fdb56dbfb55184785a9349344e54ed2a5d37ca3b" translate="yes" xml:space="preserve">
          <source>If you really want to wrap a generic array of fixed size you will have a method to add data to that array, hence you can initialize properly the array there doing something like this:</source>
          <target state="translated">Если вы действительно хотите обернуть общий массив фиксированного размера,то у вас будет метод добавления данных в этот массив,поэтому вы можете правильно инициализировать находящийся там массив,делая что-то подобное:</target>
        </trans-unit>
        <trans-unit id="21ceed053711f50516747d1e48937b61979c18aa" translate="yes" xml:space="preserve">
          <source>In Java 8, we can do a kind of generic array creation using a lambda or method reference. This is similar to the reflective approach (which passes a &lt;code&gt;Class&lt;/code&gt;), but here we aren't using reflection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В Java 8 мы можем сделать своего рода создание универсального массива, используя лямбду или ссылку на метод. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это похоже на рефлексивный подход (который проходит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), но здесь мы не используем рефлексию.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd0e74871c6e95ff64be642dc705c62f2933b08c" translate="yes" xml:space="preserve">
          <source>Inside the constructor, calling the method &lt;code&gt;cast&lt;/code&gt; returns the passed &lt;code&gt;Object&lt;/code&gt; argument cast to the class represented by the &lt;code&gt;Class&lt;/code&gt; object on which the method was called. Calling the static method &lt;code&gt;newInstance&lt;/code&gt; in &lt;code&gt;java.lang.reflect.Array&lt;/code&gt; returns as an &lt;code&gt;Object&lt;/code&gt; an array of the type represented by the &lt;code&gt;Class&lt;/code&gt; object passed as the first argument and of the length specified by the &lt;code&gt;int&lt;/code&gt; passed as the second argument. Calling the method &lt;code&gt;getComponentType&lt;/code&gt; returns a &lt;code&gt;Class&lt;/code&gt; object representing the component type of the array represented by the &lt;code&gt;Class&lt;/code&gt; object on which the method was called (e.g. &lt;code&gt;String.class&lt;/code&gt; for &lt;code&gt;String[].class&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; if the &lt;code&gt;Class&lt;/code&gt; object doesn't represent an array).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Внутри конструктора вызов метода &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cast&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; возвращает переданный &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аргумент &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в класс, представленный &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для которого был вызван метод. Вызов статического метода &lt;/font&gt;&lt;/font&gt; &lt;code&gt;newInstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;java.lang.reflect.Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; возвращает в качестве &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; массив типа, представленного &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объектом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переданного в качестве первого аргумента, и длины, указанной в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переданного в качестве второго аргумента. Вызов метода &lt;/font&gt;&lt;/font&gt; &lt;code&gt;getComponentType&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; возвращает &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; представляющий тип компонента массива, представленного &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; .&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;на котором был вызван метод (например , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String[].class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объекта не представляет собой массив).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab602ec3b989efd8de962f4829da4165f1c65bac" translate="yes" xml:space="preserve">
          <source>It converts a list of any kind of object to an array of the same type.</source>
          <target state="translated">Он преобразует список любого типа объектов в массив одного типа.</target>
        </trans-unit>
        <trans-unit id="0d6ab1f93011bae7b26c9070c55cba2fb2e0d73a" translate="yes" xml:space="preserve">
          <source>It works and looks too simple to be true. Is there any drawback?</source>
          <target state="translated">Это работает и выглядит слишком просто,чтобы быть правдой.Есть ли какой-нибудь недостаток?</target>
        </trans-unit>
        <trans-unit id="f4caa1bb1d671a9b3d20e4efc50482ed4f9fc723" translate="yes" xml:space="preserve">
          <source>It works by using class literals as runtime type tokens, as discussed in the &lt;a href=&quot;http://download.oracle.com/javase/tutorial/extra/generics/literals.html&quot;&gt;Java Tutorials&lt;/a&gt;. Class literals are treated by the compiler as instances of &lt;code&gt;java.lang.Class&lt;/code&gt;. To use one, simply follow the name of a class with &lt;code&gt;.class&lt;/code&gt;. So, &lt;code&gt;String.class&lt;/code&gt; acts as a &lt;code&gt;Class&lt;/code&gt; object representing the class &lt;code&gt;String&lt;/code&gt;. This also works for interfaces, enums, any-dimensional arrays (e.g. &lt;code&gt;String[].class&lt;/code&gt;), primitives (e.g. &lt;code&gt;int.class&lt;/code&gt;), and the keyword &lt;code&gt;void&lt;/code&gt; (i.e. &lt;code&gt;void.class&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он работает с использованием литералов класса в качестве токенов типа времени выполнения, как обсуждалось в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://download.oracle.com/javase/tutorial/extra/generics/literals.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Учебниках Java&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Литералы класса обрабатываются компилятором как экземпляры &lt;/font&gt;&lt;/font&gt; &lt;code&gt;java.lang.Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Чтобы использовать один, просто следуйте за именем класса с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Итак, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; действует как &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; представляющий класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Это также работает для интерфейсов, перечислений, любых размерных массивов (например, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String[].class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), примитивов (например, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) и ключевого слова &lt;/font&gt;&lt;/font&gt; &lt;code&gt;void&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (то есть &lt;/font&gt;&lt;/font&gt; &lt;code&gt;void.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba396f86823831061c16b320c0846d89f33589c4" translate="yes" xml:space="preserve">
          <source>Java generics work by checking types at compile time and inserting appropriate casts, but &lt;em&gt;erasing&lt;/em&gt; the types in the compiled files. This makes generic libraries usable by code which doesn't understand generics (which was a deliberate design decision) but which means you can't normally find out what the type is at run time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обобщения Java работают, проверяя типы во время компиляции и вставляя соответствующие приведения, но &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;стирая&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; типы в скомпилированных файлах. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это делает универсальные библиотеки пригодными для использования кодом, который не понимает универсальные (что было преднамеренным дизайнерским решением), но это означает, что вы обычно не можете узнать, какой тип во время выполнения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcfea5954d6b17c1cfa4f33dba97b45fc67dfaf1" translate="yes" xml:space="preserve">
          <source>Look also to this code:</source>
          <target state="translated">Посмотри и на этот код:</target>
        </trans-unit>
        <trans-unit id="eb35d38fdf528256e3a1b9f4f0e6795a26e709f9" translate="yes" xml:space="preserve">
          <source>Maybe unrelated to this question but while I was getting the &quot;&lt;code&gt;generic array creation&lt;/code&gt;&quot; error for using</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Возможно, не имеет отношения к этому вопросу, но пока я получаю сообщение об &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ошибке &amp;laquo; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;generic array creation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo; при использовании&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76d45669c37265202c1a2bf3bdc6a10caeb9d640" translate="yes" xml:space="preserve">
          <source>No one else has answered the question of what is going on in the example you posted.</source>
          <target state="translated">Никто больше не ответил на вопрос о том,что происходит в размещенном вами примере.</target>
        </trans-unit>
        <trans-unit id="a4ebde56988a5443e56391d78606fb01d312f7f0" translate="yes" xml:space="preserve">
          <source>Note that the component type of the array should be the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/generics/erasure.html&quot;&gt;&lt;em&gt;erasure&lt;/em&gt;&lt;/a&gt; of the type parameter:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что тип компонента массива должен быть &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/java/generics/erasure.html&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;стиранием&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; параметра типа:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b17452d0896601f6affcd65767ebb0c3d4e264e" translate="yes" xml:space="preserve">
          <source>Note this segment:</source>
          <target state="translated">Обратите внимание на этот сегмент:</target>
        </trans-unit>
        <trans-unit id="2f6c062767df7549894ad2c5420c2527bac277cd" translate="yes" xml:space="preserve">
          <source>Now in main we can create the array like so:</source>
          <target state="translated">Теперь в основном мы можем создать массив таким образом:</target>
        </trans-unit>
        <trans-unit id="9c262fa05b18a24644a8fd81a6f55f5d93672732" translate="yes" xml:space="preserve">
          <source>Passing a list of values...</source>
          <target state="translated">Передача списка значений...</target>
        </trans-unit>
        <trans-unit id="ad86bdac95c44e53082548c0e593a344b6d4c2f5" translate="yes" xml:space="preserve">
          <source>Regarding Joachim Sauer's comment on &lt;a href=&quot;https://stackoverflow.com/questions/529085/java-how-to-generic-array-creation/529094#529094&quot;&gt;this answer&lt;/a&gt; (I don't have enough reputation to comment on it myself), the example using the cast to &lt;code&gt;T[]&lt;/code&gt; will result in a warning because the compiler can't guarantee type safety in that case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что касается комментария Йоахима Сауэра к &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/529085/java-how-to-generic-array-creation/529094#529094&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;этому ответу&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (у меня нет достаточной репутации, чтобы самому комментировать его), пример, использующий приведение к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; приведет к предупреждению, потому что компилятор не может гарантировать безопасность типов в этом случае.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3dc19ef1adf29bc710c8cae0527da16f0c1766a" translate="yes" xml:space="preserve">
          <source>Same goes for every method in &lt;code&gt;Class&lt;/code&gt; that returns a &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;То же самое касается каждого метода в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который возвращает &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a7ed0b643ec86713d206693ab04c647d0197ceb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Array.html#newInstance%28java.lang.Class,%20int...%29&quot;&gt;&lt;code&gt;Array.newInstance()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/lang/reflect/Array.html#newInstance%28java.lang.Class,%20int...%29&quot;&gt; &lt;code&gt;Array.newInstance()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для подробностей.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b15b301a124f2fbf4c643bcc7d4db7dc7feefb3b" translate="yes" xml:space="preserve">
          <source>So the application would construct the class with something like</source>
          <target state="translated">Таким образом,приложение построило бы класс с чем-то вроде</target>
        </trans-unit>
        <trans-unit id="6ccbda7af81f65a30227bd7f3992b00b1b6f9903" translate="yes" xml:space="preserve">
          <source>So, whenever you call the constructor for &lt;code&gt;GenSet&lt;/code&gt;, you pass in a class literal for the first argument representing an array of the &lt;code&gt;GenSet&lt;/code&gt; instance's declared type (e.g. &lt;code&gt;String[].class&lt;/code&gt; for &lt;code&gt;GenSet&amp;lt;String&amp;gt;&lt;/code&gt;). Note that you won't be able to get an array of primitives, since primitives can't be used for type variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, всякий раз, когда вы вызываете конструктор для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы передаете литерал класса для первого аргумента, представляющего массив &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявленного типа экземпляра &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (например, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String[].class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&amp;lt;String&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что вы не сможете получить массив примитивов, поскольку примитивы нельзя использовать для переменных типа.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7748f1a183c460e064f397442f9e3a24933cbd68" translate="yes" xml:space="preserve">
          <source>Still this is somewhat pointless: you store data via push and it is the signature of the method that guarantees only T elements will enter. So it is more or less irrelevant that the array is Object[] or T[].</source>
          <target state="translated">Однако это несколько бессмысленно:вы храните данные нажатием,и именно подпись метода гарантирует,что будут вводиться только T-элементы.Поэтому более или менее неважно,что массив-это Object[]или T[].</target>
        </trans-unit>
        <trans-unit id="d39d85a884e20788e0315bf98bc82e20a18d4d62" translate="yes" xml:space="preserve">
          <source>That compiles without warnings, and as you can see in &lt;code&gt;main&lt;/code&gt;, for whatever type you declare an instance of &lt;code&gt;GenSet&lt;/code&gt; as, you can assign &lt;code&gt;a&lt;/code&gt; to an array of that type, and you can assign an element from &lt;code&gt;a&lt;/code&gt; to a variable of that type, meaning that the array and the values in the array are of the correct type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это компилируется без предупреждений, и , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как вы можете видеть в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для любого типа вы объявляете экземпляр &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenSet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , как вы можете назначить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в массив этого типа, и вы можете назначить элемент из &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;переменных этого типа, Это означает, что массив и значения в массиве имеют правильный тип.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7595fdb77d727f88c1985305b9a35234a4633048" translate="yes" xml:space="preserve">
          <source>That last sentence isn't entirely accurate. Calling &lt;code&gt;String[].class.getComponentType()&lt;/code&gt; returns a &lt;code&gt;Class&lt;/code&gt; object representing the class &lt;code&gt;String&lt;/code&gt;, but its type is &lt;code&gt;Class&amp;lt;?&amp;gt;&lt;/code&gt;, not &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt;, which is why you can't do something like the following.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это последнее предложение не совсем точно. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вызов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String[].class.getComponentType()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; возвращает &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объект &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; представляющий класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но его типом является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;?&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , А не &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому вы не можете сделать что-то вроде следующего.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9da9ca52822b78748b379d39530c900d12e711e" translate="yes" xml:space="preserve">
          <source>The example is using Java reflection to create an array. Doing this is generally not recommended, since it isn't typesafe. Instead, what you should do is just use an internal List, and avoid the array at all.</source>
          <target state="translated">В примере используется отражение Java для создания массива.Обычно делать это не рекомендуется,так как это не безопасно для печати.Вместо этого нужно просто использовать внутренний список и вообще избегать массива.</target>
        </trans-unit>
        <trans-unit id="0547ea4bb11ade38992f77ef20c40aee738e3020" translate="yes" xml:space="preserve">
          <source>The forced cast suggested by other people did not work for me, throwing an exception of illegal casting.</source>
          <target state="translated">Принудительный кастинг,предложенный другими людьми,не сработал на меня,сделав исключение из незаконного кастинга.</target>
        </trans-unit>
        <trans-unit id="893703448155265c4ea1af0d290978dadb62aed2" translate="yes" xml:space="preserve">
          <source>The line below throws generic array creation error</source>
          <target state="translated">В строке ниже отображается общая ошибка создания массива</target>
        </trans-unit>
        <trans-unit id="a7e38d8de6ad16acf44e8f311f0beb087f046293" translate="yes" xml:space="preserve">
          <source>The public &lt;code&gt;Stack(Class&amp;lt;T&amp;gt; clazz,int capacity)&lt;/code&gt; constructor requires you to pass a Class object at run time, which means class information &lt;em&gt;is&lt;/em&gt; available at runtime to code that needs it. And the &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt; form means that the compiler will check that the Class object you pass is precisely the Class object for type T. Not a subclass of T, not a superclass of T, but precisely T.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Общественность &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Stack(Class&amp;lt;T&amp;gt; clazz,int capacity)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; конструктор требует , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;чтобы передать объект Class во время выполнения, что означает информацию о &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;классе &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;является&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; доступна во время выполнения в коду , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;который нуждается в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;этом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;А &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;форма &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; означает, что компилятор проверит, что передаваемый вами объект Class является именно объектом Class для типа T. Не подклассом T, не суперклассом T, но именно T.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28568cdbe8e2736734f26fc601403af7cfc1fbef" translate="yes" xml:space="preserve">
          <source>The rest, such as resizing the array can be done with Arrays.copyOf() like so:</source>
          <target state="translated">Остальное,например,изменение размера массива,можно сделать с помощью функции Arrays.copyOf():</target>
        </trans-unit>
        <trans-unit id="94a865a1d9f7002ed10826aa73f099a177970f7f" translate="yes" xml:space="preserve">
          <source>There's an interesting discussion of this bug/feature on &lt;a href=&quot;https://bugs.openjdk.java.net/browse/JDK-5105887&quot;&gt;the OpenJDK project site&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;На &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://bugs.openjdk.java.net/browse/JDK-5105887&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сайте проекта OpenJDK&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; есть интересное обсуждение этой ошибки / функции &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce7e6c77f8519fa3381d832c4b9d28a685bb49d9" translate="yes" xml:space="preserve">
          <source>Therefore the purpose is to check that what comes in is what you need.</source>
          <target state="translated">Поэтому цель состоит в том,чтобы проверить,что то,что приходит,это то,что вам нужно.</target>
        </trans-unit>
        <trans-unit id="6dd9da45c4b8301c4568251b7ce0a967dc4a0230" translate="yes" xml:space="preserve">
          <source>This &lt;em&gt;could&lt;/em&gt; also be done pre-Java 8 using anonymous classes but it's more cumbersome.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;также &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;может&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; быть сделано до Java 8 с использованием анонимных классов, но это более громоздко.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2d3b2df6a48a3f46de1d6c16486e3ca57ccd589" translate="yes" xml:space="preserve">
          <source>This example works around the problem by having the code that calls the constructor (which does know the type) pass a parameter telling the class the required type.</source>
          <target state="translated">Этот пример обходит проблему тем,что код,вызывающий конструктор (который действительно знает тип),передает параметр,говорящий классу нужный тип.</target>
        </trans-unit>
        <trans-unit id="43333a72fe134b46dd30df8830d3288a761c204c" translate="yes" xml:space="preserve">
          <source>This is covered in Chapter 5 (Generics) of &lt;a href=&quot;http://java.sun.com/docs/books/effective/&quot;&gt;Effective Java, 2nd Edition&lt;/a&gt;, item 25...&lt;strong&gt;Prefer lists to arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это описано в главе 5 (Общие положения) &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://java.sun.com/docs/books/effective/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Effective Java, 2-е издание&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , пункт 25 ... &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Предпочитать списки массивам&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="933c14cc80d735c250d51af9a1bde0fa8cd25999" translate="yes" xml:space="preserve">
          <source>This is one of the suggested ways of implementing a generic collection in &lt;em&gt;Effective Java; Item 26&lt;/em&gt;.  No type errors, no need to cast the array repeatedly.  &lt;em&gt;However&lt;/em&gt; this triggers a warning because it is potentially dangerous, and should be used with caution.  As detailed in the comments, this &lt;code&gt;Object[]&lt;/code&gt; is now masquerading as our &lt;code&gt;E[]&lt;/code&gt; type, and can cause unexpected errors or &lt;code&gt;ClassCastException&lt;/code&gt;s if used unsafely.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это один из предложенных способов реализации универсальной коллекции в &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;эффективной Java; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пункт 26&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нет ошибок типа, нет необходимости повторно приводить массив. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; это вызывает предупреждение, потому что это потенциально опасно, и его следует использовать с осторожностью. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как подробно описано в комментариях, этот &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; теперь маскируется под наш &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;тип &lt;/font&gt;&lt;/font&gt; &lt;code&gt;E[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и может вызывать непредвиденные ошибки или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ClassCastException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если они используются небезопасно.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bda17a7647c74183d1eefdb4c2c6bf3be6b8b220" translate="yes" xml:space="preserve">
          <source>This is the only answer that is type safe</source>
          <target state="translated">Это единственный ответ,который является типом безопасности</target>
        </trans-unit>
        <trans-unit id="741e75a81db3271934733f789fa51f6bcde49c40" translate="yes" xml:space="preserve">
          <source>This style is a bit ugly but it can sometimes be the least bad solution to creating generic types that do need to know their component type at runtime for whatever reason (creating arrays, or creating instances of their component type, etc.).</source>
          <target state="translated">Этот стиль немного уродлив,но иногда он может быть наименее плохим решением для создания общих типов,которым по каким-либо причинам необходимо знать тип компонента во время выполнения (создание массивов,или создание экземпляров своего типа компонента и т.д.).</target>
        </trans-unit>
        <trans-unit id="a47cffcbb04f0115e80ce033a233ed23df9c8a3b" translate="yes" xml:space="preserve">
          <source>This then means that you can create an array object of the appropriate type in your constructor, which means that the type of the objects you store in your collection will have their types checked at the point they are added to the collection.</source>
          <target state="translated">Это означает,что вы можете создать объект массива соответствующего типа в конструкторе,что означает,что тип объектов,которые вы храните в своей коллекции,будет проверяться в момент их добавления в коллекцию.</target>
        </trans-unit>
        <trans-unit id="ba545919b65dd2875da03ab1b8f0d38742918061" translate="yes" xml:space="preserve">
          <source>This way you get an array of type K (if the item only has the value) or any generic type you want defined in the class Item.</source>
          <target state="translated">Таким образом,вы получаете массив типа K (если элемент имеет только значение)или любой общий тип,который вы хотите определить в классе Item.</target>
        </trans-unit>
        <trans-unit id="511195dd067dcc78bdd746ae8e4777ea678a7035" translate="yes" xml:space="preserve">
          <source>Though obviously this isn't as versatile as using the createArray code.</source>
          <target state="translated">Хотя очевидно,что это не так универсально,как использование кода createArray.</target>
        </trans-unit>
        <trans-unit id="0162bf370cdc88793a8cc2021a7abf97d8529b8a" translate="yes" xml:space="preserve">
          <source>To extend to more dimensions, just add &lt;code&gt;[]&lt;/code&gt;'s and dimension parameters to &lt;code&gt;newInstance()&lt;/code&gt; (&lt;code&gt;T&lt;/code&gt; is a type parameter, &lt;code&gt;cls&lt;/code&gt; is a &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt;, &lt;code&gt;d1&lt;/code&gt; through &lt;code&gt;d5&lt;/code&gt; are integers):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы расширить число измерений, просто добавьте &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и параметры измерения в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;newInstance()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это параметр типа, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cls&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; до &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - целые числа):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdc50a4d64557edca2af0f0fbe424262769abed4" translate="yes" xml:space="preserve">
          <source>To get from the array you should call the array[i].variable like so:</source>
          <target state="translated">Чтобы получить из массива,необходимо вызвать переменную array[i].variable подобным образом:</target>
        </trans-unit>
        <trans-unit id="c063fb3fefa3d747cc629d31df8d84bd7676161f" translate="yes" xml:space="preserve">
          <source>What about this solution?</source>
          <target state="translated">А как же это решение?</target>
        </trans-unit>
        <trans-unit id="ee3f046aa5ffc4a045cd5a72a236056a96b84282" translate="yes" xml:space="preserve">
          <source>What you return is what the consumer needs.</source>
          <target state="translated">То,что вы возвращаете,это то,что нужно потребителю.</target>
        </trans-unit>
        <trans-unit id="74b00b76fb41e4de11fa5cad2aad98c166bbc7e8" translate="yes" xml:space="preserve">
          <source>Worth mentioning that wherever possible, you'll have a much happier time working with &lt;code&gt;List&lt;/code&gt;s rather than arrays if you're using generics.  Certainly sometimes you don't have a choice, but using the collections framework is far more robust.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Стоит отметить, что везде, где это возможно, вам будет гораздо приятнее работать со &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а не с массивами, если вы будете использовать дженерики. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Конечно, иногда у вас нет выбора, но использование фреймворка коллекций гораздо надежнее.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc5e54f4c9f2681608006b5b631799b3d6de7e32" translate="yes" xml:space="preserve">
          <source>You can do this:</source>
          <target state="translated">Ты сможешь это сделать:</target>
        </trans-unit>
        <trans-unit id="16487d3dc196a0b2dabc12b795d3bbaf54bd376e" translate="yes" xml:space="preserve">
          <source>You can expose people in the class PersonList thru a getter. The line below will give you an array, that has a &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; in every element. In other words array of &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете выставлять людей в классе PersonList через геттер. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Строка ниже даст вам массив, который содержит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в каждом элементе. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другими словами, массив &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;Person&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84f8fc1632adc492daf66d87b08e5e3a1d7bf308" translate="yes" xml:space="preserve">
          <source>You could create an Object array and cast it to E everywhere. Yeah, it's not very clean way to do it but it should at least work.</source>
          <target state="translated">Вы можете создать массив Object и повсеместно разместить его в E.Да,это не очень чистый способ,но он должен,по крайней мере,работать.</target>
        </trans-unit>
        <trans-unit id="9942ed1ec2a651d493dd301971dd1a7eae9c5da2" translate="yes" xml:space="preserve">
          <source>You could use a cast:</source>
          <target state="translated">Тебе бы не помешал гипс:</target>
        </trans-unit>
        <trans-unit id="bad104ef691f603008fd690d83c722a18555e4fc" translate="yes" xml:space="preserve">
          <source>You do not need to pass the Class argument to the constructor.
Try this.</source>
          <target state="translated">Вам не нужно передавать аргумент Class в конструктор.Попробуйте это.</target>
        </trans-unit>
        <trans-unit id="2f4831edb7ac05f03bc0826b777c23085688511b" translate="yes" xml:space="preserve">
          <source>Your code will work, although it will generate an unchecked warning (which you could suppress with the following annotation:</source>
          <target state="translated">Ваш код будет работать,хотя и будет выдавать неконтролируемое предупреждение (которое можно подавить следующей аннотацией):</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="5f8c4995fba3a45dcd60d1948211c803b4c2d015" translate="yes" xml:space="preserve">
          <source>and the constructor now knows (at runtime) what the component type is and can use that information to construct the array through the reflection API.</source>
          <target state="translated">и конструктор теперь знает (во время выполнения),что такое тип компонента,и может использовать эту информацию для построения массива через Ref reflection API.</target>
        </trans-unit>
        <trans-unit id="4d8a5b906deca90a251605c0f258b166f90b0b58" translate="yes" xml:space="preserve">
          <source>and then in your array class just have it start like so:</source>
          <target state="translated">а затем в вашем классе массива просто начинается так:</target>
        </trans-unit>
        <trans-unit id="2b12cc81f6a4d00eece3e0f6ae508cc8b4c32f59" translate="yes" xml:space="preserve">
          <source>for array initiating where &lt;strong&gt;Array.newInstance(class of array, size of array)&lt;/strong&gt;. Class can be both primitive (int.class) and object (Integer.class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;для инициации массива, где &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array.newInstance (класс массива, размер массива)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Класс может быть как примитивным (int.class), так и объектом (Integer.class).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13b657f1bfb3dcf5a2120341e08c0996b3657ace" translate="yes" xml:space="preserve">
          <source>in this case you use a java.lang.reflect.Array.newInstance to create the array, and it will not be an Object[], but a real T[].
You should not worry of it not being final, since it is managed inside your class.
Note that you need a non null object on the push() to be able to get the type to use, so I added a check on the data you push and throw an exception there.</source>
          <target state="translated">В этом случае для создания массива вы используете java.lang.reflect.Array.newInstance,и это будет не Object[],а реальный T[].Не стоит беспокоиться о том,что он не является окончательным,так как управляется внутри вашего класса.Обратите внимание,что вам нужен не нулевой объект на push(),чтобы получить возможность использовать тип,поэтому я добавил проверку на данные,которые вы туда отправляете,и бросил туда исключение.</target>
        </trans-unit>
        <trans-unit id="d575e92f6e78dfc9ee7b6d9f6680fd8e354625d8" translate="yes" xml:space="preserve">
          <source>result:</source>
          <target state="translated">result:</target>
        </trans-unit>
        <trans-unit id="d0431ed373bfd98aaa10ea4140729e6d20c83920" translate="yes" xml:space="preserve">
          <source>starting a &lt;code&gt;new Generic Invoker[]&lt;/code&gt; will cause an issue with unchecked but there shouldn't actually be any issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;запуск &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Generic Invoker[]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызовет проблему с непроверенным, но на самом деле не должно быть никаких проблем.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10eab4850ec6f4bb16c0a5e5d691b70c53338706" translate="yes" xml:space="preserve">
          <source>try this.</source>
          <target state="translated">Попробуй это.</target>
        </trans-unit>
        <trans-unit id="1a7c779c62a097b358907b5e85dd56db377c8b60" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;SIZE&lt;/code&gt; is a constant and &lt;code&gt;T&lt;/code&gt; is a type identifier</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SIZE&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это константа, а &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - идентификатор типа&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8ea2a26fb17636f2877de462b56c1020c26ddd8" translate="yes" xml:space="preserve">
          <source>where Item is a class I defined containing the member:</source>
          <target state="translated">где Элемент-это класс,который я определил,содержащий член:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
