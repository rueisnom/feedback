<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/5223">
    <body>
      <group id="5223">
        <trans-unit id="aff9d4340f73b040b185309d48cc8fba875bd1dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.keys&lt;/code&gt; or &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; does not work for symbolic properties. To return them you need to use &lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Object.keys&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no funciona para propiedades simb&amp;oacute;licas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para devolverlos, debe usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ba6b40ac70c715023078500c5a0ea8af385b8a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;: Objects can have symbolic properties which can not be returned via Object.key method. So the answer would be incomplete without mentioning them.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Editar&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : los objetos pueden tener propiedades simb&amp;oacute;licas que no se pueden devolver a trav&amp;eacute;s del m&amp;eacute;todo Object.key. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces la respuesta ser&amp;iacute;a incompleta sin mencionarlos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a80277a7bcb015de3a9940e282385adb0e9c0dab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Here's an update as of 2016 and &lt;a href=&quot;http://kangax.github.io/compat-table/es5/&quot;&gt;widespread deployment of ES5&lt;/a&gt; and beyond.&lt;/strong&gt;  For IE9+ and all other modern ES5+ capable browsers, you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/a&gt; so the above code just becomes:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay una actualizaci&amp;oacute;n a partir de 2016 y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://kangax.github.io/compat-table/es5/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una implementaci&amp;oacute;n generalizada de ES5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y m&amp;aacute;s all&amp;aacute;. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Para IE9 + y todos los dem&amp;aacute;s navegadores modernos compatibles con ES5 +, puede usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt; &lt;code&gt;Object.keys()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para que el c&amp;oacute;digo anterior se convierta en:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01ee39c04e7b3a3f6e885fbf6878227bb8a4f46d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If not&lt;/strong&gt;, and you don't want to mess around with Object properties for whatever reason, and are already using jQuery, a plugin is equally accessible:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no es as&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y no desea perder el tiempo con las propiedades de Object por cualquier raz&amp;oacute;n, y ya est&amp;aacute; utilizando jQuery, un complemento es igualmente accesible:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29387de25e1ad459fa91e09a7f78167244ed7335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updated&lt;/strong&gt;: If you're using &lt;a href=&quot;http://underscorejs.org/#size&quot;&gt;Underscore.js&lt;/a&gt; (recommended, it's lightweight!), then you can just do</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Actualizado&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : si est&amp;aacute; utilizando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/#size&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (&amp;iexcl;recomendado, es liviano!), Entonces simplemente puede hacer&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="372f60334aa5d8918e891d52c780ab816ff7ba23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb58fc07f57120465fecbdd6ce34362edeb89a4c" translate="yes" xml:space="preserve">
          <source>@palmsey: In fairness to the OP, the JavaScript documentation actually explicitly refer to using variables of type Object in this manner as &quot;associative arrays&quot;.</source>
          <target state="translated">@palmsey:Para ser justos con el OP,la documentación de JavaScript en realidad se refiere explícitamente al uso de variables de tipo Objeto de esta manera como &quot;matrices asociativas&quot;.</target>
        </trans-unit>
        <trans-unit id="fdceb8cf1cc8591c91a2b534406b7bb08e7adfd8" translate="yes" xml:space="preserve">
          <source>@palmsey: In fairness to the OP, the javascript docs actually explicitly refer to using variables of type Object in this manner as &quot;associative arrays&quot;.</source>
          <target state="translated">@palmsey:Para ser justos con el OP,los documentos de javascript en realidad se refieren explícitamente al uso de variables de tipo Objeto de esta manera como &quot;matrices asociativas&quot;.</target>
        </trans-unit>
        <trans-unit id="6e5832f4c55f1e545bc4e89a6cf668bdf0a3ec14" translate="yes" xml:space="preserve">
          <source>A bit late to the game, but a nice way to achieve this (IE9+ only) is to define a magic getter on the length property:</source>
          <target state="translated">Un poco tarde para el juego,pero una buena manera de lograrlo (sólo para IE9+)es definir un receptor mágico en la propiedad de longitud:</target>
        </trans-unit>
        <trans-unit id="b997b042a19886b8384260f4d464f3677702b48e" translate="yes" xml:space="preserve">
          <source>A variation on some of the above is:</source>
          <target state="translated">Una variación de algunas de las anteriores es:</target>
        </trans-unit>
        <trans-unit id="70d48cb7ad5e16c615a748fee2a00c73c4c0267f" translate="yes" xml:space="preserve">
          <source>And in fairness to @palmsey he was quite correct, they aren't associative arrays, they're definitely objects :) - doing the job of an associative array. But as regards the wider point you definitely seem to have the right of it according to this rather fine article I found:</source>
          <target state="translated">Y para ser justos con @palmsey estaba en lo cierto,no son conjuntos asociativos,son definitivamente objetos :)-haciendo el trabajo de un conjunto asociativo.Pero en lo que respecta al punto más amplio,parece que tienes derecho a ello,según este buen artículo que encontré:</target>
        </trans-unit>
        <trans-unit id="6b6b52cf3aa95f9e8500d867db60f439abfc8d11" translate="yes" xml:space="preserve">
          <source>And you can just use it like so:</source>
          <target state="translated">Y puedes usarlo así:</target>
        </trans-unit>
        <trans-unit id="d777004875c1851a34cef8236b43801fb3696637" translate="yes" xml:space="preserve">
          <source>Below is a version of James Coglan's answer in CoffeeScript for those who have abandoned straight JavaScript :)</source>
          <target state="translated">Abajo hay una versión de la respuesta de James Coglan en CoffeeScript para los que han abandonado el Javascript recto :)</target>
        </trans-unit>
        <trans-unit id="ffc0d2675d355953f587c1203936b355f470438f" translate="yes" xml:space="preserve">
          <source>But according to all this, isn't the &lt;a href=&quot;https://stackoverflow.com/questions/5223/length-of-javascript-associative-array#5234&quot;&gt;accepted answer&lt;/a&gt; itself bad practice?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero de acuerdo con todo esto, &amp;iquest;no es la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/5223/length-of-javascript-associative-array#5234&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;respuesta aceptada&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una mala pr&amp;aacute;ctica?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="295d7de64698d34bea1cec9154a0b3e8a94e06b6" translate="yes" xml:space="preserve">
          <source>For some cases it is better to just store the size in a separate variable. Especially, if you're adding to the array by one element in one place and can easily increment the size. It would obviously work much faster if you need to check the size often.</source>
          <target state="translated">En algunos casos es mejor guardar el tamaño en una variable separada.Especialmente,si estás añadiendo a la matriz un elemento en un lugar y puedes incrementar fácilmente el tamaño.Obviamente funcionaría mucho más rápido si necesitas comprobar el tamaño a menudo.</target>
        </trans-unit>
        <trans-unit id="bdd8410c694497d5a25a7528ba7d057aaaabc060" translate="yes" xml:space="preserve">
          <source>Get the &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length&quot;&gt;&lt;strong&gt;&lt;code&gt;.length&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; property of that array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Obtenga la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length&quot;&gt;&lt;strong&gt; &lt;code&gt;.length&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de esa matriz.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f171d4629413bec45e1450432a34e03338b7050" translate="yes" xml:space="preserve">
          <source>Here is a completely different solution that will only work in more modern browsers (IE9+, Chrome, Firefox 4+, Opera 11.60+, Safari 5.1+)</source>
          <target state="translated">He aquí una solución completamente diferente que sólo funcionará en los navegadores más modernos (IE9+,Chrome,Firefox 4+,Opera 11.60+,Safari 5.1+)</target>
        </trans-unit>
        <trans-unit id="6b97de7cd915783857e80d47bccb54718eee4b9a" translate="yes" xml:space="preserve">
          <source>Here's a different version of James Cogan's answer. Instead of passing an argument, just prototype out the Object class and make the code cleaner.</source>
          <target state="translated">Aquí hay una versión diferente de la respuesta de James Cogan.En lugar de pasar un argumento,sólo prototipo de la clase de objeto y hacer el código más limpio.</target>
        </trans-unit>
        <trans-unit id="bd5a0f85a3d84b461a618b968c2a9308ce4ca19b" translate="yes" xml:space="preserve">
          <source>Here's how and don't forget to check that the property is not on the prototype chain:</source>
          <target state="translated">Aquí está cómo y no te olvides de comprobar que la propiedad no está en la cadena del prototipo:</target>
        </trans-unit>
        <trans-unit id="a0ebcc8c8c34be735896bc463658b775240c7e89" translate="yes" xml:space="preserve">
          <source>Here's the most cross-browser solution.</source>
          <target state="translated">Aquí está la solución más cruzada de los navegadores.</target>
        </trans-unit>
        <trans-unit id="2bb8ed62d771b45ef7c46a2be97f0634e9671aec" translate="yes" xml:space="preserve">
          <source>How to use this particular function:</source>
          <target state="translated">Cómo utilizar esta función en particular:</target>
        </trans-unit>
        <trans-unit id="276b3c8218040ebd6536c0b81e23717484555b47" translate="yes" xml:space="preserve">
          <source>I don't think that answer should be the accepted one as it can't be trusted to work if you have any other code running in the same execution context. To do it in a robust fashion surely you would need to define the size method within myArray and check for the type of the members as you iterate through them.</source>
          <target state="translated">No creo que esa respuesta deba ser la aceptada,ya que no se puede confiar en que funcione si tienes otro código ejecutándose en el mismo contexto de ejecución.Para hacerlo de una manera robusta seguramente necesitarías definir el método de tamaño dentro de myArray y comprobar el tipo de los miembros mientras iteras a través de ellos.</target>
        </trans-unit>
        <trans-unit id="6b62b490ea546e9f848200e9c7a08dcc78ae3cf3" translate="yes" xml:space="preserve">
          <source>I have a JavaScript object, is there a built-in or accepted best practice way to get the length of this object?</source>
          <target state="translated">Tengo un objeto de JavaScript,¿hay una forma incorporada o aceptada de mejor práctica para obtener la longitud de este objeto?</target>
        </trans-unit>
        <trans-unit id="175ccf5042a52c36903079e97c875815ddc9e651" translate="yes" xml:space="preserve">
          <source>I'm not a JavaScript expert, but it looks like you would have to loop through the elements and count them since Object doesn't have a length method:</source>
          <target state="translated">No soy experto en JavaScript,pero parece que tendrías que hacer un bucle a través de los elementos y contarlos ya que el objeto no tiene un método de longitud:</target>
        </trans-unit>
        <trans-unit id="d58084bd405f6845e4508c4c471e3bc2d282d945" translate="yes" xml:space="preserve">
          <source>If anything else has been added to Object .prototype, then the suggested code will fail:</source>
          <target state="translated">Si se ha añadido algo más al objeto .prototipo,entonces el código sugerido fallará:</target>
        </trans-unit>
        <trans-unit id="b40efd67221cfb52b6b370318e04f3bf6d3e1e5d" translate="yes" xml:space="preserve">
          <source>If we have the hash</source>
          <target state="translated">Si tenemos el hachís</target>
        </trans-unit>
        <trans-unit id="94a81e60f2ec10573e6b3d46cc580e9c4d48bbf5" translate="yes" xml:space="preserve">
          <source>If you always use the add method, the length property will be correct. If you're worried that you or others forget about using it, you could add the property counter which the others have posted to the length method, too.</source>
          <target state="translated">Si siempre usas el método de sumar,la propiedad de la longitud será correcta.Si te preocupa que tú u otros se olviden de usarlo,podrías añadir el contador de la propiedad que los otros han puesto en el método de la longitud,también.</target>
        </trans-unit>
        <trans-unit id="93cc41762cb3f972c18a453af138fffdd28f2467" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;http://en.wikipedia.org/wiki/AngularJS&quot;&gt;AngularJS&lt;/a&gt; 1.x you can do things the AngularJS way by creating a filter and using the code from any of the other examples such as the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; utilizando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/AngularJS&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AngularJS&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 1.x, puede hacer las cosas a la manera de AngularJS creando un filtro y utilizando el c&amp;oacute;digo de cualquiera de los otros ejemplos, como los siguientes:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85ecd8a93b1dcf6d9206f0f572fd323d2622a237" translate="yes" xml:space="preserve">
          <source>If you don't care about supporting Internet Explorer 8 or lower, you can easily get the number of properties in an object by applying the following two steps:</source>
          <target state="translated">Si no te preocupa el soporte de Internet Explorer 8 o inferior,puedes obtener fácilmente el número de propiedades de un objeto aplicando los dos pasos siguientes:</target>
        </trans-unit>
        <trans-unit id="269df27bb56bf387ad73226fda9d6e1fb2c14ede" translate="yes" xml:space="preserve">
          <source>If you know you don't have to worry about &lt;code&gt;hasOwnProperty&lt;/code&gt; checks, you can do this very simply:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si sabe que no tiene que preocuparse por &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hasOwnProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; comprobaciones de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hasOwnProperty&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede hacerlo de manera muy simple:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1742ad1b00c8842bd50c4b64da8e22c8f836b5a7" translate="yes" xml:space="preserve">
          <source>If you need an associative data structure that exposes its size, better use a map instead of an object.</source>
          <target state="translated">Si necesita una estructura de datos asociativa que exponga su tamaño,mejor use un mapa en lugar de un objeto.</target>
        </trans-unit>
        <trans-unit id="3a160d4f307dc253691315e7f01c0039719d09da" translate="yes" xml:space="preserve">
          <source>If you need to do this more than once, you could wrap this logic in a function:</source>
          <target state="translated">Si necesitas hacer esto más de una vez,podrías envolver esta lógica en una función:</target>
        </trans-unit>
        <trans-unit id="2b5dcfdff3299e7b6d4892fd4b60c926b5416218" translate="yes" xml:space="preserve">
          <source>In your controller:</source>
          <target state="translated">En su controlador:</target>
        </trans-unit>
        <trans-unit id="283ac5853e24e0862ce1c0781a09bf4fa4f43a72" translate="yes" xml:space="preserve">
          <source>It is a bit more elegant way to integrate hasOwnProp.</source>
          <target state="translated">Es una forma un poco más elegante de integrar a HasOwnProp.</target>
        </trans-unit>
        <trans-unit id="c5f2353aa06a07bff3a8190deeb9d91201dfa84a" translate="yes" xml:space="preserve">
          <source>JavaScript &amp;ldquo;Associative Arrays&amp;rdquo; Considered Harmful</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript &quot;Matrices asociativas&quot; considerado perjudicial&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9aa2b66ddb161be8cf4c6f2d8aa31ec9f60d91c8" translate="yes" xml:space="preserve">
          <source>Length of a JavaScript object</source>
          <target state="translated">La longitud de un objeto de JavaScript</target>
        </trans-unit>
        <trans-unit id="e57689563824f7b9deac6b513f3b86119fba165f" translate="yes" xml:space="preserve">
          <source>Now you can use this code as follows...</source>
          <target state="translated">Ahora puedes usar este código de la siguiente manera...</target>
        </trans-unit>
        <trans-unit id="cd80d05a29198a51ebf2330a69d5c679c55c0dc2" translate="yes" xml:space="preserve">
          <source>Object.entries(myObject).length</source>
          <target state="translated">Object.entries(myObject).length</target>
        </trans-unit>
        <trans-unit id="a32b06e55be6424bf9d2c8c73123b810a29b0553" translate="yes" xml:space="preserve">
          <source>Object.keys(myObject).length</source>
          <target state="translated">Object.keys(myObject).length</target>
        </trans-unit>
        <trans-unit id="372bf7c5862713aeffe66a0151e12f94efd2491a" translate="yes" xml:space="preserve">
          <source>Object.values(myObject).length</source>
          <target state="translated">Object.values(myObject).length</target>
        </trans-unit>
        <trans-unit id="7542cf9b44d29bf35dc120c6d2f021690d8808d6" translate="yes" xml:space="preserve">
          <source>Of course, you could always overwrite the methods. But even if you do, your code would probably fail noticeably, making it easy to debug. ;)</source>
          <target state="translated">Por supuesto,siempre se pueden sobrescribir los métodos.Pero incluso si lo haces,tu código probablemente fallaría notablemente,facilitando la depuración.;)</target>
        </trans-unit>
        <trans-unit id="482962e4e5f8b906f68c051715d0993b6a1ec6fe" translate="yes" xml:space="preserve">
          <source>Or in your view:</source>
          <target state="translated">O en tu opinión:</target>
        </trans-unit>
        <trans-unit id="9de3a3a9d215ecb3a1e8a51ff161f02ee966f750" translate="yes" xml:space="preserve">
          <source>Run either &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;strong&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; to get an array that contains the names of only those properties that are &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;&lt;strong&gt;enumerable&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames&quot;&gt;&lt;strong&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; if you want to also include the names of properties that are not enumerable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejecute &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;strong&gt; &lt;code&gt;Object.keys()&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener una matriz que contenga los nombres de solo aquellas propiedades &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;enumerables&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames&quot;&gt;&lt;strong&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si desea incluir tambi&amp;eacute;n los nombres de propiedades que no son enumerables.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="05fc35c3f038e4ce8e1b548fd0f738548ca239cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://jsfiddle.net/QHDt7/&quot;&gt;jsFiddle&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ver &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/QHDt7/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jsFiddle&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b00dbbc336d01c32ae845ae3f5e12a27428c50d1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://jsfiddle.net/0x11tv73/5/&quot;&gt;&lt;strong&gt;this Fiddle&lt;/strong&gt;&lt;/a&gt; for a demo.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea tambi&amp;eacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/0x11tv73/5/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;este viol&amp;iacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para una demostraci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f95f10584eacfb9e38629b34389d6c32bf88cfd" translate="yes" xml:space="preserve">
          <source>Setup your Associative Array class</source>
          <target state="translated">Configure su clase de Array Asociativo...</target>
        </trans-unit>
        <trans-unit id="b0c42352f7d1575f0f1c1cc8ad2b07a8026dda69" translate="yes" xml:space="preserve">
          <source>Simply use this to get the &lt;code&gt;length&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simplemente use esto para obtener la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cf3bc7a08c0b65d92d9bd10b9401700aad1c40b" translate="yes" xml:space="preserve">
          <source>Specify a prototype size() function for Object</source>
          <target state="translated">Especificar una función de tamaño de prototipo()para el Objeto</target>
        </trans-unit>
        <trans-unit id="bb0c29a67e3a48cceb9817095512ab8790398ea2" translate="yes" xml:space="preserve">
          <source>Symbol type was added to the language to create unique identifiers for object properties. Main benefit of Symbol type is prevention of overwrites.</source>
          <target state="translated">El tipo de símbolo se añadió al lenguaje para crear identificadores únicos para las propiedades de los objetos.El principal beneficio de Symbol type es la prevención de sobrescritura.</target>
        </trans-unit>
        <trans-unit id="5cde4134fe275d7a4c49ab0617cc7b1364db71ce" translate="yes" xml:space="preserve">
          <source>The most robust answer (i.e. that captures the intent of what you're trying to do while causing the fewest bugs) would be:</source>
          <target state="translated">La respuesta más robusta (es decir,que capta la intención de lo que se intenta hacer mientras se causan menos bichos)sería:</target>
        </trans-unit>
        <trans-unit id="e25098d746ad5a722df2ff4b0d285850f4dceb88" translate="yes" xml:space="preserve">
          <source>The simplest way is like this</source>
          <target state="translated">La forma más simple es así</target>
        </trans-unit>
        <trans-unit id="d28c26fdb4f4d791d0754fe04c23936a67123eb2" translate="yes" xml:space="preserve">
          <source>There's a sort of convention in JavaScript that you &lt;a href=&quot;https://stackoverflow.com/questions/10757455/object-prototype-is-verboten&quot;&gt;don't add things to Object.prototype&lt;/a&gt;, because it can break enumerations in various libraries. Adding methods to Object is usually safe, though.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay una especie de convenci&amp;oacute;n en JavaScript que &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10757455/object-prototype-is-verboten&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no agrega cosas al Object.prototype&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , porque puede romper las enumeraciones en varias bibliotecas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, agregar m&amp;eacute;todos a Object generalmente es seguro.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ce5ec4cf2c58b9437bc48b92c63669f53f8aaf9" translate="yes" xml:space="preserve">
          <source>This doesn't have to modify any existing prototype since &lt;code&gt;Object.keys()&lt;/code&gt; is now built in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto no tiene que modificar ning&amp;uacute;n prototipo existente ya que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.keys()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ahora est&amp;aacute; integrado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7192c381d20c2746813ec903bdefed563bc40ba" translate="yes" xml:space="preserve">
          <source>This is better than the accepted answer because it uses native Object.keys if exists.
Thus, it is the fastest for all modern browsers.</source>
          <target state="translated">Esto es mejor que la respuesta aceptada porque usa claves de objetos nativos si existen.Por lo tanto,es la más rápida para todos los navegadores modernos.</target>
        </trans-unit>
        <trans-unit id="53cdfc9054604c821e5cc77847325e2770222f6a" translate="yes" xml:space="preserve">
          <source>This method gets all your object's property names in an array, so you can get the length of that array which is equal to your object's keys' length.</source>
          <target state="translated">Este método obtiene todos los nombres de las propiedades de tu objeto en una matriz,por lo que puedes obtener la longitud de esa matriz que es igual a la longitud de las claves de tu objeto.</target>
        </trans-unit>
        <trans-unit id="1b4e4dd5dedd60c21b1e2d40ef5986a69c044c8f" translate="yes" xml:space="preserve">
          <source>This works for me:</source>
          <target state="translated">Esto funciona para mí:</target>
        </trans-unit>
        <trans-unit id="25d0cf1f0eb020ee6de34a74af86d42a38341e42" translate="yes" xml:space="preserve">
          <source>To not mess with the prototype or other code, you could build and extend your own object:</source>
          <target state="translated">Para no meterse con el prototipo u otro código,podrías construir y ampliar tu propio objeto:</target>
        </trans-unit>
        <trans-unit id="bbac218f12b78673c68e9ea6124ff3eb53d465d7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Object.keys(myObject).length&lt;/code&gt; to get the length of object/array</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.keys(myObject).length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener la longitud del objeto / matriz&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="cf4583a757396cd65d0379373f2fc9819ef357a0" translate="yes" xml:space="preserve">
          <source>We can find the length of Object by using :</source>
          <target state="translated">Podemos encontrar la longitud del objeto usando..:</target>
        </trans-unit>
        <trans-unit id="ddcb3e8f53fcf30a1554b109d6131ac0b21719bb" translate="yes" xml:space="preserve">
          <source>What about something like this --</source>
          <target state="translated">¿Qué tal algo como esto...</target>
        </trans-unit>
        <trans-unit id="ff8e0573a62559a5911170543204091ad7d17ae0" translate="yes" xml:space="preserve">
          <source>Would give &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dar&amp;iacute;a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb93f1b604d95b102d4a6a47602b71c16a05992a" translate="yes" xml:space="preserve">
          <source>You can always do &lt;code&gt;Object.getOwnPropertyNames(myObject).length&lt;/code&gt; to get the same result as &lt;code&gt;[].length&lt;/code&gt; would give for normal array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Siempre puede hacer &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getOwnPropertyNames(myObject).length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener el mismo resultado que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[].length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dar&amp;iacute;a para una matriz normal.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371a3c0d66e12f137190be21e8217683ac48f9b9" translate="yes" xml:space="preserve">
          <source>You can simply use &lt;code&gt;Object.keys(obj).length&lt;/code&gt; on any object to get its length. Object.keys returns an array containing all of the object &lt;em&gt;keys&lt;/em&gt; (properties) which can come in handy for finding the length of that object using the length of the corresponding array. You can even write a &lt;em&gt;function&lt;/em&gt; for this. Let's get &lt;em&gt;creative&lt;/em&gt; and write a &lt;strong&gt;method&lt;/strong&gt; for it as well (along with a more convienient getter property):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simplemente puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.keys(obj).length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en cualquier objeto para obtener su longitud. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keys devuelve una matriz que contiene todas las &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;claves de&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objeto &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(propiedades) que pueden ser &amp;uacute;tiles para encontrar la longitud de ese objeto usando la longitud de la matriz correspondiente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Incluso puedes escribir una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para esto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vamos a ser &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;creativos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y escribir un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para ello tambi&amp;eacute;n (junto con una propiedad getter m&amp;aacute;s conveniente):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f65b48ee325223952cf49c4399ee4f8164026e4" translate="yes" xml:space="preserve">
          <source>hash =  {&quot;a&quot; : &quot;b&quot;, &quot;c&quot;: &quot;d&quot;};</source>
          <target state="translated">hash={&quot;a&quot;:&quot;b&quot;,&quot;c&quot;:&quot;d&quot;};</target>
        </trans-unit>
        <trans-unit id="5178de2ae63f3b886a77b28a5e333ec27482a6b0" translate="yes" xml:space="preserve">
          <source>jsfiddle example: &lt;a href=&quot;http://jsfiddle.net/qar4j/1/&quot;&gt;http://jsfiddle.net/qar4j/1/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplo de jsfiddle: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/qar4j/1/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsfiddle.net/qar4j/1/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="224d7051b5ee71492c18f2f0f05ef51c3d9779a7" translate="yes" xml:space="preserve">
          <source>keys(hash).length</source>
          <target state="translated">keys(hash).length</target>
        </trans-unit>
        <trans-unit id="ead733ce39cf199292bc18e7d30283bf24de1bbb" translate="yes" xml:space="preserve">
          <source>we can get the length using the length of the keys which is the length of the hash:</source>
          <target state="translated">podemos obtener la longitud usando la longitud de las teclas que es la longitud del hachís:</target>
        </trans-unit>
        <trans-unit id="5bcaff8472d0922cf25ecff9750f9c0d87185cdf" translate="yes" xml:space="preserve">
          <source>where myobject is the object of what you want the length</source>
          <target state="translated">donde mi objeto es el objeto de lo que quieres la longitud</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
