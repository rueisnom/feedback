<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/520650">
    <body>
      <group id="520650">
        <trans-unit id="839e4a2006b278a93c4dc0f1936567078302c3f3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;</source>
          <target state="translated">&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="25e853a2a24fa0ad48c2bee321bcc5a15edc14d2" translate="yes" xml:space="preserve">
          <source>1- update your local meta-data using  : &lt;strong&gt;git fetch --all&lt;/strong&gt;</source>
          <target state="translated">1- &lt;strong&gt;git fetch --all을&lt;/strong&gt; 사용하여 로컬 메타 데이터를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="482a680dd8a4b457825a7c710320c30db8dc88e8" translate="yes" xml:space="preserve">
          <source>2- show your remote and local branches using : &lt;strong&gt;git branch -a&lt;/strong&gt;
, see the following Screenshot</source>
          <target state="translated">2- &lt;strong&gt;git branch -a를&lt;/strong&gt; 사용하여 원격 및 로컬 브랜치를 표시합니다. 다음 스크린 샷을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7b5db2296ee74dd789740192433afaa7c114792a" translate="yes" xml:space="preserve">
          <source>3- switch to target branch , that you want to linked with the remote: using</source>
          <target state="translated">3- 리모컨과 연결하려는 대상 분기로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="8a4e5088c58753bba6f565a36e19a1ee2a167e30" translate="yes" xml:space="preserve">
          <source>4- Link your local branch to a remote branch using:</source>
          <target state="translated">4- 다음을 사용하여 로컬 지점을 원격 지점에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="302a1eb1c80169524e62e458497beb1c1ebb2884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git branch --set-upstream&lt;/code&gt; is deprecated and may be removed in a relatively distant future.  &lt;code&gt;git branch [-u|--set-upstream-to]&lt;/code&gt; has been introduced with a saner order of arguments.</source>
          <target state="translated">&lt;code&gt;git branch --set-upstream&lt;/code&gt; 은 더 이상 사용되지 않으며 비교적 먼 미래에 제거 될 수 있습니다. &lt;code&gt;git branch [-u|--set-upstream-to]&lt;/code&gt; 가 더 깔끔한 인수로 소개되었습니다.</target>
        </trans-unit>
        <trans-unit id="c6f1ad77e070140e29440cec460e4a5191823e09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As of Git 1.7.0:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;힘내 1.7.0 현재 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e7b4681c21c9698c251f25bccf90351be796e3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As of Git 1.8.0:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;힘내 1.8.0 현재 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Notes:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0d650f874faccda51dd7cf956cf555ce99f0922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary.&lt;/strong&gt; Just run this 2 commands:</source>
          <target state="translated">&lt;strong&gt;요약.&lt;/strong&gt; 이 두 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="ef40c1a17bf0eb5459615f2caafe9f134e270bd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;git branch --set-upstream-to  nameOfRemoteBranch&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;자식 브랜치-설정-업스트림-nameOfRemoteBranch&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="433c0db2f1da0f707af209684bbd897b01424949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;git checkout branchName&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;자식 체크 아웃 branchName&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2175dce9f18d19c6790ef2e6a5211f0a8b5dde09" translate="yes" xml:space="preserve">
          <source>Actually for the accepted answer to work:</source>
          <target state="translated">실제로 받아 들여진 대답이 작동하려면 :</target>
        </trans-unit>
        <trans-unit id="db0d229e5fd37417113eed0e9bec214db6913d58" translate="yes" xml:space="preserve">
          <source>After a &lt;code&gt;git pull&lt;/code&gt; :</source>
          <target state="translated">&lt;code&gt;git pull&lt;/code&gt; 후 :</target>
        </trans-unit>
        <trans-unit id="be11e15bd052b944663a1bf9d1d521010b55378d" translate="yes" xml:space="preserve">
          <source>All of the above commands will cause local branch &lt;code&gt;foo&lt;/code&gt; to track remote branch &lt;code&gt;foo&lt;/code&gt; from remote &lt;code&gt;upstream&lt;/code&gt;.</source>
          <target state="translated">위의 모든 명령은 로컬 분기 &lt;code&gt;foo&lt;/code&gt; 가 원격 &lt;code&gt;upstream&lt;/code&gt; 에서 원격 분기 foo 를 추적하게합니다.</target>
        </trans-unit>
        <trans-unit id="b9a4046a8a02bc1fe2ebc567693dff9da8ef9159" translate="yes" xml:space="preserve">
          <source>And push:</source>
          <target state="translated">그리고 밀어 :</target>
        </trans-unit>
        <trans-unit id="3381d379cdf90a3ccfbab0ab749a0d66a5be3140" translate="yes" xml:space="preserve">
          <source>And remotes come by itelsef, even if not linked locally:</source>
          <target state="translated">리모컨은 로컬로 연결되어 있지 않더라도 itelsef가 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f5406aee60dad4beb1bc59c6f8110d3fe911279a" translate="yes" xml:space="preserve">
          <source>Be wary of &lt;strong&gt;push.default&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;push.default&lt;/strong&gt; 주의하십시오.</target>
        </trans-unit>
        <trans-unit id="0c6d39b82817a1c728ef4d41ca55503af512eb70" translate="yes" xml:space="preserve">
          <source>But of course, still no local branch:</source>
          <target state="translated">물론 현지 지점은 없습니다.</target>
        </trans-unit>
        <trans-unit id="321f07a5dc46c5faa77250eebfbfb9153b41b0c1" translate="yes" xml:space="preserve">
          <source>Defining the upstream will fail with newly created remotes that have not been fetched. In that case run &lt;code&gt;git fetch upstream&lt;/code&gt; beforehand.</source>
          <target state="translated">가져 오지 않은 새로 만든 리모컨으로 업스트림을 정의 할 수 없습니다. 이 경우 &lt;code&gt;git fetch upstream&lt;/code&gt; 을 미리 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="642e0b6aa9498866f9b36f67f68098584d5415a9" translate="yes" xml:space="preserve">
          <source>Editing &lt;code&gt;.git/config&lt;/code&gt; is probably the easiest and fastest way. That's what the Git commands for handling remote branches are doing, anyway.</source>
          <target state="translated">&lt;code&gt;.git/config&lt;/code&gt; 를 편집하는 것이 가장 쉽고 빠른 방법 일 것입니다. 그것이 바로 원격 브랜치를 처리하기위한 Git 명령이하는 일입니다.</target>
        </trans-unit>
        <trans-unit id="ec471d84b36457f0d9d75c03377c9e3cd5f3de93" translate="yes" xml:space="preserve">
          <source>Example of use:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="e3b0f9cf9fe54392b9850690e70d5a19b3049ed0" translate="yes" xml:space="preserve">
          <source>Followed by the previous command to promote the local branch into a tracking branch.</source>
          <target state="translated">로컬 지사를 추적 지사로 승격시키기 위해 이전 명령이 뒤 따릅니다.</target>
        </trans-unit>
        <trans-unit id="69b7a10c18ed24060dc228ffad4955ae5e20a358" translate="yes" xml:space="preserve">
          <source>For 1.6.x, it can be done using the &lt;a href=&quot;http://github.com/webmat/git_remote_branch&quot;&gt;git_remote_branch&lt;/a&gt; tool:</source>
          <target state="translated">1.6.x의 경우 &lt;a href=&quot;http://github.com/webmat/git_remote_branch&quot;&gt;git_remote_branch&lt;/a&gt; 도구를 사용하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8e4f74b3f04939dc01a5fb1898f9268cd812162" translate="yes" xml:space="preserve">
          <source>For anyone who, like me, just wants to sync up your local branch name with the remote branch name, here's a handy command:</source>
          <target state="translated">나와 같은 로컬 지점 이름을 원격 지점 이름과 동기화하려는 사람에게는 다음과 같은 편리한 명령이 있습니다.</target>
        </trans-unit>
        <trans-unit id="201699513ef2a4c0ba3fea740ff38c08ed15cca2" translate="yes" xml:space="preserve">
          <source>For creating new branch, we could use following command</source>
          <target state="translated">새 브랜치를 만들려면 다음 명령을 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="831553e85e104e6db643f645bb7209950cd3a1ac" translate="yes" xml:space="preserve">
          <source>For the already created branch to create link between remote then from that branch use below command</source>
          <target state="translated">이미 생성 된 브랜치가 리모트와 그 사이의 링크를 만들려면 아래 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b4e7a0f12040e5bf87933315fd8fbe4d69103f52" translate="yes" xml:space="preserve">
          <source>Given a branch &lt;code&gt;foo&lt;/code&gt; and a remote &lt;code&gt;upstream&lt;/code&gt;:</source>
          <target state="translated">브랜치 &lt;code&gt;foo&lt;/code&gt; 와 원격 &lt;code&gt;upstream&lt;/code&gt; 주어지면 :</target>
        </trans-unit>
        <trans-unit id="b90a65bb3f023289543245202bb91a06623e994f" translate="yes" xml:space="preserve">
          <source>Given that &lt;code&gt;$BRANCH&lt;/code&gt; and &lt;code&gt;origin/$BRANCH&lt;/code&gt; exist, and you've not currently checked out &lt;code&gt;$BRANCH&lt;/code&gt; (switch away if you have), do:</source>
          <target state="translated">&lt;code&gt;$BRANCH&lt;/code&gt; 및 &lt;code&gt;origin/$BRANCH&lt;/code&gt; 가 있고 현재 &lt;code&gt;$BRANCH&lt;/code&gt; 체크 아웃하지 않은 경우 (있는 경우 전환), 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b2082b0529d43107e21b566b54a231d3847c067f" translate="yes" xml:space="preserve">
          <source>Here, using &lt;code&gt;github&lt;/code&gt; and &lt;code&gt;git version 2.1.4&lt;/code&gt;, just do:</source>
          <target state="translated">여기에서 &lt;code&gt;github&lt;/code&gt; 과 &lt;code&gt;git version 2.1.4&lt;/code&gt; 를 사용하여 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="99468834166619cff3d41953aa1861fa3254e72e" translate="yes" xml:space="preserve">
          <source>I believe that in as early as Git 1.5.x you could make a local branch &lt;code&gt;$BRANCH&lt;/code&gt; track a remote branch &lt;code&gt;origin/$BRANCH&lt;/code&gt;, like this.</source>
          <target state="translated">Git 1.5.x부터 로컬 브랜치 &lt;code&gt;$BRANCH&lt;/code&gt; 를 원격 브랜치 &lt;code&gt;origin/$BRANCH&lt;/code&gt; 만들 수 있다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="0892ad751b32f0e3e4e34baf158a193449f5e251" translate="yes" xml:space="preserve">
          <source>I do this as a side-effect of pushing with the &lt;code&gt;-u&lt;/code&gt; option as in</source>
          <target state="translated">나는 &lt;code&gt;-u&lt;/code&gt; 옵션을 사용하여 밀어 넣는 부작용 으로이 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="6f837b2de15855d9503a43ae7bd7a697e5e30654" translate="yes" xml:space="preserve">
          <source>I know I can just edit the &lt;code&gt;.git/config&lt;/code&gt; file, but it seems there should be an easier way.</source>
          <target state="translated">&lt;code&gt;.git/config&lt;/code&gt; 파일을 편집 할 수 있다는 것을 알고 있지만 더 쉬운 방법이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9fc9269153f81927987af9afa58dd0d075a8070b" translate="yes" xml:space="preserve">
          <source>I know how to make a new branch that tracks remote branches, but &lt;strong&gt;how do I make an existing branch track a remote branch?&lt;/strong&gt;</source>
          <target state="translated">원격 지점을 추적하는 새 지점을 만드는 방법을 알고 있지만 &lt;strong&gt;기존 지점 트랙을 원격 지점으로 만드는 방법은 무엇입니까?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5854d5480066570d4625bf001550cec8c993aae" translate="yes" xml:space="preserve">
          <source>I use the following command (Suppose your local branch name is &quot;branch-name-local&quot; and remote branch name is &quot;branch-name-remote&quot;):</source>
          <target state="translated">다음 명령을 사용합니다 (로컬 브랜치 이름은 &quot;branch-name-local&quot;이고 원격 브랜치 이름은 &quot;branch-name-remote&quot;임).</target>
        </trans-unit>
        <trans-unit id="67a310bb050c3895563039216ae3c81ab2039da0" translate="yes" xml:space="preserve">
          <source>If both local and remote branches have the same name, then just do the following:</source>
          <target state="translated">로컬 및 원격 분기의 이름이 동일한 경우 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9ddc227136798dc6b8b2e8377662f800a3273982" translate="yes" xml:space="preserve">
          <source>If you don't want to muck with the file by hand (and it's not that hard to do), you can always use &lt;code&gt;git config&lt;/code&gt; to do it...but again, that's just going to edit the &lt;code&gt;.git/config&lt;/code&gt; file, anyway.</source>
          <target state="translated">직접 파일을 다루지 않으려는 경우 (그리고 그렇게 어렵지는 않지만) 항상 &lt;code&gt;git config&lt;/code&gt; 를 사용하여 수행 할 수 있지만 다시 한 번 &lt;code&gt;.git/config&lt;/code&gt; 파일을 편집하면됩니다. 어쨌든.</target>
        </trans-unit>
        <trans-unit id="9fc01d2115fdd97a758d7db92ffd56b0c9e0867d" translate="yes" xml:space="preserve">
          <source>If you tried to &quot;git push&quot; when on the &quot;upstream&quot; branch, with &lt;strong&gt;push.default matching&lt;/strong&gt; git would automatically try to merge the local branch &quot;master&quot; into &quot;upstream/master&quot;, causing a whole lot of chaos.</source>
          <target state="translated">&quot;upstream&quot;브랜치에있을 때 &quot;git push&quot;를 시도하면 &lt;strong&gt;push.default&lt;/strong&gt; 와 &lt;strong&gt;일치하는&lt;/strong&gt; git은 자동으로 로컬 브랜치 &quot;master&quot;를 &quot;upstream / master&quot;로 병합하려고 시도하여 많은 혼란을 야기합니다.</target>
        </trans-unit>
        <trans-unit id="ca62f3456b5d2ef5e3f4fb01aa64cafbe280eb25" translate="yes" xml:space="preserve">
          <source>In a somewhat related way I was trying to add a remote tracking branch to an existing branch, but did not have access to that remote repository on the system where I wanted to add that remote tracking branch on (because I frequently export a copy of this repo via sneakernet to another system that has the access to push to that remote). I found that there was no way to force adding a remote branch on the local that hadn't been fetched yet (so local did not know that the branch existed on the remote and I would get the error: &lt;code&gt;the requested upstream branch 'origin/remotebranchname' does not exist&lt;/code&gt;).</source>
          <target state="translated">다소 관련이있는 방법으로 기존 지점에 원격 추적 분기를 추가하려고했지만 원격 추적 분기를 추가하려는 시스템에서 해당 원격 저장소에 액세스 할 수 없었습니다 (이 사본을 자주 내보내므로) sneakernet을 통해 해당 원격으로 푸시 할 수있는 다른 시스템으로 리포지토리). 아직 가져 오지 않은 로컬에 원격 분기를 강제로 추가 할 수있는 방법이 없다는 것을 알았습니다 (따라서 로컬은 분기가 원격에 존재한다는 것을 알지 못했고 오류가 발생했습니다 : &lt;code&gt;the requested upstream branch 'origin/remotebranchname' does not exist&lt;/code&gt; ) 없습니다 ).</target>
        </trans-unit>
        <trans-unit id="462d440c03124462db7fb625dec6df8826bb4e8a" translate="yes" xml:space="preserve">
          <source>In the end I managed to add the new, previously unknown remote branch (without fetching) by adding a new head file at &lt;code&gt;.git/refs/remotes/origin/remotebranchname&lt;/code&gt; and then copying the ref (eyeballing was quickest, lame as it was ;-) from the system with access to the origin repo to the workstation (with the local repo where I was adding the remote branch on).</source>
          <target state="translated">결국 나는 &lt;code&gt;.git/refs/remotes/origin/remotebranchname&lt;/code&gt; 에 새 헤드 파일을 추가 한 다음 참조를 복사하여 이전에 알려지지 않은 새로운 원격 브랜치를 (페치없이) 추가 할 수있었습니다. -) 원점 저장소에 워크 스테이션에 대한 액세스 권한이있는 시스템 (원격 지사를 추가 한 로컬 저장소 사용).</target>
        </trans-unit>
        <trans-unit id="f53b845e511550d070f01e7e1e45f0c6618de79e" translate="yes" xml:space="preserve">
          <source>In very short</source>
          <target state="translated">아주 짧게</target>
        </trans-unit>
        <trans-unit id="05302f87a14f905f4a86d0e207c7e56b341d8ba2" translate="yes" xml:space="preserve">
          <source>It was tempting to say &lt;code&gt;git branch --set-upstream origin/master&lt;/code&gt;, but that tells Git to arrange the local branch &quot;origin/master&quot; to integrate with the currently checked out branch, which is highly unlikely what the user meant. The option is deprecated; use the new &lt;code&gt;--set-upstream-to&lt;/code&gt; (with a short-and-sweet &lt;code&gt;-u&lt;/code&gt;) option instead.</source>
          <target state="translated">&lt;code&gt;git branch --set-upstream origin/master&lt;/code&gt; 라고 말하고 싶었지만 , Git에게 로컬 분기 &quot;origin / master&quot;를 현재 체크 아웃 된 분기와 통합하도록 정렬하도록 지시합니다. 이는 사용자가 의미하는 바가 거의 없습니다. 이 옵션은 더 이상 사용되지 않습니다. 새로운 &lt;code&gt;--set-upstream-to&lt;/code&gt; (short-and-sweet &lt;code&gt;-u&lt;/code&gt; 와 함께) 옵션을 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b799f710e3cbfced4c1fd7ef72071e420af6e178" translate="yes" xml:space="preserve">
          <source>It's also nice to know this, it shows which branches are tracked and which ones are not. :</source>
          <target state="translated">또한 어떤 분기가 추적되고 어떤 분기가 추적되지 않는지를 보여줍니다. :</target>
        </trans-unit>
        <trans-unit id="6d356b5df8bcd562e073fb3ae1eda5377cc94447" translate="yes" xml:space="preserve">
          <source>Local branch &quot;master&quot; tracking to origin/master</source>
          <target state="translated">출발지 / 마스터에 대한 현지 지점 &quot;마스터&quot;추적</target>
        </trans-unit>
        <trans-unit id="00f51740ea72a02fb8d8af6110b403ae990e6b1f" translate="yes" xml:space="preserve">
          <source>Make an existing Git branch track a remote branch</source>
          <target state="translated">기존 Git 지점을 원격 지점으로 추적</target>
        </trans-unit>
        <trans-unit id="2ccbad05c62ba32c83196aab71a10e0362219a5f" translate="yes" xml:space="preserve">
          <source>Make sure you run :</source>
          <target state="translated">다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="66bab0c98d290677deb6c8acd58f8e2b5f407bc6" translate="yes" xml:space="preserve">
          <source>N.B  : &lt;strong&gt;nameOfRemoteBranch&lt;/strong&gt; : to copy from the output of step 2 &quot; git branch -r &quot;</source>
          <target state="translated">NB : &lt;strong&gt;nameOfRemoteBranch&lt;/strong&gt; : 2 단계의 출력에서 ​​복사하기 &quot;git branch -r&quot;</target>
        </trans-unit>
        <trans-unit id="29f9639908414a74a4edad675ae8f24e470a7b3c" translate="yes" xml:space="preserve">
          <source>Note, if &lt;code&gt;origin/$BRANCH&lt;/code&gt; doesn't exist yet, you can create it by pushing your local &lt;code&gt;$BRANCH&lt;/code&gt; into the remote repository with:</source>
          <target state="translated">&lt;code&gt;origin/$BRANCH&lt;/code&gt; 가 아직 없으면 다음을 사용하여 로컬 &lt;code&gt;$BRANCH&lt;/code&gt; 를 원격 저장소로 푸시하여 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="529f488f6e873a71dda5779d1f7a474fc188e0f7" translate="yes" xml:space="preserve">
          <source>Now configure master to know to track:</source>
          <target state="translated">이제 마스터가 다음을 추적하도록 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="933ec7d113daad37e95ca09a6904dfab16f01e47" translate="yes" xml:space="preserve">
          <source>Once that was done, I could then use &lt;code&gt;git branch --set-upstream-to=origin/remotebranchname&lt;/code&gt;</source>
          <target state="translated">일단 완료되면 &lt;code&gt;git branch --set-upstream-to=origin/remotebranchname&lt;/code&gt; 을 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="df34f97b12e0fd56d969206822b6e99cba06feec" translate="yes" xml:space="preserve">
          <source>Or, if local branch &lt;code&gt;foo&lt;/code&gt; is not the current branch:</source>
          <target state="translated">또는 로컬 분기 &lt;code&gt;foo&lt;/code&gt; 가 현재 분기가 아닌 경우 :</target>
        </trans-unit>
        <trans-unit id="61e6ab3fc612ba1e4e733350605fd490819090e5" translate="yes" xml:space="preserve">
          <source>Or, if you like to type longer commands, these are equivalent to the above two:</source>
          <target state="translated">또는 더 긴 명령을 입력하려면 위의 두 명령과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="f3965055988300dc2fbaf1b90f068e8d50005512" translate="yes" xml:space="preserve">
          <source>Remote branch &quot;upstream&quot; tracking to upstream/master</source>
          <target state="translated">업스트림 / 마스터에 대한 원격 지사 &quot;업스트림&quot;추적</target>
        </trans-unit>
        <trans-unit id="d80da71ef6a53a2b3b9d799788c11cadd9e1b197" translate="yes" xml:space="preserve">
          <source>Say you have a local &lt;code&gt;foo&lt;/code&gt; branch and want it to treat the branch by the same name as its upstream. Make this happen with</source>
          <target state="translated">로컬 &lt;code&gt;foo&lt;/code&gt; 브랜치를 가지고 있고 업스트림과 동일한 이름으로 브랜치를 취급한다고 가정 해보십시오. 이런 일이 일어나게</target>
        </trans-unit>
        <trans-unit id="b4cde6939df09f2ddec842ed70f18f90347d975a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://stackoverflow.com/q/6089294/95706&quot;&gt;Why do I need to do `--set-upstream` all the time?&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;https://stackoverflow.com/q/6089294/95706&quot;&gt;왜 항상`--set-upstream`을해야합니까?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4936024bfd619e1b0b870c278b0a034d9d392f4" translate="yes" xml:space="preserve">
          <source>See? Now if you just checkout develp, it will do the magic automatically:</source>
          <target state="translated">보다? 이제 develp을 체크 아웃하면 마술이 자동으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="4a204b928a126245e388bf33bf80315eba204ed5" translate="yes" xml:space="preserve">
          <source>Set up the 'remote' if you don't have it already</source>
          <target state="translated">'원격'을 설정하지 않은 경우 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="e26ba0e6397a9558ba3f8bccac20444cbef58e3f" translate="yes" xml:space="preserve">
          <source>So easy!</source>
          <target state="translated">너무 쉽게!</target>
        </trans-unit>
        <trans-unit id="a79459df856bb066d8bfcab0e76661da61c2841a" translate="yes" xml:space="preserve">
          <source>That will cause Git to make &lt;code&gt;foo&lt;/code&gt; track &lt;code&gt;upstream/foo&lt;/code&gt;.</source>
          <target state="translated">그러면 Git이 &lt;code&gt;foo&lt;/code&gt; track &lt;code&gt;upstream/foo&lt;/code&gt; 를 만들게됩니다.</target>
        </trans-unit>
        <trans-unit id="f7b4c79027644b6a4c30b978e020db879e1f2a88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;git-branch&lt;/code&gt; command also understands &lt;code&gt;--set-upstream&lt;/code&gt;, but its use can be confusing. &lt;a href=&quot;https://lkml.org/lkml/2012/10/1/419&quot;&gt;Version 1.8.0&lt;/a&gt; modifies the interface.</source>
          <target state="translated">&lt;code&gt;git-branch&lt;/code&gt; 명령은 &lt;code&gt;--set-upstream&lt;/code&gt; 이해하지만 혼동 될 수 있습니다. &lt;a href=&quot;https://lkml.org/lkml/2012/10/1/419&quot;&gt;버전 1.8.0&lt;/a&gt; 은 인터페이스를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="6387e46bb3c7e772fcbf63e6a37c25a7ba3cf61a" translate="yes" xml:space="preserve">
          <source>The equivalent long option is &lt;code&gt;--set-upstream&lt;/code&gt;.</source>
          <target state="translated">동등한 long 옵션은 &lt;code&gt;--set-upstream&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b66059c6f5d98121c331e037cd7c2a6cf65d71a1" translate="yes" xml:space="preserve">
          <source>The old (1.7.x) syntax is deprecated in favor of the new (1.8+) syntax.  The new syntax is intended to be more intuitive and easier to remember.</source>
          <target state="translated">이전 (1.7.x) 구문은 새로운 (1.8+) 구문을 위해 사용되지 않습니다. 새로운 구문은보다 직관적이고 기억하기 쉽도록 고안되었습니다.</target>
        </trans-unit>
        <trans-unit id="a0f2867a42c6c057921cd23d5346d5a8d7bcd3fb" translate="yes" xml:space="preserve">
          <source>There are, of course, ways to automatically track a remote branch when using &lt;code&gt;git checkout&lt;/code&gt; (by passing the &lt;code&gt;--track&lt;/code&gt; flag, for example), but these commands work with &lt;em&gt;new&lt;/em&gt; branches, not existing ones.</source>
          <target state="translated">물론 &lt;code&gt;git checkout&lt;/code&gt; 을 사용할 때 (예를 들어 &lt;code&gt;--track&lt;/code&gt; 플래그를 전달하여) 원격 분기를 자동으로 추적하는 방법이 있지만 이러한 명령은 기존 분기가 아닌 &lt;em&gt;새&lt;/em&gt; 분기에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e84de129bbca35e65e9ac505e6ff4dc4dcac71d6" translate="yes" xml:space="preserve">
          <source>This gives more sane behaviour:</source>
          <target state="translated">이것은 더 건전한 행동을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0b995568463f4971fed4b1422424fe7c08535f9a" translate="yes" xml:space="preserve">
          <source>This isn't a direct answer to this question, but I wanted to leave a note here for anyone who may be having the same issue as me when trying to configure an upstream branch.</source>
          <target state="translated">이것은이 질문에 대한 직접적인 대답은 아니지만 업스트림 브랜치를 구성하려고 할 때 나와 같은 문제가있는 사람을 위해 메모를 남기고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="d7311476a8098f1797ecc6c43a61a8bb34741608" translate="yes" xml:space="preserve">
          <source>This recreates &lt;code&gt;$BRANCH&lt;/code&gt; as a tracking branch. The &lt;code&gt;-f&lt;/code&gt; forces the creation despite &lt;code&gt;$BRANCH&lt;/code&gt; existing already. &lt;code&gt;--track&lt;/code&gt; is optional if the usual defaults are in place (that is, the git-config parameter &lt;code&gt;branch.autosetupmerge&lt;/code&gt; is true).</source>
          <target state="translated">&lt;code&gt;$BRANCH&lt;/code&gt; 를 추적 지점 으로 다시 작성합니다. &lt;code&gt;-f&lt;/code&gt; 는 &lt;code&gt;$BRANCH&lt;/code&gt; 이미 존재하더라도 작성을 강제합니다. 일반적인 기본값이있는 경우 &lt;code&gt;--track&lt;/code&gt; 은 선택 사항입니다 (즉, git-config 매개 변수 &lt;code&gt;branch.autosetupmerge&lt;/code&gt; 가 true 임).</target>
        </trans-unit>
        <trans-unit id="ae49e546b88fe88acca4ef2b50b9f15229e3218c" translate="yes" xml:space="preserve">
          <source>This will make your &lt;code&gt;yourLocalBranchName&lt;/code&gt; track the remote branch called &lt;code&gt;develop&lt;/code&gt;.</source>
          <target state="translated">그러면 &lt;code&gt;yourLocalBranchName&lt;/code&gt; 이 develop 이라는 원격 지점을 추적하게됩니다.</target>
        </trans-unit>
        <trans-unit id="0d32f9a9382f48a6d19239851b495720724a3bdb" translate="yes" xml:space="preserve">
          <source>This would work too</source>
          <target state="translated">이것도 작동합니다</target>
        </trans-unit>
        <trans-unit id="563637c6d22e162b5c871cc1e4e6531e5b834b5e" translate="yes" xml:space="preserve">
          <source>Use '--track' Option</source>
          <target state="translated">'--track'옵션 사용</target>
        </trans-unit>
        <trans-unit id="3f0bfb586bf06f6235522841ca0a7a8a2dde08e1" translate="yes" xml:space="preserve">
          <source>With older git versions, the default was &lt;strong&gt;matching&lt;/strong&gt;, which would cause very undesirable behaviour if you have, for example:</source>
          <target state="translated">이전 버전의 git 버전에서는 기본값이 &lt;strong&gt;일치하여 다음&lt;/strong&gt; 과 같은 경우 매우 바람직하지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9583047ed9434c4e943f50bd6e12800bf911811f" translate="yes" xml:space="preserve">
          <source>You can alawys take a look at the config file to see what is tracking what by running:</source>
          <target state="translated">alawys는 구성 파일을 살펴보고 다음을 실행하여 무엇을 추적하고 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c3b4c0fea4aeda6e9542f82aea0d06fbfc3dfaa" translate="yes" xml:space="preserve">
          <source>You can do the following (assuming you are checked out on master and want to push to a remote branch master):</source>
          <target state="translated">다음을 수행 할 수 있습니다 (마스터에서 체크 아웃하고 원격 지점 마스터로 푸시하려는 경우).</target>
        </trans-unit>
        <trans-unit id="c3f64509db14d527ff170454ee0a83f43c1c46e7" translate="yes" xml:space="preserve">
          <source>You might find the &lt;a href=&quot;http://github.com/webmat/git_remote_branch&quot;&gt;&lt;code&gt;git_remote_branch&lt;/code&gt;&lt;/a&gt; tool useful. It offers simple commands for creating, publishing, deleting, tracking &amp;amp; renaming remote branches. One nice feature is that you can ask a &lt;code&gt;grb&lt;/code&gt; command to explain what git commands it would execute.</source>
          <target state="translated">&lt;a href=&quot;http://github.com/webmat/git_remote_branch&quot;&gt; &lt;code&gt;git_remote_branch&lt;/code&gt; &lt;/a&gt; 도구가 유용 할 수 있습니다. 원격 지사 생성, 게시, 삭제, 추적 및 이름 바꾸기를위한 간단한 명령을 제공합니다. 좋은 기능 중 하나는 &lt;code&gt;grb&lt;/code&gt; 명령이 어떤 git 명령을 실행할 것인지 설명하도록 요청할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f7e0d4847cf0176cba2ee7045931cd1d79c23b94" translate="yes" xml:space="preserve">
          <source>and you ready to :</source>
          <target state="translated">그리고 당신은 준비 :</target>
        </trans-unit>
        <trans-unit id="e7b1d047edc1809bb7dbf8cc79f2d3ce8f874732" translate="yes" xml:space="preserve">
          <source>example :</source>
          <target state="translated">예 :</target>
        </trans-unit>
        <trans-unit id="ef5ebc5c0db8738f4357d0bb610b0e0308c2ad8a" translate="yes" xml:space="preserve">
          <source>git config --global push.default upstream</source>
          <target state="translated">git config --global push.default 업스트림</target>
        </trans-unit>
        <trans-unit id="9b19ed69b186a563ad451d736069071d1743c389" translate="yes" xml:space="preserve">
          <source>or just</source>
          <target state="translated">아니면 그냥</target>
        </trans-unit>
        <trans-unit id="c1e14de5ae9ca54bb13ccd7013e8619322d10300" translate="yes" xml:space="preserve">
          <source>or simply by  :</source>
          <target state="translated">또는 단순히 :</target>
        </trans-unit>
        <trans-unit id="df6ad19037c97987c4ff9792810c0e145356717c" translate="yes" xml:space="preserve">
          <source>run</source>
          <target state="translated">run</target>
        </trans-unit>
        <trans-unit id="d75a2ff31fde3b4120b0e32764c7942c04086559" translate="yes" xml:space="preserve">
          <source>switch to the branch if you are not in it already:</source>
          <target state="translated">아직 분기하지 않은 경우 분기로 전환하십시오.</target>
        </trans-unit>
        <trans-unit id="36f77779ee29601feb5bcf6c85d8104906d70f63" translate="yes" xml:space="preserve">
          <source>to be able to push trouble free</source>
          <target state="translated">수고없이 자유롭게 할 수 있도록</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
