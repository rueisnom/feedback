<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/572897">
    <body>
      <group id="572897">
        <trans-unit id="f5db9bea2d7b8a9f32a521f0389df5bac5554e4d" translate="yes" xml:space="preserve">
          <source>(Constructor) functions &lt;strong&gt;always&lt;/strong&gt; have a prototype property</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（构造函数）函数&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始终&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有原型属性&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="516f3e09d25e57da757e6113f74de24a5daf64c3" translate="yes" xml:space="preserve">
          <source>-&lt;strong&gt;The easiest way&lt;/strong&gt; to do this is modifying the empty &lt;code&gt;person&lt;/code&gt; object, like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最简单的方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是修改空&lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象，例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b32d9e0625c5dc0fe5da7511822a0304955150b" translate="yes" xml:space="preserve">
          <source>-&lt;strong&gt;The other way to attach a property&lt;/strong&gt; to an object is using the &lt;code&gt;prototype&lt;/code&gt; of that object that can be find in any JavaScript object with the name of &lt;code&gt;__proto__&lt;/code&gt;, and I have tried to explain it a bit on the summary part. So we could get the similar result by doing:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将属性附加&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到对象&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的另一种方法&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是使用该对象的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以在名称为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任何JavaScript对象中找到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而我尝试在摘要部分进行一些解释。因此，我们可以通过执行以下操作获得类似的结果：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1e6a588e4f32645493fa13ad336038b66599777" translate="yes" xml:space="preserve">
          <source>...the resulting object's &lt;code&gt;[[Prototype]]&lt;/code&gt; will be set to an instance of &lt;code&gt;Parent&lt;/code&gt;, whose &lt;code&gt;[[Prototype]]&lt;/code&gt;, in turn, is &lt;code&gt;Parent.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...结果对象的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将设置为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的实例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Parent.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f90d885e4f0d6bbb1b805db4ec7e7c2ab3f0ff3" translate="yes" xml:space="preserve">
          <source>1- How JavaScript functions actually work:</source>
          <target state="translated">1-JavaScript功能究竟是如何工作的。</target>
        </trans-unit>
        <trans-unit id="43fb32f5e57379ce1e1092c86eba4a12283f7c8e" translate="yes" xml:space="preserve">
          <source>2- How does the &lt;code&gt;new&lt;/code&gt; keyword works?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;工作？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6d5b3dfdb0cf1ea256e3a77ae03f67ff8cf8a29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.youtube.com/watch?v=PMfcsYzj-9M&quot;&gt;The Definitive Guide to Object-Oriented JavaScript&lt;/a&gt; - a very concise and clear ~30min video explanation of the asked question (Prototypal Inheritance topic begins from &lt;a href=&quot;https://youtu.be/PMfcsYzj-9M?t=344&quot;&gt;5:45&lt;/a&gt;, although I'd rather listen to the whole video). The author of this video also made JavaScript object visualizer website &lt;a href=&quot;http://www.objectplayground.com/&quot;&gt;http://www.objectplayground.com/&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.youtube.com/watch?v=PMfcsYzj-9M&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;《面向对象的JavaScript权威指南》&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -简短而清晰的约30分钟的视频解释所提出的问题（原型继承主题从&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://youtu.be/PMfcsYzj-9M?t=344&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5:45&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开始&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，尽管我更喜欢听整个视频）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该视频的作者还创建了JavaScript对象可视化器网站&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.objectplayground.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.objectplayground.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84439f4a08925a54a900137f311d83a6f727669e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.constructor&lt;/code&gt;: jump from the created-object's chain to the constructor's chain.</source>
          <target state="translated">&lt;code&gt;.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：从创建对象的链跳到构造函数的链。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c3d43675b64aceed2dfb3ee9f9ed7ea0a55f5813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.inc&lt;/code&gt; is found through the &lt;code&gt;[[Prototype]]&lt;/code&gt; chain: &lt;code&gt;c&lt;/code&gt; -&amp;gt; &lt;code&gt;C&lt;/code&gt; -&amp;gt; &lt;code&gt;C.prototype&lt;/code&gt; -&amp;gt; &lt;code&gt;inc&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.inc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链找到的：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C.prototype&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;inc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aab45c56c792e22c2d0059d8bc789d73bdb470e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prototype&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; used for lookup directly, only indirectly as it determines &lt;code&gt;__proto__&lt;/code&gt; at object creation with &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于直接查找，只是间接地因为它决定&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在对象创建与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d93d7708207a2e0aea48e54828860b8857174f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prototype&lt;/code&gt;: jump from the constructor's chain to the created-object's chain. This property is thus only defined for function objects (as &lt;code&gt;new&lt;/code&gt; can only be used on functions).</source>
          <target state="translated">&lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：从构造函数的链跳转到创建对象的链。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，此属性仅为函数对象定义（因为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只能在函数上使用）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3ea9670d26722f1ae58afba28c12bfc6ab7b2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bar&lt;/code&gt; now has all the methods of &lt;code&gt;Foo&lt;/code&gt; which are defined in its &lt;code&gt;prototype&lt;/code&gt;. Let's dig further in understanding the &lt;code&gt;Object.prototype&lt;/code&gt; and &lt;code&gt;Function.prototype&lt;/code&gt; and how they are related. If you look up the constructor of &lt;code&gt;Foo&lt;/code&gt;, &lt;code&gt;Bar&lt;/code&gt; and &lt;code&gt;Object&lt;/code&gt; are &lt;code&gt;Function constructor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在拥有&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;中定义&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们进一步深入了解&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;以及它们之间的关系。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您查找&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的构造函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt; &lt;code&gt;Function constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23d057bc9ebc17e3549fa4de1f230e4fafe73972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Child&lt;/code&gt; now has its own &lt;code&gt;prototype&lt;/code&gt;, its &lt;code&gt;__proto__&lt;/code&gt; points to &lt;code&gt;Tree&lt;/code&gt; and &lt;code&gt;Tree's prototype&lt;/code&gt; points to base &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在有自己的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指向&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree's prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指向基本&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4494217e5ec8cb0ce0b8641b13ec766db668fc67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Javascript&lt;/code&gt; has primitives like &lt;code&gt;strings, number, booleans, undefined, null.&lt;/code&gt; They are not &lt;code&gt;object(i.e reference types)&lt;/code&gt;, but certainly can act like an &lt;code&gt;object&lt;/code&gt;. Let's look at an example here.</source>
          <target state="translated">&lt;code&gt;Javascript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有诸如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;strings, number, booleans, undefined, null.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类的原语&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object(i.e reference types)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但肯定可以像&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们在这里看一个例子。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed6a39b613c07e454439ade81fbb3ce86ef10f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Javascript&lt;/code&gt; supports inheritance via &lt;code&gt;delegation&lt;/code&gt; based on
&lt;code&gt;prototypes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Javascript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;支持通过&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基于 &lt;/font&gt; &lt;code&gt;prototypes&lt;/code&gt; &lt;/font&gt; &lt;code&gt;delegation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;继承&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fb7cbb2f65eab16c038e9a00619a699969ebdf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number.prototype&lt;/code&gt; (can be found with &lt;code&gt;(1).__proto__&lt;/code&gt;, parenthesis mandatory to satisfy syntax)</source>
          <target state="translated">&lt;code&gt;Number.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（可以与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1).__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一起找到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，必须使用括号来满足语法）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0ca5fbb15e0e10ba44ee5aca90f8bd3e6528277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.create&lt;/code&gt; will set the supplied argument as the &lt;code&gt;[[Prototype]]&lt;/code&gt; of the resulting object,</source>
          <target state="translated">&lt;code&gt;Object.create&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会将提供的参数设置为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;结果对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="519c9000668f818b4ebc44228a495c3ae3eb692c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.create&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Object.create&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="a7e438b815cacb27a406ae430b4c6d98d55b17ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; and &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; (get/set the &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;em&gt;after&lt;/em&gt; object creation), and</source>
          <target state="translated">&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建对象&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;后&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;获取/设置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），以及&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c67caf8f5c83960b67bb883346c1923b9d9b9f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; and &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; are preferred over &lt;code&gt;__proto__&lt;/code&gt;, in part because the behavior of &lt;code&gt;o.__proto__&lt;/code&gt;&lt;a href=&quot;https://stackoverflow.com/a/35458348/38522&quot;&gt;is unusual&lt;/a&gt; when an object has a prototype of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;优于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，部分原因&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/35458348/38522&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当对象的原型为&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;o.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的行为&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;很不寻常&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d52faf31527415b348727cf0fb75b9ba090da353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Person.prototype&lt;/code&gt; is an object that was created at the same time the function &lt;code&gt;Person&lt;/code&gt; was created. It has &lt;code&gt;Person&lt;/code&gt; as constructor, even though that constructor did not actually execute yet. So two objects are created at the same time:</source>
          <target state="translated">&lt;code&gt;Person.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是在创建功能&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同时创建的对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作为构造函数，即使该构造函数尚未真正执行。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，同时创建了两个对象：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce1882ca870299d8d2560a5ff0abc98ae2b05d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Person&lt;/code&gt; &amp;rarr; &lt;code&gt;Function.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr;对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（端点）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a653f4d39c156740d112bd62d0bd27b12c5026f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Person&lt;/code&gt;}</source>
          <target state="translated">&lt;code&gt;Person&lt;/code&gt;}</target>
        </trans-unit>
        <trans-unit id="0a2cf4b372ad77d993f9d26533a6a68b985e4268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Thief&lt;/code&gt;&amp;nbsp; } &amp;rarr; &lt;code&gt;Function.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;Thief&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;nbsp; }&amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（端点）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0eb64376a182c024c3dfa9377a5596732f14377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[FunctionKind]]:&quot;classConstructor&quot;&lt;/code&gt;, which forces the constructor to be called with new: &lt;a href=&quot;https://stackoverflow.com/questions/44446650/what-is-the-reason-es6-class-constructors-cant-be-called-as-normal-functions&quot;&gt;What is the reason ES6 class constructors can't be called as normal functions?&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[[FunctionKind]]:&quot;classConstructor&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它将强制使用new调用构造函数：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/44446650/what-is-the-reason-es6-class-constructors-cant-be-called-as-normal-functions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么不能将ES6类构造函数称为普通函数？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea5ba7c9eeb6c8772190a9a924efca31560b1c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__proto__&lt;/code&gt; is used for the dot &lt;code&gt;.&lt;/code&gt; property lookup as in &lt;code&gt;obj.property&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于点&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性查询，如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.property&lt;/code&gt; 中所示&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b85c622d9b3e3f9d574e18c469527711dc025b08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__proto__&lt;/code&gt; which was brought my mozilla is deprecated and is replaced by &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; method to get the &lt;code&gt;object's prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我的mozilla带来的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已过时，并由&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代替，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以获取&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object's prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22fd20f03b1699a6dea9bc7859e94162d6f1ae2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f.__proto__ === F.prototype&lt;/code&gt; has &lt;code&gt;.constructor === F&lt;/code&gt;, so take it</source>
          <target state="translated">&lt;code&gt;f.__proto__ === F.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.constructor === F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，所以接受它&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a74c3de4bb6ff292cdc67adf028a4a8dbd30a2a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; does not have &lt;code&gt;.constructor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.constructor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a682f6c173b00fd4bbbbbb1a449dd3a5d13b709d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; is now a property of &lt;code&gt;f&lt;/code&gt; because when you do:</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的属性，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为当您这样做时：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="500bb681ab2741f8938cba220e56b8491c7fc1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="27f3727c4800a96bf3ff49622d9977884f9ec516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obj&lt;/code&gt; properties added with &lt;code&gt;obj.p = ...&lt;/code&gt; or &lt;code&gt;Object.defineProperty(obj, ...)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj.p = ...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt; &lt;code&gt;Object.defineProperty(obj, ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;obj&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddf4033a6a4775e8a58465b25a2907bccaca4a60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; &amp;rarr; &lt;code&gt;Person.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（端点）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="773d90d0f13cd1decdccae192ee85e7a69a4bc47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties/functions&lt;/code&gt; are looked from the &lt;code&gt;object&lt;/code&gt; itself or via
&lt;code&gt;prototype&lt;/code&gt; chain if it does not exist</source>
          <target state="translated">&lt;code&gt;properties/functions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本身或通过 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链（如果不存在）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;查看&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性/功能&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c745c3e6fa88e759e25e7ad1500686ec3e230574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prototype&lt;/code&gt; allows you to make classes. if you do not use &lt;code&gt;prototype&lt;/code&gt; then it becomes a static.</source>
          <target state="translated">&lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;允许您制作类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那么它将变为静态。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eab804207239b48f68e19392d30c84ca4b562d60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t&lt;/code&gt; &amp;rarr; &lt;code&gt;p&lt;/code&gt; &amp;rarr; &lt;code&gt;Person.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr;人员&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr;对象&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（端点）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffd1a13c8308eacca411a19d7cd8f1aca3a0dd5f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This is a property that is only found on functions.&lt;/em&gt; Using a very simple function:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是仅在函数上找到的属性。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用一个非常简单的功能：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75d9f311148f35e3f90a11690ff78afc979db59d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This&lt;/em&gt; is where &lt;code&gt;.prototype&lt;/code&gt; gets used.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;地方&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c6fad03027c150cbe03372ff710dbe9781f8c9a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;function&lt;/em&gt;&lt;strong&gt;UserDefinedFunction&lt;/strong&gt;(){ /*user defined code */ }</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UserDefinedFunction&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（）{/ *用户定义的代码* /}&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cafc10ff46accd6077494c2f8fdcbcd3d83262f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;it's a clear chart to show JavaScript Inheritance by Prototype Chain&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个清晰的图表，以按原型链显示JavaScript继承&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="262ca8b02bedbf37d2f857dcec0fccbdaf507662" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;p&lt;/em&gt; has no direct prototype-chain relationship with &lt;em&gt;Person&lt;/em&gt;. Their relationship is a different one. The object &lt;em&gt;p&lt;/em&gt; has its own prototype chain. Using &lt;code&gt;Object.getPrototypeOf&lt;/code&gt;, you'll find the chain is as follows:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Person&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有直接的原型链关系&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他们的关系是不同的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有其自己的原型链。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您会发现链如下：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c444ac4444a2e10bdf76ea2ce943a556269d9ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;this one contains a example with code and several nice diagrams.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这个包含一个示例代码和一些漂亮的图表。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="986eb1b8b44fcb9d1627ad12802958cd24657972" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;0)&lt;/strong&gt; Two different things can be called &quot;prototype&quot;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以将两种不同的事物称为&amp;ldquo;原型&amp;rdquo;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="463301eb4ac41b0bb8787b54cc8f7a245ed825dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt; Those concepts exist to answer the question:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;存在这些概念可以回答以下问题：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="595ac3c717717f780d25d74e1b557454a56132f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddf60658e60d487074f8722d2fc159e70707028b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt; There are two main ways to set &lt;code&gt;obj.__proto__&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主要方法有两种&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f08b8b59fbf6a824b0ed085c7ec6889ce3925b68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4)&lt;/strong&gt; The code:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b9df63784cfdcebbe83400eba63f3846226ff22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;5)&lt;/strong&gt;&lt;code&gt;.constructor&lt;/code&gt; normally comes from &lt;code&gt;F.prototype&lt;/code&gt; through the &lt;code&gt;.&lt;/code&gt; lookup:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常来自&lt;/font&gt;&lt;/font&gt; &lt;code&gt;F.prototype&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;抬头：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e93d771b62ade22d3b5a1016a549aba9104c2d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6)&lt;/strong&gt; Classical inheritance syntax can be achieved by manipulating prototypes chains.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;6）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;经典的继承语法可以通过操纵原型链来实现。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0dc43997b5974fc4c5f7a20d88ec5593d972776" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Non objects&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非物体&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23b5065a8f1ea75a66b4dd984df016c88522ee54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Objects&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Objects&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="438c3604abffb4c4688d84cab52990439675aa90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Array&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef4d9d3331372b90e0cbf8e585a8ff2833a3e1e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Boolean&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Boolean&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df96f63fc22d95f29eb9393bcdcd160c47075064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But&lt;/strong&gt; this way what we actually are doing is modifying the &lt;code&gt;Object.prototype&lt;/code&gt;, because whenever we create a JavaScript object using literals (&lt;code&gt;{ ... }&lt;/code&gt;), it gets created based on &lt;code&gt;Object.prototype&lt;/code&gt;, which means it gets attached to the newly created object as an attribute named &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; , so if we change it, as we have done on our previous code snippet, all the JavaScript objects would get changed, not a good practice. So what could be the better practice now:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种方式实际上是在修改&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因为每当我们使用文字（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ ... }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建JavaScript对象时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它都是基于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这意味着它会附加到新创建的对象上对象作为名为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此，如果像以前的代码片段中所做的那样更改它，则所有JavaScript对象都将被更改，而不是一种好习惯。因此，现在最好的做法是：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b889a55dcfba693237d3023457bd4a92c28f55fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例如：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4386dea0dbde84732f2cdf6b3648157743d6aeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function type objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数类型对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="936746e12db1da44d0d71d56ca5aafef2816cddd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f774c4a53eaf3df495fd309c4cdba9ecde38643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In JS everything is not an object, everything can act like an object.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在JS中，一切都不是对象，一切都可以像对象一样工作。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d4deb53922aea3c25bfbab4b352eebb20114ba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non Function type objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非函数类型对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d2ae83ed096c61b723ef930500d859ef6c4c6b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;prototype&lt;/code&gt; is a property of the function constructor, whereas &lt;code&gt;__proto__&lt;/code&gt; is a property of the objects constructed from the function constructor. Every function comes with a &lt;code&gt;prototype&lt;/code&gt; property whose value is an empty &lt;code&gt;object&lt;/code&gt;. When we create an instance of the function, we get an internal property &lt;code&gt;[[Prototype]]&lt;/code&gt; or &lt;code&gt;__proto__&lt;/code&gt; whose reference is the prototype of the Function &lt;code&gt;constructor&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是函数构造函数的属性，而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是从函数构造函数构造的对象的属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个函数都带有一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，其值是一个空&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建函数实例时，我们会获得内部属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其引用是Function &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数的原型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9efe6d07c7ab605d4083a95a14e84ddfb05b78d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Number&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Number&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40b40f7486b808c8699d420e972ffc185b9eae92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Object&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="650f9a414222dbc1c278bd70726bd1ee2cb1def1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RegExp&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RegExp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7593566f175e8d782e361fe7522b4b4c346ab54a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;String&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f030e617952094d9be5d9d99a9081d1bffb21def" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Typed Arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型数组&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee947672ace063ceb0fbdd407b2cb329f46d107c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="805181f2ff8c78c447476e7cda9480333fc9bf13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;boolean values(true,false)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;布尔值（true，false）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59e11e15e910aadb24301f5614b29cf01ad17404" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;number (including NaN and Infinity)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数字（包括NaN和Infinity）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0677c4b84eec6055e2d192834e16b93c6e7e8096" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;string&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d01b52c7ed32becc5c5617e73c0a35804d654b54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof(new Array())==='object'&lt;/strong&gt; is by design of language and not a mistake as pointed by &lt;a href=&quot;http://javascript.crockford.com/survey.html&quot;&gt;Douglas Crockford&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（new Array（））==='object'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是语言设计的，不是&lt;/font&gt;&lt;a href=&quot;http://javascript.crockford.com/survey.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Douglas Crockford&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指出的错误&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cf07b007ed3c15e4a9bfc95a299ad47ec0b2fd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;&quot;string literal&quot;&lt;/em&gt; (or a variable containing string literal)  === &lt;strong&gt;'string'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;字符串文字&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（或包含字符串文字的变量）=== &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'string'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aca6c12e87ac748cb6b566119aa5da92bee3e056" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;5&lt;/em&gt; (or any numeric literal or a variable containing numeric literal or &lt;strong&gt;&lt;em&gt;NaN or Infynity&lt;/em&gt;&lt;/strong&gt;)  === &lt;strong&gt;'number'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（或任何数字文字或包含数字文字或&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NaN或Infynity&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）=== &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'number'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db4a61833b8370e8b06cc749f449cb5ddfad7a4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;true&lt;/em&gt; (or &lt;em&gt;false&lt;/em&gt; or a variable containing &lt;em&gt;true&lt;/em&gt; or &lt;em&gt;false&lt;/em&gt;)  === &lt;strong&gt;'boolean'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（或&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或包含&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）=== &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'boolean'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="146e47da17f7c83c36e22e29b5e46b9e6e8f7971" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;undefined&lt;/em&gt; (or an undefined variable or a variable containing &lt;em&gt;undefined&lt;/em&gt;) === &lt;strong&gt;'undefined'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（或未定义变量或包含&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）=== &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'未定义'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89fb8292e313313d390924e3714324b505302011" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;undefined&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;undefined&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fbc44f8d2cbe63946cdbe3a58f8f3a6e3bb8799d" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[1: That won't confuse anyone; made available via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;the &lt;code&gt;__proto__&lt;/code&gt; property&lt;/a&gt; in many implementations.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[1：这不会混淆任何人；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过提供&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在许多实现。&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c261b43716c800269ee97ef89ec21bb98b5e2c31" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[2]: All except &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2]：除&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外的所有内容&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f5f7fff3dcffc93d7fb3856fbba056046ce8b597" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;prototype&lt;/code&gt; in JS is an object which &lt;code&gt;yields&lt;/code&gt; you to the parent of another &lt;code&gt;object&lt;/code&gt;. &lt;strong&gt;[ie.. delegation]&lt;/strong&gt;&lt;code&gt;Delegation&lt;/code&gt; means that if you are unable to do something, you&amp;rsquo;ll tell someone else to do it for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;甲&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在JS是一个对象，它&lt;/font&gt;&lt;/font&gt; &lt;code&gt;yields&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;你到另一个的父&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[即委派] &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;Delegation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味着如果您无法做某事，您将告诉其他人为您做。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9b39ca1bc70b31d93313ed3195295535213d22f" translate="yes" xml:space="preserve">
          <source>Adding levels to the prototype chain</source>
          <target state="translated">在原型链中添加级别</target>
        </trans-unit>
        <trans-unit id="c62c8bcb04a57dc88dda082245060aafb4ea6e35" translate="yes" xml:space="preserve">
          <source>After reading this thread, I feel confused with JavaScript Prototype Chain, then I found these charts</source>
          <target state="translated">看完这个线程,我觉得和JavaScript Prototype Chain混淆了,然后我发现了这些图表</target>
        </trans-unit>
        <trans-unit id="17e85f393d5bf1c3c5bef196364aa5255475a902" translate="yes" xml:space="preserve">
          <source>All &lt;strong&gt;Function type objects&lt;/strong&gt; by default have a &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property. This &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property references an object that has a &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; property that by default references the &lt;strong&gt;Function type object&lt;/strong&gt; itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能类型对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;均具有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;原型&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;原型&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性引用具有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;构造器&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的对象，该对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下引用&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能&amp;rdquo;类型对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本身。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4b16ed28563a6b4a20fc9c36d6313c70dde4b55" translate="yes" xml:space="preserve">
          <source>All objects (&lt;strong&gt;Function type&lt;/strong&gt; and &lt;strong&gt;Non Function type&lt;/strong&gt;) have a &quot;constructor&quot; property that by default references the &lt;strong&gt;Function type object&lt;/strong&gt;/&lt;strong&gt;Constructor&lt;/strong&gt; that created it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有对象（&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数类型&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非函数类型&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）都具有&amp;ldquo;构造函数&amp;rdquo;属性，默认情况下会引用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建它&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数类型对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15fdaebe61fb55c1af26c6e7a85df169798ec0e3" translate="yes" xml:space="preserve">
          <source>All the &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; are actually instances of the built in JavaScript object &lt;strong&gt;Function&lt;/strong&gt; (including the &lt;strong&gt;Function&lt;/strong&gt; object i.e it is recursively defined). It is as if the these objects have been defined in the following way</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Function类型对象&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上都是内置JavaScript对象&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Function的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（包括&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Function&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象，即它是递归定义的）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;好像这些对象是通过以下方式定义的&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12b319ef5af6aea1225fc6e6077e5640ec9d8d83" translate="yes" xml:space="preserve">
          <source>All the concept explained above can be a little daunting to understand without any supporting code. Please go through the following code line by line to understand the concept. Try to execute it to have a better understanding.</source>
          <target state="translated">上面解释的所有概念,如果没有任何支持的代码,可能会让人有点望而生畏。请逐行阅读下面的代码来理解这个概念。试着执行一下,以便有一个更好的理解。</target>
        </trans-unit>
        <trans-unit id="1665b42d1860b1c7fd57cb6a6343d9cb0ef10e9e" translate="yes" xml:space="preserve">
          <source>All the other built in objects that can create new objects by using new operator</source>
          <target state="translated">所有其他的内置对象都可以通过使用新的操作符来创建新的对象。</target>
        </trans-unit>
        <trans-unit id="1907258d3e367c722707f73d0d6e4f26812041b6" translate="yes" xml:space="preserve">
          <source>Also notice that &lt;strong&gt;Object&lt;/strong&gt;,&lt;strong&gt;Array&lt;/strong&gt; and &lt;strong&gt;RegExp&lt;/strong&gt; functions can create a new object without even using &lt;strong&gt;operator new&lt;/strong&gt;. However the follwing ones don't.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还要注意，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegExp&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数无需使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符new&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即可创建新对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是下面的人没有。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd8bfd901a73d4991d8b395d508631b7e5a10d8b" translate="yes" xml:space="preserve">
          <source>Also these &lt;a href=&quot;http://ejohn.org/apps/learn/#64&quot;&gt;slides&lt;/a&gt; really helped a lot.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ejohn.org/apps/learn/#64&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;幻灯片也&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;确实起到了很大作用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d9877f5d08fabd9db32afb87521790e25f67b62" translate="yes" xml:space="preserve">
          <source>Also, &lt;strong&gt;every object that is created&lt;/strong&gt; (&lt;strong&gt;Function type&lt;/strong&gt; or &lt;strong&gt;Non Function type&lt;/strong&gt;) has a &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; property which is inherited from the object referenced by prototype  property of the Constructor function. By default this &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; property references the &lt;strong&gt;Constructor function&lt;/strong&gt; that created it (if the &lt;strong&gt;Constructor Function's&lt;/strong&gt; default &quot;prototype&quot; is not changed).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个创建的对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数类型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或非&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数类型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）都具有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;构造函数&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，该属性继承自构造函数的prototype属性所引用的对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下，这个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;构造&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性引用的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建它（如果&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认的&amp;ldquo;原型&amp;rdquo;没有变化）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79e19cf0dfa4d95f4fb79d90a3100d78d72f4890" translate="yes" xml:space="preserve">
          <source>Although a prototype object is created when you create a constructor function, you can ignore that object, and assign another object that should be used as prototype for any subsequent instances created by that constructor.</source>
          <target state="translated">虽然当你创建一个构造函数时,会创建一个原型对象,但你可以忽略该对象,并为该构造函数创建的任何后续实例指定另一个对象作为原型。</target>
        </trans-unit>
        <trans-unit id="336be22a25df41fad0e6cde8bbdd41a5cd1d6cf0" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object's prototype&lt;/strong&gt; (and hence its inherited property names) can be retrieved using the &lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt;   method. In fact this method 
can be used for navigating the entire prototype chain of the object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象的原型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（并且因此其继承的属性名称）可以使用被检索&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.getPrototypeOf（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上，该方法可用于导航对象的整个原型链。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d03358142652b37c4e19c16084957f179346c0ef" translate="yes" xml:space="preserve">
          <source>An object's &lt;code&gt;[[Prototype]]&lt;/code&gt; is initially set during object creation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初是在对象创建过程中设置的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e302dd1bdb6e511fab68686ecfa674165e722eb1" translate="yes" xml:space="preserve">
          <source>Another attempt to explain &lt;a href=&quot;https://github.com/rus0000/jsinheritance&quot;&gt;JavaScript prototype-based inheritance&lt;/a&gt; with better pictures</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用更好的图片&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解释&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/rus0000/jsinheritance&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基于JavaScript原型的继承的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一种尝试&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ae9bed13f86cada0ae2999193b88071ea23bf09" translate="yes" xml:space="preserve">
          <source>As Ciro San descended Mount Fire Fox after deep meditation, his mind was clear and peaceful.</source>
          <target state="translated">当七郎山在深沉的冥想之后下了火狐山时,他的心境清明而平静。</target>
        </trans-unit>
        <trans-unit id="f3329b48eeadf5d2a791a733d259efe4ca19924b" translate="yes" xml:space="preserve">
          <source>As mentioned, the &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; can further create new objects using the &lt;strong&gt;new operator&lt;/strong&gt;. For e.g an object of type &lt;strong&gt;Object&lt;/strong&gt;, &lt;strong&gt;String&lt;/strong&gt;, &lt;strong&gt;Number&lt;/strong&gt;, &lt;strong&gt;Boolean&lt;/strong&gt;, &lt;strong&gt;Array&lt;/strong&gt;, &lt;strong&gt;RegExp&lt;/strong&gt;  Or &lt;strong&gt;UserDefinedFunction&lt;/strong&gt; can be created by using</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如上所述，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能类型对象&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new运算符&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进一步创建新对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用以下方法创建&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;String&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Boolean&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegExp&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 或&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UserDefinedFunction的对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5444cc4c7b088a2cf1abe9c5ac49e58b50f5582d" translate="yes" xml:space="preserve">
          <source>Basically, when you use the &lt;strong&gt;new&lt;/strong&gt; keyword on a function, you are calling on that and that function serves as a constructor, so when you say:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本上，当您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在函数上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字时，您正在调用该函数，并且该函数充当了构造函数，因此当您说：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="128a6f1ac253f8efe8add873d3ab2ae178457a6e" translate="yes" xml:space="preserve">
          <source>Before we close this down, let's just wrap with a small piece of code here to &lt;strong&gt;summarize everything above&lt;/strong&gt;. We are using &lt;code&gt;instanceof&lt;/code&gt; operator here to check whether an &lt;code&gt;object&lt;/code&gt; has in its &lt;code&gt;prototype&lt;/code&gt; chain the &lt;code&gt;prototype&lt;/code&gt; property of a &lt;code&gt;constructor&lt;/code&gt; which below summarizes the entire big diagram.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在结束之前，让我们在这里包装一小段代码来&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;总结上面的所有内容&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符来检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，该属性在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下面总结了整个大图。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1d3ebbcf931e0a28e680ba9599c4b76f5920263" translate="yes" xml:space="preserve">
          <source>Both are objects, but they have different roles: the function object &lt;em&gt;constructs&lt;/em&gt;, while the other object represents the prototype of any object that function will construct. The prototype object will become the parent of the constructed object in its prototype chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两者都是对象，但是它们具有不同的角色：函数对象&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而另一个对象表示函数将构造的任何对象的原型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型对象将成为其原型链中构造对象的父对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4734465ce3249914e675fa085c71fdd7969725f9" translate="yes" xml:space="preserve">
          <source>But the tricky point here is you have access to all the properties defined in &lt;code&gt;__proto__&lt;/code&gt; on the first level of the &lt;code&gt;person&lt;/code&gt; object(read the summary part for more detail).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是这里要注意的一点是，您可以访问&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第一层上&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义的所有属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（有关详细信息，请阅读摘要部分）。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4c717c68647a39d8993c3f22cb1f73298ff4906" translate="yes" xml:space="preserve">
          <source>But what is the exact purpose of this &quot;.prototype&quot; property in JavaScript? How does it relate to instantiating objects?</source>
          <target state="translated">但是在JavaScript中,这个&quot;.prototype &quot;属性的具体作用是什么?它与实例化对象有什么关系?</target>
        </trans-unit>
        <trans-unit id="581ca65827f668811a65db1dbb1781038e17dcdf" translate="yes" xml:space="preserve">
          <source>Class methods are non-enumerable. Can be done with &lt;code&gt;Object.defineProperty&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类方法是不可枚举的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b79c42688d72bbe2038bd28afd9ed389154ee893" translate="yes" xml:space="preserve">
          <source>Classes always &lt;code&gt;use strict&lt;/code&gt;. Can be done with an explicit &lt;code&gt;use strict&lt;/code&gt; for every function, which is admittedly tedious.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;班级总是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;use strict&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以&lt;/font&gt;&lt;/font&gt; &lt;code&gt;use strict&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对每个功能都&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;严格&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要求&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的显式&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来完成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这无疑是乏味的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee63261f1379428db901d45d061803e082c2d686" translate="yes" xml:space="preserve">
          <source>Consider the constructor:</source>
          <target state="translated">考虑一下构造者。</target>
        </trans-unit>
        <trans-unit id="ad0c015a0facc98aa584812c0678c373464a6715" translate="yes" xml:space="preserve">
          <source>Consider the following &lt;code&gt;keyValueStore&lt;/code&gt; object :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;考虑以下&lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39d3124fb0d19b8604d1980edadff31ba40be02b" translate="yes" xml:space="preserve">
          <source>Corresponds to the following diagram (some &lt;code&gt;Number&lt;/code&gt; stuff is omitted):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对应于下图（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;省略了&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一些&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内容）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84ab82f3669c4d8bf9a319d55a8cd70e88bc0ca4" translate="yes" xml:space="preserve">
          <source>Create one Function, Get Two Objects</source>
          <target state="translated">创建一个函数,获取两个对象</target>
        </trans-unit>
        <trans-unit id="0dea4f1de050c67f39a669747070da1280a237ab" translate="yes" xml:space="preserve">
          <source>ES6 adds the &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;extends&lt;/code&gt; keywords, which are mostly syntax sugar for previously possible prototype manipulation madness.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6添加了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字，这些关键字主要是语法糖，用于解决以前可能发生的原型操作异常。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0431dfaa30b098390e1a1e89c353654e61224340" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Function&lt;/code&gt; has a &lt;code&gt;prototype&lt;/code&gt; property, which refers to another
object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都有一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，该属性引用另一个对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e87fcf8334f33dfb4544adc131d3008ee8170de" translate="yes" xml:space="preserve">
          <source>Each instance of this object would have the following public properties :</source>
          <target state="translated">这个对象的每个实例将有以下公共属性。</target>
        </trans-unit>
        <trans-unit id="44854d9c01a3db8b27faa3924a396dc627475631" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;JavaScript&lt;/code&gt; function has a &lt;code&gt;prototype&lt;/code&gt;. When you log the &lt;code&gt;Tree.prototype&lt;/code&gt;, you get...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数都有一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您记录&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree.prototype&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您得到...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c82daec772c21b329ef8063919bf156cb23fe962" translate="yes" xml:space="preserve">
          <source>Every &lt;strong&gt;Constructor/Function&lt;/strong&gt; (whether built in or user defined) when defined automatically has a property called &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; whose value by default is set as an object. This object itself has a property called &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; which by default references back the &lt;strong&gt;Constructor/Function&lt;/strong&gt; .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数/函数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（无论是内置的还是用户定义的）在定义时都会自动具有一个称为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;原型&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其默认值将设置为一个对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该对象本身具有一个称为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;构造函数&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，默认情况下，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数/函数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad52e74949b469f6820323ae6b340af34f90c99a" translate="yes" xml:space="preserve">
          <source>Every Function object (including built in Function object)-&amp;gt;
Function.prototype -&amp;gt; Object.prototype -&amp;gt; null</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个功能对象（包括内置的功能对象）-&amp;gt; Function.prototype-&amp;gt; Object.prototype-&amp;gt; null&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bad37a6664930f457fd13d65fd291ece488a330" translate="yes" xml:space="preserve">
          <source>Every JavaScript object &lt;a href=&quot;https://www.ecma-international.org/ecma-262/10.0/index.html#sec-ordinary-object-internal-methods-and-internal-slots&quot;&gt;has an internal &quot;slot&quot;&lt;/a&gt; called &lt;code&gt;[[Prototype]]&lt;/code&gt; whose value is either &lt;code&gt;null&lt;/code&gt; or an &lt;code&gt;object&lt;/code&gt;. You can think of a slot as a property on an object, internal to the JavaScript engine, hidden from the code you write. The square brackets around &lt;code&gt;[[Prototype]]&lt;/code&gt; are deliberate, and are an ECMAScript specification convention to denote internal slots.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个JavaScript对象&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/10.0/index.html#sec-ordinary-object-internal-methods-and-internal-slots&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都有一个内部&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;slot &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;]&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;称为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototype]]，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其值可以为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以将插槽视为JavaScript引擎内部对象的属性，该属性对您编写的代码隐藏。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;周围的方括号&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是有意的，并且是ECMAScript规范约定，用于表示内部插槽。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f0ef0659aecb22303ee754acbaeb49baf6e42fd" translate="yes" xml:space="preserve">
          <source>Every function has a &lt;code&gt;prototype&lt;/code&gt; property, initially holding an empty object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个函数都有一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，最初包含一个空对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4427bf34010d61d45f8302a7e58ea59fccbc44ab" translate="yes" xml:space="preserve">
          <source>Every object contains an internal property called the [[prototype]], which can be accessed by the &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; function. &lt;code&gt;Object.create(model)&lt;/code&gt; creates a new object and sets it's [[prototype]] property to the object &lt;strong&gt;model&lt;/strong&gt;. Hence when you do &lt;code&gt;Object.getPrototypeOf(product)&lt;/code&gt;, you will get the object &lt;strong&gt;model&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个对象都包含一个称为[[prototype]]的内部属性，可以通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行访问&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.create(model)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建一个新对象，并将其[[prototype]]属性设置为对象&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;模型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，当您执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(product)&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，将获得对象&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;模型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a2885bd192019c5b120bd52dfdbcdeaad907288" translate="yes" xml:space="preserve">
          <source>Every object has a link, &lt;em&gt;[[Prototype]]&lt;/em&gt;, sometimes exposed as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;__proto__&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个对象都有一个链接&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototype]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，有时会显示为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27ff6fa37c56e393b34270fcfb3c1f7a626e836f" translate="yes" xml:space="preserve">
          <source>Every object has an internal property, &lt;em&gt;[[Prototype]]&lt;/em&gt;, linking it to another object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个对象都有一个内部属性&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototype]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，将其链接到另一个对象：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd2d92f66154c7bea02e2425ec309be42c9dc064" translate="yes" xml:space="preserve">
          <source>Every object that gets created internally references the object referenced by
&lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property of the Constructor that created it. This object is known as the created &lt;strong&gt;&lt;em&gt;object's prototype&lt;/em&gt;&lt;/strong&gt; (which is different from Function type objects &quot;prototype&quot; property which it references) . This way the created object can directly access the methods and properties defined in object referenced by the Constructor's &quot;prototype&quot; property (at the time of object creation).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在内部创建的每个对象都引用由创建该对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的构造函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo; prototype&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用的对象 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该对象被称为创建&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象的原型&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（不同于它引用的Function类型对象的&amp;ldquo; prototype&amp;rdquo;属性）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样，创建的对象可以直接访问构造函数的&amp;ldquo;原型&amp;rdquo;属性所引用的对象中定义的方法和属性（在创建对象时）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="04fec84aea0907990dd95a1cdf4d645f4ab25fec" translate="yes" xml:space="preserve">
          <source>Finally, if you create a new object via &lt;code&gt;Object.create(foo)&lt;/code&gt;, the resulting object's &lt;code&gt;[[Prototype]]&lt;/code&gt; will be set to &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最后，如果通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.create(foo)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建一个新对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则所得对象的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将设置为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="913fa65fa66257d78a776f2cc37f8c2e45342a0e" translate="yes" xml:space="preserve">
          <source>Firefox makes it accessible through the &lt;code&gt;__proto__&lt;/code&gt; property as an extension. &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;ES6 now mentions&lt;/a&gt; some optional requirements for &lt;code&gt;__proto__&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firefox使它可以通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性作为扩展&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;程序进行访问&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6现在提到&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一些可选要求&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ded4e4366360aefc60f419c75228c8055002b5e4" translate="yes" xml:space="preserve">
          <source>First is checked if the property is located on the Object itself. If so this property is returned.</source>
          <target state="translated">首先是检查该属性是否位于对象本身。如果是,则返回该属性。</target>
        </trans-unit>
        <trans-unit id="126594ec2e3648a15c71769d321915ef426fc644" translate="yes" xml:space="preserve">
          <source>Following are the &lt;strong&gt;&lt;em&gt;Non object&lt;/em&gt;&lt;/strong&gt; data types</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是非对象&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数据类型&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa8b666e849a0499d67737f9c99b9c67ca6983ca" translate="yes" xml:space="preserve">
          <source>Following in the summary of this article</source>
          <target state="translated">本文摘要如下</target>
        </trans-unit>
        <trans-unit id="c6250562934f1c7fec16d3f7975c1a7719577c6b" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;&lt;em&gt;Non Function type objects&lt;/em&gt;&lt;/strong&gt; (e.g Javascript Built in  Math object) the constructor function is the function that created it.
For &lt;strong&gt;Math&lt;/strong&gt; object it is &lt;strong&gt;&lt;em&gt;function Object(){}&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非函数类型的对象&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例如，内置Javascript的Java对象），构造函数是创建它的函数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Math&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象，它是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数Object（）{}&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcda7f7fe3cae3ac6151fb54aa8a47f250d7bb72" translate="yes" xml:space="preserve">
          <source>For all &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; the constructor function is always
&lt;strong&gt;&lt;em&gt;function Function(){}&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于所有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Function类型的对象&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，构造函数始终为 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Function Function（）{}&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af92f2d2e092a715c0b3fa108d9d8e88eed937ea" translate="yes" xml:space="preserve">
          <source>For creating an object without any prototype use the following:</source>
          <target state="translated">要创建一个没有任何原型的对象,请使用下面的方法。</target>
        </trans-unit>
        <trans-unit id="2836a1340828171230bbbcd4436e61777d800cde" translate="yes" xml:space="preserve">
          <source>For example when we define a function</source>
          <target state="translated">例如,当我们定义一个函数</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">比如说:</target>
        </trans-unit>
        <trans-unit id="f1cc879e83b7285c7265a58ff65f9cc017991006" translate="yes" xml:space="preserve">
          <source>Functions are objects in javascript and thus can have properties</source>
          <target state="translated">函数是javascript中的对象,因此可以有属性。</target>
        </trans-unit>
        <trans-unit id="18f81e046b54ed03fb34907bb6ad93f980e8f448" translate="yes" xml:space="preserve">
          <source>Here are some equalities that could help grasp the issue -- all of these print &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里有一些等式，可以帮助把握问题-所有这些打印的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d95847d51670cf9873b3c6286e1e7f7dd325c3c8" translate="yes" xml:space="preserve">
          <source>Here is a short example.</source>
          <target state="translated">下面是一个简单的例子。</target>
        </trans-unit>
        <trans-unit id="cb17c19ed78f536f145405f7a66103a40ece6685" translate="yes" xml:space="preserve">
          <source>Here is a visual presentation of the two prototype chains involved, represented as columns:</source>
          <target state="translated">下面是对所涉及的两个原型链的可视化展示,以列的形式来表示。</target>
        </trans-unit>
        <trans-unit id="badebffc2957e9a5737c7b7442b62ee3ff3ed9c5" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;Child&lt;/code&gt; inherits its &lt;code&gt;prototype&lt;/code&gt; from Tree, what we are doing here is using &lt;code&gt;Object.create()&lt;/code&gt; method to create a new object based off what you pass, here it is &lt;code&gt;Tree.prototype&lt;/code&gt;. In this case what we're doing is setting the prototype of Child to a new object that looks identical to the &lt;code&gt;Tree&lt;/code&gt; prototype. Next we are setting the &lt;code&gt;Child's constructor to Child&lt;/code&gt;, if we don't it would point to &lt;code&gt;Tree()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Child&lt;/code&gt; 是&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从Tree &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;继承其&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我们在这里所做的是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法根据传递的内容创建一个新对象，这里是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，我们要做的是将Child的原型设置为一个看起来与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相同的新对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来，我们将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Child's constructor to Child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为Child&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，否则将指向&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1080c05673364e26ccb0b18e600d9ce9ea7a2bbd" translate="yes" xml:space="preserve">
          <source>Here's one way:</source>
          <target state="translated">这里有一个方法。</target>
        </trans-unit>
        <trans-unit id="255294a4948a7939d960d2ceac33918b80d9bea3" translate="yes" xml:space="preserve">
          <source>His hand however, was restless, and by itself grabbed a brush and jotted down the following notes.</source>
          <target state="translated">然而,他的手却坐立不安,自己抓起毛笔,记下了下面的笔记。</target>
        </trans-unit>
        <trans-unit id="dcf4bed02490ae09ef76076b1410a13c2ca7ae28" translate="yes" xml:space="preserve">
          <source>Hope it's also helpful for you to understand JavaScript Prototype Chain.</source>
          <target state="translated">希望对你了解JavaScript原型链也有帮助。</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">希望这对你有帮助。</target>
        </trans-unit>
        <trans-unit id="85a528f682bca4f4cdd40f5dcd0f32d87901dc07" translate="yes" xml:space="preserve">
          <source>How does JavaScript .prototype work</source>
          <target state="translated">JavaScript .prototype是如何工作的</target>
        </trans-unit>
        <trans-unit id="15307e8b9bfc921e3085ee0afbd06e419923f9a6" translate="yes" xml:space="preserve">
          <source>I always like analogies when it comes to understand this type of stuff. 'Prototypical inheritance' is pretty confusing in comparison to class bass inheritance in my opinion, even though prototypes are much simpler paradigm. In fact with prototypes, there really is no inheritance, so the name in and of itself misleading, it's more a type of 'delegation'.</source>
          <target state="translated">在理解这种类型的东西时,我总是喜欢用类比的方式。在我看来,&quot;原型继承 &quot;与类贝斯继承相比,是相当混乱的,尽管原型是更简单的范式。事实上,有了原型,就真的没有继承,所以这个名字本身就有误导性,它更多的是一种 &quot;授权&quot;。</target>
        </trans-unit>
        <trans-unit id="19e066fbef4f72e041e77caa8686e61389d9bd20" translate="yes" xml:space="preserve">
          <source>I can create a new instance of this object by doing this :</source>
          <target state="translated">我可以通过这样做来创建一个新的对象实例。</target>
        </trans-unit>
        <trans-unit id="72bba386d12931e63576ecdfb525130fd2dd81b1" translate="yes" xml:space="preserve">
          <source>I found it helpful to explain the &quot;prototype chain&quot; as recursive convention when &lt;code&gt;obj_n.prop_X&lt;/code&gt; is being referenced:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我发现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在引用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n.prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时将&amp;ldquo;原型链&amp;rdquo;解释为递归约定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;很有帮助&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6131353b64b6b93c067e55eaea6770918f91940e" translate="yes" xml:space="preserve">
          <source>I hope this add's some information, I know this kinda could be big to grasp... in simple words its &lt;strong&gt;it's just objects linked to objects!!!!&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我希望此添加了一些信息，我知道这有点难掌握...用简单的话&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来说，它只是对象与对象的链接！！！&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="924874acd19481d8956e79b165ac0c1d173659a8" translate="yes" xml:space="preserve">
          <source>I remember a lot discussion I had with people a while back (I'm not exactly sure what I'm doing) but as I understand it, there's no concept of a class. It's just an object, and instances of those objects are clones of the original, right?</source>
          <target state="translated">我记得前段时间和大家讨论了很多(我也不太清楚自己在做什么),但据我的理解,类是没有概念的。它只是一个对象,而这些对象的实例都是原始的克隆吧?</target>
        </trans-unit>
        <trans-unit id="cc156d52b1e4575a1a02a778463782d0e870cbd7" translate="yes" xml:space="preserve">
          <source>I'm not that into dynamic programming languages but I've written my fair share of JavaScript code. I never really got my head around this prototype-based programming, does any one know how this works?</source>
          <target state="translated">我对动态编程语言不是很感兴趣,但我写过一些JavaScript代码。我从未真正了解过这个基于原型的编程,有谁知道这是如何工作的吗?</target>
        </trans-unit>
        <trans-unit id="095a7598140196f01e688496d713522b45a93e34" translate="yes" xml:space="preserve">
          <source>If a function is never used as a constructor, its &lt;code&gt;prototype&lt;/code&gt; property will go unused.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果一个函数从不用作构造函数，则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它将不使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="069c6dba09a3fa7d8e7e3fc560710a57a35adf5a" translate="yes" xml:space="preserve">
          <source>If a member of an object can't be found in the object it looks for it in the prototype chain. The chain consists of other objects. The prototype of a given instance can be accessed with the &lt;code&gt;__proto__&lt;/code&gt; variable. Every object has one, as there is no difference between classes and instances in javascript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果在对象中找不到对象的成员，则会在原型链中寻找它。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链由其他对象组成。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;访问给定实例的原型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个对象都有一个对象，因为javascript中的类和实例之间没有区别。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f62c28db1c7c79d9c5f0200bc22f793427a5093" translate="yes" xml:space="preserve">
          <source>If it cannot find the property nowhere on the object and its prototype chain it will return undefined.</source>
          <target state="translated">如果它在对象和它的原型链上找不到任何地方的属性,它将返回undefined。</target>
        </trans-unit>
        <trans-unit id="579168485f40523728d3e2e483b8c97ad5737a6c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;prop_X&lt;/code&gt; is finally found in the k-th prototype object then</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最终在第k个原型对象中找到，则&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b5c35ba29dc74b14286f7b407902d1df105e2b5" translate="yes" xml:space="preserve">
          <source>If the property is not located on the object itself it will 'climb up the protochain'. It basically looks at the object referred to by the &lt;strong&gt;proto&lt;/strong&gt; property. There it checks if the property is available on the object referred to by &lt;strong&gt;proto&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果该属性不在对象本身上，它将&amp;ldquo;爬升原型链&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它基本上看一下由&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用的对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在那里，它检查属性是否在&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proto所&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用的对象上可用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e415f6eb9f17af7905fbbb1186b6db3b03bfe31c" translate="yes" xml:space="preserve">
          <source>If the property isn't located on the &lt;strong&gt;proto&lt;/strong&gt; object it will climb up the &lt;strong&gt;proto&lt;/strong&gt; chain all the way up to Object object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果属性不在&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象上，它将沿着&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链一直&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;攀升&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到对象对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9355f10f28f16134f1bb8ba1a5affef1f401ff86" translate="yes" xml:space="preserve">
          <source>If we use a &lt;code&gt;new&lt;/code&gt; operator on the &lt;code&gt;Tree function&lt;/code&gt;, we call it as a &lt;code&gt;constructor&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;Tree function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符，则将&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其称为&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51315e6799ffc612f9684a9c011ff1e6e45b29c1" translate="yes" xml:space="preserve">
          <source>If you access a property via the dot (&lt;code&gt;obj.propName&lt;/code&gt;) or bracket (&lt;code&gt;obj['propName']&lt;/code&gt;) notation, and the object does not directly have such a property (ie. an &lt;em&gt;own property&lt;/em&gt;, checkable via &lt;code&gt;obj.hasOwnProperty('propName')&lt;/code&gt;), the runtime looks for a property with that name on the object referenced by the &lt;code&gt;[[Prototype]]&lt;/code&gt; instead. If the &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;em&gt;also&lt;/em&gt; does not have such a property, its &lt;code&gt;[[Prototype]]&lt;/code&gt; is checked in turn, and so on. In this way, the original object's &lt;em&gt;prototype chain&lt;/em&gt; is walked until a match is found, or its end is reached. At the top of the prototype chain is the &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您通过点（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.propName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）或方括号（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj['propName']&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）表示法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;访问属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而该对象没有直接具有这样的属性（即&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自己的属性&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则可以通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.hasOwnProperty('propName')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），则运行时会在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用的对象上查找具有该名称的属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。如果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有这样的属性，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则依次检查&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，依此类推。这样，原始对象的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型链&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;就会遍历，直到找到匹配项或到达末尾为止。原型链的顶部是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc00b072becb7e2c9c80fa4abb29e36a2046e46c" translate="yes" xml:space="preserve">
          <source>If you create a new object via &lt;code&gt;new Func()&lt;/code&gt;, the object's &lt;code&gt;[[Prototype]]&lt;/code&gt; will, by default, be set to the object referenced by &lt;code&gt;Func.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Func()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建新对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认情况下，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该对象的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将设置为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Func.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用的对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e26c361e62783e6e4ad3a4d7b78cd7a271af85e" translate="yes" xml:space="preserve">
          <source>If you don't need a constructor, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;Object.create&lt;/a&gt; instead of &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果不需要构造函数，请使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.create&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de0c76d508bd0c60f85684de7562bbf927304fa3" translate="yes" xml:space="preserve">
          <source>If you look at the above &lt;code&gt;console.log()&lt;/code&gt; output, you could a see a constructor property on &lt;code&gt;Tree.prototype&lt;/code&gt; and a &lt;code&gt;__proto__&lt;/code&gt; property too. The &lt;code&gt;__proto__&lt;/code&gt; represents the &lt;code&gt;prototype&lt;/code&gt; that this &lt;code&gt;function&lt;/code&gt; is based off, and since this is just a plain &lt;code&gt;JavaScript function&lt;/code&gt; with no &lt;code&gt;inheritance&lt;/code&gt; set up yet, it refers to the &lt;code&gt;Object prototype&lt;/code&gt; which is something just built in to JavaScript...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果查看上面的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;console.log()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;输出，则可以看到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上的构造函数属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代表的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这种&lt;/font&gt;&lt;/font&gt; &lt;code&gt;function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是基于关闭，因为这只是一个简单的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;inheritance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置的是，它是指&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这仅仅是内置于JavaScript的东西...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b56f4223a36469d868a9c3f3e13638a6646255c5" translate="yes" xml:space="preserve">
          <source>If you look at the below one, we are trying to access the &lt;code&gt;call&lt;/code&gt; method which is available in every &lt;code&gt;function&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您看下面的内容，我们正在尝试访问&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个&lt;/font&gt; &lt;code&gt;function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;可用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;call&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f137ce61334b2a7b075a1ce9504fd4da3b16e38" translate="yes" xml:space="preserve">
          <source>If you look up the above fiddle, &lt;code&gt;Profile&lt;/code&gt; Function has access to &lt;code&gt;call&lt;/code&gt; method, but its not available in it, but available via the prototype chain which delegates to &lt;code&gt;Function.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您查看上面的小提琴，则&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Profile&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Function可以访问&lt;/font&gt;&lt;/font&gt; &lt;code&gt;call&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法，但该方法在其中不可用，但是可以通过委托给&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的原型链使用。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8469815035042a48f41f237dc4d9ccbe4ff669e" translate="yes" xml:space="preserve">
          <source>If you look up the above fiddle, dog has access to &lt;code&gt;toString&lt;/code&gt; method, but its not available in it, but available via the prototype chain which delegates to &lt;code&gt;Object.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您查看上面的小提琴，则dog可以访问&lt;/font&gt;&lt;/font&gt; &lt;code&gt;toString&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法，但是该方法不可用，但是可以通过委托给&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的原型链&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d9d50ab6ec54491b1e8cafe8af8d69bbd177fee" translate="yes" xml:space="preserve">
          <source>If you look up the code above, we have &lt;code&gt;Foo&lt;/code&gt; constructor who has the method &lt;code&gt;identify()&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; constructor which has &lt;code&gt;speak&lt;/code&gt; method. We create two &lt;code&gt;Bar&lt;/code&gt; instance &lt;code&gt;b1&lt;/code&gt; and &lt;code&gt;b2&lt;/code&gt; whose parent type is &lt;code&gt;Foo&lt;/code&gt;. Now while calling &lt;code&gt;speak&lt;/code&gt; method of &lt;code&gt;Bar&lt;/code&gt;, we are able to identify the who is calling the speak via &lt;code&gt;prototype&lt;/code&gt; chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您在上面的代码中查找，则我们有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数（其具有方法&lt;/font&gt;&lt;/font&gt; &lt;code&gt;identify()&lt;/code&gt; )&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数（其具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;speak&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法）。我们创建两个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实例&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其父类型为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。现在，在调用&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; 的&lt;/font&gt; &lt;code&gt;speak&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我们可以通过&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;链&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;识别谁在讲话&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af6377b8c527a360e9727478ccc7433365cb08cc" translate="yes" xml:space="preserve">
          <source>Imagine this ....</source>
          <target state="translated">想象一下......</target>
        </trans-unit>
        <trans-unit id="681ab279185efecf4adf0ca37096615d94ed9ef0" translate="yes" xml:space="preserve">
          <source>Important is that this prototype chain has little to do with the objects that &lt;code&gt;Person&lt;/code&gt; can &lt;em&gt;construct&lt;/em&gt;. Those constructed objects have their own prototype chain, and this chain can potentially have no close ancestor in common with the one mentioned above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重要的是，该原型链与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的对象无关&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些构造的对象具有自己的原型链，并且该链可能与上述的链没有共同的祖先。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d4434a6f3e9717fa3fb7bca25a2650db0ab5526" translate="yes" xml:space="preserve">
          <source>In JavaScript you first create an object (there is no concept of class), then you can augment your own object or create new objects from it. It's not difficult, but a little foreign and hard to metabolize for somebody used to the classical way.</source>
          <target state="translated">在JavaScript中,你首先要创建一个对象(没有类的概念),然后你可以对自己的对象进行扩充,或者从这个对象中创建新的对象。这并不难,但对于习惯了古典方式的人来说,有点陌生,难以代谢。</target>
        </trans-unit>
        <trans-unit id="eb502b0d87f1e52cd28e77dd3efe27622ff8c19d" translate="yes" xml:space="preserve">
          <source>In a language implementing classical inheritance like Java, C# or C++ you start by creating a class--a blueprint for your objects--and then you can create new objects from that class or you can extend the class, defining a new class that augments the original class.</source>
          <target state="translated">在像Java、C#或C++这样实现经典继承的语言中,你可以从创建一个类开始--一个对象的蓝图--然后你可以从这个类中创建新的对象,或者你可以扩展这个类,定义一个新的类,增强原来的类。</target>
        </trans-unit>
        <trans-unit id="3eac9854d580c805d0b006d454df086cacebd0b1" translate="yes" xml:space="preserve">
          <source>In other words, when you have a prototype property on a function and you call a new on that, after JavaScript finishes looking at that newly created object for properties, it will go look at the function's &lt;code&gt;.prototype&lt;/code&gt; and also it is possible that this object has its own internal prototype. and so on.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;换句话说，当您在函数上具有原型属性并在其上调用一个新属性时，JavaScript完成对新创建的对象的属性查找后，它将去查看函数的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并且该对象也可能有自己的内部原型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等等。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa8cdbafa4cec47f538fd967f8cc3630039bb181" translate="yes" xml:space="preserve">
          <source>In the above case, you have static funcation call test. This function can be accessed only by obj.test where you can imagine obj to be a class.</source>
          <target state="translated">在上述情况下,你有静态函数调用test。这个函数只能通过obj.test来访问,这里你可以把obj想象成一个类。</target>
        </trans-unit>
        <trans-unit id="92812c9a271d95faac6799bb983e945fe61121f5" translate="yes" xml:space="preserve">
          <source>In the first line of this listing, a &lt;code&gt;primitive&lt;/code&gt; string value is assigned to name. The second line treats name like an &lt;code&gt;object&lt;/code&gt; and calls &lt;code&gt;charAt(0)&lt;/code&gt; using dot notation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在此清单的第一行中，将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;primitive&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串值分配给name。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第二行将名称视为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用点表示法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;charAt(0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20242a20d0a285b179a47552d0d66df0f23b44d5" translate="yes" xml:space="preserve">
          <source>In traditional javascript, the linked object is the &lt;code&gt;prototype&lt;/code&gt; property of a function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在传统的javascript中，链接对象是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa82f61da16ffe0c6852fe1744d556e04cb4b389" translate="yes" xml:space="preserve">
          <source>Intuitively, classical inheritance should affect property lookup.</source>
          <target state="translated">直观地讲,经典继承应该影响财产查询。</target>
        </trans-unit>
        <trans-unit id="030ed0cf05fcd236928c7dc9c3dab71153816ff9" translate="yes" xml:space="preserve">
          <source>It can be retrieved via the ES5 &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以通过ES5 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检索它&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="435ef2bfd6485579713864ee91cc85d379df2ff0" translate="yes" xml:space="preserve">
          <source>It is no surprise that the name of the property &lt;code&gt;prototype&lt;/code&gt; can lead to confusion. It would maybe have been clearer if this property had been named &lt;code&gt;prototypeOfConstructedInstances&lt;/code&gt; or something along that line.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的名称&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会引起混乱&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也就不足为奇了&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果将该属性命名为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypeOfConstructedInstances&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或类似的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名称，可能会更加清楚&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf3b678f25878fd95a8e605eb0b10a766c4082fb" translate="yes" xml:space="preserve">
          <source>It is not the way that JavaScript actually attaches the properties that are defined in the prototype. The actual way is related to the prototype chain concept.</source>
          <target state="translated">它不是JavaScript实际附着在原型中定义的属性的方式。实际的方式与原型链的概念有关。</target>
        </trans-unit>
        <trans-unit id="f7269d48b77d1578b7761e037bb9f11b7217d7a6" translate="yes" xml:space="preserve">
          <source>It may help to categorise prototype chains into two categories.</source>
          <target state="translated">将原型链分为两类,可能会有帮助。</target>
        </trans-unit>
        <trans-unit id="c8d2bc26288d1970e7d9c6e818d443806f624d90" translate="yes" xml:space="preserve">
          <source>It's also useful for inheritance, because the prototype chain can consist of many other objects.</source>
          <target state="translated">它对继承也很有用,因为原型链可以由许多其他对象组成。</target>
        </trans-unit>
        <trans-unit id="c423571e162589c35a8213ca713cd61ba94c2567" translate="yes" xml:space="preserve">
          <source>It's important to understand that there is a distinction between an object's prototype (which is available via &lt;code&gt;Object.getPrototypeOf(obj)&lt;/code&gt;, or via the deprecated &lt;code&gt;__proto__&lt;/code&gt; property) and the &lt;code&gt;prototype&lt;/code&gt; property on constructor functions. The former is the property on each instance, and the latter is the property on the constructor. That is, &lt;code&gt;Object.getPrototypeOf(new Foobar())&lt;/code&gt; refers to the same object as &lt;code&gt;Foobar.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重要的是要理解，对象的原型（可通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(obj)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或不赞成使用的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性获得）与&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间要有区别&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前者是每个实例的属性，后者是构造函数的属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也就是说，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(new Foobar())&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foobar.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相同的对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="030d130f2ed1f207ab296966419ab9e0bd2b0103" translate="yes" xml:space="preserve">
          <source>It's just that you already have an object with &lt;code&gt;Object.new&lt;/code&gt; but you still don't have an object when using the constructor syntax.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只是您已经有了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的对象，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是使用构造函数语法时仍然没有对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5e3efa7e30e4995e4ca6d4e28e54b49937edc76" translate="yes" xml:space="preserve">
          <source>JavaScript basically has two kinds of data types</source>
          <target state="translated">JavaScript基本上有两种数据类型</target>
        </trans-unit>
        <trans-unit id="d94f506270681997f01537b42a4ab95a5bf02ca2" translate="yes" xml:space="preserve">
          <source>JavaScript internally makes an object, an empty hash and then it gives that object to the constructor, then the constructor can do whatever it wants, because &lt;strong&gt;this&lt;/strong&gt; inside of that constructor is the object that was just created and then it gives you that object of course if you haven't used the return statement in your function or if you've put a &lt;code&gt;return undefined;&lt;/code&gt; at the end of your function body.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript在内部创建一个对象，一个空散列，然后将该对象提供给构造函数，然后构造函数可以执行其所需的任何操作，因为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数内部的对象是刚刚创建的对象，然后它为您提供了该对象如果您尚未在函数中使用return语句，或者&lt;/font&gt;&lt;/font&gt; &lt;code&gt;return undefined;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; return语句&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在功能主体的末端。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="957143b10357f5e6e6910d7460864c89a175cecc" translate="yes" xml:space="preserve">
          <source>Javascript doesn't have inheritance in the usual sense, but it has the prototype chain.</source>
          <target state="translated">Javascript没有通常意义上的继承,但它有原型链。</target>
        </trans-unit>
        <trans-unit id="a2450e30be66310d0553978f90d0d288caac92ae" translate="yes" xml:space="preserve">
          <source>Javascript has a mechanism when looking up properties on Objects which is called &lt;strong&gt;'prototypal inheritance'&lt;/strong&gt;, here is what is basically does:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当在对象上查找属性时，JavaScript具有一种称为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;原型继承&amp;rdquo;的机制&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，基本上是这样做的：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f4b47934618af57961679c19108922a4ca294b0" translate="yes" xml:space="preserve">
          <source>Let me tell you my understanding of prototypes. I am not going to compare the inheritance here with other languages. I wish people would stop comparing languages, and just understand the language as itself. Understanding prototypes and prototypal inheritance is so simple, as I will show you below.</source>
          <target state="translated">下面说说我对原型的理解。我在这里不打算把继承与其他语言做比较。我希望大家不要再去比较语言,只把语言本身理解为语言本身。理解原型和原型继承就是这么简单,下面我就给大家介绍一下。</target>
        </trans-unit>
        <trans-unit id="59c81da029f262010deb5cba5768b6b6e36fbcb2" translate="yes" xml:space="preserve">
          <source>Let's add a &lt;code&gt;child-tree&lt;/code&gt; to our &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们在&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;child-tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;树&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcf6be15e0399b4e8692eb89b5dbccad0d1c69a8" translate="yes" xml:space="preserve">
          <source>Let's add a method to our &lt;code&gt;Tree&lt;/code&gt;&lt;code&gt;prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加一个方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf410d2b618ac111afa3b7abc19e478c0f77ab14" translate="yes" xml:space="preserve">
          <source>Let's say we want to create a &lt;code&gt;Person&lt;/code&gt; object model. but in this step I'm gonna be trying to &lt;strong&gt;do the same exact thing without using &lt;code&gt;prototype&lt;/code&gt; and &lt;code&gt;new&lt;/code&gt; keyword&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;假设我们要创建一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象模型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是在此步骤中，我将尝试在&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;情况下做同样的事情&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fd77249b0436d1e1235c3cd861af2edcdf49052" translate="yes" xml:space="preserve">
          <source>Let's take a moment to study how the following works:</source>
          <target state="translated">下面我们就来研究一下下面的工作原理。</target>
        </trans-unit>
        <trans-unit id="c5af6366772cd8b7bfde51876fc403399d3d1ac6" translate="yes" xml:space="preserve">
          <source>Lookup order is:</source>
          <target state="translated">查询顺序是:</target>
        </trans-unit>
        <trans-unit id="89e5ff4a5d3a2edc239357c75ca16021a0ac3518" translate="yes" xml:space="preserve">
          <source>Modern JavaScript implementations allow read and/or write access to the &lt;code&gt;[[Prototype]]&lt;/code&gt; in the following ways:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现代JavaScript实现允许&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过以下方式&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行读和/或写访问&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e595cef183e536c4286b64758770cea322fe687" translate="yes" xml:space="preserve">
          <source>Note that, therefore, &lt;strong&gt;all classes, and all functions that can be used with the &lt;code&gt;new&lt;/code&gt; operator, have a property named &lt;code&gt;.prototype&lt;/code&gt; in addition to their own &lt;code&gt;[[Prototype]]&lt;/code&gt; internal slot.&lt;/strong&gt; This dual use of the word &quot;prototype&quot; is the source of endless confusion amongst newcomers to the language.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，请注意，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有类以及可与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一起使用的所有函数，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除了其自己的&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部插槽&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，还具有一个名为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种&amp;ldquo;原型&amp;rdquo;一词的双重使用是该语言的新手之间无休止的混淆的根源。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="284252bf04303c422b352a14277442552d072df6" translate="yes" xml:space="preserve">
          <source>Now the prototype chain of &lt;em&gt;t&lt;/em&gt; is one step longer than that of &lt;em&gt;p&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;t&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的原型链&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的原型链&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;长了一个步骤&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="453e9d47d55aa48fa47134a6774d654f2dc68e6c" translate="yes" xml:space="preserve">
          <source>Now you create an &lt;code&gt;instance&lt;/code&gt; of &lt;code&gt;Child&lt;/code&gt; and call &lt;code&gt;branch&lt;/code&gt; which is originally available in &lt;code&gt;Tree&lt;/code&gt;. We haven't actually defined our &lt;code&gt;branch&lt;/code&gt; on the &lt;code&gt;Child prototype&lt;/code&gt;. BUT, in the &lt;code&gt;Root prototype&lt;/code&gt; which Child inherits from.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，您创建一个&lt;/font&gt; &lt;code&gt;Child&lt;/code&gt; &lt;/font&gt; &lt;code&gt;instance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并调用&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初可用的&lt;/font&gt; &lt;code&gt;branch&lt;/code&gt; 分支&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们实际上尚未&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;Child prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义我们的&lt;/font&gt; &lt;code&gt;branch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Child继承&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt; &lt;code&gt;Root prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;中。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e405d1c6c812b0aaf5cd5dc341492cb7cd706812" translate="yes" xml:space="preserve">
          <source>Now, consider the &lt;code&gt;keyValueStore&lt;/code&gt; object again. I could rewrite it like this :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再次&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;考虑&lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我可以这样重写它：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27a2f1b2807805e773c2207e1da71947713971f9" translate="yes" xml:space="preserve">
          <source>Now, imagine if you could have just a single &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;getLength&lt;/code&gt; copy, and each instance would reference that same function. This would be better for performance and require less memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，假设您只有一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delete&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;getLength&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;副本，并且每个实例将引用相同的函数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样可以提高性能，并减少内存需求。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="620234a6a5d0f7aa8808c551a92b51792801f50b" translate="yes" xml:space="preserve">
          <source>Now, since &lt;code&gt;.prototype&lt;/code&gt; is an object, it has a &lt;code&gt;[[Prototype]]&lt;/code&gt; property. When you don't make any assignments to &lt;code&gt;Function.prototype&lt;/code&gt;, the &lt;code&gt;.prototype&lt;/code&gt;'s &lt;code&gt;[[Prototype]]&lt;/code&gt; points to the prototypical object (&lt;code&gt;Object.prototype&lt;/code&gt;). This is automatically performed anytime you create a new function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，由于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个对象，因此它具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您不对&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行任何分配时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指向原型对象（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每当您创建新功能时，都会自动执行此操作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3967028d959361dd532fe101b7f70d69c0a8a614" translate="yes" xml:space="preserve">
          <source>Now, suppose we create 100 instances of this &lt;code&gt;keyValueStore&lt;/code&gt; object. Even though &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;getLength&lt;/code&gt; will do the exact same thing for each of these 100 instances, every instance has its own copy of this function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，假设我们创建了这个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;100个实例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即使&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delete&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;getLength&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会对这100个实例中的每个实例执行完全相同的操作，但每个实例都有此函数的自己的副本。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c7607adc00ebc0cc7c3ef863d971b6b48c4aa7e" translate="yes" xml:space="preserve">
          <source>Object created with new or Object.create -&amp;gt; One or More prototype chains -&amp;gt; Object.prototype -&amp;gt; null</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用new或Object.create创建的对象-&amp;gt;一个或多个原型链-&amp;gt; Object.prototype-&amp;gt; null&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a09455bc70de56d08fdfa56e64f46eea057a622" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;new&lt;/a&gt; are linked to the &lt;code&gt;prototype&lt;/code&gt; property of their constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建的对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链接到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其构造函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffd0441b7bb81e2aaa165755d1fb9ccd3a8bb90b" translate="yes" xml:space="preserve">
          <source>On the second line, when we do:</source>
          <target state="translated">在二线,当我们做。</target>
        </trans-unit>
        <trans-unit id="1ed4b17e49593418cbd9b66a6d5373f35d033114" translate="yes" xml:space="preserve">
          <source>One might think that setting the prototype property of the Constructor to null shall create an object with a null prototype. However in such cases the newly created object's prototype is set to Object.prototype and its constructor is set to function Object. This is demonstrated by the following code</source>
          <target state="translated">人们可能认为,将构造函数的prototype属性设置为null就会创建一个具有null原型的对象。但是在这种情况下,新创建的对象的原型被设置为Object.prototype,其构造函数被设置为Object。这可以通过下面的代码来证明</target>
        </trans-unit>
        <trans-unit id="dd5d44663fd2f674fd203b181e341546f829b568" translate="yes" xml:space="preserve">
          <source>One of the most important &lt;code&gt;.prototype&lt;/code&gt;s is that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype&quot;&gt;of the &lt;code&gt;Object&lt;/code&gt; function&lt;/a&gt;. This prototype holds the prototypical object that all &lt;code&gt;[[Prototype]]&lt;/code&gt; chains contain. On it, all the available methods for new objects are defined:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其中最重要的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -是不是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该原型包含所有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链所包含&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的原型对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在其上，定义了新对象的所有可用方法：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="469584dd5fce9e5dacc091ba6fdcdd6c653674e4" translate="yes" xml:space="preserve">
          <source>Only &lt;strong&gt;Function type objects&lt;/strong&gt; can create a new object using the &lt;strong&gt;operator new&lt;/strong&gt;. The objects thus created are &lt;strong&gt;Non Function type&lt;/strong&gt; objects. The &lt;strong&gt;Non Function type objects&lt;/strong&gt; cannot further create an object using &lt;strong&gt;operator new&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数类型的对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;才能使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符new&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建新对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样创建的对象&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是非功能类型的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非功能型对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不能再创建使用对象&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new运算符&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1816079e3107aa40962064bea8d37fc70e00e405" translate="yes" xml:space="preserve">
          <source>Our 2 lines of code only created the following new objects:</source>
          <target state="translated">我们的2行代码只创建了以下新对象。</target>
        </trans-unit>
        <trans-unit id="a9d41b6a8034d85ae98cd3f45af131286ffde0d0" translate="yes" xml:space="preserve">
          <source>Prior to the introduction of class syntax to JavaScript, constructor functions were the only way to simulate classes. We can think of properties of the object referenced by the constructor function's &lt;code&gt;.prototype&lt;/code&gt; property as shared members; ie. members which are the same for each instance. In class-based systems, methods are implemented the same way for each instance, so methods are conceptually added to the &lt;code&gt;.prototype&lt;/code&gt; property; an object's fields, however, are instance-specific and are therefore added to the object itself during construction.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在将类语法引入JavaScript之前，构造函数是模拟类的唯一方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以将构造函数的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用的对象的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性视为共享成员。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;即。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个实例都相同的成员。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在基于类的系统中，对每个实例都以相同的方式实现方法，因此在概念&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法添加到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.prototype&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，对象的字段是特定于实例的，因此在构造过程中会添加到对象本身。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03fb78825e2fec8bc7c200a72472e96bafcab5bc" translate="yes" xml:space="preserve">
          <source>Properties in the &lt;strong&gt;product&lt;/strong&gt; are handled in the following way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;产品&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按以下方式处理：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a12e750cacf0cb7832019025ff44a2cfd082da5a" translate="yes" xml:space="preserve">
          <source>Prototype is like a model, based on which you create a product. The crucial point to understand is that when you create an object using another object as it's prototype, the link between the prototype and the product is ever-lasting. For instance:</source>
          <target state="translated">原型就像一个模型,在此基础上创建一个产品。需要理解的关键点是,当你用另一个对象作为原型来创建一个对象时,原型和产品之间的联系是持久的。比如说。</target>
        </trans-unit>
        <trans-unit id="f98486283a16369ff6d59a142ef64f750c64a317" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&quot;&gt;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参考：&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="707b1b8fa5117ebd4f291a5c909d3a04e8df0a5b" translate="yes" xml:space="preserve">
          <source>Remember:</source>
          <target state="translated">Remember:</target>
        </trans-unit>
        <trans-unit id="bdfa853b763095b302a457bd72bd8131fd6f666a" translate="yes" xml:space="preserve">
          <source>Setting the prototype property of the Constructor to null(or undefined,number,true,false,string) shall not create an object with a null prototype. In such cases the newly created object's prototype is set to Object.prototype and its constructor is set to function Object.</source>
          <target state="translated">将构造函数的prototype属性设置为null(或undefined,number,true,false,string)不会创建一个具有null原型的对象。在这种情况下,新创建的对象的原型将被设置为Object.prototype,其构造函数被设置为Object.prototype。</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">显示代码片段</target>
        </trans-unit>
        <trans-unit id="0b2f038d5b557fa82a7d38572069173ec9110e7a" translate="yes" xml:space="preserve">
          <source>Simple Objects (created By new Object() or {} including built in Math  object)-&amp;gt;   Object.prototype -&amp;gt; null</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;简单对象（由new Object（）或{}创建，包括内置的Math对象）-&amp;gt; Object.prototype-&amp;gt; null&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfa33a46580418ce6726f86b2853c888bbaeba8b" translate="yes" xml:space="preserve">
          <source>Simplified diagram without all predefined objects:</source>
          <target state="translated">简化图,不含所有预定义对象。</target>
        </trans-unit>
        <trans-unit id="cd11a10866ed006c872e7b004b5d009d83d38196" translate="yes" xml:space="preserve">
          <source>Since a function is also an object, it also has its own parent in its own prototype chain, but recall that these two chains are about different things.</source>
          <target state="translated">既然一个函数也是一个对象,那么它在自己的原型链中也有自己的母体,但是回想一下,这两条链子是关于不同的东西。</target>
        </trans-unit>
        <trans-unit id="7e14680d7f99efdb2b76c0e9039ea3eca62d171d" translate="yes" xml:space="preserve">
          <source>Since the &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; can create new objects they are also called &lt;strong&gt;&lt;em&gt;Constructors&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Function类型的对象&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以创建新对象，因此也称为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Constructors&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6651a715d46841a278432b989cce2edefb80907" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;Person&lt;/code&gt; seems related to two kinds of chains, which live their own lives. To &quot;jump&quot; from one chain to the other, you use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;似乎与两种链条有关，这两种链条都有自己的生活。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要从一个链&amp;ldquo;跳&amp;rdquo;到另一个链，请使用：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcca12fe80eb8ce956e8c593f4902949f237f14c" translate="yes" xml:space="preserve">
          <source>So in this step &lt;strong&gt;&lt;code&gt;functions&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;objects&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; keyword, are all we have.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，在此步骤中，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;functions&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;objects&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;this&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字就是我们所有的东西。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b082423f578ce9c7b356bdcfaac50c485dd327f" translate="yes" xml:space="preserve">
          <source>So these statements are equivalent:</source>
          <target state="translated">所以,这些说法是对等的。</target>
        </trans-unit>
        <trans-unit id="b7953a06c481f35275be63d3184e665422ffd9ae" translate="yes" xml:space="preserve">
          <source>So to answer that let's say we have an empty object, and two functions like:</source>
          <target state="translated">所以,为了回答这个问题,我们假设我们有一个空的对象,和两个函数一样。</target>
        </trans-unit>
        <trans-unit id="71764b5b34e10b36e9b5f64bf240e3e80dcd6adb" translate="yes" xml:space="preserve">
          <source>So when JavaScript goes to look up a property on an object, the first thing it does, is it looks it up on that object. And then there is a secret property &lt;strong&gt;&lt;code&gt;[[prototype]]&lt;/code&gt;&lt;/strong&gt; which we usually have it like &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; and that property is what JavaScript looks at next. And when it looks through the &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt;, as far as it is again another JavaScript object, it has its own &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; attribute, it goes up and up until it gets to the point where the next &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; is null. The point is the only object in JavaScript that its &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; attribute is null is &lt;code&gt;Object.prototype&lt;/code&gt; object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，当JavaScript在对象上查找属性时，它要做的第一件事就是在对象上查找属性。然后有一个秘密属性&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;[[prototype]]&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我们通常像&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样拥有它，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而该属性就是JavaScript接下来要看的东西。当它遍历&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; 时&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它又是另一个JavaScript对象，它具有自己的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，它会不断上升直到到达下一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为空&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的地步&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。该点是JavaScript中&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性为null的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.prototype&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88bfdb43114c0ba7f946dd444e95247ad2b8e760" translate="yes" xml:space="preserve">
          <source>So,
&lt;strong&gt;typeof(Object)&lt;/strong&gt; === &lt;strong&gt;typeof(String)&lt;/strong&gt; === &lt;strong&gt;typeof(Number)&lt;/strong&gt; === &lt;strong&gt;typeof(Boolean)&lt;/strong&gt; === &lt;strong&gt;typeof(Array)&lt;/strong&gt;  === &lt;strong&gt;typeof(RegExp)&lt;/strong&gt; === &lt;strong&gt;typeof(Function)&lt;/strong&gt;  === &lt;strong&gt;typeof(UserDefinedFunction)&lt;/strong&gt; === &lt;strong&gt;'function'&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此， &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Object）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（String）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Number）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Boolean）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Array）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（RegExp）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Function）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; == = &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（UserDefinedFunction）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'功能'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="795df9eafea50013d6a6b25f4f916ff964abe8b9" translate="yes" xml:space="preserve">
          <source>So, similar to the code above, if you use the class syntax to create a new object like so:</source>
          <target state="translated">所以,类似于上面的代码,如果用类的语法来创建一个新的对象,就像这样。</target>
        </trans-unit>
        <trans-unit id="ebb370d6c8485fb5d4a2404e866af0e40f66e61e" translate="yes" xml:space="preserve">
          <source>Some environments expose &lt;em&gt;[[Prototype]]&lt;/em&gt; as &lt;code&gt;__proto__&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;某些环境将&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototype]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;公开&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81d0cf8739f68b4dbf2f185155554eed684a9f0c" translate="yes" xml:space="preserve">
          <source>Such a linking of objects using the prototype property is called prototypal inheritance. There, it is so simple, agree?</source>
          <target state="translated">这种使用原型属性的对象之间的连接称为原型继承。在那里,就是这么简单,同意吗?</target>
        </trans-unit>
        <trans-unit id="6ed816d75e1c95434823496141b81fdcea2cbda9" translate="yes" xml:space="preserve">
          <source>Summary:</source>
          <target state="translated">Summary:</target>
        </trans-unit>
        <trans-unit id="9b90da30e2126fc79e156855a3d3c56add196624" translate="yes" xml:space="preserve">
          <source>Take for example this object:</source>
          <target state="translated">以这个对象为例。</target>
        </trans-unit>
        <trans-unit id="78b593da9026118be059ee6ac340d87c42a22fad" translate="yes" xml:space="preserve">
          <source>That means when you create an &lt;code&gt;instance&lt;/code&gt; of &lt;code&gt;Tree&lt;/code&gt;, you can call it's &lt;code&gt;branch&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着，当您创建&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;instance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，可以调用它的&lt;/font&gt; &lt;code&gt;branch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71710652d7b4816db69c89e8a310aac0b866f00d" translate="yes" xml:space="preserve">
          <source>That's where prototypes come in. A prototype is a &quot;blueprint&quot; of properties that is inherited but not copied by instances. So this means that it exists only once in memory for all instances of an object and is shared by all of those instances.</source>
          <target state="translated">这就是原型的作用所在。原型是一个属性的 &quot;蓝图&quot;,它可以被继承,但不会被实例复制。因此,这意味着它在内存中只存在于对象的所有实例中一次,并且被所有这些实例共享。</target>
        </trans-unit>
        <trans-unit id="1b1e6e664f2f6088fa0652acd0a1823c05c2ebae" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;__proto__&lt;/code&gt; property has been deprecated, although it is implemented in most modern browsers a better way to obtain the prototype object reference would be:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管已在大多数现代浏览器中实现了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，但&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性已被弃用，但获取原型对象引用的更好方法是：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24dc7865f37f55e0e7f59502ab234ce4300fdb17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; property &lt;em&gt;holds an object&lt;/em&gt; that will be assigned to &lt;code&gt;b.[[Prototype]]&lt;/code&gt; when you do &lt;code&gt;var b = new Bar&lt;/code&gt;. You can easily examine this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;物业&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持有的对象&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，将被分配到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b.[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当你做&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var b = new Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以轻松检查以下内容：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0560bce1601dd3e00f9c71264e3134c14292d920" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; property of functions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="739a7313cb0b24b266ce566a1212e78b57749fc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; property:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7c72595d56c1839a5b4bd46757e8d1b1a97cd3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String object&lt;/code&gt; exists only for one statement before it&amp;rsquo;s destroyed (a process called &lt;code&gt;autoboxing&lt;/code&gt;). Let's again get back to our &lt;code&gt;prototypal&lt;/code&gt;&lt;code&gt;inheritance&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;String object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，然后再将其摧毁（这个过程被称为只存在一个语句&lt;/font&gt;&lt;/font&gt; &lt;code&gt;autoboxing&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们再次回到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypal&lt;/code&gt; &lt;code&gt;inheritance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f9309aa7533ada9cbecccdaa13f94407b0b835a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[[Prototype]]&lt;/code&gt; property is part of what forms the &lt;code&gt;[[Prototype]]&lt;/code&gt; chain. This chain of &lt;code&gt;[[Prototype]]&lt;/code&gt; objects is what is examined when, for example, &lt;code&gt;[[Get]]&lt;/code&gt; or &lt;code&gt;[[Set]]&lt;/code&gt; operations are performed on an object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性是什么构成部分&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对某个对象执行&lt;/font&gt; &lt;code&gt;[[Get]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt; &lt;code&gt;[[Set]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;操作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时，将检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f46ef67da2a6814adb535fb3389ecfb6a71e226" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[[Prototype]]&lt;/code&gt; property:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="161b021e18a6b95700d4c8cf0ea483d90d6b335a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;sup&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/sup&gt; property of all objects&lt;sup&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/sup&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有对象&lt;/font&gt;&lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2]&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[1]&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ece862f8ba8770dcb9e6a6682478dc2416551df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; keyword (configures the prototype chain when using the class syntax),</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（使用类语法时配置所述原型链）关键字，&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b343b9bc29dfa64b78cc8d23e762c5b0b782a88e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; operator (configures the prototype chain on the default object returned from a constructor function),</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运营商（配置原型链从构造函数返回的默认对象），&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95a51d09dda468b174d273b34c151a5eb01a0d1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prototype&lt;/code&gt; of &lt;code&gt;Bar&lt;/code&gt; is &lt;code&gt;Foo&lt;/code&gt;, &lt;code&gt;prototype&lt;/code&gt; of &lt;code&gt;Foo&lt;/code&gt; is &lt;code&gt;Object&lt;/code&gt; and if you look closely the &lt;code&gt;prototype&lt;/code&gt; of &lt;code&gt;Foo&lt;/code&gt; is related to &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，如果你仔细看的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df78d91123a923fff066c13c885618c518ae0655" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prototype&lt;/code&gt; property gives no information of the &lt;em&gt;subject's&lt;/em&gt; prototype chain, but of objects &lt;em&gt;created by&lt;/em&gt; the subject.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性没有给出的信息&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型链，但对象&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所创造&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的主题。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b97e95601e2caf4caa88430b4dc754abba772827" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Function type objects&lt;/strong&gt; are the ones that return the string &lt;strong&gt;'function'&lt;/strong&gt; with &lt;strong&gt;typeof&lt;/strong&gt; operator. 
All the user defined functions and all the JavaScript built in objects that can create new objects by using new operator fall into this category. For eg.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能类型的对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是返回字符串的那些&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;功能&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof运算&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;符。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有用户定义的函数以及所有可以使用new运算符创建新对象的JavaScript内置对象都属于此类别。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56d86db4ceab3ec83115b15933b5831cc0c116db" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Prototype&lt;/strong&gt; creates &lt;strong&gt;new object&lt;/strong&gt; by cloning existing &lt;strong&gt;object&lt;/strong&gt;. So really when we think about prototype we can really think &lt;strong&gt;cloning or making&lt;/strong&gt; a copy of something instead of making it up.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新的对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过克隆现有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，实际上，当我们考虑原型时，可以真正地考虑&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;克隆或&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;复制某些内容而不是进行组合。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bd6ac781e06b5b3a6cec0c62459adb65300cd62" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;string&lt;/strong&gt;,&lt;strong&gt;number&lt;/strong&gt; and &lt;strong&gt;boolean&lt;/strong&gt; data types can be represented both as &lt;strong&gt;Objects&lt;/strong&gt; and &lt;strong&gt;Non objects&lt;/strong&gt;.When they are represented as objects their typeof is always === 'object'. We shall come back to this once we understand the object data types.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;字符串&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;号码&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;布尔&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数据类型可以表示既作为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。当它们被表示为对象他们的typeof总是===&amp;ldquo;对象&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一旦了解了对象数据类型，我们将回到这一点。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8577d42ff998b0cfba6ce04e82f6c5d436e22aa4" translate="yes" xml:space="preserve">
          <source>The above diagram looks bit complicated, but brings out the whole picture on how &lt;code&gt;prototype chaining&lt;/code&gt; works. Let's walk through this slowly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面的图看起来有点复杂，但是展示了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype chaining&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;工作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的整个画面&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们慢慢地看一下：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="968cd07d3bdba98a6f10247da2969b50e37b575b" translate="yes" xml:space="preserve">
          <source>The above is my understanding. I am making it a community wiki, so people can correct me if I am wrong.</source>
          <target state="translated">以上是我的理解。我是把它做成社区维基,如果我说的不对,大家可以纠正我。</target>
        </trans-unit>
        <trans-unit id="2c7f474464d52ad7ae084e058020bfc177ae400f" translate="yes" xml:space="preserve">
          <source>The advantage of adding a function / variable to the prototype is that it has to be in the memory only once, not for every instance.</source>
          <target state="translated">在原型中加入一个函数变量的好处是,它只需要在内存中出现一次,而不是每个实例都要出现。</target>
        </trans-unit>
        <trans-unit id="b5537ac2f515dbdf82fb85a48b6d1e044f709c45" translate="yes" xml:space="preserve">
          <source>The apply() method calls a function with a given this value and
  arguments provided as an array (or an array-like object).</source>
          <target state="translated">application()方法调用一个函数,其给定的值和参数为数组(或类似数组的对象)。</target>
        </trans-unit>
        <trans-unit id="5c699def1d6a340923e2a07d768ff3f49b035bc4" translate="yes" xml:space="preserve">
          <source>The blue lines represent prototype chains, the other coloured lines represent other relationships:</source>
          <target state="translated">蓝线代表原型链,其他色线代表其他关系。</target>
        </trans-unit>
        <trans-unit id="2a4578c5b1468a10dd5d8d60c858bcf743a0a6d7" translate="yes" xml:space="preserve">
          <source>The built in object &lt;strong&gt;Math&lt;/strong&gt; is &lt;strong&gt;typeof&lt;/strong&gt;===&lt;strong&gt;'object'&lt;/strong&gt;. Hence a new object of type Math cannot be created by new operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内置对象&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Math&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'object'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，新运算符无法创建类型为Math的新对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f20bdf821bd9cf510187931b7bd057147e81e865" translate="yes" xml:space="preserve">
          <source>The call() method calls a function with a given this value and
  arguments provided individually.</source>
          <target state="translated">call()方法调用一个给定的这个值和参数单独提供的函数。</target>
        </trans-unit>
        <trans-unit id="8fe41dbdd05c507c0437d01a5845086e63e66808" translate="yes" xml:space="preserve">
          <source>The chain in upward direction looks like this:</source>
          <target state="translated">向上的链条是这样的。</target>
        </trans-unit>
        <trans-unit id="4dbb683a4341522fd20ba6134af3123fa22a5e19" translate="yes" xml:space="preserve">
          <source>The class syntax introduced in ES2015 simplifies things, by providing &lt;code&gt;extends&lt;/code&gt; as the &quot;one true way&quot; to configure the prototype chain in order to simulate classical inheritance in JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES2015中引入的类语法通过提供&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来配置原型链以模拟JavaScript中的经典继承&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，从而提供&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了一种&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，从而简化了事情&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="294a2f4d81f30e6efb14e124ad581924faf12546" translate="yes" xml:space="preserve">
          <source>The concept of &lt;code&gt;prototypal&lt;/code&gt; inheritance is one of the most complicated for many developers. Let's try to understand the root of problem to understand &lt;code&gt;prototypal inheritance&lt;/code&gt; better. Let's start with a &lt;code&gt;plain&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于许多开发人员来说&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;继承&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的概念&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是最复杂&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的概念&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之一。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们尝试了解问题的根源，以便&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更好地&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了解&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypal inheritance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让我们从一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;plain&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开始&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4202ac448e9e806292d729446f5ed2ca97966c9c" translate="yes" xml:space="preserve">
          <source>The earlier presented graphic can then be extended to this (the original &lt;code&gt;Thief.prototype&lt;/code&gt; is left out):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后，可以将先前显示的图形扩展为该图形（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thief.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原始的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thief.prototype&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6d557fdbd98c2f01910e237985ad11b07b68262" translate="yes" xml:space="preserve">
          <source>The exact same logic also explains &lt;code&gt;d.inc&lt;/code&gt; and &lt;code&gt;d.inc2&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完全相同的逻辑也解释了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;d.inc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;d.inc2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="071179b58595f70b3e0246c8299c5223b4b434eb" translate="yes" xml:space="preserve">
          <source>The first line sets &lt;code&gt;c.i&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; as explained in &quot;4)&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第一行将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如&amp;ldquo; 4）&amp;rdquo;中所述。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfcb48bc09a18643a47ba25dcb26645262528566" translate="yes" xml:space="preserve">
          <source>The first question would be &lt;strong&gt;how &lt;code&gt;this&lt;/code&gt; keyword could be useful without using &lt;code&gt;new&lt;/code&gt; keyword&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第一个问题是&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在不使用&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt; &lt;code&gt;new&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字的&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;情况下&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt; &lt;code&gt;this&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有用&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2bbd054869ff723b04d25a27a791c02b576fdc2" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;Person&lt;/code&gt; itself</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本身&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a56602d2b6e90afd8075ac6fcb4e4fef8bea591" translate="yes" xml:space="preserve">
          <source>The interface to standard classes become extensible. For example, you are using the &lt;code&gt;Array&lt;/code&gt; class and you also need to add a custom serializer for all your array objects. Would you spend time coding up a subclass, or use composition or ... The prototype property solves this by letting the users control the exact set of members/methods available to a class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标准类的接口变得可扩展。例如，您正在使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类，还需要为所有阵列对象添加一个自定义序列化程序。您会花时间编码一个子类，还是使用合成或...原型属性通过让用户控制可用于类的成员/方法的确切集合来解决此问题。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8a5278d41e6f81e5c870084bdee36db805218aa" translate="yes" xml:space="preserve">
          <source>The obj has become a class which can now be instantiated. Multiple instances of obj can exist and they all have the &lt;code&gt;test&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;obj已经成为可以实例化的类。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以存在obj的多个实例，并且它们都具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8ed29dc6612f51a31177919321b6fb313d0b80c" translate="yes" xml:space="preserve">
          <source>The object datatypes can be further divided into two types</source>
          <target state="translated">对象数据类型可以进一步分为以下两种类型</target>
        </trans-unit>
        <trans-unit id="8ef0237671cf69591e3f8b021ff31a9518df95f5" translate="yes" xml:space="preserve">
          <source>The object that will act as prototype when the function is called as a constructor</source>
          <target state="translated">当函数作为构造函数被调用时,将作为原型的对象。</target>
        </trans-unit>
        <trans-unit id="1e5e14fe193fe8a5cd8cd4d65c97709f9b4c3c83" translate="yes" xml:space="preserve">
          <source>The objects thus created are all &lt;strong&gt;&lt;em&gt;Non Function type objects&lt;/em&gt;&lt;/strong&gt; and return their &lt;strong&gt;typeof&lt;/strong&gt;===&lt;strong&gt;'object'&lt;/strong&gt;. In all these cases the object &quot;a&quot; cannot further create 
objects using operator new. So the following is wrong</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样创建的对象都是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非功能类型的对象，&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并返回其&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'object'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在所有这些情况下，对象&amp;ldquo; a&amp;rdquo;无法使用运算符new进一步创建对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所以以下是错误的&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bb6ebc6ed49049356585031df45806c66391473" translate="yes" xml:space="preserve">
          <source>The other prototype chain is not longer: &lt;code&gt;Thief&lt;/code&gt; and &lt;code&gt;Person&lt;/code&gt; are siblings sharing the same parent in their prototype chain:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一个原型链不再存在：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thief&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是其原型链中共享同一父级的兄弟姐妹：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6feced8f881972f18f04637769fb7219dcaa3ac1" translate="yes" xml:space="preserve">
          <source>The prototype chain for various objects work out as follows.</source>
          <target state="translated">各种对象的原型链的工作原理如下。</target>
        </trans-unit>
        <trans-unit id="9cd3c03c55b66f267fcbca0018211802743659e2" translate="yes" xml:space="preserve">
          <source>The prototype chain of every object ultimately traces back to Object.prototype (Unless the object is created using Object.create(null) in which case the object has no prototype).</source>
          <target state="translated">每个对象的原型链最终会追溯到Object.prototype(除非对象是用Object.create(null)创建的,在这种情况下,对象没有原型)。</target>
        </trans-unit>
        <trans-unit id="34d7b55597c242fac21097965af67f8a385115ea" translate="yes" xml:space="preserve">
          <source>The prototype chain of every object ultimately traces back to Object.prototype (which itself does not have any prototype object) .
Following code can be used for tracing the prototype chain of an object</source>
          <target state="translated">每一个对象的原型链最终都会追溯到Object.prototype(它本身没有任何原型对象)。下面的代码可以用来追踪对象的原型链。</target>
        </trans-unit>
        <trans-unit id="cd8dedef06e017d9ce35dc7d39e963eb0dcdbea4" translate="yes" xml:space="preserve">
          <source>The result &lt;code&gt;f.constructor == F&lt;/code&gt; is intuitively correct, since &lt;code&gt;F&lt;/code&gt; is used to construct &lt;code&gt;f&lt;/code&gt;, e.g. set fields, much like in classic OOP languages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;f.constructor == F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的结果&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在直觉上是正确的，因为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于构造&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例如set字段），这与经典OOP语言中的方法非常相似。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a51b020b73fe84a79e1e49f6afb49841810ea1ab" translate="yes" xml:space="preserve">
          <source>The seven Koans of prototype</source>
          <target state="translated">原型的七巧板</target>
        </trans-unit>
        <trans-unit id="526b0a35ac8072f512aa113d36919e8000921e8a" translate="yes" xml:space="preserve">
          <source>The standardized accessor (ie. getter/setter) property named &lt;code&gt;__proto__&lt;/code&gt; (similar to 4.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的标准化访问器（即getter / setter）属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（类似于4）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="990d2d3e711bac658c94a8f8517073a731d0ce74" translate="yes" xml:space="preserve">
          <source>The user defined functions are special case.</source>
          <target state="translated">用户定义的功能属于特殊情况。</target>
        </trans-unit>
        <trans-unit id="d149731627fd28ecdc13b42fec745d773696796f" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; is a function. In fact, it is &lt;code&gt;Function.prototype&lt;/code&gt;. Since &lt;code&gt;Person&lt;/code&gt; was created as a function, it shares the same prototype function object that all functions have. It is the same as &lt;code&gt;Person.__proto__&lt;/code&gt;, but that property should not be used. Anyway, with &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; you effectively walk up the ladder of what is called the prototype chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个函数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上，它是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是作为函数创建的，因此它共享与所有函数相同的原型函数对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相同&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是不应使用该属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无论如何，使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以有效地走上所谓的原型链的阶梯。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55158a52e1f0e56b614ff422296621820abe40d1" translate="yes" xml:space="preserve">
          <source>The value pointed at by the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object, is colloquially known as &quot;the prototype of that object.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由对象的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指向的值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;俗称&amp;ldquo;该对象的原型&amp;rdquo;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ace089e512ccf3f29213081611ea8aba7bc5c250" translate="yes" xml:space="preserve">
          <source>There are some crucial points that we have to consider before going through the prototype concept.</source>
          <target state="translated">有一些关键点是我们在通过原型概念之前必须要考虑的。</target>
        </trans-unit>
        <trans-unit id="2f37a169d19c5e7c5d00aad1cf25accf7850f92b" translate="yes" xml:space="preserve">
          <source>There are two instance &lt;code&gt;b1&lt;/code&gt; and &lt;code&gt;b2&lt;/code&gt;, whose constructor is &lt;code&gt;Bar&lt;/code&gt; and parent is Foo and has two methods from prototype chain &lt;code&gt;identify&lt;/code&gt; and &lt;code&gt;speak&lt;/code&gt; via &lt;code&gt;Bar&lt;/code&gt; and &lt;code&gt;Foo&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有两个实例&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它们的构造函数是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，父&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是Foo，并且有两个通过原型链&lt;/font&gt;&lt;/font&gt; &lt;code&gt;identify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;/font&gt; &lt;code&gt;speak&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="700d42d0b87d53a12f6ebf93202bbf0069f077b9" translate="yes" xml:space="preserve">
          <source>There are two types of objects &lt;strong&gt;Function types&lt;/strong&gt; and &lt;strong&gt;Non Function types&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象有两种类型：&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能类型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非功能类型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="050daafbf13667ec15e2ee78a6bfa7bdc3cb8cdf" translate="yes" xml:space="preserve">
          <source>There is no function object in this chain (although that could be).</source>
          <target state="translated">这个链子里没有功能对象(虽然可能是这样)。</target>
        </trans-unit>
        <trans-unit id="413e84bf597df31670981d314b2c5f2bf51d62e4" translate="yes" xml:space="preserve">
          <source>There's two distinct but related entities here that need explaining:</source>
          <target state="translated">这里有两个不同但相关的实体,需要解释一下。</target>
        </trans-unit>
        <trans-unit id="22870f2d17c6bb3d54b6c8df212d1cc122d68c4b" translate="yes" xml:space="preserve">
          <source>These are two different things.</source>
          <target state="translated">这是两件不同的事情。</target>
        </trans-unit>
        <trans-unit id="f3eae4b62cf0520d808b87fda66383d939e41043" translate="yes" xml:space="preserve">
          <source>These data types return following when you use the &lt;strong&gt;typeof&lt;/strong&gt; operator</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时，这些数据类型返回以下&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0b72ce0baa932e211605865132a5567f8020dfd" translate="yes" xml:space="preserve">
          <source>Think of prototypes as an extra vtable-pointer. When some members are missing from the original class, the prototype is looked up at runtime.</source>
          <target state="translated">把原型看成是一个额外的vtable-指针。当原始类中缺少一些成员时,在运行时查询原型。</target>
        </trans-unit>
        <trans-unit id="d5393f0f04189ae4dafb2176ce237475a257756b" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;__proto__&lt;/code&gt; property refers to the &lt;code&gt;prototype&lt;/code&gt; property of the constructor function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性是指&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9acfeaac06c4d06a3432d81b1056bf5043bb16c9" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;&quot;internal reference&quot;&lt;/strong&gt; that is created in the object for referencing inherited properties is known as the &lt;strong&gt;object's prototype&lt;/strong&gt; (which references the object referenced by Constructor's &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property but is different from it). For any object (Function or Non Function) this can be retrieved using &lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt; method. Using this method one can trace the prototype chain of an object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;内部参考&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是在对象创建用于参考继承属性是被称为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象的原型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（引用由构造的引用的对象&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;原型&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，但不同的是从它）。对于任何对象（函数或非函数），都可以使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.getPrototypeOf（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来检索&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。使用这种方法，可以跟踪对象的原型链。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35021a936654ba09c718fc5b956b583cc7c4e83d" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;&quot;prototype&quot; property&lt;/strong&gt; is only present in the &lt;strong&gt;Function type objects&lt;/strong&gt; 
(and never in &lt;strong&gt;Non Function type objects&lt;/strong&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;原型&amp;rdquo;属性&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅在&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能类型对象中存在&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; （而在&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非功能类型对象中则不存在&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f4f65bc9aedbc2d26edb0e6f83543831f0c5128" translate="yes" xml:space="preserve">
          <source>This article &lt;a href=&quot;https://javascript.info/class#not-just-a-syntax-sugar&quot;&gt;https://javascript.info/class#not-just-a-syntax-sugar&lt;/a&gt; mentions further effects of &lt;code&gt;class&lt;/code&gt; worth knowing. Some of them may not be achievable without the &lt;code&gt;class&lt;/code&gt; keyword (TODO check which):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本文&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javascript.info/class#not-just-a-syntax-sugar&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://javascript.info/class#not-just-a-syntax-sugar&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提到了&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值得了解&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其他影响&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果没有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字（TODO检查哪个）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则其中一些可能无法实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5a1a1158a1a3652a4f8afcf1664264e3d35874b" translate="yes" xml:space="preserve">
          <source>This article is long. But I am sure it will clear most of your queries 
regarding the &quot;prototypical&quot; nature of JavaScript Inheritance. And even more. Please read the complete article.</source>
          <target state="translated">这篇文章很长。但我相信这篇文章一定能解答你对JavaScript继承的 &quot;原型 &quot;性质的大部分疑问。甚至更多。请阅读完整的文章。</target>
        </trans-unit>
        <trans-unit id="08e6f5560f11607190487033cae0c4cf09fa73c8" translate="yes" xml:space="preserve">
          <source>This basically alters the &lt;code&gt;[[Prototype]]&lt;/code&gt; chain allowing properties that are defined on the object assigned to &lt;code&gt;Function.prototype&lt;/code&gt; to be seen by any object created by the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本上，这会更改&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链，从而允许&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该函数创建的任何对象都能看到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分配给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的对象上定义的属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d896434b4bd90b6337ba89ce36c21af0f6f72d07" translate="yes" xml:space="preserve">
          <source>This diagram shows many language predefined object nodes:</source>
          <target state="translated">这张图显示了许多语言的预定义对象节点。</target>
        </trans-unit>
        <trans-unit id="9025d80c98b99dcd9b6fc5ec29002f4d9ffaec90" translate="yes" xml:space="preserve">
          <source>This does EXACTLY the same as the previous version of the &lt;code&gt;keyValueStore&lt;/code&gt; object, except that all of its methods are now put in a prototype. What this means, is that all of the 100 instances now share these four methods instead of each having their own copy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这确实与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的先前版本完全相同&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，只是现在它的所有方法都放在原型中。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着现在所有100个实例共享这四个方法，而不是每个实例都有自己的副本。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e08ee84b359fc8407d9c2f59789b04fd166d001b" translate="yes" xml:space="preserve">
          <source>This has things like &lt;code&gt;.toString, .toValue, .hasOwnProperty&lt;/code&gt; etc...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.toString, .toValue, .hasOwnProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等内容。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c70598b5bbbd87cec0b6da78edc5bd06c14523b" translate="yes" xml:space="preserve">
          <source>This is a property that exists on all&lt;sup&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/sup&gt; objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是所有&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2]&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上存在的属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5fa8c6f0946dde273ddb9604454c21fcb7361c5" translate="yes" xml:space="preserve">
          <source>This is a very simple prototype based object model that would be considered as a sample during the explanation, with no comment yet:</source>
          <target state="translated">这是一个非常简单的基于原型的对象模型,在讲解的时候会考虑作为一个样本,还没有评论。</target>
        </trans-unit>
        <trans-unit id="6d62795d7cdd8505efe9be324c47bb2624bab344" translate="yes" xml:space="preserve">
          <source>This is because &lt;strong&gt;when a new object is created (using new operator)it inherits all properties and methods from Constructor function's current prototype object i.e. an&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;internal reference&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;is created in the newly created object that references the object referenced by Constructor function's current prototype object.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是因为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建新对象（使用new运算符）时，它将继承Constructor函数的当前原型对象的所有属性和方法，即&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在新创建的对象中创建&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部引用&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，该&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部引用&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用了Constructor函数的当前原型对象所引用的对象。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bcf28287745328dbe5a8624a1872b4d744f2f572" translate="yes" xml:space="preserve">
          <source>This is the so-called &lt;em&gt;prototype chain&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这就是所谓的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型链&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c87bd21d9c4e9dbd47806175bb0f1d38b294827" translate="yes" xml:space="preserve">
          <source>This is what happens behind the scenes:
// what the &lt;code&gt;JavaScript&lt;/code&gt; engine does</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是幕后发生的事情：// &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引擎的作用&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a10730f851fa7149ce738e78ef16148c432249e0" translate="yes" xml:space="preserve">
          <source>This symmetry can be broken by explicitly assigning a different object to the &lt;code&gt;prototype&lt;/code&gt; property (more about that later).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显式分配一个不同的对象，可以打破这种对称性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（稍后会详细介绍）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="638323a921bc7286a77e12bf97d8f3013a684830" translate="yes" xml:space="preserve">
          <source>This way, any time you do &lt;code&gt;new Bar;&lt;/code&gt; the prototype chain is set up for you, you get everything defined on &lt;code&gt;Bar.prototype&lt;/code&gt; and everything defined on &lt;code&gt;Object.prototype&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样，任何时候您都可以做&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Bar;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为您设置了原型链，您将获得在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar.prototype&lt;/code&gt; 上&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有内容&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以及在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义的所有内容&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e00297b8bcfe8f20cb6ddea20a7e2be8b0c46326" translate="yes" xml:space="preserve">
          <source>This, is a simplified example of how prototypes work, where a tree of data is searched for the thing you're looking for.</source>
          <target state="translated">这一点,是一个简化的例子,就是原型的工作原理,在这里,你要找的东西,就是搜索一棵数据树。</target>
        </trans-unit>
        <trans-unit id="c34bd44153421ecb4ee7a84a5cf2f9e94314d16d" translate="yes" xml:space="preserve">
          <source>To summarise:</source>
          <target state="translated">总而言之:</target>
        </trans-unit>
        <trans-unit id="1880ce0a92d66ac7be9b42c43f20dd758f47083c" translate="yes" xml:space="preserve">
          <source>To take the first step we have to figure out, how JavaScript functions actually work , as a class like function using &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; keyword in it or just as a regular function with its arguments, what it does and what it returns.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要迈出第一步，我们必须弄清楚JavaScript函数实际上是如何工作的（作为使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;this&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的类之类的函数）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，或者作为带有参数，其作用和返回结果的常规函数​​。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df7c9dfab28179cd2982c04c0af88014763a54b9" translate="yes" xml:space="preserve">
          <source>Until now I've been extending the base object, now I create another object and then inheriting from Person.</source>
          <target state="translated">直到现在我一直在扩展基础对象,现在我创建另一个对象,然后从Person继承。</target>
        </trans-unit>
        <trans-unit id="1d4e3821f462de88d9514c59695341a4e93fd936" translate="yes" xml:space="preserve">
          <source>Update: correct way</source>
          <target state="translated">更新:正确的方法</target>
        </trans-unit>
        <trans-unit id="83d91100eeefc6d4f17559200dd6e80c65042ea5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;new&lt;/code&gt; with constructor functions allows us to simulate classical inheritance in JavaScript; although JavaScript's inheritance system is - as we have seen - prototypical, and not class-based.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在构造函数中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使我们在JavaScript中模拟经典继承；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管我们已经看到，JavaScript的继承系统是原型的，而不是基于类的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bddc98d1d24dd45bb69b10ad8884565c46657b1" translate="yes" xml:space="preserve">
          <source>We can also add &lt;code&gt;primitives&lt;/code&gt; or &lt;code&gt;objects&lt;/code&gt; to our &lt;code&gt;Prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们还可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;向&lt;/font&gt; &lt;code&gt;Prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;/font&gt; &lt;code&gt;primitives&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;objects&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b3fc1203624a21f622f753ab310467b6ee55a49" translate="yes" xml:space="preserve">
          <source>We have modified the &lt;code&gt;Root&lt;/code&gt; and added a &lt;code&gt;function&lt;/code&gt; branch to it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们已经修改了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Root&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为其&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分支。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10a8a5e09ba4288070fb87f9d8442e3eab9dc5b8" translate="yes" xml:space="preserve">
          <source>What is important here is that Derp does not give the pen to you, as you don't have a direct &lt;em&gt;relationship&lt;/em&gt; with him.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里重要的是，Derp不会把笔给您，因为您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与他&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有直接&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关系&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="308c697d81505ef2c3ab0d8f16faa8f1f568e725" translate="yes" xml:space="preserve">
          <source>What's stored here is another object, which, as an object itself, has a &lt;code&gt;[[Prototype]]&lt;/code&gt; of its own that points to another object. That other object has a &lt;code&gt;[[Prototype]]&lt;/code&gt; of its own. This story continues until you reach the prototypical object that provides methods that are accessible on all objects (like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString&quot;&gt;&lt;code&gt;.toString&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里存储的是另一个对象，作为对象本身，它具有&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指向另一个对象的自己&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一个对象具有自己的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这个故事一直持续到您到达提供所有方法都可以访问的方法的原型对象（如&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString&quot;&gt; &lt;code&gt;.toString&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为止&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3694f710d098fa715f0d5d1cc32e7707e441a5a" translate="yes" xml:space="preserve">
          <source>When I do &lt;code&gt;obj.property&lt;/code&gt;, where does JS look for &lt;code&gt;.property&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当我做&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.property&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，JS在哪里寻找&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b6a529ab132f6333b5042f9ced780debc66b2d7" translate="yes" xml:space="preserve">
          <source>When a constructor creates an object, that object implicitly references the constructor&amp;rsquo;s &amp;ldquo;prototype&amp;rdquo; property for the purpose of resolving property references. The constructor&amp;rsquo;s &amp;ldquo;prototype&amp;rdquo; property can be referenced by the program expression constructor.prototype, and properties added to an object&amp;rsquo;s prototype are shared, through inheritance, by all objects sharing the prototype.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当构造函数创建对象时，该对象隐式引用构造函数的&amp;ldquo; prototype&amp;rdquo;属性，以解决属性引用的问题。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造表达式的&amp;ldquo; prototype&amp;rdquo;属性可以由程序表达式的builder.prototype引用，添加到对象原型的属性通过继承由共享原型的所有对象共享。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2bfe48d3e49e62cf73169326ebe7fef41c61b3f" translate="yes" xml:space="preserve">
          <source>When a function is used as a constructor with the &lt;code&gt;new&lt;/code&gt; keyword the object gets  prototype. A reference to this prototype can be found on the &lt;code&gt;__proto__&lt;/code&gt; property of the newly created object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当函数通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用作构造函数时，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象将获取原型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在新创建的对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;找到对该原型的引用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82f0ffb0fdb8a57c686a83e7bb71c7129e34adfb" translate="yes" xml:space="preserve">
          <source>When a property is accessed to just read it's value, its looked up in the scope chain. The search for the variable starts from the &lt;strong&gt;product&lt;/strong&gt; upwards to it's prototype. If such a variable is found in the search, the search is stopped right there, and the value is returned. If such a variable cannot be found in the scope chain, undefined is returned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当访问属性以仅读取其值时，将在范围链中查找该属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对变量的搜索从&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;产品&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开始&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直至其原型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果在搜索中找到这样的变量，则搜索将在此处停止，并返回值。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果在范围链中找不到此类变量，则返回undefined。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11f5fa09496d74fe4a1922d148fbe3e307bee7bb" translate="yes" xml:space="preserve">
          <source>When a property is written(altered), then the property is always written on the &lt;strong&gt;product&lt;/strong&gt; object. If the &lt;strong&gt;product&lt;/strong&gt; does not have such a property already, it is implicitly created and written.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;写入（更改）属性后，该属性总是写在&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;产品&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象上。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;产品&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尚不具有此类属性，则将隐式创建和编写该产品。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fcec556ef2aa94d6710268da1bdec50f8d1551e" translate="yes" xml:space="preserve">
          <source>When we write &lt;code&gt;f.constructor&lt;/code&gt;, JavaScript does the &lt;code&gt;.&lt;/code&gt; lookup as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当我们编写&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f.constructor&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，JavaScript会执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;查找为：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9f43d7f42e2d64828fbcea2a70441dce8c6281e" translate="yes" xml:space="preserve">
          <source>When you &lt;em&gt;do&lt;/em&gt; make assignments to &lt;code&gt;Function.prototype&lt;/code&gt; all you are doing is extending the prototype chain to include another object. It's like an insertion in a singly linked list.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当你&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;做&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行分配给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;你正在做的是延长了原型链包含另一个对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这就像在单链列表中的插入。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f3c324ba183f857de27c2aeeafc95f2bd1d3a08" translate="yes" xml:space="preserve">
          <source>While as said I can't call setAmountDue(), getAmountDue() on a Person.</source>
          <target state="translated">虽然如前所述,我不能在Person上调用setAmountDue(),getAmountDue()。</target>
        </trans-unit>
        <trans-unit id="3adb0b0d5933c83516b3ac347d11102aa4cb09d8" translate="yes" xml:space="preserve">
          <source>Why is this usefull:</source>
          <target state="translated">为什么这样做是有用的。</target>
        </trans-unit>
        <trans-unit id="2446e1c4a0c9c983d22a0f4fe25bc995caf38c03" translate="yes" xml:space="preserve">
          <source>Without the class syntax, developers had to manually configure the prototype chain to achieve similar functionality to classical inheritance. This led to a preponderance of different ways to achieve this.</source>
          <target state="translated">由于没有类的语法,开发人员不得不手动配置原型链,以实现类似于古典继承的功能。这就导致了有很多不同的实现方式。</target>
        </trans-unit>
        <trans-unit id="82ad9964aff33a7fae6d367983f38443929e774c" translate="yes" xml:space="preserve">
          <source>You can avoid &lt;code&gt;.&lt;/code&gt; lookup with &lt;code&gt;obj.hasOwnProperty('key')&lt;/code&gt; and &lt;code&gt;Object.getOwnPropertyNames(f)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以避免&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.hasOwnProperty('key')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt; &lt;code&gt;Object.getOwnPropertyNames(f)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;查找&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0eae619e62c4c1803774abb2b498918e68edcc45" translate="yes" xml:space="preserve">
          <source>You can find a graph of the relation of Javascript objects by their properties here:</source>
          <target state="translated">你可以在这里找到Javascript对象的属性关系图。</target>
        </trans-unit>
        <trans-unit id="7219cbdc31f1ab1618e475dc21b4812f9486383f" translate="yes" xml:space="preserve">
          <source>You can jump back and forth between the two prototype chains:</source>
          <target state="translated">你可以在两个原型链之间来回跳转。</target>
        </trans-unit>
        <trans-unit id="e517cb8789da1d3b8f9095edf50ac5e0df256ef5" translate="yes" xml:space="preserve">
          <source>You can't actually see the link target (&lt;code&gt;Object.prototype&lt;/code&gt;) in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;new&lt;/a&gt; statement; instead the target is implied by the constructor (&lt;code&gt;Object&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新的&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语句中，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您实际上看不到链接目标（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相反，目标由构造函数（&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;隐含&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57c9e51f58a439e8f48d2831659d6bc67df4b3ad" translate="yes" xml:space="preserve">
          <source>You create the &lt;em&gt;[[Prototype]]&lt;/em&gt; link when creating an object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象时，创建&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototype]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链接。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ccacad21f5cbb195fee4f8bea5daaca9c11e1a04" translate="yes" xml:space="preserve">
          <source>You're in high-school, and you're in class and have a quiz that's due today, but you don't have a pen to fill out your answers. Doh!</source>
          <target state="translated">你在高中,你在课堂上,今天有一个测验要交,但你没有笔来填答案。晕!</target>
        </trans-unit>
        <trans-unit id="1a688d50614f2b00815a588212c2c36453c98d26" translate="yes" xml:space="preserve">
          <source>You're sitting next to your friend Finnius, who might have a pen. You ask, and he looks around his desk unsuccessfully, but instead of saying &quot;I don't have a pen&quot;, he's a nice friend he checks with his other friend Derp if he has a pen. Derp does indeed have a spare pen and passes it back to Finnius, who passes it over to you to complete your quiz. Derp has entrusted the pen to Finnius, who has delegated the pen to you for use.</source>
          <target state="translated">你坐在你的朋友Finnius身边,他可能有笔。你问,他环顾了一下自己的办公桌,没有成功,而是说 &quot;我没有笔&quot;,他是个不错的朋友,他向他的另一个朋友Derp检查他是否有笔。Derp确实有一支备用笔,他把笔传回给Finnius,Finnius把笔递给你,让你完成测验。Derp把笔交给了Finnius,Finnius把笔委托给你使用。</target>
        </trans-unit>
        <trans-unit id="2210886a547c650d55c3aa9d9ffff6029dd660a1" translate="yes" xml:space="preserve">
          <source>a. &amp;amp; b. Instead of these two steps you can have the exact same result by doing:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一种。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;＆b。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过执行以下操作，您可以得到与上述两个步骤完全相同的结果：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b523def3dc4d8951393218ef49700cd57e531453" translate="yes" xml:space="preserve">
          <source>a. first of all it makes an empty object, basically an empty hash like:</source>
          <target state="translated">A.首先它做了一个空对象,基本上是空的哈希一样的空对象。</target>
        </trans-unit>
        <trans-unit id="06ce42a61614d7a74f65884cc9c9489809dadc4e" translate="yes" xml:space="preserve">
          <source>a. first way is just to call the function as a regular function:</source>
          <target state="translated">a.第一种方法是将函数作为一个常规函数调用。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="747eaff32129c10b3603b6e3bb5cf3560caca4a3" translate="yes" xml:space="preserve">
          <source>and now &lt;strong&gt;without using &lt;code&gt;new&lt;/code&gt; keyword&lt;/strong&gt; how we could use these functions. So JavaScript has 3 different ways to do that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何使用这些功能。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，JavaScript有3种不同的方式来实现：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="270a485819e70fb5c889365a5fe2b1161f9e71cb" translate="yes" xml:space="preserve">
          <source>and now other objects are in peace, but it still doesn't seem to be a good practice. So we have still one more solutions, but to use this solution we should get back to that line of code where &lt;code&gt;person&lt;/code&gt; object got created (&lt;code&gt;var person = {};&lt;/code&gt;) then change it like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在其他物体都处于和平状态，但这似乎仍然不是一个好习惯。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，我们还有另外一个解决方案，但是要使用该解决方案，我们应该回到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建&lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;那行代码&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var person = {};&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），然后将其更改为：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bea2c43b740e3468b0797f8d81ffa93f7015aa5b" translate="yes" xml:space="preserve">
          <source>and now the &lt;code&gt;person&lt;/code&gt; object is like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象就像：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="661c68bf46c0c3da88764bafeb5b9658118b2f68" translate="yes" xml:space="preserve">
          <source>and that's how inheritance works in JavaScript.</source>
          <target state="translated">而这就是JavaScript中继承的工作原理。</target>
        </trans-unit>
        <trans-unit id="6b8d96ceb91b872268235e2929b43b012067d683" translate="yes" xml:space="preserve">
          <source>another scheme showing &lt;strong&gt;__proto__&lt;/strong&gt;, &lt;strong&gt;prototype&lt;/strong&gt; and &lt;strong&gt;constructor&lt;/strong&gt; relations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一个显示&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关系的方案：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b1bbcf13309abdf78f823b3e031f46729dc16b6" translate="yes" xml:space="preserve">
          <source>as you see using any of these two way &lt;code&gt;this&lt;/code&gt; would exactly point to the &lt;code&gt;person&lt;/code&gt; object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正如你看到的任何使用这两种方式&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会正是指向&lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c26a5de286c4222075250d40c67537151a9b573" translate="yes" xml:space="preserve">
          <source>b. We can &lt;strong&gt;attach&lt;/strong&gt; them to an object, as its properties</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;附加&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到对象上，作为其属性&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe691ba9d0293f967e57a192521eebae76e0310c" translate="yes" xml:space="preserve">
          <source>b. the next step that JavaScript takes is to &lt;strong&gt;attach&lt;/strong&gt; the all prototype objects to the newly created object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript的下一步是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有原型对象&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;附加&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到新创建的对象&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e11f7639d23b2bc73655189a0a5dad8205ffb0c2" translate="yes" xml:space="preserve">
          <source>between a constructor and the prototype object that will be used for constructing objects</source>
          <target state="translated">构造函数和将用于构造对象的原型对象之间的关系。</target>
        </trans-unit>
        <trans-unit id="9ac06820b6c4ca173003422e282903264e66e63b" translate="yes" xml:space="preserve">
          <source>between an object and its constructor</source>
          <target state="translated">对象和其构造函数之间</target>
        </trans-unit>
        <trans-unit id="af6622315c4f4a1bb153af5b5a466a4adfbd3c65" translate="yes" xml:space="preserve">
          <source>c. JavaScript has another way to provide the function with &lt;code&gt;this&lt;/code&gt;, which is using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;call&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;apply&lt;/a&gt; to invoke the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript有另一种方式为用户提供功能&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这是使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;电话&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;应用&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用该函数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14d36492392f6e9eb32129ca46c2667809a4bb2f" translate="yes" xml:space="preserve">
          <source>c. then it gives that object to the constructor,</source>
          <target state="translated">c.那么它将该对象交给构造函数。</target>
        </trans-unit>
        <trans-unit id="944991ca420147c47be82198f1d0f28c22fdd3ca" translate="yes" xml:space="preserve">
          <source>following automatically happens</source>
          <target state="translated">自此</target>
        </trans-unit>
        <trans-unit id="e9e469ab51077f3049787ec9c4af591de797f736" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;obj_n.prop_X&lt;/code&gt; doesn't exist, check &lt;code&gt;obj_n+1.prop_X&lt;/code&gt; where &lt;code&gt;obj_n+1 = obj_n.[[prototype]]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n.prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不存在，请检查&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n+1.prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其中&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n+1 = obj_n.[[prototype]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98878bceb45ce34551076d813362c5705957b889" translate="yes" xml:space="preserve">
          <source>if some &lt;code&gt;__proto__&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="957397f1ce4597e6f03a21bafeffdccdc2862a09" translate="yes" xml:space="preserve">
          <source>in this case, this would be the current context object, which is usually is the global  &lt;code&gt;window&lt;/code&gt; object in the browser or &lt;code&gt;GLOBAL&lt;/code&gt; in &lt;code&gt;Node.js&lt;/code&gt;. It means we would have, window.name in browser or GLOBAL.name in Node.js, with &quot;George&quot; as its value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这种情况下，这将是目前的上下文对象，这通常是全局 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在浏览器或对象&lt;/font&gt;&lt;/font&gt; &lt;code&gt;GLOBAL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Node.js&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着我们将在浏览器中使用window.name或在Node.js中使用GLOBAL.name，其值为&amp;ldquo; George&amp;rdquo;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1e9838ad66b5acac772c2b80052e66f8bb6e81" translate="yes" xml:space="preserve">
          <source>in this part I'm gonna be trying to take all the steps which JavaScript takes, without using the &lt;code&gt;new&lt;/code&gt; keyword and &lt;code&gt;prototype&lt;/code&gt;, when you use &lt;code&gt;new&lt;/code&gt; keyword. so when we do &lt;code&gt;new Person(&quot;George&quot;)&lt;/code&gt;, &lt;code&gt;Person&lt;/code&gt; function serves as a constructor, These are what JavaScript does, one by one:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这一部分中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，当您使用&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我将尝试采取JavaScript采取的所有步骤，而不使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，当我们执行&lt;/font&gt; &lt;code&gt;new Person(&quot;George&quot;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数充当构造函数，这就是JavaScript所要做的，一个接一个：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8b60a22e95f94b25f94178a01587a5b22f0b255" translate="yes" xml:space="preserve">
          <source>it evaluates &lt;code&gt;F&lt;/code&gt; with &lt;code&gt;this&lt;/code&gt; being the value that &lt;code&gt;new&lt;/code&gt; will return, which then gets assigned to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它评估&lt;/font&gt;&lt;/font&gt; &lt;code&gt;F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是该值&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会返回，然后把它分配给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bff474d1de3771b5e9dd9e8d5b475aeff41cee13" translate="yes" xml:space="preserve">
          <source>now the end result before simulating the other steps:
    Object {name: &quot;George&quot;}</source>
          <target state="translated">现在,在模拟其他步骤之前,最终的结果。对象 {name:&quot;George&quot;}</target>
        </trans-unit>
        <trans-unit id="f090cec5bdf24d256d779b2d37211c8e96960cea" translate="yes" xml:space="preserve">
          <source>now we can call the &lt;code&gt;getName&lt;/code&gt; function in our &lt;code&gt;my_person_prototype&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在我们可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;my_person_prototype&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;getName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="ede1d521cd3748dac9815542baaaf55df7de6292" translate="yes" xml:space="preserve">
          <source>properties of &lt;code&gt;obj.__proto__.__proto__&lt;/code&gt;, and so on</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;性能&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.__proto__.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，依此类推&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d68f3e62d74843a67cb1c3164addcbaecebd36c5" translate="yes" xml:space="preserve">
          <source>properties of &lt;code&gt;obj.__proto__&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;obj.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f54c786eb3d3ae288f749656124234986eda7990" translate="yes" xml:space="preserve">
          <source>prototype chain</source>
          <target state="translated">原型链</target>
        </trans-unit>
        <trans-unit id="e0c912d4dcf17ff831277c0922d2e821e226325a" translate="yes" xml:space="preserve">
          <source>prototype chain can be technically extended as long as you want, each time by setting the prototype of the subclass equal to an object of the parent class.</source>
          <target state="translated">原型链在技术上可以任意扩展,每次都可以通过设置子类的原型等于父类的一个对象来扩展。</target>
        </trans-unit>
        <trans-unit id="4abe20314da3f946b7e743a6a2f6170b9b8c2ae7" translate="yes" xml:space="preserve">
          <source>prototype chain ultimately falls back to Object.prototype.</source>
          <target state="translated">原型链最终归结为Object.prototype。</target>
        </trans-unit>
        <trans-unit id="89b37e815336bf7ebbfbf64979db6bffe086c6fa" translate="yes" xml:space="preserve">
          <source>sets:</source>
          <target state="translated">sets:</target>
        </trans-unit>
        <trans-unit id="e94a3f708b00862014509df4f2cc93c12e2ff3ad" translate="yes" xml:space="preserve">
          <source>the prototype internal property, denoted as &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2&quot;&gt;in ES5&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型内部属性，&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在ES5中&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表示为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ae9fc273476a1b945442f7aac048be5f9abd6e9" translate="yes" xml:space="preserve">
          <source>the prototype property, as in &lt;code&gt;obj.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型属性，如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.prototype&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5e4668a0e4a6323de5e94029153d5d97840ee0f" translate="yes" xml:space="preserve">
          <source>then &lt;code&gt;new&lt;/code&gt; has set:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a4a01450a1231a348a771bd61b5a299a2e893fa" translate="yes" xml:space="preserve">
          <source>then the constructor can do whatever it wants, because &lt;strong&gt;this&lt;/strong&gt; inside of that constructor is the object that was just created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后构造函数可以执行任何所需的操作，因为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数内部的对象是刚刚创建的对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f576b11bd87be0a0c3eecfa10723461a7eb5833" translate="yes" xml:space="preserve">
          <source>these 3 methods are the important initial steps to figure out the .prototype functionality.</source>
          <target state="translated">这3个方法是弄清楚.prototype功能的重要初始步骤。</target>
        </trans-unit>
        <trans-unit id="e972f984201bef12b535fee7733a14678c62d136" translate="yes" xml:space="preserve">
          <source>this is the second step to understand the &lt;code&gt;.prototype&lt;/code&gt; functionality.this is what I use to simulate the process:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是了解&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第二步。这是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我用来模拟过程的内容：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a80c6e28984a71a0b8d0d93aa0e77bfc7ac6c1f" translate="yes" xml:space="preserve">
          <source>this way we can call them like:</source>
          <target state="translated">这样一来,我们就可以像这样称呼他们。</target>
        </trans-unit>
        <trans-unit id="43d37aa6f9a31838f9f3674dfdffb9d9be138560" translate="yes" xml:space="preserve">
          <source>this way which is my favorite, we can easily call our functions like:</source>
          <target state="translated">这种方式是我的最爱,我们可以很容易地调用我们的函数,比如说</target>
        </trans-unit>
        <trans-unit id="505825b685f7c214441d8d78811c1a25cf9cf413" translate="yes" xml:space="preserve">
          <source>we can do this with our sample like:</source>
          <target state="translated">我们可以用我们的样本来做,如:</target>
        </trans-unit>
        <trans-unit id="d238c7e63e3ead1f37e5c92ddc733d20364c8151" translate="yes" xml:space="preserve">
          <source>we have &lt;code&gt;my_person_prototype&lt;/code&gt; here similar to the prototype object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;my_person_prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与原型对象类似。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44108b8768516452bc02899a0cb6437fdffad7d3" translate="yes" xml:space="preserve">
          <source>what is the exact purpose of this &quot;.prototype&quot; property?</source>
          <target state="translated">这个&quot;.prototype &quot;属性的确切目的是什么?</target>
        </trans-unit>
        <trans-unit id="f0daca7c8c95a8fa1c4019b4daf3f2dc098e1b6d" translate="yes" xml:space="preserve">
          <source>what it does is creating a new JavaScript &lt;code&gt;Object&lt;/code&gt; and attach the &lt;code&gt;propertiesObject&lt;/code&gt; to the &lt;code&gt;__proto__&lt;/code&gt; attribute. So to make sure you can do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它的作用是创建一个新的JavaScript &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;propertiesObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;附加&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，请确保您可以执行以下操作：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5deb2c5df83283ff6a38b0d65f3fabb8eb880d5c" translate="yes" xml:space="preserve">
          <source>when we call a function in Javascript as &lt;code&gt;X.Y()&lt;/code&gt;, JavaScript automatically sets &lt;code&gt;this&lt;/code&gt; to equal &lt;code&gt;X&lt;/code&gt; inside the &lt;code&gt;Y()&lt;/code&gt; function call!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当我们调用JavaScript作为一种功能&lt;/font&gt;&lt;/font&gt; &lt;code&gt;X.Y()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，JavaScript的自动设置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;里面&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Y()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数调用！&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="401e87265e4c30e83ad1ae9932568c3536246a3b" translate="yes" xml:space="preserve">
          <source>where as in the below code</source>
          <target state="translated">如下面的代码中</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
