<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/572897">
    <body>
      <group id="572897">
        <trans-unit id="f5db9bea2d7b8a9f32a521f0389df5bac5554e4d" translate="yes" xml:space="preserve">
          <source>(Constructor) functions &lt;strong&gt;always&lt;/strong&gt; have a prototype property</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las funciones (Constructor) &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;siempre&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tienen una propiedad prototipo&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="516f3e09d25e57da757e6113f74de24a5daf64c3" translate="yes" xml:space="preserve">
          <source>-&lt;strong&gt;The easiest way&lt;/strong&gt; to do this is modifying the empty &lt;code&gt;person&lt;/code&gt; object, like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La forma m&amp;aacute;s f&amp;aacute;cil&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de hacer esto es modificar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; vac&amp;iacute;o &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, como:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b32d9e0625c5dc0fe5da7511822a0304955150b" translate="yes" xml:space="preserve">
          <source>-&lt;strong&gt;The other way to attach a property&lt;/strong&gt; to an object is using the &lt;code&gt;prototype&lt;/code&gt; of that object that can be find in any JavaScript object with the name of &lt;code&gt;__proto__&lt;/code&gt;, and I have tried to explain it a bit on the summary part. So we could get the similar result by doing:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La otra forma de adjuntar una propiedad&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a un objeto es usar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de ese objeto que se puede encontrar en cualquier objeto JavaScript con el nombre de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y he tratado de explicarlo un poco en la parte de resumen. Entonces podr&amp;iacute;amos obtener el resultado similar haciendo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1e6a588e4f32645493fa13ad336038b66599777" translate="yes" xml:space="preserve">
          <source>...the resulting object's &lt;code&gt;[[Prototype]]&lt;/code&gt; will be set to an instance of &lt;code&gt;Parent&lt;/code&gt;, whose &lt;code&gt;[[Prototype]]&lt;/code&gt;, in turn, is &lt;code&gt;Parent.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... el objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; resultante &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se establecer&amp;aacute; en una instancia de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , cuyo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , a su vez, es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Parent.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f90d885e4f0d6bbb1b805db4ec7e7c2ab3f0ff3" translate="yes" xml:space="preserve">
          <source>1- How JavaScript functions actually work:</source>
          <target state="translated">1-CÃ³mo funcionan realmente las funciones de JavaScript:</target>
        </trans-unit>
        <trans-unit id="43fb32f5e57379ce1e1092c86eba4a12283f7c8e" translate="yes" xml:space="preserve">
          <source>2- How does the &lt;code&gt;new&lt;/code&gt; keyword works?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2- &amp;iquest;C&amp;oacute;mo funciona la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6d5b3dfdb0cf1ea256e3a77ae03f67ff8cf8a29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.youtube.com/watch?v=PMfcsYzj-9M&quot;&gt;The Definitive Guide to Object-Oriented JavaScript&lt;/a&gt; - a very concise and clear ~30min video explanation of the asked question (Prototypal Inheritance topic begins from &lt;a href=&quot;https://youtu.be/PMfcsYzj-9M?t=344&quot;&gt;5:45&lt;/a&gt;, although I'd rather listen to the whole video). The author of this video also made JavaScript object visualizer website &lt;a href=&quot;http://www.objectplayground.com/&quot;&gt;http://www.objectplayground.com/&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.youtube.com/watch?v=PMfcsYzj-9M&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La gu&amp;iacute;a definitiva para JavaScript orientado a objetos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : una explicaci&amp;oacute;n en video muy concisa y clara de ~ 30 minutos de la pregunta formulada (el tema de herencia protot&amp;iacute;pica comienza a partir de las &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://youtu.be/PMfcsYzj-9M?t=344&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5:45&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , aunque prefiero escuchar el video completo). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El autor de este video tambi&amp;eacute;n cre&amp;oacute; el sitio web del visualizador de objetos JavaScript &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.objectplayground.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.objectplayground.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84439f4a08925a54a900137f311d83a6f727669e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.constructor&lt;/code&gt;: jump from the created-object's chain to the constructor's chain.</source>
          <target state="translated">&lt;code&gt;.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : salta de la cadena del objeto creado a la cadena del constructor.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c3d43675b64aceed2dfb3ee9f9ed7ea0a55f5813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.inc&lt;/code&gt; is found through the &lt;code&gt;[[Prototype]]&lt;/code&gt; chain: &lt;code&gt;c&lt;/code&gt; -&amp;gt; &lt;code&gt;C&lt;/code&gt; -&amp;gt; &lt;code&gt;C.prototype&lt;/code&gt; -&amp;gt; &lt;code&gt;inc&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.inc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se encuentra a trav&amp;eacute;s de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;inc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aab45c56c792e22c2d0059d8bc789d73bdb470e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prototype&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; used for lookup directly, only indirectly as it determines &lt;code&gt;__proto__&lt;/code&gt; at object creation with &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; utilizarse para la b&amp;uacute;squeda directamente, s&amp;oacute;lo de manera indirecta, ya que determina &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la creaci&amp;oacute;n de objetos con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d93d7708207a2e0aea48e54828860b8857174f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prototype&lt;/code&gt;: jump from the constructor's chain to the created-object's chain. This property is thus only defined for function objects (as &lt;code&gt;new&lt;/code&gt; can only be used on functions).</source>
          <target state="translated">&lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : salta de la cadena del constructor a la cadena del objeto creado. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, esta propiedad solo se define para objetos de funci&amp;oacute;n (ya que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo se puede usar en funciones).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3ea9670d26722f1ae58afba28c12bfc6ab7b2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bar&lt;/code&gt; now has all the methods of &lt;code&gt;Foo&lt;/code&gt; which are defined in its &lt;code&gt;prototype&lt;/code&gt;. Let's dig further in understanding the &lt;code&gt;Object.prototype&lt;/code&gt; and &lt;code&gt;Function.prototype&lt;/code&gt; and how they are related. If you look up the constructor of &lt;code&gt;Foo&lt;/code&gt;, &lt;code&gt;Bar&lt;/code&gt; and &lt;code&gt;Object&lt;/code&gt; are &lt;code&gt;Function constructor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ahora tiene todos los m&amp;eacute;todos de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se definen en su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vamos a profundizar en la comprensi&amp;oacute;n del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y c&amp;oacute;mo est&amp;aacute;n relacionados. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si busca el constructor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23d057bc9ebc17e3549fa4de1f230e4fafe73972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Child&lt;/code&gt; now has its own &lt;code&gt;prototype&lt;/code&gt;, its &lt;code&gt;__proto__&lt;/code&gt; points to &lt;code&gt;Tree&lt;/code&gt; and &lt;code&gt;Tree's prototype&lt;/code&gt; points to base &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ahora tiene su propio &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; apunta al &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree's prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puntos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prototipo del &amp;Aacute;rbol&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a la base del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4494217e5ec8cb0ce0b8641b13ec766db668fc67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Javascript&lt;/code&gt; has primitives like &lt;code&gt;strings, number, booleans, undefined, null.&lt;/code&gt; They are not &lt;code&gt;object(i.e reference types)&lt;/code&gt;, but certainly can act like an &lt;code&gt;object&lt;/code&gt;. Let's look at an example here.</source>
          <target state="translated">&lt;code&gt;Javascript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene primitivas como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;strings, number, booleans, undefined, null.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No son &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object(i.e reference types)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero ciertamente pueden actuar como un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Veamos un ejemplo aqu&amp;iacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed6a39b613c07e454439ade81fbb3ce86ef10f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Javascript&lt;/code&gt; supports inheritance via &lt;code&gt;delegation&lt;/code&gt; based on
&lt;code&gt;prototypes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Javascript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; admite la herencia mediante &lt;/font&gt;&lt;/font&gt; &lt;code&gt;delegation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; basada en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fb7cbb2f65eab16c038e9a00619a699969ebdf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number.prototype&lt;/code&gt; (can be found with &lt;code&gt;(1).__proto__&lt;/code&gt;, parenthesis mandatory to satisfy syntax)</source>
          <target state="translated">&lt;code&gt;Number.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (se puede encontrar con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1).__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , par&amp;eacute;ntesis obligatorio para satisfacer la sintaxis)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0ca5fbb15e0e10ba44ee5aca90f8bd3e6528277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.create&lt;/code&gt; will set the supplied argument as the &lt;code&gt;[[Prototype]]&lt;/code&gt; of the resulting object,</source>
          <target state="translated">&lt;code&gt;Object.create&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; establecer&amp;aacute; el argumento proporcionado como el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del objeto resultante,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="519c9000668f818b4ebc44228a495c3ae3eb692c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.create&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Object.create&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="a7e438b815cacb27a406ae430b4c6d98d55b17ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; and &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; (get/set the &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;em&gt;after&lt;/em&gt; object creation), and</source>
          <target state="translated">&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (obtener / establecer &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;despu&amp;eacute;s de la&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; creaci&amp;oacute;n del objeto), y&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c67caf8f5c83960b67bb883346c1923b9d9b9f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; and &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; are preferred over &lt;code&gt;__proto__&lt;/code&gt;, in part because the behavior of &lt;code&gt;o.__proto__&lt;/code&gt;&lt;a href=&quot;https://stackoverflow.com/a/35458348/38522&quot;&gt;is unusual&lt;/a&gt; when an object has a prototype of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son preferibles a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en parte porque el comportamiento de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;o.__proto__&lt;/code&gt; &lt;a href=&quot;https://stackoverflow.com/a/35458348/38522&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es inusual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando un objeto tiene un prototipo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d52faf31527415b348727cf0fb75b9ba090da353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Person.prototype&lt;/code&gt; is an object that was created at the same time the function &lt;code&gt;Person&lt;/code&gt; was created. It has &lt;code&gt;Person&lt;/code&gt; as constructor, even though that constructor did not actually execute yet. So two objects are created at the same time:</source>
          <target state="translated">&lt;code&gt;Person.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un objeto que se cre&amp;oacute; al mismo tiempo que se cre&amp;oacute; la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tiene &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como constructor, a pesar de que ese constructor a&amp;uacute;n no se ejecut&amp;oacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces se crean dos objetos al mismo tiempo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce1882ca870299d8d2560a5ff0abc98ae2b05d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Person&lt;/code&gt; &amp;rarr; &lt;code&gt;Function.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;Person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Prototipo de objeto&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (punto final)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a653f4d39c156740d112bd62d0bd27b12c5026f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Person&lt;/code&gt;}</source>
          <target state="translated">&lt;code&gt;Person&lt;/code&gt;}</target>
        </trans-unit>
        <trans-unit id="0a2cf4b372ad77d993f9d26533a6a68b985e4268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Thief&lt;/code&gt;&amp;nbsp; } &amp;rarr; &lt;code&gt;Function.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;Thief&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;nbsp; } &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (punto final)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0eb64376a182c024c3dfa9377a5596732f14377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[FunctionKind]]:&quot;classConstructor&quot;&lt;/code&gt;, which forces the constructor to be called with new: &lt;a href=&quot;https://stackoverflow.com/questions/44446650/what-is-the-reason-es6-class-constructors-cant-be-called-as-normal-functions&quot;&gt;What is the reason ES6 class constructors can't be called as normal functions?&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[[FunctionKind]]:&quot;classConstructor&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que obliga al constructor a ser llamado con new: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/44446650/what-is-the-reason-es6-class-constructors-cant-be-called-as-normal-functions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Cu&amp;aacute;l es la raz&amp;oacute;n por la cual los constructores de clase ES6 no pueden llamarse como funciones normales?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea5ba7c9eeb6c8772190a9a924efca31560b1c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__proto__&lt;/code&gt; is used for the dot &lt;code&gt;.&lt;/code&gt; property lookup as in &lt;code&gt;obj.property&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa para el punto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b&amp;uacute;squeda de propiedades como en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b85c622d9b3e3f9d574e18c469527711dc025b08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__proto__&lt;/code&gt; which was brought my mozilla is deprecated and is replaced by &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; method to get the &lt;code&gt;object's prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se trajo a mi mozilla est&amp;aacute; en desuso y se reemplaza por el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object's prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22fd20f03b1699a6dea9bc7859e94162d6f1ae2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f.__proto__ === F.prototype&lt;/code&gt; has &lt;code&gt;.constructor === F&lt;/code&gt;, so take it</source>
          <target state="translated">&lt;code&gt;f.__proto__ === F.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.constructor === F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , as&amp;iacute; que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;t&amp;oacute;malo&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a74c3de4bb6ff292cdc67adf028a4a8dbd30a2a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; does not have &lt;code&gt;.constructor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no tiene &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.constructor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a682f6c173b00fd4bbbbbb1a449dd3a5d13b709d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; is now a property of &lt;code&gt;f&lt;/code&gt; because when you do:</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es ahora una caracter&amp;iacute;stica de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; porque cuando haces:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="500bb681ab2741f8938cba220e56b8491c7fc1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="27f3727c4800a96bf3ff49622d9977884f9ec516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obj&lt;/code&gt; properties added with &lt;code&gt;obj.p = ...&lt;/code&gt; or &lt;code&gt;Object.defineProperty(obj, ...)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Propiedades de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;obj&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; agregadas con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.p = ...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; u &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.defineProperty(obj, ...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddf4033a6a4775e8a58465b25a2907bccaca4a60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; &amp;rarr; &lt;code&gt;Person.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (punto final)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="773d90d0f13cd1decdccae192ee85e7a69a4bc47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties/functions&lt;/code&gt; are looked from the &lt;code&gt;object&lt;/code&gt; itself or via
&lt;code&gt;prototype&lt;/code&gt; chain if it does not exist</source>
          <target state="translated">&lt;code&gt;properties/functions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se miran desde el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; mismo o mediante la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si no existe&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c745c3e6fa88e759e25e7ad1500686ec3e230574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prototype&lt;/code&gt; allows you to make classes. if you do not use &lt;code&gt;prototype&lt;/code&gt; then it becomes a static.</source>
          <target state="translated">&lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; permite hacer clases. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no utiliza el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , se convierte en est&amp;aacute;tico.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eab804207239b48f68e19392d30c84ca4b562d60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t&lt;/code&gt; &amp;rarr; &lt;code&gt;p&lt;/code&gt; &amp;rarr; &lt;code&gt;Person.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (punto final)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffd1a13c8308eacca411a19d7cd8f1aca3a0dd5f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This is a property that is only found on functions.&lt;/em&gt; Using a very simple function:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta es una propiedad que solo se encuentra en las funciones. &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usando una funci&amp;oacute;n muy simple:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75d9f311148f35e3f90a11690ff78afc979db59d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This&lt;/em&gt; is where &lt;code&gt;.prototype&lt;/code&gt; gets used.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es donde &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c6fad03027c150cbe03372ff710dbe9781f8c9a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;function&lt;/em&gt;&lt;strong&gt;UserDefinedFunction&lt;/strong&gt;(){ /*user defined code */ }</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font class=&quot;&quot; style=&quot;vertical-align: inherit;&quot;&gt;function &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font class=&quot;&quot; style=&quot;vertical-align: inherit;&quot;&gt;UserDefinedFunction&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font class=&quot;&quot; style=&quot;vertical-align: inherit;&quot;&gt; () {/ * c&amp;oacute;digo definido por el usuario * /}&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cafc10ff46accd6077494c2f8fdcbcd3d83262f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;it's a clear chart to show JavaScript Inheritance by Prototype Chain&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es un gr&amp;aacute;fico claro para mostrar la herencia de JavaScript por cadena de prototipo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="262ca8b02bedbf37d2f857dcec0fccbdaf507662" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;p&lt;/em&gt; has no direct prototype-chain relationship with &lt;em&gt;Person&lt;/em&gt;. Their relationship is a different one. The object &lt;em&gt;p&lt;/em&gt; has its own prototype chain. Using &lt;code&gt;Object.getPrototypeOf&lt;/code&gt;, you'll find the chain is as follows:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no tiene una relaci&amp;oacute;n directa de cadena de prototipo con &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Person&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Su relaci&amp;oacute;n es diferente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El objeto &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene su propia cadena prototipo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , encontrar&amp;aacute; que la cadena es la siguiente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c444ac4444a2e10bdf76ea2ce943a556269d9ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;this one contains a example with code and several nice diagrams.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font class=&quot;&quot; style=&quot;vertical-align: inherit;&quot;&gt;Este contiene un ejemplo con c&amp;oacute;digo y varios diagramas agradables.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="986eb1b8b44fcb9d1627ad12802958cd24657972" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;0)&lt;/strong&gt; Two different things can be called &quot;prototype&quot;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Dos cosas diferentes se pueden llamar &quot;prototipo&quot;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="463301eb4ac41b0bb8787b54cc8f7a245ed825dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt; Those concepts exist to answer the question:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Esos conceptos existen para responder la pregunta:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="595ac3c717717f780d25d74e1b557454a56132f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddf60658e60d487074f8722d2fc159e70707028b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt; There are two main ways to set &lt;code&gt;obj.__proto__&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Hay dos formas principales de configurar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f08b8b59fbf6a824b0ed085c7ec6889ce3925b68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4)&lt;/strong&gt; The code:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; El c&amp;oacute;digo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b9df63784cfdcebbe83400eba63f3846226ff22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;5)&lt;/strong&gt;&lt;code&gt;.constructor&lt;/code&gt; normally comes from &lt;code&gt;F.prototype&lt;/code&gt; through the &lt;code&gt;.&lt;/code&gt; lookup:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5) &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; normalmente proviene de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;F.prototype&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;buscar:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e93d771b62ade22d3b5a1016a549aba9104c2d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6)&lt;/strong&gt; Classical inheritance syntax can be achieved by manipulating prototypes chains.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;6)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; La sintaxis de herencia cl&amp;aacute;sica se puede lograr manipulando cadenas de prototipos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0dc43997b5974fc4c5f7a20d88ec5593d972776" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Non objects&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No objetos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23b5065a8f1ea75a66b4dd984df016c88522ee54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Objects&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Objects&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="438c3604abffb4c4688d84cab52990439675aa90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Array&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef4d9d3331372b90e0cbf8e585a8ff2833a3e1e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Boolean&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Boolean&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df96f63fc22d95f29eb9393bcdcd160c47075064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But&lt;/strong&gt; this way what we actually are doing is modifying the &lt;code&gt;Object.prototype&lt;/code&gt;, because whenever we create a JavaScript object using literals (&lt;code&gt;{ ... }&lt;/code&gt;), it gets created based on &lt;code&gt;Object.prototype&lt;/code&gt;, which means it gets attached to the newly created object as an attribute named &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; , so if we change it, as we have done on our previous code snippet, all the JavaScript objects would get changed, not a good practice. So what could be the better practice now:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero de&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; esta manera, lo que estamos haciendo es modificar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , porque cada vez que creamos un objeto JavaScript usando literales ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ ... }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), se crea en funci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , lo que significa que se adjunta al reci&amp;eacute;n creado objeto como un atributo llamado &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que si lo cambiamos, como lo hemos hecho en nuestro fragmento de c&amp;oacute;digo anterior, todos los objetos de JavaScript se cambiar&amp;iacute;an, no es una buena pr&amp;aacute;ctica. Entonces, &amp;iquest;cu&amp;aacute;l podr&amp;iacute;a ser la mejor pr&amp;aacute;ctica ahora:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b889a55dcfba693237d3023457bd4a92c28f55fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Por ejemplo:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4386dea0dbde84732f2cdf6b3648157743d6aeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function type objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Objetos de tipo de funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="936746e12db1da44d0d71d56ca5aafef2816cddd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f774c4a53eaf3df495fd309c4cdba9ecde38643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In JS everything is not an object, everything can act like an object.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En JS no todo es un objeto, todo puede actuar como un objeto.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d4deb53922aea3c25bfbab4b352eebb20114ba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non Function type objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Objetos de tipo no funcional&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d2ae83ed096c61b723ef930500d859ef6c4c6b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;prototype&lt;/code&gt; is a property of the function constructor, whereas &lt;code&gt;__proto__&lt;/code&gt; is a property of the objects constructed from the function constructor. Every function comes with a &lt;code&gt;prototype&lt;/code&gt; property whose value is an empty &lt;code&gt;object&lt;/code&gt;. When we create an instance of the function, we get an internal property &lt;code&gt;[[Prototype]]&lt;/code&gt; or &lt;code&gt;__proto__&lt;/code&gt; whose reference is the prototype of the Function &lt;code&gt;constructor&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota: el &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una propiedad del constructor de funciones, mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una propiedad de los objetos construidos a partir del constructor de funciones. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada funci&amp;oacute;n viene con una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuyo valor es un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; vac&amp;iacute;o &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando creamos una instancia de la funci&amp;oacute;n, obtenemos una propiedad interna &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuya referencia es el prototipo del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la Funci&amp;oacute;n &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9efe6d07c7ab605d4083a95a14e84ddfb05b78d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Number&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Number&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40b40f7486b808c8699d420e972ffc185b9eae92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Object&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="650f9a414222dbc1c278bd70726bd1ee2cb1def1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RegExp&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RegExp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7593566f175e8d782e361fe7522b4b4c346ab54a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;String&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f030e617952094d9be5d9d99a9081d1bffb21def" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Typed Arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Matrices Mecanografiadas&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee947672ace063ceb0fbdd407b2cb329f46d107c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="805181f2ff8c78c447476e7cda9480333fc9bf13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;boolean values(true,false)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valores booleanos (verdadero, falso)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59e11e15e910aadb24301f5614b29cf01ad17404" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;number (including NaN and Infinity)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n&amp;uacute;mero (incluyendo NaN e Infinity)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0677c4b84eec6055e2d192834e16b93c6e7e8096" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;string&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d01b52c7ed32becc5c5617e73c0a35804d654b54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof(new Array())==='object'&lt;/strong&gt; is by design of language and not a mistake as pointed by &lt;a href=&quot;http://javascript.crockford.com/survey.html&quot;&gt;Douglas Crockford&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof (new Array ()) === 'objeto'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es por dise&amp;ntilde;o de lenguaje y no un error como lo se&amp;ntilde;ala &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javascript.crockford.com/survey.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Douglas Crockford&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cf07b007ed3c15e4a9bfc95a299ad47ec0b2fd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;&quot;string literal&quot;&lt;/em&gt; (or a variable containing string literal)  === &lt;strong&gt;'string'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;string literal&quot;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (o una variable que contiene string literal) === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'string'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aca6c12e87ac748cb6b566119aa5da92bee3e056" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;5&lt;/em&gt; (or any numeric literal or a variable containing numeric literal or &lt;strong&gt;&lt;em&gt;NaN or Infynity&lt;/em&gt;&lt;/strong&gt;)  === &lt;strong&gt;'number'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (o cualquier literal num&amp;eacute;rico o una variable que contenga literal num&amp;eacute;rico o &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NaN o Infynity&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'n&amp;uacute;mero'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db4a61833b8370e8b06cc749f449cb5ddfad7a4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;true&lt;/em&gt; (or &lt;em&gt;false&lt;/em&gt; or a variable containing &lt;em&gt;true&lt;/em&gt; or &lt;em&gt;false&lt;/em&gt;)  === &lt;strong&gt;'boolean'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (o &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o una variable que contiene &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'boolean'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="146e47da17f7c83c36e22e29b5e46b9e6e8f7971" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;undefined&lt;/em&gt; (or an undefined variable or a variable containing &lt;em&gt;undefined&lt;/em&gt;) === &lt;strong&gt;'undefined'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (o una variable indefinida o una variable que contiene &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'undefined'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89fb8292e313313d390924e3714324b505302011" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;undefined&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;undefined&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fbc44f8d2cbe63946cdbe3a58f8f3a6e3bb8799d" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[1: That won't confuse anyone; made available via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;the &lt;code&gt;__proto__&lt;/code&gt; property&lt;/a&gt; in many implementations.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[1: Eso no confundir&amp;aacute; a nadie; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;disponible a trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en muchas implementaciones.&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c261b43716c800269ee97ef89ec21bb98b5e2c31" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[2]: All except &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2]: Todos excepto &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f5f7fff3dcffc93d7fb3856fbba056046ce8b597" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;prototype&lt;/code&gt; in JS is an object which &lt;code&gt;yields&lt;/code&gt; you to the parent of another &lt;code&gt;object&lt;/code&gt;. &lt;strong&gt;[ie.. delegation]&lt;/strong&gt;&lt;code&gt;Delegation&lt;/code&gt; means that if you are unable to do something, you&amp;rsquo;ll tell someone else to do it for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en JS es un objeto que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;te &lt;/font&gt;&lt;/font&gt; &lt;code&gt;yields&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; al padre de otro &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[es decir, delegaci&amp;oacute;n] &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;Delegation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; significa que si no puede hacer algo, le dir&amp;aacute; a otra persona que lo haga por usted.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9b39ca1bc70b31d93313ed3195295535213d22f" translate="yes" xml:space="preserve">
          <source>Adding levels to the prototype chain</source>
          <target state="translated">AÃ±adiendo niveles a la cadena de prototipos</target>
        </trans-unit>
        <trans-unit id="c62c8bcb04a57dc88dda082245060aafb4ea6e35" translate="yes" xml:space="preserve">
          <source>After reading this thread, I feel confused with JavaScript Prototype Chain, then I found these charts</source>
          <target state="translated">DespuÃ©s de leer este hilo,me siento confundido con la cadena de prototipos de JavaScript,entonces encontrÃ© estos grÃ¡ficos</target>
        </trans-unit>
        <trans-unit id="17e85f393d5bf1c3c5bef196364aa5255475a902" translate="yes" xml:space="preserve">
          <source>All &lt;strong&gt;Function type objects&lt;/strong&gt; by default have a &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property. This &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property references an object that has a &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; property that by default references the &lt;strong&gt;Function type object&lt;/strong&gt; itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todos los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tienen por defecto una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;prototipo&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;prototipo&quot; hace&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; referencia a un objeto que tiene una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;constructora&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que por defecto hace referencia al &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto Tipo de funci&amp;oacute;n en&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s&amp;iacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4b16ed28563a6b4a20fc9c36d6313c70dde4b55" translate="yes" xml:space="preserve">
          <source>All objects (&lt;strong&gt;Function type&lt;/strong&gt; and &lt;strong&gt;Non Function type&lt;/strong&gt;) have a &quot;constructor&quot; property that by default references the &lt;strong&gt;Function type object&lt;/strong&gt;/&lt;strong&gt;Constructor&lt;/strong&gt; that created it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todos los objetos ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo de funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo &lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sin funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) tienen una propiedad de &quot;constructor&quot; que por defecto hace referencia al &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto de tipo de funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constructor&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que lo cre&amp;oacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15fdaebe61fb55c1af26c6e7a85df169798ec0e3" translate="yes" xml:space="preserve">
          <source>All the &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; are actually instances of the built in JavaScript object &lt;strong&gt;Function&lt;/strong&gt; (including the &lt;strong&gt;Function&lt;/strong&gt; object i.e it is recursively defined). It is as if the these objects have been defined in the following way</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todos los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Function&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son en realidad instancias de la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n de&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objeto JavaScript incorporada &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(incluido el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Function,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es decir, se define de forma recursiva). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es como si estos objetos se hubieran definido de la siguiente manera&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12b319ef5af6aea1225fc6e6077e5640ec9d8d83" translate="yes" xml:space="preserve">
          <source>All the concept explained above can be a little daunting to understand without any supporting code. Please go through the following code line by line to understand the concept. Try to execute it to have a better understanding.</source>
          <target state="translated">Todo el concepto explicado anteriormente puede ser un poco desalentador de entender sin ningÃºn cÃ³digo de apoyo.Por favor,pase por el siguiente cÃ³digo lÃ­nea por lÃ­nea para entender el concepto.Intente ejecutarlo para tener una mejor comprensiÃ³n.</target>
        </trans-unit>
        <trans-unit id="1665b42d1860b1c7fd57cb6a6343d9cb0ef10e9e" translate="yes" xml:space="preserve">
          <source>All the other built in objects that can create new objects by using new operator</source>
          <target state="translated">Todos los demÃ¡s objetos incorporados que pueden crear nuevos objetos usando un nuevo operador</target>
        </trans-unit>
        <trans-unit id="1907258d3e367c722707f73d0d6e4f26812041b6" translate="yes" xml:space="preserve">
          <source>Also notice that &lt;strong&gt;Object&lt;/strong&gt;,&lt;strong&gt;Array&lt;/strong&gt; and &lt;strong&gt;RegExp&lt;/strong&gt; functions can create a new object without even using &lt;strong&gt;operator new&lt;/strong&gt;. However the follwing ones don't.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Observe tambi&amp;eacute;n que las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciones &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegExp&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pueden crear un nuevo objeto sin siquiera usar el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador new&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, los siguientes no.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd8bfd901a73d4991d8b395d508631b7e5a10d8b" translate="yes" xml:space="preserve">
          <source>Also these &lt;a href=&quot;http://ejohn.org/apps/learn/#64&quot;&gt;slides&lt;/a&gt; really helped a lot.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, estas &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ejohn.org/apps/learn/#64&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;diapositivas&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; realmente ayudaron mucho.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d9877f5d08fabd9db32afb87521790e25f67b62" translate="yes" xml:space="preserve">
          <source>Also, &lt;strong&gt;every object that is created&lt;/strong&gt; (&lt;strong&gt;Function type&lt;/strong&gt; or &lt;strong&gt;Non Function type&lt;/strong&gt;) has a &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; property which is inherited from the object referenced by prototype  property of the Constructor function. By default this &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; property references the &lt;strong&gt;Constructor function&lt;/strong&gt; that created it (if the &lt;strong&gt;Constructor Function's&lt;/strong&gt; default &quot;prototype&quot; is not changed).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cada objeto que se crea&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo de funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo &lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sin funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) tiene una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;constructor&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se hereda del objeto al que hace referencia la propiedad prototipo de la funci&amp;oacute;n Constructor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por defecto, esta &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;constructor&quot; hace&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; referencia a la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n Constructor&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que la cre&amp;oacute; (si el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;prototipo&quot; predeterminado de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la Funci&amp;oacute;n Constructor&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se modifica).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79e19cf0dfa4d95f4fb79d90a3100d78d72f4890" translate="yes" xml:space="preserve">
          <source>Although a prototype object is created when you create a constructor function, you can ignore that object, and assign another object that should be used as prototype for any subsequent instances created by that constructor.</source>
          <target state="translated">Aunque se crea un objeto prototipo cuando se crea una funciÃ³n constructora,se puede ignorar ese objeto y asignar otro objeto que deberÃ­a utilizarse como prototipo para cualquier instancia posterior creada por ese constructor.</target>
        </trans-unit>
        <trans-unit id="336be22a25df41fad0e6cde8bbdd41a5cd1d6cf0" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object's prototype&lt;/strong&gt; (and hence its inherited property names) can be retrieved using the &lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt;   method. In fact this method 
can be used for navigating the entire prototype chain of the object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El prototipo de&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (y, por lo tanto, sus nombres de propiedad heredados) se puede recuperar utilizando el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.getPrototypeOf ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De hecho, este m&amp;eacute;todo se puede utilizar para navegar por toda la cadena de prototipos del objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d03358142652b37c4e19c16084957f179346c0ef" translate="yes" xml:space="preserve">
          <source>An object's &lt;code&gt;[[Prototype]]&lt;/code&gt; is initially set during object creation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un objeto se establece inicialmente durante la creaci&amp;oacute;n del objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e302dd1bdb6e511fab68686ecfa674165e722eb1" translate="yes" xml:space="preserve">
          <source>Another attempt to explain &lt;a href=&quot;https://github.com/rus0000/jsinheritance&quot;&gt;JavaScript prototype-based inheritance&lt;/a&gt; with better pictures</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otro intento de explicar la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/rus0000/jsinheritance&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;herencia basada en prototipos de JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con mejores im&amp;aacute;genes&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ae9bed13f86cada0ae2999193b88071ea23bf09" translate="yes" xml:space="preserve">
          <source>As Ciro San descended Mount Fire Fox after deep meditation, his mind was clear and peaceful.</source>
          <target state="translated">Cuando Ciro San bajÃ³ del Monte Zorro de Fuego despuÃ©s de una profunda meditaciÃ³n,su mente estaba clara y en paz.</target>
        </trans-unit>
        <trans-unit id="f3329b48eeadf5d2a791a733d259efe4ca19924b" translate="yes" xml:space="preserve">
          <source>As mentioned, the &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; can further create new objects using the &lt;strong&gt;new operator&lt;/strong&gt;. For e.g an object of type &lt;strong&gt;Object&lt;/strong&gt;, &lt;strong&gt;String&lt;/strong&gt;, &lt;strong&gt;Number&lt;/strong&gt;, &lt;strong&gt;Boolean&lt;/strong&gt;, &lt;strong&gt;Array&lt;/strong&gt;, &lt;strong&gt;RegExp&lt;/strong&gt;  Or &lt;strong&gt;UserDefinedFunction&lt;/strong&gt; can be created by using</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como se mencion&amp;oacute;, los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pueden crear a&amp;uacute;n m&amp;aacute;s objetos nuevos utilizando el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nuevo operador&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, un objeto de tipo &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;String&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Boolean&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegExp&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Or &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UserDefinedFunction&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede crear utilizando&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5444cc4c7b088a2cf1abe9c5ac49e58b50f5582d" translate="yes" xml:space="preserve">
          <source>Basically, when you use the &lt;strong&gt;new&lt;/strong&gt; keyword on a function, you are calling on that and that function serves as a constructor, so when you say:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;B&amp;aacute;sicamente, cuando usa la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nueva&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave en una funci&amp;oacute;n, est&amp;aacute; invocando eso y esa funci&amp;oacute;n sirve como un constructor, por lo que cuando dice:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="128a6f1ac253f8efe8add873d3ab2ae178457a6e" translate="yes" xml:space="preserve">
          <source>Before we close this down, let's just wrap with a small piece of code here to &lt;strong&gt;summarize everything above&lt;/strong&gt;. We are using &lt;code&gt;instanceof&lt;/code&gt; operator here to check whether an &lt;code&gt;object&lt;/code&gt; has in its &lt;code&gt;prototype&lt;/code&gt; chain the &lt;code&gt;prototype&lt;/code&gt; property of a &lt;code&gt;constructor&lt;/code&gt; which below summarizes the entire big diagram.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Antes de cerrar esto, terminemos con un peque&amp;ntilde;o fragmento de c&amp;oacute;digo aqu&amp;iacute; para &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;resumir todo lo anterior&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estamos utilizando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operador aqu&amp;iacute; para comprobar si un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene en su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la cadena del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la propiedad de un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que a continuaci&amp;oacute;n resume todo el diagrama grande.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1d3ebbcf931e0a28e680ba9599c4b76f5920263" translate="yes" xml:space="preserve">
          <source>Both are objects, but they have different roles: the function object &lt;em&gt;constructs&lt;/em&gt;, while the other object represents the prototype of any object that function will construct. The prototype object will become the parent of the constructed object in its prototype chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ambos son objetos, pero tienen diferentes roles: el objeto de la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;construye&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , mientras que el otro objeto representa el prototipo de cualquier objeto que la funci&amp;oacute;n construya. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El objeto prototipo se convertir&amp;aacute; en el padre del objeto construido en su cadena prototipo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4734465ce3249914e675fa085c71fdd7969725f9" translate="yes" xml:space="preserve">
          <source>But the tricky point here is you have access to all the properties defined in &lt;code&gt;__proto__&lt;/code&gt; on the first level of the &lt;code&gt;person&lt;/code&gt; object(read the summary part for more detail).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero el punto dif&amp;iacute;cil aqu&amp;iacute; es que tiene acceso a todas las propiedades definidas en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el primer nivel del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (lea la parte de resumen para obtener m&amp;aacute;s detalles).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4c717c68647a39d8993c3f22cb1f73298ff4906" translate="yes" xml:space="preserve">
          <source>But what is the exact purpose of this &quot;.prototype&quot; property in JavaScript? How does it relate to instantiating objects?</source>
          <target state="translated">Â¿Pero cuÃ¡l es el propÃ³sito exacto de esta propiedad &quot;.prototipo&quot; en JavaScript? Â¿CÃ³mo se relaciona con la instanciaciÃ³n de objetos?</target>
        </trans-unit>
        <trans-unit id="581ca65827f668811a65db1dbb1781038e17dcdf" translate="yes" xml:space="preserve">
          <source>Class methods are non-enumerable. Can be done with &lt;code&gt;Object.defineProperty&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los m&amp;eacute;todos de clase no son enumerables. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede hacer con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b79c42688d72bbe2038bd28afd9ed389154ee893" translate="yes" xml:space="preserve">
          <source>Classes always &lt;code&gt;use strict&lt;/code&gt;. Can be done with an explicit &lt;code&gt;use strict&lt;/code&gt; for every function, which is admittedly tedious.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las clases siempre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;use strict&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede hacer con un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;use strict&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; expl&amp;iacute;cito &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;estricto&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para cada funci&amp;oacute;n, lo cual es ciertamente tedioso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee63261f1379428db901d45d061803e082c2d686" translate="yes" xml:space="preserve">
          <source>Consider the constructor:</source>
          <target state="translated">Considere el constructor:</target>
        </trans-unit>
        <trans-unit id="ad0c015a0facc98aa584812c0678c373464a6715" translate="yes" xml:space="preserve">
          <source>Consider the following &lt;code&gt;keyValueStore&lt;/code&gt; object :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Considere el siguiente &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39d3124fb0d19b8604d1980edadff31ba40be02b" translate="yes" xml:space="preserve">
          <source>Corresponds to the following diagram (some &lt;code&gt;Number&lt;/code&gt; stuff is omitted):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Corresponde al siguiente diagrama ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se omiten &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;algunas &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cosas de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84ab82f3669c4d8bf9a319d55a8cd70e88bc0ca4" translate="yes" xml:space="preserve">
          <source>Create one Function, Get Two Objects</source>
          <target state="translated">Crear una funciÃ³n,obtener dos objetos</target>
        </trans-unit>
        <trans-unit id="0dea4f1de050c67f39a669747070da1280a237ab" translate="yes" xml:space="preserve">
          <source>ES6 adds the &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;extends&lt;/code&gt; keywords, which are mostly syntax sugar for previously possible prototype manipulation madness.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6 agrega la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabras clave, que en su mayor&amp;iacute;a son az&amp;uacute;car de sintaxis para la locura de manipulaci&amp;oacute;n de prototipos previamente posible.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0431dfaa30b098390e1a1e89c353654e61224340" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Function&lt;/code&gt; has a &lt;code&gt;prototype&lt;/code&gt; property, which refers to another
object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que se refiere a otro objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e87fcf8334f33dfb4544adc131d3008ee8170de" translate="yes" xml:space="preserve">
          <source>Each instance of this object would have the following public properties :</source>
          <target state="translated">Cada instancia de este objeto tendrÃ­a las siguientes propiedades pÃºblicas:</target>
        </trans-unit>
        <trans-unit id="44854d9c01a3db8b27faa3924a396dc627475631" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;JavaScript&lt;/code&gt; function has a &lt;code&gt;prototype&lt;/code&gt;. When you log the &lt;code&gt;Tree.prototype&lt;/code&gt;, you get...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando registra el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , obtiene ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c82daec772c21b329ef8063919bf156cb23fe962" translate="yes" xml:space="preserve">
          <source>Every &lt;strong&gt;Constructor/Function&lt;/strong&gt; (whether built in or user defined) when defined automatically has a property called &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; whose value by default is set as an object. This object itself has a property called &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; which by default references back the &lt;strong&gt;Constructor/Function&lt;/strong&gt; .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Constructor / Funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (ya sea integrado o definido por el usuario) cuando se define autom&amp;aacute;ticamente tiene una propiedad llamada &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;prototipo&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuyo valor por defecto se establece como un objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este objeto en s&amp;iacute; tiene una propiedad llamada &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;constructor&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que por defecto hace referencia al &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Constructor / Funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad52e74949b469f6820323ae6b340af34f90c99a" translate="yes" xml:space="preserve">
          <source>Every Function object (including built in Function object)-&amp;gt;
Function.prototype -&amp;gt; Object.prototype -&amp;gt; null</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada objeto Function (incluido el objeto Function incorporado) -&amp;gt; Function.prototype -&amp;gt; Object.prototype -&amp;gt; null&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bad37a6664930f457fd13d65fd291ece488a330" translate="yes" xml:space="preserve">
          <source>Every JavaScript object &lt;a href=&quot;https://www.ecma-international.org/ecma-262/10.0/index.html#sec-ordinary-object-internal-methods-and-internal-slots&quot;&gt;has an internal &quot;slot&quot;&lt;/a&gt; called &lt;code&gt;[[Prototype]]&lt;/code&gt; whose value is either &lt;code&gt;null&lt;/code&gt; or an &lt;code&gt;object&lt;/code&gt;. You can think of a slot as a property on an object, internal to the JavaScript engine, hidden from the code you write. The square brackets around &lt;code&gt;[[Prototype]]&lt;/code&gt; are deliberate, and are an ECMAScript specification convention to denote internal slots.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada objeto de JavaScript &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/10.0/index.html#sec-ordinary-object-internal-methods-and-internal-slots&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tiene una &quot;ranura&quot; interna&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; llamada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuyo valor es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede pensar en una ranura como una propiedad de un objeto, interna al motor de JavaScript, oculta del c&amp;oacute;digo que escribe. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los corchetes alrededor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son deliberados y son una convenci&amp;oacute;n de especificaci&amp;oacute;n ECMAScript para denotar ranuras internas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f0ef0659aecb22303ee754acbaeb49baf6e42fd" translate="yes" xml:space="preserve">
          <source>Every function has a &lt;code&gt;prototype&lt;/code&gt; property, initially holding an empty object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada funci&amp;oacute;n tiene una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que inicialmente contiene un objeto vac&amp;iacute;o.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4427bf34010d61d45f8302a7e58ea59fccbc44ab" translate="yes" xml:space="preserve">
          <source>Every object contains an internal property called the [[prototype]], which can be accessed by the &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; function. &lt;code&gt;Object.create(model)&lt;/code&gt; creates a new object and sets it's [[prototype]] property to the object &lt;strong&gt;model&lt;/strong&gt;. Hence when you do &lt;code&gt;Object.getPrototypeOf(product)&lt;/code&gt;, you will get the object &lt;strong&gt;model&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada objeto contiene una propiedad interna llamada [[prototipo]], a la que puede acceder la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.create(model)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; crea un nuevo objeto y establece su propiedad [[prototipo]] en el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;modelo de&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objeto &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, cuando haga &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(product)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , obtendr&amp;aacute; el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;modelo de&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objeto &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a2885bd192019c5b120bd52dfdbcdeaad907288" translate="yes" xml:space="preserve">
          <source>Every object has a link, &lt;em&gt;[[Prototype]]&lt;/em&gt;, sometimes exposed as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;__proto__&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada objeto tiene un enlace, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototipo]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , a veces expuesto como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27ff6fa37c56e393b34270fcfb3c1f7a626e836f" translate="yes" xml:space="preserve">
          <source>Every object has an internal property, &lt;em&gt;[[Prototype]]&lt;/em&gt;, linking it to another object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada objeto tiene una propiedad interna, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototipo]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que lo vincula a otro objeto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd2d92f66154c7bea02e2425ec309be42c9dc064" translate="yes" xml:space="preserve">
          <source>Every object that gets created internally references the object referenced by
&lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property of the Constructor that created it. This object is known as the created &lt;strong&gt;&lt;em&gt;object's prototype&lt;/em&gt;&lt;/strong&gt; (which is different from Function type objects &quot;prototype&quot; property which it references) . This way the created object can directly access the methods and properties defined in object referenced by the Constructor's &quot;prototype&quot; property (at the time of object creation).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada objeto que se crea internamente hace referencia al objeto referenciado por la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;prototipo&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del Constructor que lo cre&amp;oacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este objeto se conoce como el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prototipo del objeto&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; creado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(que es diferente de la propiedad &quot;prototipo&quot; de los objetos de tipo Function a la que hace referencia). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De esta forma, el objeto creado puede acceder directamente a los m&amp;eacute;todos y propiedades definidos en el objeto al que hace referencia la propiedad &quot;prototipo&quot; del Constructor (en el momento de la creaci&amp;oacute;n del objeto).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="04fec84aea0907990dd95a1cdf4d645f4ab25fec" translate="yes" xml:space="preserve">
          <source>Finally, if you create a new object via &lt;code&gt;Object.create(foo)&lt;/code&gt;, the resulting object's &lt;code&gt;[[Prototype]]&lt;/code&gt; will be set to &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Finalmente, si crea un nuevo objeto a trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.create(foo)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; resultante &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se establecer&amp;aacute; en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="913fa65fa66257d78a776f2cc37f8c2e45342a0e" translate="yes" xml:space="preserve">
          <source>Firefox makes it accessible through the &lt;code&gt;__proto__&lt;/code&gt; property as an extension. &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;ES6 now mentions&lt;/a&gt; some optional requirements for &lt;code&gt;__proto__&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firefox lo hace accesible a trav&amp;eacute;s de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como una extensi&amp;oacute;n. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6 ahora menciona&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; algunos requisitos opcionales para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ded4e4366360aefc60f419c75228c8055002b5e4" translate="yes" xml:space="preserve">
          <source>First is checked if the property is located on the Object itself. If so this property is returned.</source>
          <target state="translated">Primero se comprueba si la propiedad se encuentra en el propio objeto.Si es asÃ­,esta propiedad es devuelta.</target>
        </trans-unit>
        <trans-unit id="126594ec2e3648a15c71769d321915ef426fc644" translate="yes" xml:space="preserve">
          <source>Following are the &lt;strong&gt;&lt;em&gt;Non object&lt;/em&gt;&lt;/strong&gt; data types</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los siguientes son los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipos de datos &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sin objeto&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa8b666e849a0499d67737f9c99b9c67ca6983ca" translate="yes" xml:space="preserve">
          <source>Following in the summary of this article</source>
          <target state="translated">A continuaciÃ³n,en el resumen de este artÃ­culo</target>
        </trans-unit>
        <trans-unit id="c6250562934f1c7fec16d3f7975c1a7719577c6b" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;&lt;em&gt;Non Function type objects&lt;/em&gt;&lt;/strong&gt; (e.g Javascript Built in  Math object) the constructor function is the function that created it.
For &lt;strong&gt;Math&lt;/strong&gt; object it is &lt;strong&gt;&lt;em&gt;function Object(){}&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Sin funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (por ejemplo, Objeto matem&amp;aacute;tico incorporado en Javascript), la funci&amp;oacute;n constructora es la funci&amp;oacute;n que lo cre&amp;oacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Math&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n Object () {}&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcda7f7fe3cae3ac6151fb54aa8a47f250d7bb72" translate="yes" xml:space="preserve">
          <source>For all &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; the constructor function is always
&lt;strong&gt;&lt;em&gt;function Function(){}&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para todos los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Function,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la funci&amp;oacute;n constructora siempre es &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;function Function () {}&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af92f2d2e092a715c0b3fa108d9d8e88eed937ea" translate="yes" xml:space="preserve">
          <source>For creating an object without any prototype use the following:</source>
          <target state="translated">Para crear un objeto sin ningÃºn prototipo utilice lo siguiente:</target>
        </trans-unit>
        <trans-unit id="2836a1340828171230bbbcd4436e61777d800cde" translate="yes" xml:space="preserve">
          <source>For example when we define a function</source>
          <target state="translated">Por ejemplo,cuando definimos una funciÃ³n</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f1cc879e83b7285c7265a58ff65f9cc017991006" translate="yes" xml:space="preserve">
          <source>Functions are objects in javascript and thus can have properties</source>
          <target state="translated">Las funciones son objetos en javascript y por lo tanto pueden tener propiedades</target>
        </trans-unit>
        <trans-unit id="18f81e046b54ed03fb34907bb6ad93f980e8f448" translate="yes" xml:space="preserve">
          <source>Here are some equalities that could help grasp the issue -- all of these print &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay algunas igualdades que podr&amp;iacute;an ayudar a comprender el problema; todas estas se imprimen como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d95847d51670cf9873b3c6286e1e7f7dd325c3c8" translate="yes" xml:space="preserve">
          <source>Here is a short example.</source>
          <target state="translated">AquÃ­ hay un pequeÃ±o ejemplo.</target>
        </trans-unit>
        <trans-unit id="cb17c19ed78f536f145405f7a66103a40ece6685" translate="yes" xml:space="preserve">
          <source>Here is a visual presentation of the two prototype chains involved, represented as columns:</source>
          <target state="translated">AquÃ­ hay una presentaciÃ³n visual de las dos cadenas prototipo involucradas,representadas como columnas:</target>
        </trans-unit>
        <trans-unit id="badebffc2957e9a5737c7b7442b62ee3ff3ed9c5" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;Child&lt;/code&gt; inherits its &lt;code&gt;prototype&lt;/code&gt; from Tree, what we are doing here is using &lt;code&gt;Object.create()&lt;/code&gt; method to create a new object based off what you pass, here it is &lt;code&gt;Tree.prototype&lt;/code&gt;. In this case what we're doing is setting the prototype of Child to a new object that looks identical to the &lt;code&gt;Tree&lt;/code&gt; prototype. Next we are setting the &lt;code&gt;Child's constructor to Child&lt;/code&gt;, if we don't it would point to &lt;code&gt;Tree()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hereda su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de Tree, lo que estamos haciendo aqu&amp;iacute; es usar el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para crear un nuevo objeto basado en lo que pasa, aqu&amp;iacute; est&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En este caso, lo que estamos haciendo es configurar el prototipo de Child en un nuevo objeto que se ve id&amp;eacute;ntico al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prototipo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A continuaci&amp;oacute;n, configuraremos el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Child's constructor to Child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , si no lo hacemos apuntar&amp;iacute;a a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1080c05673364e26ccb0b18e600d9ce9ea7a2bbd" translate="yes" xml:space="preserve">
          <source>Here's one way:</source>
          <target state="translated">AquÃ­ hay una manera:</target>
        </trans-unit>
        <trans-unit id="255294a4948a7939d960d2ceac33918b80d9bea3" translate="yes" xml:space="preserve">
          <source>His hand however, was restless, and by itself grabbed a brush and jotted down the following notes.</source>
          <target state="translated">Su mano,sin embargo,estaba inquieta,y por sÃ­ misma agarrÃ³ un pincel y anotÃ³ las siguientes notas.</target>
        </trans-unit>
        <trans-unit id="dcf4bed02490ae09ef76076b1410a13c2ca7ae28" translate="yes" xml:space="preserve">
          <source>Hope it's also helpful for you to understand JavaScript Prototype Chain.</source>
          <target state="translated">Espero que tambiÃ©n le ayude a entender la cadena de prototipos de JavaScript.</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">Espero que esto ayude.</target>
        </trans-unit>
        <trans-unit id="85a528f682bca4f4cdd40f5dcd0f32d87901dc07" translate="yes" xml:space="preserve">
          <source>How does JavaScript .prototype work</source>
          <target state="translated">Â¿CÃ³mo funciona el prototipo de JavaScript</target>
        </trans-unit>
        <trans-unit id="15307e8b9bfc921e3085ee0afbd06e419923f9a6" translate="yes" xml:space="preserve">
          <source>I always like analogies when it comes to understand this type of stuff. 'Prototypical inheritance' is pretty confusing in comparison to class bass inheritance in my opinion, even though prototypes are much simpler paradigm. In fact with prototypes, there really is no inheritance, so the name in and of itself misleading, it's more a type of 'delegation'.</source>
          <target state="translated">Siempre me gustan las analogÃ­as cuando se trata de entender este tipo de cosas.La &quot;herencia prototÃ­pica&quot; es bastante confusa en comparaciÃ³n con la herencia del bajo de la clase en mi opiniÃ³n,aunque los prototipos son un paradigma mucho mÃ¡s simple.De hecho,con los prototipos,realmente no hay herencia,asÃ­ que el nombre en sÃ­ mismo es engaÃ±oso,es mÃ¡s un tipo de &quot;delegaciÃ³n&quot;.</target>
        </trans-unit>
        <trans-unit id="19e066fbef4f72e041e77caa8686e61389d9bd20" translate="yes" xml:space="preserve">
          <source>I can create a new instance of this object by doing this :</source>
          <target state="translated">Puedo crear una nueva instancia de este objeto haciendo esto:</target>
        </trans-unit>
        <trans-unit id="72bba386d12931e63576ecdfb525130fd2dd81b1" translate="yes" xml:space="preserve">
          <source>I found it helpful to explain the &quot;prototype chain&quot; as recursive convention when &lt;code&gt;obj_n.prop_X&lt;/code&gt; is being referenced:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Me pareci&amp;oacute; &amp;uacute;til explicar la &quot;cadena de prototipo&quot; como convenci&amp;oacute;n recursiva cuando &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se hace referencia a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n.prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6131353b64b6b93c067e55eaea6770918f91940e" translate="yes" xml:space="preserve">
          <source>I hope this add's some information, I know this kinda could be big to grasp... in simple words its &lt;strong&gt;it's just objects linked to objects!!!!&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Espero que esto agregue algo de informaci&amp;oacute;n, s&amp;eacute; que esto podr&amp;iacute;a ser algo grande de entender ... en palabras simples &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, &amp;iexcl;son solo objetos vinculados a objetos!&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="924874acd19481d8956e79b165ac0c1d173659a8" translate="yes" xml:space="preserve">
          <source>I remember a lot discussion I had with people a while back (I'm not exactly sure what I'm doing) but as I understand it, there's no concept of a class. It's just an object, and instances of those objects are clones of the original, right?</source>
          <target state="translated">Recuerdo muchas discusiones que tuve con la gente hace un tiempo (no estoy exactamente seguro de lo que hago)pero segÃºn entiendo,no hay un concepto de clase.Es sÃ³lo un objeto,y los ejemplos de esos objetos son clones del original,Â¿verdad?</target>
        </trans-unit>
        <trans-unit id="cc156d52b1e4575a1a02a778463782d0e870cbd7" translate="yes" xml:space="preserve">
          <source>I'm not that into dynamic programming languages but I've written my fair share of JavaScript code. I never really got my head around this prototype-based programming, does any one know how this works?</source>
          <target state="translated">No me gustan los lenguajes de programaciÃ³n dinÃ¡micos,pero he escrito mi parte del cÃ³digo JavaScript.Nunca me di cuenta de esta programaciÃ³n basada en prototipos,Â¿alguien sabe cÃ³mo funciona esto?</target>
        </trans-unit>
        <trans-unit id="095a7598140196f01e688496d713522b45a93e34" translate="yes" xml:space="preserve">
          <source>If a function is never used as a constructor, its &lt;code&gt;prototype&lt;/code&gt; property will go unused.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si una funci&amp;oacute;n nunca se usa como constructor, su &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se usar&amp;aacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="069c6dba09a3fa7d8e7e3fc560710a57a35adf5a" translate="yes" xml:space="preserve">
          <source>If a member of an object can't be found in the object it looks for it in the prototype chain. The chain consists of other objects. The prototype of a given instance can be accessed with the &lt;code&gt;__proto__&lt;/code&gt; variable. Every object has one, as there is no difference between classes and instances in javascript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no se puede encontrar un miembro de un objeto en el objeto, lo busca en la cadena de prototipos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La cadena consta de otros objetos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede acceder al prototipo de una instancia dada con la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada objeto tiene uno, ya que no hay diferencia entre clases e instancias en javascript.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f62c28db1c7c79d9c5f0200bc22f793427a5093" translate="yes" xml:space="preserve">
          <source>If it cannot find the property nowhere on the object and its prototype chain it will return undefined.</source>
          <target state="translated">Si no puede encontrar la propiedad en ninguna parte del objeto y su cadena de prototipos volverÃ¡ indefinida.</target>
        </trans-unit>
        <trans-unit id="579168485f40523728d3e2e483b8c97ad5737a6c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;prop_X&lt;/code&gt; is finally found in the k-th prototype object then</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; finalmente se encuentra en el k-&amp;eacute;simo objeto prototipo, entonces&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b5c35ba29dc74b14286f7b407902d1df105e2b5" translate="yes" xml:space="preserve">
          <source>If the property is not located on the object itself it will 'climb up the protochain'. It basically looks at the object referred to by the &lt;strong&gt;proto&lt;/strong&gt; property. There it checks if the property is available on the object referred to by &lt;strong&gt;proto&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si la propiedad no se encuentra en el objeto en s&amp;iacute;, &quot;trepar&amp;aacute; por la protocadena&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;B&amp;aacute;sicamente analiza el objeto al que hace referencia la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;All&amp;iacute; comprueba si la propiedad est&amp;aacute; disponible en el objeto mencionado por &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e415f6eb9f17af7905fbbb1186b6db3b03bfe31c" translate="yes" xml:space="preserve">
          <source>If the property isn't located on the &lt;strong&gt;proto&lt;/strong&gt; object it will climb up the &lt;strong&gt;proto&lt;/strong&gt; chain all the way up to Object object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si la propiedad no se encuentra en el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objeto que va a subir la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cadena de todo el camino hasta el objeto Object.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9355f10f28f16134f1bb8ba1a5affef1f401ff86" translate="yes" xml:space="preserve">
          <source>If we use a &lt;code&gt;new&lt;/code&gt; operator on the &lt;code&gt;Tree function&lt;/code&gt;, we call it as a &lt;code&gt;constructor&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si usamos un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operador en la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , lo llamamos como una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51315e6799ffc612f9684a9c011ff1e6e45b29c1" translate="yes" xml:space="preserve">
          <source>If you access a property via the dot (&lt;code&gt;obj.propName&lt;/code&gt;) or bracket (&lt;code&gt;obj['propName']&lt;/code&gt;) notation, and the object does not directly have such a property (ie. an &lt;em&gt;own property&lt;/em&gt;, checkable via &lt;code&gt;obj.hasOwnProperty('propName')&lt;/code&gt;), the runtime looks for a property with that name on the object referenced by the &lt;code&gt;[[Prototype]]&lt;/code&gt; instead. If the &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;em&gt;also&lt;/em&gt; does not have such a property, its &lt;code&gt;[[Prototype]]&lt;/code&gt; is checked in turn, and so on. In this way, the original object's &lt;em&gt;prototype chain&lt;/em&gt; is walked until a match is found, or its end is reached. At the top of the prototype chain is the &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si accede a una propiedad a trav&amp;eacute;s de la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.propName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; punto ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;obj.propName&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) o corchete ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj['propName']&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), y el objeto no tiene directamente dicha propiedad (es decir, una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad propia&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , verificable a trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.hasOwnProperty('propName')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), el tiempo de ejecuci&amp;oacute;n busca una propiedad con ese nombre en el objeto al que hace referencia el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Si el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tambi&amp;eacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no tiene una propiedad tal, su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se comprueba a su vez, y as&amp;iacute; sucesivamente. De esta manera, la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena prototipo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del objeto original &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se camina hasta que se encuentra una coincidencia o se alcanza su final. En la parte superior de la cadena del prototipo est&amp;aacute; el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc00b072becb7e2c9c80fa4abb29e36a2046e46c" translate="yes" xml:space="preserve">
          <source>If you create a new object via &lt;code&gt;new Func()&lt;/code&gt;, the object's &lt;code&gt;[[Prototype]]&lt;/code&gt; will, by default, be set to the object referenced by &lt;code&gt;Func.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si crea un nuevo objeto mediante el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Func()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por defecto, se establecer&amp;aacute; en el objeto al que hace referencia &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Func.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e26c361e62783e6e4ad3a4d7b78cd7a271af85e" translate="yes" xml:space="preserve">
          <source>If you don't need a constructor, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;Object.create&lt;/a&gt; instead of &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no necesita un constructor, use &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.create en&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de0c76d508bd0c60f85684de7562bbf927304fa3" translate="yes" xml:space="preserve">
          <source>If you look at the above &lt;code&gt;console.log()&lt;/code&gt; output, you could a see a constructor property on &lt;code&gt;Tree.prototype&lt;/code&gt; and a &lt;code&gt;__proto__&lt;/code&gt; property too. The &lt;code&gt;__proto__&lt;/code&gt; represents the &lt;code&gt;prototype&lt;/code&gt; that this &lt;code&gt;function&lt;/code&gt; is based off, and since this is just a plain &lt;code&gt;JavaScript function&lt;/code&gt; with no &lt;code&gt;inheritance&lt;/code&gt; set up yet, it refers to the &lt;code&gt;Object prototype&lt;/code&gt; which is something just built in to JavaScript...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si observa la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;salida de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;console.log()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , podr&amp;iacute;a ver una propiedad de constructor en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; representa el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se basa &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esta &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y dado que esta es solo una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; simple de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sin &lt;/font&gt;&lt;/font&gt; &lt;code&gt;inheritance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; establecida, se refiere al &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que es algo integrado en JavaScript ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b56f4223a36469d868a9c3f3e13638a6646255c5" translate="yes" xml:space="preserve">
          <source>If you look at the below one, we are trying to access the &lt;code&gt;call&lt;/code&gt; method which is available in every &lt;code&gt;function&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si observa el siguiente, estamos intentando acceder al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;call&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que est&amp;aacute; disponible en todas las &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f137ce61334b2a7b075a1ce9504fd4da3b16e38" translate="yes" xml:space="preserve">
          <source>If you look up the above fiddle, &lt;code&gt;Profile&lt;/code&gt; Function has access to &lt;code&gt;call&lt;/code&gt; method, but its not available in it, but available via the prototype chain which delegates to &lt;code&gt;Function.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si busca el viol&amp;iacute;n anterior, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Profile&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Function tiene acceso al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;call&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero no est&amp;aacute; disponible en &amp;eacute;l, pero est&amp;aacute; disponible a trav&amp;eacute;s de la cadena de prototipos que delega a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8469815035042a48f41f237dc4d9ccbe4ff669e" translate="yes" xml:space="preserve">
          <source>If you look up the above fiddle, dog has access to &lt;code&gt;toString&lt;/code&gt; method, but its not available in it, but available via the prototype chain which delegates to &lt;code&gt;Object.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si busca el viol&amp;iacute;n anterior, el perro tiene acceso al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;toString&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero no est&amp;aacute; disponible en &amp;eacute;l, pero est&amp;aacute; disponible a trav&amp;eacute;s de la cadena de prototipos que delega en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d9d50ab6ec54491b1e8cafe8af8d69bbd177fee" translate="yes" xml:space="preserve">
          <source>If you look up the code above, we have &lt;code&gt;Foo&lt;/code&gt; constructor who has the method &lt;code&gt;identify()&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; constructor which has &lt;code&gt;speak&lt;/code&gt; method. We create two &lt;code&gt;Bar&lt;/code&gt; instance &lt;code&gt;b1&lt;/code&gt; and &lt;code&gt;b2&lt;/code&gt; whose parent type is &lt;code&gt;Foo&lt;/code&gt;. Now while calling &lt;code&gt;speak&lt;/code&gt; method of &lt;code&gt;Bar&lt;/code&gt;, we are able to identify the who is calling the speak via &lt;code&gt;prototype&lt;/code&gt; chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si busca el c&amp;oacute;digo anterior, tenemos el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constructor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que tiene el m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;identify()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constructor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que tiene el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;speak&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Creamos dos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instancias de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuyo tipo padre es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Ahora, mientras &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;llamamos al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;speak&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , podemos identificar qui&amp;eacute;n llama a talk a trav&amp;eacute;s de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af6377b8c527a360e9727478ccc7433365cb08cc" translate="yes" xml:space="preserve">
          <source>Imagine this ....</source>
          <target state="translated">Imagina esto...</target>
        </trans-unit>
        <trans-unit id="681ab279185efecf4adf0ca37096615d94ed9ef0" translate="yes" xml:space="preserve">
          <source>Important is that this prototype chain has little to do with the objects that &lt;code&gt;Person&lt;/code&gt; can &lt;em&gt;construct&lt;/em&gt;. Those constructed objects have their own prototype chain, and this chain can potentially have no close ancestor in common with the one mentioned above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es importante que esta cadena de prototipos tenga poco que ver con los objetos que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;construir&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esos objetos construidos tienen su propia cadena de prototipo, y esta cadena potencialmente no puede tener un ancestro cercano en com&amp;uacute;n con el mencionado anteriormente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d4434a6f3e9717fa3fb7bca25a2650db0ab5526" translate="yes" xml:space="preserve">
          <source>In JavaScript you first create an object (there is no concept of class), then you can augment your own object or create new objects from it. It's not difficult, but a little foreign and hard to metabolize for somebody used to the classical way.</source>
          <target state="translated">En Javascript primero se crea un objeto (no existe el concepto de clase),luego se puede aumentar el propio objeto o crear nuevos objetos a partir de Ã©l.No es difÃ­cil,pero un poco extraÃ±o y difÃ­cil de metabolizar para alguien acostumbrado a la forma clÃ¡sica.</target>
        </trans-unit>
        <trans-unit id="eb502b0d87f1e52cd28e77dd3efe27622ff8c19d" translate="yes" xml:space="preserve">
          <source>In a language implementing classical inheritance like Java, C# or C++ you start by creating a class--a blueprint for your objects--and then you can create new objects from that class or you can extend the class, defining a new class that augments the original class.</source>
          <target state="translated">En un lenguaje que implementa la herencia clÃ¡sica como Java,C#o C++se empieza por crear una clase-un plano para los objetos-y luego se pueden crear nuevos objetos a partir de esa clase o se puede ampliar la clase,definiendo una nueva clase que aumente la clase original.</target>
        </trans-unit>
        <trans-unit id="3eac9854d580c805d0b006d454df086cacebd0b1" translate="yes" xml:space="preserve">
          <source>In other words, when you have a prototype property on a function and you call a new on that, after JavaScript finishes looking at that newly created object for properties, it will go look at the function's &lt;code&gt;.prototype&lt;/code&gt; and also it is possible that this object has its own internal prototype. and so on.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En otras palabras, cuando tiene una propiedad prototipo en una funci&amp;oacute;n y llama a una nueva sobre eso, despu&amp;eacute;s de que JavaScript termina de buscar propiedades en ese objeto reci&amp;eacute;n creado, ver&amp;aacute; el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la funci&amp;oacute;n &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y tambi&amp;eacute;n es posible que este objeto tiene su propio prototipo interno. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y as&amp;iacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa8cdbafa4cec47f538fd967f8cc3630039bb181" translate="yes" xml:space="preserve">
          <source>In the above case, you have static funcation call test. This function can be accessed only by obj.test where you can imagine obj to be a class.</source>
          <target state="translated">En el caso anterior,tienes la prueba de llamada de fundiciÃ³n estÃ¡tica.A esta funciÃ³n sÃ³lo se puede acceder mediante el obj.test donde se puede imaginar el obj.ser una clase.</target>
        </trans-unit>
        <trans-unit id="92812c9a271d95faac6799bb983e945fe61121f5" translate="yes" xml:space="preserve">
          <source>In the first line of this listing, a &lt;code&gt;primitive&lt;/code&gt; string value is assigned to name. The second line treats name like an &lt;code&gt;object&lt;/code&gt; and calls &lt;code&gt;charAt(0)&lt;/code&gt; using dot notation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En la primera l&amp;iacute;nea de este listado, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se asigna un nombre de cadena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;primitive&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; al nombre. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La segunda l&amp;iacute;nea trata el nombre como un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y llama a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;charAt(0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usando la notaci&amp;oacute;n de puntos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20242a20d0a285b179a47552d0d66df0f23b44d5" translate="yes" xml:space="preserve">
          <source>In traditional javascript, the linked object is the &lt;code&gt;prototype&lt;/code&gt; property of a function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En javascript tradicional, el objeto vinculado es la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de una funci&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa82f61da16ffe0c6852fe1744d556e04cb4b389" translate="yes" xml:space="preserve">
          <source>Intuitively, classical inheritance should affect property lookup.</source>
          <target state="translated">Intuitivamente,la herencia clÃ¡sica deberÃ­a afectar a la bÃºsqueda de propiedades.</target>
        </trans-unit>
        <trans-unit id="030ed0cf05fcd236928c7dc9c3dab71153816ff9" translate="yes" xml:space="preserve">
          <source>It can be retrieved via the ES5 &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede recuperar a trav&amp;eacute;s de ES5 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="435ef2bfd6485579713864ee91cc85d379df2ff0" translate="yes" xml:space="preserve">
          <source>It is no surprise that the name of the property &lt;code&gt;prototype&lt;/code&gt; can lead to confusion. It would maybe have been clearer if this property had been named &lt;code&gt;prototypeOfConstructedInstances&lt;/code&gt; or something along that line.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No sorprende que el nombre del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; propiedad &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pueda generar confusi&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Quiz&amp;aacute;s hubiera sido m&amp;aacute;s claro si esta propiedad se hubiera llamado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypeOfConstructedInstances&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o algo por el estilo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf3b678f25878fd95a8e605eb0b10a766c4082fb" translate="yes" xml:space="preserve">
          <source>It is not the way that JavaScript actually attaches the properties that are defined in the prototype. The actual way is related to the prototype chain concept.</source>
          <target state="translated">No es la forma en que JavaScript realmente adjunta las propiedades que se definen en el prototipo.La forma real estÃ¡ relacionada con el concepto de la cadena del prototipo.</target>
        </trans-unit>
        <trans-unit id="f7269d48b77d1578b7761e037bb9f11b7217d7a6" translate="yes" xml:space="preserve">
          <source>It may help to categorise prototype chains into two categories.</source>
          <target state="translated">Puede ayudar a clasificar las cadenas prototipo en dos categorÃ­as.</target>
        </trans-unit>
        <trans-unit id="c8d2bc26288d1970e7d9c6e818d443806f624d90" translate="yes" xml:space="preserve">
          <source>It's also useful for inheritance, because the prototype chain can consist of many other objects.</source>
          <target state="translated">TambiÃ©n es Ãºtil para la herencia,porque la cadena del prototipo puede consistir en muchos otros objetos.</target>
        </trans-unit>
        <trans-unit id="c423571e162589c35a8213ca713cd61ba94c2567" translate="yes" xml:space="preserve">
          <source>It's important to understand that there is a distinction between an object's prototype (which is available via &lt;code&gt;Object.getPrototypeOf(obj)&lt;/code&gt;, or via the deprecated &lt;code&gt;__proto__&lt;/code&gt; property) and the &lt;code&gt;prototype&lt;/code&gt; property on constructor functions. The former is the property on each instance, and the latter is the property on the constructor. That is, &lt;code&gt;Object.getPrototypeOf(new Foobar())&lt;/code&gt; refers to the same object as &lt;code&gt;Foobar.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es importante comprender que existe una distinci&amp;oacute;n entre el prototipo de un objeto (que est&amp;aacute; disponible a trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(obj)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , o mediante la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; en&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; desuso &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;) y la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en las funciones del constructor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El primero es la propiedad en cada instancia, y el segundo es la propiedad en el constructor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es decir, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(new Foobar())&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al mismo objeto que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foobar.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="030d130f2ed1f207ab296966419ab9e0bd2b0103" translate="yes" xml:space="preserve">
          <source>It's just that you already have an object with &lt;code&gt;Object.new&lt;/code&gt; but you still don't have an object when using the constructor syntax.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es solo que ya tiene un objeto con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero a&amp;uacute;n no tiene un objeto cuando usa la sintaxis del constructor.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5e3efa7e30e4995e4ca6d4e28e54b49937edc76" translate="yes" xml:space="preserve">
          <source>JavaScript basically has two kinds of data types</source>
          <target state="translated">JavaScript tiene bÃ¡sicamente dos tipos de datos</target>
        </trans-unit>
        <trans-unit id="d94f506270681997f01537b42a4ab95a5bf02ca2" translate="yes" xml:space="preserve">
          <source>JavaScript internally makes an object, an empty hash and then it gives that object to the constructor, then the constructor can do whatever it wants, because &lt;strong&gt;this&lt;/strong&gt; inside of that constructor is the object that was just created and then it gives you that object of course if you haven't used the return statement in your function or if you've put a &lt;code&gt;return undefined;&lt;/code&gt; at the end of your function body.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript crea internamente un objeto, un hash vac&amp;iacute;o y luego le da ese objeto al constructor, luego el constructor puede hacer lo que quiera, porque &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dentro de ese constructor es el objeto que acaba de crear y luego le da ese objeto, por supuesto. si no ha utilizado la declaraci&amp;oacute;n de devoluci&amp;oacute;n en su funci&amp;oacute;n o si ha puesto una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;return undefined;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;al final de su cuerpo funcional.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="957143b10357f5e6e6910d7460864c89a175cecc" translate="yes" xml:space="preserve">
          <source>Javascript doesn't have inheritance in the usual sense, but it has the prototype chain.</source>
          <target state="translated">Javascript no tiene herencia en el sentido habitual,pero tiene el prototipo de cadena.</target>
        </trans-unit>
        <trans-unit id="a2450e30be66310d0553978f90d0d288caac92ae" translate="yes" xml:space="preserve">
          <source>Javascript has a mechanism when looking up properties on Objects which is called &lt;strong&gt;'prototypal inheritance'&lt;/strong&gt;, here is what is basically does:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript tiene un mecanismo al buscar propiedades en Objetos que se llama &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'herencia protot&amp;iacute;pica'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , esto es lo que b&amp;aacute;sicamente hace:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f4b47934618af57961679c19108922a4ca294b0" translate="yes" xml:space="preserve">
          <source>Let me tell you my understanding of prototypes. I am not going to compare the inheritance here with other languages. I wish people would stop comparing languages, and just understand the language as itself. Understanding prototypes and prototypal inheritance is so simple, as I will show you below.</source>
          <target state="translated">DÃ©jeme decirle lo que entiendo de los prototipos.No voy a comparar la herencia aquÃ­ con otros idiomas.DesearÃ­a que la gente dejara de comparar idiomas,y que entendiera el idioma como tal.Entender los prototipos y la herencia prototÃ­pica es tan simple,como les mostrarÃ© a continuaciÃ³n.</target>
        </trans-unit>
        <trans-unit id="59c81da029f262010deb5cba5768b6b6e36fbcb2" translate="yes" xml:space="preserve">
          <source>Let's add a &lt;code&gt;child-tree&lt;/code&gt; to our &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Agreguemos un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;child-tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a nuestro &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcf6be15e0399b4e8692eb89b5dbccad0d1c69a8" translate="yes" xml:space="preserve">
          <source>Let's add a method to our &lt;code&gt;Tree&lt;/code&gt;&lt;code&gt;prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Agreguemos un m&amp;eacute;todo a nuestro &lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf410d2b618ac111afa3b7abc19e478c0f77ab14" translate="yes" xml:space="preserve">
          <source>Let's say we want to create a &lt;code&gt;Person&lt;/code&gt; object model. but in this step I'm gonna be trying to &lt;strong&gt;do the same exact thing without using &lt;code&gt;prototype&lt;/code&gt; and &lt;code&gt;new&lt;/code&gt; keyword&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Digamos que queremos crear un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;modelo de objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pero en este paso tratar&amp;eacute; de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hacer exactamente lo mismo sin usar un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fd77249b0436d1e1235c3cd861af2edcdf49052" translate="yes" xml:space="preserve">
          <source>Let's take a moment to study how the following works:</source>
          <target state="translated">Tomemos un momento para estudiar cÃ³mo funciona lo siguiente:</target>
        </trans-unit>
        <trans-unit id="c5af6366772cd8b7bfde51876fc403399d3d1ac6" translate="yes" xml:space="preserve">
          <source>Lookup order is:</source>
          <target state="translated">La orden de bÃºsqueda es:</target>
        </trans-unit>
        <trans-unit id="89e5ff4a5d3a2edc239357c75ca16021a0ac3518" translate="yes" xml:space="preserve">
          <source>Modern JavaScript implementations allow read and/or write access to the &lt;code&gt;[[Prototype]]&lt;/code&gt; in the following ways:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las implementaciones modernas de JavaScript permiten el acceso de lectura y / o escritura al &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de las siguientes maneras:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e595cef183e536c4286b64758770cea322fe687" translate="yes" xml:space="preserve">
          <source>Note that, therefore, &lt;strong&gt;all classes, and all functions that can be used with the &lt;code&gt;new&lt;/code&gt; operator, have a property named &lt;code&gt;.prototype&lt;/code&gt; in addition to their own &lt;code&gt;[[Prototype]]&lt;/code&gt; internal slot.&lt;/strong&gt; This dual use of the word &quot;prototype&quot; is the source of endless confusion amongst newcomers to the language.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que, por lo tanto, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;todas las clases y todas las funciones que se pueden usar con el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operador tienen una propiedad llamada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; adem&amp;aacute;s de su propia &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ranura interna &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este uso dual de la palabra &quot;prototipo&quot; es la fuente de confusi&amp;oacute;n interminable entre los reci&amp;eacute;n llegados al idioma.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="284252bf04303c422b352a14277442552d072df6" translate="yes" xml:space="preserve">
          <source>Now the prototype chain of &lt;em&gt;t&lt;/em&gt; is one step longer than that of &lt;em&gt;p&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora la cadena prototipo de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;t&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un paso m&amp;aacute;s larga que la de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="453e9d47d55aa48fa47134a6774d654f2dc68e6c" translate="yes" xml:space="preserve">
          <source>Now you create an &lt;code&gt;instance&lt;/code&gt; of &lt;code&gt;Child&lt;/code&gt; and call &lt;code&gt;branch&lt;/code&gt; which is originally available in &lt;code&gt;Tree&lt;/code&gt;. We haven't actually defined our &lt;code&gt;branch&lt;/code&gt; on the &lt;code&gt;Child prototype&lt;/code&gt;. BUT, in the &lt;code&gt;Root prototype&lt;/code&gt; which Child inherits from.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora crea una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y call &lt;/font&gt;&lt;/font&gt; &lt;code&gt;branch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que originalmente est&amp;aacute; disponible en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En realidad, no hemos definido nuestra &lt;/font&gt;&lt;/font&gt; &lt;code&gt;branch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Child prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PERO, en el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Root prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que Child hereda.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e405d1c6c812b0aaf5cd5dc341492cb7cd706812" translate="yes" xml:space="preserve">
          <source>Now, consider the &lt;code&gt;keyValueStore&lt;/code&gt; object again. I could rewrite it like this :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, considere el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; nuevamente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podr&amp;iacute;a reescribirlo as&amp;iacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27a2f1b2807805e773c2207e1da71947713971f9" translate="yes" xml:space="preserve">
          <source>Now, imagine if you could have just a single &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;getLength&lt;/code&gt; copy, and each instance would reference that same function. This would be better for performance and require less memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, imagine si pudiera tener una sola &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;copia &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;delete&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;getLength&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y cada instancia har&amp;iacute;a referencia a esa misma funci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto ser&amp;iacute;a mejor para el rendimiento y requiere menos memoria.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="620234a6a5d0f7aa8808c551a92b51792801f50b" translate="yes" xml:space="preserve">
          <source>Now, since &lt;code&gt;.prototype&lt;/code&gt; is an object, it has a &lt;code&gt;[[Prototype]]&lt;/code&gt; property. When you don't make any assignments to &lt;code&gt;Function.prototype&lt;/code&gt;, the &lt;code&gt;.prototype&lt;/code&gt;'s &lt;code&gt;[[Prototype]]&lt;/code&gt; points to the prototypical object (&lt;code&gt;Object.prototype&lt;/code&gt;). This is automatically performed anytime you create a new function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, dado que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un objeto, tiene una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando no realiza ninguna asignaci&amp;oacute;n a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ' &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; apunta al objeto protot&amp;iacute;pico ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se realiza autom&amp;aacute;ticamente cada vez que crea una nueva funci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3967028d959361dd532fe101b7f70d69c0a8a614" translate="yes" xml:space="preserve">
          <source>Now, suppose we create 100 instances of this &lt;code&gt;keyValueStore&lt;/code&gt; object. Even though &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;getLength&lt;/code&gt; will do the exact same thing for each of these 100 instances, every instance has its own copy of this function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, supongamos que creamos 100 instancias de este &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aunque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;delete&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;getLength&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; har&amp;aacute; exactamente lo mismo para cada una de estas 100 instancias, cada instancia tiene su propia copia de esta funci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c7607adc00ebc0cc7c3ef863d971b6b48c4aa7e" translate="yes" xml:space="preserve">
          <source>Object created with new or Object.create -&amp;gt; One or More prototype chains -&amp;gt; Object.prototype -&amp;gt; null</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Objeto creado con nuevo o Object.create -&amp;gt; Una o m&amp;aacute;s cadenas de prototipos -&amp;gt; Object.prototype -&amp;gt; null&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a09455bc70de56d08fdfa56e64f46eea057a622" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;new&lt;/a&gt; are linked to the &lt;code&gt;prototype&lt;/code&gt; property of their constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los objetos creados con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute;n vinculados a la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de su constructor.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffd0441b7bb81e2aaa165755d1fb9ccd3a8bb90b" translate="yes" xml:space="preserve">
          <source>On the second line, when we do:</source>
          <target state="translated">En la segunda lÃ­nea,cuando lo hagamos:</target>
        </trans-unit>
        <trans-unit id="1ed4b17e49593418cbd9b66a6d5373f35d033114" translate="yes" xml:space="preserve">
          <source>One might think that setting the prototype property of the Constructor to null shall create an object with a null prototype. However in such cases the newly created object's prototype is set to Object.prototype and its constructor is set to function Object. This is demonstrated by the following code</source>
          <target state="translated">Se podrÃ­a pensar que poniendo la propiedad de prototipo del Constructor a nulo crearÃ¡ un objeto con un prototipo nulo.Sin embargo,en tales casos el prototipo del objeto reciÃ©n creado se establece como Object.prototype y su constructor se establece como la funciÃ³n Object.Esto se demuestra con el siguiente cÃ³digo</target>
        </trans-unit>
        <trans-unit id="dd5d44663fd2f674fd203b181e341546f829b568" translate="yes" xml:space="preserve">
          <source>One of the most important &lt;code&gt;.prototype&lt;/code&gt;s is that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype&quot;&gt;of the &lt;code&gt;Object&lt;/code&gt; function&lt;/a&gt;. This prototype holds the prototypical object that all &lt;code&gt;[[Prototype]]&lt;/code&gt; chains contain. On it, all the available methods for new objects are defined:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Uno de los &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;aacute;s importantes &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este prototipo contiene el objeto protot&amp;iacute;pico que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;contienen todas las cadenas &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En &amp;eacute;l, se definen todos los m&amp;eacute;todos disponibles para nuevos objetos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="469584dd5fce9e5dacc091ba6fdcdd6c653674e4" translate="yes" xml:space="preserve">
          <source>Only &lt;strong&gt;Function type objects&lt;/strong&gt; can create a new object using the &lt;strong&gt;operator new&lt;/strong&gt;. The objects thus created are &lt;strong&gt;Non Function type&lt;/strong&gt; objects. The &lt;strong&gt;Non Function type objects&lt;/strong&gt; cannot further create an object using &lt;strong&gt;operator new&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pueden crear un nuevo objeto utilizando el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador new&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los objetos as&amp;iacute; creados son &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo No Funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Non Function&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no pueden crear m&amp;aacute;s un objeto usando el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador new&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1816079e3107aa40962064bea8d37fc70e00e405" translate="yes" xml:space="preserve">
          <source>Our 2 lines of code only created the following new objects:</source>
          <target state="translated">Nuestras dos lÃ­neas de cÃ³digo sÃ³lo crearon los siguientes objetos nuevos:</target>
        </trans-unit>
        <trans-unit id="a9d41b6a8034d85ae98cd3f45af131286ffde0d0" translate="yes" xml:space="preserve">
          <source>Prior to the introduction of class syntax to JavaScript, constructor functions were the only way to simulate classes. We can think of properties of the object referenced by the constructor function's &lt;code&gt;.prototype&lt;/code&gt; property as shared members; ie. members which are the same for each instance. In class-based systems, methods are implemented the same way for each instance, so methods are conceptually added to the &lt;code&gt;.prototype&lt;/code&gt; property; an object's fields, however, are instance-specific and are therefore added to the object itself during construction.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Antes de la introducci&amp;oacute;n de la sintaxis de clase a JavaScript, las funciones de constructor eran la &amp;uacute;nica forma de simular clases. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podemos pensar en las propiedades del objeto referenciado por la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; de&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la funci&amp;oacute;n constructora &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;como miembros compartidos; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es decir. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;miembros que son iguales para cada instancia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En los sistemas basados ââen clases, los m&amp;eacute;todos se implementan de la misma manera para cada instancia, por lo que los m&amp;eacute;todos se agregan conceptualmente a la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, los campos de un objeto son espec&amp;iacute;ficos de la instancia y, por lo tanto, se agregan al objeto mismo durante la construcci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03fb78825e2fec8bc7c200a72472e96bafcab5bc" translate="yes" xml:space="preserve">
          <source>Properties in the &lt;strong&gt;product&lt;/strong&gt; are handled in the following way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las propiedades en el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;producto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se manejan de la siguiente manera:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a12e750cacf0cb7832019025ff44a2cfd082da5a" translate="yes" xml:space="preserve">
          <source>Prototype is like a model, based on which you create a product. The crucial point to understand is that when you create an object using another object as it's prototype, the link between the prototype and the product is ever-lasting. For instance:</source>
          <target state="translated">El prototipo es como un modelo,basado en el cual se crea un producto.El punto crucial que hay que entender es que cuando creas un objeto usando otro objeto como su prototipo,el vÃ­nculo entre el prototipo y el producto es duradero.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f98486283a16369ff6d59a142ef64f750c64a317" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&quot;&gt;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Referencia: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="707b1b8fa5117ebd4f291a5c909d3a04e8df0a5b" translate="yes" xml:space="preserve">
          <source>Remember:</source>
          <target state="translated">Remember:</target>
        </trans-unit>
        <trans-unit id="bdfa853b763095b302a457bd72bd8131fd6f666a" translate="yes" xml:space="preserve">
          <source>Setting the prototype property of the Constructor to null(or undefined,number,true,false,string) shall not create an object with a null prototype. In such cases the newly created object's prototype is set to Object.prototype and its constructor is set to function Object.</source>
          <target state="translated">Poner la propiedad del prototipo del Constructor en nulo (o indefinido,nÃºmero,verdadero,falso,cadena)no crearÃ¡ un objeto con un prototipo nulo.En tales casos,el prototipo del objeto reciÃ©n creado se establece como Object.prototype y su constructor se establece como la funciÃ³n Object.</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">Mostrar fragmento de cÃ³digo</target>
        </trans-unit>
        <trans-unit id="0b2f038d5b557fa82a7d38572069173ec9110e7a" translate="yes" xml:space="preserve">
          <source>Simple Objects (created By new Object() or {} including built in Math  object)-&amp;gt;   Object.prototype -&amp;gt; null</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Objetos simples (creados por un nuevo objeto () o {} incluyendo un objeto matem&amp;aacute;tico incorporado) -&amp;gt; Object.prototype -&amp;gt; null&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfa33a46580418ce6726f86b2853c888bbaeba8b" translate="yes" xml:space="preserve">
          <source>Simplified diagram without all predefined objects:</source>
          <target state="translated">Diagrama simplificado sin todos los objetos predefinidos:</target>
        </trans-unit>
        <trans-unit id="cd11a10866ed006c872e7b004b5d009d83d38196" translate="yes" xml:space="preserve">
          <source>Since a function is also an object, it also has its own parent in its own prototype chain, but recall that these two chains are about different things.</source>
          <target state="translated">Dado que una funciÃ³n es tambiÃ©n un objeto,tambiÃ©n tiene su propio progenitor en su propio prototipo de cadena,pero recuerde que estas dos cadenas son sobre cosas diferentes.</target>
        </trans-unit>
        <trans-unit id="7e14680d7f99efdb2b76c0e9039ea3eca62d171d" translate="yes" xml:space="preserve">
          <source>Since the &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; can create new objects they are also called &lt;strong&gt;&lt;em&gt;Constructors&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pueden crear nuevos objetos, tambi&amp;eacute;n se denominan &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Constructores&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6651a715d46841a278432b989cce2edefb80907" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;Person&lt;/code&gt; seems related to two kinds of chains, which live their own lives. To &quot;jump&quot; from one chain to the other, you use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; parece estar relacionada con dos tipos de cadenas, que viven sus propias vidas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para &quot;saltar&quot; de una cadena a la otra, usa:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcca12fe80eb8ce956e8c593f4902949f237f14c" translate="yes" xml:space="preserve">
          <source>So in this step &lt;strong&gt;&lt;code&gt;functions&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;objects&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; keyword, are all we have.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, en este paso &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, las &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;functions&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;objects&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;this&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave son todo lo que tenemos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b082423f578ce9c7b356bdcfaac50c485dd327f" translate="yes" xml:space="preserve">
          <source>So these statements are equivalent:</source>
          <target state="translated">AsÃ­ que estas declaraciones son equivalentes:</target>
        </trans-unit>
        <trans-unit id="b7953a06c481f35275be63d3184e665422ffd9ae" translate="yes" xml:space="preserve">
          <source>So to answer that let's say we have an empty object, and two functions like:</source>
          <target state="translated">AsÃ­ que para responder a eso digamos que tenemos un objeto vacÃ­o,y dos funciones como:</target>
        </trans-unit>
        <trans-unit id="71764b5b34e10b36e9b5f64bf240e3e80dcd6adb" translate="yes" xml:space="preserve">
          <source>So when JavaScript goes to look up a property on an object, the first thing it does, is it looks it up on that object. And then there is a secret property &lt;strong&gt;&lt;code&gt;[[prototype]]&lt;/code&gt;&lt;/strong&gt; which we usually have it like &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; and that property is what JavaScript looks at next. And when it looks through the &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt;, as far as it is again another JavaScript object, it has its own &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; attribute, it goes up and up until it gets to the point where the next &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; is null. The point is the only object in JavaScript that its &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; attribute is null is &lt;code&gt;Object.prototype&lt;/code&gt; object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, cuando JavaScript busca una propiedad en un objeto, lo primero que hace es buscarlo en ese objeto. Y luego hay una propiedad secreta &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;[[prototype]]&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que generalmente tenemos como &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y esa propiedad es lo que JavaScript ve a continuaci&amp;oacute;n. Y cuando mira a trav&amp;eacute;s del &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en la medida en que vuelve a ser otro objeto JavaScript, tiene su propio &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributo &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , sube y sube hasta llegar al punto donde el siguiente &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es nulo. El punto es que el &amp;uacute;nico objeto en JavaScript que su &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributo &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es nulo es el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88bfdb43114c0ba7f946dd444e95247ad2b8e760" translate="yes" xml:space="preserve">
          <source>So,
&lt;strong&gt;typeof(Object)&lt;/strong&gt; === &lt;strong&gt;typeof(String)&lt;/strong&gt; === &lt;strong&gt;typeof(Number)&lt;/strong&gt; === &lt;strong&gt;typeof(Boolean)&lt;/strong&gt; === &lt;strong&gt;typeof(Array)&lt;/strong&gt;  === &lt;strong&gt;typeof(RegExp)&lt;/strong&gt; === &lt;strong&gt;typeof(Function)&lt;/strong&gt;  === &lt;strong&gt;typeof(UserDefinedFunction)&lt;/strong&gt; === &lt;strong&gt;'function'&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof (Object)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof (String)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof (Number)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof (Boolean)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof (Array)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof (RegExp)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof (Function)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; == = &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof (UserDefinedFunction)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'funci&amp;oacute;n'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="795df9eafea50013d6a6b25f4f916ff964abe8b9" translate="yes" xml:space="preserve">
          <source>So, similar to the code above, if you use the class syntax to create a new object like so:</source>
          <target state="translated">AsÃ­ que,similar al cÃ³digo anterior,si usas la sintaxis de la clase para crear un nuevo objeto como este:</target>
        </trans-unit>
        <trans-unit id="ebb370d6c8485fb5d4a2404e866af0e40f66e61e" translate="yes" xml:space="preserve">
          <source>Some environments expose &lt;em&gt;[[Prototype]]&lt;/em&gt; as &lt;code&gt;__proto__&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Algunos entornos exponen &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototipo]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81d0cf8739f68b4dbf2f185155554eed684a9f0c" translate="yes" xml:space="preserve">
          <source>Such a linking of objects using the prototype property is called prototypal inheritance. There, it is so simple, agree?</source>
          <target state="translated">Tal vinculaciÃ³n de objetos usando la propiedad prototipo se llama herencia prototÃ­pica.AhÃ­,es tan simple,Â¿estÃ¡s de acuerdo?</target>
        </trans-unit>
        <trans-unit id="6ed816d75e1c95434823496141b81fdcea2cbda9" translate="yes" xml:space="preserve">
          <source>Summary:</source>
          <target state="translated">Summary:</target>
        </trans-unit>
        <trans-unit id="9b90da30e2126fc79e156855a3d3c56add196624" translate="yes" xml:space="preserve">
          <source>Take for example this object:</source>
          <target state="translated">Tomemos por ejemplo este objeto:</target>
        </trans-unit>
        <trans-unit id="78b593da9026118be059ee6ac340d87c42a22fad" translate="yes" xml:space="preserve">
          <source>That means when you create an &lt;code&gt;instance&lt;/code&gt; of &lt;code&gt;Tree&lt;/code&gt;, you can call it's &lt;code&gt;branch&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso significa que cuando crea una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede llamar su &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;branch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71710652d7b4816db69c89e8a310aac0b866f00d" translate="yes" xml:space="preserve">
          <source>That's where prototypes come in. A prototype is a &quot;blueprint&quot; of properties that is inherited but not copied by instances. So this means that it exists only once in memory for all instances of an object and is shared by all of those instances.</source>
          <target state="translated">AhÃ­ es donde entran los prototipos.Un prototipo es un &quot;plano&quot; de propiedades que se hereda pero no se copia por instancias.Esto significa que existe sÃ³lo una vez en la memoria para todas las instancias de un objeto y es compartido por todas esas instancias.</target>
        </trans-unit>
        <trans-unit id="1b1e6e664f2f6088fa0652acd0a1823c05c2ebae" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;__proto__&lt;/code&gt; property has been deprecated, although it is implemented in most modern browsers a better way to obtain the prototype object reference would be:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ha quedado en desuso, aunque se implementa en la mayor&amp;iacute;a de los navegadores modernos, una mejor manera de obtener la referencia del objeto prototipo ser&amp;iacute;a:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24dc7865f37f55e0e7f59502ab234ce4300fdb17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; property &lt;em&gt;holds an object&lt;/em&gt; that will be assigned to &lt;code&gt;b.[[Prototype]]&lt;/code&gt; when you do &lt;code&gt;var b = new Bar&lt;/code&gt;. You can easily examine this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;contiene un objeto&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se asignar&amp;aacute; a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b.[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando haga &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var b = new Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puedes examinar esto f&amp;aacute;cilmente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0560bce1601dd3e00f9c71264e3134c14292d920" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; property of functions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de las funciones.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="739a7313cb0b24b266ce566a1212e78b57749fc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; property:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7c72595d56c1839a5b4bd46757e8d1b1a97cd3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String object&lt;/code&gt; exists only for one statement before it&amp;rsquo;s destroyed (a process called &lt;code&gt;autoboxing&lt;/code&gt;). Let's again get back to our &lt;code&gt;prototypal&lt;/code&gt;&lt;code&gt;inheritance&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;String object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; existe solo para una declaraci&amp;oacute;n antes de ser destruido (un proceso llamado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;autoboxing&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Volvamos de nuevo a nuestra &lt;/font&gt; &lt;code&gt;inheritance&lt;/code&gt; &lt;/font&gt; &lt;code&gt;prototypal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f9309aa7533ada9cbecccdaa13f94407b0b835a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[[Prototype]]&lt;/code&gt; property is part of what forms the &lt;code&gt;[[Prototype]]&lt;/code&gt; chain. This chain of &lt;code&gt;[[Prototype]]&lt;/code&gt; objects is what is examined when, for example, &lt;code&gt;[[Get]]&lt;/code&gt; or &lt;code&gt;[[Set]]&lt;/code&gt; operations are performed on an object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es parte de lo que forma la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta cadena de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es lo que se examina cuando, por ejemplo, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se realizan operaciones &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Get]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Set]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en un objeto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f46ef67da2a6814adb535fb3389ecfb6a71e226" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[[Prototype]]&lt;/code&gt; property:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="161b021e18a6b95700d4c8cf0ea483d90d6b335a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;sup&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/sup&gt; property of all objects&lt;sup&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/sup&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[1]&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de todos los objetos &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2]&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ece862f8ba8770dcb9e6a6682478dc2416551df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; keyword (configures the prototype chain when using the class syntax),</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (configura la cadena de prototipo cuando se usa la sintaxis de clase),&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b343b9bc29dfa64b78cc8d23e762c5b0b782a88e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; operator (configures the prototype chain on the default object returned from a constructor function),</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operador (configura la cadena de prototipo en el objeto predeterminado devuelto por una funci&amp;oacute;n de constructor),&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95a51d09dda468b174d273b34c151a5eb01a0d1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prototype&lt;/code&gt; of &lt;code&gt;Bar&lt;/code&gt; is &lt;code&gt;Foo&lt;/code&gt;, &lt;code&gt;prototype&lt;/code&gt; of &lt;code&gt;Foo&lt;/code&gt; is &lt;code&gt;Object&lt;/code&gt; and if you look closely the &lt;code&gt;prototype&lt;/code&gt; of &lt;code&gt;Foo&lt;/code&gt; is related to &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y, si se mira de cerca, el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; relacionado con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df78d91123a923fff066c13c885618c518ae0655" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prototype&lt;/code&gt; property gives no information of the &lt;em&gt;subject's&lt;/em&gt; prototype chain, but of objects &lt;em&gt;created by&lt;/em&gt; the subject.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no proporciona informaci&amp;oacute;n de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena de prototipos &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;del sujeto&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , sino de los objetos &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;creados por&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el sujeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b97e95601e2caf4caa88430b4dc754abba772827" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Function type objects&lt;/strong&gt; are the ones that return the string &lt;strong&gt;'function'&lt;/strong&gt; with &lt;strong&gt;typeof&lt;/strong&gt; operator. 
All the user defined functions and all the JavaScript built in objects that can create new objects by using new operator fall into this category. For eg.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Function&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son los que devuelven la cadena &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'function'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todas las funciones definidas por el usuario y todos los objetos integrados de JavaScript que pueden crear nuevos objetos mediante el uso de un nuevo operador entran en esta categor&amp;iacute;a. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ej.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56d86db4ceab3ec83115b15933b5831cc0c116db" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Prototype&lt;/strong&gt; creates &lt;strong&gt;new object&lt;/strong&gt; by cloning existing &lt;strong&gt;object&lt;/strong&gt;. So really when we think about prototype we can really think &lt;strong&gt;cloning or making&lt;/strong&gt; a copy of something instead of making it up.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prototipo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; crea un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nuevo objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; clonando un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; existente &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, cuando pensamos en el prototipo, podemos pensar en &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clonar o hacer&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una copia de algo en lugar de inventarlo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bd6ac781e06b5b3a6cec0c62459adb65300cd62" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;string&lt;/strong&gt;,&lt;strong&gt;number&lt;/strong&gt; and &lt;strong&gt;boolean&lt;/strong&gt; data types can be represented both as &lt;strong&gt;Objects&lt;/strong&gt; and &lt;strong&gt;Non objects&lt;/strong&gt;.When they are represented as objects their typeof is always === 'object'. We shall come back to this once we understand the object data types.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipos de datos de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;n&amp;uacute;mero&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;booleanos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se pueden representar como &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Objetos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No objetos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Cuando se representan como objetos, su tipo de siempre es === 'objeto'. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Volveremos a esto una vez que comprendamos los tipos de datos del objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8577d42ff998b0cfba6ce04e82f6c5d436e22aa4" translate="yes" xml:space="preserve">
          <source>The above diagram looks bit complicated, but brings out the whole picture on how &lt;code&gt;prototype chaining&lt;/code&gt; works. Let's walk through this slowly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El diagrama anterior parece un poco complicado, pero muestra la imagen completa de c&amp;oacute;mo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciona el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype chaining&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pasemos por esto lentamente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="968cd07d3bdba98a6f10247da2969b50e37b575b" translate="yes" xml:space="preserve">
          <source>The above is my understanding. I am making it a community wiki, so people can correct me if I am wrong.</source>
          <target state="translated">Lo anterior es de mi conocimiento.Lo estoy convirtiendo en un wiki de la comunidad,para que la gente pueda corregirme si me equivoco.</target>
        </trans-unit>
        <trans-unit id="2c7f474464d52ad7ae084e058020bfc177ae400f" translate="yes" xml:space="preserve">
          <source>The advantage of adding a function / variable to the prototype is that it has to be in the memory only once, not for every instance.</source>
          <target state="translated">La ventaja de aÃ±adir una variable de funciÃ³n al prototipo es que tiene que estar en la memoria sÃ³lo una vez,no para todas las instancias.</target>
        </trans-unit>
        <trans-unit id="b5537ac2f515dbdf82fb85a48b6d1e044f709c45" translate="yes" xml:space="preserve">
          <source>The apply() method calls a function with a given this value and
  arguments provided as an array (or an array-like object).</source>
          <target state="translated">El mÃ©todo apply()llama a una funciÃ³n con un valor dado de este valor y argumentos proporcionados como un array (o un objeto tipo array).</target>
        </trans-unit>
        <trans-unit id="5c699def1d6a340923e2a07d768ff3f49b035bc4" translate="yes" xml:space="preserve">
          <source>The blue lines represent prototype chains, the other coloured lines represent other relationships:</source>
          <target state="translated">Las lÃ­neas azules representan cadenas prototipo,las otras lÃ­neas de color representan otras relaciones:</target>
        </trans-unit>
        <trans-unit id="2a4578c5b1468a10dd5d8d60c858bcf743a0a6d7" translate="yes" xml:space="preserve">
          <source>The built in object &lt;strong&gt;Math&lt;/strong&gt; is &lt;strong&gt;typeof&lt;/strong&gt;===&lt;strong&gt;'object'&lt;/strong&gt;. Hence a new object of type Math cannot be created by new operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El objeto incorporado &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Math&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'objeto'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, un nuevo objeto de tipo Math no puede ser creado por un nuevo operador.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f20bdf821bd9cf510187931b7bd057147e81e865" translate="yes" xml:space="preserve">
          <source>The call() method calls a function with a given this value and
  arguments provided individually.</source>
          <target state="translated">El mÃ©todo call()llama a una funciÃ³n con un valor dado y argumentos proporcionados individualmente.</target>
        </trans-unit>
        <trans-unit id="8fe41dbdd05c507c0437d01a5845086e63e66808" translate="yes" xml:space="preserve">
          <source>The chain in upward direction looks like this:</source>
          <target state="translated">La cadena en direcciÃ³n ascendente se ve asÃ­:</target>
        </trans-unit>
        <trans-unit id="4dbb683a4341522fd20ba6134af3123fa22a5e19" translate="yes" xml:space="preserve">
          <source>The class syntax introduced in ES2015 simplifies things, by providing &lt;code&gt;extends&lt;/code&gt; as the &quot;one true way&quot; to configure the prototype chain in order to simulate classical inheritance in JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La sintaxis de clase introducido en las cosas ES2015 simplifica, proporcionando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como el &quot;verdadero camino&quot; para configurar la cadena de prototipo con el fin de simular la herencia cl&amp;aacute;sica en JavaScript.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="294a2f4d81f30e6efb14e124ad581924faf12546" translate="yes" xml:space="preserve">
          <source>The concept of &lt;code&gt;prototypal&lt;/code&gt; inheritance is one of the most complicated for many developers. Let's try to understand the root of problem to understand &lt;code&gt;prototypal inheritance&lt;/code&gt; better. Let's start with a &lt;code&gt;plain&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El concepto de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;herencia &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es uno de los m&amp;aacute;s complicados para muchos desarrolladores. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Intentemos comprender la ra&amp;iacute;z del problema para comprender &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mejor la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypal inheritance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Comencemos con una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;plain&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4202ac448e9e806292d729446f5ed2ca97966c9c" translate="yes" xml:space="preserve">
          <source>The earlier presented graphic can then be extended to this (the original &lt;code&gt;Thief.prototype&lt;/code&gt; is left out):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El gr&amp;aacute;fico presentado anteriormente se puede extender a esto (el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thief.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; original de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Thief&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se deja fuera):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6d557fdbd98c2f01910e237985ad11b07b68262" translate="yes" xml:space="preserve">
          <source>The exact same logic also explains &lt;code&gt;d.inc&lt;/code&gt; and &lt;code&gt;d.inc2&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La misma l&amp;oacute;gica exacta tambi&amp;eacute;n explica &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d.inc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d.inc2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="071179b58595f70b3e0246c8299c5223b4b434eb" translate="yes" xml:space="preserve">
          <source>The first line sets &lt;code&gt;c.i&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; as explained in &quot;4)&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La primera l&amp;iacute;nea establece &lt;/font&gt;&lt;/font&gt; &lt;code&gt;c.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como se explica en &quot;4)&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfcb48bc09a18643a47ba25dcb26645262528566" translate="yes" xml:space="preserve">
          <source>The first question would be &lt;strong&gt;how &lt;code&gt;this&lt;/code&gt; keyword could be useful without using &lt;code&gt;new&lt;/code&gt; keyword&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La primera pregunta ser&amp;iacute;a &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c&amp;oacute;mo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave podr&amp;iacute;a ser &amp;uacute;til sin usar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2bbd054869ff723b04d25a27a791c02b576fdc2" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;Person&lt;/code&gt; itself</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; misma&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a56602d2b6e90afd8075ac6fcb4e4fef8bea591" translate="yes" xml:space="preserve">
          <source>The interface to standard classes become extensible. For example, you are using the &lt;code&gt;Array&lt;/code&gt; class and you also need to add a custom serializer for all your array objects. Would you spend time coding up a subclass, or use composition or ... The prototype property solves this by letting the users control the exact set of members/methods available to a class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La interfaz con las clases est&amp;aacute;ndar se vuelve extensible. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, est&amp;aacute; utilizando la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y tambi&amp;eacute;n necesita agregar un serializador personalizado para todos sus objetos de matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Pasar&amp;iacute;a tiempo codificando una subclase, o usar&amp;iacute;a composici&amp;oacute;n o ... La propiedad prototipo lo resuelve al permitir que los usuarios controlen el conjunto exacto de miembros / m&amp;eacute;todos disponibles para una clase.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8a5278d41e6f81e5c870084bdee36db805218aa" translate="yes" xml:space="preserve">
          <source>The obj has become a class which can now be instantiated. Multiple instances of obj can exist and they all have the &lt;code&gt;test&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El obj se ha convertido en una clase que ahora se puede instanciar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pueden existir varias instancias de obj y todas tienen la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8ed29dc6612f51a31177919321b6fb313d0b80c" translate="yes" xml:space="preserve">
          <source>The object datatypes can be further divided into two types</source>
          <target state="translated">Los tipos de datos de los objetos pueden dividirse a su vez en dos tipos</target>
        </trans-unit>
        <trans-unit id="8ef0237671cf69591e3f8b021ff31a9518df95f5" translate="yes" xml:space="preserve">
          <source>The object that will act as prototype when the function is called as a constructor</source>
          <target state="translated">El objeto que actuarÃ¡ como prototipo cuando la funciÃ³n se llame como constructor</target>
        </trans-unit>
        <trans-unit id="1e5e14fe193fe8a5cd8cd4d65c97709f9b4c3c83" translate="yes" xml:space="preserve">
          <source>The objects thus created are all &lt;strong&gt;&lt;em&gt;Non Function type objects&lt;/em&gt;&lt;/strong&gt; and return their &lt;strong&gt;typeof&lt;/strong&gt;===&lt;strong&gt;'object'&lt;/strong&gt;. In all these cases the object &quot;a&quot; cannot further create 
objects using operator new. So the following is wrong</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los objetos as&amp;iacute; creados son todos los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos que no son de tipo de funciones&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y devuelven su &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'objeto'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En todos estos casos, el objeto &quot;a&quot; no puede crear m&amp;aacute;s objetos usando el operador new. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces lo siguiente est&amp;aacute; mal&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bb6ebc6ed49049356585031df45806c66391473" translate="yes" xml:space="preserve">
          <source>The other prototype chain is not longer: &lt;code&gt;Thief&lt;/code&gt; and &lt;code&gt;Person&lt;/code&gt; are siblings sharing the same parent in their prototype chain:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La otra cadena de prototipos ya no es: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thief&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son hermanos que comparten el mismo padre en su cadena de prototipos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6feced8f881972f18f04637769fb7219dcaa3ac1" translate="yes" xml:space="preserve">
          <source>The prototype chain for various objects work out as follows.</source>
          <target state="translated">El prototipo de cadena para varios objetos funciona de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="9cd3c03c55b66f267fcbca0018211802743659e2" translate="yes" xml:space="preserve">
          <source>The prototype chain of every object ultimately traces back to Object.prototype (Unless the object is created using Object.create(null) in which case the object has no prototype).</source>
          <target state="translated">La cadena de prototipos de cada objeto se remonta,en Ãºltima instancia,a Object.prototype (a menos que el objeto se cree utilizando Object.create(null),en cuyo caso el objeto no tiene prototipo).</target>
        </trans-unit>
        <trans-unit id="34d7b55597c242fac21097965af67f8a385115ea" translate="yes" xml:space="preserve">
          <source>The prototype chain of every object ultimately traces back to Object.prototype (which itself does not have any prototype object) .
Following code can be used for tracing the prototype chain of an object</source>
          <target state="translated">La cadena de prototipos de cada objeto se remonta en Ãºltima instancia a Object.prototype (que en sÃ­ mismo no tiene ningÃºn objeto prototipo).El siguiente cÃ³digo puede ser usado para trazar la cadena de prototipos de un objeto</target>
        </trans-unit>
        <trans-unit id="cd8dedef06e017d9ce35dc7d39e963eb0dcdbea4" translate="yes" xml:space="preserve">
          <source>The result &lt;code&gt;f.constructor == F&lt;/code&gt; is intuitively correct, since &lt;code&gt;F&lt;/code&gt; is used to construct &lt;code&gt;f&lt;/code&gt;, e.g. set fields, much like in classic OOP languages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El resultado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f.constructor == F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es intuitivamente correcto, ya que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se utiliza para construir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por ejemplo, establecer campos, de forma muy parecida a los lenguajes cl&amp;aacute;sicos de OOP.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a51b020b73fe84a79e1e49f6afb49841810ea1ab" translate="yes" xml:space="preserve">
          <source>The seven Koans of prototype</source>
          <target state="translated">Los siete Koans del prototipo</target>
        </trans-unit>
        <trans-unit id="526b0a35ac8072f512aa113d36919e8000921e8a" translate="yes" xml:space="preserve">
          <source>The standardized accessor (ie. getter/setter) property named &lt;code&gt;__proto__&lt;/code&gt; (similar to 4.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La propiedad de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; estandarizado (es decir, getter / setter) denominada &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (similar a 4.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="990d2d3e711bac658c94a8f8517073a731d0ce74" translate="yes" xml:space="preserve">
          <source>The user defined functions are special case.</source>
          <target state="translated">Las funciones definidas por el usuario son un caso especial.</target>
        </trans-unit>
        <trans-unit id="d149731627fd28ecdc13b42fec745d773696796f" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; is a function. In fact, it is &lt;code&gt;Function.prototype&lt;/code&gt;. Since &lt;code&gt;Person&lt;/code&gt; was created as a function, it shares the same prototype function object that all functions have. It is the same as &lt;code&gt;Person.__proto__&lt;/code&gt;, but that property should not be used. Anyway, with &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; you effectively walk up the ladder of what is called the prototype chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El valor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una funci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De hecho, es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dado que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se cre&amp;oacute; como una funci&amp;oacute;n, comparte el mismo objeto de funci&amp;oacute;n prototipo que tienen todas las funciones. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es lo mismo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero esa propiedad no debe usarse. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De todos modos, con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; efectivamente &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;subes&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por la escalera de lo que se llama la cadena del prototipo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55158a52e1f0e56b614ff422296621820abe40d1" translate="yes" xml:space="preserve">
          <source>The value pointed at by the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object, is colloquially known as &quot;the prototype of that object.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El valor se&amp;ntilde;alado por el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de un objeto, se conoce coloquialmente como &quot;el prototipo de ese objeto&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ace089e512ccf3f29213081611ea8aba7bc5c250" translate="yes" xml:space="preserve">
          <source>There are some crucial points that we have to consider before going through the prototype concept.</source>
          <target state="translated">Hay algunos puntos cruciales que debemos considerar antes de pasar por el concepto de prototipo.</target>
        </trans-unit>
        <trans-unit id="2f37a169d19c5e7c5d00aad1cf25accf7850f92b" translate="yes" xml:space="preserve">
          <source>There are two instance &lt;code&gt;b1&lt;/code&gt; and &lt;code&gt;b2&lt;/code&gt;, whose constructor is &lt;code&gt;Bar&lt;/code&gt; and parent is Foo and has two methods from prototype chain &lt;code&gt;identify&lt;/code&gt; and &lt;code&gt;speak&lt;/code&gt; via &lt;code&gt;Bar&lt;/code&gt; and &lt;code&gt;Foo&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay dos instancias &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , cuyo constructor es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y el padre es Foo y tiene dos m&amp;eacute;todos de prototipo de cadena para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;identify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;speak&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="700d42d0b87d53a12f6ebf93202bbf0069f077b9" translate="yes" xml:space="preserve">
          <source>There are two types of objects &lt;strong&gt;Function types&lt;/strong&gt; and &lt;strong&gt;Non Function types&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay dos tipos de objetos: Tipos de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tipos de &lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no funci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="050daafbf13667ec15e2ee78a6bfa7bdc3cb8cdf" translate="yes" xml:space="preserve">
          <source>There is no function object in this chain (although that could be).</source>
          <target state="translated">No hay ningÃºn objeto funcional en esta cadena (aunque podrÃ­a serlo).</target>
        </trans-unit>
        <trans-unit id="413e84bf597df31670981d314b2c5f2bf51d62e4" translate="yes" xml:space="preserve">
          <source>There's two distinct but related entities here that need explaining:</source>
          <target state="translated">Hay dos entidades distintas pero relacionadas aquÃ­ que necesitan ser explicadas:</target>
        </trans-unit>
        <trans-unit id="22870f2d17c6bb3d54b6c8df212d1cc122d68c4b" translate="yes" xml:space="preserve">
          <source>These are two different things.</source>
          <target state="translated">Son dos cosas diferentes.</target>
        </trans-unit>
        <trans-unit id="f3eae4b62cf0520d808b87fda66383d939e41043" translate="yes" xml:space="preserve">
          <source>These data types return following when you use the &lt;strong&gt;typeof&lt;/strong&gt; operator</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estos tipos de datos devuelven los siguientes cuando usa el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0b72ce0baa932e211605865132a5567f8020dfd" translate="yes" xml:space="preserve">
          <source>Think of prototypes as an extra vtable-pointer. When some members are missing from the original class, the prototype is looked up at runtime.</source>
          <target state="translated">Piensa en los prototipos como un vtable-pointer extra.Cuando faltan algunos miembros de la clase original,el prototipo se mira en tiempo de ejecuciÃ³n.</target>
        </trans-unit>
        <trans-unit id="d5393f0f04189ae4dafb2176ce237475a257756b" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;__proto__&lt;/code&gt; property refers to the &lt;code&gt;prototype&lt;/code&gt; property of the constructor function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; se&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la funci&amp;oacute;n constructora.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9acfeaac06c4d06a3432d81b1056bf5043bb16c9" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;&quot;internal reference&quot;&lt;/strong&gt; that is created in the object for referencing inherited properties is known as the &lt;strong&gt;object's prototype&lt;/strong&gt; (which references the object referenced by Constructor's &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property but is different from it). For any object (Function or Non Function) this can be retrieved using &lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt; method. Using this method one can trace the prototype chain of an object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;referencia interna&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se crea en el objeto para hacer referencia a propiedades heredadas se conoce como el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prototipo del objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (que hace referencia al objeto al que hace referencia la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;prototipo&quot; del&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; constructor pero es diferente de &amp;eacute;l). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para cualquier objeto (Funci&amp;oacute;n o No Funci&amp;oacute;n) esto se puede recuperar utilizando el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.getPrototypeOf ()&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usando este m&amp;eacute;todo, se puede rastrear la cadena prototipo de un objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35021a936654ba09c718fc5b956b583cc7c4e83d" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;&quot;prototype&quot; property&lt;/strong&gt; is only present in the &lt;strong&gt;Function type objects&lt;/strong&gt; 
(and never in &lt;strong&gt;Non Function type objects&lt;/strong&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &quot;prototipo&quot;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo est&amp;aacute; presente en los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo Funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (y nunca en los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos de tipo No Funci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f4f65bc9aedbc2d26edb0e6f83543831f0c5128" translate="yes" xml:space="preserve">
          <source>This article &lt;a href=&quot;https://javascript.info/class#not-just-a-syntax-sugar&quot;&gt;https://javascript.info/class#not-just-a-syntax-sugar&lt;/a&gt; mentions further effects of &lt;code&gt;class&lt;/code&gt; worth knowing. Some of them may not be achievable without the &lt;code&gt;class&lt;/code&gt; keyword (TODO check which):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este art&amp;iacute;culo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javascript.info/class#not-just-a-syntax-sugar&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://javascript.info/class#not-just-a-syntax-sugar&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; menciona otros efectos de la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; vale &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pena conocer. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Algunos de ellos pueden no ser alcanzables sin la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (TODO verifique cu&amp;aacute;l):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5a1a1158a1a3652a4f8afcf1664264e3d35874b" translate="yes" xml:space="preserve">
          <source>This article is long. But I am sure it will clear most of your queries 
regarding the &quot;prototypical&quot; nature of JavaScript Inheritance. And even more. Please read the complete article.</source>
          <target state="translated">Este artÃ­culo es largo.Pero estoy seguro de que aclararÃ¡ la mayorÃ­a de sus dudas sobre la naturaleza &quot;prototÃ­pica&quot; de la herencia de JavaScript.Y aÃºn mÃ¡s.Por favor,lea el artÃ­culo completo.</target>
        </trans-unit>
        <trans-unit id="08e6f5560f11607190487033cae0c4cf09fa73c8" translate="yes" xml:space="preserve">
          <source>This basically alters the &lt;code&gt;[[Prototype]]&lt;/code&gt; chain allowing properties that are defined on the object assigned to &lt;code&gt;Function.prototype&lt;/code&gt; to be seen by any object created by the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;B&amp;aacute;sicamente, esto altera la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; permitiendo que las propiedades definidas en el objeto asignado a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sean vistas por cualquier objeto creado por la funci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d896434b4bd90b6337ba89ce36c21af0f6f72d07" translate="yes" xml:space="preserve">
          <source>This diagram shows many language predefined object nodes:</source>
          <target state="translated">Este diagrama muestra muchos nodos de objetos predefinidos en el lenguaje:</target>
        </trans-unit>
        <trans-unit id="9025d80c98b99dcd9b6fc5ec29002f4d9ffaec90" translate="yes" xml:space="preserve">
          <source>This does EXACTLY the same as the previous version of the &lt;code&gt;keyValueStore&lt;/code&gt; object, except that all of its methods are now put in a prototype. What this means, is that all of the 100 instances now share these four methods instead of each having their own copy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto hace EXACTAMENTE lo mismo que la versi&amp;oacute;n anterior del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , excepto que todos sus m&amp;eacute;todos ahora se colocan en un prototipo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que esto significa es que las 100 instancias ahora comparten estos cuatro m&amp;eacute;todos en lugar de que cada uno tenga su propia copia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e08ee84b359fc8407d9c2f59789b04fd166d001b" translate="yes" xml:space="preserve">
          <source>This has things like &lt;code&gt;.toString, .toValue, .hasOwnProperty&lt;/code&gt; etc...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto tiene cosas como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.toString, .toValue, .hasOwnProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; etc.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c70598b5bbbd87cec0b6da78edc5bd06c14523b" translate="yes" xml:space="preserve">
          <source>This is a property that exists on all&lt;sup&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/sup&gt; objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta es una propiedad que existe en todos los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2]&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5fa8c6f0946dde273ddb9604454c21fcb7361c5" translate="yes" xml:space="preserve">
          <source>This is a very simple prototype based object model that would be considered as a sample during the explanation, with no comment yet:</source>
          <target state="translated">Se trata de un modelo de objeto basado en un prototipo muy simple que se considerarÃ­a como una muestra durante la explicaciÃ³n,sin ningÃºn comentario todavÃ­a:</target>
        </trans-unit>
        <trans-unit id="6d62795d7cdd8505efe9be324c47bb2624bab344" translate="yes" xml:space="preserve">
          <source>This is because &lt;strong&gt;when a new object is created (using new operator)it inherits all properties and methods from Constructor function's current prototype object i.e. an&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;internal reference&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;is created in the newly created object that references the object referenced by Constructor function's current prototype object.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se debe a que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuando se crea un nuevo objeto (usando un nuevo operador) hereda todas las propiedades y m&amp;eacute;todos del objeto prototipo actual de la funci&amp;oacute;n Constructor, es decir, &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se crea &lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una &lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;referencia interna&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el objeto reci&amp;eacute;n creado que hace referencia al objeto referenciado por el objeto prototipo actual de la funci&amp;oacute;n Constructor.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bcf28287745328dbe5a8624a1872b4d744f2f572" translate="yes" xml:space="preserve">
          <source>This is the so-called &lt;em&gt;prototype chain&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta es la llamada &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena prototipo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c87bd21d9c4e9dbd47806175bb0f1d38b294827" translate="yes" xml:space="preserve">
          <source>This is what happens behind the scenes:
// what the &lt;code&gt;JavaScript&lt;/code&gt; engine does</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es lo que sucede detr&amp;aacute;s de escena: // lo que hace el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;motor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a10730f851fa7149ce738e78ef16148c432249e0" translate="yes" xml:space="preserve">
          <source>This symmetry can be broken by explicitly assigning a different object to the &lt;code&gt;prototype&lt;/code&gt; property (more about that later).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta simetr&amp;iacute;a se puede romper asignando expl&amp;iacute;citamente un objeto diferente a la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (m&amp;aacute;s sobre eso m&amp;aacute;s adelante).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="638323a921bc7286a77e12bf97d8f3013a684830" translate="yes" xml:space="preserve">
          <source>This way, any time you do &lt;code&gt;new Bar;&lt;/code&gt; the prototype chain is set up for you, you get everything defined on &lt;code&gt;Bar.prototype&lt;/code&gt; and everything defined on &lt;code&gt;Object.prototype&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De esta manera, cada vez que haces un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Bar;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la cadena de prototipos est&amp;aacute; configurada para usted, obtiene todo lo definido en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y todo lo definido en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e00297b8bcfe8f20cb6ddea20a7e2be8b0c46326" translate="yes" xml:space="preserve">
          <source>This, is a simplified example of how prototypes work, where a tree of data is searched for the thing you're looking for.</source>
          <target state="translated">Este es un ejemplo simplificado de cÃ³mo funcionan los prototipos,en el que se busca en un Ã¡rbol de datos lo que se estÃ¡ buscando.</target>
        </trans-unit>
        <trans-unit id="c34bd44153421ecb4ee7a84a5cf2f9e94314d16d" translate="yes" xml:space="preserve">
          <source>To summarise:</source>
          <target state="translated">En resumen:</target>
        </trans-unit>
        <trans-unit id="1880ce0a92d66ac7be9b42c43f20dd758f47083c" translate="yes" xml:space="preserve">
          <source>To take the first step we have to figure out, how JavaScript functions actually work , as a class like function using &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; keyword in it or just as a regular function with its arguments, what it does and what it returns.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para dar el primer paso, tenemos que descubrir c&amp;oacute;mo funcionan realmente las funciones de JavaScript, como una clase como una funci&amp;oacute;n que usa &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;this&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave o simplemente como una funci&amp;oacute;n regular con sus argumentos, qu&amp;eacute; hace y qu&amp;eacute; devuelve.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df7c9dfab28179cd2982c04c0af88014763a54b9" translate="yes" xml:space="preserve">
          <source>Until now I've been extending the base object, now I create another object and then inheriting from Person.</source>
          <target state="translated">Hasta ahora he estado ampliando el objeto base,ahora creo otro objeto y luego lo heredo de Persona.</target>
        </trans-unit>
        <trans-unit id="1d4e3821f462de88d9514c59695341a4e93fd936" translate="yes" xml:space="preserve">
          <source>Update: correct way</source>
          <target state="translated">ActualizaciÃ³n:forma correcta</target>
        </trans-unit>
        <trans-unit id="83d91100eeefc6d4f17559200dd6e80c65042ea5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;new&lt;/code&gt; with constructor functions allows us to simulate classical inheritance in JavaScript; although JavaScript's inheritance system is - as we have seen - prototypical, and not class-based.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El uso de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciones &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con constructor nos permite simular la herencia cl&amp;aacute;sica en JavaScript; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aunque el sistema de herencia de JavaScript es, como hemos visto, protot&amp;iacute;pico y no est&amp;aacute; basado en clases.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bddc98d1d24dd45bb69b10ad8884565c46657b1" translate="yes" xml:space="preserve">
          <source>We can also add &lt;code&gt;primitives&lt;/code&gt; or &lt;code&gt;objects&lt;/code&gt; to our &lt;code&gt;Prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n podemos agregar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;primitives&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; u &lt;/font&gt;&lt;/font&gt; &lt;code&gt;objects&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a nuestro &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b3fc1203624a21f622f753ab310467b6ee55a49" translate="yes" xml:space="preserve">
          <source>We have modified the &lt;code&gt;Root&lt;/code&gt; and added a &lt;code&gt;function&lt;/code&gt; branch to it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hemos modificado la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Root&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y le &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hemos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;agregado una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rama de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10a8a5e09ba4288070fb87f9d8442e3eab9dc5b8" translate="yes" xml:space="preserve">
          <source>What is important here is that Derp does not give the pen to you, as you don't have a direct &lt;em&gt;relationship&lt;/em&gt; with him.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo importante aqu&amp;iacute; es que Derp no te da la pluma, ya que no tienes una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;relaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; directa &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;con &amp;eacute;l.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="308c697d81505ef2c3ab0d8f16faa8f1f568e725" translate="yes" xml:space="preserve">
          <source>What's stored here is another object, which, as an object itself, has a &lt;code&gt;[[Prototype]]&lt;/code&gt; of its own that points to another object. That other object has a &lt;code&gt;[[Prototype]]&lt;/code&gt; of its own. This story continues until you reach the prototypical object that provides methods that are accessible on all objects (like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString&quot;&gt;&lt;code&gt;.toString&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que se almacena aqu&amp;iacute; es otro objeto, que, como un objeto en s&amp;iacute;, tiene un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; propio que apunta a otro objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ese otro objeto tiene un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; propio. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta historia contin&amp;uacute;a hasta llegar al objeto protot&amp;iacute;pico que proporciona m&amp;eacute;todos accesibles en todos los objetos (como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString&quot;&gt; &lt;code&gt;.toString&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3694f710d098fa715f0d5d1cc32e7707e441a5a" translate="yes" xml:space="preserve">
          <source>When I do &lt;code&gt;obj.property&lt;/code&gt;, where does JS look for &lt;code&gt;.property&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando hago &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &amp;iquest;d&amp;oacute;nde busca JS &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b6a529ab132f6333b5042f9ced780debc66b2d7" translate="yes" xml:space="preserve">
          <source>When a constructor creates an object, that object implicitly references the constructor&amp;rsquo;s &amp;ldquo;prototype&amp;rdquo; property for the purpose of resolving property references. The constructor&amp;rsquo;s &amp;ldquo;prototype&amp;rdquo; property can be referenced by the program expression constructor.prototype, and properties added to an object&amp;rsquo;s prototype are shared, through inheritance, by all objects sharing the prototype.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando un constructor crea un objeto, ese objeto hace referencia impl&amp;iacute;cita a la propiedad &quot;prototipo&quot; del constructor con el fin de resolver referencias de propiedad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La propiedad del &quot;prototipo&quot; del constructor puede ser referenciada por la expresi&amp;oacute;n de programa constructor.prototype, y las propiedades agregadas al prototipo de un objeto son compartidas, a trav&amp;eacute;s de la herencia, por todos los objetos que comparten el prototipo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2bfe48d3e49e62cf73169326ebe7fef41c61b3f" translate="yes" xml:space="preserve">
          <source>When a function is used as a constructor with the &lt;code&gt;new&lt;/code&gt; keyword the object gets  prototype. A reference to this prototype can be found on the &lt;code&gt;__proto__&lt;/code&gt; property of the newly created object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando se utiliza una funci&amp;oacute;n como constructor con la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave, el objeto obtiene el prototipo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede encontrar una referencia a este prototipo en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del objeto reci&amp;eacute;n creado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82f0ffb0fdb8a57c686a83e7bb71c7129e34adfb" translate="yes" xml:space="preserve">
          <source>When a property is accessed to just read it's value, its looked up in the scope chain. The search for the variable starts from the &lt;strong&gt;product&lt;/strong&gt; upwards to it's prototype. If such a variable is found in the search, the search is stopped right there, and the value is returned. If such a variable cannot be found in the scope chain, undefined is returned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando se accede a una propiedad para leer su valor, se busca en la cadena de alcance. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La b&amp;uacute;squeda de la variable comienza desde el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;producto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hacia arriba hasta su prototipo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se encuentra dicha variable en la b&amp;uacute;squeda, la b&amp;uacute;squeda se detiene all&amp;iacute; y se devuelve el valor. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si dicha variable no se puede encontrar en la cadena de alcance, se devuelve indefinido.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11f5fa09496d74fe4a1922d148fbe3e307bee7bb" translate="yes" xml:space="preserve">
          <source>When a property is written(altered), then the property is always written on the &lt;strong&gt;product&lt;/strong&gt; object. If the &lt;strong&gt;product&lt;/strong&gt; does not have such a property already, it is implicitly created and written.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando una propiedad se escribe (se modifica), la propiedad siempre se escribe en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto del &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;producto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;producto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a&amp;uacute;n no tiene dicha propiedad, se crea y escribe impl&amp;iacute;citamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fcec556ef2aa94d6710268da1bdec50f8d1551e" translate="yes" xml:space="preserve">
          <source>When we write &lt;code&gt;f.constructor&lt;/code&gt;, JavaScript does the &lt;code&gt;.&lt;/code&gt; lookup as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando escribimos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , JavaScript hace el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;buscar como:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9f43d7f42e2d64828fbcea2a70441dce8c6281e" translate="yes" xml:space="preserve">
          <source>When you &lt;em&gt;do&lt;/em&gt; make assignments to &lt;code&gt;Function.prototype&lt;/code&gt; all you are doing is extending the prototype chain to include another object. It's like an insertion in a singly linked list.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hacer&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; asignaciones realice en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; todo lo que est&amp;aacute; haciendo es extender la cadena de prototipo para incluir otro objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es como una inserci&amp;oacute;n en una lista individualmente vinculada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f3c324ba183f857de27c2aeeafc95f2bd1d3a08" translate="yes" xml:space="preserve">
          <source>While as said I can't call setAmountDue(), getAmountDue() on a Person.</source>
          <target state="translated">Mientras que como dije no puedo llamar a setAmountDue(),getAmountDue()en una persona.</target>
        </trans-unit>
        <trans-unit id="3adb0b0d5933c83516b3ac347d11102aa4cb09d8" translate="yes" xml:space="preserve">
          <source>Why is this usefull:</source>
          <target state="translated">Â¿Por quÃ© es Ãºtil esto?</target>
        </trans-unit>
        <trans-unit id="2446e1c4a0c9c983d22a0f4fe25bc995caf38c03" translate="yes" xml:space="preserve">
          <source>Without the class syntax, developers had to manually configure the prototype chain to achieve similar functionality to classical inheritance. This led to a preponderance of different ways to achieve this.</source>
          <target state="translated">Sin la sintaxis de la clase,los desarrolladores tuvieron que configurar manualmente la cadena de prototipos para lograr una funcionalidad similar a la de la herencia clÃ¡sica.Esto condujo a una preponderancia de diferentes formas de lograrlo.</target>
        </trans-unit>
        <trans-unit id="82ad9964aff33a7fae6d367983f38443929e774c" translate="yes" xml:space="preserve">
          <source>You can avoid &lt;code&gt;.&lt;/code&gt; lookup with &lt;code&gt;obj.hasOwnProperty('key')&lt;/code&gt; and &lt;code&gt;Object.getOwnPropertyNames(f)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puedes evitarlo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;buscar con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.hasOwnProperty('key')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getOwnPropertyNames(f)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0eae619e62c4c1803774abb2b498918e68edcc45" translate="yes" xml:space="preserve">
          <source>You can find a graph of the relation of Javascript objects by their properties here:</source>
          <target state="translated">Puedes encontrar un grÃ¡fico de la relaciÃ³n de los objetos Javascript por sus propiedades aquÃ­:</target>
        </trans-unit>
        <trans-unit id="7219cbdc31f1ab1618e475dc21b4812f9486383f" translate="yes" xml:space="preserve">
          <source>You can jump back and forth between the two prototype chains:</source>
          <target state="translated">Puedes saltar de un lado a otro entre las dos cadenas del prototipo:</target>
        </trans-unit>
        <trans-unit id="e517cb8789da1d3b8f9095edf50ac5e0df256ef5" translate="yes" xml:space="preserve">
          <source>You can't actually see the link target (&lt;code&gt;Object.prototype&lt;/code&gt;) in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;new&lt;/a&gt; statement; instead the target is implied by the constructor (&lt;code&gt;Object&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En realidad, no puede ver el destino del enlace ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) en una &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nueva&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; declaraci&amp;oacute;n; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en cambio, el objetivo est&amp;aacute; impl&amp;iacute;cito en el constructor ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57c9e51f58a439e8f48d2831659d6bc67df4b3ad" translate="yes" xml:space="preserve">
          <source>You create the &lt;em&gt;[[Prototype]]&lt;/em&gt; link when creating an object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usted crea el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;enlace &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototipo]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando crea un objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ccacad21f5cbb195fee4f8bea5daaca9c11e1a04" translate="yes" xml:space="preserve">
          <source>You're in high-school, and you're in class and have a quiz that's due today, but you don't have a pen to fill out your answers. Doh!</source>
          <target state="translated">EstÃ¡s en el instituto,estÃ¡s en clase y tienes un examen que debes hacer hoy,pero no tienes un bolÃ­grafo para rellenar tus respuestas.Â¡Doh!</target>
        </trans-unit>
        <trans-unit id="1a688d50614f2b00815a588212c2c36453c98d26" translate="yes" xml:space="preserve">
          <source>You're sitting next to your friend Finnius, who might have a pen. You ask, and he looks around his desk unsuccessfully, but instead of saying &quot;I don't have a pen&quot;, he's a nice friend he checks with his other friend Derp if he has a pen. Derp does indeed have a spare pen and passes it back to Finnius, who passes it over to you to complete your quiz. Derp has entrusted the pen to Finnius, who has delegated the pen to you for use.</source>
          <target state="translated">EstÃ¡s sentado al lado de tu amigo Finnius,que podrÃ­a tener un bolÃ­grafo.Le preguntas,y Ã©l mira alrededor de su escritorio sin Ã©xito,pero en lugar de decir &quot;no tengo un bolÃ­grafo&quot;,es un buen amigo que comprueba con su otro amigo Derp si tiene un bolÃ­grafo.Derp tiene un bolÃ­grafo de repuesto y se lo pasa a Finnius,quien se lo pasa a usted para que complete su examen.Derp le ha confiado el bolÃ­grafo a Finnius,quien le ha delegado el bolÃ­grafo a usted para que lo use.</target>
        </trans-unit>
        <trans-unit id="2210886a547c650d55c3aa9d9ffff6029dd660a1" translate="yes" xml:space="preserve">
          <source>a. &amp;amp; b. Instead of these two steps you can have the exact same result by doing:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y b. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En lugar de estos dos pasos, puede obtener exactamente el mismo resultado haciendo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b523def3dc4d8951393218ef49700cd57e531453" translate="yes" xml:space="preserve">
          <source>a. first of all it makes an empty object, basically an empty hash like:</source>
          <target state="translated">a.En primer lugar hace un objeto vacÃ­o,bÃ¡sicamente un hachÃ­s vacÃ­o como:</target>
        </trans-unit>
        <trans-unit id="06ce42a61614d7a74f65884cc9c9489809dadc4e" translate="yes" xml:space="preserve">
          <source>a. first way is just to call the function as a regular function:</source>
          <target state="translated">a.La primera forma es llamar a la funciÃ³n como una funciÃ³n regular:</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="747eaff32129c10b3603b6e3bb5cf3560caca4a3" translate="yes" xml:space="preserve">
          <source>and now &lt;strong&gt;without using &lt;code&gt;new&lt;/code&gt; keyword&lt;/strong&gt; how we could use these functions. So JavaScript has 3 different ways to do that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y ahora &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sin usar una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; c&amp;oacute;mo podr&amp;iacute;amos usar estas funciones. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces JavaScript tiene 3 formas diferentes de hacer eso:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="270a485819e70fb5c889365a5fe2b1161f9e71cb" translate="yes" xml:space="preserve">
          <source>and now other objects are in peace, but it still doesn't seem to be a good practice. So we have still one more solutions, but to use this solution we should get back to that line of code where &lt;code&gt;person&lt;/code&gt; object got created (&lt;code&gt;var person = {};&lt;/code&gt;) then change it like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y ahora otros objetos est&amp;aacute;n en paz, pero todav&amp;iacute;a no parece ser una buena pr&amp;aacute;ctica. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;As&amp;iacute; que todav&amp;iacute;a tenemos una soluci&amp;oacute;n m&amp;aacute;s, pero para usar esta soluci&amp;oacute;n, deber&amp;iacute;amos volver a esa l&amp;iacute;nea de c&amp;oacute;digo donde &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se cre&amp;oacute; el objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var person = {};&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) y luego cambiarlo como:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bea2c43b740e3468b0797f8d81ffa93f7015aa5b" translate="yes" xml:space="preserve">
          <source>and now the &lt;code&gt;person&lt;/code&gt; object is like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y ahora el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es como:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="661c68bf46c0c3da88764bafeb5b9658118b2f68" translate="yes" xml:space="preserve">
          <source>and that's how inheritance works in JavaScript.</source>
          <target state="translated">y asÃ­ es como funciona la herencia en JavaScript.</target>
        </trans-unit>
        <trans-unit id="6b8d96ceb91b872268235e2929b43b012067d683" translate="yes" xml:space="preserve">
          <source>another scheme showing &lt;strong&gt;__proto__&lt;/strong&gt;, &lt;strong&gt;prototype&lt;/strong&gt; and &lt;strong&gt;constructor&lt;/strong&gt; relations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;otro esquema que muestra las relaciones &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prototipo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constructor&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b1bbcf13309abdf78f823b3e031f46729dc16b6" translate="yes" xml:space="preserve">
          <source>as you see using any of these two way &lt;code&gt;this&lt;/code&gt; would exactly point to the &lt;code&gt;person&lt;/code&gt; object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;como ve usando cualquiera de estos dos modos, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; apuntar&amp;iacute;a exactamente al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c26a5de286c4222075250d40c67537151a9b573" translate="yes" xml:space="preserve">
          <source>b. We can &lt;strong&gt;attach&lt;/strong&gt; them to an object, as its properties</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podemos &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;adjuntarlos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a un objeto, como sus propiedades&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe691ba9d0293f967e57a192521eebae76e0310c" translate="yes" xml:space="preserve">
          <source>b. the next step that JavaScript takes is to &lt;strong&gt;attach&lt;/strong&gt; the all prototype objects to the newly created object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el siguiente paso que toma JavaScript es &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;adjuntar&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; todos los objetos prototipo al objeto reci&amp;eacute;n creado&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e11f7639d23b2bc73655189a0a5dad8205ffb0c2" translate="yes" xml:space="preserve">
          <source>between a constructor and the prototype object that will be used for constructing objects</source>
          <target state="translated">entre un constructor y el objeto prototipo que se utilizarÃ¡ para construir objetos</target>
        </trans-unit>
        <trans-unit id="9ac06820b6c4ca173003422e282903264e66e63b" translate="yes" xml:space="preserve">
          <source>between an object and its constructor</source>
          <target state="translated">entre un objeto y su constructor</target>
        </trans-unit>
        <trans-unit id="af6622315c4f4a1bb153af5b5a466a4adfbd3c65" translate="yes" xml:space="preserve">
          <source>c. JavaScript has another way to provide the function with &lt;code&gt;this&lt;/code&gt;, which is using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;call&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;apply&lt;/a&gt; to invoke the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript tiene otra forma de proporcionar la funci&amp;oacute;n con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que est&amp;aacute; utilizando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;llamar&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aplicar&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para invocar la funci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14d36492392f6e9eb32129ca46c2667809a4bb2f" translate="yes" xml:space="preserve">
          <source>c. then it gives that object to the constructor,</source>
          <target state="translated">c.luego le da ese objeto al constructor,</target>
        </trans-unit>
        <trans-unit id="944991ca420147c47be82198f1d0f28c22fdd3ca" translate="yes" xml:space="preserve">
          <source>following automatically happens</source>
          <target state="translated">lo siguiente ocurre automÃ¡ticamente</target>
        </trans-unit>
        <trans-unit id="e9e469ab51077f3049787ec9c4af591de797f736" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;obj_n.prop_X&lt;/code&gt; doesn't exist, check &lt;code&gt;obj_n+1.prop_X&lt;/code&gt; where &lt;code&gt;obj_n+1 = obj_n.[[prototype]]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n.prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no existe, marque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n+1.prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n+1 = obj_n.[[prototype]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98878bceb45ce34551076d813362c5705957b889" translate="yes" xml:space="preserve">
          <source>if some &lt;code&gt;__proto__&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si alg&amp;uacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , devuelve &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="957397f1ce4597e6f03a21bafeffdccdc2862a09" translate="yes" xml:space="preserve">
          <source>in this case, this would be the current context object, which is usually is the global  &lt;code&gt;window&lt;/code&gt; object in the browser or &lt;code&gt;GLOBAL&lt;/code&gt; in &lt;code&gt;Node.js&lt;/code&gt;. It means we would have, window.name in browser or GLOBAL.name in Node.js, with &quot;George&quot; as its value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en este caso, este ser&amp;iacute;a el objeto de contexto actual, que es por lo general es el mundial &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objeto en el navegador o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GLOBAL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Node.js&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Significa que tendr&amp;iacute;amos window.name en el navegador o GLOBAL.name en Node.js, con &quot;George&quot; como su valor.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1e9838ad66b5acac772c2b80052e66f8bb6e81" translate="yes" xml:space="preserve">
          <source>in this part I'm gonna be trying to take all the steps which JavaScript takes, without using the &lt;code&gt;new&lt;/code&gt; keyword and &lt;code&gt;prototype&lt;/code&gt;, when you use &lt;code&gt;new&lt;/code&gt; keyword. so when we do &lt;code&gt;new Person(&quot;George&quot;)&lt;/code&gt;, &lt;code&gt;Person&lt;/code&gt; function serves as a constructor, These are what JavaScript does, one by one:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en esta parte voy a tratar de seguir todos los pasos que toma JavaScript, sin usar la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , cuando use una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;as&amp;iacute; que cuando hacemos una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Person(&quot;George&quot;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sirve como constructor. Esto es lo que hace JavaScript, uno por uno:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8b60a22e95f94b25f94178a01587a5b22f0b255" translate="yes" xml:space="preserve">
          <source>it evaluates &lt;code&gt;F&lt;/code&gt; with &lt;code&gt;this&lt;/code&gt; being the value that &lt;code&gt;new&lt;/code&gt; will return, which then gets assigned to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eval&amp;uacute;a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; siendo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el valor que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;devolver&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que luego se asigna a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bff474d1de3771b5e9dd9e8d5b475aeff41cee13" translate="yes" xml:space="preserve">
          <source>now the end result before simulating the other steps:
    Object {name: &quot;George&quot;}</source>
          <target state="translated">ahora el resultado final antes de simular los otros pasos:Objeto {nombre:&quot;George&quot;}</target>
        </trans-unit>
        <trans-unit id="f090cec5bdf24d256d779b2d37211c8e96960cea" translate="yes" xml:space="preserve">
          <source>now we can call the &lt;code&gt;getName&lt;/code&gt; function in our &lt;code&gt;my_person_prototype&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ahora podemos llamar a la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;getName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en nuestro &lt;/font&gt;&lt;/font&gt; &lt;code&gt;my_person_prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="ede1d521cd3748dac9815542baaaf55df7de6292" translate="yes" xml:space="preserve">
          <source>properties of &lt;code&gt;obj.__proto__.__proto__&lt;/code&gt;, and so on</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedades de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.__proto__.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y as&amp;iacute; sucesivamente&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d68f3e62d74843a67cb1c3164addcbaecebd36c5" translate="yes" xml:space="preserve">
          <source>properties of &lt;code&gt;obj.__proto__&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedades de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.__proto__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f54c786eb3d3ae288f749656124234986eda7990" translate="yes" xml:space="preserve">
          <source>prototype chain</source>
          <target state="translated">prototipo de cadena</target>
        </trans-unit>
        <trans-unit id="e0c912d4dcf17ff831277c0922d2e821e226325a" translate="yes" xml:space="preserve">
          <source>prototype chain can be technically extended as long as you want, each time by setting the prototype of the subclass equal to an object of the parent class.</source>
          <target state="translated">La cadena de prototipos puede extenderse tÃ©cnicamente tanto como se desee,cada vez estableciendo el prototipo de la subclase igual a un objeto de la clase superior.</target>
        </trans-unit>
        <trans-unit id="4abe20314da3f946b7e743a6a2f6170b9b8c2ae7" translate="yes" xml:space="preserve">
          <source>prototype chain ultimately falls back to Object.prototype.</source>
          <target state="translated">la cadena del prototipo finalmente recae en Objeto.prototipo.</target>
        </trans-unit>
        <trans-unit id="89b37e815336bf7ebbfbf64979db6bffe086c6fa" translate="yes" xml:space="preserve">
          <source>sets:</source>
          <target state="translated">sets:</target>
        </trans-unit>
        <trans-unit id="e94a3f708b00862014509df4f2cc93c12e2ff3ad" translate="yes" xml:space="preserve">
          <source>the prototype internal property, denoted as &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2&quot;&gt;in ES5&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la propiedad interna del prototipo, denotada como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en ES5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ae9fc273476a1b945442f7aac048be5f9abd6e9" translate="yes" xml:space="preserve">
          <source>the prototype property, as in &lt;code&gt;obj.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la propiedad del prototipo, como en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.prototype&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5e4668a0e4a6323de5e94029153d5d97840ee0f" translate="yes" xml:space="preserve">
          <source>then &lt;code&gt;new&lt;/code&gt; has set:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ha establecido:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a4a01450a1231a348a771bd61b5a299a2e893fa" translate="yes" xml:space="preserve">
          <source>then the constructor can do whatever it wants, because &lt;strong&gt;this&lt;/strong&gt; inside of that constructor is the object that was just created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;entonces el constructor puede hacer lo que quiera, porque &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;este&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dentro de ese constructor es el objeto que se acaba de crear.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f576b11bd87be0a0c3eecfa10723461a7eb5833" translate="yes" xml:space="preserve">
          <source>these 3 methods are the important initial steps to figure out the .prototype functionality.</source>
          <target state="translated">estos 3 mÃ©todos son los pasos iniciales importantes para averiguar la funcionalidad del .prototipo.</target>
        </trans-unit>
        <trans-unit id="e972f984201bef12b535fee7733a14678c62d136" translate="yes" xml:space="preserve">
          <source>this is the second step to understand the &lt;code&gt;.prototype&lt;/code&gt; functionality.this is what I use to simulate the process:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este es el segundo paso para comprender la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funcionalidad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es lo que uso para simular el proceso:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a80c6e28984a71a0b8d0d93aa0e77bfc7ac6c1f" translate="yes" xml:space="preserve">
          <source>this way we can call them like:</source>
          <target state="translated">de esta manera podemos llamarlos asÃ­:</target>
        </trans-unit>
        <trans-unit id="43d37aa6f9a31838f9f3674dfdffb9d9be138560" translate="yes" xml:space="preserve">
          <source>this way which is my favorite, we can easily call our functions like:</source>
          <target state="translated">de esta manera,que es mi favorita,podemos fÃ¡cilmente llamar a nuestras funciones como:</target>
        </trans-unit>
        <trans-unit id="505825b685f7c214441d8d78811c1a25cf9cf413" translate="yes" xml:space="preserve">
          <source>we can do this with our sample like:</source>
          <target state="translated">podemos hacer esto con nuestra muestra como:</target>
        </trans-unit>
        <trans-unit id="d238c7e63e3ead1f37e5c92ddc733d20364c8151" translate="yes" xml:space="preserve">
          <source>we have &lt;code&gt;my_person_prototype&lt;/code&gt; here similar to the prototype object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tenemos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;my_person_prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; aqu&amp;iacute; similar al objeto prototipo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44108b8768516452bc02899a0cb6437fdffad7d3" translate="yes" xml:space="preserve">
          <source>what is the exact purpose of this &quot;.prototype&quot; property?</source>
          <target state="translated">Â¿cuÃ¡l es el propÃ³sito exacto de esta propiedad &quot;.prototipo&quot;?</target>
        </trans-unit>
        <trans-unit id="f0daca7c8c95a8fa1c4019b4daf3f2dc098e1b6d" translate="yes" xml:space="preserve">
          <source>what it does is creating a new JavaScript &lt;code&gt;Object&lt;/code&gt; and attach the &lt;code&gt;propertiesObject&lt;/code&gt; to the &lt;code&gt;__proto__&lt;/code&gt; attribute. So to make sure you can do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lo que hace es crear un nuevo JavaScript &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y una el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;propertiesObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; atributo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, para asegurarse de que puede hacer:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5deb2c5df83283ff6a38b0d65f3fabb8eb880d5c" translate="yes" xml:space="preserve">
          <source>when we call a function in Javascript as &lt;code&gt;X.Y()&lt;/code&gt;, JavaScript automatically sets &lt;code&gt;this&lt;/code&gt; to equal &lt;code&gt;X&lt;/code&gt; inside the &lt;code&gt;Y()&lt;/code&gt; function call!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuando llamamos a una funci&amp;oacute;n en Javascript como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;X.Y()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , JavaScript autom&amp;aacute;ticamente establece &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para que sea igual a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dentro de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;llamada a la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Y()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="401e87265e4c30e83ad1ae9932568c3536246a3b" translate="yes" xml:space="preserve">
          <source>where as in the below code</source>
          <target state="translated">donde como en el siguiente cÃ³digo</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
