<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/572897">
    <body>
      <group id="572897">
        <trans-unit id="f5db9bea2d7b8a9f32a521f0389df5bac5554e4d" translate="yes" xml:space="preserve">
          <source>(Constructor) functions &lt;strong&gt;always&lt;/strong&gt; have a prototype property</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（コンストラクタ）関数には&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイププロパティがあります&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="516f3e09d25e57da757e6113f74de24a5daf64c3" translate="yes" xml:space="preserve">
          <source>-&lt;strong&gt;The easiest way&lt;/strong&gt; to do this is modifying the empty &lt;code&gt;person&lt;/code&gt; object, like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を行う&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も簡単な方法&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次のように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更することです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b32d9e0625c5dc0fe5da7511822a0304955150b" translate="yes" xml:space="preserve">
          <source>-&lt;strong&gt;The other way to attach a property&lt;/strong&gt; to an object is using the &lt;code&gt;prototype&lt;/code&gt; of that object that can be find in any JavaScript object with the name of &lt;code&gt;__proto__&lt;/code&gt;, and I have tried to explain it a bit on the summary part. So we could get the similar result by doing:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をオブジェクト&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にアタッチするもう1つの方法&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;という名前のJavaScriptオブジェクトで見つかるそのオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することです。概要の部分で少し説明しようとしました。したがって、次のようにすることで同様の結果を得ることができます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1e6a588e4f32645493fa13ad336038b66599777" translate="yes" xml:space="preserve">
          <source>...the resulting object's &lt;code&gt;[[Prototype]]&lt;/code&gt; will be set to an instance of &lt;code&gt;Parent&lt;/code&gt;, whose &lt;code&gt;[[Prototype]]&lt;/code&gt;, in turn, is &lt;code&gt;Parent.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...結果のオブジェクトの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt; &lt;code&gt;Parent.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Parent&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスに設定されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f90d885e4f0d6bbb1b805db4ec7e7c2ab3f0ff3" translate="yes" xml:space="preserve">
          <source>1- How JavaScript functions actually work:</source>
          <target state="translated">1-JavaScriptの機能が実際にどのように機能するのか</target>
        </trans-unit>
        <trans-unit id="43fb32f5e57379ce1e1092c86eba4a12283f7c8e" translate="yes" xml:space="preserve">
          <source>2- How does the &lt;code&gt;new&lt;/code&gt; keyword works?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はどのように機能し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6d5b3dfdb0cf1ea256e3a77ae03f67ff8cf8a29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.youtube.com/watch?v=PMfcsYzj-9M&quot;&gt;The Definitive Guide to Object-Oriented JavaScript&lt;/a&gt; - a very concise and clear ~30min video explanation of the asked question (Prototypal Inheritance topic begins from &lt;a href=&quot;https://youtu.be/PMfcsYzj-9M?t=344&quot;&gt;5:45&lt;/a&gt;, although I'd rather listen to the whole video). The author of this video also made JavaScript object visualizer website &lt;a href=&quot;http://www.objectplayground.com/&quot;&gt;http://www.objectplayground.com/&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.youtube.com/watch?v=PMfcsYzj-9M&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト指向JavaScriptの決定的なガイド&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -質問についての非常に簡潔で明確な30分程度のビデオ説明（プロトタイプの継承トピックは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://youtu.be/PMfcsYzj-9M?t=344&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5:45&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から始まりますが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ビデオ全体を聞きたいと思います）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このビデオの作成者は、JavaScriptオブジェクトビジュアライザのWebサイトも&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.objectplayground.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.objectplayground.com/にしています&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84439f4a08925a54a900137f311d83a6f727669e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.constructor&lt;/code&gt;: jump from the created-object's chain to the constructor's chain.</source>
          <target state="translated">&lt;code&gt;.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：作成されたオブジェクトのチェーンからコンストラクタのチェーンにジャンプします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c3d43675b64aceed2dfb3ee9f9ed7ea0a55f5813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.inc&lt;/code&gt; is found through the &lt;code&gt;[[Prototype]]&lt;/code&gt; chain: &lt;code&gt;c&lt;/code&gt; -&amp;gt; &lt;code&gt;C&lt;/code&gt; -&amp;gt; &lt;code&gt;C.prototype&lt;/code&gt; -&amp;gt; &lt;code&gt;inc&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.inc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;介して発見された&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーン&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;C.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;inc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aab45c56c792e22c2d0059d8bc789d73bdb470e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prototype&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; used for lookup directly, only indirectly as it determines &lt;code&gt;__proto__&lt;/code&gt; at object creation with &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prototype&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;され&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ていない&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、直接、間接的にしかそれは決定してルックアップに使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を持つオブジェクトの作成時に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d93d7708207a2e0aea48e54828860b8857174f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prototype&lt;/code&gt;: jump from the constructor's chain to the created-object's chain. This property is thus only defined for function objects (as &lt;code&gt;new&lt;/code&gt; can only be used on functions).</source>
          <target state="translated">&lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：コンストラクタのチェーンから作成されたオブジェクトのチェーンにジャンプします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、このプロパティは関数オブジェクトに対してのみ定義されます（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は関数でのみ使用できるため）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3ea9670d26722f1ae58afba28c12bfc6ab7b2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bar&lt;/code&gt; now has all the methods of &lt;code&gt;Foo&lt;/code&gt; which are defined in its &lt;code&gt;prototype&lt;/code&gt;. Let's dig further in understanding the &lt;code&gt;Object.prototype&lt;/code&gt; and &lt;code&gt;Function.prototype&lt;/code&gt; and how they are related. If you look up the constructor of &lt;code&gt;Foo&lt;/code&gt;, &lt;code&gt;Bar&lt;/code&gt; and &lt;code&gt;Object&lt;/code&gt; are &lt;code&gt;Function constructor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Bar&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義されている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのメソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が含まれてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;とそれらがどのように関連しているかを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに理解しましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;のコンストラクタを調べる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt; &lt;code&gt;Function constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23d057bc9ebc17e3549fa4de1f230e4fafe73972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Child&lt;/code&gt; now has its own &lt;code&gt;prototype&lt;/code&gt;, its &lt;code&gt;__proto__&lt;/code&gt; points to &lt;code&gt;Tree&lt;/code&gt; and &lt;code&gt;Tree's prototype&lt;/code&gt; points to base &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は独自の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持ち&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree's prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はベース&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4494217e5ec8cb0ce0b8641b13ec766db668fc67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Javascript&lt;/code&gt; has primitives like &lt;code&gt;strings, number, booleans, undefined, null.&lt;/code&gt; They are not &lt;code&gt;object(i.e reference types)&lt;/code&gt;, but certainly can act like an &lt;code&gt;object&lt;/code&gt;. Let's look at an example here.</source>
          <target state="translated">&lt;code&gt;Javascript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;strings, number, booleans, undefined, null.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などのプリミティブが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object(i.e reference types)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、確かに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように振る舞うことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで例を見てみましょう。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed6a39b613c07e454439ade81fbb3ce86ef10f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Javascript&lt;/code&gt; supports inheritance via &lt;code&gt;delegation&lt;/code&gt; based on
&lt;code&gt;prototypes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Javascript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;prototypes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;基づく&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delegation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;による &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;継承をサポートしています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fb7cbb2f65eab16c038e9a00619a699969ebdf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number.prototype&lt;/code&gt; (can be found with &lt;code&gt;(1).__proto__&lt;/code&gt;, parenthesis mandatory to satisfy syntax)</source>
          <target state="translated">&lt;code&gt;Number.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1).__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見つけることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、構文を満たすには括弧が必須です）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0ca5fbb15e0e10ba44ee5aca90f8bd3e6528277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.create&lt;/code&gt; will set the supplied argument as the &lt;code&gt;[[Prototype]]&lt;/code&gt; of the resulting object,</source>
          <target state="translated">&lt;code&gt;Object.create&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、指定された引数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果のオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として設定し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="519c9000668f818b4ebc44228a495c3ae3eb692c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.create&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Object.create&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="a7e438b815cacb27a406ae430b4c6d98d55b17ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; and &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; (get/set the &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;em&gt;after&lt;/em&gt; object creation), and</source>
          <target state="translated">&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト作成&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;後に&lt;/font&gt;&lt;/em&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取得/設定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;））、および&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c67caf8f5c83960b67bb883346c1923b9d9b9f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; and &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; are preferred over &lt;code&gt;__proto__&lt;/code&gt;, in part because the behavior of &lt;code&gt;o.__proto__&lt;/code&gt;&lt;a href=&quot;https://stackoverflow.com/a/35458348/38522&quot;&gt;is unusual&lt;/a&gt; when an object has a prototype of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より好ましい&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の挙動ため部分的に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;o.__proto__&lt;/code&gt; &lt;a href=&quot;https://stackoverflow.com/a/35458348/38522&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;異常である&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトは、のプロトタイプ有する場合&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d52faf31527415b348727cf0fb75b9ba090da353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Person.prototype&lt;/code&gt; is an object that was created at the same time the function &lt;code&gt;Person&lt;/code&gt; was created. It has &lt;code&gt;Person&lt;/code&gt; as constructor, even though that constructor did not actually execute yet. So two objects are created at the same time:</source>
          <target state="translated">&lt;code&gt;Person.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数の作成と同時に作成されたオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクタは実際にはまだ実行されていませんが、コンストラクタ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;には&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、2つのオブジェクトが同時に作成されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce1882ca870299d8d2560a5ff0abc98ae2b05d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Person&lt;/code&gt; &amp;rarr; &lt;code&gt;Function.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（エンドポイント）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a653f4d39c156740d112bd62d0bd27b12c5026f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Person&lt;/code&gt;}</source>
          <target state="translated">&lt;code&gt;Person&lt;/code&gt;}</target>
        </trans-unit>
        <trans-unit id="0a2cf4b372ad77d993f9d26533a6a68b985e4268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Thief&lt;/code&gt;&amp;nbsp; } &amp;rarr; &lt;code&gt;Function.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;Thief&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;nbsp; }&amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（エンドポイント）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0eb64376a182c024c3dfa9377a5596732f14377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[FunctionKind]]:&quot;classConstructor&quot;&lt;/code&gt;, which forces the constructor to be called with new: &lt;a href=&quot;https://stackoverflow.com/questions/44446650/what-is-the-reason-es6-class-constructors-cant-be-called-as-normal-functions&quot;&gt;What is the reason ES6 class constructors can't be called as normal functions?&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[[FunctionKind]]:&quot;classConstructor&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、コンストラクターをnewで強制的に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出します。ES6 &lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/44446650/what-is-the-reason-es6-class-constructors-cant-be-called-as-normal-functions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスコンストラクターを通常の関数として&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出せ&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない理由は何ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea5ba7c9eeb6c8772190a9a924efca31560b1c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__proto__&lt;/code&gt; is used for the dot &lt;code&gt;.&lt;/code&gt; property lookup as in &lt;code&gt;obj.property&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はドットに使用され&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj.property&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなプロパティ検索&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b85c622d9b3e3f9d574e18c469527711dc025b08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__proto__&lt;/code&gt; which was brought my mozilla is deprecated and is replaced by &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; method to get the &lt;code&gt;object's prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私のMozillaを持って来られた廃止されており、に置き換えられ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取得する方法&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object's prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22fd20f03b1699a6dea9bc7859e94162d6f1ae2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f.__proto__ === F.prototype&lt;/code&gt; has &lt;code&gt;.constructor === F&lt;/code&gt;, so take it</source>
          <target state="translated">&lt;code&gt;f.__proto__ === F.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.constructor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.constructor === F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があるので、それを取ってください&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a74c3de4bb6ff292cdc67adf028a4a8dbd30a2a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; does not have &lt;code&gt;.constructor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt; &lt;code&gt;.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;がありません&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a682f6c173b00fd4bbbbbb1a449dd3a5d13b709d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; is now a property of &lt;code&gt;f&lt;/code&gt; because when you do:</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたがそうするとき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は今、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="500bb681ab2741f8938cba220e56b8491c7fc1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="27f3727c4800a96bf3ff49622d9977884f9ec516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obj&lt;/code&gt; properties added with &lt;code&gt;obj.p = ...&lt;/code&gt; or &lt;code&gt;Object.defineProperty(obj, ...)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj.p = ...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt; &lt;code&gt;Object.defineProperty(obj, ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;obj&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddf4033a6a4775e8a58465b25a2907bccaca4a60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; &amp;rarr; &lt;code&gt;Person.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（エンドポイント）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="773d90d0f13cd1decdccae192ee85e7a69a4bc47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;properties/functions&lt;/code&gt; are looked from the &lt;code&gt;object&lt;/code&gt; itself or via
&lt;code&gt;prototype&lt;/code&gt; chain if it does not exist</source>
          <target state="translated">&lt;code&gt;properties/functions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自体&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;存在しない場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーン&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を介し &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て調べ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;られます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c745c3e6fa88e759e25e7ad1500686ec3e230574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prototype&lt;/code&gt; allows you to make classes. if you do not use &lt;code&gt;prototype&lt;/code&gt; then it becomes a static.</source>
          <target state="translated">&lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用すると、クラスを作成できます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用しない場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、静的になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eab804207239b48f68e19392d30c84ca4b562d60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t&lt;/code&gt; &amp;rarr; &lt;code&gt;p&lt;/code&gt; &amp;rarr; &lt;code&gt;Person.prototype&lt;/code&gt; &amp;rarr; &lt;code&gt;Object.prototype&lt;/code&gt; (end point)</source>
          <target state="translated">&lt;code&gt;t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;p&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rarr; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（エンドポイント）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffd1a13c8308eacca411a19d7cd8f1aca3a0dd5f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This is a property that is only found on functions.&lt;/em&gt; Using a very simple function:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、関数にのみ存在するプロパティです。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常に単純な関数を使用する：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75d9f311148f35e3f90a11690ff78afc979db59d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This&lt;/em&gt; is where &lt;code&gt;.prototype&lt;/code&gt; gets used.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どこで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c6fad03027c150cbe03372ff710dbe9781f8c9a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;function&lt;/em&gt;&lt;strong&gt;UserDefinedFunction&lt;/strong&gt;(){ /*user defined code */ }</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;function &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UserDefinedFunction&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（）{/ *ユーザー定義コード* /}&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cafc10ff46accd6077494c2f8fdcbcd3d83262f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;it's a clear chart to show JavaScript Inheritance by Prototype Chain&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプチェーンによるJavaScript継承を示す明確なチャートです&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="262ca8b02bedbf37d2f857dcec0fccbdaf507662" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;p&lt;/em&gt; has no direct prototype-chain relationship with &lt;em&gt;Person&lt;/em&gt;. Their relationship is a different one. The object &lt;em&gt;p&lt;/em&gt; has its own prototype chain. Using &lt;code&gt;Object.getPrototypeOf&lt;/code&gt;, you'll find the chain is as follows:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Person&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と直接的なプロトタイプチェーンの関係はありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らの関係は別のものです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pに&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は独自のプロトタイプチェーンがあります。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、チェーンは次のようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c444ac4444a2e10bdf76ea2ce943a556269d9ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;this one contains a example with code and several nice diagrams.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これには、コードの例といくつかの素晴らしい図が含まれています。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="986eb1b8b44fcb9d1627ad12802958cd24657972" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;0)&lt;/strong&gt; Two different things can be called &quot;prototype&quot;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2つの異なるものを「プロトタイプ」と呼ぶことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="463301eb4ac41b0bb8787b54cc8f7a245ed825dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt; Those concepts exist to answer the question:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの概念は、質問に答えるために存在します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="595ac3c717717f780d25d74e1b557454a56132f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddf60658e60d487074f8722d2fc159e70707028b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3)&lt;/strong&gt; There are two main ways to set &lt;code&gt;obj.__proto__&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を設定するには、主に2つの方法があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f08b8b59fbf6a824b0ed085c7ec6889ce3925b68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;4)&lt;/strong&gt; The code:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コード：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b9df63784cfdcebbe83400eba63f3846226ff22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;5)&lt;/strong&gt;&lt;code&gt;.constructor&lt;/code&gt; normally comes from &lt;code&gt;F.prototype&lt;/code&gt; through the &lt;code&gt;.&lt;/code&gt; lookup:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;.constructor&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正常にから来&lt;/font&gt;&lt;/font&gt; &lt;code&gt;F.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;調べる：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e93d771b62ade22d3b5a1016a549aba9104c2d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;6)&lt;/strong&gt; Classical inheritance syntax can be achieved by manipulating prototypes chains.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;6）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;古典的な継承構文は、プロトタイプチェーンを操作することで実現できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0dc43997b5974fc4c5f7a20d88ec5593d972776" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Non objects&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23b5065a8f1ea75a66b4dd984df016c88522ee54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Objects&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Objects&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="438c3604abffb4c4688d84cab52990439675aa90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Array&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef4d9d3331372b90e0cbf8e585a8ff2833a3e1e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Boolean&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Boolean&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df96f63fc22d95f29eb9393bcdcd160c47075064" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But&lt;/strong&gt; this way what we actually are doing is modifying the &lt;code&gt;Object.prototype&lt;/code&gt;, because whenever we create a JavaScript object using literals (&lt;code&gt;{ ... }&lt;/code&gt;), it gets created based on &lt;code&gt;Object.prototype&lt;/code&gt;, which means it gets attached to the newly created object as an attribute named &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; , so if we change it, as we have done on our previous code snippet, all the JavaScript objects would get changed, not a good practice. So what could be the better practice now:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、我々は実際にやっていることをこのように変更することである&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我々はリテラルを（使用してJavaScriptオブジェクトを作成するたびので、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ ... }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはに基づいて作成される&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが新たに作成されたに添付ます手段、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という名前の属性としてのオブジェクトな&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、変更すると、前のコードスニペットで行ったように、すべてのJavaScriptオブジェクトが変更されるため、お勧めできません。では、今より良い方法は何でしょうか：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b889a55dcfba693237d3023457bd4a92c28f55fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例えば：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4386dea0dbde84732f2cdf6b3648157743d6aeb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function type objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="936746e12db1da44d0d71d56ca5aafef2816cddd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f774c4a53eaf3df495fd309c4cdba9ecde38643" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In JS everything is not an object, everything can act like an object.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSでは、すべてがオブジェクトではなく、すべてがオブジェクトのように動作できます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d4deb53922aea3c25bfbab4b352eebb20114ba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non Function type objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非関数型オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d2ae83ed096c61b723ef930500d859ef6c4c6b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;prototype&lt;/code&gt; is a property of the function constructor, whereas &lt;code&gt;__proto__&lt;/code&gt; is a property of the objects constructed from the function constructor. Every function comes with a &lt;code&gt;prototype&lt;/code&gt; property whose value is an empty &lt;code&gt;object&lt;/code&gt;. When we create an instance of the function, we get an internal property &lt;code&gt;[[Prototype]]&lt;/code&gt; or &lt;code&gt;__proto__&lt;/code&gt; whose reference is the prototype of the Function &lt;code&gt;constructor&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は関数コンストラクタ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のプロパティですが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は関数コンストラクタから構築されたオブジェクトのプロパティです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての関数には&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、値が空の&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;付属してい&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数のインスタンスを作成する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、関数&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプを参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する内部プロパティ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取得&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;され&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9efe6d07c7ab605d4083a95a14e84ddfb05b78d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Number&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Number&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40b40f7486b808c8699d420e972ffc185b9eae92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Object&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="650f9a414222dbc1c278bd70726bd1ee2cb1def1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RegExp&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RegExp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7593566f175e8d782e361fe7522b4b4c346ab54a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;String&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f030e617952094d9be5d9d99a9081d1bffb21def" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Typed Arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型付き配列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee947672ace063ceb0fbdd407b2cb329f46d107c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="805181f2ff8c78c447476e7cda9480333fc9bf13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;boolean values(true,false)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブール値（true、false）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59e11e15e910aadb24301f5614b29cf01ad17404" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;number (including NaN and Infinity)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数（NaNと無限大を含む）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0677c4b84eec6055e2d192834e16b93c6e7e8096" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;string&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d01b52c7ed32becc5c5617e73c0a35804d654b54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof(new Array())==='object'&lt;/strong&gt; is by design of language and not a mistake as pointed by &lt;a href=&quot;http://javascript.crockford.com/survey.html&quot;&gt;Douglas Crockford&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（new Array（））=== 'object'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は言語の設計によるものであり、&lt;/font&gt;&lt;a href=&quot;http://javascript.crockford.com/survey.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Douglas Crockfordが&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指摘した誤りではありません&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cf07b007ed3c15e4a9bfc95a299ad47ec0b2fd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;&quot;string literal&quot;&lt;/em&gt; (or a variable containing string literal)  === &lt;strong&gt;'string'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;文字列リテラル&quot;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（または文字列リテラルを含む変数）=== &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'string'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aca6c12e87ac748cb6b566119aa5da92bee3e056" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;5&lt;/em&gt; (or any numeric literal or a variable containing numeric literal or &lt;strong&gt;&lt;em&gt;NaN or Infynity&lt;/em&gt;&lt;/strong&gt;)  === &lt;strong&gt;'number'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;5&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（または任意の数値リテラルまたは数値リテラルまたは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NaNまたはInfynity&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含む変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）=== &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'number'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db4a61833b8370e8b06cc749f449cb5ddfad7a4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;true&lt;/em&gt; (or &lt;em&gt;false&lt;/em&gt; or a variable containing &lt;em&gt;true&lt;/em&gt; or &lt;em&gt;false&lt;/em&gt;)  === &lt;strong&gt;'boolean'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（または&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;true&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含む変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）=== &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'boolean'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="146e47da17f7c83c36e22e29b5e46b9e6e8f7971" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typeof&lt;/strong&gt;&lt;em&gt;undefined&lt;/em&gt; (or an undefined variable or a variable containing &lt;em&gt;undefined&lt;/em&gt;) === &lt;strong&gt;'undefined'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（またはundefined変数または&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含む変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）=== &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'undefined'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89fb8292e313313d390924e3714324b505302011" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;undefined&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;undefined&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fbc44f8d2cbe63946cdbe3a58f8f3a6e3bb8799d" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[1: That won't confuse anyone; made available via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;the &lt;code&gt;__proto__&lt;/code&gt; property&lt;/a&gt; in many implementations.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[1：それは誰をも混乱させません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くの実装で&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を介し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;利用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c261b43716c800269ee97ef89ec21bb98b5e2c31" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[2]: All except &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2]：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を除くすべて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f5f7fff3dcffc93d7fb3856fbba056046ce8b597" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;prototype&lt;/code&gt; in JS is an object which &lt;code&gt;yields&lt;/code&gt; you to the parent of another &lt;code&gt;object&lt;/code&gt;. &lt;strong&gt;[ie.. delegation]&lt;/strong&gt;&lt;code&gt;Delegation&lt;/code&gt; means that if you are unable to do something, you&amp;rsquo;ll tell someone else to do it for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JS &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別の&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;親にあなたを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;yields&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[つまり、委任] &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;Delegation&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、何かを実行できない場合、他の誰かに代わりに実行するように指示することを意味します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9b39ca1bc70b31d93313ed3195295535213d22f" translate="yes" xml:space="preserve">
          <source>Adding levels to the prototype chain</source>
          <target state="translated">プロトタイプチェーンにレベルを追加する</target>
        </trans-unit>
        <trans-unit id="c62c8bcb04a57dc88dda082245060aafb4ea6e35" translate="yes" xml:space="preserve">
          <source>After reading this thread, I feel confused with JavaScript Prototype Chain, then I found these charts</source>
          <target state="translated">このスレッドを読んだ後、私はJavaScript Prototype Chainと混同しているように感じたので、以下のチャートを見つけました。</target>
        </trans-unit>
        <trans-unit id="17e85f393d5bf1c3c5bef196364aa5255475a902" translate="yes" xml:space="preserve">
          <source>All &lt;strong&gt;Function type objects&lt;/strong&gt; by default have a &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property. This &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property references an object that has a &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; property that by default references the &lt;strong&gt;Function type object&lt;/strong&gt; itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型オブジェクトには&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、デフォルトで&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プロトタイプ」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティがあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プロトタイプ」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトで&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数タイプオブジェクト&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自体を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「コンストラクタ」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持つオブジェクトを参照します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4b16ed28563a6b4a20fc9c36d6313c70dde4b55" translate="yes" xml:space="preserve">
          <source>All objects (&lt;strong&gt;Function type&lt;/strong&gt; and &lt;strong&gt;Non Function type&lt;/strong&gt;) have a &quot;constructor&quot; property that by default references the &lt;strong&gt;Function type object&lt;/strong&gt;/&lt;strong&gt;Constructor&lt;/strong&gt; that created it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのオブジェクト（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非関数型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）には、デフォルトで、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを作成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照する「コンストラクター」プロパティーがあります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15fdaebe61fb55c1af26c6e7a85df169798ec0e3" translate="yes" xml:space="preserve">
          <source>All the &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; are actually instances of the built in JavaScript object &lt;strong&gt;Function&lt;/strong&gt; (including the &lt;strong&gt;Function&lt;/strong&gt; object i.e it is recursively defined). It is as if the these objects have been defined in the following way</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Functionタイプオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、実際には組み込みのJavaScriptオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Function&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Function&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を含む、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり再帰的に定義される）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらのオブジェクトが次のように定義されているかのようです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12b319ef5af6aea1225fc6e6077e5640ec9d8d83" translate="yes" xml:space="preserve">
          <source>All the concept explained above can be a little daunting to understand without any supporting code. Please go through the following code line by line to understand the concept. Try to execute it to have a better understanding.</source>
          <target state="translated">上記で説明したコンセプトはすべて、サポートするコードがないと理解するのが少し難しいかもしれません。以下のコードを一行一行読んで、概念を理解してください。実行してみて理解を深めてください。</target>
        </trans-unit>
        <trans-unit id="1665b42d1860b1c7fd57cb6a6343d9cb0ef10e9e" translate="yes" xml:space="preserve">
          <source>All the other built in objects that can create new objects by using new operator</source>
          <target state="translated">新しい演算子を使用して新しいオブジェクトを作成することができる他のすべての組み込みオブジェクト</target>
        </trans-unit>
        <trans-unit id="1907258d3e367c722707f73d0d6e4f26812041b6" translate="yes" xml:space="preserve">
          <source>Also notice that &lt;strong&gt;Object&lt;/strong&gt;,&lt;strong&gt;Array&lt;/strong&gt; and &lt;strong&gt;RegExp&lt;/strong&gt; functions can create a new object without even using &lt;strong&gt;operator new&lt;/strong&gt;. However the follwing ones don't.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegExp&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operator new&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用しなくても新しいオブジェクトを作成できることに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、次のものはしません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd8bfd901a73d4991d8b395d508631b7e5a10d8b" translate="yes" xml:space="preserve">
          <source>Also these &lt;a href=&quot;http://ejohn.org/apps/learn/#64&quot;&gt;slides&lt;/a&gt; really helped a lot.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、これらの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ejohn.org/apps/learn/#64&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スライドは&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常に役立ちました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d9877f5d08fabd9db32afb87521790e25f67b62" translate="yes" xml:space="preserve">
          <source>Also, &lt;strong&gt;every object that is created&lt;/strong&gt; (&lt;strong&gt;Function type&lt;/strong&gt; or &lt;strong&gt;Non Function type&lt;/strong&gt;) has a &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; property which is inherited from the object referenced by prototype  property of the Constructor function. By default this &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; property references the &lt;strong&gt;Constructor function&lt;/strong&gt; that created it (if the &lt;strong&gt;Constructor Function's&lt;/strong&gt; default &quot;prototype&quot; is not changed).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成されるすべてのオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数タイプ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非関数タイプ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）には&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コンストラクター関数のプロトタイププロパティによって参照されるオブジェクトから継承される&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「コンストラクター」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティがあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトでは、この&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「コンストラクター」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティーは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを作成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター関数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照し&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター関数の&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトの「プロトタイプ」が変更されていない場合）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79e19cf0dfa4d95f4fb79d90a3100d78d72f4890" translate="yes" xml:space="preserve">
          <source>Although a prototype object is created when you create a constructor function, you can ignore that object, and assign another object that should be used as prototype for any subsequent instances created by that constructor.</source>
          <target state="translated">コンストラクタ関数を作成するとプロトタイプオブジェクトが作成されますが、そのオブジェクトを無視して、そのコンストラクタで作成された後続のインスタンスのプロトタイプとして使用されるべき別のオブジェクトを割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="336be22a25df41fad0e6cde8bbdd41a5cd1d6cf0" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;object's prototype&lt;/strong&gt; (and hence its inherited property names) can be retrieved using the &lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt;   method. In fact this method 
can be used for navigating the entire prototype chain of the object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのプロトタイプ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（従って、その継承されたプロパティ名）を使用して取得することができる&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.getPrototypeOf（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; メソッドを。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際、このメソッドは、オブジェクトのプロトタイプチェーン全体をナビゲートするために使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d03358142652b37c4e19c16084957f179346c0ef" translate="yes" xml:space="preserve">
          <source>An object's &lt;code&gt;[[Prototype]]&lt;/code&gt; is initially set during object creation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、オブジェクトの作成時に最初に設定されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e302dd1bdb6e511fab68686ecfa674165e722eb1" translate="yes" xml:space="preserve">
          <source>Another attempt to explain &lt;a href=&quot;https://github.com/rus0000/jsinheritance&quot;&gt;JavaScript prototype-based inheritance&lt;/a&gt; with better pictures</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/rus0000/jsinheritance&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptプロトタイプベースの継承&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をより良い写真で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明する別の試み&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ae9bed13f86cada0ae2999193b88071ea23bf09" translate="yes" xml:space="preserve">
          <source>As Ciro San descended Mount Fire Fox after deep meditation, his mind was clear and peaceful.</source>
          <target state="translated">深い瞑想の後に火狐山を降りると、チロサンの心は澄んで穏やかになった。</target>
        </trans-unit>
        <trans-unit id="f3329b48eeadf5d2a791a733d259efe4ca19924b" translate="yes" xml:space="preserve">
          <source>As mentioned, the &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; can further create new objects using the &lt;strong&gt;new operator&lt;/strong&gt;. For e.g an object of type &lt;strong&gt;Object&lt;/strong&gt;, &lt;strong&gt;String&lt;/strong&gt;, &lt;strong&gt;Number&lt;/strong&gt;, &lt;strong&gt;Boolean&lt;/strong&gt;, &lt;strong&gt;Array&lt;/strong&gt;, &lt;strong&gt;RegExp&lt;/strong&gt;  Or &lt;strong&gt;UserDefinedFunction&lt;/strong&gt; can be created by using</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前述のように、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Functionタイプのオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new演算子&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトをさらに作成できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、タイプ&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;String&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Number&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Boolean&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegExp&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; または&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UserDefinedFunctionの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、以下を使用して作成できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5444cc4c7b088a2cf1abe9c5ac49e58b50f5582d" translate="yes" xml:space="preserve">
          <source>Basically, when you use the &lt;strong&gt;new&lt;/strong&gt; keyword on a function, you are calling on that and that function serves as a constructor, so when you say:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に、関数で&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用すると、その&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードが呼び出され、その関数はコンストラクターとして機能するため、次のように言います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="128a6f1ac253f8efe8add873d3ab2ae178457a6e" translate="yes" xml:space="preserve">
          <source>Before we close this down, let's just wrap with a small piece of code here to &lt;strong&gt;summarize everything above&lt;/strong&gt;. We are using &lt;code&gt;instanceof&lt;/code&gt; operator here to check whether an &lt;code&gt;object&lt;/code&gt; has in its &lt;code&gt;prototype&lt;/code&gt; chain the &lt;code&gt;prototype&lt;/code&gt; property of a &lt;code&gt;constructor&lt;/code&gt; which below summarizes the entire big diagram.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを閉じる前に、ここで小さなコードでラップして、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のすべて&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要約して&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;みましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちは、使用している&lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かどうかを確認するためにここにオペレータを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その中に持っている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーン&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のプロパティ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下全体に大きな図をまとめたものです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1d3ebbcf931e0a28e680ba9599c4b76f5920263" translate="yes" xml:space="preserve">
          <source>Both are objects, but they have different roles: the function object &lt;em&gt;constructs&lt;/em&gt;, while the other object represents the prototype of any object that function will construct. The prototype object will become the parent of the constructed object in its prototype chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どちらもオブジェクトですが、役割は異なります。関数オブジェクトはを&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構築&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、もう一方のオブジェクトは、関数が構築するオブジェクトのプロトタイプを表します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプオブジェクトは、プロトタイプチェーンで構築されたオブジェクトの親になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4734465ce3249914e675fa085c71fdd7969725f9" translate="yes" xml:space="preserve">
          <source>But the tricky point here is you have access to all the properties defined in &lt;code&gt;__proto__&lt;/code&gt; on the first level of the &lt;code&gt;person&lt;/code&gt; object(read the summary part for more detail).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、ここでのトリッキーなポイント&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第1レベルの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義されているすべてのプロパティにアクセスできることです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（詳細については、要約部分をお読みください）。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4c717c68647a39d8993c3f22cb1f73298ff4906" translate="yes" xml:space="preserve">
          <source>But what is the exact purpose of this &quot;.prototype&quot; property in JavaScript? How does it relate to instantiating objects?</source>
          <target state="translated">しかし、JavaScriptにおけるこの「.prototype」プロパティの正確な目的は何でしょうか?これはオブジェクトのインスタンス化とどのように関係しているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="581ca65827f668811a65db1dbb1781038e17dcdf" translate="yes" xml:space="preserve">
          <source>Class methods are non-enumerable. Can be done with &lt;code&gt;Object.defineProperty&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスメソッドは列挙できません。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で実行できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b79c42688d72bbe2038bd28afd9ed389154ee893" translate="yes" xml:space="preserve">
          <source>Classes always &lt;code&gt;use strict&lt;/code&gt;. Can be done with an explicit &lt;code&gt;use strict&lt;/code&gt; for every function, which is admittedly tedious.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスは常に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;use strict&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確かに退屈ですが、すべての関数を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;use strict&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明示的に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して行うことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee63261f1379428db901d45d061803e082c2d686" translate="yes" xml:space="preserve">
          <source>Consider the constructor:</source>
          <target state="translated">コンストラクタを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="ad0c015a0facc98aa584812c0678c373464a6715" translate="yes" xml:space="preserve">
          <source>Consider the following &lt;code&gt;keyValueStore&lt;/code&gt; object :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;考えてみ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39d3124fb0d19b8604d1980edadff31ba40be02b" translate="yes" xml:space="preserve">
          <source>Corresponds to the following diagram (some &lt;code&gt;Number&lt;/code&gt; stuff is omitted):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の図に対応します（一部の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は省略されています）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="84ab82f3669c4d8bf9a319d55a8cd70e88bc0ca4" translate="yes" xml:space="preserve">
          <source>Create one Function, Get Two Objects</source>
          <target state="translated">1つの関数を作成し、2つのオブジェクトを取得</target>
        </trans-unit>
        <trans-unit id="0dea4f1de050c67f39a669747070da1280a237ab" translate="yes" xml:space="preserve">
          <source>ES6 adds the &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;extends&lt;/code&gt; keywords, which are mostly syntax sugar for previously possible prototype manipulation madness.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。これらは、以前は可能だったプロトタイプ操作の狂気のための構文糖です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0431dfaa30b098390e1a1e89c353654e61224340" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Function&lt;/code&gt; has a &lt;code&gt;prototype&lt;/code&gt; property, which refers to another
object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別のオブジェクトを参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティがあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e87fcf8334f33dfb4544adc131d3008ee8170de" translate="yes" xml:space="preserve">
          <source>Each instance of this object would have the following public properties :</source>
          <target state="translated">このオブジェクトの各インスタンスは、以下のパブリック・プロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="44854d9c01a3db8b27faa3924a396dc627475631" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;JavaScript&lt;/code&gt; function has a &lt;code&gt;prototype&lt;/code&gt;. When you log the &lt;code&gt;Tree.prototype&lt;/code&gt;, you get...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数には&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をログに記録する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c82daec772c21b329ef8063919bf156cb23fe962" translate="yes" xml:space="preserve">
          <source>Every &lt;strong&gt;Constructor/Function&lt;/strong&gt; (whether built in or user defined) when defined automatically has a property called &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; whose value by default is set as an object. This object itself has a property called &lt;strong&gt;&quot;constructor&quot;&lt;/strong&gt; which by default references back the &lt;strong&gt;Constructor/Function&lt;/strong&gt; .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター/関数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（組み込みでもユーザー定義でも）を定義すると、自動的に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プロトタイプ」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるプロパティがあり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その値はデフォルトでオブジェクトとして設定されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このオブジェクト自体には、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「コンストラクタ」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるプロパティが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり、デフォルトでは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクタ/関数を&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad52e74949b469f6820323ae6b340af34f90c99a" translate="yes" xml:space="preserve">
          <source>Every Function object (including built in Function object)-&amp;gt;
Function.prototype -&amp;gt; Object.prototype -&amp;gt; null</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのFunctionオブジェクト（組み込みのFunctionオブジェクトを含む）-&amp;gt; Function.prototype-&amp;gt; Object.prototype-&amp;gt; null&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bad37a6664930f457fd13d65fd291ece488a330" translate="yes" xml:space="preserve">
          <source>Every JavaScript object &lt;a href=&quot;https://www.ecma-international.org/ecma-262/10.0/index.html#sec-ordinary-object-internal-methods-and-internal-slots&quot;&gt;has an internal &quot;slot&quot;&lt;/a&gt; called &lt;code&gt;[[Prototype]]&lt;/code&gt; whose value is either &lt;code&gt;null&lt;/code&gt; or an &lt;code&gt;object&lt;/code&gt;. You can think of a slot as a property on an object, internal to the JavaScript engine, hidden from the code you write. The square brackets around &lt;code&gt;[[Prototype]]&lt;/code&gt; are deliberate, and are an ECMAScript specification convention to denote internal slots.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのJavaScriptオブジェクトに&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.ecma-international.org/ecma-262/10.0/index.html#sec-ordinary-object-internal-methods-and-internal-slots&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部「スロット」が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり、その値は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スロットは、JavaScriptエンジンの内部にあるオブジェクトのプロパティであり、作成したコードから隠されていると考えることができます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;囲む角括弧&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は意図的なものであり、内部スロットを示すECMAScript仕様の規則です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f0ef0659aecb22303ee754acbaeb49baf6e42fd" translate="yes" xml:space="preserve">
          <source>Every function has a &lt;code&gt;prototype&lt;/code&gt; property, initially holding an empty object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての関数には&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティがあり、最初は空のオブジェクトを保持しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4427bf34010d61d45f8302a7e58ea59fccbc44ab" translate="yes" xml:space="preserve">
          <source>Every object contains an internal property called the [[prototype]], which can be accessed by the &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; function. &lt;code&gt;Object.create(model)&lt;/code&gt; creates a new object and sets it's [[prototype]] property to the object &lt;strong&gt;model&lt;/strong&gt;. Hence when you do &lt;code&gt;Object.getPrototypeOf(product)&lt;/code&gt;, you will get the object &lt;strong&gt;model&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのオブジェクトには、[[prototype]]と呼ばれる内部プロパティが含まれており、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でアクセスできます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.create(model)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は新しいオブジェクトを作成し、その[[prototype]]プロパティをオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モデルに設定し&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(product)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実行すると、オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モデル&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が取得されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a2885bd192019c5b120bd52dfdbcdeaad907288" translate="yes" xml:space="preserve">
          <source>Every object has a link, &lt;em&gt;[[Prototype]]&lt;/em&gt;, sometimes exposed as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;__proto__&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのオブジェクトにはリンク&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototype]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として公開される場合があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27ff6fa37c56e393b34270fcfb3c1f7a626e836f" translate="yes" xml:space="preserve">
          <source>Every object has an internal property, &lt;em&gt;[[Prototype]]&lt;/em&gt;, linking it to another object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのオブジェクトには内部プロパティ&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototype]]があり&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、別のオブジェクトにリンクしています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd2d92f66154c7bea02e2425ec309be42c9dc064" translate="yes" xml:space="preserve">
          <source>Every object that gets created internally references the object referenced by
&lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property of the Constructor that created it. This object is known as the created &lt;strong&gt;&lt;em&gt;object's prototype&lt;/em&gt;&lt;/strong&gt; (which is different from Function type objects &quot;prototype&quot; property which it references) . This way the created object can directly access the methods and properties defined in object referenced by the Constructor's &quot;prototype&quot; property (at the time of object creation).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部で作成されるすべてのオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、それを作成したコンストラクターの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プロトタイプ」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって参照されるオブジェクトを参照します &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このオブジェクトは、作成された&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのプロトタイプ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれ&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（これは、参照する関数型オブジェクトの「プロトタイプ」プロパティとは異なります）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このようにして、作成されたオブジェクトは、コンストラクターの「プロトタイプ」プロパティ（オブジェクト作成時）によって参照されるオブジェクトで定義されたメソッドとプロパティに直接アクセスできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="04fec84aea0907990dd95a1cdf4d645f4ab25fec" translate="yes" xml:space="preserve">
          <source>Finally, if you create a new object via &lt;code&gt;Object.create(foo)&lt;/code&gt;, the resulting object's &lt;code&gt;[[Prototype]]&lt;/code&gt; will be set to &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最後に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.create(foo)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を介して新しいオブジェクトを作成する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、結果のオブジェクトの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に設定され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="913fa65fa66257d78a776f2cc37f8c2e45342a0e" translate="yes" xml:space="preserve">
          <source>Firefox makes it accessible through the &lt;code&gt;__proto__&lt;/code&gt; property as an extension. &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;ES6 now mentions&lt;/a&gt; some optional requirements for &lt;code&gt;__proto__&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firefoxでは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、拡張機能として&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;介してアクセスできます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6は&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いくつかのオプション要件に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;言及して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;います&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ded4e4366360aefc60f419c75228c8055002b5e4" translate="yes" xml:space="preserve">
          <source>First is checked if the property is located on the Object itself. If so this property is returned.</source>
          <target state="translated">最初に、プロパティがオブジェクト自体にあるかどうかをチェックします。そうであれば、このプロパティが返されます。</target>
        </trans-unit>
        <trans-unit id="126594ec2e3648a15c71769d321915ef426fc644" translate="yes" xml:space="preserve">
          <source>Following are the &lt;strong&gt;&lt;em&gt;Non object&lt;/em&gt;&lt;/strong&gt; data types</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データ型です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa8b666e849a0499d67737f9c99b9c67ca6983ca" translate="yes" xml:space="preserve">
          <source>Following in the summary of this article</source>
          <target state="translated">この記事のまとめでは、以下のようになっています。</target>
        </trans-unit>
        <trans-unit id="c6250562934f1c7fec16d3f7975c1a7719577c6b" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;&lt;em&gt;Non Function type objects&lt;/em&gt;&lt;/strong&gt; (e.g Javascript Built in  Math object) the constructor function is the function that created it.
For &lt;strong&gt;Math&lt;/strong&gt; object it is &lt;strong&gt;&lt;em&gt;function Object(){}&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のために&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非機能型オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例えばJavascriptがMathオブジェクトに内蔵）コンストラクタ関数は、それを作成した機能です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ための&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数学&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトそれは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数オブジェクト（）{} &lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcda7f7fe3cae3ac6151fb54aa8a47f250d7bb72" translate="yes" xml:space="preserve">
          <source>For all &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; the constructor function is always
&lt;strong&gt;&lt;em&gt;function Function(){}&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型オブジェクトの場合&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コンストラクター関数は常に &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数Function（）{}です&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af92f2d2e092a715c0b3fa108d9d8e88eed937ea" translate="yes" xml:space="preserve">
          <source>For creating an object without any prototype use the following:</source>
          <target state="translated">プロトタイプを使わずにオブジェクトを作成する場合は以下のようにします。</target>
        </trans-unit>
        <trans-unit id="2836a1340828171230bbbcd4436e61777d800cde" translate="yes" xml:space="preserve">
          <source>For example when we define a function</source>
          <target state="translated">例えば、関数を定義すると</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="f1cc879e83b7285c7265a58ff65f9cc017991006" translate="yes" xml:space="preserve">
          <source>Functions are objects in javascript and thus can have properties</source>
          <target state="translated">関数はjavascriptのオブジェクトであり、プロパティを持つことができます。</target>
        </trans-unit>
        <trans-unit id="18f81e046b54ed03fb34907bb6ad93f980e8f448" translate="yes" xml:space="preserve">
          <source>Here are some equalities that could help grasp the issue -- all of these print &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題を把握するのに役立つ可能性があるいくつかの平等があります-これらのすべてが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; です&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d95847d51670cf9873b3c6286e1e7f7dd325c3c8" translate="yes" xml:space="preserve">
          <source>Here is a short example.</source>
          <target state="translated">ここでは簡単な例を紹介します。</target>
        </trans-unit>
        <trans-unit id="cb17c19ed78f536f145405f7a66103a40ece6685" translate="yes" xml:space="preserve">
          <source>Here is a visual presentation of the two prototype chains involved, represented as columns:</source>
          <target state="translated">ここでは、関係する2つのプロトタイプチェーンを列として視覚的に表示しています。</target>
        </trans-unit>
        <trans-unit id="badebffc2957e9a5737c7b7442b62ee3ff3ed9c5" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;Child&lt;/code&gt; inherits its &lt;code&gt;prototype&lt;/code&gt; from Tree, what we are doing here is using &lt;code&gt;Object.create()&lt;/code&gt; method to create a new object based off what you pass, here it is &lt;code&gt;Tree.prototype&lt;/code&gt;. In this case what we're doing is setting the prototype of Child to a new object that looks identical to the &lt;code&gt;Tree&lt;/code&gt; prototype. Next we are setting the &lt;code&gt;Child's constructor to Child&lt;/code&gt;, if we don't it would point to &lt;code&gt;Tree()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はTreeから&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;継承し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。ここでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを使用して、渡したものに基づいて新しいオブジェクトを作成しています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この場合は、Childのプロトタイプを、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同じに見える新しいオブジェクトに設定しています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Child's constructor to Child&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定します（設定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しない場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree()&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1080c05673364e26ccb0b18e600d9ce9ea7a2bbd" translate="yes" xml:space="preserve">
          <source>Here's one way:</source>
          <target state="translated">ここに一つの方法があります。</target>
        </trans-unit>
        <trans-unit id="255294a4948a7939d960d2ceac33918b80d9bea3" translate="yes" xml:space="preserve">
          <source>His hand however, was restless, and by itself grabbed a brush and jotted down the following notes.</source>
          <target state="translated">しかし、彼の手は落ち着きがなく、それだけで筆を握り、次のようなメモを書き留めた。</target>
        </trans-unit>
        <trans-unit id="dcf4bed02490ae09ef76076b1410a13c2ca7ae28" translate="yes" xml:space="preserve">
          <source>Hope it's also helpful for you to understand JavaScript Prototype Chain.</source>
          <target state="translated">JavaScript Prototype Chainの理解にも役立つことを願っています。</target>
        </trans-unit>
        <trans-unit id="a6a0ce9031e0776d5fc6120b3023d51bccf114f1" translate="yes" xml:space="preserve">
          <source>Hope this helps.</source>
          <target state="translated">これが助けになることを願っています。</target>
        </trans-unit>
        <trans-unit id="85a528f682bca4f4cdd40f5dcd0f32d87901dc07" translate="yes" xml:space="preserve">
          <source>How does JavaScript .prototype work</source>
          <target state="translated">JavaScriptの.prototypeはどのように動作するのか</target>
        </trans-unit>
        <trans-unit id="15307e8b9bfc921e3085ee0afbd06e419923f9a6" translate="yes" xml:space="preserve">
          <source>I always like analogies when it comes to understand this type of stuff. 'Prototypical inheritance' is pretty confusing in comparison to class bass inheritance in my opinion, even though prototypes are much simpler paradigm. In fact with prototypes, there really is no inheritance, so the name in and of itself misleading, it's more a type of 'delegation'.</source>
          <target state="translated">この種のものを理解する上で、私はいつもアナロジーが好きです。プロトタイプの継承」は、クラスベースの継承と比較してかなり混乱していると思います。実際のところ、プロトタイプでは継承はありませんので、その名前自体が誤解を招く恐れがあります。</target>
        </trans-unit>
        <trans-unit id="19e066fbef4f72e041e77caa8686e61389d9bd20" translate="yes" xml:space="preserve">
          <source>I can create a new instance of this object by doing this :</source>
          <target state="translated">このオブジェクトの新しいインスタンスを作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="72bba386d12931e63576ecdfb525130fd2dd81b1" translate="yes" xml:space="preserve">
          <source>I found it helpful to explain the &quot;prototype chain&quot; as recursive convention when &lt;code&gt;obj_n.prop_X&lt;/code&gt; is being referenced:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj_n.prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が参照されている&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、「プロトタイプチェーン」を再帰的な慣習として説明すると便利&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6131353b64b6b93c067e55eaea6770918f91940e" translate="yes" xml:space="preserve">
          <source>I hope this add's some information, I know this kinda could be big to grasp... in simple words its &lt;strong&gt;it's just objects linked to objects!!!!&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この追加がいくつかの情報であることを願っています。このことは把握するのが難しいかもしれません...簡単に言えば、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはオブジェクトにリンクされた単なるオブジェクトです!!!!&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="924874acd19481d8956e79b165ac0c1d173659a8" translate="yes" xml:space="preserve">
          <source>I remember a lot discussion I had with people a while back (I'm not exactly sure what I'm doing) but as I understand it, there's no concept of a class. It's just an object, and instances of those objects are clones of the original, right?</source>
          <target state="translated">ちょっと前に人と色々議論した記憶があるのですが(正確にはわかりませんが)、私の理解では、クラスという概念はありません。ただのオブジェクトであって、そのオブジェクトのインスタンスはオリジナルのクローンですよね?</target>
        </trans-unit>
        <trans-unit id="cc156d52b1e4575a1a02a778463782d0e870cbd7" translate="yes" xml:space="preserve">
          <source>I'm not that into dynamic programming languages but I've written my fair share of JavaScript code. I never really got my head around this prototype-based programming, does any one know how this works?</source>
          <target state="translated">私は動的なプログラミング言語にはあまり興味がありませんが、JavaScriptのコードを書いたことはあります。私はこのプロトタイプベースのプログラミングの周りに私の頭を得たことがありません、誰かこれがどのように動作するかを知っていますか?</target>
        </trans-unit>
        <trans-unit id="095a7598140196f01e688496d713522b45a93e34" translate="yes" xml:space="preserve">
          <source>If a function is never used as a constructor, its &lt;code&gt;prototype&lt;/code&gt; property will go unused.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数がコンストラクターとして使用されない場合、その&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用されません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="069c6dba09a3fa7d8e7e3fc560710a57a35adf5a" translate="yes" xml:space="preserve">
          <source>If a member of an object can't be found in the object it looks for it in the prototype chain. The chain consists of other objects. The prototype of a given instance can be accessed with the &lt;code&gt;__proto__&lt;/code&gt; variable. Every object has one, as there is no difference between classes and instances in javascript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのメンバーがオブジェクト内に見つからない場合は、プロトタイプチェーンでそれを探します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーンは他のオブジェクトで構成されています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特定のインスタンスのプロトタイプには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してアクセスでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptではクラスとインスタンスに違いがないため、すべてのオブジェクトに1つあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f62c28db1c7c79d9c5f0200bc22f793427a5093" translate="yes" xml:space="preserve">
          <source>If it cannot find the property nowhere on the object and its prototype chain it will return undefined.</source>
          <target state="translated">オブジェクトとそのプロトタイプチェーンのどこにもプロパティが見つからない場合は、未定義を返します。</target>
        </trans-unit>
        <trans-unit id="579168485f40523728d3e2e483b8c97ad5737a6c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;prop_X&lt;/code&gt; is finally found in the k-th prototype object then</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prop_X&lt;/code&gt; は、&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最終的にはその後、k番目のプロトタイプオブジェクトに発見されました&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8b5c35ba29dc74b14286f7b407902d1df105e2b5" translate="yes" xml:space="preserve">
          <source>If the property is not located on the object itself it will 'climb up the protochain'. It basically looks at the object referred to by the &lt;strong&gt;proto&lt;/strong&gt; property. There it checks if the property is available on the object referred to by &lt;strong&gt;proto&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティがオブジェクト自体に配置されていない場合は、「プロトチェーンを登る」ことになります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本的には、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって参照されるオブジェクトを調べ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そこで&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;protoが&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照するオブジェクトでプロパティが利用可能かどうかをチェックします&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e415f6eb9f17af7905fbbb1186b6db3b03bfe31c" translate="yes" xml:space="preserve">
          <source>If the property isn't located on the &lt;strong&gt;proto&lt;/strong&gt; object it will climb up the &lt;strong&gt;proto&lt;/strong&gt; chain all the way up to Object object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティが&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配置されていない場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーンからObjectオブジェクトまで上がります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9355f10f28f16134f1bb8ba1a5affef1f401ff86" translate="yes" xml:space="preserve">
          <source>If we use a &lt;code&gt;new&lt;/code&gt; operator on the &lt;code&gt;Tree function&lt;/code&gt;, we call it as a &lt;code&gt;constructor&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;Tree function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;としてそれを呼び出し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51315e6799ffc612f9684a9c011ff1e6e45b29c1" translate="yes" xml:space="preserve">
          <source>If you access a property via the dot (&lt;code&gt;obj.propName&lt;/code&gt;) or bracket (&lt;code&gt;obj['propName']&lt;/code&gt;) notation, and the object does not directly have such a property (ie. an &lt;em&gt;own property&lt;/em&gt;, checkable via &lt;code&gt;obj.hasOwnProperty('propName')&lt;/code&gt;), the runtime looks for a property with that name on the object referenced by the &lt;code&gt;[[Prototype]]&lt;/code&gt; instead. If the &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;em&gt;also&lt;/em&gt; does not have such a property, its &lt;code&gt;[[Prototype]]&lt;/code&gt; is checked in turn, and so on. In this way, the original object's &lt;em&gt;prototype chain&lt;/em&gt; is walked until a match is found, or its end is reached. At the top of the prototype chain is the &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドット（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.propName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）またはブラケット（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj['propName']&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）表記&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を介してプロパティにアクセスし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オブジェクトがそのようなプロパティ（つまり、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;独自のプロパティ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直接持たない場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.hasOwnProperty('propName')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）、ランタイムは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって参照されるオブジェクトでその名前のプロパティを探します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; に&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのようなプロパティがない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が順番にチェックされます。このようにして、元のオブジェクトの&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプチェーン&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、一致が見つかるか、またはその最後に到達するまで処理されます。プロトタイプチェーンの先頭は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc00b072becb7e2c9c80fa4abb29e36a2046e46c" translate="yes" xml:space="preserve">
          <source>If you create a new object via &lt;code&gt;new Func()&lt;/code&gt;, the object's &lt;code&gt;[[Prototype]]&lt;/code&gt; will, by default, be set to the object referenced by &lt;code&gt;Func.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;new Func()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して新しいオブジェクトを作成する場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オブジェクトの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、デフォルトで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Func.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって参照されるオブジェクトに設定されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e26c361e62783e6e4ad3a4d7b78cd7a271af85e" translate="yes" xml:space="preserve">
          <source>If you don't need a constructor, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;Object.create&lt;/a&gt; instead of &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクタが必要ない場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.create&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de0c76d508bd0c60f85684de7562bbf927304fa3" translate="yes" xml:space="preserve">
          <source>If you look at the above &lt;code&gt;console.log()&lt;/code&gt; output, you could a see a constructor property on &lt;code&gt;Tree.prototype&lt;/code&gt; and a &lt;code&gt;__proto__&lt;/code&gt; property too. The &lt;code&gt;__proto__&lt;/code&gt; represents the &lt;code&gt;prototype&lt;/code&gt; that this &lt;code&gt;function&lt;/code&gt; is based off, and since this is just a plain &lt;code&gt;JavaScript function&lt;/code&gt; with no &lt;code&gt;inheritance&lt;/code&gt; set up yet, it refers to the &lt;code&gt;Object prototype&lt;/code&gt; which is something just built in to JavaScript...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは上記を見れば&lt;/font&gt;&lt;/font&gt; &lt;code&gt;console.log()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出力、あなたは上のconstructorプロパティ見ることができました&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すぎプロパティを。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このこと&lt;/font&gt;&lt;/font&gt; &lt;code&gt;function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オフに基づいて、これは単なるですので、される&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がないと&lt;/font&gt;&lt;/font&gt; &lt;code&gt;inheritance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まだ設定、それが参照する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だけではJavaScriptに組み込まれているものです...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b56f4223a36469d868a9c3f3e13638a6646255c5" translate="yes" xml:space="preserve">
          <source>If you look at the below one, we are trying to access the &lt;code&gt;call&lt;/code&gt; method which is available in every &lt;code&gt;function&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のものを見ると、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての&lt;/font&gt; &lt;code&gt;function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;利用できる&lt;/font&gt;&lt;/font&gt; &lt;code&gt;call&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にアクセスしようとしています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f137ce61334b2a7b075a1ce9504fd4da3b16e38" translate="yes" xml:space="preserve">
          <source>If you look up the above fiddle, &lt;code&gt;Profile&lt;/code&gt; Function has access to &lt;code&gt;call&lt;/code&gt; method, but its not available in it, but available via the prototype chain which delegates to &lt;code&gt;Function.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のフィドルを調べると、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Profile&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Functionは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;call&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アクセスできます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、その中では使用できませんが、&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;委任するプロトタイプチェーンを介して使用できます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8469815035042a48f41f237dc4d9ccbe4ff669e" translate="yes" xml:space="preserve">
          <source>If you look up the above fiddle, dog has access to &lt;code&gt;toString&lt;/code&gt; method, but its not available in it, but available via the prototype chain which delegates to &lt;code&gt;Object.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のフィドルを調べると、dogは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;toString&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アクセスできますが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;toString&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドでは使用できませんが、&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;委任するプロトタイプチェーンを介して使用できます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d9d50ab6ec54491b1e8cafe8af8d69bbd177fee" translate="yes" xml:space="preserve">
          <source>If you look up the code above, we have &lt;code&gt;Foo&lt;/code&gt; constructor who has the method &lt;code&gt;identify()&lt;/code&gt; and &lt;code&gt;Bar&lt;/code&gt; constructor which has &lt;code&gt;speak&lt;/code&gt; method. We create two &lt;code&gt;Bar&lt;/code&gt; instance &lt;code&gt;b1&lt;/code&gt; and &lt;code&gt;b2&lt;/code&gt; whose parent type is &lt;code&gt;Foo&lt;/code&gt;. Now while calling &lt;code&gt;speak&lt;/code&gt; method of &lt;code&gt;Bar&lt;/code&gt;, we are able to identify the who is calling the speak via &lt;code&gt;prototype&lt;/code&gt; chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは上記のコードを見ると、私たちは持っている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドがあり、コンストラクタ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;identify()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があるコンストラクタ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;speak&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法を。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;親タイプが&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。今、呼び出し中に&lt;/font&gt; &lt;code&gt;speak&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の方法&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、私たちは経由話す呼んでいる人を識別することができます&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーンを。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af6377b8c527a360e9727478ccc7433365cb08cc" translate="yes" xml:space="preserve">
          <source>Imagine this ....</source>
          <target state="translated">想像してみてください</target>
        </trans-unit>
        <trans-unit id="681ab279185efecf4adf0ca37096615d94ed9ef0" translate="yes" xml:space="preserve">
          <source>Important is that this prototype chain has little to do with the objects that &lt;code&gt;Person&lt;/code&gt; can &lt;em&gt;construct&lt;/em&gt;. Those constructed objects have their own prototype chain, and this chain can potentially have no close ancestor in common with the one mentioned above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重要なのは、このプロトタイプチェーンが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構築&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトとはほとんど関係がないという&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの構築されたオブジェクトには独自のプロトタイプチェーンがあり、このチェーンには、上記のものと共通する近い祖先がない可能性があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d4434a6f3e9717fa3fb7bca25a2650db0ab5526" translate="yes" xml:space="preserve">
          <source>In JavaScript you first create an object (there is no concept of class), then you can augment your own object or create new objects from it. It's not difficult, but a little foreign and hard to metabolize for somebody used to the classical way.</source>
          <target state="translated">JavaScriptでは、まずオブジェクトを作成し(クラスの概念はありません)、次に自分のオブジェクトを拡張したり、そのオブジェクトから新しいオブジェクトを作成したりします。難しいことではありませんが、古典的な方法に慣れている人にとっては、少し外国的で新陳代謝が難しいかもしれません。</target>
        </trans-unit>
        <trans-unit id="eb502b0d87f1e52cd28e77dd3efe27622ff8c19d" translate="yes" xml:space="preserve">
          <source>In a language implementing classical inheritance like Java, C# or C++ you start by creating a class--a blueprint for your objects--and then you can create new objects from that class or you can extend the class, defining a new class that augments the original class.</source>
          <target state="translated">Java、C#、C++のような古典的な継承を実装した言語では、まずオブジェクトの青写真であるクラスを作成し、そのクラスから新しいオブジェクトを作成したり、元のクラスを拡張して新しいクラスを定義したりします。</target>
        </trans-unit>
        <trans-unit id="3eac9854d580c805d0b006d454df086cacebd0b1" translate="yes" xml:space="preserve">
          <source>In other words, when you have a prototype property on a function and you call a new on that, after JavaScript finishes looking at that newly created object for properties, it will go look at the function's &lt;code&gt;.prototype&lt;/code&gt; and also it is possible that this object has its own internal prototype. and so on.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、関数にプロトタイププロパティがあり、その上で新しいプロパティを呼び出すと、JavaScriptが新しく作成されたプロパティのオブジェクトの確認を終えた後、関数の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が確認され、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このオブジェクトが独自の内部プロトタイプがあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等々。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa8cdbafa4cec47f538fd967f8cc3630039bb181" translate="yes" xml:space="preserve">
          <source>In the above case, you have static funcation call test. This function can be accessed only by obj.test where you can imagine obj to be a class.</source>
          <target state="translated">上記のケースでは、static funcation call testがあります。この関数はobjをクラスとしてイメージできるobj.testでしかアクセスできません。</target>
        </trans-unit>
        <trans-unit id="92812c9a271d95faac6799bb983e945fe61121f5" translate="yes" xml:space="preserve">
          <source>In the first line of this listing, a &lt;code&gt;primitive&lt;/code&gt; string value is assigned to name. The second line treats name like an &lt;code&gt;object&lt;/code&gt; and calls &lt;code&gt;charAt(0)&lt;/code&gt; using dot notation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このリストの最初の行では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;primitive&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列値が名前に割り当てられています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2行目は、名前を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように扱い、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドット表記を使用して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;charAt(0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20242a20d0a285b179a47552d0d66df0f23b44d5" translate="yes" xml:space="preserve">
          <source>In traditional javascript, the linked object is the &lt;code&gt;prototype&lt;/code&gt; property of a function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;従来のJavaScriptでは、リンクされたオブジェクトは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa82f61da16ffe0c6852fe1744d556e04cb4b389" translate="yes" xml:space="preserve">
          <source>Intuitively, classical inheritance should affect property lookup.</source>
          <target state="translated">直感的には、古典的な継承はプロパティのルックアップに影響を与えるべきです。</target>
        </trans-unit>
        <trans-unit id="030ed0cf05fcd236928c7dc9c3dab71153816ff9" translate="yes" xml:space="preserve">
          <source>It can be retrieved via the ES5 &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES5の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で取得できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="435ef2bfd6485579713864ee91cc85d379df2ff0" translate="yes" xml:space="preserve">
          <source>It is no surprise that the name of the property &lt;code&gt;prototype&lt;/code&gt; can lead to confusion. It would maybe have been clearer if this property had been named &lt;code&gt;prototypeOfConstructedInstances&lt;/code&gt; or something along that line.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;名前が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;混乱を招く可能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;性があることは当然のことです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このプロパティの名前が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypeOfConstructedInstances&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か、その行に沿ったもので&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あった場合、より明確になったでしょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf3b678f25878fd95a8e605eb0b10a766c4082fb" translate="yes" xml:space="preserve">
          <source>It is not the way that JavaScript actually attaches the properties that are defined in the prototype. The actual way is related to the prototype chain concept.</source>
          <target state="translated">JavaScriptが実際にプロトタイプで定義されているプロパティをアタッチする方法ではありません。実際の方法は、プロトタイプのチェーンの概念に関係しています。</target>
        </trans-unit>
        <trans-unit id="f7269d48b77d1578b7761e037bb9f11b7217d7a6" translate="yes" xml:space="preserve">
          <source>It may help to categorise prototype chains into two categories.</source>
          <target state="translated">プロトタイプチェーンを2つのカテゴリーに分類するのに役立つかもしれません。</target>
        </trans-unit>
        <trans-unit id="c8d2bc26288d1970e7d9c6e818d443806f624d90" translate="yes" xml:space="preserve">
          <source>It's also useful for inheritance, because the prototype chain can consist of many other objects.</source>
          <target state="translated">プロトタイプチェーンは他の多くのオブジェクトから構成されることができるので、継承にも便利です。</target>
        </trans-unit>
        <trans-unit id="c423571e162589c35a8213ca713cd61ba94c2567" translate="yes" xml:space="preserve">
          <source>It's important to understand that there is a distinction between an object's prototype (which is available via &lt;code&gt;Object.getPrototypeOf(obj)&lt;/code&gt;, or via the deprecated &lt;code&gt;__proto__&lt;/code&gt; property) and the &lt;code&gt;prototype&lt;/code&gt; property on constructor functions. The former is the property on each instance, and the latter is the property on the constructor. That is, &lt;code&gt;Object.getPrototypeOf(new Foobar())&lt;/code&gt; refers to the same object as &lt;code&gt;Foobar.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのプロトタイプ（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(obj)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または非推奨の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を介して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;利用可能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター関数の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は違いがあることを理解することが重要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前者は各インスタンスのプロパティであり、後者はコンストラクタのプロパティです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(new Foobar())&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foobar.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同じオブジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="030d130f2ed1f207ab296966419ab9e0bd2b0103" translate="yes" xml:space="preserve">
          <source>It's just that you already have an object with &lt;code&gt;Object.new&lt;/code&gt; but you still don't have an object when using the constructor syntax.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Object.new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してオブジェクトが既にあるだけですが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コンストラクター構文を使用するときにはまだオブジェクトがありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5e3efa7e30e4995e4ca6d4e28e54b49937edc76" translate="yes" xml:space="preserve">
          <source>JavaScript basically has two kinds of data types</source>
          <target state="translated">JavaScriptには基本的に2種類のデータ型があります。</target>
        </trans-unit>
        <trans-unit id="d94f506270681997f01537b42a4ab95a5bf02ca2" translate="yes" xml:space="preserve">
          <source>JavaScript internally makes an object, an empty hash and then it gives that object to the constructor, then the constructor can do whatever it wants, because &lt;strong&gt;this&lt;/strong&gt; inside of that constructor is the object that was just created and then it gives you that object of course if you haven't used the return statement in your function or if you've put a &lt;code&gt;return undefined;&lt;/code&gt; at the end of your function body.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptは、内部オブジェクト、空のハッシュを作り、ので、それは、その後、コンストラクタはそれを望んでいるものは何でもすることができ、コンストラクタにそのオブジェクトを提供します&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。この&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようコンストラクタの内部だけで作成されたオブジェクトであり、それはあなたのコースのそのオブジェクトを提供します関数でreturnステートメントを使用していない場合、または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;return undefined;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数本体の最後に。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="957143b10357f5e6e6910d7460864c89a175cecc" translate="yes" xml:space="preserve">
          <source>Javascript doesn't have inheritance in the usual sense, but it has the prototype chain.</source>
          <target state="translated">Javascriptには通常の意味での継承はありませんが、プロトタイプチェーンがあります。</target>
        </trans-unit>
        <trans-unit id="a2450e30be66310d0553978f90d0d288caac92ae" translate="yes" xml:space="preserve">
          <source>Javascript has a mechanism when looking up properties on Objects which is called &lt;strong&gt;'prototypal inheritance'&lt;/strong&gt;, here is what is basically does:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascriptには、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プロトタイプ継承」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるオブジェクトのプロパティを検索するメカニズム&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります。基本的には次のようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f4b47934618af57961679c19108922a4ca294b0" translate="yes" xml:space="preserve">
          <source>Let me tell you my understanding of prototypes. I am not going to compare the inheritance here with other languages. I wish people would stop comparing languages, and just understand the language as itself. Understanding prototypes and prototypal inheritance is so simple, as I will show you below.</source>
          <target state="translated">私の理解しているプロトタイプの話をします。ここでは、他の言語との継承を比較するつもりはありません。言語を比較するのはやめて、言語そのものを理解してほしいからです。プロトタイプとプロトタイプの継承を理解するのはとても簡単で、以下に紹介します。</target>
        </trans-unit>
        <trans-unit id="59c81da029f262010deb5cba5768b6b6e36fbcb2" translate="yes" xml:space="preserve">
          <source>Let's add a &lt;code&gt;child-tree&lt;/code&gt; to our &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;child-tree&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加しましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcf6be15e0399b4e8692eb89b5dbccad0d1c69a8" translate="yes" xml:space="preserve">
          <source>Let's add a method to our &lt;code&gt;Tree&lt;/code&gt;&lt;code&gt;prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを追加しましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf410d2b618ac111afa3b7abc19e478c0f77ab14" translate="yes" xml:space="preserve">
          <source>Let's say we want to create a &lt;code&gt;Person&lt;/code&gt; object model. but in this step I'm gonna be trying to &lt;strong&gt;do the same exact thing without using &lt;code&gt;prototype&lt;/code&gt; and &lt;code&gt;new&lt;/code&gt; keyword&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトモデル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成するとします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、このステップで&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用せずに、まったく同じこと&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しようとして&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;い&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4fd77249b0436d1e1235c3cd861af2edcdf49052" translate="yes" xml:space="preserve">
          <source>Let's take a moment to study how the following works:</source>
          <target state="translated">以下のような働き方を少し勉強してみましょう。</target>
        </trans-unit>
        <trans-unit id="c5af6366772cd8b7bfde51876fc403399d3d1ac6" translate="yes" xml:space="preserve">
          <source>Lookup order is:</source>
          <target state="translated">検索順です。</target>
        </trans-unit>
        <trans-unit id="89e5ff4a5d3a2edc239357c75ca16021a0ac3518" translate="yes" xml:space="preserve">
          <source>Modern JavaScript implementations allow read and/or write access to the &lt;code&gt;[[Prototype]]&lt;/code&gt; in the following ways:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最新のJavaScript実装では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;への読み取りおよび/または書き込みアクセス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が次の方法で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;許可さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4e595cef183e536c4286b64758770cea322fe687" translate="yes" xml:space="preserve">
          <source>Note that, therefore, &lt;strong&gt;all classes, and all functions that can be used with the &lt;code&gt;new&lt;/code&gt; operator, have a property named &lt;code&gt;.prototype&lt;/code&gt; in addition to their own &lt;code&gt;[[Prototype]]&lt;/code&gt; internal slot.&lt;/strong&gt; This dual use of the word &quot;prototype&quot; is the source of endless confusion amongst newcomers to the language.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;strong&gt; &lt;code&gt;new&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子で&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できるすべてのクラスとすべての関数には&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、独自の&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部スロット&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に加えて、&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;という名前のプロパティがある&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに注意してください&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この「プロトタイプ」という単語の二重使用は、その言語の初心者の間で際限のない混乱の原因となっています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="284252bf04303c422b352a14277442552d072df6" translate="yes" xml:space="preserve">
          <source>Now the prototype chain of &lt;em&gt;t&lt;/em&gt; is one step longer than that of &lt;em&gt;p&lt;/em&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;t&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のプロトタイプチェーンは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のプロトタイプチェーン&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりも1ステップ長くなり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="453e9d47d55aa48fa47134a6774d654f2dc68e6c" translate="yes" xml:space="preserve">
          <source>Now you create an &lt;code&gt;instance&lt;/code&gt; of &lt;code&gt;Child&lt;/code&gt; and call &lt;code&gt;branch&lt;/code&gt; which is originally available in &lt;code&gt;Tree&lt;/code&gt;. We haven't actually defined our &lt;code&gt;branch&lt;/code&gt; on the &lt;code&gt;Child prototype&lt;/code&gt;. BUT, in the &lt;code&gt;Root prototype&lt;/code&gt; which Child inherits from.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;Child&lt;/code&gt; の&lt;/font&gt; &lt;code&gt;instance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元々&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;利用できた&lt;/font&gt; &lt;code&gt;branch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;には、&lt;/font&gt; &lt;code&gt;Child prototype&lt;/code&gt; &lt;code&gt;branch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義していません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子が継承する&lt;/font&gt; &lt;code&gt;Root prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;では。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e405d1c6c812b0aaf5cd5dc341492cb7cd706812" translate="yes" xml:space="preserve">
          <source>Now, consider the &lt;code&gt;keyValueStore&lt;/code&gt; object again. I could rewrite it like this :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトをもう一度&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;検討し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はそれを次のように書き直すことができます：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27a2f1b2807805e773c2207e1da71947713971f9" translate="yes" xml:space="preserve">
          <source>Now, imagine if you could have just a single &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;getLength&lt;/code&gt; copy, and each instance would reference that same function. This would be better for performance and require less memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delete&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;getLength&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つだけ持つことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、各インスタンスが同じ関数を参照するとします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、パフォーマンスが向上し、必要なメモリが少なくなります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="620234a6a5d0f7aa8808c551a92b51792801f50b" translate="yes" xml:space="preserve">
          <source>Now, since &lt;code&gt;.prototype&lt;/code&gt; is an object, it has a &lt;code&gt;[[Prototype]]&lt;/code&gt; property. When you don't make any assignments to &lt;code&gt;Function.prototype&lt;/code&gt;, the &lt;code&gt;.prototype&lt;/code&gt;'s &lt;code&gt;[[Prototype]]&lt;/code&gt; points to the prototypical object (&lt;code&gt;Object.prototype&lt;/code&gt;). This is automatically performed anytime you create a new function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はオブジェクトであるため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティがあります。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;への割り当てを行わない場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はプロトタイプオブジェクト（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、新しい関数を作成するたびに自動的に実行されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3967028d959361dd532fe101b7f70d69c0a8a614" translate="yes" xml:space="preserve">
          <source>Now, suppose we create 100 instances of this &lt;code&gt;keyValueStore&lt;/code&gt; object. Even though &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;getLength&lt;/code&gt; will do the exact same thing for each of these 100 instances, every instance has its own copy of this function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、この&lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスを100個作成するとし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にもかかわらず&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;set&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;delete&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;getLength&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの100個のインスタンスごとに、まったく同じことを行いますが、すべてのインスタンスは、この関数の独自のコピーを持っています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c7607adc00ebc0cc7c3ef863d971b6b48c4aa7e" translate="yes" xml:space="preserve">
          <source>Object created with new or Object.create -&amp;gt; One or More prototype chains -&amp;gt; Object.prototype -&amp;gt; null</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;newまたはObject.createで作成されたオブジェクト-&amp;gt; 1つ以上のプロトタイプチェーン-&amp;gt; Object.prototype-&amp;gt; null&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a09455bc70de56d08fdfa56e64f46eea057a622" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;new&lt;/a&gt; are linked to the &lt;code&gt;prototype&lt;/code&gt; property of their constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;newで&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成されたオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、コンストラクターの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リンクさ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffd0441b7bb81e2aaa165755d1fb9ccd3a8bb90b" translate="yes" xml:space="preserve">
          <source>On the second line, when we do:</source>
          <target state="translated">セカンドラインでは、その時に</target>
        </trans-unit>
        <trans-unit id="1ed4b17e49593418cbd9b66a6d5373f35d033114" translate="yes" xml:space="preserve">
          <source>One might think that setting the prototype property of the Constructor to null shall create an object with a null prototype. However in such cases the newly created object's prototype is set to Object.prototype and its constructor is set to function Object. This is demonstrated by the following code</source>
          <target state="translated">コンストラクタのprototypeプロパティをnullに設定すると、nullのプロトタイプを持つオブジェクトが作成されるのではないかと思うかもしれません。しかし、このような場合、新しく作成されたオブジェクトのプロトタイプは Object.prototype に設定され、そのコンストラクタは function Object に設定されます。これは次のコードで示されています。</target>
        </trans-unit>
        <trans-unit id="dd5d44663fd2f674fd203b181e341546f829b568" translate="yes" xml:space="preserve">
          <source>One of the most important &lt;code&gt;.prototype&lt;/code&gt;s is that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype&quot;&gt;of the &lt;code&gt;Object&lt;/code&gt; function&lt;/a&gt;. This prototype holds the prototypical object that all &lt;code&gt;[[Prototype]]&lt;/code&gt; chains contain. On it, all the available methods for new objects are defined:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も重要なの一つ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sがあるということ&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/prototype&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このプロトタイプは、すべての&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーンに含まれる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを保持し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その上で、新しいオブジェクトに使用できるすべてのメソッドが定義されています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="469584dd5fce9e5dacc091ba6fdcdd6c653674e4" translate="yes" xml:space="preserve">
          <source>Only &lt;strong&gt;Function type objects&lt;/strong&gt; can create a new object using the &lt;strong&gt;operator new&lt;/strong&gt;. The objects thus created are &lt;strong&gt;Non Function type&lt;/strong&gt; objects. The &lt;strong&gt;Non Function type objects&lt;/strong&gt; cannot further create an object using &lt;strong&gt;operator new&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子new&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して新しいオブジェクトを作成できるのは、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Functionタイプのオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このようにして作成されたオブジェクトは、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非関数タイプの&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトです。&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非機能型のオブジェクトは&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、さらに使用してオブジェクトを作成することはできません&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;new演算子を&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1816079e3107aa40962064bea8d37fc70e00e405" translate="yes" xml:space="preserve">
          <source>Our 2 lines of code only created the following new objects:</source>
          <target state="translated">私たちの2行のコードは、次のような新しいオブジェクトを作成しただけです。</target>
        </trans-unit>
        <trans-unit id="a9d41b6a8034d85ae98cd3f45af131286ffde0d0" translate="yes" xml:space="preserve">
          <source>Prior to the introduction of class syntax to JavaScript, constructor functions were the only way to simulate classes. We can think of properties of the object referenced by the constructor function's &lt;code&gt;.prototype&lt;/code&gt; property as shared members; ie. members which are the same for each instance. In class-based systems, methods are implemented the same way for each instance, so methods are conceptually added to the &lt;code&gt;.prototype&lt;/code&gt; property; an object's fields, however, are instance-specific and are therefore added to the object itself during construction.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptにクラス構文が導入される以前は、コンストラクター関数がクラスをシミュレートする唯一の方法でした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター関数の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって参照されるオブジェクトのプロパティは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;共有メンバー&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と考えることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すなわち。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各インスタンスで同じメンバー。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスベースのシステムでは、メソッドはインスタンスごとに同じ方法で実装されるため、メソッドは概念的に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、オブジェクトのフィールドはインスタンス固有であるため、構築中にオブジェクト自体に追加されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03fb78825e2fec8bc7c200a72472e96bafcab5bc" translate="yes" xml:space="preserve">
          <source>Properties in the &lt;strong&gt;product&lt;/strong&gt; are handled in the following way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;製品の&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は次のように処理されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a12e750cacf0cb7832019025ff44a2cfd082da5a" translate="yes" xml:space="preserve">
          <source>Prototype is like a model, based on which you create a product. The crucial point to understand is that when you create an object using another object as it's prototype, the link between the prototype and the product is ever-lasting. For instance:</source>
          <target state="translated">プロトタイプはモデルのようなもので、それを元に製品を作ります。ここで理解すべき重要な点は、他のオブジェクトをプロトタイプとしてオブジェクトを作成した場合、プロトタイプと製品の間のリンクは永遠に続くということです。例えば</target>
        </trans-unit>
        <trans-unit id="f98486283a16369ff6d59a142ef64f750c64a317" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&quot;&gt;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リファレンス：&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="707b1b8fa5117ebd4f291a5c909d3a04e8df0a5b" translate="yes" xml:space="preserve">
          <source>Remember:</source>
          <target state="translated">Remember:</target>
        </trans-unit>
        <trans-unit id="bdfa853b763095b302a457bd72bd8131fd6f666a" translate="yes" xml:space="preserve">
          <source>Setting the prototype property of the Constructor to null(or undefined,number,true,false,string) shall not create an object with a null prototype. In such cases the newly created object's prototype is set to Object.prototype and its constructor is set to function Object.</source>
          <target state="translated">コンストラクタのprototypeプロパティをnull(またはundefined,number,true,false,string)に設定すると、nullのプロトタイプを持つオブジェクトは作成されない。この場合,新たに作成されたオブジェクトのプロトタイプは,Object.prototypeに設定され,そのコンストラクタは,関数Object.prototypeに設定される。</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">コードスニペットを表示</target>
        </trans-unit>
        <trans-unit id="0b2f038d5b557fa82a7d38572069173ec9110e7a" translate="yes" xml:space="preserve">
          <source>Simple Objects (created By new Object() or {} including built in Math  object)-&amp;gt;   Object.prototype -&amp;gt; null</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単純なオブジェクト（new Math（）または{}によって作成され、組み込みのMathオブジェクトを含む）-&amp;gt; Object.prototype-&amp;gt; null&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfa33a46580418ce6726f86b2853c888bbaeba8b" translate="yes" xml:space="preserve">
          <source>Simplified diagram without all predefined objects:</source>
          <target state="translated">すべての定義済みオブジェクトを使用しない簡略化されたダイアグラム。</target>
        </trans-unit>
        <trans-unit id="cd11a10866ed006c872e7b004b5d009d83d38196" translate="yes" xml:space="preserve">
          <source>Since a function is also an object, it also has its own parent in its own prototype chain, but recall that these two chains are about different things.</source>
          <target state="translated">関数はオブジェクトでもあるので、それ自身のプロトタイプチェーンにはそれ自身の親もありますが、この2つのチェーンは異なるものについてのものであることを思い出してください。</target>
        </trans-unit>
        <trans-unit id="7e14680d7f99efdb2b76c0e9039ea3eca62d171d" translate="yes" xml:space="preserve">
          <source>Since the &lt;strong&gt;&lt;em&gt;Function type objects&lt;/em&gt;&lt;/strong&gt; can create new objects they are also called &lt;strong&gt;&lt;em&gt;Constructors&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以来&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型のオブジェクトが&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しいオブジェクトを作成することができ、それらも呼ばれている&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクタ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6651a715d46841a278432b989cce2edefb80907" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;Person&lt;/code&gt; seems related to two kinds of chains, which live their own lives. To &quot;jump&quot; from one chain to the other, you use:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だから&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は自分の人生を生きる2種類の鎖に関連しているようです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あるチェーンから別のチェーンに「ジャンプ」するには、次を使用します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcca12fe80eb8ce956e8c593f4902949f237f14c" translate="yes" xml:space="preserve">
          <source>So in this step &lt;strong&gt;&lt;code&gt;functions&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;objects&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; keyword, are all we have.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、このステップでは、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;functions&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;objects&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;this&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードがすべて揃っています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b082423f578ce9c7b356bdcfaac50c485dd327f" translate="yes" xml:space="preserve">
          <source>So these statements are equivalent:</source>
          <target state="translated">なので、これらの記述は等価です。</target>
        </trans-unit>
        <trans-unit id="b7953a06c481f35275be63d3184e665422ffd9ae" translate="yes" xml:space="preserve">
          <source>So to answer that let's say we have an empty object, and two functions like:</source>
          <target state="translated">その答えとして、空のオブジェクトと、次のような2つの関数があるとします。</target>
        </trans-unit>
        <trans-unit id="71764b5b34e10b36e9b5f64bf240e3e80dcd6adb" translate="yes" xml:space="preserve">
          <source>So when JavaScript goes to look up a property on an object, the first thing it does, is it looks it up on that object. And then there is a secret property &lt;strong&gt;&lt;code&gt;[[prototype]]&lt;/code&gt;&lt;/strong&gt; which we usually have it like &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; and that property is what JavaScript looks at next. And when it looks through the &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt;, as far as it is again another JavaScript object, it has its own &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; attribute, it goes up and up until it gets to the point where the next &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; is null. The point is the only object in JavaScript that its &lt;strong&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/strong&gt; attribute is null is &lt;code&gt;Object.prototype&lt;/code&gt; object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、JavaScriptがオブジェクトのプロパティを検索する場合、最初にJavaScriptがそのオブジェクトを検索することになります。そして、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; の&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;秘密のプロパティ&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;[[prototype]]&lt;/code&gt; が&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、そのプロパティはJavaScriptが次に見るものです。そして、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再び別のJavaScriptオブジェクトである限り&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; を&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;調べる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、独自の&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性があり、次の&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がnull &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;になるポイントまで&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到達し&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。重要なのは、&lt;/font&gt;&lt;strong&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性がnull &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であるJavaScriptの唯一のオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトです。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88bfdb43114c0ba7f946dd444e95247ad2b8e760" translate="yes" xml:space="preserve">
          <source>So,
&lt;strong&gt;typeof(Object)&lt;/strong&gt; === &lt;strong&gt;typeof(String)&lt;/strong&gt; === &lt;strong&gt;typeof(Number)&lt;/strong&gt; === &lt;strong&gt;typeof(Boolean)&lt;/strong&gt; === &lt;strong&gt;typeof(Array)&lt;/strong&gt;  === &lt;strong&gt;typeof(RegExp)&lt;/strong&gt; === &lt;strong&gt;typeof(Function)&lt;/strong&gt;  === &lt;strong&gt;typeof(UserDefinedFunction)&lt;/strong&gt; === &lt;strong&gt;'function'&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Object）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（String）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Number）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Boolean）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Array）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（RegExp）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（Function）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; == = &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof（UserDefinedFunction）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'関数'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="795df9eafea50013d6a6b25f4f916ff964abe8b9" translate="yes" xml:space="preserve">
          <source>So, similar to the code above, if you use the class syntax to create a new object like so:</source>
          <target state="translated">ですから、上のコードと同じように、クラス構文を使って、このように新しいオブジェクトを作成すると</target>
        </trans-unit>
        <trans-unit id="ebb370d6c8485fb5d4a2404e866af0e40f66e61e" translate="yes" xml:space="preserve">
          <source>Some environments expose &lt;em&gt;[[Prototype]]&lt;/em&gt; as &lt;code&gt;__proto__&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一部の環境では、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[Prototype]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;公開します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81d0cf8739f68b4dbf2f185155554eed684a9f0c" translate="yes" xml:space="preserve">
          <source>Such a linking of objects using the prototype property is called prototypal inheritance. There, it is so simple, agree?</source>
          <target state="translated">このようにプロトタイププロパティを使ってオブジェクトを連結することをプロトタイプ継承といいます。そこは、とてもシンプルですね。</target>
        </trans-unit>
        <trans-unit id="6ed816d75e1c95434823496141b81fdcea2cbda9" translate="yes" xml:space="preserve">
          <source>Summary:</source>
          <target state="translated">Summary:</target>
        </trans-unit>
        <trans-unit id="9b90da30e2126fc79e156855a3d3c56add196624" translate="yes" xml:space="preserve">
          <source>Take for example this object:</source>
          <target state="translated">このオブジェクトを例にしてみましょう。</target>
        </trans-unit>
        <trans-unit id="78b593da9026118be059ee6ac340d87c42a22fad" translate="yes" xml:space="preserve">
          <source>That means when you create an &lt;code&gt;instance&lt;/code&gt; of &lt;code&gt;Tree&lt;/code&gt;, you can call it's &lt;code&gt;branch&lt;/code&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;Tree&lt;/code&gt; の&lt;/font&gt; &lt;code&gt;instance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成するときに、その&lt;/font&gt; &lt;code&gt;branch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出すことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71710652d7b4816db69c89e8a310aac0b866f00d" translate="yes" xml:space="preserve">
          <source>That's where prototypes come in. A prototype is a &quot;blueprint&quot; of properties that is inherited but not copied by instances. So this means that it exists only once in memory for all instances of an object and is shared by all of those instances.</source>
          <target state="translated">そこでプロトタイプの出番です。プロトタイプとは、インスタンスには継承されるがコピーされないプロパティの「設計図」のことです。つまり、オブジェクトのすべてのインスタンスに対してメモリ上に一度だけ存在し、それらのインスタンスのすべてで共有されるということです。</target>
        </trans-unit>
        <trans-unit id="1b1e6e664f2f6088fa0652acd0a1823c05c2ebae" translate="yes" xml:space="preserve">
          <source>The  &lt;code&gt;__proto__&lt;/code&gt; property has been deprecated, although it is implemented in most modern browsers a better way to obtain the prototype object reference would be:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプオブジェクトの参照を取得するより良い方法は以下のようになり、最新のブラウザで実装されているが、プロパティは、廃止されました：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24dc7865f37f55e0e7f59502ab234ce4300fdb17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; property &lt;em&gt;holds an object&lt;/em&gt; that will be assigned to &lt;code&gt;b.[[Prototype]]&lt;/code&gt; when you do &lt;code&gt;var b = new Bar&lt;/code&gt;. You can easily examine this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティは、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを保持&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に割り当てられます&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b.[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが行うとき&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var b = new Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは簡単に調べることができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0560bce1601dd3e00f9c71264e3134c14292d920" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; property of functions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="739a7313cb0b24b266ce566a1212e78b57749fc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; property:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7c72595d56c1839a5b4bd46757e8d1b1a97cd3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;String object&lt;/code&gt; exists only for one statement before it&amp;rsquo;s destroyed (a process called &lt;code&gt;autoboxing&lt;/code&gt;). Let's again get back to our &lt;code&gt;prototypal&lt;/code&gt;&lt;code&gt;inheritance&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;String object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが破壊される前にのみ1文に対して（と呼ばれるプロセスが存在する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;autoboxing&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再び&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypal&lt;/code&gt; &lt;code&gt;inheritance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;戻りましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f9309aa7533ada9cbecccdaa13f94407b0b835a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[[Prototype]]&lt;/code&gt; property is part of what forms the &lt;code&gt;[[Prototype]]&lt;/code&gt; chain. This chain of &lt;code&gt;[[Prototype]]&lt;/code&gt; objects is what is examined when, for example, &lt;code&gt;[[Get]]&lt;/code&gt; or &lt;code&gt;[[Set]]&lt;/code&gt; operations are performed on an object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティは、フォーム内容の一部である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーン。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーンは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、たとえば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Get]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Set]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;操作がオブジェクトに対して実行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;されるときに検査&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f46ef67da2a6814adb535fb3389ecfb6a71e226" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[[Prototype]]&lt;/code&gt; property:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="161b021e18a6b95700d4c8cf0ea483d90d6b335a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;sup&gt;&lt;sup&gt;[1]&lt;/sup&gt;&lt;/sup&gt; property of all objects&lt;sup&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/sup&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[1]&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2]&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ece862f8ba8770dcb9e6a6682478dc2416551df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extends&lt;/code&gt; keyword (configures the prototype chain when using the class syntax),</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、（クラス構文を使用している場合、プロトタイプチェーンを構成します）キーワード&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b343b9bc29dfa64b78cc8d23e762c5b0b782a88e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; operator (configures the prototype chain on the default object returned from a constructor function),</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子は、（コンストラクタ関数から返されるデフォルトのオブジェクトにプロトタイプチェーンを構成します）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95a51d09dda468b174d273b34c151a5eb01a0d1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prototype&lt;/code&gt; of &lt;code&gt;Bar&lt;/code&gt; is &lt;code&gt;Foo&lt;/code&gt;, &lt;code&gt;prototype&lt;/code&gt; of &lt;code&gt;Foo&lt;/code&gt; is &lt;code&gt;Object&lt;/code&gt; and if you look closely the &lt;code&gt;prototype&lt;/code&gt; of &lt;code&gt;Foo&lt;/code&gt; is related to &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、あなたが密接に見れば&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関連している&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df78d91123a923fff066c13c885618c518ae0655" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prototype&lt;/code&gt; property gives no information of the &lt;em&gt;subject's&lt;/em&gt; prototype chain, but of objects &lt;em&gt;created by&lt;/em&gt; the subject.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティはの何も情報提供していない&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対象者&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、オブジェクトの、プロトタイプチェーンを&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって作成された&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b97e95601e2caf4caa88430b4dc754abba772827" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Function type objects&lt;/strong&gt; are the ones that return the string &lt;strong&gt;'function'&lt;/strong&gt; with &lt;strong&gt;typeof&lt;/strong&gt; operator. 
All the user defined functions and all the JavaScript built in objects that can create new objects by using new operator fall into this category. For eg.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型オブジェクトは、&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列を返すものです&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「機能」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;付き&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のtypeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子を。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのユーザー定義関数と、new演算子を使用して新しいオブジェクトを作成できるすべてのJavaScript組み込みオブジェクトは、このカテゴリに分類されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56d86db4ceab3ec83115b15933b5831cc0c116db" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Prototype&lt;/strong&gt; creates &lt;strong&gt;new object&lt;/strong&gt; by cloning existing &lt;strong&gt;object&lt;/strong&gt;. So really when we think about prototype we can really think &lt;strong&gt;cloning or making&lt;/strong&gt; a copy of something instead of making it up.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプは、&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成し&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、新しいオブジェクトを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;既存のクローニングすることにより、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、プロトタイプについて考えるとき、実際に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何かを作成する代わりに、何かの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;複製または&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーを&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを考えることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bd6ac781e06b5b3a6cec0c62459adb65300cd62" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;string&lt;/strong&gt;,&lt;strong&gt;number&lt;/strong&gt; and &lt;strong&gt;boolean&lt;/strong&gt; data types can be represented both as &lt;strong&gt;Objects&lt;/strong&gt; and &lt;strong&gt;Non objects&lt;/strong&gt;.When they are represented as objects their typeof is always === 'object'. We shall come back to this once we understand the object data types.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;番号&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブール&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;データ型は両方として表すことができる&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らは彼らのtypeof演算は常に===「オブジェクト」ですオブジェクトとして表現されている.Whenを。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのデータ型を理解したら、これに戻ります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8577d42ff998b0cfba6ce04e82f6c5d436e22aa4" translate="yes" xml:space="preserve">
          <source>The above diagram looks bit complicated, but brings out the whole picture on how &lt;code&gt;prototype chaining&lt;/code&gt; works. Let's walk through this slowly:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上の図は少し複雑に見えますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype chaining&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がどのように機能するかについての全体像を引き出し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これについてゆっくりと見ていきましょう。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="968cd07d3bdba98a6f10247da2969b50e37b575b" translate="yes" xml:space="preserve">
          <source>The above is my understanding. I am making it a community wiki, so people can correct me if I am wrong.</source>
          <target state="translated">以上が私の理解です。私はコミュニティwikiにしているので、間違っていたらみんなが訂正してくれます。</target>
        </trans-unit>
        <trans-unit id="2c7f474464d52ad7ae084e058020bfc177ae400f" translate="yes" xml:space="preserve">
          <source>The advantage of adding a function / variable to the prototype is that it has to be in the memory only once, not for every instance.</source>
          <target state="translated">プロトタイプに関数変数を追加する利点は、インスタンスごとにではなく、一度だけメモリに入れておく必要があることです。</target>
        </trans-unit>
        <trans-unit id="b5537ac2f515dbdf82fb85a48b6d1e044f709c45" translate="yes" xml:space="preserve">
          <source>The apply() method calls a function with a given this value and
  arguments provided as an array (or an array-like object).</source>
          <target state="translated">apply()メソッドは、与えられたこの値と引数を配列 (または配列のようなオブジェクト)として指定して関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5c699def1d6a340923e2a07d768ff3f49b035bc4" translate="yes" xml:space="preserve">
          <source>The blue lines represent prototype chains, the other coloured lines represent other relationships:</source>
          <target state="translated">青い線はプロトタイプのチェーンを表し、他の色のついた線は他の関係を表しています。</target>
        </trans-unit>
        <trans-unit id="2a4578c5b1468a10dd5d8d60c858bcf743a0a6d7" translate="yes" xml:space="preserve">
          <source>The built in object &lt;strong&gt;Math&lt;/strong&gt; is &lt;strong&gt;typeof&lt;/strong&gt;===&lt;strong&gt;'object'&lt;/strong&gt;. Hence a new object of type Math cannot be created by new operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;組み込みオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Math&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'object'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、Mathタイプの新しいオブジェクトをnew演算子で作成することはできません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f20bdf821bd9cf510187931b7bd057147e81e865" translate="yes" xml:space="preserve">
          <source>The call() method calls a function with a given this value and
  arguments provided individually.</source>
          <target state="translated">call()メソッドは、与えられたこの値と個別に与えられた引数を持つ関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8fe41dbdd05c507c0437d01a5845086e63e66808" translate="yes" xml:space="preserve">
          <source>The chain in upward direction looks like this:</source>
          <target state="translated">上向きのチェーンはこんな感じです。</target>
        </trans-unit>
        <trans-unit id="4dbb683a4341522fd20ba6134af3123fa22a5e19" translate="yes" xml:space="preserve">
          <source>The class syntax introduced in ES2015 simplifies things, by providing &lt;code&gt;extends&lt;/code&gt; as the &quot;one true way&quot; to configure the prototype chain in order to simulate classical inheritance in JavaScript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES2015で導入されたクラス構文&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、JavaScriptの従来の継承をシミュレートするためにプロトタイプチェーンを構成する「真の方法」として&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extends&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供することにより、物事を簡素化&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="294a2f4d81f30e6efb14e124ad581924faf12546" translate="yes" xml:space="preserve">
          <source>The concept of &lt;code&gt;prototypal&lt;/code&gt; inheritance is one of the most complicated for many developers. Let's try to understand the root of problem to understand &lt;code&gt;prototypal inheritance&lt;/code&gt; better. Let's start with a &lt;code&gt;plain&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;prototypal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;継承&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の概念は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、多くの開発者にとって最も複雑なものの1つです。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototypal inheritance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりよく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理解するために、問題の根本を理解してみましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;plain&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から始めましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4202ac448e9e806292d729446f5ed2ca97966c9c" translate="yes" xml:space="preserve">
          <source>The earlier presented graphic can then be extended to this (the original &lt;code&gt;Thief.prototype&lt;/code&gt; is left out):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、前に示したグラフィックを次のように拡張できます（元の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thief.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;省略&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;されています）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6d557fdbd98c2f01910e237985ad11b07b68262" translate="yes" xml:space="preserve">
          <source>The exact same logic also explains &lt;code&gt;d.inc&lt;/code&gt; and &lt;code&gt;d.inc2&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まったく同じロジックで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;d.inc&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;d.inc2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も説明さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;てい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="071179b58595f70b3e0246c8299c5223b4b434eb" translate="yes" xml:space="preserve">
          <source>The first line sets &lt;code&gt;c.i&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; as explained in &quot;4)&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の行は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、「4）」で説明されているように、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;c.i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfcb48bc09a18643a47ba25dcb26645262528566" translate="yes" xml:space="preserve">
          <source>The first question would be &lt;strong&gt;how &lt;code&gt;this&lt;/code&gt; keyword could be useful without using &lt;code&gt;new&lt;/code&gt; keyword&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の質問は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用せずに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように役立つ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2bbd054869ff723b04d25a27a791c02b576fdc2" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;Person&lt;/code&gt; itself</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自体&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a56602d2b6e90afd8075ac6fcb4e4fef8bea591" translate="yes" xml:space="preserve">
          <source>The interface to standard classes become extensible. For example, you are using the &lt;code&gt;Array&lt;/code&gt; class and you also need to add a custom serializer for all your array objects. Would you spend time coding up a subclass, or use composition or ... The prototype property solves this by letting the users control the exact set of members/methods available to a class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;標準クラスへのインターフェースは拡張可能になります。たとえば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用していて、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての配列オブジェクトにカスタムシリアライザーを追加する必要があるとします。サブクラスのコーディングに時間を費やしたり、コンポジションを使用したりしますか...プロトタイププロパティは、ユーザーがクラスで使用できるメンバー/メソッドの正確なセットを制御できるようにすることでこれを解決します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8a5278d41e6f81e5c870084bdee36db805218aa" translate="yes" xml:space="preserve">
          <source>The obj has become a class which can now be instantiated. Multiple instances of obj can exist and they all have the &lt;code&gt;test&lt;/code&gt; function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objは、インスタンス化できるクラスになりました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objの複数のインスタンスが存在する可能性があり、それらすべてに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8ed29dc6612f51a31177919321b6fb313d0b80c" translate="yes" xml:space="preserve">
          <source>The object datatypes can be further divided into two types</source>
          <target state="translated">オブジェクトのデータ型は、さらに2つのタイプに分けることができます。</target>
        </trans-unit>
        <trans-unit id="8ef0237671cf69591e3f8b021ff31a9518df95f5" translate="yes" xml:space="preserve">
          <source>The object that will act as prototype when the function is called as a constructor</source>
          <target state="translated">コンストラクタとして関数が呼び出されたときにプロトタイプとして動作するオブジェクト</target>
        </trans-unit>
        <trans-unit id="1e5e14fe193fe8a5cd8cd4d65c97709f9b4c3c83" translate="yes" xml:space="preserve">
          <source>The objects thus created are all &lt;strong&gt;&lt;em&gt;Non Function type objects&lt;/em&gt;&lt;/strong&gt; and return their &lt;strong&gt;typeof&lt;/strong&gt;===&lt;strong&gt;'object'&lt;/strong&gt;. In all these cases the object &quot;a&quot; cannot further create 
objects using operator new. So the following is wrong</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このようにして作成されたオブジェクトはすべて&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非関数型オブジェクトで&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり、その&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; === &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'object'&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返し&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらすべての場合において、オブジェクト &quot;a&quot;は、operator newを使用してオブジェクトをさらに作成することはできません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、以下は間違っています&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bb6ebc6ed49049356585031df45806c66391473" translate="yes" xml:space="preserve">
          <source>The other prototype chain is not longer: &lt;code&gt;Thief&lt;/code&gt; and &lt;code&gt;Person&lt;/code&gt; are siblings sharing the same parent in their prototype chain:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他のプロトタイプチェーンはもうありません：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Thief&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、プロトタイプチェーンで同じ親を共有する兄弟です：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6feced8f881972f18f04637769fb7219dcaa3ac1" translate="yes" xml:space="preserve">
          <source>The prototype chain for various objects work out as follows.</source>
          <target state="translated">様々なオブジェクトのプロトタイプチェーンは、以下のように動作します。</target>
        </trans-unit>
        <trans-unit id="9cd3c03c55b66f267fcbca0018211802743659e2" translate="yes" xml:space="preserve">
          <source>The prototype chain of every object ultimately traces back to Object.prototype (Unless the object is created using Object.create(null) in which case the object has no prototype).</source>
          <target state="translated">すべてのオブジェクトのプロトタイプチェーンは、最終的にObject.prototypeに辿り着きます(Object.create(null)を使用してオブジェクトが作成されていない限り、そのオブジェクトにはプロトタイプがありません)。</target>
        </trans-unit>
        <trans-unit id="34d7b55597c242fac21097965af67f8a385115ea" translate="yes" xml:space="preserve">
          <source>The prototype chain of every object ultimately traces back to Object.prototype (which itself does not have any prototype object) .
Following code can be used for tracing the prototype chain of an object</source>
          <target state="translated">すべてのオブジェクトのプロトタイプチェーンは、最終的に Object.prototype(それ自体はプロトタイプオブジェクトを持っていません)にまでさかのぼります。以下のコードは、オブジェクトのプロトタイプチェーンをトレースするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="cd8dedef06e017d9ce35dc7d39e963eb0dcdbea4" translate="yes" xml:space="preserve">
          <source>The result &lt;code&gt;f.constructor == F&lt;/code&gt; is intuitively correct, since &lt;code&gt;F&lt;/code&gt; is used to construct &lt;code&gt;f&lt;/code&gt;, e.g. set fields, much like in classic OOP languages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f.constructor == F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は直感的に正しいです&lt;/font&gt;&lt;/font&gt; &lt;code&gt;F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、従来のOOP言語と同じように、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構築&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、たとえばフィールドの設定に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用されるため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a51b020b73fe84a79e1e49f6afb49841810ea1ab" translate="yes" xml:space="preserve">
          <source>The seven Koans of prototype</source>
          <target state="translated">プロトタイプの七つの公案</target>
        </trans-unit>
        <trans-unit id="526b0a35ac8072f512aa113d36919e8000921e8a" translate="yes" xml:space="preserve">
          <source>The standardized accessor (ie. getter/setter) property named &lt;code&gt;__proto__&lt;/code&gt; (similar to 4.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という名前の標準化されたアクセサ（つまり、getter / setter）プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（4と同様）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="990d2d3e711bac658c94a8f8517073a731d0ce74" translate="yes" xml:space="preserve">
          <source>The user defined functions are special case.</source>
          <target state="translated">ユーザー定義関数は特殊なケースです。</target>
        </trans-unit>
        <trans-unit id="d149731627fd28ecdc13b42fec745d773696796f" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; is a function. In fact, it is &lt;code&gt;Function.prototype&lt;/code&gt;. Since &lt;code&gt;Person&lt;/code&gt; was created as a function, it shares the same prototype function object that all functions have. It is the same as &lt;code&gt;Person.__proto__&lt;/code&gt;, but that property should not be used. Anyway, with &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; you effectively walk up the ladder of what is called the prototype chain.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際、これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は関数として作成された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、すべての関数と同じプロトタイプ関数オブジェクトを共有しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同じですが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのプロパティは使用しないでください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とにかく、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.getPrototypeOf(Person)&lt;/code&gt; を使用&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すると、プロトタイプチェーンと呼ばれるもののはしごを効果的に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たどる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55158a52e1f0e56b614ff422296621820abe40d1" translate="yes" xml:space="preserve">
          <source>The value pointed at by the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object, is colloquially known as &quot;the prototype of that object.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指す値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、口語的に「そのオブジェクトのプロトタイプ」と呼ばれます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ace089e512ccf3f29213081611ea8aba7bc5c250" translate="yes" xml:space="preserve">
          <source>There are some crucial points that we have to consider before going through the prototype concept.</source>
          <target state="translated">プロトタイプのコンセプトを貫く前に考えなければならない重要なポイントがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="2f37a169d19c5e7c5d00aad1cf25accf7850f92b" translate="yes" xml:space="preserve">
          <source>There are two instance &lt;code&gt;b1&lt;/code&gt; and &lt;code&gt;b2&lt;/code&gt;, whose constructor is &lt;code&gt;Bar&lt;/code&gt; and parent is Foo and has two methods from prototype chain &lt;code&gt;identify&lt;/code&gt; and &lt;code&gt;speak&lt;/code&gt; via &lt;code&gt;Bar&lt;/code&gt; and &lt;code&gt;Foo&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つのインスタンス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b2&lt;/code&gt; があり&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それらのコンストラクターは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり、親はFooであり、プロトタイプチェーンからの2つのメソッドがあり、&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;介して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;identify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;speak&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="700d42d0b87d53a12f6ebf93202bbf0069f077b9" translate="yes" xml:space="preserve">
          <source>There are two types of objects &lt;strong&gt;Function types&lt;/strong&gt; and &lt;strong&gt;Non Function types&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトには、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数タイプ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非関数タイプの&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2つのタイプがあり&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="050daafbf13667ec15e2ee78a6bfa7bdc3cb8cdf" translate="yes" xml:space="preserve">
          <source>There is no function object in this chain (although that could be).</source>
          <target state="translated">このチェーンには関数オブジェクトがありません(あり得るかもしれませんが)。</target>
        </trans-unit>
        <trans-unit id="413e84bf597df31670981d314b2c5f2bf51d62e4" translate="yes" xml:space="preserve">
          <source>There's two distinct but related entities here that need explaining:</source>
          <target state="translated">ここには説明が必要な2つの異なる、しかし関連する実体があります。</target>
        </trans-unit>
        <trans-unit id="22870f2d17c6bb3d54b6c8df212d1cc122d68c4b" translate="yes" xml:space="preserve">
          <source>These are two different things.</source>
          <target state="translated">この2つは別物です。</target>
        </trans-unit>
        <trans-unit id="f3eae4b62cf0520d808b87fda66383d939e41043" translate="yes" xml:space="preserve">
          <source>These data types return following when you use the &lt;strong&gt;typeof&lt;/strong&gt; operator</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用すると、これらのデータ型は以下を返します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0b72ce0baa932e211605865132a5567f8020dfd" translate="yes" xml:space="preserve">
          <source>Think of prototypes as an extra vtable-pointer. When some members are missing from the original class, the prototype is looked up at runtime.</source>
          <target state="translated">プロトタイプは、追加の vtable-pointer と考えてください。元のクラスのメンバが欠けている場合、プロトタイプは実行時に検索されます。</target>
        </trans-unit>
        <trans-unit id="d5393f0f04189ae4dafb2176ce237475a257756b" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;__proto__&lt;/code&gt; property refers to the &lt;code&gt;prototype&lt;/code&gt; property of the constructor function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コンストラクター関数の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9acfeaac06c4d06a3432d81b1056bf5043bb16c9" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;&quot;internal reference&quot;&lt;/strong&gt; that is created in the object for referencing inherited properties is known as the &lt;strong&gt;object's prototype&lt;/strong&gt; (which references the object referenced by Constructor's &lt;strong&gt;&quot;prototype&quot;&lt;/strong&gt; property but is different from it). For any object (Function or Non Function) this can be retrieved using &lt;strong&gt;Object.getPrototypeOf()&lt;/strong&gt; method. Using this method one can trace the prototype chain of an object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;継承されたプロパティを参照するためにオブジェクト内に作成される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「内部参照」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのプロトタイプ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（コンストラクタの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プロトタイプ」&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって参照される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、それとは異なる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを参照する）と呼ばれ&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。任意のオブジェクト（関数または非関数）の場合、これは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.getPrototypeOf（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して取得できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。この方法を使用すると、オブジェクトのプロトタイプチェーンをトレースできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35021a936654ba09c718fc5b956b583cc7c4e83d" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;&quot;prototype&quot; property&lt;/strong&gt; is only present in the &lt;strong&gt;Function type objects&lt;/strong&gt; 
(and never in &lt;strong&gt;Non Function type objects&lt;/strong&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プロトタイプ」プロパティ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数型オブジェクトに&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみ存在し&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; （&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非関数型オブジェクトに&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は存在し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f4f65bc9aedbc2d26edb0e6f83543831f0c5128" translate="yes" xml:space="preserve">
          <source>This article &lt;a href=&quot;https://javascript.info/class#not-just-a-syntax-sugar&quot;&gt;https://javascript.info/class#not-just-a-syntax-sugar&lt;/a&gt; mentions further effects of &lt;code&gt;class&lt;/code&gt; worth knowing. Some of them may not be achievable without the &lt;code&gt;class&lt;/code&gt; keyword (TODO check which):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この記事&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javascript.info/class#not-just-a-syntax-sugar&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://javascript.info/class#not-just-a-syntax-sugar&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;知っておく価値の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらなる影響について述べています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらのいくつかは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なしでは達成できない場合があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（TODOはどちらをチェックするか）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5a1a1158a1a3652a4f8afcf1664264e3d35874b" translate="yes" xml:space="preserve">
          <source>This article is long. But I am sure it will clear most of your queries 
regarding the &quot;prototypical&quot; nature of JavaScript Inheritance. And even more. Please read the complete article.</source>
          <target state="translated">この記事は長いです。しかし、JavaScriptの継承の「プロトタイピング」に関する問い合わせのほとんどがクリアになると思います。そして、それ以上です。記事の全文をお読みください。</target>
        </trans-unit>
        <trans-unit id="08e6f5560f11607190487033cae0c4cf09fa73c8" translate="yes" xml:space="preserve">
          <source>This basically alters the &lt;code&gt;[[Prototype]]&lt;/code&gt; chain allowing properties that are defined on the object assigned to &lt;code&gt;Function.prototype&lt;/code&gt; to be seen by any object created by the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは基本的に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェーンを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更し、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;割り当てられたオブジェクトで定義されたプロパティが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、関数によって作成されたオブジェクトから見えるようにします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d896434b4bd90b6337ba89ce36c21af0f6f72d07" translate="yes" xml:space="preserve">
          <source>This diagram shows many language predefined object nodes:</source>
          <target state="translated">この図は、多くの言語で定義されたオブジェクトのノードを示しています。</target>
        </trans-unit>
        <trans-unit id="9025d80c98b99dcd9b6fc5ec29002f4d9ffaec90" translate="yes" xml:space="preserve">
          <source>This does EXACTLY the same as the previous version of the &lt;code&gt;keyValueStore&lt;/code&gt; object, except that all of its methods are now put in a prototype. What this means, is that all of the 100 instances now share these four methods instead of each having their own copy.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、前のバージョンの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyValueStore&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトとまったく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じですが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのメソッドがプロトタイプに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;組み込まれている点が異なり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、100個のインスタンスすべてが、それぞれ独自のコピーを持つ代わりに、これらの4つのメソッドを共有するということです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e08ee84b359fc8407d9c2f59789b04fd166d001b" translate="yes" xml:space="preserve">
          <source>This has things like &lt;code&gt;.toString, .toValue, .hasOwnProperty&lt;/code&gt; etc...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.toString, .toValue, .hasOwnProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなものがあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c70598b5bbbd87cec0b6da78edc5bd06c14523b" translate="yes" xml:space="preserve">
          <source>This is a property that exists on all&lt;sup&gt;&lt;sup&gt;[2]&lt;/sup&gt;&lt;/sup&gt; objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、すべての&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2]&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;存在するプロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5fa8c6f0946dde273ddb9604454c21fcb7361c5" translate="yes" xml:space="preserve">
          <source>This is a very simple prototype based object model that would be considered as a sample during the explanation, with no comment yet:</source>
          <target state="translated">これは非常にシンプルなプロトタイプベースのオブジェクトモデルで、まだコメントはなく、説明中にサンプルとして考えられそうなものです。</target>
        </trans-unit>
        <trans-unit id="6d62795d7cdd8505efe9be324c47bb2624bab344" translate="yes" xml:space="preserve">
          <source>This is because &lt;strong&gt;when a new object is created (using new operator)it inherits all properties and methods from Constructor function's current prototype object i.e. an&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;internal reference&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;is created in the newly created object that references the object referenced by Constructor function's current prototype object.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、新しいオブジェクトが（new演算子を使用して）作成されると、コンストラクター関数の現在のプロトタイプオブジェクトからすべてのプロパティとメソッドを継承するためです。つまり、&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター関数の現在のプロトタイプオブジェクトによって参照されるオブジェクトを参照する新しく作成されたオブジェクトに&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部参照&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が作成されます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bcf28287745328dbe5a8624a1872b4d744f2f572" translate="yes" xml:space="preserve">
          <source>This is the so-called &lt;em&gt;prototype chain&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、いわゆる&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプチェーン&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c87bd21d9c4e9dbd47806175bb0f1d38b294827" translate="yes" xml:space="preserve">
          <source>This is what happens behind the scenes:
// what the &lt;code&gt;JavaScript&lt;/code&gt; engine does</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは舞台裏で何が起こるかです：// &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JavaScript&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エンジンは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何をし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a10730f851fa7149ce738e78ef16148c432249e0" translate="yes" xml:space="preserve">
          <source>This symmetry can be broken by explicitly assigning a different object to the &lt;code&gt;prototype&lt;/code&gt; property (more about that later).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この対称性は、別のオブジェクトを明示的に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;割り当てることによって壊すことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます（これについては後で詳しく説明します）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="638323a921bc7286a77e12bf97d8f3013a684830" translate="yes" xml:space="preserve">
          <source>This way, any time you do &lt;code&gt;new Bar;&lt;/code&gt; the prototype chain is set up for you, you get everything defined on &lt;code&gt;Bar.prototype&lt;/code&gt; and everything defined on &lt;code&gt;Object.prototype&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このようにして、いつでも&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Bar;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプチェーンは、あなたが上で定義されたすべてのものを取得、あなたのために設定されて&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に定義され、すべて&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e00297b8bcfe8f20cb6ddea20a7e2be8b0c46326" translate="yes" xml:space="preserve">
          <source>This, is a simplified example of how prototypes work, where a tree of data is searched for the thing you're looking for.</source>
          <target state="translated">これは、データのツリーを検索して探しているものを、プロトタイプがどのように動作するかを簡略化した例です。</target>
        </trans-unit>
        <trans-unit id="c34bd44153421ecb4ee7a84a5cf2f9e94314d16d" translate="yes" xml:space="preserve">
          <source>To summarise:</source>
          <target state="translated">要約すると</target>
        </trans-unit>
        <trans-unit id="1880ce0a92d66ac7be9b42c43f20dd758f47083c" translate="yes" xml:space="preserve">
          <source>To take the first step we have to figure out, how JavaScript functions actually work , as a class like function using &lt;strong&gt;&lt;code&gt;this&lt;/code&gt;&lt;/strong&gt; keyword in it or just as a regular function with its arguments, what it does and what it returns.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初のステップを実行するには、JavaScript関数が実際にどのように機能するか、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;this&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するクラスのような関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として、または引数を持つ通常の関数として、何をして何を返すかを理解する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="df7c9dfab28179cd2982c04c0af88014763a54b9" translate="yes" xml:space="preserve">
          <source>Until now I've been extending the base object, now I create another object and then inheriting from Person.</source>
          <target state="translated">今まではベースとなるオブジェクトを拡張していましたが、今度は別のオブジェクトを作成してPersonを継承しています。</target>
        </trans-unit>
        <trans-unit id="1d4e3821f462de88d9514c59695341a4e93fd936" translate="yes" xml:space="preserve">
          <source>Update: correct way</source>
          <target state="translated">更新:正しい方法</target>
        </trans-unit>
        <trans-unit id="83d91100eeefc6d4f17559200dd6e80c65042ea5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;new&lt;/code&gt; with constructor functions allows us to simulate classical inheritance in JavaScript; although JavaScript's inheritance system is - as we have seen - prototypical, and not class-based.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクタ関数では、JavaScriptで古典の継承をシミュレートするために私たちをことができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptの継承システムは-これまで見てきたように-プロトタイプであり、クラスベースではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bddc98d1d24dd45bb69b10ad8884565c46657b1" translate="yes" xml:space="preserve">
          <source>We can also add &lt;code&gt;primitives&lt;/code&gt; or &lt;code&gt;objects&lt;/code&gt; to our &lt;code&gt;Prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;Prototype&lt;/code&gt; に&lt;/font&gt; &lt;code&gt;primitives&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;objects&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加することもでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b3fc1203624a21f622f753ab310467b6ee55a49" translate="yes" xml:space="preserve">
          <source>We have modified the &lt;code&gt;Root&lt;/code&gt; and added a &lt;code&gt;function&lt;/code&gt; branch to it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Root&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブランチを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10a8a5e09ba4288070fb87f9d8442e3eab9dc5b8" translate="yes" xml:space="preserve">
          <source>What is important here is that Derp does not give the pen to you, as you don't have a direct &lt;em&gt;relationship&lt;/em&gt; with him.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで重要なのは、あなたが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直接の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関係&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持っていないので、ダープはあなたにペンを与えないという&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="308c697d81505ef2c3ab0d8f16faa8f1f568e725" translate="yes" xml:space="preserve">
          <source>What's stored here is another object, which, as an object itself, has a &lt;code&gt;[[Prototype]]&lt;/code&gt; of its own that points to another object. That other object has a &lt;code&gt;[[Prototype]]&lt;/code&gt; of its own. This story continues until you reach the prototypical object that provides methods that are accessible on all objects (like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString&quot;&gt;&lt;code&gt;.toString&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここに格納されているのは別のオブジェクトであり、オブジェクト自体として、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別のオブジェクトを指す独自の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を持っています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その他のオブジェクトには、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;独自の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このストーリーは、すべてのオブジェクト（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString&quot;&gt; &lt;code&gt;.toString&lt;/code&gt; など&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アクセス可能なメソッドを提供する典型的なオブジェクトに到達するまで続きます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3694f710d098fa715f0d5d1cc32e7707e441a5a" translate="yes" xml:space="preserve">
          <source>When I do &lt;code&gt;obj.property&lt;/code&gt;, where does JS look for &lt;code&gt;.property&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj.property&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実行すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、JSはどこで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.property&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;探します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b6a529ab132f6333b5042f9ced780debc66b2d7" translate="yes" xml:space="preserve">
          <source>When a constructor creates an object, that object implicitly references the constructor&amp;rsquo;s &amp;ldquo;prototype&amp;rdquo; property for the purpose of resolving property references. The constructor&amp;rsquo;s &amp;ldquo;prototype&amp;rdquo; property can be referenced by the program expression constructor.prototype, and properties added to an object&amp;rsquo;s prototype are shared, through inheritance, by all objects sharing the prototype.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクターがオブジェクトを作成すると、そのオブジェクトは、プロパティ参照を解決する目的で、コンストラクターの「プロトタイプ」プロパティを暗黙的に参照します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクターの「プロトタイプ」プロパティは、プログラム式のconstructor.prototypeによって参照でき、オブジェクトのプロトタイプに追加されたプロパティは、継承を通じて、プロトタイプを共有するすべてのオブジェクトによって共有されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2bfe48d3e49e62cf73169326ebe7fef41c61b3f" translate="yes" xml:space="preserve">
          <source>When a function is used as a constructor with the &lt;code&gt;new&lt;/code&gt; keyword the object gets  prototype. A reference to this prototype can be found on the &lt;code&gt;__proto__&lt;/code&gt; property of the newly created object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクタとして使用されると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オブジェクトはプロトタイプを取得します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このプロトタイプへの参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、新しく作成されたオブジェクトの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティにあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82f0ffb0fdb8a57c686a83e7bb71c7129e34adfb" translate="yes" xml:space="preserve">
          <source>When a property is accessed to just read it's value, its looked up in the scope chain. The search for the variable starts from the &lt;strong&gt;product&lt;/strong&gt; upwards to it's prototype. If such a variable is found in the search, the search is stopped right there, and the value is returned. If such a variable cannot be found in the scope chain, undefined is returned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティにアクセスしてその値を読み取ると、スコープチェーンでルックアップされます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数の検索は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;製品&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプに向かって&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始まり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのような変数が検索で見つかった場合、検索はそこで停止され、値が返されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのような変数がスコープチェーンで見つからない場合、undefinedが返されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11f5fa09496d74fe4a1922d148fbe3e307bee7bb" translate="yes" xml:space="preserve">
          <source>When a property is written(altered), then the property is always written on the &lt;strong&gt;product&lt;/strong&gt; object. If the &lt;strong&gt;product&lt;/strong&gt; does not have such a property already, it is implicitly created and written.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティが書き込まれる（変更される）場合、プロパティは常に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;製品&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;書き込まれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;製品に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのようなプロパティがまだない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;暗黙的に作成および記述されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fcec556ef2aa94d6710268da1bdec50f8d1551e" translate="yes" xml:space="preserve">
          <source>When we write &lt;code&gt;f.constructor&lt;/code&gt;, JavaScript does the &lt;code&gt;.&lt;/code&gt; lookup as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;f.constructor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を記述するとき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、JavaScriptは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次として検索：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9f43d7f42e2d64828fbcea2a70441dce8c6281e" translate="yes" xml:space="preserve">
          <source>When you &lt;em&gt;do&lt;/em&gt; make assignments to &lt;code&gt;Function.prototype&lt;/code&gt; all you are doing is extending the prototype chain to include another object. It's like an insertion in a singly linked list.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;への割り当てを&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行う&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、プロトタイプチェーンを拡張して別のオブジェクトを含めるだけです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単一リンクリストへの挿入のようなものです。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f3c324ba183f857de27c2aeeafc95f2bd1d3a08" translate="yes" xml:space="preserve">
          <source>While as said I can't call setAmountDue(), getAmountDue() on a Person.</source>
          <target state="translated">とはいえ、Person の setAmountDue()や getAmountDue()を呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="3adb0b0d5933c83516b3ac347d11102aa4cb09d8" translate="yes" xml:space="preserve">
          <source>Why is this usefull:</source>
          <target state="translated">なぜこれが役に立つのか。</target>
        </trans-unit>
        <trans-unit id="2446e1c4a0c9c983d22a0f4fe25bc995caf38c03" translate="yes" xml:space="preserve">
          <source>Without the class syntax, developers had to manually configure the prototype chain to achieve similar functionality to classical inheritance. This led to a preponderance of different ways to achieve this.</source>
          <target state="translated">クラス構文がなければ、開発者は古典的な継承と同様の機能を実現するために、プロトタイプチェーンを手動で設定しなければなりませんでした。このため、これを実現するためのさまざまな方法が優勢になりました。</target>
        </trans-unit>
        <trans-unit id="82ad9964aff33a7fae6d367983f38443929e774c" translate="yes" xml:space="preserve">
          <source>You can avoid &lt;code&gt;.&lt;/code&gt; lookup with &lt;code&gt;obj.hasOwnProperty('key')&lt;/code&gt; and &lt;code&gt;Object.getOwnPropertyNames(f)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは避けることができ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj.hasOwnProperty('key')&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt; &lt;code&gt;Object.getOwnPropertyNames(f)&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用したルックアップ&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0eae619e62c4c1803774abb2b498918e68edcc45" translate="yes" xml:space="preserve">
          <source>You can find a graph of the relation of Javascript objects by their properties here:</source>
          <target state="translated">ここでは、Javascriptオブジェクトのプロパティによる関係性のグラフを見ることができます。</target>
        </trans-unit>
        <trans-unit id="7219cbdc31f1ab1618e475dc21b4812f9486383f" translate="yes" xml:space="preserve">
          <source>You can jump back and forth between the two prototype chains:</source>
          <target state="translated">2つのプロトタイプチェーンを行ったり来たりしてジャンプすることができます。</target>
        </trans-unit>
        <trans-unit id="e517cb8789da1d3b8f9095edf50ac5e0df256ef5" translate="yes" xml:space="preserve">
          <source>You can't actually see the link target (&lt;code&gt;Object.prototype&lt;/code&gt;) in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;new&lt;/a&gt; statement; instead the target is implied by the constructor (&lt;code&gt;Object&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステートメント&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リンクターゲット（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際に見ることはできません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに、ターゲットはコンストラクター（&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって暗黙指定され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57c9e51f58a439e8f48d2831659d6bc67df4b3ad" translate="yes" xml:space="preserve">
          <source>You create the &lt;em&gt;[[Prototype]]&lt;/em&gt; link when creating an object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは、作成&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[[プロトタイプ]]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトを作成するときにリンクを。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ccacad21f5cbb195fee4f8bea5daaca9c11e1a04" translate="yes" xml:space="preserve">
          <source>You're in high-school, and you're in class and have a quiz that's due today, but you don't have a pen to fill out your answers. Doh!</source>
          <target state="translated">高校生のあなたはクラスにいて 小テストの締め切りが今日なのに 答えを記入するペンを持っていません ドッ!</target>
        </trans-unit>
        <trans-unit id="1a688d50614f2b00815a588212c2c36453c98d26" translate="yes" xml:space="preserve">
          <source>You're sitting next to your friend Finnius, who might have a pen. You ask, and he looks around his desk unsuccessfully, but instead of saying &quot;I don't have a pen&quot;, he's a nice friend he checks with his other friend Derp if he has a pen. Derp does indeed have a spare pen and passes it back to Finnius, who passes it over to you to complete your quiz. Derp has entrusted the pen to Finnius, who has delegated the pen to you for use.</source>
          <target state="translated">あなたは、ペンを持っているかもしれない友人のフィニュスの隣に座っています。あなたが尋ねると、彼は失敗して机の周りを見回しますが、「ペンを持っていない」と言う代わりに、もう一人の友達Derpにペンを持っているかどうかを確認するいい友達です。Derpは確かに予備のペンを持っていて、それをFinniusに渡してクイズを完成させます。DerpはペンをFinniusに託しました。</target>
        </trans-unit>
        <trans-unit id="2210886a547c650d55c3aa9d9ffff6029dd660a1" translate="yes" xml:space="preserve">
          <source>a. &amp;amp; b. Instead of these two steps you can have the exact same result by doing:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;＆b。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの2つのステップの代わりに、次のようにすることでまったく同じ結果を得ることができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b523def3dc4d8951393218ef49700cd57e531453" translate="yes" xml:space="preserve">
          <source>a. first of all it makes an empty object, basically an empty hash like:</source>
          <target state="translated">a.まず第一に、基本的には空のハッシュのような空のオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="06ce42a61614d7a74f65884cc9c9489809dadc4e" translate="yes" xml:space="preserve">
          <source>a. first way is just to call the function as a regular function:</source>
          <target state="translated">a.最初の方法は、関数を通常の関数として呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="747eaff32129c10b3603b6e3bb5cf3560caca4a3" translate="yes" xml:space="preserve">
          <source>and now &lt;strong&gt;without using &lt;code&gt;new&lt;/code&gt; keyword&lt;/strong&gt; how we could use these functions. So JavaScript has 3 different ways to do that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして今&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用せずに、&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの関数をどのように使用できるかを説明します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、JavaScriptにはそのための3つの方法があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="270a485819e70fb5c889365a5fe2b1161f9e71cb" translate="yes" xml:space="preserve">
          <source>and now other objects are in peace, but it still doesn't seem to be a good practice. So we have still one more solutions, but to use this solution we should get back to that line of code where &lt;code&gt;person&lt;/code&gt; object got created (&lt;code&gt;var person = {};&lt;/code&gt;) then change it like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして今、他のオブジェクトは平和ですが、それでもまだ良い習慣ではないようです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、さらに1つのソリューションがありますが、このソリューションを使用するには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトが作成された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コード行に戻り&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var person = {};&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）、次のように変更する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bea2c43b740e3468b0797f8d81ffa93f7015aa5b" translate="yes" xml:space="preserve">
          <source>and now the &lt;code&gt;person&lt;/code&gt; object is like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして今、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトは次のようなものです：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="661c68bf46c0c3da88764bafeb5b9658118b2f68" translate="yes" xml:space="preserve">
          <source>and that's how inheritance works in JavaScript.</source>
          <target state="translated">と、これがJavaScriptでの継承の仕組みです。</target>
        </trans-unit>
        <trans-unit id="6b8d96ceb91b872268235e2929b43b012067d683" translate="yes" xml:space="preserve">
          <source>another scheme showing &lt;strong&gt;__proto__&lt;/strong&gt;, &lt;strong&gt;prototype&lt;/strong&gt; and &lt;strong&gt;constructor&lt;/strong&gt; relations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクターの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関係&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を示す別のスキーム&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b1bbcf13309abdf78f823b3e031f46729dc16b6" translate="yes" xml:space="preserve">
          <source>as you see using any of these two way &lt;code&gt;this&lt;/code&gt; would exactly point to the &lt;code&gt;person&lt;/code&gt; object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの2つの方法のいずれかを使用して表示されるように、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を正確に指し示し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c26a5de286c4222075250d40c67537151a9b573" translate="yes" xml:space="preserve">
          <source>b. We can &lt;strong&gt;attach&lt;/strong&gt; them to an object, as its properties</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらをそのプロパティとしてオブジェクトに&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添付&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe691ba9d0293f967e57a192521eebae76e0310c" translate="yes" xml:space="preserve">
          <source>b. the next step that JavaScript takes is to &lt;strong&gt;attach&lt;/strong&gt; the all prototype objects to the newly created object</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptが実行する次のステップは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、すべてのプロトタイプオブジェクトを新しく作成されたオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アタッチ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することです&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e11f7639d23b2bc73655189a0a5dad8205ffb0c2" translate="yes" xml:space="preserve">
          <source>between a constructor and the prototype object that will be used for constructing objects</source>
          <target state="translated">コンストラクタとオブジェクトを構築するために使用されるプロトタイプオブジェクトの間にある</target>
        </trans-unit>
        <trans-unit id="9ac06820b6c4ca173003422e282903264e66e63b" translate="yes" xml:space="preserve">
          <source>between an object and its constructor</source>
          <target state="translated">オブジェクトとコンストラクタの間</target>
        </trans-unit>
        <trans-unit id="af6622315c4f4a1bb153af5b5a466a4adfbd3c65" translate="yes" xml:space="preserve">
          <source>c. JavaScript has another way to provide the function with &lt;code&gt;this&lt;/code&gt;, which is using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;call&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;apply&lt;/a&gt; to invoke the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptには、関数に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を提供する別の方法があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;call&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;apply&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て関数を呼び出します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14d36492392f6e9eb32129ca46c2667809a4bb2f" translate="yes" xml:space="preserve">
          <source>c. then it gives that object to the constructor,</source>
          <target state="translated">c.の場合は、そのオブジェクトをコンストラクタに渡します。</target>
        </trans-unit>
        <trans-unit id="944991ca420147c47be82198f1d0f28c22fdd3ca" translate="yes" xml:space="preserve">
          <source>following automatically happens</source>
          <target state="translated">次のようになる</target>
        </trans-unit>
        <trans-unit id="e9e469ab51077f3049787ec9c4af591de797f736" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;obj_n.prop_X&lt;/code&gt; doesn't exist, check &lt;code&gt;obj_n+1.prop_X&lt;/code&gt; where &lt;code&gt;obj_n+1 = obj_n.[[prototype]]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n.prop_X&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;存在しない場合、チェック&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj_n+1.prop_X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj_n+1 = obj_n.[[prototype]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98878bceb45ce34551076d813362c5705957b889" translate="yes" xml:space="preserve">
          <source>if some &lt;code&gt;__proto__&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="957397f1ce4597e6f03a21bafeffdccdc2862a09" translate="yes" xml:space="preserve">
          <source>in this case, this would be the current context object, which is usually is the global  &lt;code&gt;window&lt;/code&gt; object in the browser or &lt;code&gt;GLOBAL&lt;/code&gt; in &lt;code&gt;Node.js&lt;/code&gt;. It means we would have, window.name in browser or GLOBAL.name in Node.js, with &quot;George&quot; as its value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この場合には、これは通常、グローバルで現在のコンテキストオブジェクト、だろう &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブラウザまたは内のオブジェクト&lt;/font&gt;&lt;/font&gt; &lt;code&gt;GLOBAL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Node.js&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、ブラウザのwindow.nameまたはNode.jsのGLOBAL.nameに &quot;George&quot;を値として持つことを意味します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c1e9838ad66b5acac772c2b80052e66f8bb6e81" translate="yes" xml:space="preserve">
          <source>in this part I'm gonna be trying to take all the steps which JavaScript takes, without using the &lt;code&gt;new&lt;/code&gt; keyword and &lt;code&gt;prototype&lt;/code&gt;, when you use &lt;code&gt;new&lt;/code&gt; keyword. so when we do &lt;code&gt;new Person(&quot;George&quot;)&lt;/code&gt;, &lt;code&gt;Person&lt;/code&gt; function serves as a constructor, These are what JavaScript does, one by one:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この部分で私は使用せず、JavaScriptが取るすべてのステップを取るしようとしているつもりだ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードや&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードを。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new Person(&quot;George&quot;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数がコンストラクタとして機能します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。JavaScriptが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行する処理は次のとおりです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8b60a22e95f94b25f94178a01587a5b22f0b255" translate="yes" xml:space="preserve">
          <source>it evaluates &lt;code&gt;F&lt;/code&gt; with &lt;code&gt;this&lt;/code&gt; being the value that &lt;code&gt;new&lt;/code&gt; will return, which then gets assigned to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;F&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;評価&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が返す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であり、次に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に割り当てられ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bff474d1de3771b5e9dd9e8d5b475aeff41cee13" translate="yes" xml:space="preserve">
          <source>now the end result before simulating the other steps:
    Object {name: &quot;George&quot;}</source>
          <target state="translated">では、他のステップをシミュレートする前に、最終的な結果を表示します。オブジェクト {name:&quot;George&quot;}</target>
        </trans-unit>
        <trans-unit id="f090cec5bdf24d256d779b2d37211c8e96960cea" translate="yes" xml:space="preserve">
          <source>now we can call the &lt;code&gt;getName&lt;/code&gt; function in our &lt;code&gt;my_person_prototype&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で、&lt;/font&gt; &lt;code&gt;my_person_prototype&lt;/code&gt; で&lt;/font&gt; &lt;code&gt;getName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出すことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="ede1d521cd3748dac9815542baaaf55df7de6292" translate="yes" xml:space="preserve">
          <source>properties of &lt;code&gt;obj.__proto__.__proto__&lt;/code&gt;, and so on</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj.__proto__.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d68f3e62d74843a67cb1c3164addcbaecebd36c5" translate="yes" xml:space="preserve">
          <source>properties of &lt;code&gt;obj.__proto__&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;obj.__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f54c786eb3d3ae288f749656124234986eda7990" translate="yes" xml:space="preserve">
          <source>prototype chain</source>
          <target state="translated">プロトタイプチェーン</target>
        </trans-unit>
        <trans-unit id="e0c912d4dcf17ff831277c0922d2e821e226325a" translate="yes" xml:space="preserve">
          <source>prototype chain can be technically extended as long as you want, each time by setting the prototype of the subclass equal to an object of the parent class.</source>
          <target state="translated">プロトタイプチェーンは、サブクラスのプロトタイプを親クラスのオブジェクトと等しく設定することで、技術的には好きなだけ拡張することができます。</target>
        </trans-unit>
        <trans-unit id="4abe20314da3f946b7e743a6a2f6170b9b8c2ae7" translate="yes" xml:space="preserve">
          <source>prototype chain ultimately falls back to Object.prototype.</source>
          <target state="translated">プロトタイプチェーンは最終的にObject.prototype.prototypeにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="89b37e815336bf7ebbfbf64979db6bffe086c6fa" translate="yes" xml:space="preserve">
          <source>sets:</source>
          <target state="translated">sets:</target>
        </trans-unit>
        <trans-unit id="e94a3f708b00862014509df4f2cc93c12e2ff3ad" translate="yes" xml:space="preserve">
          <source>the prototype internal property, denoted as &lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2&quot;&gt;in ES5&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示さプロトタイプ内部プロパティ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES5に&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ae9fc273476a1b945442f7aac048be5f9abd6e9" translate="yes" xml:space="preserve">
          <source>the prototype property, as in &lt;code&gt;obj.prototype&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;obj.prototype&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなプロトタイププロパティ&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5e4668a0e4a6323de5e94029153d5d97840ee0f" translate="yes" xml:space="preserve">
          <source>then &lt;code&gt;new&lt;/code&gt; has set:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その後、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;セット：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a4a01450a1231a348a771bd61b5a299a2e893fa" translate="yes" xml:space="preserve">
          <source>then the constructor can do whatever it wants, because &lt;strong&gt;this&lt;/strong&gt; inside of that constructor is the object that was just created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクタの内部は、作成されたばかりのオブジェクトである&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、コンストラクタは必要に応じて何でも実行できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f576b11bd87be0a0c3eecfa10723461a7eb5833" translate="yes" xml:space="preserve">
          <source>these 3 methods are the important initial steps to figure out the .prototype functionality.</source>
          <target state="translated">これらの3つの方法は、.prototypeの機能を把握するための重要な最初のステップです。</target>
        </trans-unit>
        <trans-unit id="e972f984201bef12b535fee7733a14678c62d136" translate="yes" xml:space="preserve">
          <source>this is the second step to understand the &lt;code&gt;.prototype&lt;/code&gt; functionality.this is what I use to simulate the process:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を理解するための2番目のステップです。これは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロセスのシミュレーションに使用するものです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a80c6e28984a71a0b8d0d93aa0e77bfc7ac6c1f" translate="yes" xml:space="preserve">
          <source>this way we can call them like:</source>
          <target state="translated">このように呼ぶことができます。</target>
        </trans-unit>
        <trans-unit id="43d37aa6f9a31838f9f3674dfdffb9d9be138560" translate="yes" xml:space="preserve">
          <source>this way which is my favorite, we can easily call our functions like:</source>
          <target state="translated">この方法は私のお気に入りですが、以下のような関数を簡単に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="505825b685f7c214441d8d78811c1a25cf9cf413" translate="yes" xml:space="preserve">
          <source>we can do this with our sample like:</source>
          <target state="translated">のようなサンプルでこれを行うことができます。</target>
        </trans-unit>
        <trans-unit id="d238c7e63e3ead1f37e5c92ddc733d20364c8151" translate="yes" xml:space="preserve">
          <source>we have &lt;code&gt;my_person_prototype&lt;/code&gt; here similar to the prototype object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我々は持っている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;my_person_prototype&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプオブジェクトに似てここに。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44108b8768516452bc02899a0cb6437fdffad7d3" translate="yes" xml:space="preserve">
          <source>what is the exact purpose of this &quot;.prototype&quot; property?</source>
          <target state="translated">この&quot;.prototype &quot;プロパティの正確な目的は何ですか?</target>
        </trans-unit>
        <trans-unit id="f0daca7c8c95a8fa1c4019b4daf3f2dc098e1b6d" translate="yes" xml:space="preserve">
          <source>what it does is creating a new JavaScript &lt;code&gt;Object&lt;/code&gt; and attach the &lt;code&gt;propertiesObject&lt;/code&gt; to the &lt;code&gt;__proto__&lt;/code&gt; attribute. So to make sure you can do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、新しいJavaScript &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;propertiesObject&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;__proto__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関連付け&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だからあなたができることを確認するために：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5deb2c5df83283ff6a38b0d65f3fabb8eb880d5c" translate="yes" xml:space="preserve">
          <source>when we call a function in Javascript as &lt;code&gt;X.Y()&lt;/code&gt;, JavaScript automatically sets &lt;code&gt;this&lt;/code&gt; to equal &lt;code&gt;X&lt;/code&gt; inside the &lt;code&gt;Y()&lt;/code&gt; function call!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;X.Y()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として関数を呼び出すと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt; &lt;code&gt;Y()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数呼び出し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動的に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に等しく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます！&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="401e87265e4c30e83ad1ae9932568c3536246a3b" translate="yes" xml:space="preserve">
          <source>where as in the below code</source>
          <target state="translated">以下のコードのように</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
