<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/574594">
    <body>
      <group id="574594">
        <trans-unit id="92988180e6baad467ae9efd44736829fdc5a265f" translate="yes" xml:space="preserve">
          <source>(You may need to run: &lt;code&gt;chmod +x MyJarFile-1.0-jar-with-dependencies.jar&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（您可能需要运行：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;chmod +x MyJarFile-1.0-jar-with-dependencies.jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85221b4c2462451a594926263b16875810b5800a" translate="yes" xml:space="preserve">
          <source>1) Just right-click on your project folder (in Eclipse) and select &lt;code&gt;Export&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1）只需右键单击您的项目文件夹（在Eclipse中），然后选择&amp;ldquo; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Export&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b79e15f3a679e4ee640ecb21bffcfe64708a81f0" translate="yes" xml:space="preserve">
          <source>2) Then select &lt;code&gt;Java&lt;/code&gt; -&amp;gt; &lt;code&gt;Runnable Jar&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2）然后选择&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Java&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable Jar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c9daf81f4c370e47fc0d007fc2cc0b84e87b0c8" translate="yes" xml:space="preserve">
          <source>3) You will be asked to choose the location of the jar file</source>
          <target state="translated">3)你会被要求选择jar文件的位置。</target>
        </trans-unit>
        <trans-unit id="283d51a051a6a624c29add080729ae183cd77411" translate="yes" xml:space="preserve">
          <source>4) Finally, select the class that has the Main method that you want to run and choose &lt;code&gt;Package dependencies with the Jar file&lt;/code&gt; and click &lt;code&gt;Finish&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4）最后，选择具有要运行的Main方法的类，然后选择&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Package dependencies with the Jar file&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后单击&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Finish&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ad06ce50daedb4c94968932e042d9a923fe7acc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://code.google.com/p/onejar-maven-plugin/&quot;&gt;Another option is the OneJar plugin&lt;/a&gt;.  This performs the above repackaging actions all in one step.</source>
          <target state="translated">&lt;a href=&quot;http://code.google.com/p/onejar-maven-plugin/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一个选择是OneJar插件&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这一步就完成了上述重新打包操作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aeebcdad30c92c32e51b3deb97701b6f1d4b2be2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compile goal should be added before assembly:single or otherwise the code on your own project is not included.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编译目标应该在Assembly：single：single之前添加，否则您自己的项目中的代码将不包括在内。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cba66be382ea3720e70b7ea36901946a0bb0e436" translate="yes" xml:space="preserve">
          <source>A good alternative :</source>
          <target state="translated">一个不错的选择。</target>
        </trans-unit>
        <trans-unit id="f4065682df2c48a7476728d2acd9797707aabddc" translate="yes" xml:space="preserve">
          <source>Add potential unecessary Spring and Spring Boot related classes.</source>
          <target state="translated">增加潜在的不需要的Spring和Spring Boot相关类。</target>
        </trans-unit>
        <trans-unit id="f976702fba0be5367f58426ce368cb88dc0c77d2" translate="yes" xml:space="preserve">
          <source>Add to pom.xml:</source>
          <target state="translated">添加到pom.xml中。</target>
        </trans-unit>
        <trans-unit id="ae34a9c96503fa14f3f67ce7140d19ef7c1f4678" translate="yes" xml:space="preserve">
          <source>After doing this don&amp;rsquo;t forget to run MAVEN tool with this command mvn clean compile assembly:single</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完成此操作后，请不要忘记使用以下命令运行MAVEN工具mvn clean compile assembly：single&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a16d1ec086b3e870a834b1c1523159dddefa55b" translate="yes" xml:space="preserve">
          <source>Afterwards you have to switch via the console to the directory, where the pom.xml is located. Then you have to execute &lt;strong&gt;mvn assembly:single&lt;/strong&gt; and then your executable JAR file with dependencies will be hopefully build. You can check it when switching to the output (target) directory with &lt;strong&gt;cd ./target&lt;/strong&gt; and starting your jar with a command similiar to &lt;strong&gt;java -jar mavenproject1-1.0-SNAPSHOT-jar-with-dependencies.jar&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后，您必须通过控制台切换到pom.xml所在的目录。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后，您必须执行&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mvn assembly：single&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，然后将有望构建具有依赖性的可执行JAR文件。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cd ./target&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;切换到输出（目标）目录并使用&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类似于&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;java -jar mavenproject1-1.0-SNAPSHOT-jar-with-dependencies.jar&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的命令启动jar &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时，可以检查它&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4153a1e098b981803ae3238e610b51730e802a7" translate="yes" xml:space="preserve">
          <source>Alternatively use &lt;code&gt;${project.build.directory}/classes/lib&lt;/code&gt; as OutputDirectory to integrate all jar-files into the main jar, but then you will need to add custom classloading code to load the jars.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或者使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;${project.build.directory}/classes/lib&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作为OutputDirectory将所有jar文件集成到主jar中，但是您将需要添加自定义类加载代码来加载jar。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8a9795e15ba56eb99d781619f0d626c55fd2484" translate="yes" xml:space="preserve">
          <source>And exactly that one is described here: &lt;a href=&quot;https://caffebig.wordpress.com/2013/04/05/executable-jar-file-with-dependent-jars-using-maven/&quot;&gt;https://caffebig.wordpress.com/2013/04/05/executable-jar-file-with-dependent-jars-using-maven/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正是在这里描述了一个：&lt;/font&gt;&lt;a href=&quot;https://caffebig.wordpress.com/2013/04/05/executable-jar-file-with-dependent-jars-using-maven/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//caffebig.wordpress.com/2013/04/05/executable-jar-file-with-dependent-jars-using-maven/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd1bfb909a8c0f18d9fbc561e47ee72784ff62e8" translate="yes" xml:space="preserve">
          <source>And finally</source>
          <target state="translated">最后是</target>
        </trans-unit>
        <trans-unit id="85a47482a9010b4ab5e8e485ad007169dfb20ec9" translate="yes" xml:space="preserve">
          <source>Another option if you really want to repackage the other JARs contents inside your single resultant JAR is the &lt;a href=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/&quot;&gt;Maven Assembly plugin&lt;/a&gt;.  It unpacks and then repacks everything into a directory via &lt;code&gt;&amp;lt;unpack&amp;gt;true&amp;lt;/unpack&amp;gt;&lt;/code&gt;. Then you'd have a second pass that built it into one massive JAR.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您真的想在单个生成的JAR中重新打包其他JAR内容，则可以使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Maven Assembly插件&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它将解压缩，然后通过&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;unpack&amp;gt;true&amp;lt;/unpack&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有内容重新打包到目录中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后，您将获得第二次通过，将其构建为一个大型JAR。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42807f54d7752f7d7a0c3c57b7dd3188fa6696b4" translate="yes" xml:space="preserve">
          <source>Apache Maven Assembly Plugin</source>
          <target state="translated">Apache Maven 汇编插件</target>
        </trans-unit>
        <trans-unit id="1fe9daf3f509ed25c0d624bb25f843fb10025b73" translate="yes" xml:space="preserve">
          <source>Apache Maven Shade Plugin</source>
          <target state="translated">Apache Maven Shade Plugin</target>
        </trans-unit>
        <trans-unit id="38f2573932e95ebcf4f7bf95f4cca9f483507eef" translate="yes" xml:space="preserve">
          <source>At this point the &lt;code&gt;jar&lt;/code&gt; is actually executable with external classpath elements.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此时，该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上可以与外部classpath元素一起执行。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcd8c20c10f5bf04abbb913e98fe33d33a5699f7" translate="yes" xml:space="preserve">
          <source>Be aware that your dependencies need to have a scope of compile or runtime for this to work properly.</source>
          <target state="translated">注意,你的依赖项需要有一个编译或运行时的范围才能正常工作。</target>
        </trans-unit>
        <trans-unit id="db0b9a1a8ead69e8e8f0f1d7371e2afb4c0ad8b8" translate="yes" xml:space="preserve">
          <source>But if you use your project in other contexts (like in a webapp, or dropped in a folder where other jars are sitting), you may have jar duplicates in your classpath (the ones in the folder, the one in the jars). Maybe not a bid deal but i usually avoid this.</source>
          <target state="translated">但是如果你在其他环境下使用你的项目(比如在webapp中,或者放在其他jar所在的文件夹中),你可能会在你的classpath中出现jar的重复(文件夹中的jar,jar中的那个)。也许不是竞价交易,但我通常会避免这种情况。</target>
        </trans-unit>
        <trans-unit id="05335f757a5351b285ef4d080df73dfb7749cdab" translate="yes" xml:space="preserve">
          <source>Class: org.apache.maven.plugin.assembly.io.DefaultAssemblyReader</source>
          <target state="translated">类:org.apache.maven.plugin.jugin.assembly.io.DefaultAssemblyReader</target>
        </trans-unit>
        <trans-unit id="239f5bbd42240f9afd77ab9f3c1c805ae8ee1e98" translate="yes" xml:space="preserve">
          <source>Commonly this goal is tied to a build phase to execute automatically. This ensures the JAR is built when executing &lt;code&gt;mvn install&lt;/code&gt; or performing a deployment/release.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常，此目标与自动执行的构建阶段相关。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样可以确保在执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mvn install&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或执行部署/发布&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时构建JAR &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aed6731c7cb4c61796120f97936826ae6ecba2d6" translate="yes" xml:space="preserve">
          <source>Configure the &lt;code&gt;maven-jar-plugin&lt;/code&gt; to specify the main class of your executable jar (see &lt;a href=&quot;http://maven.apache.org/shared/maven-archiver/examples/classpath.html&quot;&gt;Set Up The Classpath&lt;/a&gt;, chapter &quot;Make The Jar Executable&quot;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;maven-jar-plugin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以指定可执行jar的主类（请参见&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maven.apache.org/shared/maven-archiver/examples/classpath.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置类路径&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;中的&amp;ldquo;使Jar可执行&amp;rdquo;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fce782e49b19de850642908a7ec08707b6cfa53" translate="yes" xml:space="preserve">
          <source>Cons</source>
          <target state="translated">Cons</target>
        </trans-unit>
        <trans-unit id="aa751bd5bdc3d6ae02dc0ea608cce05f4c40c9dc" translate="yes" xml:space="preserve">
          <source>Copy Dependencies to a specific directory</source>
          <target state="translated">将依赖项复制到特定目录</target>
        </trans-unit>
        <trans-unit id="b0853e639fc904a2dbb7231eb618df2b875a96ff" translate="yes" xml:space="preserve">
          <source>Dependencies are out of the final jar.</source>
          <target state="translated">依附关系是出了最后的罐子。</target>
        </trans-unit>
        <trans-unit id="756c41d2757a971734986145f3135a3039104913" translate="yes" xml:space="preserve">
          <source>Example POM configuration for &lt;code&gt;maven-jar-plugin&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;maven-jar-plugin&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示例POM配置&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="d94f9e8c7a8049c72204a49b52c67770260052ff" translate="yes" xml:space="preserve">
          <source>Finally create the executable jar by invoking:</source>
          <target state="translated">最后,通过调用可执行的jar来创建可执行的jar。</target>
        </trans-unit>
        <trans-unit id="dfa5d4f7268771355cc1506567d697e18737833f" translate="yes" xml:space="preserve">
          <source>For Manual Deployment</source>
          <target state="translated">用于手动部署</target>
        </trans-unit>
        <trans-unit id="dcb1c2c4279091282d600913531f933f15d86c81" translate="yes" xml:space="preserve">
          <source>For anyone looking for options to exclude specific dependencies from the uber-jar, this is a solution that worked for me:</source>
          <target state="translated">对于任何寻找从uber-jar中排除特定依赖的选项的人来说,这是一个对我有效的解决方案。</target>
        </trans-unit>
        <trans-unit id="f43d8e2e3501b8eaa05652e11d424de1f2b10156" translate="yes" xml:space="preserve">
          <source>How can I create an executable JAR with dependencies using Maven</source>
          <target state="translated">我如何使用Maven创建一个可执行的JAR,并附带依赖关系。</target>
        </trans-unit>
        <trans-unit id="ce15bffd3d51d59083f57224d54f027248d7b2a0" translate="yes" xml:space="preserve">
          <source>How can I make a Maven project package all dependency JARs into my output JAR?</source>
          <target state="translated">如何让Maven项目将所有依赖的JAR打包到我的输出JAR中?</target>
        </trans-unit>
        <trans-unit id="2df1d2823bbb8e3240e8a4b30bded23378e9981f" translate="yes" xml:space="preserve">
          <source>I blogged about some different ways to do this.</source>
          <target state="translated">我在博客上说了一些不同的方法。</target>
        </trans-unit>
        <trans-unit id="de625c0490540f7272c2d8d9192a7a69f17f98b6" translate="yes" xml:space="preserve">
          <source>I compared the tree plugins mentioned in this post. I generated 2 jars and a directory with all the jars. I compared the results and definitely the maven-shade-plugin is the best. My challenge was that I have multiple spring resources that needed to be merged, as well as jax-rs, and JDBC services. They were all merged properly by the shade plugin in comparison with the maven-assembly-plugin. In which case the spring will fail unless you copy them to your own resources folder and merge them manually one time. Both plugins output the correct dependency tree. I had multiple scopes like test,provide, compile, etc the test and provided were skipped by both plugins. They both produced the same manifest but I was able to consolidate licenses with the shade plugin using their transformer.
With the maven-dependency-plugin of course you don't have those problems because the jars are not extracted. But like some other have pointed you need to carry one extra file(s) to work properly.
Here is a snip of the pom.xml</source>
          <target state="translated">我比较了一下这个帖子中提到的树形插件。我生成了2个jar和一个包含所有jar的目录。我比较了一下结果,肯定maven-shadow-plugin是最好的。我的挑战是,我有多个spring资源需要合并,还有jax-rs和JDBC服务。与maven-assembly-plugin相比,它们都被shade插件正常合并了。在这种情况下,除非你把它们复制到自己的资源文件夹中,然后手动合并一次,否则spring就会失败。这两个插件都会输出正确的依赖树。我有多个作用域,如test,providence,compile等,但两个插件都跳过了test和providence。他们都产生了相同的manifest,但我能够使用shade插件的transformer来合并许可证。使用maven-dependency-plugin当然不会有这些问题,因为jars没有被提取。但就像其他一些人指出的那样,你需要携带一个额外的文件才能正常工作。下面是pom.xml的一个片段</target>
        </trans-unit>
        <trans-unit id="48e4158ce5ea7852c293424433582e62c2099263" translate="yes" xml:space="preserve">
          <source>I found this plugin particularly useful as it merges content of specific files instead of overwriting them. This is needed when there are resource files that are have the same name across the jars and the plugin tries to package all the resource files</source>
          <target state="translated">我发现这个插件特别有用,因为它可以合并特定文件的内容,而不是覆盖它们。当有的资源文件在不同的jar中都有相同的名称,而插件试图将所有的资源文件打包时,就需要用到这个插件。</target>
        </trans-unit>
        <trans-unit id="83e41639b26d65ed77f1d4e4e663a29b4210f693" translate="yes" xml:space="preserve">
          <source>I had a similar requirement as the OP just that I had too many (Maven) dependencies for my project. Fortunately, the only solution that worked for me was that using &lt;code&gt;Eclipse&lt;/code&gt;. Very simple and very straightforward. This is not a solution to the OP but is a solution for someone who has a similar requirement but with many Maven dependencies,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我有与OP类似的要求，只是我的项目有太多（Maven）依赖项。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;幸运的是，唯一对我有用的解决方案是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Eclipse&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常简单，非常简单。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这不是针对OP的解决方案，而是针对具有类似要求但具有许多Maven依赖项的人的解决方案，&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01a01b2c5d1496c216ffb629a1a7a17f0d5bd3c2" translate="yes" xml:space="preserve">
          <source>I had extraordinary case because my dependency was system one:</source>
          <target state="translated">我的情况很特殊,因为我的依赖性是系统一。</target>
        </trans-unit>
        <trans-unit id="2f8b57fee12855f6cc05a35105307c8ca8aa8c5e" translate="yes" xml:space="preserve">
          <source>I have changed the code provided by @user189057 with changes:
1) maven-dependency-plugin is executed in &quot;prepare-package&quot; phase
2) I am extracting unpacked classess directly to &quot;target/classes&quot;</source>
          <target state="translated">我对@user189057提供的代码进行了修改,并做了一些改动。1)maven-dependency-plugin在 &quot;prepare-package &quot;阶段执行 2)我把未打包的classess直接提取到 &quot;targetclasses&quot;</target>
        </trans-unit>
        <trans-unit id="deb165cade248b78b218e431b79ca0f417204d9d" translate="yes" xml:space="preserve">
          <source>I see the point (ease of deployment / usage) but it depends of the use case of your poject (and there may be alternatives (see below)).</source>
          <target state="translated">我看到这一点(便于部署使用),但这要看你的项目的使用情况(可能还有其他选择(见下文))。</target>
        </trans-unit>
        <trans-unit id="feef4f53001e51f5a4d28ae4958b4f967970fcbd" translate="yes" xml:space="preserve">
          <source>I tested this with &lt;strong&gt;Apache Maven 3.0.3&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Apache Maven 3.0.3&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对此进行了测试&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d1a101526967c09c3cdd94cb0c31e17884a2198" translate="yes" xml:space="preserve">
          <source>I tried the most up-voted answer here, and was able to get the jar runnable. But the program didn't run correctly. I do not know what the reason was. When I try to run from &lt;code&gt;Eclipse&lt;/code&gt;, I get a different result but when I run the jar from command-line I get a different result (it crashes with a program-specific runtime error).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我在这里尝试了投票最多的答案，并且能够使jar运行。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是程序没有正确运行。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我不知道是什么原因。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当我尝试从&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Eclipse&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运行时&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，得到了不同的结果，但是当我从命令行运行jar时，得到了不同的结果（由于特定于程序的运行时错误而崩溃）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea59aebb6a1ca9b22e3b776a3674d8fb8f8889de" translate="yes" xml:space="preserve">
          <source>I wait it be useful for you all.</source>
          <target state="translated">我等待它对大家有用。</target>
        </trans-unit>
        <trans-unit id="9531ca7824c576a27237185696d71494efd9cea5" translate="yes" xml:space="preserve">
          <source>I want to package my project in a single executable JAR for distribution.</source>
          <target state="translated">我想把我的项目打包成一个可执行的JAR来发布。</target>
        </trans-unit>
        <trans-unit id="1ebae25ec367fc73cbc685bf5baa526fe71092b2" translate="yes" xml:space="preserve">
          <source>I went through every one of these responses looking to make a fat executable jar containing all dependencies and none of them worked right.  The answer is the shade plugin, its very easy and straightforward.</source>
          <target state="translated">我浏览了所有这些回复,想做一个包含所有依赖项的可执行jar,但没有一个是正确的。答案是shade插件,它非常简单直接。</target>
        </trans-unit>
        <trans-unit id="6cb08aececbaca95706440e50b3a9067ff2d68ec" translate="yes" xml:space="preserve">
          <source>I won't answer directly the question as other have already done that before, but I really wonder if it's a good idea to embed all the dependencies in the project's jar itself.</source>
          <target state="translated">这个问题我就不直接回答了,因为其他的人已经做过了,但是我真的很想知道,把所有的依赖都嵌入到项目的jar本身是不是一个好主意。</target>
        </trans-unit>
        <trans-unit id="3371ebb367fa28c394b15240a45d6d382e71c0a2" translate="yes" xml:space="preserve">
          <source>I'll post this solution in on a couple of other pages with a similar problem. Hopefully I can save somebody from a week of frustration.</source>
          <target state="translated">我会在其他几个有类似问题的页面上贴出这个解决方案。希望我可以拯救某人一个星期的挫折。</target>
        </trans-unit>
        <trans-unit id="b20fb520123354a2dcaa3afc08e7e8d423d7878c" translate="yes" xml:space="preserve">
          <source>If you use it fully standalone, why not.</source>
          <target state="translated">如果你完全独立使用,何乐而不为。</target>
        </trans-unit>
        <trans-unit id="20ee1f203232844b176472cca18589a9ceb7e7bd" translate="yes" xml:space="preserve">
          <source>It should be like that:</source>
          <target state="translated">应该是这样的。</target>
        </trans-unit>
        <trans-unit id="fc583824e8e01586f76dfc777b28e358cafe77cb" translate="yes" xml:space="preserve">
          <source>It's Maven that can compile all the dependanices and plugins. Not Netbeans. (If you can get Netbeans and be able to use java .jar to do this please tell me how (^.^)v )</source>
          <target state="translated">是Maven可以编译所有的依赖和插件。而不是Netbeans。(如果你能得到Netbeans并能用java.jar来做这个,请告诉我怎么做 (^.^)v)</target>
        </trans-unit>
        <trans-unit id="cf8c28478d618066717d3ac0ce2e3a62eaed4d3c" translate="yes" xml:space="preserve">
          <source>Ken Liu has it right in my opinion. The maven dependency plugin allows you to expand all the dependencies, which you can then treat as resources. This allows you to include them in the &lt;em&gt;main&lt;/em&gt; artifact. The use of the assembly plugin creates a secondary artifact which can be difficult to modify - in my case I wanted to add custom manifest entries. My pom ended up as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;刘坚认为是对的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Maven依赖插件允许您扩展所有依赖，然后可以将其视为资源。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这使您可以将它们包括在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;工件中。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用Assembly插件会创建一个很难修改的辅助工件-就我而言，我想添加自定义清单条目。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我的pom最终显示为：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f1c69c040c4c925f567359846c7c7dc0c4092df" translate="yes" xml:space="preserve">
          <source>Like this, with in the end just a manifest and a &quot;special dynamic classloader main&quot;, you can start your project with :</source>
          <target state="translated">像这样,最后只需要一个manifest和一个 &quot;特殊的动态类加载器主&quot;,你就可以用.NET Framework Framework来启动你的项目。</target>
        </trans-unit>
        <trans-unit id="5283539a709e7d99dbd23ac3cda823838b8300e1" translate="yes" xml:space="preserve">
          <source>Long used the &lt;strong&gt;maven assembly plugin&lt;/strong&gt;, but I could not find a solution to the problem with &lt;a href=&quot;https://stackoverflow.com/questions/2596655/how-do-i-surpress-maven-assembly-plugin-skipping-files-that-are-already-added-o&quot;&gt;&lt;code&gt;&quot;already added, skipping&quot;&lt;/code&gt;&lt;/a&gt;. Now, I'm using another plugin - &lt;a href=&quot;http://code.google.com/p/onejar-maven-plugin/&quot;&gt;&lt;strong&gt;onejar-maven-plugin&lt;/strong&gt;&lt;/a&gt;. Example below (&lt;code&gt;mvn package&lt;/code&gt; build jar):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;长期使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;maven程序集插件&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是我找不到&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2596655/how-do-i-surpress-maven-assembly-plugin-skipping-files-that-are-already-added-o&quot;&gt; &lt;code&gt;&quot;already added, skipping&quot;&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;问题的解决方案&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，我正在使用另一个插件&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/onejar-maven-plugin/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-onejar-maven-plugin&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下面的示例（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mvn package&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构建jar）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="647c50a056ea9dcff617a7f62d382bfbb8da3191" translate="yes" xml:space="preserve">
          <source>Make Deployable Archives</source>
          <target state="translated">可部署的档案</target>
        </trans-unit>
        <trans-unit id="3af3b27c21ea57bc9b5255e31c302a379e6c7ec9" translate="yes" xml:space="preserve">
          <source>Make the Jar Executable and Classpath Aware</source>
          <target state="translated">使Jar可执行和Classpath Aware</target>
        </trans-unit>
        <trans-unit id="6ccdb442cfbdde9c043a42a2c4f783daa681f4fc" translate="yes" xml:space="preserve">
          <source>Neither of them do what you need: look for the file on classpath.
Of course you need adding the package where the shared assembly resides on maven-assembly-plugin's classpath (see below).
If you're using Maven 2.x (not Maven 3.x), you may need adding this dependency in top-most parent pom.xml in pluginManagement section.</source>
          <target state="translated">这两个都不能满足你的需求:在classpath上寻找文件。当然,你需要在maven-assembly-plugin的classpath上添加共享组件所在的包(见下文)。如果你使用的是Maven 2.x(不是Maven 3.x),你可能需要在pluginManagement部分最上面的父pom.xml中添加这个依赖关系。</target>
        </trans-unit>
        <trans-unit id="bc981983e7f547dc62e19a1e383acfe00782a6d5" translate="yes" xml:space="preserve">
          <source>Next</source>
          <target state="translated">Next</target>
        </trans-unit>
        <trans-unit id="6be1a0d38b01e4703f22f2646798237386c0d395" translate="yes" xml:space="preserve">
          <source>Next, I would recommend making this a natural part of your build, rather than something to call explicitly.  To make this a integral part of your build, add this plugin to your &lt;code&gt;pom.xml&lt;/code&gt; and bind it to the &lt;code&gt;package&lt;/code&gt; lifecycle event.  However, a gotcha is that you need to call the &lt;code&gt;assembly:single&lt;/code&gt; goal if putting this in your pom.xml, while you would call 'assembly:assembly' if executing it manually from the command line.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来，我建议您将其作为构建的自然组成部分，而不要明确调用。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要使其成为构建的组成部分，请将此插件添加到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;pom.xml&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并将其绑定到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;package&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生命周期事件。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，要注意的是，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果将其放入pom.xml中，则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;需要调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assembly:single&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;目标，而如果从命令行手动执行它，则需要调用&amp;ldquo; assembly：assembly&amp;rdquo;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76669fc6b3753874e6f906a3c5151bf5d2f200d1" translate="yes" xml:space="preserve">
          <source>No class relocation support (use maven-shade-plugin if class relocation is needed).</source>
          <target state="translated">不支持类搬迁(如果需要类搬迁,请使用maven-shadow-plugin)。</target>
        </trans-unit>
        <trans-unit id="26a11ef39c46e3c0a8b6c129144f0ca19cce302e" translate="yes" xml:space="preserve">
          <source>Not actively supported since 2012.</source>
          <target state="translated">2012年以来没有积极支持。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="e3b82040565bb4be6b11f778a2e3df327ed20a3b" translate="yes" xml:space="preserve">
          <source>Now</source>
          <target state="translated">Now</target>
        </trans-unit>
        <trans-unit id="11a34941a02d883eba1bd4a2ce2c2bba49e5b498" translate="yes" xml:space="preserve">
          <source>Now you have &lt;code&gt;target/${project.build.finalName}.(zip|tar|tar.bz2|tar.gz)&lt;/code&gt; which each contains the &lt;code&gt;jar&lt;/code&gt; and &lt;code&gt;lib/*&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在您有了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;target/${project.build.finalName}.(zip|tar|tar.bz2|tar.gz)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其中每个都包含&lt;/font&gt;&lt;/font&gt; &lt;code&gt;jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;lib/*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b621b63e88f3c7a641a7bab3c6322779b05b2792" translate="yes" xml:space="preserve">
          <source>Okay, so this is my solution. I know it's not using the pom.xml file. But I had the problem my programmme compiling and running on Netbeans but it failing when I tried Java -jar MyJarFile.jar. Now, I don't fully understand Maven and I think this why was having trouble getting Netbeans 8.0.2 to include my jar file in a library to put them into a jar file. I was thinking about how I used to use jar files with no Maven in Eclipse.</source>
          <target state="translated">好了,这就是我的解决方案。我知道它没有使用pom.xml文件。但我的程序在Netbeans上编译和运行,但当我尝试Java -jar MyJarFile.jar时,却失败了。现在,我并不完全理解Maven,我想这就是为什么Netbeans 8.0.2无法将我的jar文件包含在一个库中,把它们放到一个jar文件中。我在想我以前在Eclipse中使用jar文件的时候,没有Maven的情况下如何使用jar文件。</target>
        </trans-unit>
        <trans-unit id="14efe9e6640aa7ce2344f32e314988b68bb792ef" translate="yes" xml:space="preserve">
          <source>Please see</source>
          <target state="translated">请参见</target>
        </trans-unit>
        <trans-unit id="9056c6db4c84e8b55d9051f2bc4c7a149268ab56" translate="yes" xml:space="preserve">
          <source>Problem with locating shared assembly file with maven-assembly-plugin-2.2.1?</source>
          <target state="translated">使用maven-assembly-plugin-2.2.1定位共享汇编文件的问题?</target>
        </trans-unit>
        <trans-unit id="84083370162d72d8f9d3e15fe561f0204aaadf33" translate="yes" xml:space="preserve">
          <source>Pros</source>
          <target state="translated">Pros</target>
        </trans-unit>
        <trans-unit id="717f6061926b9d6d8e4a545c07ba18b25c4c0b8f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://jinahya.wordpress.com/2014/05/22/executable-jar-with-apache-maven/&quot;&gt;Executable Jar with Apache Maven&lt;/a&gt; (WordPress)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参见&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jinahya.wordpress.com/2014/05/22/executable-jar-with-apache-maven/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;带有Apache Maven的可执行Jar&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（WordPress）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24270e1cc18b57ef77ba16f946912c28736cf2d9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://svn.apache.org/repos/asf/maven/plugins/tags/maven-assembly-plugin-2.2.1&quot;&gt;this&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/maven/plugins/tags/maven-assembly-plugin-2.2.1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了解更多详情。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3678e234ec85010f9cf213451187ac227a34a19" translate="yes" xml:space="preserve">
          <source>See example below</source>
          <target state="translated">见下面的例子</target>
        </trans-unit>
        <trans-unit id="d3338cb8bd81e5acdbe5646a950af4ee59aa3770" translate="yes" xml:space="preserve">
          <source>See more details in comments.</source>
          <target state="translated">更多详情请见评论。</target>
        </trans-unit>
        <trans-unit id="bf92796fabff61226473cb53bd51d3dbf4881ec5" translate="yes" xml:space="preserve">
          <source>So it's not a configuration of the mvn-assembly-plugin but a property of the dependency.</source>
          <target state="translated">所以它不是mvn-assembly-plugin的配置,而是依赖关系的属性。</target>
        </trans-unit>
        <trans-unit id="a9478119b6466b4539a73be2a84a099acbbc5b9f" translate="yes" xml:space="preserve">
          <source>Something that have worked for me was:</source>
          <target state="translated">有的东西对我来说是:</target>
        </trans-unit>
        <trans-unit id="d32d7a7cdff661ccacd427f953f2b19b57e424c9" translate="yes" xml:space="preserve">
          <source>Spring Boot Maven Plugin</source>
          <target state="translated">Spring Boot Maven 插件</target>
        </trans-unit>
        <trans-unit id="a8e846d63a78758a3953ca571f685e9739aaa2fa" translate="yes" xml:space="preserve">
          <source>Taking Unanswered's answer and reformatting it, we have:</source>
          <target state="translated">就拿Unanswered的答案来说,我们把它重新格式化,就有了。</target>
        </trans-unit>
        <trans-unit id="c1ca5bc1738f26a4fb8e7e62bd937e5db7157979" translate="yes" xml:space="preserve">
          <source>Thats it. Next mvn package will also create one fat jar additionally, including all dependency jars.</source>
          <target state="translated">仅此而已。接下来mvn包还将额外创建一个胖子jar,包括所有的依赖jar。</target>
        </trans-unit>
        <trans-unit id="aaaf895b04eb9c350de234454da61e8063f3a223" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jar&lt;/code&gt; file is only executable with the sibling &lt;code&gt;...lib/&lt;/code&gt; directory. We need to make archives to deploy with the directory and its content.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文件仅与兄弟可执行&lt;/font&gt;&lt;/font&gt; &lt;code&gt;...lib/&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;目录下。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们需要创建存档以与目录及其内容一起部署。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7cce37d6b961eefb3725bf4e584883991590641b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maven-shade-plugin&lt;/code&gt; packs your classes and all dependencies in a single jar file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;maven-shade-plugin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包在一个jar文件类和所有的依赖。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="032697b015b589ef6800d15d5486dbab56c69cba" translate="yes" xml:space="preserve">
          <source>The ideal solution is to include the jars in a lib folder and the manifest.mf file of the main jar include all the jars in classpath.</source>
          <target state="translated">理想的解决方案是将jar包含在lib文件夹中,主jar的manifest.mf文件包含classpath中的所有jar。</target>
        </trans-unit>
        <trans-unit id="617778aa3c45395852ad52ff7e703025c94819d4" translate="yes" xml:space="preserve">
          <source>The maven-assembly-plugin worked great for me.
I spent hours with the maven-dependency-plugin and couldn't make it work. The main reason was that I had to define in the configuration section explicitly the artifact items which should be included as it is described in the &lt;a href=&quot;http://maven.apache.org/plugins/maven-dependency-plugin/usage.html&quot;&gt;documentation&lt;/a&gt;. 
There is an example there for the cases when you want to use it like: &lt;code&gt;mvn dependency:copy&lt;/code&gt;, where there are not included any artifactItems but it doesn't work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;maven-assembly-plugin对我来说很棒。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我花了几个小时使用了maven-dependency-plugin，但无法正常工作。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主要原因是我必须在配置部分中明确定义应包含在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maven.apache.org/plugins/maven-dependency-plugin/usage.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文档中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所描述的工件项目&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有一个示例，用于您想要使用它的情况：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mvn dependency:copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其中不包含任何artifactItems，但它不起作用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7d93209feaafbc1a12da3a4ff746ce203ae75ff" translate="yes" xml:space="preserve">
          <source>Then</source>
          <target state="translated">Then</target>
        </trans-unit>
        <trans-unit id="8aa4b7e45a901491770e0426defed852371886b5" translate="yes" xml:space="preserve">
          <source>There are millions of answers already, I wanted to add you don't need &lt;code&gt;&amp;lt;mainClass&amp;gt;&lt;/code&gt; if you don't need to add entryPoint to your application. &lt;strong&gt;For example APIs may not have necessarily have &lt;code&gt;main&lt;/code&gt; method.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已经有数百万个答案，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不需要向应用程序中添加entryPoint &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我想添加您不需要&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;mainClass&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，API可能不一定必须具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;main&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="131e685611991a5bf4644d0e32157e420d09c7d0" translate="yes" xml:space="preserve">
          <source>This blog post shows another approach with combining the maven-jar and maven-assembly plugins. With the assembly configuration xml from the blog post it can also be controlled if dependencies will be expanded or just be collected in a folder and referenced by a classpath entry in the manifest:</source>
          <target state="translated">这篇博文展示了另一种结合maven-jar和maven-assembly插件的方法。通过这篇博文中的汇编配置xml,还可以控制依赖关系是否会被扩展,或者只是被收集到一个文件夹中,并通过清单中的classpath条目引用。</target>
        </trans-unit>
        <trans-unit id="8e8e10b57c5f3a340e82da894262c4043e95188b" translate="yes" xml:space="preserve">
          <source>This could also be an option,You will be able to build your jar file</source>
          <target state="translated">这也可以是一个选项,你将能够建立你的jar文件。</target>
        </trans-unit>
        <trans-unit id="e95d4076270199752119979875c75798b0bc100d" translate="yes" xml:space="preserve">
          <source>This example came from mkyong.com</source>
          <target state="translated">这个例子来自mkyong.com</target>
        </trans-unit>
        <trans-unit id="17b05b2000eae3062c48ea5ebae6307facfc9414" translate="yes" xml:space="preserve">
          <source>This is the best way i found:</source>
          <target state="translated">这是我找到的最好的方法。</target>
        </trans-unit>
        <trans-unit id="5a04ea4658573067591f19c1e041be9154195ad8" translate="yes" xml:space="preserve">
          <source>This will create jar file in the target directory.</source>
          <target state="translated">这将在目标目录下创建jar文件。</target>
        </trans-unit>
        <trans-unit id="db8a558a1fa3987c9a3f3e5fe5ec4801f263865e" translate="yes" xml:space="preserve">
          <source>Those pros and cons are provided by &lt;a href=&quot;https://stackoverflow.com/users/363573/stephan&quot;&gt;Stephan&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些优点和缺点由&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/363573/stephan&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Stephan&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64a56d23cec35a0faf3c7f7cce79fbfe9bc07edf" translate="yes" xml:space="preserve">
          <source>To create an executable JAR from command line itself just run the below command from the project path:</source>
          <target state="translated">要从命令行中创建一个可执行的JAR,只需在项目路径中运行以下命令即可。</target>
        </trans-unit>
        <trans-unit id="ab85d081c33abbd1badab3f30942ef4a2be8d567" translate="yes" xml:space="preserve">
          <source>To resolve this issue we will use Maven Assembly Plugin that will create the JAR together with its dependency JARs into a single executable JAR file. Just add below plugin configuration in your pom.xml file.</source>
          <target state="translated">为了解决这个问题,我们将使用Maven Assembly Plugin,它可以将JAR和它的依赖JAR一起创建成一个可执行的JAR文件。只需在你的pom.xml文件中添加下面的插件配置。</target>
        </trans-unit>
        <trans-unit id="be503b71994d266d92e24167745db0432dabed54" translate="yes" xml:space="preserve">
          <source>Try using descriptorId configuration parameter instead of descriptors/descriptor or descriptorRefs/descriptorRef parameters.</source>
          <target state="translated">尝试使用descriptorId配置参数代替descriptordescriptor或descriptorRefsdescriptorRefsdescriptorRef参数。</target>
        </trans-unit>
        <trans-unit id="a6280c0421a1ccbd154554d0a41ae2c000df38ae" translate="yes" xml:space="preserve">
          <source>Unpacking have to be in generate-resources phase because, if in package phase, will not be included as resources.
Try clean package and you'll see.</source>
          <target state="translated">解包必须在生成-资源阶段,因为如果在包阶段,将不会被作为资源包含。试着用干净的包,你就知道了。</target>
        </trans-unit>
        <trans-unit id="f22d6702f70a4d6e088c307d6ad51af5b1708c9f" translate="yes" xml:space="preserve">
          <source>Use the maven-shade-plugin to package all dependencies into one uber-jar. It can also be used to build an executable jar by specifying the main class. After trying to use maven-assembly and maven-jar , I found that this plugin best suited my needs.</source>
          <target state="translated">使用maven-shad-plugin将所有的依赖项打包成一个uber-jar。它也可以通过指定主类来构建一个可执行的jar。在尝试了maven-assembly和maven-jar之后,我发现这个插件最适合我的需求。</target>
        </trans-unit>
        <trans-unit id="c2c36b13d1c0ae5cc5612734437d62b755623505" translate="yes" xml:space="preserve">
          <source>With this configuration, all dependencies will be located in &lt;code&gt;/dependency-jars&lt;/code&gt;. My application has no &lt;code&gt;Main&lt;/code&gt; class, just context ones, but one of my dependencies do have a &lt;code&gt;Main&lt;/code&gt; class (&lt;code&gt;com.myDomain.etc.MainClassName&lt;/code&gt;) that starts the JMX server, and receives a &lt;code&gt;start&lt;/code&gt; or a &lt;code&gt;stop&lt;/code&gt; parameter. So with this i was able to start my application like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用此配置，所有依赖项都将位于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;/dependency-jars&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我的应用程序没有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Main&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类，只有上下文类，但是我的一个依赖项确实有一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Main&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;com.myDomain.etc.MainClassName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;启动JMX服务器，并接收&lt;/font&gt;&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，我能够像这样启动我的应用程序：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3499e353a7f36bf2da8542d873abbfab3404e57c" translate="yes" xml:space="preserve">
          <source>You can add the following to your &lt;strong&gt;pom.xml&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以将以下内容添加到&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pom.xml中&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a4e487de079697bb89f8952c8aec873aac6ca1e" translate="yes" xml:space="preserve">
          <source>You can use maven-dependency-plugin, but the question was how to create an executable JAR. To do that requires the following alteration to Matthew Franglen's response (btw, using the dependency plugin takes longer to build when starting from a clean target):</source>
          <target state="translated">你可以使用maven-dependency-plugin,但问题是如何创建一个可执行的JAR。要做到这一点,就需要对Matthew Franglen的回答做以下修改(btw,使用依赖插件,从一个干净的目标开始构建需要更长的时间)。</target>
        </trans-unit>
        <trans-unit id="79aebc08cab7037b76a43a4337b0e4cfbca19574" translate="yes" xml:space="preserve">
          <source>You can use maven-shade plugin to build a uber jar like below</source>
          <target state="translated">你可以使用maven-shade插件来构建一个像下面这样的uber jar。</target>
        </trans-unit>
        <trans-unit id="92d7067b527248a48c5d439e6134ce199e7dc986" translate="yes" xml:space="preserve">
          <source>You can use the dependency-plugin to generate all dependencies in a separate directory before the package phase and then include that in the classpath of the manifest:</source>
          <target state="translated">你可以使用dependency-plugin在包阶段之前将所有的依赖项生成一个单独的目录,然后将其包含在manifest的classpath中。</target>
        </trans-unit>
        <trans-unit id="9f7d433211690bce3582868faebecbe89f4a5caa" translate="yes" xml:space="preserve">
          <source>You could combine the &lt;code&gt;maven-shade-plugin&lt;/code&gt; and &lt;code&gt;maven-jar-plugin&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;maven-shade-plugin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;maven-jar-plugin&lt;/code&gt; 结合使用&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1562642d6004bcef3a3df3d640fcf5347966d3ad" translate="yes" xml:space="preserve">
          <source>You have &lt;code&gt;target/${project.build.finalName}-shaded.jar&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;target/${project.build.finalName}-shaded.jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5b62bb07074ac7061f7d307f269cc1b3d3f13da" translate="yes" xml:space="preserve">
          <source>You have &lt;code&gt;target/${project.bulid.finalName}-jar-with-dependencies.jar&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;target/${project.bulid.finalName}-jar-with-dependencies.jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a41cd01714ac01a244aeff9d719971b900b5ba3" translate="yes" xml:space="preserve">
          <source>You have &lt;code&gt;target/${project.bulid.finalName}-spring-boot.jar&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;target/${project.bulid.finalName}-spring-boot.jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4569f3c515d478cae127606024f143bae030233" translate="yes" xml:space="preserve">
          <source>You need to add repository for that plugin:</source>
          <target state="translated">你需要为该插件添加存储库。</target>
        </trans-unit>
        <trans-unit id="c7bbc617964d65388e47c2c2128ecc0259c4f200" translate="yes" xml:space="preserve">
          <source>[Solved - for Linux] by opening a terminal.</source>
          <target state="translated">通过打开一个终端,[解决了-适用于Linux]。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="25706e9308bbdf1ee53a1245c1ebe291830d67c0" translate="yes" xml:space="preserve">
          <source>and you run it with</source>
          <target state="translated">而你用</target>
        </trans-unit>
        <trans-unit id="80754af91bfb6d1073585b046fe0a474ce868509" translate="yes" xml:space="preserve">
          <source>build</source>
          <target state="translated">build</target>
        </trans-unit>
        <trans-unit id="01ff58bacebb9c7169135dfafb6b59c94189e271" translate="yes" xml:space="preserve">
          <source>deploy your application as a .zip / .war : the archive contains your project's jar and all dependent jars ;</source>
          <target state="translated">以.zip .war的形式部署你的应用程序:存档中包含你的项目的jar和所有依赖的jar。</target>
        </trans-unit>
        <trans-unit id="42def82486489d1d45c2f72801f4a986d6edac8e" translate="yes" xml:space="preserve">
          <source>maven plugin config</source>
          <target state="translated">慕文插件配置</target>
        </trans-unit>
        <trans-unit id="94ed108f8d26a90f8d7ae1ca6d436e96321a46ed" translate="yes" xml:space="preserve">
          <source>onejar-maven-plugin</source>
          <target state="translated">onejar-maven-plugin</target>
        </trans-unit>
        <trans-unit id="d926a40160f968d9cae068845c9feb5a77a2e41c" translate="yes" xml:space="preserve">
          <source>or &lt;a href=&quot;https://github.com/jinahya/executable-jar-with-maven-example&quot;&gt;executable-jar-with-maven-example&lt;/a&gt; (GitHub)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jinahya/executable-jar-with-maven-example&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可执行文件罐与Maven示例&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（GitHub）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2316492a2f18830ebbe1103d79ba9dd3130f55aa" translate="yes" xml:space="preserve">
          <source>use a dynamic classloader mechanism (see Spring, or you can easily do this yourself) to have a single entry point of your project (a single class to start - see the Manifest mechanism on another answer), which will add (dynamically) to the current classpath all the other needed jars.</source>
          <target state="translated">使用一个动态类加载器机制(参见Spring,或者你可以很容易地自己做这个),让你的项目有一个单一的入口点(一个单一的类开始--参见另一个答案上的Manifest机制),它将(动态地)添加(动态地)到当前classpath中所有其他需要的jars。</target>
        </trans-unit>
        <trans-unit id="86a4261d849a6e99b3c3a38f7585e3c7d4a91823" translate="yes" xml:space="preserve">
          <source>verify</source>
          <target state="translated">verify</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
