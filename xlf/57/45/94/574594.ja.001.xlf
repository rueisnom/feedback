<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/574594">
    <body>
      <group id="574594">
        <trans-unit id="92988180e6baad467ae9efd44736829fdc5a265f" translate="yes" xml:space="preserve">
          <source>(You may need to run: &lt;code&gt;chmod +x MyJarFile-1.0-jar-with-dependencies.jar&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（実行する必要があるかもしれません：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;chmod +x MyJarFile-1.0-jar-with-dependencies.jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85221b4c2462451a594926263b16875810b5800a" translate="yes" xml:space="preserve">
          <source>1) Just right-click on your project folder (in Eclipse) and select &lt;code&gt;Export&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1）Eclipse内のプロジェクトフォルダーを右クリックして、[ &lt;/font&gt; &lt;code&gt;Export&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を選択します。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b79e15f3a679e4ee640ecb21bffcfe64708a81f0" translate="yes" xml:space="preserve">
          <source>2) Then select &lt;code&gt;Java&lt;/code&gt; -&amp;gt; &lt;code&gt;Runnable Jar&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2）次に、選択し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Java&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable Jar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c9daf81f4c370e47fc0d007fc2cc0b84e87b0c8" translate="yes" xml:space="preserve">
          <source>3) You will be asked to choose the location of the jar file</source>
          <target state="translated">3)jar ファイルの場所を選択するように求められます。</target>
        </trans-unit>
        <trans-unit id="283d51a051a6a624c29add080729ae183cd77411" translate="yes" xml:space="preserve">
          <source>4) Finally, select the class that has the Main method that you want to run and choose &lt;code&gt;Package dependencies with the Jar file&lt;/code&gt; and click &lt;code&gt;Finish&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;4）最後に、実行するMainメソッドを持つクラスを選択&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Package dependencies with the Jar file&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してパッケージの依存関係を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;選択&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; [ &lt;/font&gt; &lt;code&gt;Finish&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ]をクリックします。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ad06ce50daedb4c94968932e042d9a923fe7acc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://code.google.com/p/onejar-maven-plugin/&quot;&gt;Another option is the OneJar plugin&lt;/a&gt;.  This performs the above repackaging actions all in one step.</source>
          <target state="translated">&lt;a href=&quot;http://code.google.com/p/onejar-maven-plugin/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別のオプションはOneJarプラグイン&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、上記の再パッケージ化アクションがすべて1つのステップで実行されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aeebcdad30c92c32e51b3deb97701b6f1d4b2be2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compile goal should be added before assembly:single or otherwise the code on your own project is not included.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンパイルの目標は、アセンブリの前に追加する必要があります。単一の場合は、独自のプロジェクトのコードは含まれません。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cba66be382ea3720e70b7ea36901946a0bb0e436" translate="yes" xml:space="preserve">
          <source>A good alternative :</source>
          <target state="translated">良い代替品です。</target>
        </trans-unit>
        <trans-unit id="f4065682df2c48a7476728d2acd9797707aabddc" translate="yes" xml:space="preserve">
          <source>Add potential unecessary Spring and Spring Boot related classes.</source>
          <target state="translated">必要のないSpringとSpring Boot関連のクラスを追加します。</target>
        </trans-unit>
        <trans-unit id="f976702fba0be5367f58426ce368cb88dc0c77d2" translate="yes" xml:space="preserve">
          <source>Add to pom.xml:</source>
          <target state="translated">pom.xmlに追加します。</target>
        </trans-unit>
        <trans-unit id="ae34a9c96503fa14f3f67ce7140d19ef7c1f4678" translate="yes" xml:space="preserve">
          <source>After doing this don&amp;rsquo;t forget to run MAVEN tool with this command mvn clean compile assembly:single</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを行った後、このコマンドmvn clean compile assembly：singleでMAVENツールを実行することを忘れないでください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a16d1ec086b3e870a834b1c1523159dddefa55b" translate="yes" xml:space="preserve">
          <source>Afterwards you have to switch via the console to the directory, where the pom.xml is located. Then you have to execute &lt;strong&gt;mvn assembly:single&lt;/strong&gt; and then your executable JAR file with dependencies will be hopefully build. You can check it when switching to the output (target) directory with &lt;strong&gt;cd ./target&lt;/strong&gt; and starting your jar with a command similiar to &lt;strong&gt;java -jar mavenproject1-1.0-SNAPSHOT-jar-with-dependencies.jar&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その後、コンソールを介してpom.xmlがあるディレクトリに切り替える必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mvn assembly：single&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実行する必要が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります。その後、依存関係を持つ実行可能JARファイルがビルドされます。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cd ./target&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して出力（ターゲット）ディレクトリーに切り替え&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、jarを&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;java -jar mavenproject1-1.0-SNAPSHOT-jar-with-dependencies.jarに類似&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したコマンドで開始する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ときに確認でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4153a1e098b981803ae3238e610b51730e802a7" translate="yes" xml:space="preserve">
          <source>Alternatively use &lt;code&gt;${project.build.directory}/classes/lib&lt;/code&gt; as OutputDirectory to integrate all jar-files into the main jar, but then you will need to add custom classloading code to load the jars.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;${project.build.directory}/classes/lib&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をOutputDirectoryとして使用して、すべてのjarファイルをメインjarに統合しますが、jarをロードするカスタムクラスローディングコードを追加する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8a9795e15ba56eb99d781619f0d626c55fd2484" translate="yes" xml:space="preserve">
          <source>And exactly that one is described here: &lt;a href=&quot;https://caffebig.wordpress.com/2013/04/05/executable-jar-file-with-dependent-jars-using-maven/&quot;&gt;https://caffebig.wordpress.com/2013/04/05/executable-jar-file-with-dependent-jars-using-maven/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、それはここで説明されています：&lt;/font&gt;&lt;a href=&quot;https://caffebig.wordpress.com/2013/04/05/executable-jar-file-with-dependent-jars-using-maven/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//caffebig.wordpress.com/2013/04/05/executable-jar-file-with-dependent-jars-using-maven/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd1bfb909a8c0f18d9fbc561e47ee72784ff62e8" translate="yes" xml:space="preserve">
          <source>And finally</source>
          <target state="translated">そして最後に</target>
        </trans-unit>
        <trans-unit id="85a47482a9010b4ab5e8e485ad007169dfb20ec9" translate="yes" xml:space="preserve">
          <source>Another option if you really want to repackage the other JARs contents inside your single resultant JAR is the &lt;a href=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/&quot;&gt;Maven Assembly plugin&lt;/a&gt;.  It unpacks and then repacks everything into a directory via &lt;code&gt;&amp;lt;unpack&amp;gt;true&amp;lt;/unpack&amp;gt;&lt;/code&gt;. Then you'd have a second pass that built it into one massive JAR.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果の単一のJAR内に他のJARコンテンツを再パッケージ化する場合のもう1つのオプションは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maven.apache.org/plugins/maven-assembly-plugin/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mavenアセンブリプラグイン&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;unpack&amp;gt;true&amp;lt;/unpack&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、すべてを解凍してからディレクトリに再パックします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、それを1つの大規模なJARに組み込む2番目のパスがあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42807f54d7752f7d7a0c3c57b7dd3188fa6696b4" translate="yes" xml:space="preserve">
          <source>Apache Maven Assembly Plugin</source>
          <target state="translated">Apache Maven アセンブリプラグイン</target>
        </trans-unit>
        <trans-unit id="1fe9daf3f509ed25c0d624bb25f843fb10025b73" translate="yes" xml:space="preserve">
          <source>Apache Maven Shade Plugin</source>
          <target state="translated">Apache Maven Shade プラグイン</target>
        </trans-unit>
        <trans-unit id="38f2573932e95ebcf4f7bf95f4cca9f483507eef" translate="yes" xml:space="preserve">
          <source>At this point the &lt;code&gt;jar&lt;/code&gt; is actually executable with external classpath elements.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この時点で、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は実際には外部クラスパス要素で実行可能です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcd8c20c10f5bf04abbb913e98fe33d33a5699f7" translate="yes" xml:space="preserve">
          <source>Be aware that your dependencies need to have a scope of compile or runtime for this to work properly.</source>
          <target state="translated">依存関係が正しく動作するためには、コンパイルやランタイムのスコープが必要であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="db0b9a1a8ead69e8e8f0f1d7371e2afb4c0ad8b8" translate="yes" xml:space="preserve">
          <source>But if you use your project in other contexts (like in a webapp, or dropped in a folder where other jars are sitting), you may have jar duplicates in your classpath (the ones in the folder, the one in the jars). Maybe not a bid deal but i usually avoid this.</source>
          <target state="translated">しかし、他のコンテキストでプロジェクトを使用している場合(ウェブアプリや他のjarが置かれているフォルダにドロップした場合など)、クラスパスにjarが重複している可能性があります(フォルダ内のもの、jar内のもの)。これは入札ではないかもしれませんが、私は通常これを避けています。</target>
        </trans-unit>
        <trans-unit id="05335f757a5351b285ef4d080df73dfb7749cdab" translate="yes" xml:space="preserve">
          <source>Class: org.apache.maven.plugin.assembly.io.DefaultAssemblyReader</source>
          <target state="translated">クラス:org.apache.maven.plugin.assembly.io.DefaultAssemblyReader</target>
        </trans-unit>
        <trans-unit id="239f5bbd42240f9afd77ab9f3c1c805ae8ee1e98" translate="yes" xml:space="preserve">
          <source>Commonly this goal is tied to a build phase to execute automatically. This ensures the JAR is built when executing &lt;code&gt;mvn install&lt;/code&gt; or performing a deployment/release.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常、この目標は、自動的に実行されるビルドフェーズに関連付けられています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mvn install&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行時&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;またはデプロイメント/リリースの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行時にJARが構築され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aed6731c7cb4c61796120f97936826ae6ecba2d6" translate="yes" xml:space="preserve">
          <source>Configure the &lt;code&gt;maven-jar-plugin&lt;/code&gt; to specify the main class of your executable jar (see &lt;a href=&quot;http://maven.apache.org/shared/maven-archiver/examples/classpath.html&quot;&gt;Set Up The Classpath&lt;/a&gt;, chapter &quot;Make The Jar Executable&quot;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;maven-jar-plugin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構成して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、実行可能jarのメインクラスを指定します（「&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maven.apache.org/shared/maven-archiver/examples/classpath.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスパスの設定」の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;章「Jarを実行可能にする」を参照）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fce782e49b19de850642908a7ec08707b6cfa53" translate="yes" xml:space="preserve">
          <source>Cons</source>
          <target state="translated">Cons</target>
        </trans-unit>
        <trans-unit id="aa751bd5bdc3d6ae02dc0ea608cce05f4c40c9dc" translate="yes" xml:space="preserve">
          <source>Copy Dependencies to a specific directory</source>
          <target state="translated">依存関係を特定のディレクトリにコピーする</target>
        </trans-unit>
        <trans-unit id="b0853e639fc904a2dbb7231eb618df2b875a96ff" translate="yes" xml:space="preserve">
          <source>Dependencies are out of the final jar.</source>
          <target state="translated">依存関係は最後のツボから外れています。</target>
        </trans-unit>
        <trans-unit id="756c41d2757a971734986145f3135a3039104913" translate="yes" xml:space="preserve">
          <source>Example POM configuration for &lt;code&gt;maven-jar-plugin&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;maven-jar-plugin&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; POM設定の例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="d94f9e8c7a8049c72204a49b52c67770260052ff" translate="yes" xml:space="preserve">
          <source>Finally create the executable jar by invoking:</source>
          <target state="translated">最後に実行可能なjarを呼び出して作成します。</target>
        </trans-unit>
        <trans-unit id="dfa5d4f7268771355cc1506567d697e18737833f" translate="yes" xml:space="preserve">
          <source>For Manual Deployment</source>
          <target state="translated">マニュアル展開の場合</target>
        </trans-unit>
        <trans-unit id="dcb1c2c4279091282d600913531f933f15d86c81" translate="yes" xml:space="preserve">
          <source>For anyone looking for options to exclude specific dependencies from the uber-jar, this is a solution that worked for me:</source>
          <target state="translated">特定の依存関係をuber-jarから除外するオプションを探している人のために、これは私のために働いた解決策です。</target>
        </trans-unit>
        <trans-unit id="f43d8e2e3501b8eaa05652e11d424de1f2b10156" translate="yes" xml:space="preserve">
          <source>How can I create an executable JAR with dependencies using Maven</source>
          <target state="translated">Mavenを使用して依存関係を持つ実行可能なJARを作成する方法は?</target>
        </trans-unit>
        <trans-unit id="ce15bffd3d51d59083f57224d54f027248d7b2a0" translate="yes" xml:space="preserve">
          <source>How can I make a Maven project package all dependency JARs into my output JAR?</source>
          <target state="translated">Mavenプロジェクトですべての依存関係JARを出力JARにパッケージ化するにはどうすればよいですか?</target>
        </trans-unit>
        <trans-unit id="2df1d2823bbb8e3240e8a4b30bded23378e9981f" translate="yes" xml:space="preserve">
          <source>I blogged about some different ways to do this.</source>
          <target state="translated">いろいろな方法をブログに書いてみました。</target>
        </trans-unit>
        <trans-unit id="de625c0490540f7272c2d8d9192a7a69f17f98b6" translate="yes" xml:space="preserve">
          <source>I compared the tree plugins mentioned in this post. I generated 2 jars and a directory with all the jars. I compared the results and definitely the maven-shade-plugin is the best. My challenge was that I have multiple spring resources that needed to be merged, as well as jax-rs, and JDBC services. They were all merged properly by the shade plugin in comparison with the maven-assembly-plugin. In which case the spring will fail unless you copy them to your own resources folder and merge them manually one time. Both plugins output the correct dependency tree. I had multiple scopes like test,provide, compile, etc the test and provided were skipped by both plugins. They both produced the same manifest but I was able to consolidate licenses with the shade plugin using their transformer.
With the maven-dependency-plugin of course you don't have those problems because the jars are not extracted. But like some other have pointed you need to carry one extra file(s) to work properly.
Here is a snip of the pom.xml</source>
          <target state="translated">この記事で紹介されているツリープラグインを比較してみました。2つのjarと、すべてのjarが入ったディレクトリを生成しました。結果を比較したところ、間違いなくmaven-shade-pluginが最高でした。私の課題は、jax-rsやJDBCサービスと同様にマージする必要がある複数のspringリソースを持っていることでした。それらはすべてmaven-assembly-pluginと比較して、shadeプラグインによって適切にマージされました。その場合、自分のリソースフォルダにコピーして手動で1回マージしない限り、springは失敗します。どちらのプラグインも正しい依存関係ツリーを出力してくれます。私はテスト、提供、コンパイルなどの複数のスコープを持っていましたが、テストと提供は両方のプラグインによってスキップされました。どちらも同じマニフェストを出力しましたが、shade プラグインのトランスフォーマを使ってライセンスを統合することができました。maven-dependency-pluginでは、jarは抽出されないので、もちろんこのような問題はありません。しかし、他の人が指摘しているように、正しく動作するためには1つの余分なファイルを運ぶ必要があります。以下はpom.xmlの抜粋です。</target>
        </trans-unit>
        <trans-unit id="48e4158ce5ea7852c293424433582e62c2099263" translate="yes" xml:space="preserve">
          <source>I found this plugin particularly useful as it merges content of specific files instead of overwriting them. This is needed when there are resource files that are have the same name across the jars and the plugin tries to package all the resource files</source>
          <target state="translated">このプラグインは、特定のファイルを上書きするのではなく、特定のファイルの内容をマージしてくれるので、特に便利だと思いました。これは、jar 全体で同じ名前のリソースファイルがあり、プラグインがすべてのリソースファイルをパッケージ化しようとしている場合に必要となります。</target>
        </trans-unit>
        <trans-unit id="83e41639b26d65ed77f1d4e4e663a29b4210f693" translate="yes" xml:space="preserve">
          <source>I had a similar requirement as the OP just that I had too many (Maven) dependencies for my project. Fortunately, the only solution that worked for me was that using &lt;code&gt;Eclipse&lt;/code&gt;. Very simple and very straightforward. This is not a solution to the OP but is a solution for someone who has a similar requirement but with many Maven dependencies,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私のプロジェクトには（Maven）依存関係が多すぎるというだけで、OPと同様の要件がありました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;幸い、私にとって有効だった唯一の解決策は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Eclipse&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用することでした&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常にシンプルで簡単です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはOPの解決策ではありませんが、同様の要件を持っているが多くのMaven依存関係がある人のための解決策です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01a01b2c5d1496c216ffb629a1a7a17f0d5bd3c2" translate="yes" xml:space="preserve">
          <source>I had extraordinary case because my dependency was system one:</source>
          <target state="translated">扶養家族がシステム1だったので、特別なケースがありました。</target>
        </trans-unit>
        <trans-unit id="2f8b57fee12855f6cc05a35105307c8ca8aa8c5e" translate="yes" xml:space="preserve">
          <source>I have changed the code provided by @user189057 with changes:
1) maven-dependency-plugin is executed in &quot;prepare-package&quot; phase
2) I am extracting unpacked classess directly to &quot;target/classes&quot;</source>
          <target state="translated">user189057さんから提供されたコードを変更しました。1)maven-dependency-pluginを &quot;prepare-package &quot;フェーズで実行する 2)アンパックされていないクラスを直接 &quot;targetclasses &quot;に抽出する</target>
        </trans-unit>
        <trans-unit id="deb165cade248b78b218e431b79ca0f417204d9d" translate="yes" xml:space="preserve">
          <source>I see the point (ease of deployment / usage) but it depends of the use case of your poject (and there may be alternatives (see below)).</source>
          <target state="translated">配置の使いやすさ)という点はわかりますが、それはあなたのプロジェクトのユースケースに依存します(代替案があるかもしれません(以下を参照))。</target>
        </trans-unit>
        <trans-unit id="feef4f53001e51f5a4d28ae4958b4f967970fcbd" translate="yes" xml:space="preserve">
          <source>I tested this with &lt;strong&gt;Apache Maven 3.0.3&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Apache Maven 3.0.3で&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストしました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d1a101526967c09c3cdd94cb0c31e17884a2198" translate="yes" xml:space="preserve">
          <source>I tried the most up-voted answer here, and was able to get the jar runnable. But the program didn't run correctly. I do not know what the reason was. When I try to run from &lt;code&gt;Eclipse&lt;/code&gt;, I get a different result but when I run the jar from command-line I get a different result (it crashes with a program-specific runtime error).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はここで最も投票された回答を試しましたが、jarを実行可能にすることができました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、プログラムは正しく実行されませんでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その理由はわかりません。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Eclipse&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から実行しようとすると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、異なる結果が得られますが、jarをコマンドラインから実行すると、異なる結果が得られます（プログラム固有のランタイムエラーでクラッシュします）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea59aebb6a1ca9b22e3b776a3674d8fb8f8889de" translate="yes" xml:space="preserve">
          <source>I wait it be useful for you all.</source>
          <target state="translated">皆さんのお役に立てることを願っています。</target>
        </trans-unit>
        <trans-unit id="9531ca7824c576a27237185696d71494efd9cea5" translate="yes" xml:space="preserve">
          <source>I want to package my project in a single executable JAR for distribution.</source>
          <target state="translated">自分のプロジェクトを単一の実行可能な JAR でパッケージ化して配布したいのですが、どうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="1ebae25ec367fc73cbc685bf5baa526fe71092b2" translate="yes" xml:space="preserve">
          <source>I went through every one of these responses looking to make a fat executable jar containing all dependencies and none of them worked right.  The answer is the shade plugin, its very easy and straightforward.</source>
          <target state="translated">私は、すべての依存関係を含む太い実行可能なjarを作るために、これらの回答のすべてを調べましたが、どれもうまくいきませんでした。答えは shade プラグインです。</target>
        </trans-unit>
        <trans-unit id="6cb08aececbaca95706440e50b3a9067ff2d68ec" translate="yes" xml:space="preserve">
          <source>I won't answer directly the question as other have already done that before, but I really wonder if it's a good idea to embed all the dependencies in the project's jar itself.</source>
          <target state="translated">他の人がすでにそうしているので、直接質問には答えませんが、プロジェクトのjar自体にすべての依存関係を埋め込むのは良いアイデアなのかどうかは本当に疑問です。</target>
        </trans-unit>
        <trans-unit id="3371ebb367fa28c394b15240a45d6d382e71c0a2" translate="yes" xml:space="preserve">
          <source>I'll post this solution in on a couple of other pages with a similar problem. Hopefully I can save somebody from a week of frustration.</source>
          <target state="translated">似たような問題を抱えた他のページにこの解決策を掲載します。うまくいけば、一週間のフラストレーションから誰かを救うことができます。</target>
        </trans-unit>
        <trans-unit id="b20fb520123354a2dcaa3afc08e7e8d423d7878c" translate="yes" xml:space="preserve">
          <source>If you use it fully standalone, why not.</source>
          <target state="translated">完全にスタンドアローンで使うならいいんじゃない?</target>
        </trans-unit>
        <trans-unit id="20ee1f203232844b176472cca18589a9ceb7e7bd" translate="yes" xml:space="preserve">
          <source>It should be like that:</source>
          <target state="translated">そうあるべきなのです。</target>
        </trans-unit>
        <trans-unit id="fc583824e8e01586f76dfc777b28e358cafe77cb" translate="yes" xml:space="preserve">
          <source>It's Maven that can compile all the dependanices and plugins. Not Netbeans. (If you can get Netbeans and be able to use java .jar to do this please tell me how (^.^)v )</source>
          <target state="translated">依存関係やプラグインをすべてコンパイルできるのはMavenです。Netbeansではありません。(Netbeansを入手してjava .jarを使ってこれができるようになったら、その方法を教えてください (^.^)v )</target>
        </trans-unit>
        <trans-unit id="cf8c28478d618066717d3ac0ce2e3a62eaed4d3c" translate="yes" xml:space="preserve">
          <source>Ken Liu has it right in my opinion. The maven dependency plugin allows you to expand all the dependencies, which you can then treat as resources. This allows you to include them in the &lt;em&gt;main&lt;/em&gt; artifact. The use of the assembly plugin creates a secondary artifact which can be difficult to modify - in my case I wanted to add custom manifest entries. My pom ended up as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ケン・リューは私の意見ではそれを正しく理解しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;maven依存関係プラグインを使用すると、すべての依存関係を拡張して、リソースとして扱うことができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、それらを&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メイン&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アーティファクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に含めることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アセンブリプラグインを使用すると、変更が難しい2次的なアーティファクトが作成されます-私の場合、カスタムマニフェストエントリを追加したいと思いました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私のポンは次のように終わった：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f1c69c040c4c925f567359846c7c7dc0c4092df" translate="yes" xml:space="preserve">
          <source>Like this, with in the end just a manifest and a &quot;special dynamic classloader main&quot;, you can start your project with :</source>
          <target state="translated">このように、最後にマニフェストと &quot;特別な動的クラスローダメイン &quot;だけで、あなたのプロジェクトを開始することができます。</target>
        </trans-unit>
        <trans-unit id="5283539a709e7d99dbd23ac3cda823838b8300e1" translate="yes" xml:space="preserve">
          <source>Long used the &lt;strong&gt;maven assembly plugin&lt;/strong&gt;, but I could not find a solution to the problem with &lt;a href=&quot;https://stackoverflow.com/questions/2596655/how-do-i-surpress-maven-assembly-plugin-skipping-files-that-are-already-added-o&quot;&gt;&lt;code&gt;&quot;already added, skipping&quot;&lt;/code&gt;&lt;/a&gt;. Now, I'm using another plugin - &lt;a href=&quot;http://code.google.com/p/onejar-maven-plugin/&quot;&gt;&lt;strong&gt;onejar-maven-plugin&lt;/strong&gt;&lt;/a&gt;. Example below (&lt;code&gt;mvn package&lt;/code&gt; build jar):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mavenアセンブリプラグインを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;長い間使用して&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2596655/how-do-i-surpress-maven-assembly-plugin-skipping-files-that-are-already-added-o&quot;&gt; &lt;code&gt;&quot;already added, skipping&quot;&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題の解決策が見つかりませんでした&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今、私は別のプラグインを使用しています&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/onejar-maven-plugin/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-onejar-maven-plugin&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下の例（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mvn package&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ビルドjar）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="647c50a056ea9dcff617a7f62d382bfbb8da3191" translate="yes" xml:space="preserve">
          <source>Make Deployable Archives</source>
          <target state="translated">デプロイ可能なアーカイブを作る</target>
        </trans-unit>
        <trans-unit id="3af3b27c21ea57bc9b5255e31c302a379e6c7ec9" translate="yes" xml:space="preserve">
          <source>Make the Jar Executable and Classpath Aware</source>
          <target state="translated">Jar を実行可能にしてクラスパスを認識させる</target>
        </trans-unit>
        <trans-unit id="6ccdb442cfbdde9c043a42a2c4f783daa681f4fc" translate="yes" xml:space="preserve">
          <source>Neither of them do what you need: look for the file on classpath.
Of course you need adding the package where the shared assembly resides on maven-assembly-plugin's classpath (see below).
If you're using Maven 2.x (not Maven 3.x), you may need adding this dependency in top-most parent pom.xml in pluginManagement section.</source>
          <target state="translated">どちらも必要なことをしません:クラスパス上のファイルを探します。もちろん、共有アセンブリが存在するパッケージをmaven-assembly-pluginのクラスパスに追加する必要があります(下記参照)。Maven 2.x (Maven 3.xではありません)を使用している場合、この依存関係を pluginManagement セクションの最上位の親 pom.xml に追加する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="bc981983e7f547dc62e19a1e383acfe00782a6d5" translate="yes" xml:space="preserve">
          <source>Next</source>
          <target state="translated">Next</target>
        </trans-unit>
        <trans-unit id="6be1a0d38b01e4703f22f2646798237386c0d395" translate="yes" xml:space="preserve">
          <source>Next, I would recommend making this a natural part of your build, rather than something to call explicitly.  To make this a integral part of your build, add this plugin to your &lt;code&gt;pom.xml&lt;/code&gt; and bind it to the &lt;code&gt;package&lt;/code&gt; lifecycle event.  However, a gotcha is that you need to call the &lt;code&gt;assembly:single&lt;/code&gt; goal if putting this in your pom.xml, while you would call 'assembly:assembly' if executing it manually from the command line.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、明示的に呼び出すのではなく、これをビルドの自然な部分にすることをお勧めします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これをビルドの不可欠な部分にするには、このプラグインを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;pom.xml&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;package&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライフサイクルイベントに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バインド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、問題&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、pom.xmlに配置する場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assembly:single&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ゴール&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出す必要があることですが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コマンドラインから手動で実行する場合は 'assembly：assembly'を呼び出すことになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="76669fc6b3753874e6f906a3c5151bf5d2f200d1" translate="yes" xml:space="preserve">
          <source>No class relocation support (use maven-shade-plugin if class relocation is needed).</source>
          <target state="translated">クラスの再配置をサポートしていません (クラスの再配置が必要な場合は maven-shade-plugin を使用してください)。</target>
        </trans-unit>
        <trans-unit id="26a11ef39c46e3c0a8b6c129144f0ca19cce302e" translate="yes" xml:space="preserve">
          <source>Not actively supported since 2012.</source>
          <target state="translated">2012年から積極的にサポートしていない</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="e3b82040565bb4be6b11f778a2e3df327ed20a3b" translate="yes" xml:space="preserve">
          <source>Now</source>
          <target state="translated">Now</target>
        </trans-unit>
        <trans-unit id="11a34941a02d883eba1bd4a2ce2c2bba49e5b498" translate="yes" xml:space="preserve">
          <source>Now you have &lt;code&gt;target/${project.build.finalName}.(zip|tar|tar.bz2|tar.gz)&lt;/code&gt; which each contains the &lt;code&gt;jar&lt;/code&gt; and &lt;code&gt;lib/*&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で、それぞれに&lt;/font&gt; &lt;code&gt;jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt; &lt;code&gt;lib/*&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含む&lt;/font&gt;&lt;/font&gt; &lt;code&gt;target/${project.build.finalName}.(zip|tar|tar.bz2|tar.gz)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ができました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b621b63e88f3c7a641a7bab3c6322779b05b2792" translate="yes" xml:space="preserve">
          <source>Okay, so this is my solution. I know it's not using the pom.xml file. But I had the problem my programmme compiling and running on Netbeans but it failing when I tried Java -jar MyJarFile.jar. Now, I don't fully understand Maven and I think this why was having trouble getting Netbeans 8.0.2 to include my jar file in a library to put them into a jar file. I was thinking about how I used to use jar files with no Maven in Eclipse.</source>
          <target state="translated">さて、これが私の解決策です。pom.xmlファイルを使っていないことはわかっています。しかし、私は私のプログラムをコンパイルしてNetbeans上で実行する問題を抱えていたが、Java -jar MyJarFile.jarを試したときにそれが失敗しました。今、私は完全にMavenを理解していないと私はこれがなぜNetbeans 8.0.2が私のjarファイルをjarファイルに入れるためにライブラリに私のjarファイルをインクルードするのに苦労していた理由だと思います。以前、EclipseでMavenを使わずにjarファイルを使っていた時のことを考えてみました。</target>
        </trans-unit>
        <trans-unit id="14efe9e6640aa7ce2344f32e314988b68bb792ef" translate="yes" xml:space="preserve">
          <source>Please see</source>
          <target state="translated">ご覧ください。</target>
        </trans-unit>
        <trans-unit id="9056c6db4c84e8b55d9051f2bc4c7a149268ab56" translate="yes" xml:space="preserve">
          <source>Problem with locating shared assembly file with maven-assembly-plugin-2.2.1?</source>
          <target state="translated">maven-assembly-plugin-2.2.1での共有アセンブリファイルの検索に問題がありますか?</target>
        </trans-unit>
        <trans-unit id="84083370162d72d8f9d3e15fe561f0204aaadf33" translate="yes" xml:space="preserve">
          <source>Pros</source>
          <target state="translated">Pros</target>
        </trans-unit>
        <trans-unit id="717f6061926b9d6d8e4a545c07ba18b25c4c0b8f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://jinahya.wordpress.com/2014/05/22/executable-jar-with-apache-maven/&quot;&gt;Executable Jar with Apache Maven&lt;/a&gt; (WordPress)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://jinahya.wordpress.com/2014/05/22/executable-jar-with-apache-maven/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Apache Maven&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（WordPress）で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行可能なJARを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24270e1cc18b57ef77ba16f946912c28736cf2d9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://svn.apache.org/repos/asf/maven/plugins/tags/maven-assembly-plugin-2.2.1&quot;&gt;this&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://svn.apache.org/repos/asf/maven/plugins/tags/maven-assembly-plugin-2.2.1&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こちら&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をご覧ください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3678e234ec85010f9cf213451187ac227a34a19" translate="yes" xml:space="preserve">
          <source>See example below</source>
          <target state="translated">以下の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="d3338cb8bd81e5acdbe5646a950af4ee59aa3770" translate="yes" xml:space="preserve">
          <source>See more details in comments.</source>
          <target state="translated">詳細はコメントでご覧ください。</target>
        </trans-unit>
        <trans-unit id="bf92796fabff61226473cb53bd51d3dbf4881ec5" translate="yes" xml:space="preserve">
          <source>So it's not a configuration of the mvn-assembly-plugin but a property of the dependency.</source>
          <target state="translated">つまり、mvn-assembly-pluginの設定ではなく、依存関係のプロパティであるということですね。</target>
        </trans-unit>
        <trans-unit id="a9478119b6466b4539a73be2a84a099acbbc5b9f" translate="yes" xml:space="preserve">
          <source>Something that have worked for me was:</source>
          <target state="translated">私のために働いてくれた何かが</target>
        </trans-unit>
        <trans-unit id="d32d7a7cdff661ccacd427f953f2b19b57e424c9" translate="yes" xml:space="preserve">
          <source>Spring Boot Maven Plugin</source>
          <target state="translated">Spring Boot Mavenプラグイン</target>
        </trans-unit>
        <trans-unit id="a8e846d63a78758a3953ca571f685e9739aaa2fa" translate="yes" xml:space="preserve">
          <source>Taking Unanswered's answer and reformatting it, we have:</source>
          <target state="translated">Unansweredの答えを取って再フォーマットすると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="c1ca5bc1738f26a4fb8e7e62bd937e5db7157979" translate="yes" xml:space="preserve">
          <source>Thats it. Next mvn package will also create one fat jar additionally, including all dependency jars.</source>
          <target state="translated">以上です。次のmvnパッケージはさらに、依存関係のあるすべてのjarを含めて、1つのfat jarを作成します。</target>
        </trans-unit>
        <trans-unit id="aaaf895b04eb9c350de234454da61e8063f3a223" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jar&lt;/code&gt; file is only executable with the sibling &lt;code&gt;...lib/&lt;/code&gt; directory. We need to make archives to deploy with the directory and its content.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファイルは、兄弟でのみ実行可能です&lt;/font&gt;&lt;/font&gt; &lt;code&gt;...lib/&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディレクトリにあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディレクトリとそのコンテンツとともにデプロイするアーカイブを作成する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7cce37d6b961eefb3725bf4e584883991590641b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maven-shade-plugin&lt;/code&gt; packs your classes and all dependencies in a single jar file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;maven-shade-plugin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、単一のjarファイルにあなたのクラスとすべての依存関係をパックします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="032697b015b589ef6800d15d5486dbab56c69cba" translate="yes" xml:space="preserve">
          <source>The ideal solution is to include the jars in a lib folder and the manifest.mf file of the main jar include all the jars in classpath.</source>
          <target state="translated">理想的な解決策は、jarをlibフォルダにインクルードし、メインjarのmanifest.mfファイルはクラスパスにあるすべてのjarをインクルードすることです。</target>
        </trans-unit>
        <trans-unit id="617778aa3c45395852ad52ff7e703025c94819d4" translate="yes" xml:space="preserve">
          <source>The maven-assembly-plugin worked great for me.
I spent hours with the maven-dependency-plugin and couldn't make it work. The main reason was that I had to define in the configuration section explicitly the artifact items which should be included as it is described in the &lt;a href=&quot;http://maven.apache.org/plugins/maven-dependency-plugin/usage.html&quot;&gt;documentation&lt;/a&gt;. 
There is an example there for the cases when you want to use it like: &lt;code&gt;mvn dependency:copy&lt;/code&gt;, where there are not included any artifactItems but it doesn't work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;maven-assembly-pluginは私にとってはうまくいきました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はmaven-dependency-pluginで何時間も過ごしましたが、それを機能させることができませんでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主な理由は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maven.apache.org/plugins/maven-dependency-plugin/usage.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記載されているように、含める必要があるアーティファクト項目を構成セクションで明示的に定義する必要があったためです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;mvn dependency:copy&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように使用したい場合の例があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。artifactItems&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は含まれていませんが、機能しません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7d93209feaafbc1a12da3a4ff746ce203ae75ff" translate="yes" xml:space="preserve">
          <source>Then</source>
          <target state="translated">Then</target>
        </trans-unit>
        <trans-unit id="8aa4b7e45a901491770e0426defed852371886b5" translate="yes" xml:space="preserve">
          <source>There are millions of answers already, I wanted to add you don't need &lt;code&gt;&amp;lt;mainClass&amp;gt;&lt;/code&gt; if you don't need to add entryPoint to your application. &lt;strong&gt;For example APIs may not have necessarily have &lt;code&gt;main&lt;/code&gt; method.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すでに何百万もの回答があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。entryPointをアプリケーションに追加する必要がない場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;lt;mainClass&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は不要であることを追加したいと思います。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、APIには必ずしも&lt;/font&gt;&lt;/font&gt; &lt;code&gt;main&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がない場合があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="131e685611991a5bf4644d0e32157e420d09c7d0" translate="yes" xml:space="preserve">
          <source>This blog post shows another approach with combining the maven-jar and maven-assembly plugins. With the assembly configuration xml from the blog post it can also be controlled if dependencies will be expanded or just be collected in a folder and referenced by a classpath entry in the manifest:</source>
          <target state="translated">このブログ記事では、maven-jarとmaven-assemblyプラグインを組み合わせた別のアプローチを示しています。ブログ記事のアセンブリ構成xmlを使用して、依存関係が展開されるか、または単にフォルダに収集され、マニフェストのクラスパスエントリによって参照されるかどうかを制御することもできます。</target>
        </trans-unit>
        <trans-unit id="8e8e10b57c5f3a340e82da894262c4043e95188b" translate="yes" xml:space="preserve">
          <source>This could also be an option,You will be able to build your jar file</source>
          <target state="translated">これもオプションで、あなたのjarファイルをビルドすることができます。</target>
        </trans-unit>
        <trans-unit id="e95d4076270199752119979875c75798b0bc100d" translate="yes" xml:space="preserve">
          <source>This example came from mkyong.com</source>
          <target state="translated">この例はmkyong.comから来ました。</target>
        </trans-unit>
        <trans-unit id="17b05b2000eae3062c48ea5ebae6307facfc9414" translate="yes" xml:space="preserve">
          <source>This is the best way i found:</source>
          <target state="translated">これが私が見つけた最高の方法です。</target>
        </trans-unit>
        <trans-unit id="5a04ea4658573067591f19c1e041be9154195ad8" translate="yes" xml:space="preserve">
          <source>This will create jar file in the target directory.</source>
          <target state="translated">これでターゲットディレクトリにjarファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="db8a558a1fa3987c9a3f3e5fe5ec4801f263865e" translate="yes" xml:space="preserve">
          <source>Those pros and cons are provided by &lt;a href=&quot;https://stackoverflow.com/users/363573/stephan&quot;&gt;Stephan&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの長所と短所は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/363573/stephan&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ステファン&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって提供され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64a56d23cec35a0faf3c7f7cce79fbfe9bc07edf" translate="yes" xml:space="preserve">
          <source>To create an executable JAR from command line itself just run the below command from the project path:</source>
          <target state="translated">コマンドラインから実行可能なJARを作成するには、プロジェクトパスから以下のコマンドを実行するだけです。</target>
        </trans-unit>
        <trans-unit id="ab85d081c33abbd1badab3f30942ef4a2be8d567" translate="yes" xml:space="preserve">
          <source>To resolve this issue we will use Maven Assembly Plugin that will create the JAR together with its dependency JARs into a single executable JAR file. Just add below plugin configuration in your pom.xml file.</source>
          <target state="translated">この問題を解決するために、依存関係のあるJARと一緒に単一の実行可能なJARファイルにJARを作成するMaven Assembly Pluginを使用します。以下のプラグインの設定を pom.xml ファイルに追加してください。</target>
        </trans-unit>
        <trans-unit id="be503b71994d266d92e24167745db0432dabed54" translate="yes" xml:space="preserve">
          <source>Try using descriptorId configuration parameter instead of descriptors/descriptor or descriptorRefs/descriptorRef parameters.</source>
          <target state="translated">descriptorsdescriptorまたはdescriptorRefsdescriptorRefパラメータの代わりに、descriptorId構成パラメータを使用してみてください。</target>
        </trans-unit>
        <trans-unit id="a6280c0421a1ccbd154554d0a41ae2c000df38ae" translate="yes" xml:space="preserve">
          <source>Unpacking have to be in generate-resources phase because, if in package phase, will not be included as resources.
Try clean package and you'll see.</source>
          <target state="translated">アンパックはリソースを生成する段階でなければなりませんが、パッケージの段階ではリソースとして含まれないため、パッケージをクリーンにしてみてください。クリーンパッケージを試してみてください。</target>
        </trans-unit>
        <trans-unit id="f22d6702f70a4d6e088c307d6ad51af5b1708c9f" translate="yes" xml:space="preserve">
          <source>Use the maven-shade-plugin to package all dependencies into one uber-jar. It can also be used to build an executable jar by specifying the main class. After trying to use maven-assembly and maven-jar , I found that this plugin best suited my needs.</source>
          <target state="translated">maven-shade-pluginを使用して、すべての依存関係を1つのuber-jarにパッケージ化します。また、メインクラスを指定して実行可能なjarを構築するためにも使用できます。maven-assemblyとmaven-jarを使ってみた結果、このプラグインが私のニーズに最も適していることがわかりました。</target>
        </trans-unit>
        <trans-unit id="c2c36b13d1c0ae5cc5612734437d62b755623505" translate="yes" xml:space="preserve">
          <source>With this configuration, all dependencies will be located in &lt;code&gt;/dependency-jars&lt;/code&gt;. My application has no &lt;code&gt;Main&lt;/code&gt; class, just context ones, but one of my dependencies do have a &lt;code&gt;Main&lt;/code&gt; class (&lt;code&gt;com.myDomain.etc.MainClassName&lt;/code&gt;) that starts the JMX server, and receives a &lt;code&gt;start&lt;/code&gt; or a &lt;code&gt;stop&lt;/code&gt; parameter. So with this i was able to start my application like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この構成では、すべての依存関係は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;/dependency-jars&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配置され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私のアプリケーションには&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Main&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がなく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コンテキストクラスだけがありますが、依存関係の1 &lt;/font&gt; &lt;code&gt;com.myDomain.etc.MainClassName&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、JMXサーバーを起動し、&lt;/font&gt; &lt;code&gt;start&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt; &lt;code&gt;stop&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;パラメーター&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を受け取る&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Main&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス（&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;com.myDomain.etc.MainClassName&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だからこれで私はこのように私のアプリケーションを開始することができました：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3499e353a7f36bf2da8542d873abbfab3404e57c" translate="yes" xml:space="preserve">
          <source>You can add the following to your &lt;strong&gt;pom.xml&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pom.xmlに&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a4e487de079697bb89f8952c8aec873aac6ca1e" translate="yes" xml:space="preserve">
          <source>You can use maven-dependency-plugin, but the question was how to create an executable JAR. To do that requires the following alteration to Matthew Franglen's response (btw, using the dependency plugin takes longer to build when starting from a clean target):</source>
          <target state="translated">maven-dependency-pluginを使うことはできますが、質問は実行可能なJARをどうやって作成するかということでした。そのためには、Matthew Franglenの回答を以下のように変更する必要があります(ちなみに、依存性プラグインを使用すると、クリーンなターゲットから起動するとビルドに時間がかかります)。</target>
        </trans-unit>
        <trans-unit id="79aebc08cab7037b76a43a4337b0e4cfbca19574" translate="yes" xml:space="preserve">
          <source>You can use maven-shade plugin to build a uber jar like below</source>
          <target state="translated">maven-shadeプラグインを使って以下のようなuber jarを構築することができます。</target>
        </trans-unit>
        <trans-unit id="92d7067b527248a48c5d439e6134ce199e7dc986" translate="yes" xml:space="preserve">
          <source>You can use the dependency-plugin to generate all dependencies in a separate directory before the package phase and then include that in the classpath of the manifest:</source>
          <target state="translated">dependency-plugin を使用して、パッケージフェーズの前に別のディレクトリにすべての依存関係を生成し、それをマニフェストのクラスパスに含めることができます。</target>
        </trans-unit>
        <trans-unit id="9f7d433211690bce3582868faebecbe89f4a5caa" translate="yes" xml:space="preserve">
          <source>You could combine the &lt;code&gt;maven-shade-plugin&lt;/code&gt; and &lt;code&gt;maven-jar-plugin&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;maven-shade-plugin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;maven-jar-plugin&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;組み合わせることができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1562642d6004bcef3a3df3d640fcf5347966d3ad" translate="yes" xml:space="preserve">
          <source>You have &lt;code&gt;target/${project.build.finalName}-shaded.jar&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは持っている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;target/${project.build.finalName}-shaded.jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5b62bb07074ac7061f7d307f269cc1b3d3f13da" translate="yes" xml:space="preserve">
          <source>You have &lt;code&gt;target/${project.bulid.finalName}-jar-with-dependencies.jar&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは持っている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;target/${project.bulid.finalName}-jar-with-dependencies.jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a41cd01714ac01a244aeff9d719971b900b5ba3" translate="yes" xml:space="preserve">
          <source>You have &lt;code&gt;target/${project.bulid.finalName}-spring-boot.jar&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは持っている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;target/${project.bulid.finalName}-spring-boot.jar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4569f3c515d478cae127606024f143bae030233" translate="yes" xml:space="preserve">
          <source>You need to add repository for that plugin:</source>
          <target state="translated">そのプラグインのリポジトリを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="c7bbc617964d65388e47c2c2128ecc0259c4f200" translate="yes" xml:space="preserve">
          <source>[Solved - for Linux] by opening a terminal.</source>
          <target state="translated">ターミナルを開いて、[解決済み-for Linux]。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="25706e9308bbdf1ee53a1245c1ebe291830d67c0" translate="yes" xml:space="preserve">
          <source>and you run it with</source>
          <target state="translated">で実行します。</target>
        </trans-unit>
        <trans-unit id="80754af91bfb6d1073585b046fe0a474ce868509" translate="yes" xml:space="preserve">
          <source>build</source>
          <target state="translated">build</target>
        </trans-unit>
        <trans-unit id="01ff58bacebb9c7169135dfafb6b59c94189e271" translate="yes" xml:space="preserve">
          <source>deploy your application as a .zip / .war : the archive contains your project's jar and all dependent jars ;</source>
          <target state="translated">アプリケーションを .zip .war としてデプロイします:アーカイブにはプロジェクトの jar とすべての依存する jar が含まれています。</target>
        </trans-unit>
        <trans-unit id="42def82486489d1d45c2f72801f4a986d6edac8e" translate="yes" xml:space="preserve">
          <source>maven plugin config</source>
          <target state="translated">mavenプラグイン設定</target>
        </trans-unit>
        <trans-unit id="94ed108f8d26a90f8d7ae1ca6d436e96321a46ed" translate="yes" xml:space="preserve">
          <source>onejar-maven-plugin</source>
          <target state="translated">onejar-maven-plugin</target>
        </trans-unit>
        <trans-unit id="d926a40160f968d9cae068845c9feb5a77a2e41c" translate="yes" xml:space="preserve">
          <source>or &lt;a href=&quot;https://github.com/jinahya/executable-jar-with-maven-example&quot;&gt;executable-jar-with-maven-example&lt;/a&gt; (GitHub)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jinahya/executable-jar-with-maven-example&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行可能なjar-with-maven-example&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（GitHub）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2316492a2f18830ebbe1103d79ba9dd3130f55aa" translate="yes" xml:space="preserve">
          <source>use a dynamic classloader mechanism (see Spring, or you can easily do this yourself) to have a single entry point of your project (a single class to start - see the Manifest mechanism on another answer), which will add (dynamically) to the current classpath all the other needed jars.</source>
          <target state="translated">動的なクラスローダの仕組みを使う(Springを参照してください。もしくは自分で簡単にできます)ことで、プロジェクトの単一のエントリーポイント(開始する単一のクラス-別の回答のマニフェストの仕組みを参照してください)を持つことができ、他のすべての必要なjarを現在のクラスパスに(動的に)追加することができます。</target>
        </trans-unit>
        <trans-unit id="86a4261d849a6e99b3c3a38f7585e3c7d4a91823" translate="yes" xml:space="preserve">
          <source>verify</source>
          <target state="translated">verify</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
