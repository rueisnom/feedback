<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/576169">
    <body>
      <group id="576169">
        <trans-unit id="7b8a751539c1f000376949b749b7c8a70d30114d" translate="yes" xml:space="preserve">
          <source>&quot;What difference is there actually in this code?:&quot;</source>
          <target state="translated">&quot;Какая разница на самом деле есть в этом коде?&quot;</target>
        </trans-unit>
        <trans-unit id="b7aa86be7cf69101b5c11eff45b4a5a25afe38b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super()&lt;/code&gt; lets you avoid referring to the base class explicitly, which can be nice. But the main advantage comes with multiple inheritance, where all sorts of &lt;a href=&quot;http://www.artima.com/weblogs/viewpost.jsp?thread=236275&quot;&gt;fun stuff&lt;/a&gt; can happen. See the &lt;a href=&quot;https://docs.python.org/2/library/functions.html#super&quot;&gt;standard docs on super&lt;/a&gt; if you haven't already.</source>
          <target state="translated">&lt;code&gt;super()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; позволяет избежать явного обращения к базовому классу, что может быть приятно. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но главное преимущество заключается в множественном наследовании, где &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;могут происходить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;разные &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.artima.com/weblogs/viewpost.jsp?thread=236275&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;забавные вещи&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/2/library/functions.html#super&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;стандартные документы по супер,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если вы еще этого не сделали.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="521db6e7d01c98f987b74991f83b0fed3e15feda" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;(That answer is not clever or particularly interesting, but in spite of direct criticism in the comments and over 17 downvotes, the answerer persisted in suggesting it until a kind editor fixed his problem.)&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Этот ответ не является умным или особенно интересным, но, несмотря на прямую критику в комментариях и более 17 отрицательных ответов, ответчик настойчиво предлагал его, пока добрый редактор не исправил свою проблему.)&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="614d9df3f2f50804fb853ebd00b2ed6f6ad2eb78" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;UserA&lt;/code&gt; does not call the UserDependency method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И &lt;/font&gt;&lt;/font&gt; &lt;code&gt;UserA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не вызывает метод UserDependency:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30d2c048fcea968e08992d23ac7fbd7b95cd036d" translate="yes" xml:space="preserve">
          <source>And let's create a dependency that we want to be called after the Child:</source>
          <target state="translated">И давайте создадим зависимость,которую мы хотим называть в честь Ребенка:</target>
        </trans-unit>
        <trans-unit id="ce29b9d1efdb53530d63803e9b964b1f4be50c89" translate="yes" xml:space="preserve">
          <source>But &lt;code&gt;UserB&lt;/code&gt; does in-fact call UserDependency because &lt;code&gt;ChildB&lt;/code&gt; invokes &lt;code&gt;super&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но &lt;/font&gt;&lt;/font&gt; &lt;code&gt;UserB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; фактически вызывает UserDependency, потому что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="313d6c67c467add7dfcb14adfdb06ec3267c1cac" translate="yes" xml:space="preserve">
          <source>Criticism for another answer</source>
          <target state="translated">Критика за другой ответ</target>
        </trans-unit>
        <trans-unit id="2d412a10077dff5a0bc8c827d967957b6da52c24" translate="yes" xml:space="preserve">
          <source>Criticisms of other answers:</source>
          <target state="translated">Критика других ответов:</target>
        </trans-unit>
        <trans-unit id="ec6725c61b26f37beb5a9d30c4ef6756963dbbf0" translate="yes" xml:space="preserve">
          <source>Explanation: That answer suggested calling super like this:</source>
          <target state="translated">Объяснение:В этом ответе предлагалось звонить супер вот так:</target>
        </trans-unit>
        <trans-unit id="775b70cb283b67e7b45195276b3f4a22c732fdcc" translate="yes" xml:space="preserve">
          <source>HOWEVER, this breaks calls to &lt;code&gt;super&lt;/code&gt; for any classes that inherit from your class, where &lt;code&gt;self.__class__&lt;/code&gt; could return a child class. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ОДНАКО, это прерывает вызовы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для любых классов, которые наследуются от вашего класса, где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.__class__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может вернуть дочерний класс. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="982b6852585a46506fc4c63544abfdb4a56b3531" translate="yes" xml:space="preserve">
          <source>Here I have a class &lt;code&gt;Square&lt;/code&gt;, which is a sub-class of &lt;code&gt;Rectangle&lt;/code&gt;. Say I don't want to write a separate constructor for &lt;code&gt;Square&lt;/code&gt; because the constructor for &lt;code&gt;Rectangle&lt;/code&gt; is good enough, but for whatever reason I want to implement a Square so I can reimplement some other method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь у меня есть класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Square&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который является подклассом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Rectangle&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Скажем, я не хочу писать отдельный конструктор для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Square&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что конструктор для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Rectangle&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; достаточно хорош, но по любой причине я хочу реализовать Square, чтобы я мог переопределить какой-то другой метод.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d897e7d1901facf67bdf7d5735cbe108fb04682d" translate="yes" xml:space="preserve">
          <source>Here's code that's actually closely equivalent to &lt;code&gt;super&lt;/code&gt; (how it's implemented in C, minus some checking and fallback behavior, and translated to Python):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот код, который на самом деле близко эквивалентен &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (как он реализован в C, за исключением некоторой проверки и аварийного поведения и переведен на Python):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1c0ad9d2070cfca96329d11e6424dd5d65bf7d7" translate="yes" xml:space="preserve">
          <source>How does super do this in Python 3 without being told explicitly which class and instance from the method it was called from?</source>
          <target state="translated">Как сделать это супер на Python 3,не сказав явно,из какого класса и экземпляра метода он был вызван?</target>
        </trans-unit>
        <trans-unit id="1f712afe4c3219c174967bbc1c97e9c4cd7a2d41" translate="yes" xml:space="preserve">
          <source>I further explain below.</source>
          <target state="translated">Я объясню ниже.</target>
        </trans-unit>
        <trans-unit id="67806aef4cd47edf6c8e854ef035e14d94ae4a70" translate="yes" xml:space="preserve">
          <source>I illustrate this difference in an answer at the &lt;a href=&quot;https://stackoverflow.com/a/33469090/541136&quot;&gt;canonical question, How to use 'super' in Python?&lt;/a&gt;, which demonstrates &lt;strong&gt;dependency injection&lt;/strong&gt; and &lt;strong&gt;cooperative multiple inheritance&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я иллюстрирую эту разницу в ответе на &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/33469090/541136&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;канонический вопрос: как использовать &amp;laquo;супер&amp;raquo; в Python? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, который демонстрирует &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;зависимость внедрения&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;кооперативного множественного наследования&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69d18703f8012c82ef2ee70d9c0e7025ab7d9044" translate="yes" xml:space="preserve">
          <source>I'll explain here.</source>
          <target state="translated">Я объясню здесь.</target>
        </trans-unit>
        <trans-unit id="fbdc8ccf7c2e0f8509fddeb4507a897f08b912d7" translate="yes" xml:space="preserve">
          <source>I'm curious to know about the actual difference between the following 2 child classes.</source>
          <target state="translated">Мне любопытно узнать о фактической разнице между следующими 2 детскими классами.</target>
        </trans-unit>
        <trans-unit id="013ae50259927eafd7dba45cabc87491454ed669" translate="yes" xml:space="preserve">
          <source>I'm trying to understand &lt;code&gt;super()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я пытаюсь понять &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d510e01fd2580495a8dc56d24a934df91a79383" translate="yes" xml:space="preserve">
          <source>I'm trying to understand the use of &lt;code&gt;super()&lt;/code&gt;. From the looks of it, both child classes can be created, just fine.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я пытаюсь понять использование &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Судя по всему, оба дочерних класса могут быть созданы, просто отлично.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c983791dccd73919d081b5aa39a3de8e56dcc7cf" translate="yes" xml:space="preserve">
          <source>If Python didn't have &lt;code&gt;super&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если у Питона не было &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94cacf845a1e096419ac09fe42dd189a715f48f5" translate="yes" xml:space="preserve">
          <source>If we didn't have the &lt;code&gt;super&lt;/code&gt; object, we'd have to write this manual code everywhere (or recreate it!) to ensure that we call the proper next method in the Method Resolution Order!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если бы у нас не было &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , нам пришлось бы везде писать этот ручной код (или пересоздавать его!), Чтобы гарантировать, что мы вызовем правильный следующий метод в Порядке разрешения методов!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6bed384df46f8f09be1fe4311afafbbc891f8c7" translate="yes" xml:space="preserve">
          <source>If you add a &lt;code&gt;ClassC&lt;/code&gt; that uses multiple inheritance:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы добавите &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ClassC&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который использует множественное наследование:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7c49d3aea8156f1de53014c72b233b0c4a85a4a" translate="yes" xml:space="preserve">
          <source>In Python 2, we are required to use it like this:</source>
          <target state="translated">На Питоне 2 мы должны использовать его вот так:</target>
        </trans-unit>
        <trans-unit id="bdf2b62bc2e9c4ad298cc3649b7b4279c94e2411" translate="yes" xml:space="preserve">
          <source>In Python 3, we can call it like this:</source>
          <target state="translated">На Питоне 3 мы можем называть его так:</target>
        </trans-unit>
        <trans-unit id="19d5f26fb874999b1aecef4edc966100fa016e8d" translate="yes" xml:space="preserve">
          <source>In no circumstance should you do the following, which another answer suggests, as you'll definitely get errors when you subclass ChildB:</source>
          <target state="translated">Ни в коем случае не стоит делать следующее,о чем говорит другой ответ,так как вы определенно получите ошибки при подклассе ChildB:</target>
        </trans-unit>
        <trans-unit id="69e4d25ea0c4fe5d1668372c5acb33b65ab958e6" translate="yes" xml:space="preserve">
          <source>It gets the calling stack frame, and finds the class (implicitly stored as a local free variable, &lt;code&gt;__class__&lt;/code&gt;, making the calling function a closure over the class) and the first argument to that function, which should be the instance or class that informs it which Method Resolution Order (MRO) to use.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он получает фрейм вызывающего стека и находит класс (неявно хранящийся как локальная свободная переменная &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__class__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , делающая вызывающую функцию закрытием над классом) и первый аргумент этой функции, который должен быть экземпляром или классом, информирующим ее какой порядок разрешения методов (MRO) использовать.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ce2ae31ef8a844e3b367354faa659a44b39cedb" translate="yes" xml:space="preserve">
          <source>It's been noted that in Python 3.0+ you can use</source>
          <target state="translated">Было отмечено,что на Python 3.0+можно использовать</target>
        </trans-unit>
        <trans-unit id="e2ded1d3b411cff93927f1c1b5c1a5bc18d0f6a2" translate="yes" xml:space="preserve">
          <source>It's rather hand-wavey and doesn't tell us much, but the point of &lt;code&gt;super&lt;/code&gt; is not to avoid writing the parent class. The point is to ensure that the next method in line in the method resolution order (MRO) is called. This becomes important in multiple inheritance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это довольно волнительно и мало что нам говорит, но смысл &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не в том, чтобы не писать родительский класс. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Суть в том, чтобы обеспечить вызов следующего метода в строке в порядке разрешения методов (MRO). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это становится важным при множественном наследовании.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1efb022ca61801794dbc70bf04ba0a45b0b44a78" translate="yes" xml:space="preserve">
          <source>Just a heads up... with Python 2.7, and I believe ever since &lt;code&gt;super()&lt;/code&gt; was introduced in version 2.2, you can only call &lt;a href=&quot;http://docs.python.org/library/functions.html#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; if one of the parents inherit from a class that eventually inherits &lt;code&gt;object&lt;/code&gt; (&lt;a href=&quot;http://docs.python.org/glossary.html#term-new-style-class&quot;&gt;new-style classes&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Просто на голову ... с Python 2.7, и я верю, что с тех пор, как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; был представлен в версии 2.2, вы можете вызывать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/library/functions.html#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если один из родителей наследует класс, который в конечном итоге наследует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://docs.python.org/glossary.html#term-new-style-class&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;классы нового стиля)&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c11b889063ddec79111dade62ed3e68cda5d425e" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://docs.python.org/3/library/functions.html#super&quot;&gt;the syntax changed in Python 3.0&lt;/a&gt;: you can just say &lt;code&gt;super().__init__()&lt;/code&gt; instead of &lt;code&gt;super(ChildB, self).__init__()&lt;/code&gt; which IMO is quite a bit nicer. The standard docs also refer to a &lt;a href=&quot;https://rhettinger.wordpress.com/2011/05/26/super-considered-super/&quot;&gt;guide to using &lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; which is quite explanatory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.python.org/3/library/functions.html#super&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в Python 3.0 синтаксис изменился&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : вы можете просто сказать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super().__init__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вместо &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super(ChildB, self).__init__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; что в IMO немного лучше. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Стандартные документы также ссылаются на &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://rhettinger.wordpress.com/2011/05/26/super-considered-super/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;руководство по использованию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которое довольно объяснительно.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="120b8e7780aebaa08d66e08924d05a7926d88a33" translate="yes" xml:space="preserve">
          <source>Now remember, &lt;code&gt;ChildB&lt;/code&gt; uses super, &lt;code&gt;ChildA&lt;/code&gt; does not:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь помните, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует супер, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e1bbbacc79ffa0321328ffd3a629b28c48e9fa4" translate="yes" xml:space="preserve">
          <source>Personally, as for python 2.7 code, I'm going to continue using &lt;code&gt;BaseClassName.__init__(self, args)&lt;/code&gt; until I actually get the advantage of using &lt;code&gt;super()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Лично, что касается кода на Python 2.7, я собираюсь продолжать использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;BaseClassName.__init__(self, args)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; пока не получу преимущество использования &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="656b5e0f28aa8e09c2d356dcaad53c550ed7e748" translate="yes" xml:space="preserve">
          <source>Since it requires that first argument for the MRO, &lt;a href=&quot;https://bugs.python.org/issue31118&quot;&gt;using &lt;code&gt;super&lt;/code&gt; with static methods is impossible&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку это требует первого аргумента для MRO, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://bugs.python.org/issue31118&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;использование &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; со статическими методами невозможно&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50c6e41121c38b6b90d6b8a75b15ae39265fe7f4" translate="yes" xml:space="preserve">
          <source>So if you are designed your classes so that they can be used in a Cooperative Multiple Inheritance scenario, you use &lt;code&gt;super&lt;/code&gt; because you don't really know who is going to be the ancestor at runtime.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поэтому, если вы спроектировали свои классы так, чтобы их можно было использовать в сценарии с кооперативным множественным наследованием, вы используете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что вы на самом деле не знаете, кто будет предком во время выполнения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="681df8aa8e2438f396cffd8a248cb63baa354d56" translate="yes" xml:space="preserve">
          <source>Super has no side effects</source>
          <target state="translated">Супер не имеет побочных эффектов</target>
        </trans-unit>
        <trans-unit id="cee4c8b6f9b0ed98c6a0f4aa78798e8c7179894c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://rhettinger.wordpress.com/2011/05/26/super-considered-super/&quot;&gt;super considered super post&lt;/a&gt; and &lt;a href=&quot;https://youtu.be/EiOglTERPEo&quot;&gt;pycon 2015 accompanying video&lt;/a&gt; explain this pretty well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://rhettinger.wordpress.com/2011/05/26/super-considered-super/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Супер считается супер пост&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://youtu.be/EiOglTERPEo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PyCon 2015 сопровождающее видео&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объяснить это очень хорошо.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e2ec71728d3de52aa02d0ab10c1f730dd4325c3" translate="yes" xml:space="preserve">
          <source>The main difference is that &lt;code&gt;ChildA.__init__&lt;/code&gt; will unconditionally call &lt;code&gt;Base.__init__&lt;/code&gt; whereas &lt;code&gt;ChildB.__init__&lt;/code&gt; will call &lt;code&gt;__init__&lt;/code&gt; in &lt;strong&gt;whatever class happens to be &lt;code&gt;ChildB&lt;/code&gt; ancestor in &lt;code&gt;self&lt;/code&gt;'s line of ancestors&lt;/strong&gt;
(which may differ from what you expect).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Основное отличие состоит в том, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildA.__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; безоговорочно вызовет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Base.__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; тогда как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildB.__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет вызывать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;любом классе, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; предком &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ChildB&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;линии предков &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (что может отличаться от того, что вы ожидаете).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="73a82aa45bc046833ee1591294e52598ae55f315" translate="yes" xml:space="preserve">
          <source>The primary difference in this code is that you get a layer of indirection in the &lt;code&gt;__init__&lt;/code&gt; with &lt;code&gt;super&lt;/code&gt;, which uses the current class to determine the next class's &lt;code&gt;__init__&lt;/code&gt; to look up in the MRO.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Основное отличие этого кода в том, что вы получаете слой косвенности в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который использует текущий класс для определения &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; следующего класса &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;для поиска в MRO.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="efafeff5ca15dcf63ce39777e8527649737832f0" translate="yes" xml:space="preserve">
          <source>The reason we use &lt;code&gt;super&lt;/code&gt; is so that child classes that may be using cooperative multiple inheritance will call the correct next parent class function in the Method Resolution Order (MRO).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Причина, по которой мы используем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заключается в том, что дочерние классы, которые могут использовать кооперативное множественное наследование, будут вызывать правильную функцию следующего родительского класса в Порядке разрешения методов (MRO).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="128554c42e47d524faa5e1ee8f33583351379711" translate="yes" xml:space="preserve">
          <source>There isn't, really. &lt;code&gt;super()&lt;/code&gt; looks at the next class in the MRO (method resolution order, accessed with &lt;code&gt;cls.__mro__&lt;/code&gt;) to call the methods. Just calling the base &lt;code&gt;__init__&lt;/code&gt; calls the base &lt;code&gt;__init__&lt;/code&gt;. As it happens, the MRO has exactly one item-- the base. So you're really doing the exact same thing, but in a nicer way with &lt;code&gt;super()&lt;/code&gt; (particularly if you get into multiple inheritance later).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нет, правда. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; просматривает следующий класс в MRO (порядок разрешения методов, доступ к которому осуществляется через &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cls.__mro__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) для вызова методов. Просто вызов базы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывает базу &lt;/font&gt;&lt;/font&gt; &lt;code&gt;__init__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Так случилось, что у MRO ровно один предмет - база. Таким образом, вы действительно делаете то же самое, но в более хорошем смысле с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (особенно, если позже вы получаете множественное наследование).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ad67f311c731daa8ad267b6d0a11ac4c75118fa" translate="yes" xml:space="preserve">
          <source>This is &lt;em&gt;completely&lt;/em&gt; wrong. &lt;code&gt;super&lt;/code&gt; lets us look up the next parent in the MRO (see the first section of this answer) for child classes. If you tell &lt;code&gt;super&lt;/code&gt; we're in the child instance's method, it will then lookup the next method in line (probably this one) resulting in recursion, probably causing a logical failure (in the answerer's example, it does) or a &lt;code&gt;RuntimeError&lt;/code&gt; when the recursion depth is exceeded.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;совершенно&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; неправильно. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; позволяет нам искать следующего родителя в MRO (см. первый раздел этого ответа) для дочерних классов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы скажете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; что мы в методе дочернего экземпляра, он будет искать следующий метод в строке (вероятно, этот), что приведет к рекурсии, вероятно, вызовет логический сбой (в примере с ответчиком, это так) или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;RuntimeError&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; когда глубина рекурсии превышена.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a02d639fb189fe9aaedd80d36e85b997afe1ce9b" translate="yes" xml:space="preserve">
          <source>Understanding Python super() with __init__() methods</source>
          <target state="translated">Понимание Python super()с помощью методов __init__()</target>
        </trans-unit>
        <trans-unit id="fd23c57c51d5b0bf648f12dd6739eb32afaa90bc" translate="yes" xml:space="preserve">
          <source>When I create a &lt;code&gt;Square&lt;/code&gt; using &lt;code&gt;mSquare = Square('a', 10,10)&lt;/code&gt;, Python calls the constructor for &lt;code&gt;Rectangle&lt;/code&gt; because I haven't given &lt;code&gt;Square&lt;/code&gt; its own constructor. However, in the constructor for &lt;code&gt;Rectangle&lt;/code&gt;, the call &lt;code&gt;super(self.__class__,self)&lt;/code&gt; is going to return the superclass of &lt;code&gt;mSquare&lt;/code&gt;, so it calls the constructor for &lt;code&gt;Rectangle&lt;/code&gt; again. This is how the infinite loop happens, as was mentioned by @S_C. In this case, when I run &lt;code&gt;super(...).__init__()&lt;/code&gt; I am calling the constructor for &lt;code&gt;Rectangle&lt;/code&gt; but since I give it no arguments, I will get an error.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда я создаю &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Square&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mSquare = Square('a', 10,10)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , Python вызывает конструктор для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Rectangle&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что я не дал &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Square&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; свой собственный конструктор. Однако в конструкторе для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Rectangle&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super(self.__class__,self)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вернет суперкласс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;mSquare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому он &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;снова &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вызывает конструктор для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Rectangle&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Вот как происходит бесконечный цикл, как было упомянуто @S_C. В этом случае, когда я запускаю &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super(...).__init__()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; я вызываю конструктор для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Rectangle&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; но, поскольку я не даю ему аргументов, я получу ошибку.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cde4744825e7e84a1b8198b65769881ad4e9dbb7" translate="yes" xml:space="preserve">
          <source>Without super, you are limited in your ability to use multiple inheritance:</source>
          <target state="translated">Без супер,вы ограничены в возможности использования множественного наследования:</target>
        </trans-unit>
        <trans-unit id="509a354e43247d3a90534a7d2167805abbd62537" translate="yes" xml:space="preserve">
          <source>Written a little more like native Python:</source>
          <target state="translated">Написано больше похоже на родной Питон:</target>
        </trans-unit>
        <trans-unit id="5b0fa24c2bd9b59ace06430f7547a06122f05c72" translate="yes" xml:space="preserve">
          <source>You have inserted &lt;code&gt;Mixin&lt;/code&gt; in between &lt;code&gt;ChildB&lt;/code&gt; and &lt;code&gt;Base&lt;/code&gt;. And you can take advantage of it with &lt;code&gt;super()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы вставили &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Mixin&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; между &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildB&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Base&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И вы можете воспользоваться этим с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="051f61a5e090c4143861ad401dc852d6833fe2f3" translate="yes" xml:space="preserve">
          <source>gets into infinite recursion.</source>
          <target state="translated">попадает в бесконечную рекурсию.</target>
        </trans-unit>
        <trans-unit id="cf8b646f8f800e8bea17e956b9ddc27f0224fb15" translate="yes" xml:space="preserve">
          <source>super() lets you avoid referring to the base class explicitly, which can be nice. . But the main advantage comes with multiple inheritance, where all sorts of fun stuff can happen. See the standard docs on super if you haven't already.</source>
          <target state="translated">super()позволяет избежать явного обращения к базовому классу,что может быть приятно...Но главное преимущество заключается в множественном наследовании,где могут происходить всевозможные забавные вещи.Смотрите стандартные документы на супер,если вы еще этого не сделали.</target>
        </trans-unit>
        <trans-unit id="c49f58ba362f4f30464f090b793e0b578153a1d1" translate="yes" xml:space="preserve">
          <source>then &lt;strong&gt;&lt;code&gt;Base&lt;/code&gt; is no longer the parent of &lt;code&gt;ChildB&lt;/code&gt;&lt;/strong&gt; for &lt;code&gt;ChildC&lt;/code&gt; instances. Now &lt;code&gt;super(ChildB, self)&lt;/code&gt; will point to &lt;code&gt;Mixin&lt;/code&gt; if &lt;code&gt;self&lt;/code&gt; is a &lt;code&gt;ChildC&lt;/code&gt; instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;тогда &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;Base&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; больше не является родителем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildB&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;экземпляров &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildC&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь &lt;/font&gt;&lt;/font&gt; &lt;code&gt;super(ChildB, self)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет указывать на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Mixin&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;экземпляром &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ChildC&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc6d1365e74eeffa3b579826e7726f0e6232cda9" translate="yes" xml:space="preserve">
          <source>to make your call, which is concise and does not require you to reference the parent OR class names explicitly, which can be handy. I just want to add that for Python 2.7 or under, it is possible to get this name-insensitive behaviour by writing &lt;code&gt;self.__class__&lt;/code&gt; instead of the class name, i.e.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сделать ваш вызов, который является кратким и не требует от вас явной ссылки на имена родительских ИЛИ классов, что может быть удобно. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я просто хочу добавить, что для Python 2.7 или ниже, возможно получить это нечувствительное к имени поведение, написав &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self.__class__&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вместо имени класса, т.е.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70bf8e981045e21a5186d16716649089997ddf70" translate="yes" xml:space="preserve">
          <source>works as expected</source>
          <target state="translated">выполняемые работы</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
