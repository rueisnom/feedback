<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/5767325">
    <body>
      <group id="5767325">
        <trans-unit id="0c26d1335bfdb0a9a870062ffeefc2e30e985324" translate="yes" xml:space="preserve">
          <source>(originally posted at &lt;a href=&quot;https://flaviocopes.com/how-to-remove-item-from-array/&quot;&gt;https://flaviocopes.com/how-to-remove-item-from-array/&lt;/a&gt;)</source>
          <target state="translated">(первоначально размещено на &lt;a href=&quot;https://flaviocopes.com/how-to-remove-item-from-array/&quot;&gt;https://flaviocopes.com/how-to-remove-item-from-array/&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="20c7a03b4b677a239898b7a143f487b7ce5a289d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://underscorejs.org/#without&quot;&gt;Underscore.js&lt;/a&gt; can be used to solve issues with multiple browsers. It uses in-build browser methods if present. If they are absent like in the case of older Internet&amp;nbsp;Explorer versions it uses its own custom methods.</source>
          <target state="translated">&lt;a href=&quot;http://underscorejs.org/#without&quot;&gt;Underscore.js&lt;/a&gt; можно использовать для решения проблем с несколькими браузерами. Он использует встроенные методы браузера, если таковые имеются. Если они отсутствуют, как в случае более старых версий Internet Explorer, он использует свои собственные пользовательские методы.</target>
        </trans-unit>
        <trans-unit id="c79ad5441320844b76631a15e17f3556c09229fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/zykadelic/5069236&quot;&gt;This gist here&lt;/a&gt; will solve your problem, and also deletes all occurrences of the argument instead of just 1 (or a specified value).</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/zykadelic/5069236&quot;&gt;Эта суть здесь&lt;/a&gt; решит вашу проблему, а также удалит все вхождения аргумента, а не только 1 (или указанное значение).</target>
        </trans-unit>
        <trans-unit id="611f858aa14bf07213924f276e7edb39ab092c59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice()&lt;/code&gt; creates a new array with the indexes it receives. We simply create a new array, from start to the index we want to remove, and concatenate another array from the first position following the one we removed to the end of the array.</source>
          <target state="translated">&lt;code&gt;slice()&lt;/code&gt; создает новый массив с индексами, которые он получает. Мы просто создаем новый массив от начала до индекса, который мы хотим удалить, и объединяем другой массив с первой позиции, следующей за той, которую мы удалили, до конца массива.</target>
        </trans-unit>
        <trans-unit id="ab82a2126411b9a66d7a7c357ca0f03f0c8a83de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;splice()&lt;/code&gt; (not to be confused with &lt;code&gt;slice()&lt;/code&gt;) mutates the original array, and should be avoided.</source>
          <target state="translated">&lt;code&gt;splice()&lt;/code&gt; (не путать с &lt;code&gt;slice()&lt;/code&gt; ) изменяет исходный массив, и его следует избегать.</target>
        </trans-unit>
        <trans-unit id="7a91b31039db5af6a19da64305b8acb0cdd87060" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt; : If &quot;stringToRemoveFromArray&quot; is not located your in array, this will remove last element of array.</source>
          <target state="translated">&lt;em&gt;ПРИМЕЧАНИЕ&lt;/em&gt; . Если строка &amp;laquo;stringToRemoveFromArray&amp;raquo; не находится в массиве, это приведет к удалению последнего элемента массива.</target>
        </trans-unit>
        <trans-unit id="892178def7455cb09728ee3cb3fb0028d5065df3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;indexof&lt;/em&gt; is approximately 10x slower than &lt;em&gt;move&lt;/em&gt;. Even if improved by removing the call to &lt;code&gt;indexOf&lt;/code&gt; in &lt;em&gt;splice&lt;/em&gt; it performs much worse than &lt;em&gt;move&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;indexof&lt;/em&gt; примерно в 10 раз медленнее, чем &lt;em&gt;двигаться&lt;/em&gt; . Даже если его улучшить, удалив вызов &lt;code&gt;indexOf&lt;/code&gt; в &lt;em&gt;splice,&lt;/em&gt; он работает намного хуже, чем &lt;em&gt;move&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8988123bae865b1300ce747e2d3850a0d9f80957" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stringToRemoveFromArray&lt;/em&gt; : the string you want removed and 1 is the amount of elements you want to remove.</source>
          <target state="translated">&lt;em&gt;stringToRemoveFromArray&lt;/em&gt; : строка, которую вы хотите удалить, а 1 - это количество элементов, которые вы хотите удалить.</target>
        </trans-unit>
        <trans-unit id="5d22c8d0967243a99bfdfa8445901cf449cae21f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;theArray&lt;/em&gt; : the array you want to remove something particular from</source>
          <target state="translated">&lt;em&gt;theArray&lt;/em&gt; : массив, из которого вы хотите удалить что-то конкретное</target>
        </trans-unit>
        <trans-unit id="74393367bc2c5b71b2d83967b6fab3e785a72270" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6 &amp;amp; without mutation:  (October 2016)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ES6 &amp;amp; без мутации: (октябрь 2016 г.)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28bcb5a317964f025eef45656b431ea3cf298091" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Find and move (move):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Найти и переместить (переместить):&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="076310371e6397adb469f1848e43527347fb1f5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hint&lt;/strong&gt;: please use an arrow function for filter callback unless you will get an empty array.</source>
          <target state="translated">&lt;strong&gt;Подсказка&lt;/strong&gt; : пожалуйста, используйте функцию стрелки для обратного вызова фильтра, если вы не получите пустой массив.</target>
        </trans-unit>
        <trans-unit id="609b01c38b98b33ae1916781ecc012571ca8c1d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT&lt;/strong&gt; &quot;array.includes(...)&quot; function is not supported in Internet&amp;nbsp;Explorer at all, Chrome before 47 version, Firefox before 43 version, Safari before 9 version, and Edge before 14 version so &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Polyfill&quot;&gt;&lt;strong&gt;here is polyfill from Mozilla&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ВАЖНО!&lt;/strong&gt; Функция &amp;laquo;array.includes (...)&amp;raquo; вообще не поддерживается в Internet Explorer, Chrome до 47 версии, Firefox до 43 версии, Safari до 9 версии и Edge до 14 версии, так что &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Polyfill&quot;&gt;&lt;strong&gt;здесь есть polyfill из Mozilla&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9de13012f59ad740527b2d1c338c09d2fa7a0e37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT&lt;/strong&gt; ECMAScript&amp;nbsp;6 &quot;() =&amp;gt; {}&quot; arrow function syntax is not supported in Internet&amp;nbsp;Explorer at all, Chrome before 45 version, Firefox before 22 version, and Safari before 10 version. To use ECMAScript&amp;nbsp;6 syntax in old browsers you can use &lt;a href=&quot;http://babeljs.io&quot;&gt;BabelJS&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;ВАЖНО&lt;/strong&gt; ECMAScript 6 &quot;() =&amp;gt; {}&quot; Синтаксис функции стрелок вообще не поддерживается в Internet Explorer, Chrome до 45 версии, Firefox до 22 версии и Safari до 10 версии. Для использования синтаксиса ECMAScript 6 в старых браузерах вы можете использовать &lt;a href=&quot;http://babeljs.io&quot;&gt;BabelJS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88c307e9733bc20de3106e3cee5b55ca39bd7c72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; it will update the given array, and return the affected rows.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ:&lt;/strong&gt; он обновит данный массив и вернет затронутые строки.</target>
        </trans-unit>
        <trans-unit id="deeb6d90d8ca244318bf1c9f0eb580d9609c129f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OK,&lt;/strong&gt; for example you have the array below:</source>
          <target state="translated">&lt;strong&gt;ОК,&lt;/strong&gt; например, у вас есть массив ниже:</target>
        </trans-unit>
        <trans-unit id="537bd903ff4c8e8f4da77846c6c743b57e4c6bea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prototype method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Метод прототипа&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2a6eb120ac5d954b7aa47baca4f35f487d47fe8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reference&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reference&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eee1c67bc9de7a8138d0f79bc463c5e056713e42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Removing a particular element/string from an array can be done in a one-liner:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удаление определенного элемента / строки из массива может быть сделано в одну строку:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fe3363b4b4ec9ef2c31a15f451244a7adfb38f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Results for array with 1.000.000 elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Результаты для массива с 1.000.000 элементов&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b16b2cedffbc2b7501c47a182bc43dca4a810f23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Results for array with 10 elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Результаты для массива из 10 элементов&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4f9f56e9b68e077ca52dc3c48df130009f98852" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Run-times on nodejs for array with 1000 elements (average over 10000 runs):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Время выполнения на nodejs для массива с 1000 элементов (в среднем более 10000 запусков):&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="060b6b12ebe76d9863043cfb834041f940f23a02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stand-alone function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Автономная функция&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e954dff295697b281cc36c09cba48ef320dd588" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Try it yourself in BabelJS :)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Попробуйте сами в BabelJS :)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b6578257f4bc0dd640490f50dead6b466dd6e87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; This method is recommended only if you cannot use ECMAScript 2015 (formerly known as ES6). If you can use it, other answers here provide much neater implementations.</source>
          <target state="translated">&lt;strong&gt;Обновление:&lt;/strong&gt; этот метод рекомендуется, только если вы не можете использовать ECMAScript 2015 (ранее известный как ES6). Если вы можете использовать это, другие ответы здесь обеспечивают намного более аккуратные реализации.</target>
        </trans-unit>
        <trans-unit id="8eae0c2fd6aa8f39724e972da8dbfcc4b0341cb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use &lt;code&gt;indexOf&lt;/code&gt; and &lt;code&gt;splice&lt;/code&gt; (indexof):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Используйте &lt;code&gt;indexOf&lt;/code&gt; и &lt;code&gt;splice&lt;/code&gt; (indexof):&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d1fbe33957ad7bbde5209e065896287f2cb3d27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use only &lt;code&gt;splice&lt;/code&gt; (splice):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Использовать только &lt;code&gt;splice&lt;/code&gt; (splice):&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdeffaeb0c1e585a81d090320b9ab7016c324272" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;delete&lt;/strong&gt;: &lt;code&gt;delete anArray[index];&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;delete&lt;/strong&gt; : &lt;code&gt;delete anArray[index];&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53ba754b3525a6a5261703a386db52a68312485f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;indexOf&lt;/strong&gt; :</source>
          <target state="translated">&lt;strong&gt;indexOf&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="644952719b332e9874e9cc1233c36f266cd932ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;splice()&lt;/strong&gt;: &lt;code&gt;anArray.splice(index, 1);&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;splice ()&lt;/strong&gt; : &lt;code&gt;anArray.splice(index, 1);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83bfc39e9a37dd6b6117105209aeac8ab281531a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;splice&lt;/strong&gt; :</source>
          <target state="translated">&lt;strong&gt;сращивание&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="c36e3a30f2d6a32cd5d72b825bdbbe142dde1e5e" translate="yes" xml:space="preserve">
          <source>A friend was having issues in &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;8&lt;/a&gt; and showed me what he did. I told him it was wrong, and he told me he got the answer here. The current top answer will not work in all browsers (Internet&amp;nbsp;Explorer&amp;nbsp;8 for example), and it will only remove the first occurrence of the item.</source>
          <target state="translated">У друга были проблемы в &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_8&quot;&gt;Internet Explorer 8&lt;/a&gt; и он показал мне, что он сделал. Я сказал ему, что это неправильно, и он сказал мне, что получил ответ здесь. Текущий верхний ответ не будет работать во всех браузерах (например, Internet Explorer 8), и он будет удалять только первое вхождение элемента.</target>
        </trans-unit>
        <trans-unit id="5758b12998637b11f8929c6f80e63cd2fdb0c5dd" translate="yes" xml:space="preserve">
          <source>A more modern, &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ECMAScript 2015&lt;/a&gt; (formerly known as Harmony or ES&amp;nbsp;6) approach. Given:</source>
          <target state="translated">Более современный подход &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ECMAScript 2015&lt;/a&gt; (ранее известный как Harmony или ES 6). Дано:</target>
        </trans-unit>
        <trans-unit id="f0b341371c6565d7f795ca026bfdd9eab34d1aac" translate="yes" xml:space="preserve">
          <source>A simple example to remove elements from array (from the website):</source>
          <target state="translated">Простой пример удаления элементов из массива (с сайта):</target>
        </trans-unit>
        <trans-unit id="c2e29fc81b754b51a7bd4216b9db9005b928d64e" translate="yes" xml:space="preserve">
          <source>All the method described &lt;strong&gt;do not mutate the original array&lt;/strong&gt;, and instead create a new one.</source>
          <target state="translated">Все описанные методы &lt;strong&gt;не изменяют исходный массив&lt;/strong&gt; , а создают новый.</target>
        </trans-unit>
        <trans-unit id="9b142d58affd0fb34a0888407fb2180dddcd912a" translate="yes" xml:space="preserve">
          <source>Also there are third-party libraries which do help you to do this, like Lodash or Underscore. For more information, look at lodash _.pull, _.pullAt or _.without.</source>
          <target state="translated">Также есть сторонние библиотеки,которые помогают вам в этом,такие как Lodash или Underscore.Для получения дополнительной информации смотрите на lodash _.pull,_.pullAt или _.without.</target>
        </trans-unit>
        <trans-unit id="00717cffb29a457925f076b9a416f04196087b6a" translate="yes" xml:space="preserve">
          <source>An additional advantage of this method is that you can remove multiple items</source>
          <target state="translated">Дополнительным преимуществом этого метода является то,что вы можете удалить несколько элементов</target>
        </trans-unit>
        <trans-unit id="8ee0b0a58a96e032a63a2d3d111c5ac52a5dcd76" translate="yes" xml:space="preserve">
          <source>And if you don't know the index of the item, you can use &lt;code&gt;array.indexOf(item)&lt;/code&gt; to get it (in a &lt;code&gt;if()&lt;/code&gt; to get one item or in a &lt;code&gt;while()&lt;/code&gt; to get all of them). &lt;code&gt;array.indexOf(item)&lt;/code&gt; returns either the index or -1 if not found.&amp;nbsp;</source>
          <target state="translated">И если вы не знаете индекс элемента, вы можете использовать &lt;code&gt;array.indexOf(item)&lt;/code&gt; чтобы получить его (в &lt;code&gt;if()&lt;/code&gt; чтобы получить один элемент, или в &lt;code&gt;while()&lt;/code&gt; чтобы получить их все). &lt;code&gt;array.indexOf(item)&lt;/code&gt; возвращает индекс или -1, если не найден.</target>
        </trans-unit>
        <trans-unit id="270eff8f3ba7dc2ba8c56178ef7042dc932e6f85" translate="yes" xml:space="preserve">
          <source>And if you need the value of that item, you can just store the returned array's element:</source>
          <target state="translated">А если вам нужно значение этого элемента,то вы можете просто сохранить элемент возвращаемого массива:</target>
        </trans-unit>
        <trans-unit id="7ebe39c21a8b58a31651c3a1906f84f5a963136b" translate="yes" xml:space="preserve">
          <source>And we want to delete number 4. You can simply use the below code:</source>
          <target state="translated">И мы хотим удалить номер 4.Вы можете просто использовать приведенный ниже код:</target>
        </trans-unit>
        <trans-unit id="afed19ab01cf9d1460611647f16032e1841d5acd" translate="yes" xml:space="preserve">
          <source>Array.prototype.includes</source>
          <target state="translated">Array.prototype.includes</target>
        </trans-unit>
        <trans-unit id="d205412e1013ba19f48e0e081ee7d15df8b656a4" translate="yes" xml:space="preserve">
          <source>Avoid mutating the original array</source>
          <target state="translated">Избегайте мутации исходного массива</target>
        </trans-unit>
        <trans-unit id="7a4a66d748818d54d453c33cbac1fc30907786df" translate="yes" xml:space="preserve">
          <source>Based on all the answers which were mainly correct and taking into account the best practices suggested (especially not using Array.prototype directly), I came up with the below code:</source>
          <target state="translated">Основываясь на всех ответах,которые в основном были правильными,и принимая во внимание лучшие из предложенных практик (особенно не используя Array.prototype напрямую),я придумал код,приведенный ниже:</target>
        </trans-unit>
        <trans-unit id="752d68ce8018e6b7ad5769b04915aea42d6ee027" translate="yes" xml:space="preserve">
          <source>Be careful when you use delete for an array. It is good for deleting attributes of objects, but not so good for arrays. It is better to use &lt;code&gt;splice&lt;/code&gt; for arrays.</source>
          <target state="translated">Будьте осторожны, когда вы используете delete для массива. Это хорошо для удаления атрибутов объектов, но не так хорошо для массивов. Лучше использовать &lt;code&gt;splice&lt;/code&gt; для массивов.</target>
        </trans-unit>
        <trans-unit id="67c0a1560b00da0823669062c515c2265a5ee5ef" translate="yes" xml:space="preserve">
          <source>But how about if you have the below array instead with a few [5]s in the array?</source>
          <target state="translated">Но как насчет того,чтобы вместо нескольких [5]в массиве было несколько [5]массивов?</target>
        </trans-unit>
        <trans-unit id="636238f4494666df4527913fe2f601c1ca964feb" translate="yes" xml:space="preserve">
          <source>But if you want to delete a special item like &lt;code&gt;3&lt;/code&gt; and you don't know its index, do like below:</source>
          <target state="translated">Но если вы хотите удалить специальный элемент, такой как &lt;code&gt;3&lt;/code&gt; , и не знаете его индекс, сделайте следующее:</target>
        </trans-unit>
        <trans-unit id="9a3d31e2d9a524e74f6a3ee7975b24b4bf90ccd0" translate="yes" xml:space="preserve">
          <source>But the main reason I am posting this is to warn users against the alternative implementation suggested in the comments on that page (Dec 14, 2007):</source>
          <target state="translated">Но основная причина,по которой я размещаю эту информацию,заключается в том,чтобы предостеречь пользователей от альтернативной реализации,предложенной в комментариях на этой странице (14 декабря 2007 г.):</target>
        </trans-unit>
        <trans-unit id="cb87061cb61c9dbe3608367c7bfb2df479657ca6" translate="yes" xml:space="preserve">
          <source>By index</source>
          <target state="translated">По индексу</target>
        </trans-unit>
        <trans-unit id="6ee757280debcea7c9b487d87c4330ed2ff91427" translate="yes" xml:space="preserve">
          <source>By value</source>
          <target state="translated">По значению</target>
        </trans-unit>
        <trans-unit id="4808a232c259d694412a4e631f80e6995e0208a5" translate="yes" xml:space="preserve">
          <source>Call this function</source>
          <target state="translated">Вызвать эту функцию</target>
        </trans-unit>
        <trans-unit id="5ce779ea8f657c1e9d48bc04cbf031ecd7bc9c0f" translate="yes" xml:space="preserve">
          <source>Check out this code. It works in every &lt;strong&gt;major browser&lt;/strong&gt;.</source>
          <target state="translated">Проверьте этот код. Это работает в любом &lt;strong&gt;крупном браузере&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a642c75da074a27c74e5e37cede4cdbecddc6d99" translate="yes" xml:space="preserve">
          <source>Comparison for browsers: Chrome v78.0.0, Safari v13.0.4, and Firefox v71.0.0</source>
          <target state="translated">Сравнение для браузеров:Chrome v78.0.0,Safari v13.0.4 и Firefox v71.0.0.</target>
        </trans-unit>
        <trans-unit id="bf1be2b7ad07bae2fe92475d10173eb638774def" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definition</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="102af0498fc1a0fcc3c38d1f6e784f8f1d5131b4" translate="yes" xml:space="preserve">
          <source>Do it immutable (original array stay unchanged)</source>
          <target state="translated">Сделайте это неизменным (исходный массив остается неизменным).</target>
        </trans-unit>
        <trans-unit id="b0ef19e663785033e9ef614ab9b9239c8b35f5b5" translate="yes" xml:space="preserve">
          <source>Do it simple, intuitive and explicit (&lt;a href=&quot;https://en.wikipedia.org/wiki/Occam%27s_razor&quot;&gt;Occam's razor&lt;/a&gt;)</source>
          <target state="translated">Делайте это просто, интуитивно понятно и явно ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Occam%27s_razor&quot;&gt;бритва Оккама&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="3490e6ac5ef084f31168e6d30889da48f49ffa83" translate="yes" xml:space="preserve">
          <source>Do it with standard JavaScript functions, if your browser doesn't support them - &lt;strong&gt;use polyfill&lt;/strong&gt;</source>
          <target state="translated">Сделайте это с помощью стандартных функций JavaScript, если ваш браузер их не поддерживает - &lt;strong&gt;используйте polyfill&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d166af755baa9f234415014c48b3ed88460e376c" translate="yes" xml:space="preserve">
          <source>E.g. if you have an object with an Id field and you want the object removed from an array:</source>
          <target state="translated">Например,если у вас есть объект с полем Id и вы хотите,чтобы этот объект был удален из массива:</target>
        </trans-unit>
        <trans-unit id="eb211e7a732a17308be1f309bdff241d6a90881b" translate="yes" xml:space="preserve">
          <source>Edited on 2016 October</source>
          <target state="translated">Отредактировано в 2016 г.Октябрь</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="30b0e12c2c94f47b68fa5ccb20476a6b70623235" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;index&lt;/code&gt; of the array element you want to remove using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf&quot;&gt;&lt;code&gt;indexOf&lt;/code&gt;&lt;/a&gt;, and then remove that index with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt;&lt;code&gt;splice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Найдите &lt;code&gt;index&lt;/code&gt; элемента массива, который вы хотите удалить, используя &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf&quot;&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;/a&gt; , а затем удалите этот индекс с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt; &lt;code&gt;splice&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf873823acef1af3ee771a26f0cdf28493cf8f42" translate="yes" xml:space="preserve">
          <source>For further understanding you can read the MDN documentation on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;Array.filter&lt;/a&gt;.</source>
          <target state="translated">Для дальнейшего понимания вы можете прочитать документацию MDN на &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;Array.filter&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f2700ad4c98cd8039e72339d830fef9f1ae90bb" translate="yes" xml:space="preserve">
          <source>Functional composition</source>
          <target state="translated">Функциональный состав</target>
        </trans-unit>
        <trans-unit id="be5d89754199fe4effe4dd3576c2f17fa6dcc9b8" translate="yes" xml:space="preserve">
          <source>Here are a few ways to &lt;strong&gt;remove an item from an array using JavaScript&lt;/strong&gt;.</source>
          <target state="translated">Вот несколько способов &lt;strong&gt;удалить элемент из массива с помощью JavaScript&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="082f68197b52d18635b26ed39d4617bf4ee21c9d" translate="yes" xml:space="preserve">
          <source>How can I remove a specific item from an array</source>
          <target state="translated">Как удалить конкретный элемент из массива</target>
        </trans-unit>
        <trans-unit id="8e090d332d9dabde6e435eafdb66e7b93d430d7f" translate="yes" xml:space="preserve">
          <source>How to use:</source>
          <target state="translated">Как пользоваться:</target>
        </trans-unit>
        <trans-unit id="5b4032277da1069acfbec32fadd887ce6ff0eb2e" translate="yes" xml:space="preserve">
          <source>I am currently writing a blog post in which I have benchmarked several solutions for Array without problem and compared the time it takes to run. I will update this answer with the link once I finish that post. Just to let you know, I have compared the above against lodash's without and in case the browser supports &lt;code&gt;Map&lt;/code&gt;, it beats lodash! Notice that I am not using &lt;code&gt;Array.prototype.indexOf&lt;/code&gt; or &lt;code&gt;Array.prototype.includes&lt;/code&gt; as wrapping the exlcudeValues in a &lt;code&gt;Map&lt;/code&gt; or &lt;code&gt;Object&lt;/code&gt; makes querying faster!</source>
          <target state="translated">В настоящее время я пишу сообщение в блоге, в котором проверил несколько решений для Array без проблем и сравнил время, необходимое для запуска. Я дополню этот ответ ссылкой, как только закончу этот пост. Просто чтобы вы знали, я сравнил вышеупомянутое с lodash без, и если браузер поддерживает &lt;code&gt;Map&lt;/code&gt; , он превосходит lodash! Обратите внимание, что я не использую &lt;code&gt;Array.prototype.indexOf&lt;/code&gt; или &lt;code&gt;Array.prototype.includes&lt;/code&gt; поскольку перенос exlcudeValues ​​на &lt;code&gt;Map&lt;/code&gt; или &lt;code&gt;Object&lt;/code&gt; ускоряет выполнение запросов!</target>
        </trans-unit>
        <trans-unit id="927b786a9b3b8d90436a3a819d7992491d63fccb" translate="yes" xml:space="preserve">
          <source>I don't know how you are expecting &lt;code&gt;array.remove(int)&lt;/code&gt; to behave. There are three possibilities I can think of that you might want.</source>
          <target state="translated">Я не знаю, как вы ожидаете, что &lt;code&gt;array.remove(int)&lt;/code&gt; будет себя вести. Я могу подумать о трех возможностях, которые вы можете пожелать.</target>
        </trans-unit>
        <trans-unit id="2fb2a8dc2409ddc56e72d778923d524f41705f2b" translate="yes" xml:space="preserve">
          <source>I have an array of numbers, and I'm using the &lt;code&gt;.push()&lt;/code&gt; method to add elements to it.</source>
          <target state="translated">У меня есть массив чисел, и я использую метод &lt;code&gt;.push()&lt;/code&gt; чтобы добавить элементы к нему.</target>
        </trans-unit>
        <trans-unit id="6ec608995ebf679f514ce2f47d8154853d69f60d" translate="yes" xml:space="preserve">
          <source>I have to use &lt;em&gt;core&lt;/em&gt; JavaScript - frameworks are not allowed.</source>
          <target state="translated">Я должен использовать &lt;em&gt;основной&lt;/em&gt; JavaScript - рамки не допускаются.</target>
        </trans-unit>
        <trans-unit id="b91ef97accd928c1d49c2eafd10e5535d9f2567d" translate="yes" xml:space="preserve">
          <source>I know there are a lot of answers already, but many of them seem to over complicate the problem.  Here is a simple, recursive way of removing all instances of a key - calls self until index isn't found.  Yes, it only works in browsers with &lt;code&gt;indexOf&lt;/code&gt;, but it's simple and can be easily polyfilled.</source>
          <target state="translated">Я знаю, что ответов уже много, но многие из них, кажется, слишком усложняют проблему. Вот простой, рекурсивный способ удаления всех экземпляров ключа - вызывает self, пока индекс не будет найден. Да, он работает только в браузерах с &lt;code&gt;indexOf&lt;/code&gt; , но он прост и может быть легко заполнен.</target>
        </trans-unit>
        <trans-unit id="99f8ef90039d331cf04a0245f8741bad896c1816" translate="yes" xml:space="preserve">
          <source>I want to answer based on &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ECMAScript&amp;nbsp;6&lt;/a&gt;. Assume, you have an array like below:</source>
          <target state="translated">Я хочу ответить на основе &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ECMAScript 6&lt;/a&gt; . Предположим, у вас есть массив, как показано ниже:</target>
        </trans-unit>
        <trans-unit id="f22753c9c42b1a1d3f482dec1414a40ee592735c" translate="yes" xml:space="preserve">
          <source>I'm pretty new to JavaScript and needed this functionality. I merely wrote this:</source>
          <target state="translated">Я довольно новичок в JavaScript и мне нужна была эта функциональность.Я просто написал это:</target>
        </trans-unit>
        <trans-unit id="1181f5b3e98c311ad4f68627ced64b09d807b95c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://github.com/tc39/proposal-bind-operator&quot;&gt;&quot;This-Binding Syntax&quot;&lt;/a&gt; proposal is ever accepted, you'll be able to do this:</source>
          <target state="translated">Если предложение &lt;a href=&quot;https://github.com/tc39/proposal-bind-operator&quot;&gt;&amp;laquo;Синтаксис This-Binding&amp;raquo;&lt;/a&gt; будет принято, вы сможете сделать это:</target>
        </trans-unit>
        <trans-unit id="fe98cb810962b5edccd9ad617768f8f2a4083258" translate="yes" xml:space="preserve">
          <source>If you are forced to use &lt;code&gt;delete&lt;/code&gt; for some reason, then you should use &lt;a href=&quot;https://stackoverflow.com/questions/9329446/for-each-over-an-array-in-javascript&quot;&gt;&lt;code&gt;for each&lt;/code&gt;&lt;/a&gt; loops when you need to loop through arrays. As the matter of fact, always avoid using indexed &lt;code&gt;for&lt;/code&gt; loops, if possible. That way the code would be more robust and less prone to problems with indexes.</source>
          <target state="translated">Если вы вынуждены использовать &lt;code&gt;delete&lt;/code&gt; по какой-либо причине, то вы должны использовать &lt;a href=&quot;https://stackoverflow.com/questions/9329446/for-each-over-an-array-in-javascript&quot;&gt; &lt;code&gt;for each&lt;/code&gt; &lt;/a&gt; цикла, когда вам нужно перебрать массивы. На самом деле, по возможности всегда избегайте использования индексированных циклов &lt;code&gt;for&lt;/code&gt; . Таким образом, код будет более устойчивым и менее подверженным проблемам с индексами.</target>
        </trans-unit>
        <trans-unit id="f3372c2f5ce756c0a85bf1ae13434ef583a0b420" translate="yes" xml:space="preserve">
          <source>If you are reusing this function, you write a reusable function which will be attached to the &lt;em&gt;native&lt;/em&gt; array function like below:</source>
          <target state="translated">Если вы повторно используете эту функцию, вы пишете повторно используемую функцию, которая будет прикреплена к &lt;em&gt;встроенной&lt;/em&gt; функции массива, как показано ниже:</target>
        </trans-unit>
        <trans-unit id="bc4f3d4d9d3fd7908808745b03af3822dc8c23e1" translate="yes" xml:space="preserve">
          <source>If you do want an empty slot, delete is fine:</source>
          <target state="translated">Если вы хотите пустой слот,удалите его:</target>
        </trans-unit>
        <trans-unit id="fbfd1cb87dd44cdccdafdf3698d6ea6358bfdbaa" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to extend a global object, you can do something like the following, instead:</source>
          <target state="translated">Если вы не хотите расширять глобальный объект, вместо этого вы можете сделать что-то вроде следующего:</target>
        </trans-unit>
        <trans-unit id="5942963f1ab27ee6bb5d5f5a0b74d4b5291141b2" translate="yes" xml:space="preserve">
          <source>If you don't, you should use the &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt;splice&lt;/a&gt; method:</source>
          <target state="translated">Если вы этого не сделаете, вы должны использовать метод соединения:</target>
        </trans-unit>
        <trans-unit id="9572aa6fb591d1ba9a758c5dcffa6d3d5f13f53f" translate="yes" xml:space="preserve">
          <source>If you have access to newer Ecmascript versions on your client's computers (WARNING, may not work on older stations):</source>
          <target state="translated">Если у вас есть доступ к новым версиям Ecmascript на компьютерах ваших клиентов (ПРЕДУПРЕЖДЕНИЕ,может не работать на старых станциях):</target>
        </trans-unit>
        <trans-unit id="7371d04296336bdc6cc86bc910a62bd92156f86f" translate="yes" xml:space="preserve">
          <source>If you have complex objects in the array you can use filters? 
In situations where $.inArray or array.splice is not as easy to use. Especially if the objects are perhaps shallow in the array.</source>
          <target state="translated">Если в массиве есть сложные объекты,можно ли использовать фильтры? В ситуациях,когда $.inArray или array.splice не так прост в использовании.Особенно,если объекты в массиве,возможно,неглубокие.</target>
        </trans-unit>
        <trans-unit id="03661e4b8eeedca39fe42a165e0ff1f205706501" translate="yes" xml:space="preserve">
          <source>If you just want to make the element at index &lt;code&gt;i&lt;/code&gt; no longer exist, but you don't want the indexes of the other elements to change:</source>
          <target state="translated">Если вы просто хотите сделать элемент с индексом, &lt;code&gt;i&lt;/code&gt; больше не существует, но вы не хотите, чтобы индексы других элементов изменились:</target>
        </trans-unit>
        <trans-unit id="6bebdca438b5d73432e1fa39809f57e0d61f8581" translate="yes" xml:space="preserve">
          <source>If you know the index of an item</source>
          <target state="translated">Если вы знаете индекс предмета</target>
        </trans-unit>
        <trans-unit id="10e357536eb6c14e8daa988c5e9c2549670b880b" translate="yes" xml:space="preserve">
          <source>If you know the value</source>
          <target state="translated">Если вы знаете значение</target>
        </trans-unit>
        <trans-unit id="4b30477bc084b9503454a9d63596c918f07bea32" translate="yes" xml:space="preserve">
          <source>If you want a new array with the deleted positions removed, you can always delete the specific element and filter out the array. It might need an extension of the &lt;a href=&quot;http://www.tutorialspoint.com/javascript/array_filter.htm&quot;&gt;array object&lt;/a&gt; for browsers that don't implement the filter method, but in the long term it's easier since all you do is this:</source>
          <target state="translated">Если вы хотите новый массив с удаленными удаленными позициями, вы всегда можете удалить определенный элемент и отфильтровать массив. Может потребоваться расширение &lt;a href=&quot;http://www.tutorialspoint.com/javascript/array_filter.htm&quot;&gt;объекта массива&lt;/a&gt; для браузеров, которые не реализуют метод фильтра, но в долгосрочной перспективе это проще, так как все, что вы делаете, это:</target>
        </trans-unit>
        <trans-unit id="f73177c0ed0f47b2292c8281cec1b30bcc003d73" translate="yes" xml:space="preserve">
          <source>If you want to delete at a special index like &lt;code&gt;2&lt;/code&gt;, write the below code:</source>
          <target state="translated">Если вы хотите удалить по специальному индексу, например, &lt;code&gt;2&lt;/code&gt; , напишите следующий код:</target>
        </trans-unit>
        <trans-unit id="2e5d1d8d84d892f7295a13a744e6685cc8e63876" translate="yes" xml:space="preserve">
          <source>If you want to multiple values. Example:- 1,7,8</source>
          <target state="translated">Если ты хочешь умножить значения.Пример:-1,7,8</target>
        </trans-unit>
        <trans-unit id="3a6a212fba01ffed8f6fc4267775768fbbb30bed" translate="yes" xml:space="preserve">
          <source>If you want to remove an array value in an array. Example: [3,4,5]</source>
          <target state="translated">Если вы хотите удалить значение массива в массиве.Пример:[3,4,5]</target>
        </trans-unit>
        <trans-unit id="8b23b0bad0c2ead983b02550bf037747cf944928" translate="yes" xml:space="preserve">
          <source>If you want to remove every element with value &lt;code&gt;number&lt;/code&gt; from the array:</source>
          <target state="translated">Если вы хотите удалить каждый элемент с &lt;code&gt;number&lt;/code&gt; значения из массива:</target>
        </trans-unit>
        <trans-unit id="11c7cad7fbca387926792a22255bc6f88a7d7f1d" translate="yes" xml:space="preserve">
          <source>In Chrome the &lt;code&gt;array.splice&lt;/code&gt; (C) is the fastest in-place solution (the &lt;code&gt;delete&lt;/code&gt; (C) is similar fast - but it left an empty slot in the array (so it does not perform a 'full remove')). The &lt;code&gt;array.slice-splice&lt;/code&gt; (H) is the fastest immutable solution. The slowest is &lt;code&gt;array.filter&lt;/code&gt; (D and E). You can perform the test on your machine &lt;a href=&quot;https://jsperf.com/big-array-remove-element&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">В Chrome &lt;code&gt;array.splice&lt;/code&gt; (C) - самое быстрое решение на месте ( &lt;code&gt;delete&lt;/code&gt; (C) очень быстро работает, но оставил пустую ячейку в массиве (поэтому он не выполняет &amp;laquo;полное удаление&amp;raquo;)). &lt;code&gt;array.slice-splice&lt;/code&gt; (H) - самое быстрое неизменное решение. Самым медленным является &lt;code&gt;array.filter&lt;/code&gt; (D и E). Вы можете выполнить тест на вашей машине &lt;a href=&quot;https://jsperf.com/big-array-remove-element&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="caf079bc0736886b51cf720bae37155f17dde8fc" translate="yes" xml:space="preserve">
          <source>In Chrome the &lt;code&gt;array.splice&lt;/code&gt; (C) is the fastest in-place solution. The &lt;code&gt;array.filter&lt;/code&gt; (D) is the fastest immutable solution. The slowest is &lt;code&gt;array.slice&lt;/code&gt; (F). You can perform the test on your machine &lt;a href=&quot;https://jsperf.com/small-array-remove-element&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">В Chrome &lt;code&gt;array.splice&lt;/code&gt; (C) является самым быстрым решением на месте. &lt;code&gt;array.filter&lt;/code&gt; (D) является самым быстрым неизменным решением. Самым медленным является &lt;code&gt;array.slice&lt;/code&gt; (F). Вы можете выполнить тест на вашей машине &lt;a href=&quot;https://jsperf.com/small-array-remove-element&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e50e0d2f98661e18f47697909df261e2562aca3b" translate="yes" xml:space="preserve">
          <source>In case you want to do it in some order, you can use &lt;code&gt;array.pop()&lt;/code&gt; for the last one or &lt;code&gt;array.shift()&lt;/code&gt; for the first one (and both return the value of the item too).</source>
          <target state="translated">Если вы хотите сделать это в некотором порядке, вы можете использовать &lt;code&gt;array.pop()&lt;/code&gt; для последнего или &lt;code&gt;array.shift()&lt;/code&gt; для первого (и оба возвращают значение элемента тоже).</target>
        </trans-unit>
        <trans-unit id="88d94bafb139b60e6ad0c18bca1523e5097fc204" translate="yes" xml:space="preserve">
          <source>In tests I remove middle element from the array in different ways. The &lt;strong&gt;A, C&lt;/strong&gt; solutions are in-place. The &lt;strong&gt;B, D, E, F, G, H&lt;/strong&gt; solutions are immutable.</source>
          <target state="translated">В тестах я удаляю средний элемент из массива разными способами. Решения &lt;strong&gt;A, C&lt;/strong&gt; на месте. Решения &lt;strong&gt;B, D, E, F, G, H&lt;/strong&gt; неизменны.</target>
        </trans-unit>
        <trans-unit id="fa2a957836e3e3e965443e00d5b8014f957fd2d7" translate="yes" xml:space="preserve">
          <source>In this case, one good option is to use &lt;code&gt;filter()&lt;/code&gt;, which offers a more &lt;em&gt;declarative&lt;/em&gt; approach:</source>
          <target state="translated">В этом случае один хороший вариант - использовать &lt;code&gt;filter()&lt;/code&gt; , который предлагает более &lt;em&gt;декларативный&lt;/em&gt; подход:</target>
        </trans-unit>
        <trans-unit id="498070503dedbcf580c4b4c58484bd91a1296236" translate="yes" xml:space="preserve">
          <source>In this code example I use &lt;strong&gt;&quot;array.filter(...)&quot;&lt;/strong&gt; function to remove unwanted items from an array. This function doesn't change the original array and creates a new one. If your browser doesn't support this function (e.g. Internet Explorer before version 9, or Firefox before version 1.5), consider using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Polyfill&quot;&gt;&lt;strong&gt;the filter polyfill from Mozilla&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">В этом примере кода я использую &lt;strong&gt;функцию &amp;laquo;array.filter (...)&amp;raquo;&lt;/strong&gt; для удаления ненужных элементов из массива. Эта функция не меняет исходный массив и создает новый. Если ваш браузер не поддерживает эту функцию (например, Internet Explorer до версии 9 или Firefox до версии 1.5), рассмотрите возможность использования &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter#Polyfill&quot;&gt;&lt;strong&gt;фильтра polyfill из Mozilla&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80818db9c412b0e73f689f5b35ec90056bf0f156" translate="yes" xml:space="preserve">
          <source>Includes supported browser is &lt;a href=&quot;https://www.w3schools.com/jsref/jsref_includes_array.asp&quot;&gt;link&lt;/a&gt;.</source>
          <target state="translated">Включает в себя поддерживаемый браузер по &lt;a href=&quot;https://www.w3schools.com/jsref/jsref_includes_array.asp&quot;&gt;ссылке&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3b566523b6d44597530fd44e674307786fd43f6" translate="yes" xml:space="preserve">
          <source>Is there a simple way to remove a specific element from an array?</source>
          <target state="translated">Существует ли простой способ удалить конкретный элемент из массива?</target>
        </trans-unit>
        <trans-unit id="6d9faccbff79e531cf75ea60dafd6931c055c065" translate="yes" xml:space="preserve">
          <source>It depends on whether you want to keep an empty spot or not.</source>
          <target state="translated">Это зависит от того,хотите ли вы сохранить пустое место или нет.</target>
        </trans-unit>
        <trans-unit id="686571bd0f8f4510d5be45242cdd7f21b7d25fae" translate="yes" xml:space="preserve">
          <source>It loops through the array backwards (since indices and length will change as items are removed) and removes the item if it's found. It works in all browsers.</source>
          <target state="translated">Он циклически проходит через массив в обратном направлении (т.к.при удалении элементов индексы и длина будут меняться)и удаляет элемент,если он найден.Это работает во всех браузерах.</target>
        </trans-unit>
        <trans-unit id="4f65363f7ff3162732e6955c472e3956fb50925b" translate="yes" xml:space="preserve">
          <source>It seems to work well at first, but through a painful process I discovered it fails when trying to remove the second to last element in an array. For example, if you have a 10-element array and you try to remove the 9th element with this:</source>
          <target state="translated">Похоже,что сначала это работало хорошо,но в результате болезненного процесса я обнаружил,что при попытке удалить от второго до последнего элемента массива,это не получается.Например,если у вас 10-элементный массив и вы пытаетесь удалить 9-й элемент этим:</target>
        </trans-unit>
        <trans-unit id="c5aa5f5ae0043ff28d03e1421f43352cc3a4915d" translate="yes" xml:space="preserve">
          <source>It should display &lt;code&gt;[1, 2, 3, 4, 6]&lt;/code&gt;.</source>
          <target state="translated">Должен отображаться &lt;code&gt;[1, 2, 3, 4, 6]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13c8f72d6490a322ee4ec3a3f6ba4f1da3965b80" translate="yes" xml:space="preserve">
          <source>Its always good practice to check if the element exists in your array first, before removing it.</source>
          <target state="translated">Всегда полезно сначала проверить,существует ли элемент в вашем массиве,прежде чем удалять его.</target>
        </trans-unit>
        <trans-unit id="eb92a3c06243ace55e68e74a8ad80c70a428be40" translate="yes" xml:space="preserve">
          <source>John Resig &lt;a href=&quot;http://ejohn.org/blog/javascript-array-remove/&quot;&gt;posted a good implementation&lt;/a&gt;:</source>
          <target state="translated">Джон Резиг &lt;a href=&quot;http://ejohn.org/blog/javascript-array-remove/&quot;&gt;опубликовал хорошую реализацию&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="83a8666e2fe0581a766f2f548db8c6082aad23b4" translate="yes" xml:space="preserve">
          <source>Keep in mind that when you use &lt;code&gt;delete&lt;/code&gt; for an array you could get wrong results for &lt;code&gt;anArray.length&lt;/code&gt;. In other words, &lt;code&gt;delete&lt;/code&gt; would remove the element, but it wouldn't update the value of length property.</source>
          <target state="translated">Имейте в виду, что когда вы используете &lt;code&gt;delete&lt;/code&gt; для массива, вы можете получить неправильные результаты для &lt;code&gt;anArray.length&lt;/code&gt; . Другими словами, &lt;code&gt;delete&lt;/code&gt; удалит элемент, но не обновит значение свойства length.</target>
        </trans-unit>
        <trans-unit id="7e90d8509520dead5bd5a5b859df180f1f691173" translate="yes" xml:space="preserve">
          <source>Let's find the simplest solution.</source>
          <target state="translated">Давайте найдем самое простое решение.</target>
        </trans-unit>
        <trans-unit id="4fe8642303776edd465667b801642d103c9ebf69" translate="yes" xml:space="preserve">
          <source>One method is to use &lt;code&gt;slice()&lt;/code&gt;:</source>
          <target state="translated">Одним из методов является использование &lt;code&gt;slice()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fa81114985626064cd037702c8d3a5410af20899" translate="yes" xml:space="preserve">
          <source>Output - As expected.
[&quot;item1&quot;, &quot;item1&quot;]</source>
          <target state="translated">Выход-как и ожидалось.[&quot;item1&quot;,&quot;item1&quot;]</target>
        </trans-unit>
        <trans-unit id="e05424a323bcb65461ca7f73ba902a8cd6e1aef2" translate="yes" xml:space="preserve">
          <source>Output :</source>
          <target state="translated">Выход :</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="1c6f860e82983c0e1d7308c9b028e952494b5b23" translate="yes" xml:space="preserve">
          <source>Remove ALL instances from an array</source>
          <target state="translated">Удалить ВСЕ экземпляры из массива</target>
        </trans-unit>
        <trans-unit id="dd345246f3a62eadb99621467548ed97cad3f9c8" translate="yes" xml:space="preserve">
          <source>Removing item (ECMA-262 Edition 5 code aka oldstyle JavaScript)</source>
          <target state="translated">Удаление элемента (код ECMA-262 Edition 5 aka oldstyle JavaScript)</target>
        </trans-unit>
        <trans-unit id="6021444c0ce03849355f32908527d14956560e4a" translate="yes" xml:space="preserve">
          <source>Removing item (ECMAScript 6 code)</source>
          <target state="translated">Удаление элемента (код ECMAScript 6)</target>
        </trans-unit>
        <trans-unit id="79698ecdbbb6691abfcc91f341416cfd3b919327" translate="yes" xml:space="preserve">
          <source>Removing multiple items</source>
          <target state="translated">Удаление нескольких элементов</target>
        </trans-unit>
        <trans-unit id="1391fc6121536c69a9066cd7dc9a5fb16d5ccc6f" translate="yes" xml:space="preserve">
          <source>Removing multiple items (ECMAScript&amp;nbsp;7 code)</source>
          <target state="translated">Удаление нескольких элементов (код ECMAScript 7)</target>
        </trans-unit>
        <trans-unit id="3c18435712685ddfeaed93ce198962c0c5f904ef" translate="yes" xml:space="preserve">
          <source>Removing multiple items (in the future, maybe)</source>
          <target state="translated">Удаление нескольких элементов (в будущем,возможно)</target>
        </trans-unit>
        <trans-unit id="ca50a9128b4f70d51a41612e2cbc3c50eca21198" translate="yes" xml:space="preserve">
          <source>Reviewing the above function, despite the fact that it works fine, I realised there could be some performance improvement. Also using ES6 instead of ES5 is a much better approach. To that end, this is the improved code:</source>
          <target state="translated">Рассматривая вышеприведенную функцию,несмотря на то,что она отлично работает,я понял,что может быть некоторое улучшение производительности.Также использование ES6 вместо ES5-гораздо лучший подход.С этой целью это и есть улучшенный код:</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">Показать фрагмент кода</target>
        </trans-unit>
        <trans-unit id="396e7262b5eaaaad4ec7050568c42ec2308bf565" translate="yes" xml:space="preserve">
          <source>Suppose you have an array, and you want to remove an item in position &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">Предположим, у вас есть массив, и вы хотите удалить элемент в позиции &lt;code&gt;i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d16064c8df6dfe7f81fca710dbc0a235aca8e2b7" translate="yes" xml:space="preserve">
          <source>Suppose you want to remove &lt;code&gt;5&lt;/code&gt; from the array, you can simply do it like this:</source>
          <target state="translated">Предположим, что вы хотите удалить &lt;code&gt;5&lt;/code&gt; из массива, вы можете просто сделать это так:</target>
        </trans-unit>
        <trans-unit id="bfaffadd71dc5fc67d907dab7b830f954260fa35" translate="yes" xml:space="preserve">
          <source>The conclusions</source>
          <target state="translated">Выводы</target>
        </trans-unit>
        <trans-unit id="d7904ee35e807fd3941ec5d6be346fc95b7844e0" translate="yes" xml:space="preserve">
          <source>The equivalent of something like -</source>
          <target state="translated">Эквивалент чего-то вроде...</target>
        </trans-unit>
        <trans-unit id="9e4b1951c4e95e36879f8b5fd3af791eea061e0b" translate="yes" xml:space="preserve">
          <source>The indexOf() command returns the first index at which a given element
  can be found in the array, or -1 if it is not present. This can be
  used along with splice() to search for an element and then remove it,
  even if you don&amp;rsquo;t know where it is in the array.</source>
          <target state="translated">Команда indexOf () возвращает первый индекс, по которому данный элемент может быть найден в массиве, или -1, если его нет. Это можно использовать вместе с splice () для поиска элемента, а затем удалить его, даже если вы не знаете, где он находится в массиве.</target>
        </trans-unit>
        <trans-unit id="a5c2d1fee1b47896b6980e235748f3e6548bf6c2" translate="yes" xml:space="preserve">
          <source>The second parameter of &lt;code&gt;splice&lt;/code&gt; is the number of elements to remove. Note that &lt;code&gt;splice&lt;/code&gt; modifies the array in place and returns a new array containing the elements that have been removed.</source>
          <target state="translated">Вторым параметром &lt;code&gt;splice&lt;/code&gt; является количество удаляемых элементов. Обратите внимание, что &lt;code&gt;splice&lt;/code&gt; изменяет массив на месте и возвращает новый массив, содержащий элементы, которые были удалены.</target>
        </trans-unit>
        <trans-unit id="bb6c0a0f03d89fc233f52358164cdf5afd892b2b" translate="yes" xml:space="preserve">
          <source>The splice() method adds/removes items to/from an array, and returns
  the removed item(s).</source>
          <target state="translated">Метод splice()добавляет элементы из массива и возвращает удаленные элементы.</target>
        </trans-unit>
        <trans-unit id="d4607f5f4d353df616911ce44cbb32ce72dbbf7a" translate="yes" xml:space="preserve">
          <source>The splice() method changes the contents of an array by removing
  existing elements and/or adding new elements.</source>
          <target state="translated">Метод splice()изменяет содержимое массива,удаляя существующие элементы или добавляя новые.</target>
        </trans-unit>
        <trans-unit id="100ca418894b30cc7048f6097c41af7932ab0077" translate="yes" xml:space="preserve">
          <source>Then when I want to use it:</source>
          <target state="translated">Тогда,когда я захочу им воспользоваться:</target>
        </trans-unit>
        <trans-unit id="2304d640a16ae9bfebc931161006126d186e787e" translate="yes" xml:space="preserve">
          <source>Then:</source>
          <target state="translated">Then:</target>
        </trans-unit>
        <trans-unit id="d0784cbb4a7760d5504fc97cb4ffb29fd3ddafff" translate="yes" xml:space="preserve">
          <source>There are two major approaches:</source>
          <target state="translated">Есть два основных подхода:</target>
        </trans-unit>
        <trans-unit id="81ed33d4e6d26655e174a94f2749ed4bf5c89986" translate="yes" xml:space="preserve">
          <source>There is no need to use &lt;code&gt;indexOf&lt;/code&gt; or &lt;code&gt;splice&lt;/code&gt;. However, it performs better if you only want to remove one occurrence of an element.</source>
          <target state="translated">Нет необходимости использовать &lt;code&gt;indexOf&lt;/code&gt; или &lt;code&gt;splice&lt;/code&gt; . Однако он работает лучше, если вы хотите удалить только одно вхождение элемента.</target>
        </trans-unit>
        <trans-unit id="f15d799c8985961cb5869dfa10f087e763105ff2" translate="yes" xml:space="preserve">
          <source>This provides a predicate instead of a value.</source>
          <target state="translated">Это обеспечивает предикат,а не значение.</target>
        </trans-unit>
        <trans-unit id="52cdaf49f7d8f6b0c1df575832e553cba5b685ce" translate="yes" xml:space="preserve">
          <source>This removes all elements from the array and also works faster than a combination of &lt;code&gt;slice&lt;/code&gt; and &lt;code&gt;indexOf&lt;/code&gt;.</source>
          <target state="translated">Это удаляет все элементы из массива, а также работает быстрее, чем комбинация &lt;code&gt;slice&lt;/code&gt; и &lt;code&gt;indexOf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c0327ed7faf0fa2151a1489f705eecf201e4b6e" translate="yes" xml:space="preserve">
          <source>This uses the ES6 arrow functions. You can use the traditional functions to support older browsers:</source>
          <target state="translated">При этом используются функции стрелки ES6.Вы можете использовать традиционные функции для поддержки старых браузеров:</target>
        </trans-unit>
        <trans-unit id="34d0d7b577fb5006d8c1367d41d5e85742843924" translate="yes" xml:space="preserve">
          <source>This will give you a new array without the value you wanted to remove. So the result will be:</source>
          <target state="translated">Это даст вам новый массив без значения,которое вы хотели удалить.Таким образом,результат будет:</target>
        </trans-unit>
        <trans-unit id="4f86bec82e40ec8b9eaeb7815f5db7458e7f954c" translate="yes" xml:space="preserve">
          <source>To remove an element of an array at an index &lt;code&gt;i&lt;/code&gt;:</source>
          <target state="translated">Чтобы удалить элемент массива с индексом &lt;code&gt;i&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="14fdd2b48aac9ef5c9ec89a868f0525541e378f8" translate="yes" xml:space="preserve">
          <source>Today (2019-12-09) I conduct performance tests on macOS v10.13.6 (High Sierra) for chosen solutions. I show &lt;code&gt;delete&lt;/code&gt; (A), but I not use it in comparison with other methods, because it left empty space in the array.</source>
          <target state="translated">Сегодня (2019-12-09) я провожу тесты производительности на macOS v10.13.6 (High Sierra) для выбранных решений. Я показываю &lt;code&gt;delete&lt;/code&gt; (A), но я не использую его по сравнению с другими методами, потому что он оставил пустое место в массиве.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="61fc9a71da87a6e263a155a0c228fa2a22592aa6" translate="yes" xml:space="preserve">
          <source>We need a loop to check them all, but an easier and more efficient way is using built-in JavaScript functions, so we write a function which use a filter like below instead:</source>
          <target state="translated">Нам нужен цикл,чтобы проверить их все,но более простым и эффективным способом является использование встроенных функций JavaScript,поэтому мы пишем функцию,которая использует фильтр,как показано ниже:</target>
        </trans-unit>
        <trans-unit id="054c50767d336aa2c0fab0b733b5916cca6932df" translate="yes" xml:space="preserve">
          <source>What if instead of a single item, you want to remove many items?</source>
          <target state="translated">Что,если вместо одного предмета вы хотите удалить много предметов?</target>
        </trans-unit>
        <trans-unit id="3439f7b5c8df636860f7e93aae4a23f274295565" translate="yes" xml:space="preserve">
          <source>Where '3' is the value you want removed from the array.
The array would then become : &lt;code&gt;['1','2','4','5','6']&lt;/code&gt;</source>
          <target state="translated">Где &amp;laquo;3&amp;raquo; - это значение, которое вы хотите удалить из массива. Массив станет: &lt;code&gt;['1','2','4','5','6']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73b0a9d9b8aab9366bb561586105a737b1c9764b" translate="yes" xml:space="preserve">
          <source>Yielding:</source>
          <target state="translated">Yielding:</target>
        </trans-unit>
        <trans-unit id="7e37a657190bbcf503a467a4c0e23c15acbd411a" translate="yes" xml:space="preserve">
          <source>You can also expect to have holes in index numbers after using delete, e.g. you could end up with having indexes 1, 3, 4, 8, 9, and 11 and length as it was before using delete. In that case, all indexed &lt;code&gt;for&lt;/code&gt; loops would crash, since indexes are no longer sequential.</source>
          <target state="translated">Вы также можете ожидать наличия дырок в индексных номерах после использования delete, например, вы можете получить индексы 1, 3, 4, 8, 9 и 11 и длину, как это было до использования delete. В этом случае все проиндексированные циклы будут аварийно завершены, поскольку индексы больше не являются последовательными.</target>
        </trans-unit>
        <trans-unit id="6d862c4ba136e1333f173ee9b7d52087cbe9965c" translate="yes" xml:space="preserve">
          <source>You can do it easily with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;filter&lt;/a&gt; method:</source>
          <target state="translated">Вы можете сделать это легко с помощью метода &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;фильтра&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0a2db4b5a92e25c6369289d622cc110bc3bf9c4f" translate="yes" xml:space="preserve">
          <source>You can just create a function and remove items in series:</source>
          <target state="translated">Можно просто создать функцию и последовательно удалять элементы:</target>
        </trans-unit>
        <trans-unit id="002098575255d65cbec57e752daf6e1c47bbb58c" translate="yes" xml:space="preserve">
          <source>You can search for inclusion inside the callback function:</source>
          <target state="translated">Вы можете искать включения внутри функции обратного вызова:</target>
        </trans-unit>
        <trans-unit id="6c93bb9a764f92c4cd9e3021568ae17e60d7eb27" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; and a &lt;a href=&quot;http://cdn.polyfill.io/v2/docs/&quot;&gt;polyfill service&lt;/a&gt; to ensure this is well supported across browsers.</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; и &lt;a href=&quot;http://cdn.polyfill.io/v2/docs/&quot;&gt;службу polyfill,&lt;/a&gt; чтобы гарантировать, что это хорошо поддерживается во всех браузерах.</target>
        </trans-unit>
        <trans-unit id="f52cc7bf113a21c4595bd02c1fac3f9ec17a6d5f" translate="yes" xml:space="preserve">
          <source>You can use ES6. For example to delete the value '3' in this case:</source>
          <target state="translated">Вы можете использовать ES6.Например,чтобы удалить значение '3' в этом случае:</target>
        </trans-unit>
        <trans-unit id="5fa3023aa716e47bf7ba5e1e19b1c5b9e07b794d" translate="yes" xml:space="preserve">
          <source>You can use lodash &lt;a href=&quot;https://lodash.com/docs#pull&quot;&gt;_.pull&lt;/a&gt; (mutate array), &lt;a href=&quot;https://lodash.com/docs#pullAt&quot;&gt;_.pullAt&lt;/a&gt; (mutate array) or &lt;a href=&quot;https://lodash.com/docs#without&quot;&gt;_.without&lt;/a&gt; (does't mutate array),</source>
          <target state="translated">Вы можете использовать lodash &lt;a href=&quot;https://lodash.com/docs#pull&quot;&gt;_.pull&lt;/a&gt; (массив мутирования), &lt;a href=&quot;https://lodash.com/docs#pullAt&quot;&gt;_.pullAt&lt;/a&gt; (массив мутирования) или &lt;a href=&quot;https://lodash.com/docs#without&quot;&gt;_.without&lt;/a&gt; (не мутирует массив),</target>
        </trans-unit>
        <trans-unit id="f49a5758d107ebbe684596c249a0fdc11b83eec4" translate="yes" xml:space="preserve">
          <source>You end up with an 8-element array. Don't know why but I confirmed John's original implementation doesn't have this problem.</source>
          <target state="translated">В итоге вы получаете 8-элементный массив.Не знаю почему,но я подтвердил,что оригинальная реализация Джона не имеет такой проблемы.</target>
        </trans-unit>
        <trans-unit id="b9fc17bfad1b9a6fd6c64747adcaa6bb50d9ef1d" translate="yes" xml:space="preserve">
          <source>You have 1 to 9 in the array, and you want remove 5. Use the below code:</source>
          <target state="translated">У вас есть от 1 до 9 в массиве,и вы хотите удалить 5.Используйте код ниже:</target>
        </trans-unit>
        <trans-unit id="59523b44b65e68f2d1099dfaddb9b36d2488acef" translate="yes" xml:space="preserve">
          <source>You may have different needs than I, so you can easily modify it to suit them. I hope this helps someone.</source>
          <target state="translated">У вас могут быть другие потребности,чем у меня,так что вы можете легко модифицировать его под себя.Надеюсь,это кому-нибудь поможет.</target>
        </trans-unit>
        <trans-unit id="4517c7bd27ee98509d3d3d64259d8592b14ad787" translate="yes" xml:space="preserve">
          <source>You should never mutate your array. As this is against the functional programming pattern. You can create a new array without referencing the array you want to change data of using the ECMAScript&amp;nbsp;6 method &lt;code&gt;filter&lt;/code&gt;;</source>
          <target state="translated">Вы никогда не должны изменять свой массив. Как это против функционального шаблона программирования. Вы можете создать новый массив, не ссылаясь на массив, для которого вы хотите изменить данные, используя &lt;code&gt;filter&lt;/code&gt; методов ECMAScript 6;</target>
        </trans-unit>
        <trans-unit id="1e7aa9bc776935aa2d2140e956b3d836030ec1e7" translate="yes" xml:space="preserve">
          <source>for big arrays, &lt;code&gt;array.slice+splice&lt;/code&gt; (H) is the fastest immutable solution for Firefox and Safari; &lt;code&gt;Array.from&lt;/code&gt; (B) is fastest in Chrome</source>
          <target state="translated">для больших массивов &lt;code&gt;array.slice+splice&lt;/code&gt; (H) - самое быстрое неизменное решение для Firefox и Safari; &lt;code&gt;Array.from&lt;/code&gt; (B) самый быстрый в Chrome</target>
        </trans-unit>
        <trans-unit id="14348e8799fa471cb246585eeb032e6ae549c74b" translate="yes" xml:space="preserve">
          <source>for small tables on Safari, surprisingly the mutable solution (C) is slower than the immutable solution (G)</source>
          <target state="translated">для небольших таблиц на Safari,удивительно,что мутирующий раствор (C)медленнее,чем неизменяемый раствор (G).</target>
        </trans-unit>
        <trans-unit id="57a0ec7e27ed061e58b5d1fcf86d063da62ee153" translate="yes" xml:space="preserve">
          <source>mutable solutions are usually 1.5x-6x faster than immutable</source>
          <target state="translated">мутируемые решения,как правило,в 1,5x-6x быстрее,чем неизменяемые</target>
        </trans-unit>
        <trans-unit id="a41b9e33e04b38f7c477ab607acfc49a6205295d" translate="yes" xml:space="preserve">
          <source>or you can use Babel and transpile the ES6 code back to ES5 to make it more digestible to old browsers, yet write modern JavaScript in your code.</source>
          <target state="translated">Или вы можете использовать Babel и перенести код ES6 обратно на ES5,чтобы сделать его более удобочитаемым для старых браузеров,но в то же время написать современный JavaScript в вашем коде.</target>
        </trans-unit>
        <trans-unit id="05b2859211ab032e64d81756f0257bb5cb1881e8" translate="yes" xml:space="preserve">
          <source>the fastest solution is &lt;code&gt;array.splice&lt;/code&gt; (C) (except Safari for small arrays where it has the second time)</source>
          <target state="translated">самое быстрое решение - &lt;code&gt;array.splice&lt;/code&gt; (C) (за исключением Safari для небольших массивов, где он второй раз)</target>
        </trans-unit>
        <trans-unit id="365862a50c0682caa8baa6f30edca76e3e5f81ed" translate="yes" xml:space="preserve">
          <source>where:</source>
          <target state="translated">where:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
