<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/572549">
    <body>
      <group id="572549">
        <trans-unit id="8211e5d22aa1b1159a30406dd120541a87bdc605" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;git add -A .&lt;/code&gt;&quot; is equivalent to &quot;&lt;code&gt;git add .; git add -u .&lt;/code&gt;&quot;</source>
          <target state="translated">「 &lt;code&gt;git add -A .&lt;/code&gt; 」は「 &lt;code&gt;git add .; git add -u .&lt;/code&gt; 」と同等です。</target>
        </trans-unit>
        <trans-unit id="eca4f8f8b66688e8d60c40f6ac873b9e3b095fce" translate="yes" xml:space="preserve">
          <source>(Note the extra '&lt;code&gt;.&lt;/code&gt;' for &lt;code&gt;git add -A&lt;/code&gt; and &lt;code&gt;git add -u&lt;/code&gt;)</source>
          <target state="translated">（ &lt;code&gt;git add -A&lt;/code&gt; および &lt;code&gt;git add -u&lt;/code&gt; の余分な「 &lt;code&gt;.&lt;/code&gt; 」に注意してください）</target>
        </trans-unit>
        <trans-unit id="8312aae0bfe62d8197bfb79f02b36cf9bbae86c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://git.kernel.org/cgit/git/git.git/tree/Documentation/RelNotes/2.0.0.txt&quot;&gt;Things changed&lt;/a&gt; with Git 2.0 (&lt;a href=&quot;https://en.wikipedia.org/wiki/Git#Releases[27][28]&quot;&gt;2014-05-28&lt;/a&gt;):</source>
          <target state="translated">Git 2.0での&lt;a href=&quot;https://git.kernel.org/cgit/git/git.git/tree/Documentation/RelNotes/2.0.0.txt&quot;&gt;変更点&lt;/a&gt; （ &lt;a href=&quot;https://en.wikipedia.org/wiki/Git#Releases[27][28]&quot;&gt;2014-05-28&lt;/a&gt; ）：</target>
        </trans-unit>
        <trans-unit id="662ae99d544a2f2757ae74937b9cade59b33c921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-A&lt;/code&gt; = &lt;code&gt;--all&lt;/code&gt; (no such &lt;code&gt;-a&lt;/code&gt;, which gives syntax error) = superset of all untracked/tracked files , unless in Git before 2.0, wherein if the dot filespec is given, then only that particular folder is considered. =&amp;gt; &lt;em&gt;if&lt;/em&gt; the item is recognized, &lt;code&gt;git add -A&lt;/code&gt; will find it and add it.</source>
          <target state="translated">&lt;code&gt;-A&lt;/code&gt; = &lt;code&gt;--all&lt;/code&gt; （そのような &lt;code&gt;-a&lt;/code&gt; ではなく、構文エラーが発生します）=すべての追跡されていない/追跡されているファイルのスーパーセット（2.0以前のGitを除く）。ドットファイル指定が指定されている場合、その特定のフォルダーのみが考慮されます。 =&amp;gt;アイテムが認識された&lt;em&gt;場合&lt;/em&gt; 、 &lt;code&gt;git add -A&lt;/code&gt; はそれを見つけて追加します。</target>
        </trans-unit>
        <trans-unit id="502c4a912ef92578be4d0d2cb2e5ce32676575c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-A&lt;/code&gt; is now the default</source>
          <target state="translated">&lt;code&gt;-A&lt;/code&gt; がデフォルトになりました</target>
        </trans-unit>
        <trans-unit id="d708df0c2941b055ddd46c07e4ac1756a5590b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; = &lt;code&gt;--update&lt;/code&gt; = subset to tracked files =&amp;gt; Add = No; Change = Yes; Delete = Yes. =&amp;gt; &lt;em&gt;if&lt;/em&gt; the item is tracked.</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; = &lt;code&gt;--update&lt;/code&gt; =追跡ファイルのサブセット=&amp;gt;追加=いいえ; 変更=はい。 削除=はい。 =&amp;gt;アイテムが追跡されている&lt;em&gt;場合&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd2ca061733ba545b534757d25516bb55988835c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add &amp;lt;path&amp;gt;&lt;/code&gt; is the same as &quot;&lt;code&gt;git add -A &amp;lt;path&amp;gt;&lt;/code&gt;&quot; now, so that
  &quot;&lt;code&gt;git add dir/&lt;/code&gt;&quot; will notice paths you removed from the directory and
  record the removal.</source>
          <target state="translated">&lt;code&gt;git add &amp;lt;path&amp;gt;&lt;/code&gt; は「 &lt;code&gt;git add -A &amp;lt;path&amp;gt;&lt;/code&gt; 」と同じなので、「 &lt;code&gt;git add dir/&lt;/code&gt; 」はディレクトリから削除したパスに気づき、削除を記録します。</target>
        </trans-unit>
        <trans-unit id="38490d6e0d7cf799267a5bb2a056370c701fd4f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add --ignore-removal .&lt;/code&gt; adds new/modified files in the current directory</source>
          <target state="translated">&lt;code&gt;git add --ignore-removal .&lt;/code&gt; 現在のディレクトリに新しい/変更されたファイルを追加します</target>
        </trans-unit>
        <trans-unit id="c9acd2809252c7725070271b0f7a7526ef78615a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; adds files to index from all folders in working tree.</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; は、作業ツリーのすべてのフォルダーからインデックスにファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="18e2244d4ba4dc6e833ef43a854c030001462cb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; is a handy shortcut for doing both of those.</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; は、これらの両方を実行するための便利なショートカットです。</target>
        </trans-unit>
        <trans-unit id="b73d0a634a5bdb98af8cf3b39caf9c7b6ebdd057" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; is equivalent to  &lt;code&gt;git add .; git add -u&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; はgit addと同等 &lt;code&gt;git add .; git add -u&lt;/code&gt; git add -u 。</target>
        </trans-unit>
        <trans-unit id="6a149b861f3dbcb05bdefec322018a7b894d504b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; is equivalent to &lt;code&gt;git add --all&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; は &lt;code&gt;git add --all&lt;/code&gt; と同等です</target>
        </trans-unit>
        <trans-unit id="107c7403c87b25cb0385a3b312aaa3282ad94cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; stages &lt;strong&gt;all changes&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; は &lt;strong&gt;すべての変更を&lt;/strong&gt;ステージング&lt;strong&gt;します&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e367e583a6733760e5282b509c44eca8c1335acb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u .&lt;/code&gt; adds modified/deleted files in the current directory</source>
          <target state="translated">&lt;code&gt;git add -u .&lt;/code&gt; 変更/削除されたファイルを現在のディレクトリに追加します</target>
        </trans-unit>
        <trans-unit id="7295c760901d63583de51b4acf957d06fe40a258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u&lt;/code&gt; and &lt;code&gt;git add -A&lt;/code&gt; in a subdirectory without paths on the command line operate on the entire tree.</source>
          <target state="translated">コマンドラインにパスがないサブディレクトリにある &lt;code&gt;git add -u&lt;/code&gt; と &lt;code&gt;git add -A&lt;/code&gt; は、ツリー全体で機能します。</target>
        </trans-unit>
        <trans-unit id="9668ed380ebd84884d63660a767826d33dc95fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u&lt;/code&gt; is equivalent to &lt;code&gt;git add --update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git add -u&lt;/code&gt; は &lt;code&gt;git add --update&lt;/code&gt; と同等です</target>
        </trans-unit>
        <trans-unit id="635392fa8db9777fc80dab0e690c2be00e749bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u&lt;/code&gt; looks at all the &lt;em&gt;already&lt;/em&gt; tracked files and stages the changes to those files if they are different or if they have been removed. It does not add any new files, it only stages changes to already tracked files.</source>
          <target state="translated">&lt;code&gt;git add -u&lt;/code&gt; は、 &lt;em&gt;すでに&lt;/em&gt;追跡されているすべてのファイルを調べ、それらが異なる場合や削除されている場合に、それらのファイルへの変更を段階的に行います。 新しいファイルは追加されず、すでに追跡されたファイルへの変更がステージングされるだけです。</target>
        </trans-unit>
        <trans-unit id="441376f56797301ee85482cf16bd8fc18c65f523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u&lt;/code&gt; stages modifications and deletions, &lt;strong&gt;without new files&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;git add -u&lt;/code&gt; は 、 &lt;strong&gt;新しいファイルなしで&lt;/strong&gt; 、変更と削除をステージングし&lt;strong&gt;ます&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="705290c98836b17f3e4efed1742c89338aa29335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add .&lt;/code&gt; and &lt;code&gt;git add -A .&lt;/code&gt; add new/modified/deleted files in the current directory</source>
          <target state="translated">&lt;code&gt;git add .&lt;/code&gt; そして &lt;code&gt;git add -A .&lt;/code&gt; 現在のディレクトリに新しい/変更/削除されたファイルを追加する</target>
        </trans-unit>
        <trans-unit id="e5695c1b9f6db93f7acd150fa9df85029d06e1d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add .&lt;/code&gt; equals &lt;code&gt;git add -A .&lt;/code&gt; adds files to index only from current and children folders.</source>
          <target state="translated">&lt;code&gt;git add .&lt;/code&gt; &lt;code&gt;git add -A .&lt;/code&gt; と同じです。 現在のフォルダーと子フォルダーからのみインデックスにファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="daace2494c83c0f8b4c42da7c2d316440fe6d00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add .&lt;/code&gt; stages new files and modifications, &lt;strong&gt;without deletions&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;git add .&lt;/code&gt; &lt;strong&gt;削除せずに&lt;/strong&gt;新しいファイルと変更をステージング</target>
        </trans-unit>
        <trans-unit id="ee54e143b5acb51ffd856c6b42267f91ffecdef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add&lt;/code&gt; is like &lt;code&gt;git add :/&lt;/code&gt; (&lt;a href=&quot;https://stackoverflow.com/a/31951899/6309&quot;&gt;add everything from top git repo folder&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;git add&lt;/code&gt; は &lt;code&gt;git add :/&lt;/code&gt; ような&lt;a href=&quot;https://stackoverflow.com/a/31951899/6309&quot;&gt;ものです&lt;/a&gt; （ 一番上のgit repoフォルダからすべてを追加してください ）。</target>
        </trans-unit>
        <trans-unit id="8f597db408078e29fe52b30018f7c28b94b667ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;http://pcottle.github.io/learnGitBranching/&quot;&gt;Learn Git Branching&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://pcottle.github.io/learnGitBranching/&quot;&gt;Gitブランチを学ぶ&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4beff0b5f9058b6b7715f661a056b635a007f86f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://onlywei.github.io/explain-git-with-d3/&quot;&gt;Explain Git With D3&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://onlywei.github.io/explain-git-with-d3/&quot;&gt;D3でGitを説明する&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dbf539f9879e531b8e7c094a368b8b09934741eb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide&quot;&gt;Git for beginners: The definitive practical guide&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide&quot;&gt;初心者のためのGit：決定的な実用ガイド&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e41d3b55d5a471d150111a8ec9e977f4ca9fc445" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://try.github.io/levels/1/challenges/1&quot;&gt;Got 15 minutes and want to learn Git? (in an interactive way)&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://try.github.io/levels/1/challenges/1&quot;&gt;15分でGitを学びたいですか？&lt;/a&gt;&lt;/em&gt; &lt;em&gt;（インタラクティブな方法で）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89160f762b1b2a50973c6dcf02f20b20ddabf5d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This answer only applies to &lt;strong&gt;Git version 1.x&lt;/strong&gt;. For Git version 2.x, see other answers.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;この回答は&lt;strong&gt;Gitバージョン1.xに&lt;/strong&gt;のみ適用され&lt;strong&gt;ます&lt;/strong&gt; 。&lt;/em&gt; &lt;em&gt;Gitバージョン2.xについては、他の回答を参照してください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74dd7b2f12d331316557eb38dd8a3b439f79c667" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A warning is issued when these commands are run without a pathspec and when you have local changes outside the current directory&lt;/strong&gt;, because the behaviour in Git 2.0 will be different
  from today's version in such a situation.</source>
          <target state="translated">&lt;strong&gt;これらのコマンドがpathspecなしで実行され、現在のディレクトリ以外でローカルに変更があった場合&lt;/strong&gt; 、Git 2.0の動作はそのような状況では現在のバージョンと異なるため、 &lt;strong&gt;警告が発行されます&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="963bfa4de40b8952c167c4c33c0851d9e25db9a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Detail:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Detail:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33e55402c435c4031710562e30ae9a88d58a4946" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Further reading:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;参考文献：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f47383382e83f2a53431afaa324b5219c8584b82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Git Version 1.x&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Gitバージョン1.x&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="e2872544d167f2054bc1e0214f0bcada18f47d29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Git Version 2.x&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Gitバージョン2.x&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="a2fb070431451825a43dbcb68523c4e1049f4a93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Summary:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68a7553c8bcc632ed67b09926e0d59cbca61c705" translate="yes" xml:space="preserve">
          <source>A more distilled quick answer:</source>
          <target state="translated">より洗練された迅速な回答。</target>
        </trans-unit>
        <trans-unit id="4775f7e392240fd8132090e1709bc752b81ad7e6" translate="yes" xml:space="preserve">
          <source>And that's all.</source>
          <target state="translated">そして、それだけです。</target>
        </trans-unit>
        <trans-unit id="2d3e940372091f14953c08d43c0d3e09601e930a" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;git add -A&lt;/code&gt; or &lt;code&gt;git add -u&lt;/code&gt; would operate (starting git 2.0 only) on the &lt;strong&gt;entire working tree&lt;/strong&gt;, and not just on the current path.</source>
          <target state="translated">なぜなら、 &lt;code&gt;git add -A&lt;/code&gt; または &lt;code&gt;git add -u&lt;/code&gt; は、現在のパスだけでなく、 &lt;strong&gt;作業ツリー全体で&lt;/strong&gt; （git 2.0以降のみ）動作するためです。</target>
        </trans-unit>
        <trans-unit id="18796e16a7f497cb2d8a6fed1c9e5f5e6521814a" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;git add .&lt;/code&gt; and &lt;code&gt;git add -A&lt;/code&gt; will stage all new, modified and deleted files in the newer versions of Git.</source>
          <target state="translated">どちらも &lt;code&gt;git add .&lt;/code&gt; そして &lt;code&gt;git add -A&lt;/code&gt; は、新しいバージョンのGitのすべての新しいファイル、変更されたファイル、削除されたファイルをステージングします。</target>
        </trans-unit>
        <trans-unit id="d0743eddc5e71834650d71256f38977cdf3ff971" translate="yes" xml:space="preserve">
          <source>Difference between “git add -A” and “git add .”</source>
          <target state="translated">&quot;git add -A&quot; と &quot;git add .</target>
        </trans-unit>
        <trans-unit id="fbab8f2bbe16a0fb95cfd03c49ae601ac21163f0" translate="yes" xml:space="preserve">
          <source>Does both below (same as &lt;em&gt;git add --all&lt;/em&gt;)</source>
          <target state="translated">以下の両方を実行します（ &lt;em&gt;git add --all&lt;/em&gt;と同じ）</target>
        </trans-unit>
        <trans-unit id="4d805e6af22217045bf6e345641aeeaa5744ea4a" translate="yes" xml:space="preserve">
          <source>Empty folders are never added by Git. They are never even listed as 'untracked'. (A workaround is to add a blank file, possibly invisible, to the tracked files.)</source>
          <target state="translated">空のフォルダが Git によって追加されることはありません。また、'untracked' と表示されることもありません。(回避策としては、トラッキングされたファイルに空白のファイルを追加し、おそらく見えないようにすることです)。</target>
        </trans-unit>
        <trans-unit id="3fa983addb40ab569c332d87f82da77fe78c55dd" translate="yes" xml:space="preserve">
          <source>Ensure any hunks/files to be added are accounted for in &lt;code&gt;git status&lt;/code&gt;.</source>
          <target state="translated">追加するすべてのハンク/ファイルが &lt;code&gt;git status&lt;/code&gt; で説明されていることを確認します 。</target>
        </trans-unit>
        <trans-unit id="47faae2a8cf9b59666d75395c9059db47457781b" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://stackoverflow.com/questions/572549/difference-between-git-add-a-and-git-add/572660#572660&quot;&gt;Charles' instructions&lt;/a&gt;, after testing my proposed understanding would be as follows:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/572549/difference-between-git-add-a-and-git-add/572660#572660&quot;&gt;チャールズの指示&lt;/a&gt;から、私の提案した理解をテストした後は次のようになります：</target>
        </trans-unit>
        <trans-unit id="0aff0850f1e52edd94532aca98d696a44ddf6c99" translate="yes" xml:space="preserve">
          <source>From the top level of the repository, &quot;git add -A&quot;  to add all items. This works in all versions of Git.</source>
          <target state="translated">リポジトリのトップレベルから「git add -a」ですべての項目を追加します。これはGitのすべてのバージョンで動作します。</target>
        </trans-unit>
        <trans-unit id="2fcd704aefdad998338bef1859b9d6820ad1605b" translate="yes" xml:space="preserve">
          <source>Git status will not display subfolder information, that is, untracked files, unless at least one file in that subfolder is tracked. Before such time, Git considers the entire folder out of scope, a la 'empty'. It is empty of tracked items.</source>
          <target state="translated">Git のステータスは、サブフォルダの情報、つまりトラッキングされていないファイルを表示しません。そのような状態になる前に、Git は「空」のようにフォルダ全体を対象外とみなします。これは、追跡されている項目からは空っぽということです。</target>
        </trans-unit>
        <trans-unit id="5c109476e18d5c4a64459749d8731468d9dfed09" translate="yes" xml:space="preserve">
          <source>Have a good &lt;code&gt;.gitignore&lt;/code&gt; file so that normally only files of interest are untracked and/or unrecognized.</source>
          <target state="translated">適切な &lt;code&gt;.gitignore&lt;/code&gt; ファイルを用意して、通常は関心のあるファイルのみが追跡および/または認識されないようにします。</target>
        </trans-unit>
        <trans-unit id="6c14d22cf82fbaa76e63a1f5887baa374f1e8d25" translate="yes" xml:space="preserve">
          <source>Here is a table for quick understanding:</source>
          <target state="translated">分かりやすいように表にしてみました。</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">一例を挙げてみます。</target>
        </trans-unit>
        <trans-unit id="03d81fc6725ae7db8e5a235ed6f7bbead1226e9c" translate="yes" xml:space="preserve">
          <source>However, in v2.0, the operation can be limited to the current path: just add the explicit dot suffix (which is also valid in Git 1.9 or earlier);</source>
          <target state="translated">しかし v2.0 では、操作を現在のパスに限定することができます。明示的なドットサフィックスを追加するだけです (これは Git 1.9 以前でも有効です)。</target>
        </trans-unit>
        <trans-unit id="d1e165100e084b9522d6c2049bc5134e7a1c03bc" translate="yes" xml:space="preserve">
          <source>I hope this may add some more clarity.</source>
          <target state="translated">これで少しでも分かりやすくなるといいですね。</target>
        </trans-unit>
        <trans-unit id="8d6a31ec28ca8c9162623ac6fd414434ccb86f8b" translate="yes" xml:space="preserve">
          <source>If any items are missing, due to invisible files/folders, add them separately.</source>
          <target state="translated">見えないファイルフォルダのために、項目が不足している場合は、別途追加してください。</target>
        </trans-unit>
        <trans-unit id="c8dc6364886786dfd6726fe9524c134071fbb162" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; is given when -A option is used, all files in the entire working tree are updated (old versions of Git used to limit the update to the current directory and its subdirectories).</source>
          <target state="translated">-Aオプションを使用するときに &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; を指定しないと、作業ツリー全体のすべてのファイルが更新されます（更新を現在のディレクトリとそのサブディレクトリに制限するために使用されていたGitの古いバージョン）。</target>
        </trans-unit>
        <trans-unit id="51babe58b8cec0fb584658ff9ebfce3cd264ba4b" translate="yes" xml:space="preserve">
          <source>If there is a big bug, do 'git reset' to clear the index entirely.</source>
          <target state="translated">大きなバグがある場合は、'git reset' を実行してインデックスを完全にクリアします。</target>
        </trans-unit>
        <trans-unit id="fde13bf0f8790fc21d82323068da5b1c5f48a631" translate="yes" xml:space="preserve">
          <source>If you are in any subdirectory of the &lt;em&gt;working directory&lt;/em&gt;, &lt;code&gt;git add -A&lt;/code&gt; will add all files from the entire &lt;em&gt;working directory&lt;/em&gt;, and &lt;code&gt;git add .&lt;/code&gt; will add files from your &lt;em&gt;current directory&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;作業&lt;/em&gt;ディレクトリのサブディレクトリにいる場合、 &lt;code&gt;git add -A&lt;/code&gt; は&lt;em&gt;作業ディレクトリ&lt;/em&gt;全体からすべてのファイルを追加し、 &lt;code&gt;git add .&lt;/code&gt; &lt;em&gt;現在のディレクトリ&lt;/em&gt;からファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="41e1884b3ffbe03732ab798dd8039a1aa56d5ce9" translate="yes" xml:space="preserve">
          <source>If you are located directly at the &lt;em&gt;working directory&lt;/em&gt;, then &lt;code&gt;git add -A&lt;/code&gt; and &lt;code&gt;git add .&lt;/code&gt; work without the difference.</source>
          <target state="translated">直接&lt;em&gt;作業ディレクトリにいる&lt;/em&gt;場合は、 &lt;code&gt;git add -A&lt;/code&gt; と &lt;code&gt;git add .&lt;/code&gt; 違いなく動作します。</target>
        </trans-unit>
        <trans-unit id="aa12583f80d3df11d17944625f2be1730ce739b8" translate="yes" xml:space="preserve">
          <source>If your current working directory is &lt;code&gt;/my-repo&lt;/code&gt;, and you do &lt;code&gt;rm rootfile.txt&lt;/code&gt;, then &lt;code&gt;cd subfolder&lt;/code&gt;, followed by &lt;code&gt;git add .&lt;/code&gt;, then it will &lt;em&gt;not&lt;/em&gt; stage the deleted file. But doing &lt;code&gt;git add -A&lt;/code&gt; will certainly stage this change no matter where you perform the command from.</source>
          <target state="translated">現在の作業ディレクトリが &lt;code&gt;/my-repo&lt;/code&gt; で 、 &lt;code&gt;rm rootfile.txt&lt;/code&gt; を実行し 、次に &lt;code&gt;cd subfolder&lt;/code&gt; 、次に &lt;code&gt;git add .&lt;/code&gt; 、削除されたファイル&lt;em&gt;は&lt;/em&gt;ステージングされ&lt;em&gt;ません&lt;/em&gt; 。 しかし、 &lt;code&gt;git add -A&lt;/code&gt; を実行すると、コマンドをどこから実行しても、この変更が確実にステージングされます。</target>
        </trans-unit>
        <trans-unit id="70bf03d8be3bdbf403407b6c68e4250e0014edc8" translate="yes" xml:space="preserve">
          <source>Important background knowledge about how Git 'adds':</source>
          <target state="translated">Git がどのように「追加」するかについての重要な背景知識。</target>
        </trans-unit>
        <trans-unit id="893dd36cb8e26bf9403aaed8bd4d85d83d60917c" translate="yes" xml:space="preserve">
          <source>In &lt;strong&gt;Git 2.x&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Git 2.xの場合&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="be7aeaad34b9c679237b5e2c3e33aa7063953747" translate="yes" xml:space="preserve">
          <source>In Git 2 the &lt;code&gt;-A&lt;/code&gt; option is now the default.</source>
          <target state="translated">Git 2では、 &lt;code&gt;-A&lt;/code&gt; オプションがデフォルトになりました。</target>
        </trans-unit>
        <trans-unit id="87aa644826e8b6e7f0b7611a74ccf66fa5effa52" translate="yes" xml:space="preserve">
          <source>In Git before 2.0, for the two limiters (update and all), the new default is to operate on the entire working tree, instead of the current path (Git 1.9 or earlier),</source>
          <target state="translated">2.0以前のGitでは、2つのリミッター(updateとall)については、現在のパス(Git 1.9以前)ではなく、作業ツリー全体で操作するのが新しいデフォルトとなっています。</target>
        </trans-unit>
        <trans-unit id="7093987d748199aa08eb2ec318d95df258304d3d" translate="yes" xml:space="preserve">
          <source>In conclusion, my policy is:</source>
          <target state="translated">結論から言うと、私のポリシーは</target>
        </trans-unit>
        <trans-unit id="3920c9fdf9c3c409a7981048de3b19d425d50983" translate="yes" xml:space="preserve">
          <source>In older versions of Git, &quot;&lt;code&gt;git add &amp;lt;path&amp;gt;&lt;/code&gt;&quot; used to ignore removals.</source>
          <target state="translated">古いバージョンのGitでは、「 &lt;code&gt;git add &amp;lt;path&amp;gt;&lt;/code&gt; 」は削除を無視するために使用されていました。</target>
        </trans-unit>
        <trans-unit id="cf09a3b1dffb5b56a0ab5f57f18f05041efa217a" translate="yes" xml:space="preserve">
          <source>Invisible files, those prefixed with a dot, (dotfiles) are never automatically recognized by Git. They are never even listed as 'untracked'.</source>
          <target state="translated">見えないファイル、つまりプレフィックスがドットで始まるファイル (dotfiles)は、Git が自動的に認識することはありません。また、'untracked' と表示されることもありません。</target>
        </trans-unit>
        <trans-unit id="f12b4b31583725582ce4900c9aa4a1f8db4bcd76" translate="yes" xml:space="preserve">
          <source>Limiters may be -u or -A or nil.</source>
          <target state="translated">リミッターは -u または -A または nil です。</target>
        </trans-unit>
        <trans-unit id="de9cea7a5d40d8e4ae9e138c0d6fbd77ecd7e2ab" translate="yes" xml:space="preserve">
          <source>Long-form flags:</source>
          <target state="translated">ロングフォームフラグ</target>
        </trans-unit>
        <trans-unit id="8e63bef8580255c4cea9690e343f96999273ded8" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/RelNotes/1.8.3.txt#L19-L30&quot;&gt;starting git 2.0 (Q1 or Q2 2014)&lt;/a&gt;, when talking about &lt;strong&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/strong&gt; (current path within the working tree), you must use '&lt;code&gt;.&lt;/code&gt;' in the other &lt;code&gt;git add&lt;/code&gt; commands as well.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/RelNotes/1.8.3.txt#L19-L30&quot;&gt;git 2.0の開始&lt;/a&gt;時（2014年第1四半期または第2四半期）の &lt;strong&gt; &lt;code&gt;git add .&lt;/code&gt; &lt;/strong&gt;について説明していることに注意してください&lt;strong&gt;。&lt;/strong&gt; （作業ツリー内の現在のパス）、 'を使用する必要があります &lt;code&gt;.&lt;/code&gt; '他の &lt;code&gt;git add&lt;/code&gt; コマンドでも同様です。</target>
        </trans-unit>
        <trans-unit id="e7b709323f83e80eff4f7ead8be1b2823446f638" translate="yes" xml:space="preserve">
          <source>Note that git 2.7 (Nov. 2015) will allow you to add a folder named &quot;&lt;code&gt;:&lt;/code&gt;&quot;!</source>
          <target state="translated">git 2.7（2015年11月）では、「 &lt;code&gt;:&lt;/code&gt; 」という名前のフォルダーを追加できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c0062dc518bae3504bc5c8f51ad0d4b20a970fca" translate="yes" xml:space="preserve">
          <source>Now, given that knowledge, we can apply the answers above.</source>
          <target state="translated">さて、その知識があれば、上記の答えを応用することができます。</target>
        </trans-unit>
        <trans-unit id="ee9e8fbdf681ae55614ea63c82626977b5481bfc" translate="yes" xml:space="preserve">
          <source>One thing that I would add is that if the &lt;code&gt;--interactive&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt; mode is used then &lt;code&gt;git add&lt;/code&gt; will behave as if the update (&lt;code&gt;-u&lt;/code&gt;) flag was used and not add new files.</source>
          <target state="translated">私が追加することの1つは、-- &lt;code&gt;--interactive&lt;/code&gt; または &lt;code&gt;-p&lt;/code&gt; モードが使用されている場合、 &lt;code&gt;git add&lt;/code&gt; は更新（ &lt;code&gt;-u&lt;/code&gt; ）フラグが使用されているかのように動作し、新しいファイルを追加しないことです。</target>
        </trans-unit>
        <trans-unit id="2d50cc49f4fa69aa14d326c9861493dc429d6a1e" translate="yes" xml:space="preserve">
          <source>P.S.: information relates to &lt;a href=&quot;https://en.wikipedia.org/wiki/Git#Releases[27][28]&quot;&gt;Git 2.0&lt;/a&gt; (2014-05-28).</source>
          <target state="translated">PS：情報は&lt;a href=&quot;https://en.wikipedia.org/wiki/Git#Releases[27][28]&quot;&gt;Git 2.0&lt;/a&gt; （2014-05-28）に関連しています 。</target>
        </trans-unit>
        <trans-unit id="039206f73a592312ff46445b249ba81996f65130" translate="yes" xml:space="preserve">
          <source>Pathspec may be a filepath or dot, '.' to indicate the current directory.</source>
          <target state="translated">Pathspecはファイルパスか、カレントディレクトリを示すドット、'.'です。</target>
        </trans-unit>
        <trans-unit id="0160676e693bf648dc3b9b208fa6ab49bf9735b2" translate="yes" xml:space="preserve">
          <source>Remove any desired items from the index if desired.</source>
          <target state="translated">必要に応じて、インデックスから必要な項目を削除します。</target>
        </trans-unit>
        <trans-unit id="86d6f06bc64fbf3ebaca495d774f66f9e1789fa9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/git/git/commit/29abb33978f713cd0a5cc3687bf61077b0928840&quot;&gt;commit 29abb33&lt;/a&gt; (25 Oct 2015) by &lt;a href=&quot;https://github.com/gitster&quot;&gt;Junio C Hamano (&lt;code&gt;gitster&lt;/code&gt;)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/gitster&quot;&gt;Junio C Hamano（ &lt;code&gt;gitster&lt;/code&gt; ）&lt;/a&gt;による&lt;a href=&quot;https://github.com/git/git/commit/29abb33978f713cd0a5cc3687bf61077b0928840&quot;&gt;コミット29abb33&lt;/a&gt; （2015年10月25日）を参照してください。</target>
        </trans-unit>
        <trans-unit id="ab25928ba88dbcf31cbcad130d5ed987c6e5179e" translate="yes" xml:space="preserve">
          <source>So for Git 2 the answer is:</source>
          <target state="translated">ということで、Git 2 の場合の答えはこうなります。</target>
        </trans-unit>
        <trans-unit id="53aefd6d20852e179c8667cc243f7550068fc10f" translate="yes" xml:space="preserve">
          <source>Specifying a filespec = '.' (dot), or the current directory, is not recursive unless &lt;code&gt;-A&lt;/code&gt; is also specified. Dot refers strictly to the current directory - it omits paths found above and below.</source>
          <target state="translated">filespec = '。'の指定 （ドット）、または現在のディレクトリは、 &lt;code&gt;-A&lt;/code&gt; も指定されていない限り、再帰的ではありません。 ドットは厳密に現在のディレクトリを指します-上下にあるパスは省略されています。</target>
        </trans-unit>
        <trans-unit id="d6d0b15c0dd06a04d000f53ebbc7482ae48de3a3" translate="yes" xml:space="preserve">
          <source>Stages modified + deleted files</source>
          <target state="translated">変更されたステージ+削除されたファイル</target>
        </trans-unit>
        <trans-unit id="6d03bc554be38aa07f62a50d267a07808200b0b4" translate="yes" xml:space="preserve">
          <source>Stages new + modified files</source>
          <target state="translated">ステージ新規+変更されたファイル</target>
        </trans-unit>
        <trans-unit id="ab5c8fda74b21816fb224c4da3bb11fdc78bbeb6" translate="yes" xml:space="preserve">
          <source>That means:</source>
          <target state="translated">ということです。</target>
        </trans-unit>
        <trans-unit id="24f37766b3880ad3b65ac4edfce725f9bd8de84a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-A&lt;/code&gt; option adds, modifies, and removes index entries to match the working tree.</source>
          <target state="translated">&lt;code&gt;-A&lt;/code&gt; オプションは、作業ツリーと一致するようにインデックスエントリを追加、変更、および削除します。</target>
        </trans-unit>
        <trans-unit id="9ff5b6940bd6e84654c466e9fc3a89341953faba" translate="yes" xml:space="preserve">
          <source>The command &lt;code&gt;git add [--all|-A]&lt;/code&gt; appears to be identical to &lt;code&gt;git add .&lt;/code&gt;. Is this correct? If not, how do they differ?</source>
          <target state="translated">コマンド &lt;code&gt;git add [--all|-A]&lt;/code&gt; は &lt;code&gt;git add .&lt;/code&gt; と同じように見えます。 。 これは正しいです？ そうでない場合、それらはどのように異なりますか？</target>
        </trans-unit>
        <trans-unit id="30b4c4f4406f0284587105748a0be273e04babdc" translate="yes" xml:space="preserve">
          <source>The difference is that &lt;code&gt;git add -A&lt;/code&gt; stages files in &quot;higher, current and subdirectories&quot; that belong to your working Git repository. But doing a &lt;code&gt;git add .&lt;/code&gt; only stages files in the current directory and subdirectories following it (&lt;em&gt;not&lt;/em&gt; the files lying outside, i.e., higher directories).</source>
          <target state="translated">違いは、 &lt;code&gt;git add -A&lt;/code&gt; は、作業中のGitリポジトリに属する​​「上位、現在、およびサブディレクトリ」にあるファイルをステージングすることです。 しかし、 &lt;code&gt;git add .&lt;/code&gt; 現在のディレクトリとそれに続くサブディレクトリのファイルのみをステージングします（外部にあるファイル、つまり上位のディレクトリはステージングし&lt;em&gt;ません&lt;/em&gt; ）。</target>
        </trans-unit>
        <trans-unit id="21e55678bb9009f1db9482429cd7f0cc9c625e84" translate="yes" xml:space="preserve">
          <source>The important point about &lt;code&gt;git add .&lt;/code&gt; is that it looks at the working tree and adds all those paths to the staged changes if they are either changed or are new and not ignored, it does not stage any 'rm' actions.</source>
          <target state="translated">&lt;code&gt;git add .&lt;/code&gt; に関する重要なポイント。 作業ツリーを見て、変更されているか、新しいパスであり、無視されていない場合、ステージングされた変更にすべてのパスを追加し、「rm」アクションをステージングしません。</target>
        </trans-unit>
        <trans-unit id="72c68d0bbcd705ab884e6ad481064a6046966ae3" translate="yes" xml:space="preserve">
          <source>The limiters are as follows.</source>
          <target state="translated">リミッターは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="3e188287ad277d6006207d7281fd1ddfb86fb835" translate="yes" xml:space="preserve">
          <source>The old behavior is now available with &lt;code&gt;--ignore-removal&lt;/code&gt;.</source>
          <target state="translated">以前の動作は &lt;code&gt;--ignore-removal&lt;/code&gt; で使用できるようになりました 。</target>
        </trans-unit>
        <trans-unit id="e9188ae6d7c46eed3b2c49ecdce30ee328560abb" translate="yes" xml:space="preserve">
          <source>The pathspec is as follows.</source>
          <target state="translated">パススペックは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7839726681b51e1336bf8783789ff94e5d54f0ac" translate="yes" xml:space="preserve">
          <source>This blog post might also be helpful to understand in what situation those commands may be applied: &lt;em&gt;&lt;a href=&quot;http://www.geekgumbo.com/2010/05/16/removing-deleted-files-from-your-git-working-directory/&quot;&gt;Removing Deleted Files from your Git Working Directory&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">このブログ投稿は、これらのコマンドが適用される状況を理解するのにも役立ち&lt;em&gt;&lt;a href=&quot;http://www.geekgumbo.com/2010/05/16/removing-deleted-files-from-your-git-working-directory/&quot;&gt;ます。Git作業ディレクトリからの削除済みファイルの削除&lt;/a&gt;&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb426c8066d24f30dc62e2911d67811787d29348" translate="yes" xml:space="preserve">
          <source>Those commands will &lt;strong&gt;operate on the entire tree in Git 2.0 for consistency with &quot;&lt;code&gt;git commit -a&lt;/code&gt;&quot; and other commands&lt;/strong&gt;.
  Because there will be no mechanism to make &quot;&lt;code&gt;git add -u&lt;/code&gt;&quot; behave as if &quot;&lt;code&gt;git add -u .&lt;/code&gt;&quot;, it is important for those who are used to &quot;&lt;code&gt;git add -u&lt;/code&gt;&quot; (without pathspec) updating the index only for paths in the current subdirectory to start training their fingers to explicitly say &quot;&lt;code&gt;git add -u .&lt;/code&gt;&quot; when they mean it before Git 2.0 comes.</source>
          <target state="translated">これらのコマンドは&lt;strong&gt;、Git 2.0のツリー全体で機能し、「 &lt;code&gt;git commit -a&lt;/code&gt; 」やその他のコマンドとの整合性を保ちます&lt;/strong&gt; 。 「 &lt;code&gt;git add -u&lt;/code&gt; 」を「 git add -u 」のように動作させるメカニズムはないため、「 &lt;code&gt;git add -u&lt;/code&gt; 」（パス指定なし）に慣れている人は、パスのインデックスのみを更新することが重要です現在のサブディレクトリで、Git 2.0が登場する前に「 &lt;code&gt;git add -u .&lt;/code&gt; 」と明示的に言うように指のトレーニングを開始します。</target>
        </trans-unit>
        <trans-unit id="945c4fe70715f90e18c0575c7aad5f14240c3201" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;.&lt;/code&gt; is added that limits the scope of the update to the directory you are currently in, as per the &lt;a href=&quot;https://git-scm.com/docs/git-add#git-add--A&quot;&gt;Git documentation&lt;/a&gt;</source>
          <target state="translated">とき &lt;code&gt;.&lt;/code&gt; &lt;a href=&quot;https://git-scm.com/docs/git-add#git-add--A&quot;&gt;Gitのドキュメント&lt;/a&gt;に従って、更新の範囲を現在のディレクトリに制限するために追加されます</target>
        </trans-unit>
        <trans-unit id="48341cfb44705c906cf38d92c052ea8f37022178" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://github.com/git/git/blob/f99a38c0121456822f8a9dfb7928eefceaa98201/Documentation/RelNotes/2.0.0.txt#L32-L36&quot;&gt;&lt;strong&gt;Git 2.0, &lt;code&gt;git add -A&lt;/code&gt; is default: &lt;code&gt;git add .&lt;/code&gt; equals &lt;code&gt;git add -A .&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/git/git/blob/f99a38c0121456822f8a9dfb7928eefceaa98201/Documentation/RelNotes/2.0.0.txt#L32-L36&quot;&gt;&lt;strong&gt;Git 2.0では、 &lt;code&gt;git add -A&lt;/code&gt; がデフォルトです： &lt;code&gt;git add .&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt; &lt;strong&gt; &lt;code&gt;git add -A .&lt;/code&gt; と同じです。&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="15a7d031bdb4b85e8d2f61c9063d9a2e8c1a2bdb" translate="yes" xml:space="preserve">
          <source>Without the dot, add all files in the project regardless of the current directory.</source>
          <target state="translated">ドットがない場合は、カレントディレクトリに関係なく、プロジェクト内のすべてのファイルを追加します。</target>
        </trans-unit>
        <trans-unit id="990a0914d9e0f86470562025357e995fe617bed3" translate="yes" xml:space="preserve">
          <source>You can say &quot;&lt;code&gt;git add --ignore-removal &amp;lt;path&amp;gt;&lt;/code&gt;&quot; to
  add only added or modified paths in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;, if you really want to.</source>
          <target state="translated">本当に必要な場合は、「 &lt;code&gt;git add --ignore-removal &amp;lt;path&amp;gt;&lt;/code&gt; 」と言って、 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; に追加または変更されたパスのみを追加できます。</target>
        </trans-unit>
        <trans-unit id="e250892c1910d08f6fe65e9230024a29e81383a5" translate="yes" xml:space="preserve">
          <source>You can test the differences out with something like this (note that for Git version 2.x your output for &lt;code&gt;git add .&lt;/code&gt;&lt;code&gt;git status&lt;/code&gt;&lt;strong&gt;will&lt;/strong&gt; be different):</source>
          <target state="translated">次のようなもので違いをテストできます（Gitバージョン2.xでは &lt;code&gt;git add .&lt;/code&gt; 出力が異なります &lt;code&gt;git status&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;異なります）：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
