<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/572549">
    <body>
      <group id="572549">
        <trans-unit id="8211e5d22aa1b1159a30406dd120541a87bdc605" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;git add -A .&lt;/code&gt;&quot; is equivalent to &quot;&lt;code&gt;git add .; git add -u .&lt;/code&gt;&quot;</source>
          <target state="translated">&lt;code&gt;git add -A .&lt;/code&gt; 等效于 &lt;code&gt;git add .; git add -u .&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eca4f8f8b66688e8d60c40f6ac873b9e3b095fce" translate="yes" xml:space="preserve">
          <source>(Note the extra '&lt;code&gt;.&lt;/code&gt;' for &lt;code&gt;git add -A&lt;/code&gt; and &lt;code&gt;git add -u&lt;/code&gt;)</source>
          <target state="translated">（请注意 &lt;code&gt;git add -A&lt;/code&gt; 和 &lt;code&gt;git add -u&lt;/code&gt; 的额外' &lt;code&gt;.&lt;/code&gt; '）</target>
        </trans-unit>
        <trans-unit id="8312aae0bfe62d8197bfb79f02b36cf9bbae86c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://git.kernel.org/cgit/git/git.git/tree/Documentation/RelNotes/2.0.0.txt&quot;&gt;Things changed&lt;/a&gt; with Git 2.0 (&lt;a href=&quot;https://en.wikipedia.org/wiki/Git#Releases[27][28]&quot;&gt;2014-05-28&lt;/a&gt;):</source>
          <target state="translated">Git 2.0（ &lt;a href=&quot;https://en.wikipedia.org/wiki/Git#Releases[27][28]&quot;&gt;2014-05-28&lt;/a&gt; ） &lt;a href=&quot;https://git.kernel.org/cgit/git/git.git/tree/Documentation/RelNotes/2.0.0.txt&quot;&gt;改变&lt;/a&gt;了事情 ：</target>
        </trans-unit>
        <trans-unit id="662ae99d544a2f2757ae74937b9cade59b33c921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-A&lt;/code&gt; = &lt;code&gt;--all&lt;/code&gt; (no such &lt;code&gt;-a&lt;/code&gt;, which gives syntax error) = superset of all untracked/tracked files , unless in Git before 2.0, wherein if the dot filespec is given, then only that particular folder is considered. =&amp;gt; &lt;em&gt;if&lt;/em&gt; the item is recognized, &lt;code&gt;git add -A&lt;/code&gt; will find it and add it.</source>
          <target state="translated">&lt;code&gt;-A&lt;/code&gt; = &lt;code&gt;--all&lt;/code&gt; （没有这样的 &lt;code&gt;-a&lt;/code&gt; ，不会产生语法错误）=所有未跟踪/跟踪的文件的超集，除非在2.0版之前的Git中，如果给出了点文件规范，则仅考虑该特定文件夹。 =&amp;gt; &lt;em&gt;如果&lt;/em&gt;该项目被识别，则 &lt;code&gt;git add -A&lt;/code&gt; 将找到并添加它。</target>
        </trans-unit>
        <trans-unit id="502c4a912ef92578be4d0d2cb2e5ce32676575c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-A&lt;/code&gt; is now the default</source>
          <target state="translated">&lt;code&gt;-A&lt;/code&gt; 现在是默认值</target>
        </trans-unit>
        <trans-unit id="d708df0c2941b055ddd46c07e4ac1756a5590b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-u&lt;/code&gt; = &lt;code&gt;--update&lt;/code&gt; = subset to tracked files =&amp;gt; Add = No; Change = Yes; Delete = Yes. =&amp;gt; &lt;em&gt;if&lt;/em&gt; the item is tracked.</source>
          <target state="translated">&lt;code&gt;-u&lt;/code&gt; = &lt;code&gt;--update&lt;/code&gt; =跟踪文件的子集=&amp;gt;添加=否; 更改=是； 删除=是。 =&amp;gt; &lt;em&gt;是否&lt;/em&gt;跟踪该项目。</target>
        </trans-unit>
        <trans-unit id="fd2ca061733ba545b534757d25516bb55988835c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add &amp;lt;path&amp;gt;&lt;/code&gt; is the same as &quot;&lt;code&gt;git add -A &amp;lt;path&amp;gt;&lt;/code&gt;&quot; now, so that
  &quot;&lt;code&gt;git add dir/&lt;/code&gt;&quot; will notice paths you removed from the directory and
  record the removal.</source>
          <target state="translated">&lt;code&gt;git add &amp;lt;path&amp;gt;&lt;/code&gt; 现在与&amp;ldquo; &lt;code&gt;git add -A &amp;lt;path&amp;gt;&lt;/code&gt; &amp;rdquo;相同，因此&amp;ldquo; &lt;code&gt;git add dir/&lt;/code&gt; &amp;rdquo;将注意到您从目录中删除的路径并记录该删除。</target>
        </trans-unit>
        <trans-unit id="38490d6e0d7cf799267a5bb2a056370c701fd4f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add --ignore-removal .&lt;/code&gt; adds new/modified files in the current directory</source>
          <target state="translated">&lt;code&gt;git add --ignore-removal .&lt;/code&gt; 在当前目录中添加新文件/修改过的文件</target>
        </trans-unit>
        <trans-unit id="c9acd2809252c7725070271b0f7a7526ef78615a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; adds files to index from all folders in working tree.</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; 将文件添加到工作树中所有文件夹的索引中。</target>
        </trans-unit>
        <trans-unit id="18e2244d4ba4dc6e833ef43a854c030001462cb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; is a handy shortcut for doing both of those.</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; 是完成这两个操作的方便快捷方式。</target>
        </trans-unit>
        <trans-unit id="b73d0a634a5bdb98af8cf3b39caf9c7b6ebdd057" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; is equivalent to  &lt;code&gt;git add .; git add -u&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; 等同于 &lt;code&gt;git add .; git add -u&lt;/code&gt; git add -u 。</target>
        </trans-unit>
        <trans-unit id="6a149b861f3dbcb05bdefec322018a7b894d504b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; is equivalent to &lt;code&gt;git add --all&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; 等同于 &lt;code&gt;git add --all&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="107c7403c87b25cb0385a3b312aaa3282ad94cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -A&lt;/code&gt; stages &lt;strong&gt;all changes&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;git add -A&lt;/code&gt; 分阶段进行&lt;strong&gt;所有更改&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e367e583a6733760e5282b509c44eca8c1335acb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u .&lt;/code&gt; adds modified/deleted files in the current directory</source>
          <target state="translated">&lt;code&gt;git add -u .&lt;/code&gt; 在当前目录中添加修改/删除的文件</target>
        </trans-unit>
        <trans-unit id="7295c760901d63583de51b4acf957d06fe40a258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u&lt;/code&gt; and &lt;code&gt;git add -A&lt;/code&gt; in a subdirectory without paths on the command line operate on the entire tree.</source>
          <target state="translated">子目录中没有命令行路径的 &lt;code&gt;git add -u&lt;/code&gt; 和 &lt;code&gt;git add -A&lt;/code&gt; 在整个树上运行。</target>
        </trans-unit>
        <trans-unit id="9668ed380ebd84884d63660a767826d33dc95fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u&lt;/code&gt; is equivalent to &lt;code&gt;git add --update&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git add -u&lt;/code&gt; 等效于 &lt;code&gt;git add --update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="635392fa8db9777fc80dab0e690c2be00e749bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u&lt;/code&gt; looks at all the &lt;em&gt;already&lt;/em&gt; tracked files and stages the changes to those files if they are different or if they have been removed. It does not add any new files, it only stages changes to already tracked files.</source>
          <target state="translated">&lt;code&gt;git add -u&lt;/code&gt; 查看所有&lt;em&gt;已经&lt;/em&gt;跟踪的文件，如果这些文件不同或已被删除，则对这些文件进行更改。 它不会添加任何新文件，只会将更改转移到已跟踪的文件中。</target>
        </trans-unit>
        <trans-unit id="441376f56797301ee85482cf16bd8fc18c65f523" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add -u&lt;/code&gt; stages modifications and deletions, &lt;strong&gt;without new files&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;git add -u&lt;/code&gt; 进行修改和删除， &lt;strong&gt;没有新文件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="705290c98836b17f3e4efed1742c89338aa29335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add .&lt;/code&gt; and &lt;code&gt;git add -A .&lt;/code&gt; add new/modified/deleted files in the current directory</source>
          <target state="translated">&lt;code&gt;git add .&lt;/code&gt; 和 &lt;code&gt;git add -A .&lt;/code&gt; 在当前目录中添加新的/修改的/删除的文件</target>
        </trans-unit>
        <trans-unit id="e5695c1b9f6db93f7acd150fa9df85029d06e1d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add .&lt;/code&gt; equals &lt;code&gt;git add -A .&lt;/code&gt; adds files to index only from current and children folders.</source>
          <target state="translated">&lt;code&gt;git add .&lt;/code&gt; 等于 &lt;code&gt;git add -A .&lt;/code&gt; 仅从当前文件夹和子文件夹添加文件以建立索引。</target>
        </trans-unit>
        <trans-unit id="daace2494c83c0f8b4c42da7c2d316440fe6d00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add .&lt;/code&gt; stages new files and modifications, &lt;strong&gt;without deletions&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;git add .&lt;/code&gt; 分阶段进行新文件和修改， &lt;strong&gt;而不删除&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee54e143b5acb51ffd856c6b42267f91ffecdef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git add&lt;/code&gt; is like &lt;code&gt;git add :/&lt;/code&gt; (&lt;a href=&quot;https://stackoverflow.com/a/31951899/6309&quot;&gt;add everything from top git repo folder&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;git add&lt;/code&gt; 就像 &lt;code&gt;git add :/&lt;/code&gt; （ &lt;a href=&quot;https://stackoverflow.com/a/31951899/6309&quot;&gt;从git repo文件夹的顶部添加所有内容&lt;/a&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8f597db408078e29fe52b30018f7c28b94b667ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;http://pcottle.github.io/learnGitBranching/&quot;&gt;Learn Git Branching&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://pcottle.github.io/learnGitBranching/&quot;&gt;学习Git分支&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4beff0b5f9058b6b7715f661a056b635a007f86f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://onlywei.github.io/explain-git-with-d3/&quot;&gt;Explain Git With D3&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://onlywei.github.io/explain-git-with-d3/&quot;&gt;用D3解释Git&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dbf539f9879e531b8e7c094a368b8b09934741eb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide&quot;&gt;Git for beginners: The definitive practical guide&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide&quot;&gt;Git初学者：权威的实用指南&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e41d3b55d5a471d150111a8ec9e977f4ca9fc445" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://try.github.io/levels/1/challenges/1&quot;&gt;Got 15 minutes and want to learn Git? (in an interactive way)&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://try.github.io/levels/1/challenges/1&quot;&gt;有15分钟的时间想学习Git？&lt;/a&gt;&lt;/em&gt; &lt;em&gt;（以交互方式）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89160f762b1b2a50973c6dcf02f20b20ddabf5d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This answer only applies to &lt;strong&gt;Git version 1.x&lt;/strong&gt;. For Git version 2.x, see other answers.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;此答案仅适用于&lt;strong&gt;Git版本1.x。&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;对于Git版本2.x，请参阅其他答案。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74dd7b2f12d331316557eb38dd8a3b439f79c667" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A warning is issued when these commands are run without a pathspec and when you have local changes outside the current directory&lt;/strong&gt;, because the behaviour in Git 2.0 will be different
  from today's version in such a situation.</source>
          <target state="translated">&lt;strong&gt;当这些命令在没有路径说明的情况下运行时，以及在当前目录之外进行本地更改时，都会发出警告&lt;/strong&gt; ，因为在这种情况下，Git 2.0中的行为将不同于今天的版本。</target>
        </trans-unit>
        <trans-unit id="963bfa4de40b8952c167c4c33c0851d9e25db9a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Detail:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Detail:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33e55402c435c4031710562e30ae9a88d58a4946" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Further reading:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;进一步阅读：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f47383382e83f2a53431afaa324b5219c8584b82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Git Version 1.x&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Git版本1.x&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="e2872544d167f2054bc1e0214f0bcada18f47d29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Git Version 2.x&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Git版本2.x&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="a2fb070431451825a43dbcb68523c4e1049f4a93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Summary:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68a7553c8bcc632ed67b09926e0d59cbca61c705" translate="yes" xml:space="preserve">
          <source>A more distilled quick answer:</source>
          <target state="translated">更加精炼的快速回答。</target>
        </trans-unit>
        <trans-unit id="4775f7e392240fd8132090e1709bc752b81ad7e6" translate="yes" xml:space="preserve">
          <source>And that's all.</source>
          <target state="translated">仅此而已。</target>
        </trans-unit>
        <trans-unit id="2d3e940372091f14953c08d43c0d3e09601e930a" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;git add -A&lt;/code&gt; or &lt;code&gt;git add -u&lt;/code&gt; would operate (starting git 2.0 only) on the &lt;strong&gt;entire working tree&lt;/strong&gt;, and not just on the current path.</source>
          <target state="translated">因为 &lt;code&gt;git add -A&lt;/code&gt; 或 &lt;code&gt;git add -u&lt;/code&gt; 将会在&lt;strong&gt;整个工作树上&lt;/strong&gt;运行（仅从git 2.0开始），而不仅仅是在当前路径上运行。</target>
        </trans-unit>
        <trans-unit id="18796e16a7f497cb2d8a6fed1c9e5f5e6521814a" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;git add .&lt;/code&gt; and &lt;code&gt;git add -A&lt;/code&gt; will stage all new, modified and deleted files in the newer versions of Git.</source>
          <target state="translated">两者 &lt;code&gt;git add .&lt;/code&gt; 和 &lt;code&gt;git add -A&lt;/code&gt; 将在较新版本的Git中暂存所有新文件，已修改文件和已删除文件。</target>
        </trans-unit>
        <trans-unit id="d0743eddc5e71834650d71256f38977cdf3ff971" translate="yes" xml:space="preserve">
          <source>Difference between “git add -A” and “git add .”</source>
          <target state="translated">&quot;git add-A &quot;和 &quot;git add .&quot; 的区别</target>
        </trans-unit>
        <trans-unit id="fbab8f2bbe16a0fb95cfd03c49ae601ac21163f0" translate="yes" xml:space="preserve">
          <source>Does both below (same as &lt;em&gt;git add --all&lt;/em&gt;)</source>
          <target state="translated">是否都在下面（与&lt;em&gt;git add --all一样&lt;/em&gt; ）</target>
        </trans-unit>
        <trans-unit id="4d805e6af22217045bf6e345641aeeaa5744ea4a" translate="yes" xml:space="preserve">
          <source>Empty folders are never added by Git. They are never even listed as 'untracked'. (A workaround is to add a blank file, possibly invisible, to the tracked files.)</source>
          <target state="translated">空文件夹从来不会被 Git 添加。它们甚至不会被列为 &quot;未跟踪&quot;。(一个变通的方法是在跟踪的文件中添加一个空白文件,可能是不可见的,也可能是不可见的)。</target>
        </trans-unit>
        <trans-unit id="3fa983addb40ab569c332d87f82da77fe78c55dd" translate="yes" xml:space="preserve">
          <source>Ensure any hunks/files to be added are accounted for in &lt;code&gt;git status&lt;/code&gt;.</source>
          <target state="translated">确保任何要添加的块/文件都以 &lt;code&gt;git status&lt;/code&gt; 解决 。</target>
        </trans-unit>
        <trans-unit id="47faae2a8cf9b59666d75395c9059db47457781b" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://stackoverflow.com/questions/572549/difference-between-git-add-a-and-git-add/572660#572660&quot;&gt;Charles' instructions&lt;/a&gt;, after testing my proposed understanding would be as follows:</source>
          <target state="translated">根据&lt;a href=&quot;https://stackoverflow.com/questions/572549/difference-between-git-add-a-and-git-add/572660#572660&quot;&gt;查尔斯的指示&lt;/a&gt; ，经过测试，我的理解如下：</target>
        </trans-unit>
        <trans-unit id="0aff0850f1e52edd94532aca98d696a44ddf6c99" translate="yes" xml:space="preserve">
          <source>From the top level of the repository, &quot;git add -A&quot;  to add all items. This works in all versions of Git.</source>
          <target state="translated">从版本库的顶层,&quot;git add -A &quot;来添加所有项目。这在所有版本的Git中都有效。</target>
        </trans-unit>
        <trans-unit id="2fcd704aefdad998338bef1859b9d6820ad1605b" translate="yes" xml:space="preserve">
          <source>Git status will not display subfolder information, that is, untracked files, unless at least one file in that subfolder is tracked. Before such time, Git considers the entire folder out of scope, a la 'empty'. It is empty of tracked items.</source>
          <target state="translated">Git 状态不会显示子文件夹信息,即未被跟踪的文件,除非该子文件夹中至少有一个文件被跟踪。在这之前,Git 会认为整个文件夹不在范围内,就像 &quot;空 &quot;一样。它是空的,没有被跟踪的项目。</target>
        </trans-unit>
        <trans-unit id="5c109476e18d5c4a64459749d8731468d9dfed09" translate="yes" xml:space="preserve">
          <source>Have a good &lt;code&gt;.gitignore&lt;/code&gt; file so that normally only files of interest are untracked and/or unrecognized.</source>
          <target state="translated">拥有一个良好的 &lt;code&gt;.gitignore&lt;/code&gt; 文件，以便通常仅关注和/或无法识别感兴趣的文件。</target>
        </trans-unit>
        <trans-unit id="6c14d22cf82fbaa76e63a1f5887baa374f1e8d25" translate="yes" xml:space="preserve">
          <source>Here is a table for quick understanding:</source>
          <target state="translated">下面是一个表格,供大家快速了解。</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">这里有一个例子。</target>
        </trans-unit>
        <trans-unit id="03d81fc6725ae7db8e5a235ed6f7bbead1226e9c" translate="yes" xml:space="preserve">
          <source>However, in v2.0, the operation can be limited to the current path: just add the explicit dot suffix (which is also valid in Git 1.9 or earlier);</source>
          <target state="translated">但是,在v2.0中,操作可以被限制在当前路径上:只需添加显式点后缀(这在Git 1.9或更早的版本中也有效)。</target>
        </trans-unit>
        <trans-unit id="d1e165100e084b9522d6c2049bc5134e7a1c03bc" translate="yes" xml:space="preserve">
          <source>I hope this may add some more clarity.</source>
          <target state="translated">我希望这样做可以使情况更加明朗一些。</target>
        </trans-unit>
        <trans-unit id="8d6a31ec28ca8c9162623ac6fd414434ccb86f8b" translate="yes" xml:space="preserve">
          <source>If any items are missing, due to invisible files/folders, add them separately.</source>
          <target state="translated">如果有遗漏的项目,由于隐形文件库的原因,请单独添加。</target>
        </trans-unit>
        <trans-unit id="c8dc6364886786dfd6726fe9524c134071fbb162" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; is given when -A option is used, all files in the entire working tree are updated (old versions of Git used to limit the update to the current directory and its subdirectories).</source>
          <target state="translated">如果在使用-A选项时未给出 &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; ，则将更新整个工作树中的所有文件（旧版本的Git用于将更新限制为当前目录及其子目录）。</target>
        </trans-unit>
        <trans-unit id="51babe58b8cec0fb584658ff9ebfce3cd264ba4b" translate="yes" xml:space="preserve">
          <source>If there is a big bug, do 'git reset' to clear the index entirely.</source>
          <target state="translated">如果有大的bug,做'git reset'来完全清除索引。</target>
        </trans-unit>
        <trans-unit id="fde13bf0f8790fc21d82323068da5b1c5f48a631" translate="yes" xml:space="preserve">
          <source>If you are in any subdirectory of the &lt;em&gt;working directory&lt;/em&gt;, &lt;code&gt;git add -A&lt;/code&gt; will add all files from the entire &lt;em&gt;working directory&lt;/em&gt;, and &lt;code&gt;git add .&lt;/code&gt; will add files from your &lt;em&gt;current directory&lt;/em&gt;.</source>
          <target state="translated">如果您位于&lt;em&gt;工作目录的&lt;/em&gt;任何子目录中，则 &lt;code&gt;git add -A&lt;/code&gt; 将添加整个&lt;em&gt;工作目录中的&lt;/em&gt;所有文件，并且 &lt;code&gt;git add .&lt;/code&gt; 将从&lt;em&gt;当前目录&lt;/em&gt;添加文件。</target>
        </trans-unit>
        <trans-unit id="41e1884b3ffbe03732ab798dd8039a1aa56d5ce9" translate="yes" xml:space="preserve">
          <source>If you are located directly at the &lt;em&gt;working directory&lt;/em&gt;, then &lt;code&gt;git add -A&lt;/code&gt; and &lt;code&gt;git add .&lt;/code&gt; work without the difference.</source>
          <target state="translated">如果您直接位于&lt;em&gt;工作目录中&lt;/em&gt; ，则 &lt;code&gt;git add -A&lt;/code&gt; 和 &lt;code&gt;git add .&lt;/code&gt; 工作没有差异。</target>
        </trans-unit>
        <trans-unit id="aa12583f80d3df11d17944625f2be1730ce739b8" translate="yes" xml:space="preserve">
          <source>If your current working directory is &lt;code&gt;/my-repo&lt;/code&gt;, and you do &lt;code&gt;rm rootfile.txt&lt;/code&gt;, then &lt;code&gt;cd subfolder&lt;/code&gt;, followed by &lt;code&gt;git add .&lt;/code&gt;, then it will &lt;em&gt;not&lt;/em&gt; stage the deleted file. But doing &lt;code&gt;git add -A&lt;/code&gt; will certainly stage this change no matter where you perform the command from.</source>
          <target state="translated">如果您当前的工作目录是 &lt;code&gt;/my-repo&lt;/code&gt; ，并且您执行 &lt;code&gt;rm rootfile.txt&lt;/code&gt; ，则执行 &lt;code&gt;cd subfolder&lt;/code&gt; ，然后执行 &lt;code&gt;git add .&lt;/code&gt; ，则它&lt;em&gt;不会&lt;/em&gt;暂存已删除的文件。 但是，无论您从何处执行命令，执行 &lt;code&gt;git add -A&lt;/code&gt; 肯定都会执行此更改。</target>
        </trans-unit>
        <trans-unit id="70bf03d8be3bdbf403407b6c68e4250e0014edc8" translate="yes" xml:space="preserve">
          <source>Important background knowledge about how Git 'adds':</source>
          <target state="translated">关于Git如何 &quot;添加 &quot;的重要背景知识。</target>
        </trans-unit>
        <trans-unit id="893dd36cb8e26bf9403aaed8bd4d85d83d60917c" translate="yes" xml:space="preserve">
          <source>In &lt;strong&gt;Git 2.x&lt;/strong&gt;:</source>
          <target state="translated">在&lt;strong&gt;Git 2.x中&lt;/strong&gt; ：</target>
        </trans-unit>
        <trans-unit id="be7aeaad34b9c679237b5e2c3e33aa7063953747" translate="yes" xml:space="preserve">
          <source>In Git 2 the &lt;code&gt;-A&lt;/code&gt; option is now the default.</source>
          <target state="translated">在Git 2中， &lt;code&gt;-A&lt;/code&gt; 选项现在是默认选项。</target>
        </trans-unit>
        <trans-unit id="87aa644826e8b6e7f0b7611a74ccf66fa5effa52" translate="yes" xml:space="preserve">
          <source>In Git before 2.0, for the two limiters (update and all), the new default is to operate on the entire working tree, instead of the current path (Git 1.9 or earlier),</source>
          <target state="translated">在2.0之前的Git中,对于两个限制器(update和all),新的默认是在整个工作树上操作,而不是当前路径(Git 1.9或更早的路径)。</target>
        </trans-unit>
        <trans-unit id="7093987d748199aa08eb2ec318d95df258304d3d" translate="yes" xml:space="preserve">
          <source>In conclusion, my policy is:</source>
          <target state="translated">总而言之,我的政策是:</target>
        </trans-unit>
        <trans-unit id="3920c9fdf9c3c409a7981048de3b19d425d50983" translate="yes" xml:space="preserve">
          <source>In older versions of Git, &quot;&lt;code&gt;git add &amp;lt;path&amp;gt;&lt;/code&gt;&quot; used to ignore removals.</source>
          <target state="translated">在旧版本的Git中，&amp;ldquo; &lt;code&gt;git add &amp;lt;path&amp;gt;&lt;/code&gt; &amp;rdquo;用于忽略删除。</target>
        </trans-unit>
        <trans-unit id="cf09a3b1dffb5b56a0ab5f57f18f05041efa217a" translate="yes" xml:space="preserve">
          <source>Invisible files, those prefixed with a dot, (dotfiles) are never automatically recognized by Git. They are never even listed as 'untracked'.</source>
          <target state="translated">不可见的文件,那些以点为前缀的文件(dotfiles)永远不会被 Git 自动识别。它们甚至不会被列为 &quot;未跟踪&quot;。</target>
        </trans-unit>
        <trans-unit id="f12b4b31583725582ce4900c9aa4a1f8db4bcd76" translate="yes" xml:space="preserve">
          <source>Limiters may be -u or -A or nil.</source>
          <target state="translated">限制器可以是-u或-A或零。</target>
        </trans-unit>
        <trans-unit id="de9cea7a5d40d8e4ae9e138c0d6fbd77ecd7e2ab" translate="yes" xml:space="preserve">
          <source>Long-form flags:</source>
          <target state="translated">长形旗。</target>
        </trans-unit>
        <trans-unit id="8e63bef8580255c4cea9690e343f96999273ded8" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/RelNotes/1.8.3.txt#L19-L30&quot;&gt;starting git 2.0 (Q1 or Q2 2014)&lt;/a&gt;, when talking about &lt;strong&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/strong&gt; (current path within the working tree), you must use '&lt;code&gt;.&lt;/code&gt;' in the other &lt;code&gt;git add&lt;/code&gt; commands as well.</source>
          <target state="translated">请注意，在谈论&lt;strong&gt; &lt;code&gt;git add .&lt;/code&gt; &lt;/strong&gt;时， &lt;a href=&quot;https://github.com/git/git/blob/master/Documentation/RelNotes/1.8.3.txt#L19-L30&quot;&gt;从git 2.0开始（2014年第一季度或第二季度）&lt;/a&gt; &lt;strong&gt;。&lt;/strong&gt; （工作树中的当前路径），您必须使用' &lt;code&gt;.&lt;/code&gt; 在其他 &lt;code&gt;git add&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="e7b709323f83e80eff4f7ead8be1b2823446f638" translate="yes" xml:space="preserve">
          <source>Note that git 2.7 (Nov. 2015) will allow you to add a folder named &quot;&lt;code&gt;:&lt;/code&gt;&quot;!</source>
          <target state="translated">请注意，git 2.7（2015年11月）将允许您添加一个名为&amp;ldquo; &lt;code&gt;:&lt;/code&gt; &amp;rdquo;的文件夹！</target>
        </trans-unit>
        <trans-unit id="c0062dc518bae3504bc5c8f51ad0d4b20a970fca" translate="yes" xml:space="preserve">
          <source>Now, given that knowledge, we can apply the answers above.</source>
          <target state="translated">现在,鉴于此知识,我们可以应用上面的答案。</target>
        </trans-unit>
        <trans-unit id="ee9e8fbdf681ae55614ea63c82626977b5481bfc" translate="yes" xml:space="preserve">
          <source>One thing that I would add is that if the &lt;code&gt;--interactive&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt; mode is used then &lt;code&gt;git add&lt;/code&gt; will behave as if the update (&lt;code&gt;-u&lt;/code&gt;) flag was used and not add new files.</source>
          <target state="translated">我要添加的一件事是，如果使用 &lt;code&gt;--interactive&lt;/code&gt; 或 &lt;code&gt;-p&lt;/code&gt; 模式，则 &lt;code&gt;git add&lt;/code&gt; 的行为就像使用了update（ &lt;code&gt;-u&lt;/code&gt; ）标志而不添加新文件一样。</target>
        </trans-unit>
        <trans-unit id="2d50cc49f4fa69aa14d326c9861493dc429d6a1e" translate="yes" xml:space="preserve">
          <source>P.S.: information relates to &lt;a href=&quot;https://en.wikipedia.org/wiki/Git#Releases[27][28]&quot;&gt;Git 2.0&lt;/a&gt; (2014-05-28).</source>
          <target state="translated">PS：与&lt;a href=&quot;https://en.wikipedia.org/wiki/Git#Releases[27][28]&quot;&gt;Git 2.0相关的信息&lt;/a&gt; （2014-05-28）。</target>
        </trans-unit>
        <trans-unit id="039206f73a592312ff46445b249ba81996f65130" translate="yes" xml:space="preserve">
          <source>Pathspec may be a filepath or dot, '.' to indicate the current directory.</source>
          <target state="translated">Pathspec可以是一个文件路径或点,'.'表示当前目录。</target>
        </trans-unit>
        <trans-unit id="0160676e693bf648dc3b9b208fa6ab49bf9735b2" translate="yes" xml:space="preserve">
          <source>Remove any desired items from the index if desired.</source>
          <target state="translated">如果需要,可从索引中删除任何需要的项目。</target>
        </trans-unit>
        <trans-unit id="86d6f06bc64fbf3ebaca495d774f66f9e1789fa9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/git/git/commit/29abb33978f713cd0a5cc3687bf61077b0928840&quot;&gt;commit 29abb33&lt;/a&gt; (25 Oct 2015) by &lt;a href=&quot;https://github.com/gitster&quot;&gt;Junio C Hamano (&lt;code&gt;gitster&lt;/code&gt;)&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;https://github.com/gitster&quot;&gt;Junio C &lt;code&gt;gitster&lt;/code&gt; （ gitster ）&lt;/a&gt; &lt;a href=&quot;https://github.com/git/git/commit/29abb33978f713cd0a5cc3687bf61077b0928840&quot;&gt;提交的29abb33&lt;/a&gt; （2015年10月25日） 。</target>
        </trans-unit>
        <trans-unit id="ab25928ba88dbcf31cbcad130d5ed987c6e5179e" translate="yes" xml:space="preserve">
          <source>So for Git 2 the answer is:</source>
          <target state="translated">所以对于Git 2来说,答案是。</target>
        </trans-unit>
        <trans-unit id="53aefd6d20852e179c8667cc243f7550068fc10f" translate="yes" xml:space="preserve">
          <source>Specifying a filespec = '.' (dot), or the current directory, is not recursive unless &lt;code&gt;-A&lt;/code&gt; is also specified. Dot refers strictly to the current directory - it omits paths found above and below.</source>
          <target state="translated">指定filespec ='。 除非也指定 &lt;code&gt;-A&lt;/code&gt; ，否则（点）或当前目录不是递归的。 点严格指的是当前目录-它忽略了上下两个路径。</target>
        </trans-unit>
        <trans-unit id="d6d0b15c0dd06a04d000f53ebbc7482ae48de3a3" translate="yes" xml:space="preserve">
          <source>Stages modified + deleted files</source>
          <target state="translated">阶段性修改+删除文件</target>
        </trans-unit>
        <trans-unit id="6d03bc554be38aa07f62a50d267a07808200b0b4" translate="yes" xml:space="preserve">
          <source>Stages new + modified files</source>
          <target state="translated">新文件+修改后的阶段</target>
        </trans-unit>
        <trans-unit id="ab5c8fda74b21816fb224c4da3bb11fdc78bbeb6" translate="yes" xml:space="preserve">
          <source>That means:</source>
          <target state="translated">这意味着:</target>
        </trans-unit>
        <trans-unit id="24f37766b3880ad3b65ac4edfce725f9bd8de84a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-A&lt;/code&gt; option adds, modifies, and removes index entries to match the working tree.</source>
          <target state="translated">&lt;code&gt;-A&lt;/code&gt; 选项添加，修改和删除索引条目以匹配工作树。</target>
        </trans-unit>
        <trans-unit id="9ff5b6940bd6e84654c466e9fc3a89341953faba" translate="yes" xml:space="preserve">
          <source>The command &lt;code&gt;git add [--all|-A]&lt;/code&gt; appears to be identical to &lt;code&gt;git add .&lt;/code&gt;. Is this correct? If not, how do they differ?</source>
          <target state="translated">&lt;code&gt;git add [--all|-A]&lt;/code&gt; 命令似乎与 &lt;code&gt;git add .&lt;/code&gt; 相同。 。 这个对吗？ 如果没有，它们有何不同？</target>
        </trans-unit>
        <trans-unit id="30b4c4f4406f0284587105748a0be273e04babdc" translate="yes" xml:space="preserve">
          <source>The difference is that &lt;code&gt;git add -A&lt;/code&gt; stages files in &quot;higher, current and subdirectories&quot; that belong to your working Git repository. But doing a &lt;code&gt;git add .&lt;/code&gt; only stages files in the current directory and subdirectories following it (&lt;em&gt;not&lt;/em&gt; the files lying outside, i.e., higher directories).</source>
          <target state="translated">区别在于 &lt;code&gt;git add -A&lt;/code&gt; 将属于您正在使用的Git存储库的&amp;ldquo;更高，当前和子目录&amp;rdquo;中的文件升级。 但是做一个 &lt;code&gt;git add .&lt;/code&gt; 仅暂存当前目录及其后的子目录中的文件（ &lt;em&gt;而不是&lt;/em&gt;位于外部目录（即更高目录）中的文件）。</target>
        </trans-unit>
        <trans-unit id="21e55678bb9009f1db9482429cd7f0cc9c625e84" translate="yes" xml:space="preserve">
          <source>The important point about &lt;code&gt;git add .&lt;/code&gt; is that it looks at the working tree and adds all those paths to the staged changes if they are either changed or are new and not ignored, it does not stage any 'rm' actions.</source>
          <target state="translated">关于 &lt;code&gt;git add .&lt;/code&gt; 就是它会查看工作树并将所有这些路径添加到已暂存的更改中，如果它们已更改或是新的且未被忽略，则不会暂存任何&amp;ldquo; rm&amp;rdquo;操作。</target>
        </trans-unit>
        <trans-unit id="72c68d0bbcd705ab884e6ad481064a6046966ae3" translate="yes" xml:space="preserve">
          <source>The limiters are as follows.</source>
          <target state="translated">限制器如下:</target>
        </trans-unit>
        <trans-unit id="3e188287ad277d6006207d7281fd1ddfb86fb835" translate="yes" xml:space="preserve">
          <source>The old behavior is now available with &lt;code&gt;--ignore-removal&lt;/code&gt;.</source>
          <target state="translated">现在可以通过 &lt;code&gt;--ignore-removal&lt;/code&gt; 使用旧的行为。</target>
        </trans-unit>
        <trans-unit id="e9188ae6d7c46eed3b2c49ecdce30ee328560abb" translate="yes" xml:space="preserve">
          <source>The pathspec is as follows.</source>
          <target state="translated">路径规格如下:</target>
        </trans-unit>
        <trans-unit id="7839726681b51e1336bf8783789ff94e5d54f0ac" translate="yes" xml:space="preserve">
          <source>This blog post might also be helpful to understand in what situation those commands may be applied: &lt;em&gt;&lt;a href=&quot;http://www.geekgumbo.com/2010/05/16/removing-deleted-files-from-your-git-working-directory/&quot;&gt;Removing Deleted Files from your Git Working Directory&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">该博客文章也可能有助于您了解在什么情况下可以应用这些命令： &lt;em&gt;&lt;a href=&quot;http://www.geekgumbo.com/2010/05/16/removing-deleted-files-from-your-git-working-directory/&quot;&gt;从Git Working Directory中删除已删除的文件&lt;/a&gt;&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb426c8066d24f30dc62e2911d67811787d29348" translate="yes" xml:space="preserve">
          <source>Those commands will &lt;strong&gt;operate on the entire tree in Git 2.0 for consistency with &quot;&lt;code&gt;git commit -a&lt;/code&gt;&quot; and other commands&lt;/strong&gt;.
  Because there will be no mechanism to make &quot;&lt;code&gt;git add -u&lt;/code&gt;&quot; behave as if &quot;&lt;code&gt;git add -u .&lt;/code&gt;&quot;, it is important for those who are used to &quot;&lt;code&gt;git add -u&lt;/code&gt;&quot; (without pathspec) updating the index only for paths in the current subdirectory to start training their fingers to explicitly say &quot;&lt;code&gt;git add -u .&lt;/code&gt;&quot; when they mean it before Git 2.0 comes.</source>
          <target state="translated">这些命令将&lt;strong&gt;在Git 2.0中对整个树进行操作，以与&amp;ldquo; &lt;code&gt;git commit -a&lt;/code&gt; &amp;rdquo;和其他命令保持一致&lt;/strong&gt; 。 因为没有机制可以使&amp;ldquo; &lt;code&gt;git add -u&lt;/code&gt; &amp;rdquo;表现得像&amp;ldquo; &lt;code&gt;git add -u .&lt;/code&gt; &amp;rdquo;，所以对于那些习惯于&amp;ldquo; &lt;code&gt;git add -u&lt;/code&gt; &amp;rdquo;（无pathspec）的人来说，仅更新路径索引非常重要在当前子目录中开始训练他们的手指，使其在Git 2.0出现之前就明确地说出&amp;ldquo; &lt;code&gt;git add -u .&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="945c4fe70715f90e18c0575c7aad5f14240c3201" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;.&lt;/code&gt; is added that limits the scope of the update to the directory you are currently in, as per the &lt;a href=&quot;https://git-scm.com/docs/git-add#git-add--A&quot;&gt;Git documentation&lt;/a&gt;</source>
          <target state="translated">当一个 &lt;code&gt;.&lt;/code&gt; 根据&lt;a href=&quot;https://git-scm.com/docs/git-add#git-add--A&quot;&gt;Git文档&lt;/a&gt; ，添加了将更新范围限制为当前所在目录的目录</target>
        </trans-unit>
        <trans-unit id="48341cfb44705c906cf38d92c052ea8f37022178" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://github.com/git/git/blob/f99a38c0121456822f8a9dfb7928eefceaa98201/Documentation/RelNotes/2.0.0.txt#L32-L36&quot;&gt;&lt;strong&gt;Git 2.0, &lt;code&gt;git add -A&lt;/code&gt; is default: &lt;code&gt;git add .&lt;/code&gt; equals &lt;code&gt;git add -A .&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/git/git/blob/f99a38c0121456822f8a9dfb7928eefceaa98201/Documentation/RelNotes/2.0.0.txt#L32-L36&quot;&gt;&lt;strong&gt;Git 2.0中， &lt;code&gt;git add -A&lt;/code&gt; 是默认值： &lt;code&gt;git add .&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;等于 &lt;code&gt;git add -A .&lt;/code&gt; &lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="15a7d031bdb4b85e8d2f61c9063d9a2e8c1a2bdb" translate="yes" xml:space="preserve">
          <source>Without the dot, add all files in the project regardless of the current directory.</source>
          <target state="translated">在没有点的情况下,添加项目中的所有文件,无论当前目录如何,都可以添加。</target>
        </trans-unit>
        <trans-unit id="990a0914d9e0f86470562025357e995fe617bed3" translate="yes" xml:space="preserve">
          <source>You can say &quot;&lt;code&gt;git add --ignore-removal &amp;lt;path&amp;gt;&lt;/code&gt;&quot; to
  add only added or modified paths in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;, if you really want to.</source>
          <target state="translated">如果您确实愿意，可以说&amp;ldquo; &lt;code&gt;git add --ignore-removal &amp;lt;path&amp;gt;&lt;/code&gt; &amp;rdquo;仅在 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 中添加添加或修改的路径。</target>
        </trans-unit>
        <trans-unit id="e250892c1910d08f6fe65e9230024a29e81383a5" translate="yes" xml:space="preserve">
          <source>You can test the differences out with something like this (note that for Git version 2.x your output for &lt;code&gt;git add .&lt;/code&gt;&lt;code&gt;git status&lt;/code&gt;&lt;strong&gt;will&lt;/strong&gt; be different):</source>
          <target state="translated">您可以使用以下类似方法测试差异（请注意，对于Git 2.x版，您的 &lt;code&gt;git add .&lt;/code&gt; 输出 &lt;code&gt;git status&lt;/code&gt; &lt;strong&gt;将&lt;/strong&gt;有所不同）：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
