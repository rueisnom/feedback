<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/7172784">
    <body>
      <group id="7172784">
        <trans-unit id="6ec7098e7762784acaa5749f946f2cdbcb421b9e" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;-H&lt;/code&gt; is short for &lt;code&gt;--header&lt;/code&gt;, &lt;code&gt;-d&lt;/code&gt; for &lt;code&gt;--data&lt;/code&gt;)</source>
          <target state="translated">（ &lt;code&gt;-H&lt;/code&gt; は &lt;code&gt;--header&lt;/code&gt; の略で 、 &lt;code&gt;-d&lt;/code&gt; は &lt;code&gt;--data&lt;/code&gt; の略です ）</target>
        </trans-unit>
        <trans-unit id="2c595410400f94a602a9183032e1acefa3de0ed8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://localhost:8080/xx/xxx/xxxx&quot;&gt;http://localhost:8080/xx/xxx/xxxx&lt;/a&gt;&lt;strong&gt;.xml&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;http://localhost:8080/xx/xxx/xxxx&quot;&gt;http://localhost:8080/xx/xxx/xxxx&lt;/a&gt;&lt;strong&gt;.xml&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b095bb78742fac9a4b452703058887889d489ce2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://httpie.org/&quot;&gt;HTTPie&lt;/a&gt; is a recommended alternative to &lt;code&gt;curl&lt;/code&gt; because you can do just</source>
          <target state="translated">&lt;a href=&quot;https://httpie.org/&quot;&gt;HTTPie&lt;/a&gt;は &lt;code&gt;curl&lt;/code&gt; に代わる推奨手段です。</target>
        </trans-unit>
        <trans-unit id="1631605e3622e6cc110619401ce2a6ae35181a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--data&lt;/code&gt; Means the data you want to send.</source>
          <target state="translated">&lt;code&gt;--data&lt;/code&gt; 送信するデータを意味します。</target>
        </trans-unit>
        <trans-unit id="2d3797ff1d81d7ecf8296cf6a2fee454521bd876" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-X&lt;/code&gt; Means the http verb.</source>
          <target state="translated">&lt;code&gt;-X&lt;/code&gt; http動詞を意味します。</target>
        </trans-unit>
        <trans-unit id="b9e24ab9861b66b40486a9148e81862364a83856" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IdOnly&lt;/code&gt; is a simple &lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;POJO&lt;/a&gt; with an id property.</source>
          <target state="translated">&lt;code&gt;IdOnly&lt;/code&gt; は、idプロパティを持つ単純な&lt;a href=&quot;http://en.wikipedia.org/wiki/Plain_Old_Java_Object&quot;&gt;POJO&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5341e11d542b3eb1f0c7cab5e9490a76cd4b908a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: There are several options for automated request generation in the drop-down list, which is why I thought my post was neccessary in the first place.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注：ドロップダウンリストには自動リクエスト生成のオプションがいくつかあります。そのため、そもそも投稿が必要だと思いました。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f5dcc6d6a24e7aff15f463ac76204ea1f1b635e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The server refused this request because the request entity is in a format not supported by the requested resource for the requested method ().&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;要求エンティティが要求されたメソッド（）の要求されたリソースでサポートされていない形式であるため、サーバーはこの要求を拒否しました。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce877aa6424c45dbcf21e577ce57eb1dad9fcea1" translate="yes" xml:space="preserve">
          <source>Also, it's often still necessary to add the Content Type headers. You can do this once, though, to set a default, of add config files per-method per-site: &lt;a href=&quot;https://github.com/micha/resty#setting-the-default-curl-options&quot;&gt;Setting default RESTY options&lt;/a&gt;</source>
          <target state="translated">また、コンテンツタイプヘッダーを追加する必要がある場合もあります。 ただし、デフォルトを設定するために、メソッドごと、サイトごとに構成ファイルを追加することで、これを一度行うことができ&lt;a href=&quot;https://github.com/micha/resty#setting-the-default-curl-options&quot;&gt;ます。デフォルトのRESTYオプションの設定&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29084ac89e7c92ad1668f4bd433e14c882187d00" translate="yes" xml:space="preserve">
          <source>As an example, create a JSON file, params.json, and add this content to it:</source>
          <target state="translated">例としては、params.jsonというJSONファイルを作成し、そこにこの内容を追加します。</target>
        </trans-unit>
        <trans-unit id="2ff22d2a7c508a74ad4c56bdf909e2856dfed4ae" translate="yes" xml:space="preserve">
          <source>But the following worked:</source>
          <target state="translated">しかし、以下のような効果がありました。</target>
        </trans-unit>
        <trans-unit id="3a727b33401e5297c32ec233f60b6e397546d778" translate="yes" xml:space="preserve">
          <source>Click on &lt;code&gt;Code&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Code&lt;/code&gt; クリックします</target>
        </trans-unit>
        <trans-unit id="39ec0944a8527a8acee2e2239d2fa6fe1b8f9f40" translate="yes" xml:space="preserve">
          <source>For Windows, having a single quote for the &lt;code&gt;-d&lt;/code&gt; value did not work for me, but it did work after changing to double quote. Also I needed to escape double quotes inside curly brackets.</source>
          <target state="translated">Windowsの場合、 &lt;code&gt;-d&lt;/code&gt; 値に単一引用符を付けることは私にとってはうまくいきませんでしたが、二重引用符に変更した後はうまくいきました。 また、中括弧内の二重引用符をエスケープする必要がありました。</target>
        </trans-unit>
        <trans-unit id="045501c419ad9e611818e3848de99634357c821a" translate="yes" xml:space="preserve">
          <source>Full example</source>
          <target state="translated">完全な例</target>
        </trans-unit>
        <trans-unit id="71167a98b027eb8f37fc94a7b48be4b95f155ca7" translate="yes" xml:space="preserve">
          <source>Full example:</source>
          <target state="translated">完全な例です。</target>
        </trans-unit>
        <trans-unit id="5ab33dd7fdf5dc4f836bac86fa0df47e49b4215b" translate="yes" xml:space="preserve">
          <source>Here is another way to do it, if you have dynamic data to be included.</source>
          <target state="translated">動的データが含まれる場合は、別の方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="8aef82571a4e1f6c4e82fd772e340d2b20a49e51" translate="yes" xml:space="preserve">
          <source>How do I POST JSON data with cURL</source>
          <target state="translated">cURLでJSONデータをPOSTするには?</target>
        </trans-unit>
        <trans-unit id="af315488c9b9c3e4ca2ab8e9697399c16e2a996a" translate="yes" xml:space="preserve">
          <source>I am using the below format to test with a web server.</source>
          <target state="translated">私は以下のような形式でWebサーバーを使ってテストしています。</target>
        </trans-unit>
        <trans-unit id="eac9ab94596ce848aedda21692394f1b8509ae9a" translate="yes" xml:space="preserve">
          <source>I just run into the same problem. I could solve it by specifying</source>
          <target state="translated">ちょうど同じ問題に遭遇しました。を指定することで解決できました。</target>
        </trans-unit>
        <trans-unit id="9409daa9e14dc84dd6f53cbc1a872df32f07e0a0" translate="yes" xml:space="preserve">
          <source>I ran into this again today, using Cygwin's cURL 7.49.1 for Windows... And when using &lt;code&gt;--data&lt;/code&gt; or &lt;code&gt;--data-binary&lt;/code&gt; with a JSON argument, cURL got confused and would interpret the &lt;code&gt;{}&lt;/code&gt; in the JSON as a URL template. Adding a &lt;code&gt;-g&lt;/code&gt; argument to turn off cURL globbing fixed that.</source>
          <target state="translated">私は今日、CygwinのcURL 7.49.1 for Windowsを使用してこれに再び遭遇しました...そして、JSON引数で &lt;code&gt;--data&lt;/code&gt; または &lt;code&gt;--data-binary&lt;/code&gt; を使用すると、cURLは混乱し、JSONの &lt;code&gt;{}&lt;/code&gt; をURLとして解釈しますテンプレート。 &lt;code&gt;-g&lt;/code&gt; 引数を追加してcURLグロビングをオフにすることで修正されました。</target>
        </trans-unit>
        <trans-unit id="24b9391e7f544ad59c6d2d3b40834e6f37cb7d42" translate="yes" xml:space="preserve">
          <source>I think this is the easy way of generating the requests through the CURL.</source>
          <target state="translated">CURL経由でリクエストを生成する方法は、これが簡単だと思います。</target>
        </trans-unit>
        <trans-unit id="adb84ae41682a7da6664cf062d74fc448197bb57" translate="yes" xml:space="preserve">
          <source>I use Ubuntu and installed &lt;a href=&quot;https://en.wikipedia.org/wiki/CURL&quot;&gt;cURL&lt;/a&gt; on it. I want to test my Spring REST application with cURL. I wrote my POST code at the Java side. However, I want to test it with cURL. I am trying to post a JSON data. Example data is like this:</source>
          <target state="translated">Ubuntuを使用して&lt;a href=&quot;https://en.wikipedia.org/wiki/CURL&quot;&gt;cURL&lt;/a&gt;をインストールしました。 Spring RESTアプリケーションをcURLでテストしたい。 私はPOSTコードをJava側で記述しました。 ただし、cURLでテストしたいと思います。 JSONデータを投稿しようとしています。 データの例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="35f3a1c28cce1f6e3b166503bd9a519ecb39fde2" translate="yes" xml:space="preserve">
          <source>I use this command:</source>
          <target state="translated">私はこのコマンドを使っています。</target>
        </trans-unit>
        <trans-unit id="e7717dc98a4339dd67f84feef1c2d95496305c66" translate="yes" xml:space="preserve">
          <source>If you configure the SWAGGER to your spring boot application, and invoke any API from your application there you can see that CURL Request as well.</source>
          <target state="translated">SWAGGER を spring ブートアプリケーションに設定し、そこからアプリケーションの API を呼び出すと、その CURL リクエストも見ることができます。</target>
        </trans-unit>
        <trans-unit id="43998105ef9984044e679f70aba0655b94ca5e46" translate="yes" xml:space="preserve">
          <source>If you're testing a lot of JSON send/responses against a RESTful interface, you may want to check out the &lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en&quot;&gt;Postman&lt;/a&gt; plug-in for Chrome (which allows you to manually define web service tests) and its Node.js-based &lt;a href=&quot;https://www.getpostman.com/docs/newman_intro&quot;&gt;Newman&lt;/a&gt; command-line companion (which allows you to automate tests against &quot;collections&quot; of Postman tests.)  Both free and open!</source>
          <target state="translated">RESTfulインターフェースに対して多くのJSON送信/応答をテストしている場合は、Chromeの&lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en&quot;&gt;Postman&lt;/a&gt;プラグイン（Webサービステストを手動で定義できるようにする）とそのNode.jsベースの&lt;a href=&quot;https://www.getpostman.com/docs/newman_intro&quot;&gt;Newman&lt;/a&gt;コマンドを確認することをお勧めします。 -lineコンパニオン（Postmanテストの「コレクション」に対するテストを自動化できるようにします。）無料とオープンの両方！</target>
        </trans-unit>
        <trans-unit id="ea17f2db46fdcff64347e110a9a5f7ae5285ba3f" translate="yes" xml:space="preserve">
          <source>In addition:</source>
          <target state="translated">おまけに</target>
        </trans-unit>
        <trans-unit id="4fe0e6bd543ac791c10c81e98052fff46aebb05d" translate="yes" xml:space="preserve">
          <source>Install and Start &lt;strong&gt;Postman&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Postman&lt;/strong&gt;をインストールして起動する</target>
        </trans-unit>
        <trans-unit id="e3b8291a73bbd533cf0878bc4c8c99a454be9279" translate="yes" xml:space="preserve">
          <source>It returns this error:</source>
          <target state="translated">このエラーを返します。</target>
        </trans-unit>
        <trans-unit id="612968bb7b721b409c995dadbc2873f8542a34b3" translate="yes" xml:space="preserve">
          <source>It speaks JSON by default and will handle both setting the necessary header for you as well encoding data as valid JSON. There is also:</source>
          <target state="translated">デフォルトではJSONを話すことができ、必要なヘッダを設定したり、データを有効なJSONとしてエンコードしたりします。また、以下のような機能もあります。</target>
        </trans-unit>
        <trans-unit id="db68b152fba9ed1ca1a6c5938e0311ff112b5e57" translate="yes" xml:space="preserve">
          <source>It was happily mapped to the Spring controller:</source>
          <target state="translated">それは喜んでスプリングコントローラにマッピングされていました。</target>
        </trans-unit>
        <trans-unit id="ea13ca1e7e7b5bf740f88b531a8e8f70e9cd835e" translate="yes" xml:space="preserve">
          <source>It worked for me using:</source>
          <target state="translated">使っていて効果がありました。</target>
        </trans-unit>
        <trans-unit id="bee34a5c7828ce255ea78d8fdab4c8324fea4502" translate="yes" xml:space="preserve">
          <source>It's a wrapper round CURL which simplifies command line REST requests. You point it to your API endpoint, and it gives you PUT and POST commands. (Examples adapted from the homepage)</source>
          <target state="translated">これは、コマンドラインのRESTリクエストを簡素化するCURLのラッパーです。これを API エンドポイントに指定すると、PUT と POST コマンドを提供します。(例はホームページからの抜粋)</target>
        </trans-unit>
        <trans-unit id="5bb986fbcaba5bc50a31844af3d190597d871038" translate="yes" xml:space="preserve">
          <source>Let's assume this JSON dict format:</source>
          <target state="translated">このJSONのdict形式を想定してみましょう。</target>
        </trans-unit>
        <trans-unit id="e47a4843e867b4aa9584cf0767b290718703696b" translate="yes" xml:space="preserve">
          <source>Looking at the &lt;a href=&quot;https://curl.haxx.se/docs/manpage.html&quot;&gt;curl man page&lt;/a&gt;, I think you can use &lt;a href=&quot;https://curl.haxx.se/docs/manpage.html#-H&quot;&gt;&lt;code&gt;-H&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://curl.haxx.se/docs/manpage.html&quot;&gt;curlのmanページを&lt;/a&gt;見ると、 &lt;a href=&quot;https://curl.haxx.se/docs/manpage.html#-H&quot;&gt; &lt;code&gt;-H&lt;/code&gt; &lt;/a&gt;を使用できると思います。</target>
        </trans-unit>
        <trans-unit id="7cf5a2ede6434fb692fa463eaa403154ee98a411" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;-request POST&lt;/code&gt; is &lt;em&gt;optional&lt;/em&gt; if you use &lt;code&gt;-d&lt;/code&gt;, as the &lt;code&gt;-d&lt;/code&gt; flag implies a POST request.</source>
          <target state="translated">&lt;code&gt;-d&lt;/code&gt; フラグはPOST要求を意味するため、 -dを使用する場合、 &lt;code&gt;-request POST&lt;/code&gt; は&lt;em&gt;オプションです&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="0956f6a9dddc89b2a52c04069f6cae42dc3973c7" translate="yes" xml:space="preserve">
          <source>Note: you need to add jackson and jaxb maven dependencies in your pom.</source>
          <target state="translated">注意:jackson と jaxb の maven 依存関係を pom に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="5f6811d3e9ae49a83d27e7f2cf21f5017f31f516" translate="yes" xml:space="preserve">
          <source>Of course, you should never use BASIC authentication without SSL and a checked certificate.</source>
          <target state="translated">もちろん、SSLとチェック済みの証明書がないBASIC認証は絶対に使ってはいけません。</target>
        </trans-unit>
        <trans-unit id="ecec52a7733eecfbd8611f8daee72c531a55866b" translate="yes" xml:space="preserve">
          <source>On Windows, things are slightly different. See the comment thread.</source>
          <target state="translated">Windowsでは、少し事情が違います。コメントスレッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="3ef83a1ca6f0f3d6875e927b81ed3519a53a6166" translate="yes" xml:space="preserve">
          <source>Please check this &lt;a href=&quot;https://pranayrauthu.github.io/fetcher/#/curl&quot;&gt;tool&lt;/a&gt;. It helps you to easily create curl snippets.</source>
          <target state="translated">この&lt;a href=&quot;https://pranayrauthu.github.io/fetcher/#/curl&quot;&gt;ツールを&lt;/a&gt;確認してください。 カールスニペットを簡単に作成するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="a4a5fc1717bd4e647427ef5cd792f2d1cd72f023" translate="yes" xml:space="preserve">
          <source>See also &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8333920/passing-a-url-with-brackets-to-curl&quot;&gt;Passing a URL with brackets to curl&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/8333920/passing-a-url-with-brackets-to-curl&quot;&gt;括弧付きのURLをcurlに渡す&lt;/a&gt;&lt;/em&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="41c3b8557d942040dedb4c26866de0ecd4ff52c8" translate="yes" xml:space="preserve">
          <source>Select &lt;code&gt;cURL&lt;/code&gt; from the drop-down list</source>
          <target state="translated">ドロップダウンリストから &lt;code&gt;cURL&lt;/code&gt; を選択します</target>
        </trans-unit>
        <trans-unit id="29c585d92bb1196baa093567acab6601b1273d49" translate="yes" xml:space="preserve">
          <source>That is, the following did not work:</source>
          <target state="translated">つまり、以下のことがうまくいかなかったのです。</target>
        </trans-unit>
        <trans-unit id="450e32d7a9b5233861e71ff8aa9a71e0b74563ab" translate="yes" xml:space="preserve">
          <source>The error description is this:</source>
          <target state="translated">エラーの説明はこのようになっています。</target>
        </trans-unit>
        <trans-unit id="623602437b1cb1be33e85bc05e60600caa5eae67" translate="yes" xml:space="preserve">
          <source>Then you run this command:</source>
          <target state="translated">そして、このコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="c1995ca2f1853edf4d70acf0ffb101c395a819c0" translate="yes" xml:space="preserve">
          <source>This is my Java side &lt;code&gt;PUT&lt;/code&gt; code (I have tested GET and DELETE and they work):</source>
          <target state="translated">これは私のJava側の &lt;code&gt;PUT&lt;/code&gt; コードです（GETとDELETEをテストしましたが、動作します）。</target>
        </trans-unit>
        <trans-unit id="96465860a9e443fe00b1fc9c0d761db28e41ed48" translate="yes" xml:space="preserve">
          <source>This worked for me for on Windows10</source>
          <target state="translated">これは、Windows10で動作しました。</target>
        </trans-unit>
        <trans-unit id="ea818889737bcbfb88dad12f938a46c07380ce2a" translate="yes" xml:space="preserve">
          <source>This worked for me:</source>
          <target state="translated">これは私には効果がありました。</target>
        </trans-unit>
        <trans-unit id="661520847eb1af8820774267ddc6bf9e7ace73af" translate="yes" xml:space="preserve">
          <source>This worked well for me, additionally using BASIC authentication:</source>
          <target state="translated">これはBASIC認証を使用して、私にはうまくいきました。</target>
        </trans-unit>
        <trans-unit id="b1b0852fe2e4742ad645f7a7ea0d2b967e04a071" translate="yes" xml:space="preserve">
          <source>This worked well for me.</source>
          <target state="translated">これは私には効果がありました。</target>
        </trans-unit>
        <trans-unit id="8fdc3b09721172460526e35ba32b63060c39edd1" translate="yes" xml:space="preserve">
          <source>Tomcat log:
    &quot;POST /ui/webapp/conf/clear HTTP/1.1&quot; 415 1051</source>
          <target state="translated">Tomcat log:&quot;POST uiwebappconfclear HTTP1.1&quot; 415 1051</target>
        </trans-unit>
        <trans-unit id="69cf7bc129fa06f74e3acd3c0c191b6c3f5b33cb" translate="yes" xml:space="preserve">
          <source>Try to put your data in a file, say &lt;code&gt;body.json&lt;/code&gt; and then use</source>
          <target state="translated">データをファイル、たとえば &lt;code&gt;body.json&lt;/code&gt; に入れてから、</target>
        </trans-unit>
        <trans-unit id="e4298a0c1df2ab8d542b5322840b34f249bde57b" translate="yes" xml:space="preserve">
          <source>Type in your URL, Post Body, Request Headers etc. pp.</source>
          <target state="translated">URL、投稿本文、リクエストヘッダーなどを入力してください。</target>
        </trans-unit>
        <trans-unit id="386ea363bdfc2dd0ad5392f13e87800a06d67067" translate="yes" xml:space="preserve">
          <source>Use -d option to add payload</source>
          <target state="translated">d オプションを使用してペイロードを追加する</target>
        </trans-unit>
        <trans-unit id="f61d492bf37ccf3bcd68927bab7fe4d7b12459a6" translate="yes" xml:space="preserve">
          <source>Using CURL Windows, try this:</source>
          <target state="translated">CURL Windowsを使って、こんな感じで試してみてください。</target>
        </trans-unit>
        <trans-unit id="d2e3b3f0c61bfd4bfd23f29cd060189ac4cf1b3f" translate="yes" xml:space="preserve">
          <source>What is the right format of the cURL command?</source>
          <target state="translated">cURLコマンドの正しい形式は?</target>
        </trans-unit>
        <trans-unit id="85ff01499d11ce21062a9b96027ab58ee226aad3" translate="yes" xml:space="preserve">
          <source>Where,</source>
          <target state="translated">Where,</target>
        </trans-unit>
        <trans-unit id="d74d0db7849a6d807bc8dce16333341c83814c74" translate="yes" xml:space="preserve">
          <source>You can pass the extension of the format you want as the end of the url.
like &lt;a href=&quot;http://localhost:8080/xx/xxx/xxxx&quot;&gt;http://localhost:8080/xx/xxx/xxxx&lt;/a&gt;&lt;strong&gt;.json&lt;/strong&gt;</source>
          <target state="translated">希望するフォーマットの拡張子をURLの末尾として渡すことができます。 &lt;a href=&quot;http://localhost:8080/xx/xxx/xxxx&quot;&gt;http：// localhost：8080 / xx / xxx / xxxx&lt;/a&gt; &lt;strong&gt;.jsonなど&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69cfa1b82c90ccbc80a1a094f2ef2f5ae924e6b9" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop&quot;&gt;Postman&lt;/a&gt; with its intuitive GUI to assemble your &lt;code&gt;cURL&lt;/code&gt; command.</source>
          <target state="translated">&lt;a href=&quot;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop&quot;&gt;Postman&lt;/a&gt;とその直感的なGUIを使用して、 &lt;code&gt;cURL&lt;/code&gt; コマンドを組み立てることができます。</target>
        </trans-unit>
        <trans-unit id="d77e5f1b4075c06249df7a0a2458100b53fa5e9c" translate="yes" xml:space="preserve">
          <source>You can use postman to convert to CURL</source>
          <target state="translated">postmanを使ってCURLに変換することができます。</target>
        </trans-unit>
        <trans-unit id="fbc62b016c693c15d9da36cfe8c41ca735dda418" translate="yes" xml:space="preserve">
          <source>You could also put your JSON content in a file and pass it to curl using the &lt;code&gt;--file-upload&lt;/code&gt; option via standard input, like this:</source>
          <target state="translated">次のように、JSONコンテンツをファイルに入れ、標準入力を介して &lt;code&gt;--file-upload&lt;/code&gt; オプションを使用してcurlに渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="565516c37759a34e84db3b151a88a652534dccf4" translate="yes" xml:space="preserve">
          <source>You might find resty useful:
&lt;a href=&quot;https://github.com/micha/resty&quot;&gt;https://github.com/micha/resty&lt;/a&gt;</source>
          <target state="translated">あなたはrestyが便利だと思うかもしれません： &lt;a href=&quot;https://github.com/micha/resty&quot;&gt;https&lt;/a&gt; ： //github.com/micha/resty</target>
        </trans-unit>
        <trans-unit id="b681cccb1cd3640d20da5c4e5091ece9602f0772" translate="yes" xml:space="preserve">
          <source>You need to set your content-type to application/json. But &lt;a href=&quot;https://curl.haxx.se/docs/manpage.html#-d&quot;&gt;&lt;code&gt;-d&lt;/code&gt;&lt;/a&gt; sends the Content-Type &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, which is not accepted on Spring's side.</source>
          <target state="translated">content-typeをapplication / jsonに設定する必要があります。 しかし、 &lt;a href=&quot;https://curl.haxx.se/docs/manpage.html#-d&quot;&gt; &lt;code&gt;-d&lt;/code&gt; &lt;/a&gt;はContent-Type &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; を送信しますが、これはSpring側では受け入れられません。</target>
        </trans-unit>
        <trans-unit id="a3321edc98678b9295a5cff4bac44aff90bd725b" translate="yes" xml:space="preserve">
          <source>copy &amp;amp; paste your &lt;code&gt;cURL&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;cURL&lt;/code&gt; コマンドをコピーして貼り付けます</target>
        </trans-unit>
        <trans-unit id="7b2ca07c3819a91995eb8efb86fb19142b4ded83" translate="yes" xml:space="preserve">
          <source>for headers, and</source>
          <target state="translated">ヘッダには</target>
        </trans-unit>
        <trans-unit id="55feb8c41bb58cb8f5cc83504fcca99d03749063" translate="yes" xml:space="preserve">
          <source>for query string parameters. If you have a large chunk of data, you can also read it from a file have it be JSON encoded:</source>
          <target state="translated">クエリ文字列のパラメータを指定します。大きなデータの塊がある場合は、ファイルから読み込んでJSONエンコードすることもできます。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="71185abce8c439947d8e30edf211fc7fdf26cdb3" translate="yes" xml:space="preserve">
          <source>use -H 'Accept: application/json' to add accept type header</source>
          <target state="translated">use -H 'Accept:applicationjson' で Accept 型のヘッダを追加します。</target>
        </trans-unit>
        <trans-unit id="5ab0e378cc846ef53d9651c99f26482f696af46b" translate="yes" xml:space="preserve">
          <source>use -H 'Content-Type: application/json' to add content type header</source>
          <target state="translated">コンテンツタイプのヘッダを追加するために -H 'Content-Type:applicationjson' を使用します。</target>
        </trans-unit>
        <trans-unit id="5b7fcfefe346b5ce6edea2b1e2ad38ceac6331d3" translate="yes" xml:space="preserve">
          <source>use -X POST to use POST method</source>
          <target state="translated">POSTメソッドを使用するには、-X POSTを使用します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
