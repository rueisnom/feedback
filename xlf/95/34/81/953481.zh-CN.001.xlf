<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/953481">
    <body>
      <group id="953481">
        <trans-unit id="dabae0c3f1b6a2576f3c16316d2feface5f9b9bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/users/157971/robert-dailey&quot;&gt;Robert Dailey&lt;/a&gt; proposes &lt;a href=&quot;https://stackoverflow.com/questions/953481/restore-a-deleted-file-in-a-git-repo/14922749#comment33996752_14922749&quot;&gt;in the comments&lt;/a&gt; the following alias:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/users/157971/robert-dailey&quot;&gt;Robert Dailey&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/953481/restore-a-deleted-file-in-a-git-repo/14922749#comment33996752_14922749&quot;&gt;在评论中&lt;/a&gt;建议使用以下别名：</target>
        </trans-unit>
        <trans-unit id="b942df95d76fedcb4f37698d1edaeafea85f126b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git log --stat | grep --context=5 *word*&lt;/code&gt; # recommended if you hardly
remember anything</source>
          <target state="translated">&lt;code&gt;git log --stat | grep --context=5 *word*&lt;/code&gt; grep --context = 5 * word * ＃如果您几乎不记得任何内容，建议使用</target>
        </trans-unit>
        <trans-unit id="80115968f8fb670b75b5527f5cc71186dcdc863f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git status&lt;/code&gt; for the reason:</source>
          <target state="translated">&lt;code&gt;git status&lt;/code&gt; 的原因：</target>
        </trans-unit>
        <trans-unit id="11fa02359bac8a9eb8e2f9fe75505f719e82487d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Note the trailing space on the end of each command.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（请注意每个命令末尾的空格。）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1809986235a116b609fa47900a74af7cfaf7ca73" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;3&lt;/em&gt;. Now using the commit id bfe68bd117e1091c96d2976c99b3bcc8310bebe7 do:</source>
          <target state="translated">&lt;em&gt;3&lt;/em&gt; 。 现在使用提交ID bfe68bd117e1091c96d2976c99b3bcc8310bebe7做：</target>
        </trans-unit>
        <trans-unit id="39450d5b2f12766c76604f10febccc07503c7f65" translate="yes" xml:space="preserve">
          <source>Actually, this question is directly about &lt;code&gt;Git&lt;/code&gt;, but somebody like me works with GUI tools like &lt;code&gt;WebStorm&lt;/code&gt; VCS other than knowing about git &lt;code&gt;cli&lt;/code&gt; commands.</source>
          <target state="translated">实际上，这个问题直接与 &lt;code&gt;Git&lt;/code&gt; 有关，但是像我这样的 &lt;code&gt;WebStorm&lt;/code&gt; 除了了解git &lt;code&gt;cli&lt;/code&gt; 命令外，还使用WebStorm VCS之类的GUI工具。</target>
        </trans-unit>
        <trans-unit id="f4ced7f3c540642c7ece5083ae3199ae1e73db0b" translate="yes" xml:space="preserve">
          <source>And &lt;a href=&quot;https://stackoverflow.com/users/1857677/jegan&quot;&gt;jegan&lt;/a&gt; adds &lt;a href=&quot;https://stackoverflow.com/questions/953481/find-and-restore-a-deleted-file-in-a-git-repository/14922749?noredirect=1#comment80261163_14922749&quot;&gt;in the comments&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/users/1857677/jegan&quot;&gt;jegan&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/953481/find-and-restore-a-deleted-file-in-a-git-repository/14922749?noredirect=1#comment80261163_14922749&quot;&gt;在评论中&lt;/a&gt;添加：</target>
        </trans-unit>
        <trans-unit id="2a9f1fc121f2083d8090138717af3e60269b37c9" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;readme.md&lt;/code&gt; has been restored into the repository.</source>
          <target state="translated">并且 &lt;code&gt;readme.md&lt;/code&gt; 已还原到存储库中。</target>
        </trans-unit>
        <trans-unit id="528ed46ff5f66e7df5abbfc54aa968b91ac12884" translate="yes" xml:space="preserve">
          <source>And if you've continued work, and realized later that you didn't want to commit that deletion commit, you could revert it using.</source>
          <target state="translated">如果你继续工作,后来发现你不想再提交那个删除的提交,你可以使用还原它。</target>
        </trans-unit>
        <trans-unit id="d278e2c014d33fea226d3f89271e390ab6141f31" translate="yes" xml:space="preserve">
          <source>And now, I can see my desire deleted file. I just double-click on the filename and it recovers.</source>
          <target state="translated">而现在,我可以看到我渴望删除的文件了。我只要双击文件名,它就能恢复。</target>
        </trans-unit>
        <trans-unit id="506fea15cfdfb0525761b69499ea49f2919a78fd" translate="yes" xml:space="preserve">
          <source>And presto, your file is back.</source>
          <target state="translated">然后,你的文件就回来了</target>
        </trans-unit>
        <trans-unit id="53fba75201e3acb1d7f57ca3f5dcec031f49387f" translate="yes" xml:space="preserve">
          <source>As of Git 2.23 there is actually a &lt;code&gt;restore&lt;/code&gt; command. It is &lt;strong&gt;still experimental&lt;/strong&gt; but in order to restore something you removed in a commit (4711174 in this case) you can then type:</source>
          <target state="translated">从Git 2.23开始，实际上有一个 &lt;code&gt;restore&lt;/code&gt; 命令。 它&lt;strong&gt;仍处于试验阶段，&lt;/strong&gt;但是为了恢复在提交中删除的内容（在这种情况下为4711174），可以输入：</target>
        </trans-unit>
        <trans-unit id="8e1f6a7179783dd6c009c4d66e3695fd0fb40bef" translate="yes" xml:space="preserve">
          <source>As the commit id references the commit where the file was already deleted you need to reference the commit just before bfe68b which you can do by appending &lt;code&gt;^1&lt;/code&gt;. This means: give me the commit just before bfe68b.</source>
          <target state="translated">由于提交ID引用了已删除文件的提交，因此您需要引用bfe68b之前的提交，您可以通过添加 &lt;code&gt;^1&lt;/code&gt; 来进行引用。 这意味着：在bfe68b之前给我提交。</target>
        </trans-unit>
        <trans-unit id="45d24e1b7190811eeeb4babc40aea2c9b90eb2c8" translate="yes" xml:space="preserve">
          <source>Based on Charles Bailey's excellent answer here is my one liner:</source>
          <target state="translated">根据查尔斯-贝利的精彩回答,以下是我的单行本。</target>
        </trans-unit>
        <trans-unit id="8ed235eedcfe9ae37e8840b06fde1b7e9eba9049" translate="yes" xml:space="preserve">
          <source>Best way to do that, try it</source>
          <target state="translated">最好的办法是,试一试</target>
        </trans-unit>
        <trans-unit id="0a1c4d67e69af63ac5bdc1fca4caa381ee455a88" translate="yes" xml:space="preserve">
          <source>Crisis averted.</source>
          <target state="translated">摆脱了危机。</target>
        </trans-unit>
        <trans-unit id="1e5d96f205dd15a9aa6a51baf15589940c05aa25" translate="yes" xml:space="preserve">
          <source>Find and restore a deleted file in a Git repository</source>
          <target state="translated">查找并恢复Git仓库中已删除的文件</target>
        </trans-unit>
        <trans-unit id="60ed8682da6b48496d12c30b3c28f037dcb0f5a9" translate="yes" xml:space="preserve">
          <source>Find the commit that deleted your file:</source>
          <target state="translated">找到删除了你的文件的提交。</target>
        </trans-unit>
        <trans-unit id="e1c70b3a15cabe84eff899597caa1280f380227a" translate="yes" xml:space="preserve">
          <source>Find the last commit that affected the given path. As the file isn't in the HEAD commit, this commit must have deleted it.</source>
          <target state="translated">找到影响给定路径的最后一次提交。由于该文件不在head提交中,所以这个提交一定是删除了它。</target>
        </trans-unit>
        <trans-unit id="b7d5ca8f8b0c81867920d9b2c2aaf9da1d827ccd" translate="yes" xml:space="preserve">
          <source>First find the commit id of the commit that deleted your file.
It will give you a summary of commits which deleted files.</source>
          <target state="translated">首先找到删除了你的文件的提交的提交ID。它将给你一个删除文件的提交摘要。</target>
        </trans-unit>
        <trans-unit id="65ee140d164a1411ca2eb787e97b195ab1493a8c" translate="yes" xml:space="preserve">
          <source>First of all, get a latest stable commit in which you have that file by -</source>
          <target state="translated">首先,通过以下方式获取最新的稳定提交,在其中你有该文件的最新稳定提交:--</target>
        </trans-unit>
        <trans-unit id="a6d1da03d26b2e516b35765d2ec62b00f6dbe6df" translate="yes" xml:space="preserve">
          <source>For setting the alias from the command line, I used this command:</source>
          <target state="translated">对于在命令行中设置别名,我使用了这个命令。</target>
        </trans-unit>
        <trans-unit id="c4310a7ec429aa473bfe875f9d1041e540e53d06" translate="yes" xml:space="preserve">
          <source>Get the id of the commit where the file was deleted using one of the ways below.</source>
          <target state="translated">使用以下方法之一,获取文件被删除的提交的id。</target>
        </trans-unit>
        <trans-unit id="892e36379b1375f78f401ba5d972e81cd7966e71" translate="yes" xml:space="preserve">
          <source>I also have this problem using below code retrieve previous file to local directory</source>
          <target state="translated">我也有这样的问题,使用下面的代码检索以前的文件到本地目录</target>
        </trans-unit>
        <trans-unit id="c2e5655cc00ee85dc9c46d8f7913eebe5b6b5982" translate="yes" xml:space="preserve">
          <source>I came to this question looking to restore a file I just deleted but I hadn't yet committed the change.  Just in case you find yourself in this situation, all you need to do is the following:</source>
          <target state="translated">我来到这个问题,想恢复我刚刚删除的文件,但我还没有提交更改。万一你发现自己处于这种情况,你需要做的就是以下几点。</target>
        </trans-unit>
        <trans-unit id="221cd6e4822d0d798ec7e12dd41e30d6f6b84045" translate="yes" xml:space="preserve">
          <source>I had the same question. Without knowing it, I had created a &lt;strong&gt;&lt;em&gt;dangling commit&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">我有同样的问题。 不知不觉中，我创建了一个&lt;strong&gt;&lt;em&gt;悬空的提交&lt;/em&gt;&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="f31a936598e717264b5a769e7b5927c8a7d9158c" translate="yes" xml:space="preserve">
          <source>I have lost a file, deleted by mistake a few commits ago?</source>
          <target state="translated">我曾经丢失过一个文件,是前段时间误删的?</target>
        </trans-unit>
        <trans-unit id="2595bde55d452196fcb3d6a3c445cb3085999c6a" translate="yes" xml:space="preserve">
          <source>I know I can checkout a file using &lt;code&gt;git checkout HEAD^ foo.bar&lt;/code&gt;, but I don't really know when that file was deleted.</source>
          <target state="translated">我知道我可以使用 &lt;code&gt;git checkout HEAD^ foo.bar&lt;/code&gt; 来签出文件，但是我真的不知道何时删除该文件。</target>
        </trans-unit>
        <trans-unit id="eba6467d7396b7b9fb721b926bdf685135952115" translate="yes" xml:space="preserve">
          <source>I know my answer is not &lt;code&gt;Git&lt;/code&gt; commands but it is fast, reliable and easy for beginner and professional developers. &lt;strong&gt;Webstorm&lt;/strong&gt; VCS tools are awesome and perfect for working with &lt;code&gt;Git&lt;/code&gt; and doesn't need any other plugin or tools.</source>
          <target state="translated">我知道我的答案不是 &lt;code&gt;Git&lt;/code&gt; 命令，但是对于初学者和专业开发人员来说，它是快速，可靠且容易的。 &lt;strong&gt;Webstorm&lt;/strong&gt; VCS工具非常棒，非常适合与 &lt;code&gt;Git&lt;/code&gt; 一起使用，不需要任何其他插件或工具。</target>
        </trans-unit>
        <trans-unit id="89dfcdd9e8bbd725293e7a18ad19489f75a4a267" translate="yes" xml:space="preserve">
          <source>I know this is an old thread, but you could always &lt;code&gt;git revert&lt;/code&gt; your commit which deleted the file.  (&lt;em&gt;This assumes that the deletion was the only change in the commit.&lt;/em&gt;)</source>
          <target state="translated">我知道这是一个旧线程，但是您始终可以 &lt;code&gt;git revert&lt;/code&gt; 已删除文件的提交。 （ &lt;em&gt;这假定删除是提交中的唯一更改。&lt;/em&gt; ）</target>
        </trans-unit>
        <trans-unit id="28f0c9f33dcb9f48819ddbb5b84b017800f63e4f" translate="yes" xml:space="preserve">
          <source>I right click on the path that contains the deleted file, then go to &lt;code&gt;Git&lt;/code&gt; and then click on &lt;code&gt;Show History&lt;/code&gt;.</source>
          <target state="translated">我右键单击包含已删除文件的路径，然后转到 &lt;code&gt;Git&lt;/code&gt; ，然后单击&amp;ldquo; &lt;code&gt;Show History&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34603449f52d2c27625f1c05d738504c8702e977" translate="yes" xml:space="preserve">
          <source>I'm hoping I don't have to manually browse my logs, checkout the entire project for a given SHA and then manually copy that file into my original project checkout.</source>
          <target state="translated">我希望我不需要手动浏览我的日志,为一个给定的SHA勾选整个项目,然后手动将该文件复制到我原来的项目勾选中。</target>
        </trans-unit>
        <trans-unit id="96f9ed9f775c3fe9b385285a04678fd884297057" translate="yes" xml:space="preserve">
          <source>I've got &lt;a href=&quot;http://blog.loxal.net/2012/03/git-checkout-get-back-deleted-file-w.html&quot;&gt;this solution&lt;/a&gt;.</source>
          <target state="translated">我有&lt;a href=&quot;http://blog.loxal.net/2012/03/git-checkout-get-back-deleted-file-w.html&quot;&gt;这个解决方案&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b9db0b68376fa55c6fdabc40df1dba2b3aecdec" translate="yes" xml:space="preserve">
          <source>If the deletion has been committed, find the commit where it happened, then recover the file from this commit.</source>
          <target state="translated">如果删除的文件已经被提交了,那么就从这个提交中找到发生的提交,然后从这个提交中恢复文件。</target>
        </trans-unit>
        <trans-unit id="de0baa3cc9dfb8decb61e77e1abd6762204debec" translate="yes" xml:space="preserve">
          <source>If the deletion has not been committed, the command below will restore the deleted file in the working tree.</source>
          <target state="translated">如果还没有进行删除,下面的命令将恢复工作树中被删除的文件。</target>
        </trans-unit>
        <trans-unit id="047447bc7a2342a1cf826219e28d4d62355ac46f" translate="yes" xml:space="preserve">
          <source>If you are using zsh and have the EXTENDED_GLOB option enabled, the caret symbol won't work. You can use &lt;code&gt;~1&lt;/code&gt; instead.</source>
          <target state="translated">如果您使用的是zsh并启用了EXTENDED_GLOB选项，则插入符号将不起作用。 您可以改用 &lt;code&gt;~1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ad0fd02f4ad4c1d4a196c2a604eb48301224827" translate="yes" xml:space="preserve">
          <source>If you know the commit that deleted the file(s), run this command where &lt;code&gt;&amp;lt;SHA1_deletion&amp;gt;&lt;/code&gt; is the commit that deleted the file:</source>
          <target state="translated">如果您知道删除文件的提交，请运行以下命令，其中 &lt;code&gt;&amp;lt;SHA1_deletion&amp;gt;&lt;/code&gt; 是删除文件的提交：</target>
        </trans-unit>
        <trans-unit id="89f2b3156c4a0523a98bf97aad52df1cade97b35" translate="yes" xml:space="preserve">
          <source>If you know the filename, this is an easy way with basic commands:</source>
          <target state="translated">如果你知道文件名,这是个很简单的方法,有了基本的命令就可以了。</target>
        </trans-unit>
        <trans-unit id="e185b7df9803a6f09dc1c3b8a6c5a8d43c9e566b" translate="yes" xml:space="preserve">
          <source>If you only made changes and deleted a file, but not commit it, and now you broke up with your changes</source>
          <target state="translated">如果你只做了修改,删除了一个文件,但没有提交,现在你就和你的修改分手了</target>
        </trans-unit>
        <trans-unit id="55de8ec5031d361ce11841eb319744a3ddadf9d1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re insane, use &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-bisect.html&quot;&gt;&lt;code&gt;git-bisect&lt;/code&gt;&lt;/a&gt;. Here's what to do:</source>
          <target state="translated">如果您疯了，请使用&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-bisect.html&quot;&gt; &lt;code&gt;git-bisect&lt;/code&gt; &lt;/a&gt; 。 这是做什么的：</target>
        </trans-unit>
        <trans-unit id="074756c56c5e5901b0b6db4edac45a2b54418cd5" translate="yes" xml:space="preserve">
          <source>In case you are looking for the path of the file to recover, the following command will display a summary of all deleted files.</source>
          <target state="translated">如果你正在寻找要恢复的文件路径,下面的命令将显示所有删除的文件的摘要。</target>
        </trans-unit>
        <trans-unit id="6ec913e2e6af37b4f0d63506091201ac81ca2d3c" translate="yes" xml:space="preserve">
          <source>In many cases, it can be useful to use &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Core_Utilities&quot;&gt;coreutils&lt;/a&gt; (grep, sed, etc.) in conjunction with Git. I already know these tools quite well, but Git less so. If I wanted to do a search for a deleted file, I would do the following:</source>
          <target state="translated">在许多情况下，将&lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Core_Utilities&quot;&gt;coreutils&lt;/a&gt; （grep，sed等）与Git结合使用可能会很有用。 我已经非常了解这些工具，但是Git却不太了解。 如果要搜索已删除的文件，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="f4d133a6f805d02d6b82eca58118642ecaad7718" translate="yes" xml:space="preserve">
          <source>In order to restore all deleted file with git, you can also do : &lt;code&gt;git checkout $(git ls-files --deleted)&lt;/code&gt;</source>
          <target state="translated">为了使用git恢复所有已删除的文件，您还可以执行以下操作： &lt;code&gt;git checkout $(git ls-files --deleted)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ed51457543786e9c27e2fc70cbaf6d8cd9c60ee" translate="yes" xml:space="preserve">
          <source>In our case we accidentally deleted files in a commit and some commit later we realized our mistake and wanted to get back all the files that were deleted but not those that were modified.</source>
          <target state="translated">在我们的案例中,我们不小心删除了一个提交中的文件,一些提交之后,我们意识到了自己的错误,想找回所有被删除的文件,但没有找回那些被修改的文件。</target>
        </trans-unit>
        <trans-unit id="4672ee90169ea52e4f4e8141cd6de83da85a14de" translate="yes" xml:space="preserve">
          <source>Inspect each dangling commit</source>
          <target state="translated">检查每一个悬而未决的提交</target>
        </trans-unit>
        <trans-unit id="7fc020ef8a6723bd5c1c9e692f926685d938d21a" translate="yes" xml:space="preserve">
          <source>It was tested on Git version 1.7.5.4.</source>
          <target state="translated">在Git版本1.7.5.4上进行了测试。</target>
        </trans-unit>
        <trans-unit id="15fb860c3de4ff3a3af657b535131c40c2d0fa0d" translate="yes" xml:space="preserve">
          <source>Just like others have stated before me.</source>
          <target state="translated">就像其他人在我之前说的那样。</target>
        </trans-unit>
        <trans-unit id="29e8046e797ae7f62445d6fa63a5aea3286e52be" translate="yes" xml:space="preserve">
          <source>List all the commits for that file.</source>
          <target state="translated">列出该文件的所有提交。</target>
        </trans-unit>
        <trans-unit id="a83a975721f20998fd5fde378ab5f28a5137d46f" translate="yes" xml:space="preserve">
          <source>List dangling commits</source>
          <target state="translated">悬而未决的承付款项清单</target>
        </trans-unit>
        <trans-unit id="ade6b7703dd09f66cb6252dcb63a6cabb7b0d80a" translate="yes" xml:space="preserve">
          <source>My files reappeared when I moved to the dangling commit.</source>
          <target state="translated">我的文件在移动到dangling commit时又出现了。</target>
        </trans-unit>
        <trans-unit id="4acfc8175610283caaa61e30c26f3fd31c21c666" translate="yes" xml:space="preserve">
          <source>My new favorite alias, based on &lt;a href=&quot;https://stackoverflow.com/users/525305/bonyiii&quot;&gt;bonyiii&lt;/a&gt;'s &lt;a href=&quot;https://stackoverflow.com/a/11301004/6309&quot;&gt;answer&lt;/a&gt; (upvoted), and my own answer about &quot;&lt;a href=&quot;https://stackoverflow.com/a/7005698/6309&quot;&gt;Pass an argument to a Git alias command&lt;/a&gt;&quot;:</source>
          <target state="translated">我的新的最喜欢的别名基于&lt;a href=&quot;https://stackoverflow.com/users/525305/bonyiii&quot;&gt;bonyiii&lt;/a&gt;的&lt;a href=&quot;https://stackoverflow.com/a/11301004/6309&quot;&gt;答案&lt;/a&gt; （已提议），以及我自己的有关&amp;ldquo; &lt;a href=&quot;https://stackoverflow.com/a/7005698/6309&quot;&gt;将参数传递给Git别名命令&lt;/a&gt; &amp;rdquo;的答案：</target>
        </trans-unit>
        <trans-unit id="b209eefbe269f1a1c3a36e2ed2a82c77eb6680bd" translate="yes" xml:space="preserve">
          <source>Note the &lt;strong&gt;^&lt;/strong&gt; after the commit id as we want to restore something from the commit &lt;strong&gt;before&lt;/strong&gt; the one that deleted the file.</source>
          <target state="translated">请注意提交ID后的&lt;strong&gt;^&lt;/strong&gt; ，因为我们要从删除文件&lt;strong&gt;之前&lt;/strong&gt;的提交中恢复某些内容。</target>
        </trans-unit>
        <trans-unit id="fb2155da1610b0786a85a08068ac533570c67243" translate="yes" xml:space="preserve">
          <source>Note- &lt;code&gt;84sdhfddbddd&lt;/code&gt; is your &lt;code&gt;commit id&lt;/code&gt;</source>
          <target state="translated">注意 &lt;code&gt;84sdhfddbddd&lt;/code&gt; 是您的 &lt;code&gt;commit id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3e476b3e742e54e39d9908d875dda449b796377" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;git log&lt;/code&gt; shows:</source>
          <target state="translated">现在 &lt;code&gt;git log&lt;/code&gt; 显示：</target>
        </trans-unit>
        <trans-unit id="3d854145f4184e9cf266cf0e2684ab02d15cf51e" translate="yes" xml:space="preserve">
          <source>Now it's time to run the automated test. The shell command &lt;code&gt;'[ -e foo.bar ]'&lt;/code&gt; will return 0 if &lt;code&gt;foo.bar&lt;/code&gt; exists, and 1 otherwise. The &quot;run&quot; command of &lt;code&gt;git-bisect&lt;/code&gt; will use binary search to automatically find the first commit where the test fails. It starts halfway through the range given (from good to bad) and cuts it in half based on the result of the specified test.</source>
          <target state="translated">现在该运行自动化测试了。 如果 &lt;code&gt;foo.bar&lt;/code&gt; 存在，shell命令 &lt;code&gt;'[ -e foo.bar ]'&lt;/code&gt; 将返回0，否则返回1。 &lt;code&gt;git-bisect&lt;/code&gt; 的&amp;ldquo;运行&amp;rdquo;命令将使用二进制搜索来自动找到测试失败的第一个提交。 它从给定范围的一半开始（从好到坏），并根据指定测试的结果将其切成两半。</target>
        </trans-unit>
        <trans-unit id="68b2793e95c052d7a0fe229e5d3de66be216dd24" translate="yes" xml:space="preserve">
          <source>Now you're at the commit which deleted it. From here, you can jump back to the future and use &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-revert.html&quot;&gt;&lt;code&gt;git-revert&lt;/code&gt;&lt;/a&gt; to undo the change,</source>
          <target state="translated">现在您处于删除它的提交。 从这里开始，您可以跳回到将来，并使用&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-revert.html&quot;&gt; &lt;code&gt;git-revert&lt;/code&gt; &lt;/a&gt;撤消更改，</target>
        </trans-unit>
        <trans-unit id="c40b6f9f32863fe21a40018099206d6d7df5c368" translate="yes" xml:space="preserve">
          <source>Or in one command, if &lt;code&gt;$file&lt;/code&gt; is the file in question.</source>
          <target state="translated">或者在一个命令中，如果 &lt;code&gt;$file&lt;/code&gt; 是有问题的文件。</target>
        </trans-unit>
        <trans-unit id="503ff517174b07a1604eb5557f16426918a33625" translate="yes" xml:space="preserve">
          <source>Put this in your &lt;code&gt;.bash_profile&lt;/code&gt; (or other relevant file that loads when you open a command shell):</source>
          <target state="translated">将其放在您的 &lt;code&gt;.bash_profile&lt;/code&gt; （或打开命令外壳程序时加载的其他相关文件）中：</target>
        </trans-unit>
        <trans-unit id="d41fceebb483be92b84268b258f3ee2f0ab02d74" translate="yes" xml:space="preserve">
          <source>Quick:</source>
          <target state="translated">Quick:</target>
        </trans-unit>
        <trans-unit id="be4a93993abff83a931ba3ce4e340c9667362430" translate="yes" xml:space="preserve">
          <source>Restore the deleted file:</source>
          <target state="translated">恢复已删除的文件。</target>
        </trans-unit>
        <trans-unit id="04c4511b91c525e2da2ef7db41615c6ca0a3fd2e" translate="yes" xml:space="preserve">
          <source>Sample output:</source>
          <target state="translated">样品输出。</target>
        </trans-unit>
        <trans-unit id="c92357b4a2b359eb2a35cf182af19870a9ad2de8" translate="yes" xml:space="preserve">
          <source>Say I'm in a Git repository. I delete a file and commit that change. I continue working and make some more commits. Then, I find I need to restore that file.</source>
          <target state="translated">假设我在一个Git仓库中。我删除了一个文件,并提交了这个修改。我继续工作,然后又提交了一些提交。然后,我发现我需要恢复那个文件。</target>
        </trans-unit>
        <trans-unit id="473b298f6105ef8d5b9a11a1220f338639c5fdf1" translate="yes" xml:space="preserve">
          <source>Say you find $commitid 1234567..., then</source>
          <target state="translated">假设你找到$commitid 1234567...,那么</target>
        </trans-unit>
        <trans-unit id="30105957349788bb14b066f0b4c5952facc2f545" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://git-scm.com/docs/git-restore/2.23.0&quot;&gt;git-restore doc for git 2.23.0&lt;/a&gt;</source>
          <target state="translated">请参阅： &lt;a href=&quot;https://git-scm.com/docs/git-restore/2.23.0&quot;&gt;git-restore doc for git 2.23.0&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c01a7e77b0553197b6aa85b1fb239ae143f80a4a" translate="yes" xml:space="preserve">
          <source>Simple and precise-</source>
          <target state="translated">简洁、严谨</target>
        </trans-unit>
        <trans-unit id="78e73f074d539e6ec4c314abac8352e71459e74c" translate="yes" xml:space="preserve">
          <source>So I had to restore a bunch of deleted files from a specific commit and I managed it with two commands:</source>
          <target state="translated">所以我必须从一个特定的提交中恢复一堆被删除的文件,我用两个命令来管理。</target>
        </trans-unit>
        <trans-unit id="633615f12d7cf86bd0352280f02e8c4469ab24a9" translate="yes" xml:space="preserve">
          <source>So rename this alias (as shown below).</source>
          <target state="translated">所以把这个别名重新命名(如下图所示)。</target>
        </trans-unit>
        <trans-unit id="97cba4858411c435e526dd651157aac20178222c" translate="yes" xml:space="preserve">
          <source>Thanks</source>
          <target state="translated">Thanks</target>
        </trans-unit>
        <trans-unit id="b2c441ae5f81fe346cf7a62436d03b5cceadb3d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--source&lt;/code&gt; argument tells the &lt;code&gt;restore&lt;/code&gt; command where to look for the file(s) to restore and it can be any commit and even the index.</source>
          <target state="translated">&lt;code&gt;--source&lt;/code&gt; 参数告诉 &lt;code&gt;restore&lt;/code&gt; 命令在哪里寻找要还原的文件，它可以是任何提交甚至索引。</target>
        </trans-unit>
        <trans-unit id="e813f65a0b3691c63386f4278749d29daadb41be" translate="yes" xml:space="preserve">
          <source>The VCS tools show all revisions train and I can see all commits and changes of each of them.</source>
          <target state="translated">VCS工具显示了所有的修订列车,我可以看到所有的提交和修改。</target>
        </trans-unit>
        <trans-unit id="1f53ec9799d8cfa5ff1e1866bde31890306f0b72" translate="yes" xml:space="preserve">
          <source>The file will now be restored to the state it had before removal. Remember to re-commit it to the working tree if you want to keep it around.</source>
          <target state="translated">该文件现在将恢复到删除前的状态。如果你想保留它,记得要把它重新提交到工作树上。</target>
        </trans-unit>
        <trans-unit id="f7c9171dfc3db37d93962d4325b3b2cf7c45af29" translate="yes" xml:space="preserve">
          <source>The files had been added to the .gitignore file and then cleared with git rm, I needed to restore the files but then unstage them. I had hundreds of files to restore, typing things manually for each file as in the other examples was going to be far too slow.</source>
          <target state="translated">这些文件已经被添加到.gitignore文件中,然后用git rm清空,我需要还原这些文件,但是要解开它们。我有几百个文件要还原,像其他例子中那样手动键入每个文件的东西太慢了。</target>
        </trans-unit>
        <trans-unit id="af864e7644aee45546dff872edd0c9ced99f0ca2" translate="yes" xml:space="preserve">
          <source>The last commit (topmost) is the one that deleted the file. So you need to restore the second to last commit.</source>
          <target state="translated">最后一个提交(最上面的)是删除文件的提交。所以你需要将第二个提交恢复到最后一个提交。</target>
        </trans-unit>
        <trans-unit id="179b292311ba41e37c237c1bc2e2e2097f189bf7" translate="yes" xml:space="preserve">
          <source>The part before the pipe lists all the files that were deleted in the  commit; they are all checkout from the previous commit to restore them.</source>
          <target state="translated">管道前面的部分列出了所有在提交中被删除的文件;这些文件都是从之前的提交中结账来恢复的。</target>
        </trans-unit>
        <trans-unit id="3649c48e5d559b132f00ccd2da0f4ddb4dc65318" translate="yes" xml:space="preserve">
          <source>Then I select the commits that my friend delete the &lt;code&gt;PostAd.js&lt;/code&gt; file. now see below:</source>
          <target state="translated">然后，选择我的朋友删除 &lt;code&gt;PostAd.js&lt;/code&gt; 文件的提交。 现在看下面：</target>
        </trans-unit>
        <trans-unit id="887d93b97cbf6fce2f3eecd42144add33539ab27" translate="yes" xml:space="preserve">
          <source>Then checkout the version at the commit before, using the caret (&lt;code&gt;^&lt;/code&gt;) symbol:</source>
          <target state="translated">然后使用尖号（ &lt;code&gt;^&lt;/code&gt; ）符号在提交之前检出版本：</target>
        </trans-unit>
        <trans-unit id="2624b916bf01c722be8fb21993d9edd3842b5f8d" translate="yes" xml:space="preserve">
          <source>Then use:</source>
          <target state="translated">然后用。</target>
        </trans-unit>
        <trans-unit id="84560310abc09a3bcce16de3e3fe92f69188d4f1" translate="yes" xml:space="preserve">
          <source>This alias first checks to find the last commit where this file existed, then does a git checkout of that file path from that last commit where this file existed. &lt;a href=&quot;https://stackoverflow.com/questions/43880999/how-to-create-a-git-alias-with-nested-commands-with-parameters&quot;&gt;source&lt;/a&gt;</source>
          <target state="translated">该别名首先检查以找到该文件存在的最后提交，然后从该文件存在的最后提交进行git checkout该文件路径。 &lt;a href=&quot;https://stackoverflow.com/questions/43880999/how-to-create-a-git-alias-with-nested-commands-with-parameters&quot;&gt;资源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1eb6b6e91740373c249d7d10e288531d77a9f2b2" translate="yes" xml:space="preserve">
          <source>This will restore the file version which was in that commit.</source>
          <target state="translated">这将恢复该提交中的文件版本。</target>
        </trans-unit>
        <trans-unit id="37655ac1245f8591d2f38cd455e9d49ec35a3537" translate="yes" xml:space="preserve">
          <source>To restore a deleted and commited file:</source>
          <target state="translated">要恢复已删除的和已提交的文件。</target>
        </trans-unit>
        <trans-unit id="3afcbee303af78ce21b4a78ee04e873e1734bf42" translate="yes" xml:space="preserve">
          <source>To restore all those deleted files in a folder enter the following command.</source>
          <target state="translated">要恢复文件夹中所有被删除的文件,请输入以下命令。</target>
        </trans-unit>
        <trans-unit id="413fc454a6c92ed3ee7fa5220400299d46be48a5" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git checkout $commit~1 path/to/file.ext&lt;/code&gt; to restore the deleted file.</source>
          <target state="translated">使用 &lt;code&gt;git checkout $commit~1 path/to/file.ext&lt;/code&gt; 还原已删除的文件。</target>
        </trans-unit>
        <trans-unit id="3ef76ed91364f47bd82da65f6052bb800e8350f4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git log --diff-filter=D --summary&lt;/code&gt; to get all the commits which have deleted files and the files deleted;</source>
          <target state="translated">使用 &lt;code&gt;git log --diff-filter=D --summary&lt;/code&gt; 获取所有已删除文件和已删除文件的提交；</target>
        </trans-unit>
        <trans-unit id="80e2f97fcdf6947fcab3ecb741d4689e977d0f3a" translate="yes" xml:space="preserve">
          <source>Warning, with Git 2.23 (Q3 2019) comes the &lt;a href=&quot;https://stackoverflow.com/a/57066072/6309&quot;&gt;experimental command&lt;/a&gt; named &lt;a href=&quot;https://git-scm.com/docs/git-restore&quot;&gt;&lt;code&gt;git restore&lt;/code&gt;&lt;/a&gt;(!).</source>
          <target state="translated">警告，带有Git 2.23（2019年第三季度）的&lt;a href=&quot;https://stackoverflow.com/a/57066072/6309&quot;&gt;实验命令&lt;/a&gt;名为&lt;a href=&quot;https://git-scm.com/docs/git-restore&quot;&gt; &lt;code&gt;git restore&lt;/code&gt; &lt;/a&gt; （！）。</target>
        </trans-unit>
        <trans-unit id="0c23a56fe3c60dc9bec56632a3f9c16a33f03413" translate="yes" xml:space="preserve">
          <source>What would be the easiest way to get that file back into my working copy?</source>
          <target state="translated">有什么最简单的方法可以让那个文件回到我的工作副本中?</target>
        </trans-unit>
        <trans-unit id="e74f8e39a2d57bbf0e4d0369a4e504528dae5181" translate="yes" xml:space="preserve">
          <source>What would be the quickest way to find the commit that deleted a given filename?</source>
          <target state="translated">怎样才能快速找到删除指定文件名的提交?</target>
        </trans-unit>
        <trans-unit id="2dec5480d26f01e1477d6e25fe3b06d97cce47f7" translate="yes" xml:space="preserve">
          <source>When I find the revision/commit:</source>
          <target state="translated">当我找到修订承诺的时候。</target>
        </trans-unit>
        <trans-unit id="4982bc782f13e52b0180b611fb8a8e4cf9fe39ef" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;$commit&lt;/code&gt; is the value of the commit you've found at step 1, e.g. &lt;code&gt;e4cf499627&lt;/code&gt;</source>
          <target state="translated">其中 &lt;code&gt;$commit&lt;/code&gt; 是您在步骤1中找到的提交的值，例如 &lt;code&gt;e4cf499627&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b6b3c90833d493ea739459bf5c02115fecdff09" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;git ls-files --deleted&lt;/code&gt; lists all deleted file and &lt;code&gt;git checkout $(git command)&lt;/code&gt; restore list of files in parameter.</source>
          <target state="translated">其中 &lt;code&gt;git ls-files --deleted&lt;/code&gt; 列出所有已删除的文件，而 &lt;code&gt;git checkout $(git command)&lt;/code&gt; 恢复参数中的文件列表。</target>
        </trans-unit>
        <trans-unit id="57377ad23ee8026d022c08fea5152abc3d6356ab" translate="yes" xml:space="preserve">
          <source>You can get a list of all the deleted files in the working tree using the command below.</source>
          <target state="translated">你可以使用下面的命令获得工作树中所有被删除的文件列表。</target>
        </trans-unit>
        <trans-unit id="ce873c6de82c99f9838390e9e831839dc57f7d63" translate="yes" xml:space="preserve">
          <source>You should get something like:</source>
          <target state="translated">你应该得到这样的东西。</target>
        </trans-unit>
        <trans-unit id="656c8a8044c6b002d6d5b41385b290980a778699" translate="yes" xml:space="preserve">
          <source>below example working for me</source>
          <target state="translated">以下是我的例子</target>
        </trans-unit>
        <trans-unit id="c3478803aaee3e5bd32659f468616eb41f12f280" translate="yes" xml:space="preserve">
          <source>but your deleted files did not return, you simply do the following command:</source>
          <target state="translated">但你删除的文件没有返回,你只需执行以下命令。</target>
        </trans-unit>
        <trans-unit id="ed64cf154abfb2e3ac22d570db104eae6bc49977" translate="yes" xml:space="preserve">
          <source>commit 3ea4e3af253ac6fd1691ff6bb89c964f54802302 Author: Alexander
  Orlov  Date:   Thu May 12 22:10:22 2011
  +0200</source>
          <target state="translated">提交3ea4e3af253ac6fd1691ff6bb89c964f54802302 作者:Alexander Orlov 日期:3ea4e3af253ac6fd1691ff6bb89c964f54802302 作者:Alexander Orlov 日期:Thu May 12 22:10:22 2011 +0200</target>
        </trans-unit>
        <trans-unit id="580277782c86ec930b551609bc4076697fffde4a" translate="yes" xml:space="preserve">
          <source>commit bfe68bd117e1091c96d2976c99b3bcc8310bebe7 Author: Alexander
  Orlov  Date:   Thu May 12 23:44:27 2011
  +0200</source>
          <target state="translated">提交 bfe68bd117e1091c96d2976c99b3bcc8310bebe7 作者:Alexander Orlov 日期:Thu May 12 23:44:27 2011 +0200</target>
        </trans-unit>
        <trans-unit id="81b265a61cd82516cc1bbab5116676f7f6a39438" translate="yes" xml:space="preserve">
          <source>git checkout 84sdhfddbdddf~1</source>
          <target state="translated">git checkout 84sdhfddbdddf~1</target>
        </trans-unit>
        <trans-unit id="6550c2b5e5551e55a5cc9b87473debc45429d9ad" translate="yes" xml:space="preserve">
          <source>git log --diff-filter=D --summary</source>
          <target state="translated">git log ---diff-filter=D --summary</target>
        </trans-unit>
        <trans-unit id="47e65bc2008082a1e640186985139b526efc196d" translate="yes" xml:space="preserve">
          <source>or you could go back one commit and manually inspect the damage:</source>
          <target state="translated">或者你可以回去一次提交并手动检查损坏情况。</target>
        </trans-unit>
        <trans-unit id="b3599b0a79a8bb7f67515454de84ceeb8b6c732e" translate="yes" xml:space="preserve">
          <source>through this you can easily recover all deleted files.</source>
          <target state="translated">通过这个,你可以轻松恢复所有删除的文件。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
