<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/953481">
    <body>
      <group id="953481">
        <trans-unit id="dabae0c3f1b6a2576f3c16316d2feface5f9b9bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/users/157971/robert-dailey&quot;&gt;Robert Dailey&lt;/a&gt; proposes &lt;a href=&quot;https://stackoverflow.com/questions/953481/restore-a-deleted-file-in-a-git-repo/14922749#comment33996752_14922749&quot;&gt;in the comments&lt;/a&gt; the following alias:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/users/157971/robert-dailey&quot;&gt;ロバート・デイリー&lt;/a&gt;は&lt;a href=&quot;https://stackoverflow.com/questions/953481/restore-a-deleted-file-in-a-git-repo/14922749#comment33996752_14922749&quot;&gt;コメント&lt;/a&gt;で次のエイリアスを提案します：</target>
        </trans-unit>
        <trans-unit id="b942df95d76fedcb4f37698d1edaeafea85f126b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git log --stat | grep --context=5 *word*&lt;/code&gt; # recommended if you hardly
remember anything</source>
          <target state="translated">&lt;code&gt;git log --stat | grep --context=5 *word*&lt;/code&gt; grep --context = 5 * word * ＃何も覚えていない場合に推奨</target>
        </trans-unit>
        <trans-unit id="80115968f8fb670b75b5527f5cc71186dcdc863f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git status&lt;/code&gt; for the reason:</source>
          <target state="translated">理由による &lt;code&gt;git status&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="11fa02359bac8a9eb8e2f9fe75505f719e82487d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Note the trailing space on the end of each command.)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（各コマンドの最後の末尾のスペースに注意してください。）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1809986235a116b609fa47900a74af7cfaf7ca73" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;3&lt;/em&gt;. Now using the commit id bfe68bd117e1091c96d2976c99b3bcc8310bebe7 do:</source>
          <target state="translated">&lt;em&gt;３&lt;/em&gt; 。 ここで、コミットID bfe68bd117e1091c96d2976c99b3bcc8310bebe7を使用します。</target>
        </trans-unit>
        <trans-unit id="39450d5b2f12766c76604f10febccc07503c7f65" translate="yes" xml:space="preserve">
          <source>Actually, this question is directly about &lt;code&gt;Git&lt;/code&gt;, but somebody like me works with GUI tools like &lt;code&gt;WebStorm&lt;/code&gt; VCS other than knowing about git &lt;code&gt;cli&lt;/code&gt; commands.</source>
          <target state="translated">実際、この質問は直接 &lt;code&gt;Git&lt;/code&gt; に関するものですが、私のような誰かがgit &lt;code&gt;cli&lt;/code&gt; コマンドについて知る以外に、 &lt;code&gt;WebStorm&lt;/code&gt; VCSなどのGUIツールを使用しています。</target>
        </trans-unit>
        <trans-unit id="f4ced7f3c540642c7ece5083ae3199ae1e73db0b" translate="yes" xml:space="preserve">
          <source>And &lt;a href=&quot;https://stackoverflow.com/users/1857677/jegan&quot;&gt;jegan&lt;/a&gt; adds &lt;a href=&quot;https://stackoverflow.com/questions/953481/find-and-restore-a-deleted-file-in-a-git-repository/14922749?noredirect=1#comment80261163_14922749&quot;&gt;in the comments&lt;/a&gt;:</source>
          <target state="translated">そして、 &lt;a href=&quot;https://stackoverflow.com/users/1857677/jegan&quot;&gt;ジーガン&lt;/a&gt;は&lt;a href=&quot;https://stackoverflow.com/questions/953481/find-and-restore-a-deleted-file-in-a-git-repository/14922749?noredirect=1#comment80261163_14922749&quot;&gt;コメントに&lt;/a&gt;追加します ：</target>
        </trans-unit>
        <trans-unit id="2a9f1fc121f2083d8090138717af3e60269b37c9" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;readme.md&lt;/code&gt; has been restored into the repository.</source>
          <target state="translated">そして、 &lt;code&gt;readme.md&lt;/code&gt; がリポジトリに復元されました。</target>
        </trans-unit>
        <trans-unit id="528ed46ff5f66e7df5abbfc54aa968b91ac12884" translate="yes" xml:space="preserve">
          <source>And if you've continued work, and realized later that you didn't want to commit that deletion commit, you could revert it using.</source>
          <target state="translated">また、作業を続けていて、後になってその削除コミットをコミットしたくないことに気づいた場合は、次のようにして元に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="d278e2c014d33fea226d3f89271e390ab6141f31" translate="yes" xml:space="preserve">
          <source>And now, I can see my desire deleted file. I just double-click on the filename and it recovers.</source>
          <target state="translated">そして今、私は私の欲望の削除されたファイルを見ることができます。私はファイル名をダブルクリックするだけで回復します。</target>
        </trans-unit>
        <trans-unit id="506fea15cfdfb0525761b69499ea49f2919a78fd" translate="yes" xml:space="preserve">
          <source>And presto, your file is back.</source>
          <target state="translated">ファイルが戻ってきました。</target>
        </trans-unit>
        <trans-unit id="53fba75201e3acb1d7f57ca3f5dcec031f49387f" translate="yes" xml:space="preserve">
          <source>As of Git 2.23 there is actually a &lt;code&gt;restore&lt;/code&gt; command. It is &lt;strong&gt;still experimental&lt;/strong&gt; but in order to restore something you removed in a commit (4711174 in this case) you can then type:</source>
          <target state="translated">Git 2.23以降、実際には &lt;code&gt;restore&lt;/code&gt; コマンドがあります。 &lt;strong&gt;まだ実験&lt;/strong&gt;段階ですが、コミット（この場合は4711174）で削除したものを復元するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="8e1f6a7179783dd6c009c4d66e3695fd0fb40bef" translate="yes" xml:space="preserve">
          <source>As the commit id references the commit where the file was already deleted you need to reference the commit just before bfe68b which you can do by appending &lt;code&gt;^1&lt;/code&gt;. This means: give me the commit just before bfe68b.</source>
          <target state="translated">コミットIDはファイルがすでに削除されているコミットを参照するため、 &lt;code&gt;^1&lt;/code&gt; 追加することで実行できるbfe68bの直前のコミットを参照する必要があります。 つまり、bfe68bの直前にコミットしてください。</target>
        </trans-unit>
        <trans-unit id="45d24e1b7190811eeeb4babc40aea2c9b90eb2c8" translate="yes" xml:space="preserve">
          <source>Based on Charles Bailey's excellent answer here is my one liner:</source>
          <target state="translated">チャールズ・ベイリーの素晴らしい回答をもとに、私のワンライナーをご紹介します。</target>
        </trans-unit>
        <trans-unit id="8ed235eedcfe9ae37e8840b06fde1b7e9eba9049" translate="yes" xml:space="preserve">
          <source>Best way to do that, try it</source>
          <target state="translated">最高の方法は、それを試してみてください</target>
        </trans-unit>
        <trans-unit id="0a1c4d67e69af63ac5bdc1fca4caa381ee455a88" translate="yes" xml:space="preserve">
          <source>Crisis averted.</source>
          <target state="translated">危機は回避された。</target>
        </trans-unit>
        <trans-unit id="1e5d96f205dd15a9aa6a51baf15589940c05aa25" translate="yes" xml:space="preserve">
          <source>Find and restore a deleted file in a Git repository</source>
          <target state="translated">Git リポジトリ内の削除されたファイルを検索して復元する</target>
        </trans-unit>
        <trans-unit id="60ed8682da6b48496d12c30b3c28f037dcb0f5a9" translate="yes" xml:space="preserve">
          <source>Find the commit that deleted your file:</source>
          <target state="translated">ファイルを削除したコミットを探します。</target>
        </trans-unit>
        <trans-unit id="e1c70b3a15cabe84eff899597caa1280f380227a" translate="yes" xml:space="preserve">
          <source>Find the last commit that affected the given path. As the file isn't in the HEAD commit, this commit must have deleted it.</source>
          <target state="translated">指定したパスに影響を与えた最後のコミットを探します。ファイルは HEAD コミットにはないので、このコミットで削除されたに違いありません。</target>
        </trans-unit>
        <trans-unit id="b7d5ca8f8b0c81867920d9b2c2aaf9da1d827ccd" translate="yes" xml:space="preserve">
          <source>First find the commit id of the commit that deleted your file.
It will give you a summary of commits which deleted files.</source>
          <target state="translated">まず、ファイルを削除したコミットのコミットIDを見つけます。ファイルを削除したコミットの概要が表示されます。</target>
        </trans-unit>
        <trans-unit id="65ee140d164a1411ca2eb787e97b195ab1493a8c" translate="yes" xml:space="preserve">
          <source>First of all, get a latest stable commit in which you have that file by -</source>
          <target state="translated">まず最初に、そのファイルがある最新の安定版コミットを取得します。</target>
        </trans-unit>
        <trans-unit id="a6d1da03d26b2e516b35765d2ec62b00f6dbe6df" translate="yes" xml:space="preserve">
          <source>For setting the alias from the command line, I used this command:</source>
          <target state="translated">コマンドラインからエイリアスを設定するには、このコマンドを使用しました。</target>
        </trans-unit>
        <trans-unit id="c4310a7ec429aa473bfe875f9d1041e540e53d06" translate="yes" xml:space="preserve">
          <source>Get the id of the commit where the file was deleted using one of the ways below.</source>
          <target state="translated">以下のいずれかの方法で、ファイルが削除されたコミットの ID を取得します。</target>
        </trans-unit>
        <trans-unit id="892e36379b1375f78f401ba5d972e81cd7966e71" translate="yes" xml:space="preserve">
          <source>I also have this problem using below code retrieve previous file to local directory</source>
          <target state="translated">私はまた、以下のコードを使用してこの問題を持っている ローカルディレクトリに前のファイルを取得する</target>
        </trans-unit>
        <trans-unit id="c2e5655cc00ee85dc9c46d8f7913eebe5b6b5982" translate="yes" xml:space="preserve">
          <source>I came to this question looking to restore a file I just deleted but I hadn't yet committed the change.  Just in case you find yourself in this situation, all you need to do is the following:</source>
          <target state="translated">先ほど削除したファイルを復元したいと思ってこの質問に来ましたが、まだ変更をコミットしていませんでした。念のため、このような状況に陥ってしまった場合に必要なのは次のようなことだけです。</target>
        </trans-unit>
        <trans-unit id="221cd6e4822d0d798ec7e12dd41e30d6f6b84045" translate="yes" xml:space="preserve">
          <source>I had the same question. Without knowing it, I had created a &lt;strong&gt;&lt;em&gt;dangling commit&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">同じ質問がありました。 それを知らずに、 &lt;strong&gt;&lt;em&gt;ぶら下がりコミットを&lt;/em&gt;&lt;/strong&gt;作成しました。</target>
        </trans-unit>
        <trans-unit id="f31a936598e717264b5a769e7b5927c8a7d9158c" translate="yes" xml:space="preserve">
          <source>I have lost a file, deleted by mistake a few commits ago?</source>
          <target state="translated">数回前に間違えて削除したファイルを紛失したことがありますか?</target>
        </trans-unit>
        <trans-unit id="2595bde55d452196fcb3d6a3c445cb3085999c6a" translate="yes" xml:space="preserve">
          <source>I know I can checkout a file using &lt;code&gt;git checkout HEAD^ foo.bar&lt;/code&gt;, but I don't really know when that file was deleted.</source>
          <target state="translated">&lt;code&gt;git checkout HEAD^ foo.bar&lt;/code&gt; を使用してファイルをチェックアウトできることはわかっていますが、そのファイルがいつ削除されたかはわかりません。</target>
        </trans-unit>
        <trans-unit id="eba6467d7396b7b9fb721b926bdf685135952115" translate="yes" xml:space="preserve">
          <source>I know my answer is not &lt;code&gt;Git&lt;/code&gt; commands but it is fast, reliable and easy for beginner and professional developers. &lt;strong&gt;Webstorm&lt;/strong&gt; VCS tools are awesome and perfect for working with &lt;code&gt;Git&lt;/code&gt; and doesn't need any other plugin or tools.</source>
          <target state="translated">私の答えは &lt;code&gt;Git&lt;/code&gt; コマンドではありませんが、初心者やプロの開発者にとっては高速で信頼性が高く、簡単です。 &lt;strong&gt;Webstorm&lt;/strong&gt; VCSツールは、 &lt;code&gt;Git&lt;/code&gt; での作業に最適であり、他のプラグインやツールを必要としません。</target>
        </trans-unit>
        <trans-unit id="89dfcdd9e8bbd725293e7a18ad19489f75a4a267" translate="yes" xml:space="preserve">
          <source>I know this is an old thread, but you could always &lt;code&gt;git revert&lt;/code&gt; your commit which deleted the file.  (&lt;em&gt;This assumes that the deletion was the only change in the commit.&lt;/em&gt;)</source>
          <target state="translated">私はこれが古いスレッドであることを知っていますが、ファイルを削除したコミットをいつでも &lt;code&gt;git revert&lt;/code&gt; できます。 （ &lt;em&gt;これは、削除がコミットの唯一の変更であると想定しています。&lt;/em&gt; ）</target>
        </trans-unit>
        <trans-unit id="28f0c9f33dcb9f48819ddbb5b84b017800f63e4f" translate="yes" xml:space="preserve">
          <source>I right click on the path that contains the deleted file, then go to &lt;code&gt;Git&lt;/code&gt; and then click on &lt;code&gt;Show History&lt;/code&gt;.</source>
          <target state="translated">削除したファイルを含むパスを右クリックし、 &lt;code&gt;Git&lt;/code&gt; に移動して、[ &lt;code&gt;Show History&lt;/code&gt; ]をクリックします。</target>
        </trans-unit>
        <trans-unit id="34603449f52d2c27625f1c05d738504c8702e977" translate="yes" xml:space="preserve">
          <source>I'm hoping I don't have to manually browse my logs, checkout the entire project for a given SHA and then manually copy that file into my original project checkout.</source>
          <target state="translated">手動でログを参照して、指定されたSHAのプロジェクト全体をチェックアウトし、そのファイルを元のプロジェクトのチェックアウトに手動でコピーする必要がないことを期待しています。</target>
        </trans-unit>
        <trans-unit id="96f9ed9f775c3fe9b385285a04678fd884297057" translate="yes" xml:space="preserve">
          <source>I've got &lt;a href=&quot;http://blog.loxal.net/2012/03/git-checkout-get-back-deleted-file-w.html&quot;&gt;this solution&lt;/a&gt;.</source>
          <target state="translated">私は&lt;a href=&quot;http://blog.loxal.net/2012/03/git-checkout-get-back-deleted-file-w.html&quot;&gt;この解決策&lt;/a&gt;を持っています 。</target>
        </trans-unit>
        <trans-unit id="9b9db0b68376fa55c6fdabc40df1dba2b3aecdec" translate="yes" xml:space="preserve">
          <source>If the deletion has been committed, find the commit where it happened, then recover the file from this commit.</source>
          <target state="translated">削除がコミットされている場合は、それが起こったコミットを見つけて、このコミットからファイルを復元します。</target>
        </trans-unit>
        <trans-unit id="de0baa3cc9dfb8decb61e77e1abd6762204debec" translate="yes" xml:space="preserve">
          <source>If the deletion has not been committed, the command below will restore the deleted file in the working tree.</source>
          <target state="translated">削除がコミットされていない場合、以下のコマンドを実行すると、削除されたファイルが作業ツリーに復元されます。</target>
        </trans-unit>
        <trans-unit id="047447bc7a2342a1cf826219e28d4d62355ac46f" translate="yes" xml:space="preserve">
          <source>If you are using zsh and have the EXTENDED_GLOB option enabled, the caret symbol won't work. You can use &lt;code&gt;~1&lt;/code&gt; instead.</source>
          <target state="translated">zshを使用していて、EXTENDED_GLOBオプションが有効になっている場合、キャレット記号は機能しません。 代わりに &lt;code&gt;~1&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="8ad0fd02f4ad4c1d4a196c2a604eb48301224827" translate="yes" xml:space="preserve">
          <source>If you know the commit that deleted the file(s), run this command where &lt;code&gt;&amp;lt;SHA1_deletion&amp;gt;&lt;/code&gt; is the commit that deleted the file:</source>
          <target state="translated">ファイルを削除したコミットがわかっている場合は、次のコマンドを実行します。 &lt;code&gt;&amp;lt;SHA1_deletion&amp;gt;&lt;/code&gt; は、ファイルを削除したコミットです。</target>
        </trans-unit>
        <trans-unit id="89f2b3156c4a0523a98bf97aad52df1cade97b35" translate="yes" xml:space="preserve">
          <source>If you know the filename, this is an easy way with basic commands:</source>
          <target state="translated">ファイル名がわかれば、基本的なコマンドで簡単にできます。</target>
        </trans-unit>
        <trans-unit id="e185b7df9803a6f09dc1c3b8a6c5a8d43c9e566b" translate="yes" xml:space="preserve">
          <source>If you only made changes and deleted a file, but not commit it, and now you broke up with your changes</source>
          <target state="translated">変更だけしてファイルを削除してもコミットせず、今までの変更と別れてしまった場合</target>
        </trans-unit>
        <trans-unit id="55de8ec5031d361ce11841eb319744a3ddadf9d1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re insane, use &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-bisect.html&quot;&gt;&lt;code&gt;git-bisect&lt;/code&gt;&lt;/a&gt;. Here's what to do:</source>
          <target state="translated">正気でない場合は、 &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-bisect.html&quot;&gt; &lt;code&gt;git-bisect&lt;/code&gt; を&lt;/a&gt;使用してください。 ここでは何をすべきかです：</target>
        </trans-unit>
        <trans-unit id="074756c56c5e5901b0b6db4edac45a2b54418cd5" translate="yes" xml:space="preserve">
          <source>In case you are looking for the path of the file to recover, the following command will display a summary of all deleted files.</source>
          <target state="translated">復元するファイルのパスを探している場合、以下のコマンドを実行すると、すべての削除されたファイルの概要が表示されます。</target>
        </trans-unit>
        <trans-unit id="6ec913e2e6af37b4f0d63506091201ac81ca2d3c" translate="yes" xml:space="preserve">
          <source>In many cases, it can be useful to use &lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Core_Utilities&quot;&gt;coreutils&lt;/a&gt; (grep, sed, etc.) in conjunction with Git. I already know these tools quite well, but Git less so. If I wanted to do a search for a deleted file, I would do the following:</source>
          <target state="translated">多くの場合、Gitと組み合わせて&lt;a href=&quot;https://en.wikipedia.org/wiki/GNU_Core_Utilities&quot;&gt;coreutils&lt;/a&gt; （grep、sedなど）を使用すると便利です。 私はこれらのツールをすでに十分に知っていますが、Gitはそうではありません。 削除されたファイルを検索したい場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="f4d133a6f805d02d6b82eca58118642ecaad7718" translate="yes" xml:space="preserve">
          <source>In order to restore all deleted file with git, you can also do : &lt;code&gt;git checkout $(git ls-files --deleted)&lt;/code&gt;</source>
          <target state="translated">削除されたすべてのファイルをgitで復元するには、次のようにすることもできます： &lt;code&gt;git checkout $(git ls-files --deleted)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ed51457543786e9c27e2fc70cbaf6d8cd9c60ee" translate="yes" xml:space="preserve">
          <source>In our case we accidentally deleted files in a commit and some commit later we realized our mistake and wanted to get back all the files that were deleted but not those that were modified.</source>
          <target state="translated">私たちの場合は、コミット中に誤ってファイルを削除してしまい、コミット後に自分のミスに気付き、削除されたファイルをすべて取り戻そうとしましたが、修正されたファイルは取り戻せませんでした。</target>
        </trans-unit>
        <trans-unit id="4672ee90169ea52e4f4e8141cd6de83da85a14de" translate="yes" xml:space="preserve">
          <source>Inspect each dangling commit</source>
          <target state="translated">ぶら下がっている各コミットを検査します。</target>
        </trans-unit>
        <trans-unit id="7fc020ef8a6723bd5c1c9e692f926685d938d21a" translate="yes" xml:space="preserve">
          <source>It was tested on Git version 1.7.5.4.</source>
          <target state="translated">Git バージョン 1.7.5.4 でテストしました。</target>
        </trans-unit>
        <trans-unit id="15fb860c3de4ff3a3af657b535131c40c2d0fa0d" translate="yes" xml:space="preserve">
          <source>Just like others have stated before me.</source>
          <target state="translated">他の人が私の前に述べているように</target>
        </trans-unit>
        <trans-unit id="29e8046e797ae7f62445d6fa63a5aea3286e52be" translate="yes" xml:space="preserve">
          <source>List all the commits for that file.</source>
          <target state="translated">そのファイルのすべてのコミットを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="a83a975721f20998fd5fde378ab5f28a5137d46f" translate="yes" xml:space="preserve">
          <source>List dangling commits</source>
          <target state="translated">ダングリングコミットの一覧</target>
        </trans-unit>
        <trans-unit id="ade6b7703dd09f66cb6252dcb63a6cabb7b0d80a" translate="yes" xml:space="preserve">
          <source>My files reappeared when I moved to the dangling commit.</source>
          <target state="translated">ぶら下がっているコミットに移動すると、ファイルが再表示されました。</target>
        </trans-unit>
        <trans-unit id="4acfc8175610283caaa61e30c26f3fd31c21c666" translate="yes" xml:space="preserve">
          <source>My new favorite alias, based on &lt;a href=&quot;https://stackoverflow.com/users/525305/bonyiii&quot;&gt;bonyiii&lt;/a&gt;'s &lt;a href=&quot;https://stackoverflow.com/a/11301004/6309&quot;&gt;answer&lt;/a&gt; (upvoted), and my own answer about &quot;&lt;a href=&quot;https://stackoverflow.com/a/7005698/6309&quot;&gt;Pass an argument to a Git alias command&lt;/a&gt;&quot;:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/users/525305/bonyiii&quot;&gt;bonyiii&lt;/a&gt;の&lt;a href=&quot;https://stackoverflow.com/a/11301004/6309&quot;&gt;回答&lt;/a&gt; （賛成）に基づく私のお気に入りのエイリアスと、「 &lt;a href=&quot;https://stackoverflow.com/a/7005698/6309&quot;&gt;Gitエイリアスコマンドに引数を渡す&lt;/a&gt; 」についての私自身の回答：</target>
        </trans-unit>
        <trans-unit id="b209eefbe269f1a1c3a36e2ed2a82c77eb6680bd" translate="yes" xml:space="preserve">
          <source>Note the &lt;strong&gt;^&lt;/strong&gt; after the commit id as we want to restore something from the commit &lt;strong&gt;before&lt;/strong&gt; the one that deleted the file.</source>
          <target state="translated">ファイルを削除したコミットの&lt;strong&gt;前&lt;/strong&gt;のコミットから何かを復元したいので、コミットIDの後にある&lt;strong&gt;^&lt;/strong&gt;に注意してください。</target>
        </trans-unit>
        <trans-unit id="fb2155da1610b0786a85a08068ac533570c67243" translate="yes" xml:space="preserve">
          <source>Note- &lt;code&gt;84sdhfddbddd&lt;/code&gt; is your &lt;code&gt;commit id&lt;/code&gt;</source>
          <target state="translated">注 &lt;code&gt;84sdhfddbddd&lt;/code&gt; は &lt;code&gt;commit id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3e476b3e742e54e39d9908d875dda449b796377" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;git log&lt;/code&gt; shows:</source>
          <target state="translated">これで &lt;code&gt;git log&lt;/code&gt; が表示されます：</target>
        </trans-unit>
        <trans-unit id="3d854145f4184e9cf266cf0e2684ab02d15cf51e" translate="yes" xml:space="preserve">
          <source>Now it's time to run the automated test. The shell command &lt;code&gt;'[ -e foo.bar ]'&lt;/code&gt; will return 0 if &lt;code&gt;foo.bar&lt;/code&gt; exists, and 1 otherwise. The &quot;run&quot; command of &lt;code&gt;git-bisect&lt;/code&gt; will use binary search to automatically find the first commit where the test fails. It starts halfway through the range given (from good to bad) and cuts it in half based on the result of the specified test.</source>
          <target state="translated">次に、自動テストを実行します。 シェルコマンド &lt;code&gt;'[ -e foo.bar ]'&lt;/code&gt; は、 &lt;code&gt;foo.bar&lt;/code&gt; が存在する場合は0を返し、それ以外の場合は1を返します。 &lt;code&gt;git-bisect&lt;/code&gt; の「run」コマンドは、バイナリ検索を使用して、テストが失敗した最初のコミットを自動的に見つけます。 指定された範囲の（良いものから悪いものまで）の途中から開始し、指定されたテストの結果に基づいて半分にカットします。</target>
        </trans-unit>
        <trans-unit id="68b2793e95c052d7a0fe229e5d3de66be216dd24" translate="yes" xml:space="preserve">
          <source>Now you're at the commit which deleted it. From here, you can jump back to the future and use &lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-revert.html&quot;&gt;&lt;code&gt;git-revert&lt;/code&gt;&lt;/a&gt; to undo the change,</source>
          <target state="translated">今、あなたはそれを削除したコミットにいます。 ここから、未来に&lt;a href=&quot;http://www.kernel.org/pub/software/scm/git/docs/git-revert.html&quot;&gt; &lt;code&gt;git-revert&lt;/code&gt; &lt;/a&gt; 、 git-revertを使用して変更を元に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="c40b6f9f32863fe21a40018099206d6d7df5c368" translate="yes" xml:space="preserve">
          <source>Or in one command, if &lt;code&gt;$file&lt;/code&gt; is the file in question.</source>
          <target state="translated">または、1つのコマンドで、 &lt;code&gt;$file&lt;/code&gt; が問題のファイルである場合。</target>
        </trans-unit>
        <trans-unit id="503ff517174b07a1604eb5557f16426918a33625" translate="yes" xml:space="preserve">
          <source>Put this in your &lt;code&gt;.bash_profile&lt;/code&gt; (or other relevant file that loads when you open a command shell):</source>
          <target state="translated">これを &lt;code&gt;.bash_profile&lt;/code&gt; （またはコマンドシェルを開いたときにロードされる他の関連ファイル）に配置します。</target>
        </trans-unit>
        <trans-unit id="d41fceebb483be92b84268b258f3ee2f0ab02d74" translate="yes" xml:space="preserve">
          <source>Quick:</source>
          <target state="translated">Quick:</target>
        </trans-unit>
        <trans-unit id="be4a93993abff83a931ba3ce4e340c9667362430" translate="yes" xml:space="preserve">
          <source>Restore the deleted file:</source>
          <target state="translated">削除したファイルを復元します。</target>
        </trans-unit>
        <trans-unit id="04c4511b91c525e2da2ef7db41615c6ca0a3fd2e" translate="yes" xml:space="preserve">
          <source>Sample output:</source>
          <target state="translated">サンプル出力。</target>
        </trans-unit>
        <trans-unit id="c92357b4a2b359eb2a35cf182af19870a9ad2de8" translate="yes" xml:space="preserve">
          <source>Say I'm in a Git repository. I delete a file and commit that change. I continue working and make some more commits. Then, I find I need to restore that file.</source>
          <target state="translated">Git リポジトリにいるとします。ファイルを削除し、その変更をコミットします。作業を続け、さらにいくつかのコミットを行います。そして、そのファイルを復元しなければならないことに気がつきました。</target>
        </trans-unit>
        <trans-unit id="473b298f6105ef8d5b9a11a1220f338639c5fdf1" translate="yes" xml:space="preserve">
          <source>Say you find $commitid 1234567..., then</source>
          <target state="translated">もし $commitid 1234567...を見つけたとします。</target>
        </trans-unit>
        <trans-unit id="30105957349788bb14b066f0b4c5952facc2f545" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://git-scm.com/docs/git-restore/2.23.0&quot;&gt;git-restore doc for git 2.23.0&lt;/a&gt;</source>
          <target state="translated">参照： &lt;a href=&quot;https://git-scm.com/docs/git-restore/2.23.0&quot;&gt;git 2.23.0のgit-restoreドキュメント&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c01a7e77b0553197b6aa85b1fb239ae143f80a4a" translate="yes" xml:space="preserve">
          <source>Simple and precise-</source>
          <target state="translated">シンプルで正確</target>
        </trans-unit>
        <trans-unit id="78e73f074d539e6ec4c314abac8352e71459e74c" translate="yes" xml:space="preserve">
          <source>So I had to restore a bunch of deleted files from a specific commit and I managed it with two commands:</source>
          <target state="translated">そこで、特定のコミットから削除されたファイルの束を復元しなければならず、2つのコマンドで管理していました。</target>
        </trans-unit>
        <trans-unit id="633615f12d7cf86bd0352280f02e8c4469ab24a9" translate="yes" xml:space="preserve">
          <source>So rename this alias (as shown below).</source>
          <target state="translated">そこで、このエイリアスの名前を変更します(以下のように)。</target>
        </trans-unit>
        <trans-unit id="97cba4858411c435e526dd651157aac20178222c" translate="yes" xml:space="preserve">
          <source>Thanks</source>
          <target state="translated">Thanks</target>
        </trans-unit>
        <trans-unit id="b2c441ae5f81fe346cf7a62436d03b5cceadb3d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--source&lt;/code&gt; argument tells the &lt;code&gt;restore&lt;/code&gt; command where to look for the file(s) to restore and it can be any commit and even the index.</source>
          <target state="translated">&lt;code&gt;--source&lt;/code&gt; 引数は、 &lt;code&gt;restore&lt;/code&gt; するファイルを探す場所をrestoreコマンドに指示します。これは、任意のコミット、さらにはインデックスです。</target>
        </trans-unit>
        <trans-unit id="e813f65a0b3691c63386f4278749d29daadb41be" translate="yes" xml:space="preserve">
          <source>The VCS tools show all revisions train and I can see all commits and changes of each of them.</source>
          <target state="translated">VCSツールはすべてのリビジョントレインを表示し、私はそれらのそれぞれのすべてのコミットと変更を見ることができます。</target>
        </trans-unit>
        <trans-unit id="1f53ec9799d8cfa5ff1e1866bde31890306f0b72" translate="yes" xml:space="preserve">
          <source>The file will now be restored to the state it had before removal. Remember to re-commit it to the working tree if you want to keep it around.</source>
          <target state="translated">これで削除前の状態に戻ります。ファイルを残しておきたい場合は、作業ツリーに再コミットすることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="f7c9171dfc3db37d93962d4325b3b2cf7c45af29" translate="yes" xml:space="preserve">
          <source>The files had been added to the .gitignore file and then cleared with git rm, I needed to restore the files but then unstage them. I had hundreds of files to restore, typing things manually for each file as in the other examples was going to be far too slow.</source>
          <target state="translated">ファイルは .gitignore ファイルに追加され、git rm でクリアされていました。何百ものファイルをリストアしなければならなかったので、他の例のようにファイルごとに手動で入力するのはあまりにも遅くなりそうでした。</target>
        </trans-unit>
        <trans-unit id="af864e7644aee45546dff872edd0c9ced99f0ca2" translate="yes" xml:space="preserve">
          <source>The last commit (topmost) is the one that deleted the file. So you need to restore the second to last commit.</source>
          <target state="translated">最後のコミット(一番上のコミット)がファイルを削除したコミットになります。なので、2番目から最後のコミットに戻す必要があります。</target>
        </trans-unit>
        <trans-unit id="179b292311ba41e37c237c1bc2e2e2097f189bf7" translate="yes" xml:space="preserve">
          <source>The part before the pipe lists all the files that were deleted in the  commit; they are all checkout from the previous commit to restore them.</source>
          <target state="translated">パイプの前の部分は、コミットで削除されたすべてのファイルをリストアップしています;それらはすべて、それらを復元するために前のコミットからチェックアウトされています。</target>
        </trans-unit>
        <trans-unit id="3649c48e5d559b132f00ccd2da0f4ddb4dc65318" translate="yes" xml:space="preserve">
          <source>Then I select the commits that my friend delete the &lt;code&gt;PostAd.js&lt;/code&gt; file. now see below:</source>
          <target state="translated">次に、友人が &lt;code&gt;PostAd.js&lt;/code&gt; ファイルを削除するコミットを選択します。 下記をご覧ください：</target>
        </trans-unit>
        <trans-unit id="887d93b97cbf6fce2f3eecd42144add33539ab27" translate="yes" xml:space="preserve">
          <source>Then checkout the version at the commit before, using the caret (&lt;code&gt;^&lt;/code&gt;) symbol:</source>
          <target state="translated">次に、キャレット（ &lt;code&gt;^&lt;/code&gt; ）記号を使用して、以前のコミット時にバージョンをチェックアウトします。</target>
        </trans-unit>
        <trans-unit id="2624b916bf01c722be8fb21993d9edd3842b5f8d" translate="yes" xml:space="preserve">
          <source>Then use:</source>
          <target state="translated">ならば使ってください。</target>
        </trans-unit>
        <trans-unit id="84560310abc09a3bcce16de3e3fe92f69188d4f1" translate="yes" xml:space="preserve">
          <source>This alias first checks to find the last commit where this file existed, then does a git checkout of that file path from that last commit where this file existed. &lt;a href=&quot;https://stackoverflow.com/questions/43880999/how-to-create-a-git-alias-with-nested-commands-with-parameters&quot;&gt;source&lt;/a&gt;</source>
          <target state="translated">このエイリアスは、最初にこのファイルが存在する最後のコミットを確認してから、このファイルが存在する最後のコミットからそのファイルパスのgitチェックアウトを実行します。 &lt;a href=&quot;https://stackoverflow.com/questions/43880999/how-to-create-a-git-alias-with-nested-commands-with-parameters&quot;&gt;ソース&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1eb6b6e91740373c249d7d10e288531d77a9f2b2" translate="yes" xml:space="preserve">
          <source>This will restore the file version which was in that commit.</source>
          <target state="translated">これにより、そのコミットにあったファイルのバージョンが復元されます。</target>
        </trans-unit>
        <trans-unit id="37655ac1245f8591d2f38cd455e9d49ec35a3537" translate="yes" xml:space="preserve">
          <source>To restore a deleted and commited file:</source>
          <target state="translated">削除してコミットしたファイルを復元するには</target>
        </trans-unit>
        <trans-unit id="3afcbee303af78ce21b4a78ee04e873e1734bf42" translate="yes" xml:space="preserve">
          <source>To restore all those deleted files in a folder enter the following command.</source>
          <target state="translated">フォルダ内の削除されたファイルをすべて復元するには、次のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="413fc454a6c92ed3ee7fa5220400299d46be48a5" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git checkout $commit~1 path/to/file.ext&lt;/code&gt; to restore the deleted file.</source>
          <target state="translated">&lt;code&gt;git checkout $commit~1 path/to/file.ext&lt;/code&gt; を使用して、削除したファイルを復元します。</target>
        </trans-unit>
        <trans-unit id="3ef76ed91364f47bd82da65f6052bb800e8350f4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git log --diff-filter=D --summary&lt;/code&gt; to get all the commits which have deleted files and the files deleted;</source>
          <target state="translated">&lt;code&gt;git log --diff-filter=D --summary&lt;/code&gt; を使用して、ファイルを削除したすべてのコミットとファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="80e2f97fcdf6947fcab3ecb741d4689e977d0f3a" translate="yes" xml:space="preserve">
          <source>Warning, with Git 2.23 (Q3 2019) comes the &lt;a href=&quot;https://stackoverflow.com/a/57066072/6309&quot;&gt;experimental command&lt;/a&gt; named &lt;a href=&quot;https://git-scm.com/docs/git-restore&quot;&gt;&lt;code&gt;git restore&lt;/code&gt;&lt;/a&gt;(!).</source>
          <target state="translated">警告、Git 2.23（2019年第3四半期）には、 &lt;a href=&quot;https://git-scm.com/docs/git-restore&quot;&gt; &lt;code&gt;git restore&lt;/code&gt; &lt;/a&gt; （！）という名前の&lt;a href=&quot;https://stackoverflow.com/a/57066072/6309&quot;&gt;実験的なコマンド&lt;/a&gt;が付属しています。</target>
        </trans-unit>
        <trans-unit id="0c23a56fe3c60dc9bec56632a3f9c16a33f03413" translate="yes" xml:space="preserve">
          <source>What would be the easiest way to get that file back into my working copy?</source>
          <target state="translated">そのファイルを私の作業コピーに戻す最も簡単な方法は何でしょうか?</target>
        </trans-unit>
        <trans-unit id="e74f8e39a2d57bbf0e4d0369a4e504528dae5181" translate="yes" xml:space="preserve">
          <source>What would be the quickest way to find the commit that deleted a given filename?</source>
          <target state="translated">指定したファイル名を削除したコミットを見つける一番手っ取り早い方法は?</target>
        </trans-unit>
        <trans-unit id="2dec5480d26f01e1477d6e25fe3b06d97cce47f7" translate="yes" xml:space="preserve">
          <source>When I find the revision/commit:</source>
          <target state="translated">revisioncommitを見つけたら。</target>
        </trans-unit>
        <trans-unit id="4982bc782f13e52b0180b611fb8a8e4cf9fe39ef" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;$commit&lt;/code&gt; is the value of the commit you've found at step 1, e.g. &lt;code&gt;e4cf499627&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;$commit&lt;/code&gt; は、ステップ1で見つけたコミットの値です（ &lt;code&gt;e4cf499627&lt;/code&gt; など)。</target>
        </trans-unit>
        <trans-unit id="3b6b3c90833d493ea739459bf5c02115fecdff09" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;git ls-files --deleted&lt;/code&gt; lists all deleted file and &lt;code&gt;git checkout $(git command)&lt;/code&gt; restore list of files in parameter.</source>
          <target state="translated">&lt;code&gt;git ls-files --deleted&lt;/code&gt; は、削除されたすべてのファイルをリストし、 &lt;code&gt;git checkout $(git command)&lt;/code&gt; は、パラメーター内のファイルのリストを復元します。</target>
        </trans-unit>
        <trans-unit id="57377ad23ee8026d022c08fea5152abc3d6356ab" translate="yes" xml:space="preserve">
          <source>You can get a list of all the deleted files in the working tree using the command below.</source>
          <target state="translated">以下のコマンドを使用して、作業ツリー内のすべての削除されたファイルのリストを取得することができます。</target>
        </trans-unit>
        <trans-unit id="ce873c6de82c99f9838390e9e831839dc57f7d63" translate="yes" xml:space="preserve">
          <source>You should get something like:</source>
          <target state="translated">みたいなのが出てくるはずです。</target>
        </trans-unit>
        <trans-unit id="656c8a8044c6b002d6d5b41385b290980a778699" translate="yes" xml:space="preserve">
          <source>below example working for me</source>
          <target state="translated">私のために働いている以下の例</target>
        </trans-unit>
        <trans-unit id="c3478803aaee3e5bd32659f468616eb41f12f280" translate="yes" xml:space="preserve">
          <source>but your deleted files did not return, you simply do the following command:</source>
          <target state="translated">しかし、削除したファイルが戻ってこない場合は、次のコマンドを実行するだけです。</target>
        </trans-unit>
        <trans-unit id="ed64cf154abfb2e3ac22d570db104eae6bc49977" translate="yes" xml:space="preserve">
          <source>commit 3ea4e3af253ac6fd1691ff6bb89c964f54802302 Author: Alexander
  Orlov  Date:   Thu May 12 22:10:22 2011
  +0200</source>
          <target state="translated">commit 3ea4e3af253ac6fd1691ff6bb89c964f54802302 作成者。このようなことはありませんでしたが、このようなことはありませんでした。日付:Thu May 12 22:10:22 2011 +0200</target>
        </trans-unit>
        <trans-unit id="580277782c86ec930b551609bc4076697fffde4a" translate="yes" xml:space="preserve">
          <source>commit bfe68bd117e1091c96d2976c99b3bcc8310bebe7 Author: Alexander
  Orlov  Date:   Thu May 12 23:44:27 2011
  +0200</source>
          <target state="translated">コミット bfe68bd117e1091c96d2976c99b3bcc8310bebe7 作成者:Alexander Orlov 日付:Thu May 12 23:44:27 2011 +0200</target>
        </trans-unit>
        <trans-unit id="81b265a61cd82516cc1bbab5116676f7f6a39438" translate="yes" xml:space="preserve">
          <source>git checkout 84sdhfddbdddf~1</source>
          <target state="translated">git checkout 84sdhfddbdddf~1</target>
        </trans-unit>
        <trans-unit id="6550c2b5e5551e55a5cc9b87473debc45429d9ad" translate="yes" xml:space="preserve">
          <source>git log --diff-filter=D --summary</source>
          <target state="translated">git log --diff-filter=D -summary</target>
        </trans-unit>
        <trans-unit id="47e65bc2008082a1e640186985139b526efc196d" translate="yes" xml:space="preserve">
          <source>or you could go back one commit and manually inspect the damage:</source>
          <target state="translated">または、1回のコミットに戻って手動で損傷を検査することもできます。</target>
        </trans-unit>
        <trans-unit id="b3599b0a79a8bb7f67515454de84ceeb8b6c732e" translate="yes" xml:space="preserve">
          <source>through this you can easily recover all deleted files.</source>
          <target state="translated">これを介して簡単にすべての削除されたファイルを回復することができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
