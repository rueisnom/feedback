<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/951021">
    <body>
      <group id="951021">
        <trans-unit id="406622c7f741253142b69af32d2fc69183da39c3" translate="yes" xml:space="preserve">
          <source>&amp;ndash; and the results are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ndash;结果是：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2700f8d4e97d3dfe5a1abe452d56182b8a5af7da" translate="yes" xml:space="preserve">
          <source>'Javascript is single threaded' is not a valid answer. For example running a sleep function within a worker would not block any of the code running in the ui thread.</source>
          <target state="translated">Javascript是单线程的 &quot;不是一个有效的答案。例如,在worker中运行一个睡眠函数不会阻止任何在ui线程中运行的代码。</target>
        </trans-unit>
        <trans-unit id="8990b3dc26e543ba76aed35e3e55df64d120bdc8" translate="yes" xml:space="preserve">
          <source>(See the &lt;a href=&quot;https://stackoverflow.com/a/39914235/11236&quot;&gt;updated answer for 2016&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（请参阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/39914235/11236&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2016年更新的答案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6590ba2888c06482a38037df1538aafe54bd08f9" translate="yes" xml:space="preserve">
          <source>...and here's another link with client-side solutions: &lt;a href=&quot;http://www.devcheater.com/&quot;&gt;http://www.devcheater.com/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...这是客户端解决方案的另一个链接：&lt;/font&gt;&lt;a href=&quot;http://www.devcheater.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//www.devcheater.com/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ece690a66efaf36ced110539212ae4615d51249f" translate="yes" xml:space="preserve">
          <source>//..............
example4:</source>
          <target state="translated">//..............
example4:</target>
        </trans-unit>
        <trans-unit id="dea789c54f2c923b12ea988cf9fcd5bc5b25c8da" translate="yes" xml:space="preserve">
          <source>//.................
example3:</source>
          <target state="translated">//.................
example3:</target>
        </trans-unit>
        <trans-unit id="2fbcc0af48ae16d408a6c7094d3f5f69ffd18acb" translate="yes" xml:space="preserve">
          <source>//....................................
//example2:</source>
          <target state="translated">//....................................
//example2:</target>
        </trans-unit>
        <trans-unit id="7e1c9ecfb5e594fd8df8c40ad65bff0a10eecc30" translate="yes" xml:space="preserve">
          <source>//.........................................
//example1:</source>
          <target state="translated">//.........................................
//example1:</target>
        </trans-unit>
        <trans-unit id="ff4e661d0ce2ba339c7427f12d9e41d828564d04" translate="yes" xml:space="preserve">
          <source>2017 &amp;mdash; 2019 update</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2017年&amp;mdash; 2019年更新&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28b9ccd63581781697b7ac78ab9b9e05a2e34933" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://ponyfoo.com/articles/es6-promises-in-depth&quot;&gt;Promises, a native feature of ES2015&lt;/a&gt; (aka ES6). We also use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow functions&lt;/a&gt; in the definition of the sleep function.</source>
          <target state="translated">&lt;a href=&quot;https://ponyfoo.com/articles/es6-promises-in-depth&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Promises，是ES2015&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（又名ES6）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的本机功能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们还在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;睡眠功能的定义中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;箭头&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d171b351e504cff00cf2938d35f83f28dca00dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; landed in V8 and has been &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/async-functions&quot;&gt;enabled by default since Chrome 55&lt;/a&gt; (released in Dec 2016)</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进入V8，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/async-functions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自Chrome 55&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（于2016年12月发布）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以来&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;已&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;默认启用&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91228676b24e988faeaa3234de04afb8b25f56d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt; can only be executed in functions prefixed with the &lt;code&gt;async&lt;/code&gt; keyword, or at the &lt;a href=&quot;https://developers.google.com/web/updates/2017/08/devtools-release-notes#await&quot;&gt;top level&lt;/a&gt; of your script in some environments (e.g. the Chrome DevTools console, or Runkit).</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只能在前缀为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;async&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数中执行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;await&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，或者&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在某些环境中（例如Chrome DevTools控制台或Runkit）在脚本&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/08/devtools-release-notes#await&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;顶层&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;执行。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b65e8b3cd15cb2541889495ca76334a779e3f63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt; only pauses the current &lt;code&gt;async&lt;/code&gt; function</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅暂停当前的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;async&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21d45d9144479c79e01b39994c172dfe83dbe355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2019 Update using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait&quot;&gt;Atomics.wait&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Atomics.wait&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新2019&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a0e3f2feb92d1b5feba526fda2d2ab318506af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fc75c7dfe1a500470f6123e2a2cfd9595dd1f10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Further Edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进一步编辑&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d4a06d15915075ed2306d054b2f1a25c0b71514" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only for debug/dev&lt;/strong&gt; , I post this if it's useful to someone</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅用于debug / dev&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，如果对某人有用，我将其发布&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="871a9903645c9d0b3fd6b02bed10f4e774f9b501" translate="yes" xml:space="preserve">
          <source>A lot of the answers don't (directly) answer the question, and neither does this one...</source>
          <target state="translated">很多答案都没有(直接)回答这个问题,这个也没有。</target>
        </trans-unit>
        <trans-unit id="02fbbfb92f5ca1686942271ff578950170d22049" translate="yes" xml:space="preserve">
          <source>Adding my two bits. I needed a busy-wait for testing purposes. I didn't want to split the code as that would be a lot of work, so a simple for did it for me.</source>
          <target state="translated">添加我的两个位。我需要一个忙碌的等待来做测试。我不想把代码拆开,因为那样会很麻烦,所以一个简单的for就帮我完成了。</target>
        </trans-unit>
        <trans-unit id="9dcff79a8311a66c39757decc8b388bb60ea8cc6" translate="yes" xml:space="preserve">
          <source>Also, when you are calling &lt;code&gt;alert()&lt;/code&gt;, your code will be paused too, while alert is shown -- need to find a way to not display alert but get the same effect. :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，当您调用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;alert()&lt;/code&gt; 时&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您的代码也将被暂停，同时显示警报-需要找到一种不显示警报但获得相同效果的方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5afed1ae2c6b9517f18fd5577443ba3207b5198f" translate="yes" xml:space="preserve">
          <source>As pointed out in the comments this will absolutely NOT WORK in a loop. You could do some fancy (ugly) hacking to make it work in a loop, but in general that will just make for disastrous spaghetti code.</source>
          <target state="translated">正如评论中所指出的那样,这在循环中绝对不能工作。你可以做一些花哨的(丑陋的)黑客程序来使它在循环中工作,但一般来说,这样做只会造成灾难性的代码。</target>
        </trans-unit>
        <trans-unit id="78dc04bdeddc512eb551f2354e0f1b2d233bb353" translate="yes" xml:space="preserve">
          <source>Better solution to make things look like what most people want is to use an anonymous function:</source>
          <target state="translated">要想让事情看起来像大多数人想要的那样,更好的解决方案是使用一个匿名功能。</target>
        </trans-unit>
        <trans-unit id="e0fbc4de54aec003b0f963e25c69166ec126c9ce" translate="yes" xml:space="preserve">
          <source>But for server-side code, it may require a blocking function (for example, so you can effectively have thread synchronization).</source>
          <target state="translated">但对于服务器端代码来说,可能需要一个阻塞函数(比如说,这样你就可以有效地进行线程同步)。</target>
        </trans-unit>
        <trans-unit id="d6af12b93df4bc50714ba128e4b639a5d59aa76b" translate="yes" xml:space="preserve">
          <source>CoffeeScript versions:</source>
          <target state="translated">CoffeeScript版本。</target>
        </trans-unit>
        <trans-unit id="5d60c7dd62fdcf4abcc61a6a7d335b7117968b4d" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
          <target state="translated">Compatibility</target>
        </trans-unit>
        <trans-unit id="364739c396ccc878b2a23642e03231bfa4bf99da" translate="yes" xml:space="preserve">
          <source>Define a function you want to execute like this:</source>
          <target state="translated">定义一个你想执行的函数,就像这样执行。</target>
        </trans-unit>
        <trans-unit id="5301648dcf6b53cefc9ed52999aaa92d4603cae0" translate="yes" xml:space="preserve">
          <source>Edit</source>
          <target state="translated">Edit</target>
        </trans-unit>
        <trans-unit id="f52876763a0f587fe6c80cf50302560ad36a2f93" translate="yes" xml:space="preserve">
          <source>Every time I've wanted a sleep in the middle of my function, I refactored to use a &lt;code&gt;setTimeout()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每当我想在函数中间睡觉时，我都会重构为使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35e59ef9296b27b71a05dcd1854ce1d1ad148089" translate="yes" xml:space="preserve">
          <source>Every two second interval hide text for one second. This shows how to use setInterval and setTimeout to show and hide text each second.</source>
          <target state="translated">每隔两秒隐藏文字一秒。这显示了如何使用setInterval和setTimeout来显示和隐藏文本,每隔一秒钟显示和隐藏一次。</target>
        </trans-unit>
        <trans-unit id="ec471d84b36457f0d9d75c03377c9e3cd5f3de93" translate="yes" xml:space="preserve">
          <source>Example of use:</source>
          <target state="translated">用例:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="0667554d48345180f0b6c72a70f8c62ccbe435d7" translate="yes" xml:space="preserve">
          <source>First you have to get Java loaded up on the page and make its methods available. To do that, I did this:</source>
          <target state="translated">首先,你必须让Java加载到页面上,并使其方法可用。为了做到这一点,我是这样做的。</target>
        </trans-unit>
        <trans-unit id="9fd0da866187697a74c7a4d585f209f050b0a6ff" translate="yes" xml:space="preserve">
          <source>First:</source>
          <target state="translated">First:</target>
        </trans-unit>
        <trans-unit id="ad94030e3a79c84d3baf40f987b4a14740140416" translate="yes" xml:space="preserve">
          <source>For browsers, I agree that setTimeout and setInterval are the way to go.</source>
          <target state="translated">对于浏览器来说,我同意设置超时和setInterval的做法。</target>
        </trans-unit>
        <trans-unit id="1d78b9f31f69fd44d434b274fb4468846341afdd" translate="yes" xml:space="preserve">
          <source>For the love of $DEITY please do not make a busy-wait sleep function.  &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; do everything you need.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出于对$ DEITY的热爱，请不要进行繁忙的睡眠功能。 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setInterval&lt;/code&gt; 可以满足&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您的所有需求。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="571cdab843f3ebdd129bb314e313e2cd1dd65f3b" translate="yes" xml:space="preserve">
          <source>For the specific case of wanting to space out a set of calls being executed by a loop, you can use something like the code below with prototype. Without prototype, you can substitute the delay function with setTimeout.</source>
          <target state="translated">对于想要将一组调用由循环执行时的时间间隔出来的特殊情况,你可以使用类似下面的代码和prototype。在没有prototype的情况下,可以用setTimeout代替延迟函数。</target>
        </trans-unit>
        <trans-unit id="efcd1f399246bfc58ed9c6c688251a2c24ecf010" translate="yes" xml:space="preserve">
          <source>Here you go.  As the code says, don't be a bad dev and use this on websites.  It's a development utility function.</source>
          <target state="translated">在这里,你去吧。就像代码里说的那样,不要做一个坏的开发者,在网站上使用这个功能。这是一个开发实用功能。</target>
        </trans-unit>
        <trans-unit id="c492a5603570e145be84a5c0681b5e6e7ccb1118" translate="yes" xml:space="preserve">
          <source>Here's a simple solution using a synchronous XMLHttpRequest:</source>
          <target state="translated">这里有一个使用同步XMLHttpRequest的简单解决方案。</target>
        </trans-unit>
        <trans-unit id="b08af946d2b887ee9e4b258e0a4ecd19cd505273" translate="yes" xml:space="preserve">
          <source>Here's an example fresh from their own readme:</source>
          <target state="translated">这里有一个新鲜的例子,来自他们自己的readme。</target>
        </trans-unit>
        <trans-unit id="d3cadff62c66a60c1e0320a49970845401a41771" translate="yes" xml:space="preserve">
          <source>Here's my two cents (or functions):</source>
          <target state="translated">下面是我的两分钱(或功能)。</target>
        </trans-unit>
        <trans-unit id="0382b9458ed8f29fea57cc19ae4614f7cc404225" translate="yes" xml:space="preserve">
          <source>However, setTimeout does not hold up execution, it executes the next line of the function immediately after the timeout is SET, not after the timeout expires, so that does not accomplish the same task that a sleep would accomplish.</source>
          <target state="translated">但是,setTimeout并没有耽误执行,它是在超时后立即执行函数的下一行,而不是在超时后立即执行,所以这并不能完成与sleep一样的任务。</target>
        </trans-unit>
        <trans-unit id="ca583f63dc43e0e510a5ef5b0624a4eca0dd835d" translate="yes" xml:space="preserve">
          <source>I agree with the other posters, a busy sleep is just a bad idea.</source>
          <target state="translated">我同意其他网友的观点,忙里偷闲的睡一觉,实在是不好。</target>
        </trans-unit>
        <trans-unit id="762abd47fb03bf8b10ac7924bef5545dfb6fab19" translate="yes" xml:space="preserve">
          <source>I can understand the purpose of a sleep function if you have to deal with synchronous execution. The setInterval and setTimeout functions create a parallel execution thread which returns the execution sequence back to the main program, which is ineffective if you have to wait for a given result. Of course one may use events and handlers, but in some cases is not what is intended.</source>
          <target state="translated">如果你必须处理同步执行,我可以理解睡眠函数的目的。setInterval 和 setTimeout 函数会创建一个并行执行线程,将执行序列返回到主程序,如果你必须等待一个给定的结果,那就没有效果了。当然也可以使用事件和处理程序,但在某些情况下并不是目的。</target>
        </trans-unit>
        <trans-unit id="a3cef0714e27c56cfe5505fa00e8d235660d562a" translate="yes" xml:space="preserve">
          <source>I don't see any downside in doing this and it did the trick for me.</source>
          <target state="translated">我不觉得这样做有什么不好的地方,而且对我来说,它的效果很好。</target>
        </trans-unit>
        <trans-unit id="a2ea779d0a3649c2ae0a107db682d6488f2b6ab9" translate="yes" xml:space="preserve">
          <source>I have searched/googled quite a few webpages on javascript sleep/wait... and there is NO answer if you want javascript to &quot;RUN, DELAY, RUN&quot;... what most people got was either, &quot;RUN, RUN(useless stuff), RUN&quot; or &quot;RUN, RUN + delayed RUN&quot;....</source>
          <target state="translated">我在google上搜索了不少关于javascript sleepwait的网页...........如果你想让javascript &quot;RUN,DELAY,RUN&quot;,没有答案.........大多数人得到的答案是,&quot;RUN,RUN(无用的东西),RUN &quot;或者 &quot;RUN,RUN+延迟RUN&quot;.........。</target>
        </trans-unit>
        <trans-unit id="846334fe176a59e836dbcd318ba4902c8504517c" translate="yes" xml:space="preserve">
          <source>I know this is a bit of an old question, but if (like me) you're using Javascript with Rhino, you can use...</source>
          <target state="translated">我知道这是个老问题,但如果你(像我一样)在使用Rhino的Javascript,你可以使用.....</target>
        </trans-unit>
        <trans-unit id="654099779870d2baee906c5427be5204727b2fd8" translate="yes" xml:space="preserve">
          <source>I needed a pretty accurate timer in Node.js and it works great for that.
However it seems like there is extremely limited support in browsers.</source>
          <target state="translated">我在Node.js中需要一个相当精确的定时器,它在这方面的效果很好。然而,似乎在浏览器中的支持似乎非常有限。</target>
        </trans-unit>
        <trans-unit id="96f4f3d3f12779db1703b01c2464fd5c83de7ce6" translate="yes" xml:space="preserve">
          <source>I personally like the simple:</source>
          <target state="translated">我个人喜欢简单的。</target>
        </trans-unit>
        <trans-unit id="fe95ddc694ec2735bd2d23af9cb11c280aa48457" translate="yes" xml:space="preserve">
          <source>I think it's perfectly reasonable to want to perform an action, wait, then perform another action. If you are used to writing in multi-threaded languages, you probably have the idea of yielding execution for a set amount of time until your thread wakes up.</source>
          <target state="translated">我认为想要执行一个动作,等待,然后再执行另一个动作是完全合理的。如果你习惯于用多线程语言编写,你可能会有这样的想法:在设定的时间内屈服执行,直到你的线程觉醒。</target>
        </trans-unit>
        <trans-unit id="57d7896ab6043212f596391d958c7a99ca2dcb14" translate="yes" xml:space="preserve">
          <source>I would encapsulate setTimeOut in a Promise for code consistency with other asynchronous tasks : Demo in &lt;a href=&quot;http://jsfiddle.net/a4gjhpgd/&quot;&gt;Fiddle&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我将setTimeOut封装在Promise中以实现与其他异步任务的代码一致性：&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/a4gjhpgd/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Fiddle中的&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Demo&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6401a6a07b06b26d74cf17ee0ceb50de6e36ff73" translate="yes" xml:space="preserve">
          <source>I'm using it all the time to create fake load time while creating scripts in P5js</source>
          <target state="translated">在P5js中创建脚本时,我一直在使用它来创建虚假的加载时间。</target>
        </trans-unit>
        <trans-unit id="4ca06cff7abf55f5c9f43c01a64a8c7dcd8cb73d" translate="yes" xml:space="preserve">
          <source>I've searched for sleep solution too (not for production code, only for dev/tests) and found this article:</source>
          <target state="translated">我也搜索过睡眠的解决方案(不是针对生产代码,只针对devtests),找到了这篇文章。</target>
        </trans-unit>
        <trans-unit id="f5fea6a22e18ccd301c4087ce8c66e970a37d2a2" translate="yes" xml:space="preserve">
          <source>If for some weird reason you're using Node older than 7 (which has reached &lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;end of life&lt;/a&gt;), or are targeting old browsers, &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; can still be used via &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; (a tool that will &lt;a href=&quot;https://www.stevefenton.co.uk/2012/11/compiling-vs-transpiling/&quot;&gt;transpile&lt;/a&gt; JavaScript + new features into plain old JavaScript), with the &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&quot;&gt;&lt;code&gt;transform-async-to-generator&lt;/code&gt;&lt;/a&gt; plugin.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您正在使用节点年纪比7（已经达成了一些奇怪的原因&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生命的尽头&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），或瞄准旧的浏览器，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;async&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仍然可以通过使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://babeljs.io/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;巴别塔&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（一种工具，将&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.stevefenton.co.uk/2012/11/compiling-vs-transpiling/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;transpile&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的JavaScript +新特性的老式JavaScript），以及&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&quot;&gt; &lt;code&gt;transform-async-to-generator&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;插件。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f1a9e8c81cc1c08f905fe5adbef82fe04d5f05a" translate="yes" xml:space="preserve">
          <source>If you want less clunky functions than &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt;, you can wrap them in functions that just reverse the order of the arguments and give them nice names:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果要使用比&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setInterval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;少的笨拙函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，可以将它们包装在仅颠倒参数顺序并为其命名的函数中：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da602048781854e83e9662f408b420c84b0f626b" translate="yes" xml:space="preserve">
          <source>If you're on node.js, you can have a look at &lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt;fibers&lt;/a&gt; &amp;ndash; a native C extension to node, a kinda-multi-threading simulation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您使用的是node.js，则可以看看&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;光纤&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;ndash;节点的本机C扩展，一种多线程模拟。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4e46f600acaca2a4b83a1850f0748d67f693b29" translate="yes" xml:space="preserve">
          <source>If you're using jQuery, someone actually created a &quot;delay&quot; plugin that's nothing more than a wrapper for setTimeout:</source>
          <target state="translated">如果你使用的是jQuery,实际上有人创建了一个 &quot;delaying &quot;插件,它只不过是setTimeout的一个包装器。</target>
        </trans-unit>
        <trans-unit id="3d8867db255383103753e2daf16182ca1558f387" translate="yes" xml:space="preserve">
          <source>If you're using node.js and meteor, you may have run into the limitations of using setTimeout in a fiber. Here is the code for server-side sleep.</source>
          <target state="translated">如果你在使用node.js和meteor,可能会遇到在fiber中使用setTimeout的限制。下面是服务器端睡眠的代码。</target>
        </trans-unit>
        <trans-unit id="4c04a5c45e89bf9986bea2ffc80dc17ad658f5e3" translate="yes" xml:space="preserve">
          <source>In JavaScript, I rewrite every function so that it can end as soon as possible. You want the browser back in control so it can make your DOM changes.</source>
          <target state="translated">在JavaScript中,我重写每个函数,让它尽快结束。你希望浏览器回到控制中,这样它就可以对你的DOM进行修改。</target>
        </trans-unit>
        <trans-unit id="363014fc9ae5271356820b562e6b0d800b2b5e78" translate="yes" xml:space="preserve">
          <source>In newer runtimes supporting generators and yield, one could bring similar functionality to the sleep function in a single threaded environment:</source>
          <target state="translated">在支持生成器和产量的较新的运行时,可以在单线程环境中为睡眠功能带来类似的功能。</target>
        </trans-unit>
        <trans-unit id="f6c306f06e3f986a96abf05b5886207f8c4ecd91" translate="yes" xml:space="preserve">
          <source>Interesting stuff, in Firebug ( &amp;amp; probably other js consoles ), nothing happen after hitting enter, only after the sleep duration specified (...)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有趣的是，在Firebug（可能还有其他js控制台）中，仅在指定的睡眠持续时间之后，按Enter后什么也没有发生（...）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bffb9a19c94543015e579e9573a74f691273a065" translate="yes" xml:space="preserve">
          <source>Is there a better way to engineer a &lt;code&gt;sleep&lt;/code&gt; in JavaScript than the following &lt;code&gt;pausecomp&lt;/code&gt; function (&lt;a href=&quot;http://www.sean.co.uk/a/webdesign/javascriptdelay.shtm&quot;&gt;taken from here&lt;/a&gt;)?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否有&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比下面的&lt;/font&gt; &lt;code&gt;pausecomp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数（&lt;/font&gt;&lt;a href=&quot;http://www.sean.co.uk/a/webdesign/javascriptdelay.shtm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从此处获取&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更好的方法来设计&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sleep&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff9ae877d3ed0b7d0fde1fbd4cf68681d478372f" translate="yes" xml:space="preserve">
          <source>It allows you to do a real &lt;code&gt;sleep&lt;/code&gt; in a way which is blocking execution in a fiber, but it's non-blocking in the main thread and other fibers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它允许您以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;阻塞光纤中执行的方式&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行真正的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sleep&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但不会阻塞主线程和其他光纤中的执行。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54c8fa8534a8d88415296aac5f80fd9033d7c4e8" translate="yes" xml:space="preserve">
          <source>It can be done using Java's sleep method. I've tested it in FF and IE and it doesn't lock the computer, chew up resources, or cause endless server hits. Seems like a clean solution to me.</source>
          <target state="translated">它可以用Java的睡眠方法来完成。我在FF和IE中测试过,它不会锁定计算机,不会占用资源,也不会导致无休止的服务器点击。在我看来,这似乎是一个干净的解决方案。</target>
        </trans-unit>
        <trans-unit id="5fa7cd51de4ab9f14020a2339f6f9a18c7d20b52" translate="yes" xml:space="preserve">
          <source>It is easy to remember syntax if you used to use Promises.</source>
          <target state="translated">如果你用惯了Promises,很容易记住语法。</target>
        </trans-unit>
        <trans-unit id="0150406d19d5021d34da8c499acc95b56afb4ad7" translate="yes" xml:space="preserve">
          <source>Make sure your function names still accurately describe what each piece is doing (I.E. GatherInputThenWait and CheckInput, rather than funcPart1 and funcPart2)</source>
          <target state="translated">确保你的函数名称仍然准确地描述了每个部分的工作内容(如GatherInputThenWait和CheckInput,而不是funcPart1和funcPart2)。</target>
        </trans-unit>
        <trans-unit id="30f570b0b295d9a4b9ee3f60ebbb6dbae119af3f" translate="yes" xml:space="preserve">
          <source>Most of the answers here are misguided or at the very least outdated. There is no reason javascript has to be single threaded, and indeed it isnt't. Today all the mainstream browsers support workers, before this was the case other javascript runtimes like Rhino and Node.js supported multithreading.</source>
          <target state="translated">这里的大多数答案都是错误的,至少是过时的。没有理由javascript必须是单线程的,事实上它并不是。现在所有的主流浏览器都支持worker,在这之前,其他的javascript运行时,如Rhino和Node.js都支持多线程。</target>
        </trans-unit>
        <trans-unit id="22167c2855c48b9a9d67372385bbc12a7ce4f074" translate="yes" xml:space="preserve">
          <source>Note that,</source>
          <target state="translated">注意到:</target>
        </trans-unit>
        <trans-unit id="f27fc794032f6a024cc25149494bb1dd3b3f5f1d" translate="yes" xml:space="preserve">
          <source>Note two things</source>
          <target state="translated">注意两点</target>
        </trans-unit>
        <trans-unit id="b11054d6723cc552b5c52d97639451aab9435928" translate="yes" xml:space="preserve">
          <source>Note, if you need multiple sleeps this can get ugly in a hurry and you might actually need to rethink your design.</source>
          <target state="translated">注意,如果你需要多次睡眠,这可能会在匆忙中变得很难看,你可能实际上需要重新考虑你的设计。</target>
        </trans-unit>
        <trans-unit id="2e134b4ec55e6e5445ce8f0be27b98fd12e45702" translate="yes" xml:space="preserve">
          <source>Now call it with:
sleep(5);</source>
          <target state="translated">现在称它为:睡眠(5)。</target>
        </trans-unit>
        <trans-unit id="f7b199b14d50e6584d5b7447ae5a4690e6247cb0" translate="yes" xml:space="preserve">
          <source>Now it reads easily as &quot;after N milliseconds, ...&quot; (or &quot;every N milliseconds, ...&quot;)</source>
          <target state="translated">现在它很容易读成 &quot;在N毫秒后,...........&quot; (或 &quot;每隔N毫秒,...&quot;)</target>
        </trans-unit>
        <trans-unit id="2a142fba7671be5d075cc4d1891fc3b3ae628a94" translate="yes" xml:space="preserve">
          <source>One scenario where you might want a sleep() function rather than using setTimeout() is if you have a function responding to a user click that will ultimately end up opening a new i.e. popup window and you have initiated some processing that requires a short period to complete before the popup is displayed. Moving the open window into a closure means that it typically gets blocked by the browser.</source>
          <target state="translated">有一种情况下,你可能需要一个sleep()函数而不是使用setTimeout()函数,这种情况是,如果你有一个响应用户点击的函数,最终会打开一个新的弹出窗口,而你已经启动了一些需要在短时间内完成的处理,然后才会显示弹出窗口。将打开的窗口移动到关闭状态意味着它通常会被浏览器阻止。</target>
        </trans-unit>
        <trans-unit id="5f60f78ebabe5acd857f520a5c9b9030e9c16056" translate="yes" xml:space="preserve">
          <source>Or as a one-liner:</source>
          <target state="translated">或者作为单行本。</target>
        </trans-unit>
        <trans-unit id="adcbfd8e666093f94b2541ef0419355bde4b9004" translate="yes" xml:space="preserve">
          <source>Ran a few 10 second timer benchmarks.</source>
          <target state="translated">跑了几个10秒的定时器基准。</target>
        </trans-unit>
        <trans-unit id="2e7073ab955872efe13a99629d7999239fa398ff" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://github.com/laverdet/node-fibers#sleep&quot;&gt;https://github.com/laverdet/node-fibers#sleep&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参见：&lt;/font&gt;&lt;a href=&quot;https://github.com/laverdet/node-fibers#sleep&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//github.com/laverdet/node-fibers#sleep&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="043053e055d752aac5374641b9b2898a2c46fa78" translate="yes" xml:space="preserve">
          <source>Should work in Node 9.3 or higher.</source>
          <target state="translated">应在Node 9.3或更高版本中工作。</target>
        </trans-unit>
        <trans-unit id="eb22a9c23335f6d4d7534a37da73381126294653" translate="yes" xml:space="preserve">
          <source>Since 2009 when this question was asked, JavaScript has evolved significantly. All other answers are now obsolete or overly complicated. Here is the current best practice:</source>
          <target state="translated">自2009年提出这个问题以来,JavaScript已经有了很大的发展。现在所有其他的答案都已经过时或过于复杂了。下面是目前的最佳实践。</target>
        </trans-unit>
        <trans-unit id="43b1daa1d5a4f104c402f234bd53ad18d56d8238" translate="yes" xml:space="preserve">
          <source>So I ate some burgers and got thinking:::
here is a solution that works... but you have to chop up your running codes...:::
yes, I know, this is just an easier to read refactoring... still...</source>
          <target state="translated">于是,我吃了点汉堡,想了想::::::::这里有一个办法可以解决...........但是你得把运行中的代码砍掉..........:::::::是的,我知道,这只是一个更容易读懂的重构.........还是......</target>
        </trans-unit>
        <trans-unit id="c917bdc3c92e1ef6b56a69a5ab6df675724ff6b1" translate="yes" xml:space="preserve">
          <source>So the user pushes the button, the script loads the invoice page, then waits, checking every quarter second to see if the invoice page is finished loading, then pops up the print dialog for the user to send it to the printer.  QED.</source>
          <target state="translated">于是用户按下按钮,脚本加载发票页面,然后等待,每隔一刻钟检查一次发票页面是否加载完毕,然后弹出打印对话框,让用户发送至打印机。QED。</target>
        </trans-unit>
        <trans-unit id="f3eda502aa4bb64d4f45ae83be2b989c07a563fa" translate="yes" xml:space="preserve">
          <source>So you are pretty much stuck with what others have suggested -- you'll need to break your code up into multiple functions.</source>
          <target state="translated">所以你基本就只能按照别人的建议来做了--你需要把代码分成多个函数。</target>
        </trans-unit>
        <trans-unit id="80e53a119901ab9ffc8c6f30a88a8d49b358559c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://ponyfoo.com/articles/understanding-javascript-async-await&quot;&gt;&lt;code&gt;async/await&lt;/code&gt;&lt;/a&gt; feature lets the code explicitly wait for a promise to settle (resolve or reject).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://ponyfoo.com/articles/understanding-javascript-async-await&quot;&gt; &lt;code&gt;async/await&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能可以让代码明确等待一个承诺来解决（解决或拒绝）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64e4b1c364695fafca7f7fea56048c757b8c24a3" translate="yes" xml:space="preserve">
          <source>The infamous sleep, or delay, function within any language is much debated.  Some will say that there should always be a signal or callback to fire a given functionality, others will argue that sometimes an arbitrary moment of delay is useful.  I say that to each their own and one rule can never dictate anything in this industry.</source>
          <target state="translated">在任何语言中,臭名昭著的休眠,或者说延迟功能在任何语言中都有很多争论。有些人会说,应该总是有一个信号或回调来启动一个给定的功能,另一些人会认为,有时任意的延迟时刻是有用的。我说,各说各话,在这个行业里,一条规则永远不能主宰任何事情。</target>
        </trans-unit>
        <trans-unit id="4bbac4158f31881069ba6aa4a45e90e40e4b5a5b" translate="yes" xml:space="preserve">
          <source>The issue here is that JavaScript is a single-thread event-based model. While in a specific case, it might be nice to have the whole engine wait for a few seconds, in general it is bad practice. Suppose I wanted to make use of your functions while writing my own? When I called your method, my methods would all freeze up. If JavaScript could somehow preserve your function's execution context, store it somewhere, then bring it back and continue later, then sleep could happen, but that would basically be threading.</source>
          <target state="translated">这里的问题是,JavaScript是一个基于单线程的事件模型。虽然在特定的情况下,让整个引擎等待几秒钟可能是很好的,但一般来说,这是不好的做法。假设我在编写自己的方法时,想利用你的函数?当我调用你的方法时,我的方法就会全部冻结。如果JavaScript能以某种方式保留你的函数的执行上下文,把它存储在某个地方,然后再把它带回来,稍后继续执行,那么休眠也是可以发生的,但那基本上就是线程了。</target>
        </trans-unit>
        <trans-unit id="5d69f448f7b241059244df04ea621abaf0720a5e" translate="yes" xml:space="preserve">
          <source>The shortest solution without any dependencies:</source>
          <target state="translated">最短的解决方案,没有任何依赖关系。</target>
        </trans-unit>
        <trans-unit id="e88005d2ced26e10db713b29399d6853b0af93d9" translate="yes" xml:space="preserve">
          <source>The way to do it is to breakdown your function in to before and after parts.</source>
          <target state="translated">方法是把你的功能分解成前后两部分。</target>
        </trans-unit>
        <trans-unit id="b37ed72e2e9d47d39c9991b9cb391df6db030880" translate="yes" xml:space="preserve">
          <source>Then schedule its execution with the setTimeout method:</source>
          <target state="translated">然后用setTimeout方法安排其执行。</target>
        </trans-unit>
        <trans-unit id="4db17d808338df4a951f50dad6aab9fd446e830d" translate="yes" xml:space="preserve">
          <source>Then, all you have to do when you want a painless pause in your JS is:</source>
          <target state="translated">那么,当你想要JS中的无痛暂停时,你要做的就是。</target>
        </trans-unit>
        <trans-unit id="9615294c90eb69615abbf40d417c05ef74ac9e04" translate="yes" xml:space="preserve">
          <source>This imitation of sleep is different from a true sleep function as it does not block the thread. It is simply sugar on top of javascript's current setTimeout function. This functionality type has been implemented in &lt;a href=&quot;http://taskjs.org/&quot;&gt;Task.js&lt;/a&gt; and should work today in Firefox.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;模仿睡眠不同于真正的睡眠功能，因为它不会阻塞线程。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它只是javascript当前setTimeout函数之上的糖。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此功能类型已在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://taskjs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Task.js中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实现，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并且今天应在Firefox中工作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd3ec0e7d3b9967c3a6029efd26533c141db4ff2" translate="yes" xml:space="preserve">
          <source>This is it. &lt;code&gt;await sleep(&amp;lt;duration&amp;gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;就是这个。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;await sleep(&amp;lt;duration&amp;gt;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b261a61a0063f0400318bf5314247207fdf2b998" translate="yes" xml:space="preserve">
          <source>This is not a duplicate of &lt;a href=&quot;https://stackoverflow.com/questions/758688/sleep-in-javascript-delay-between-actions&quot;&gt;Sleep in JavaScript - delay between actions&lt;/a&gt;; I want a &lt;em&gt;real sleep&lt;/em&gt; in the middle of a function, and not a delay before a piece of code executes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这不是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/758688/sleep-in-javascript-delay-between-actions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sleep&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的重复&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-动作之间的延迟&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我希望&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在函数中间&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;真正入睡&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而不是在执行一段代码之前没有延迟。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bcefba4dfc3225fbbbfcbea3928479abfdfb68f" translate="yes" xml:space="preserve">
          <source>This is probably the closest you'll get to something that simply does what you want.</source>
          <target state="translated">这可能是你最接近你想要的东西了。</target>
        </trans-unit>
        <trans-unit id="b1da0f74b42887ece7aee11e85593721f18925bf" translate="yes" xml:space="preserve">
          <source>This method achieves the purpose of not executing the lines of code you decide until AFTER your timeout, while still returning control back to the client PC to execute whatever else it has queued up.</source>
          <target state="translated">这种方法实现了在超时后才执行你决定的代码行的目的,同时还可以将控制权返回到客户端PC上,让它执行其他任何它已经排队的内容。</target>
        </trans-unit>
        <trans-unit id="4773a6f61e6babbf3a8225d01421a57f43fde7f9" translate="yes" xml:space="preserve">
          <source>Two new JavaScript features helped write this &quot;sleep&quot; function:</source>
          <target state="translated">两个新的JavaScript功能帮助编写了这个 &quot;睡眠 &quot;功能。</target>
        </trans-unit>
        <trans-unit id="8f0c5d9d2119ed6403fef0b878fe23389433b331" translate="yes" xml:space="preserve">
          <source>Use a timer, as specified in the link you referenced.</source>
          <target state="translated">按照你参考的链接中的规定,使用一个定时器。</target>
        </trans-unit>
        <trans-unit id="5a90f17f75c5f30a0d27e5e351fd17330adde5b4" translate="yes" xml:space="preserve">
          <source>Used like that :</source>
          <target state="translated">用过的,就像这样。</target>
        </trans-unit>
        <trans-unit id="88659426ae418806f8f99c39cde8af2c04a8034f" translate="yes" xml:space="preserve">
          <source>What is the JavaScript version of sleep()</source>
          <target state="translated">什么是JavaScript版本的sleep()</target>
        </trans-unit>
        <trans-unit id="ad7cf15474dda28fc6941f8fcf1e2761c89b4904" translate="yes" xml:space="preserve">
          <source>Where xxx is time in milliseconds. In my case (by way of justification), this was part of back-end order fulfillment at a very small company and I needed to print an invoice that had to be loaded from the server. I did it by loading the invoice (as a webpage) into an iFrame and then printing the iFrame. Of course, I had to wait until the page was fully loaded before I could print, so the JS had to pause. I accomplished this by having the invoice page (in the iFrame) change a hidden form field on the parent page with the onLoad event.  And the code on the parent page to print the invoice looked like this (irrelevant parts cut for clarity):</source>
          <target state="translated">其中xxx是时间,以毫秒为单位。在我的案例中,这是一个非常小的公司的后端订单执行的一部分,我需要打印一张必须从服务器上加载的发票。我是通过将发票(作为一个网页)加载到iFrame中,然后打印iFrame来完成的。当然,我必须等到页面完全加载完毕后才能打印,所以JS必须暂停。我是通过让发票页面(在iFrame中)用onLoad事件改变父页面上的一个隐藏表单字段来完成的。而在父页面上打印发票的代码是这样的(为了清晰起见,剪掉了不相关的部分)。</target>
        </trans-unit>
        <trans-unit id="27469fd06c25d5a9b1bbca93e521b7b806b686e3" translate="yes" xml:space="preserve">
          <source>With Atomics my error seems to stay under 600 microseconds. (0.6ms)</source>
          <target state="translated">使用Atomics,我的错误似乎保持在600微秒以下。(0.6毫秒)</target>
        </trans-unit>
        <trans-unit id="d2cb3253ab0686adfde608cd1008567edc45b5ed" translate="yes" xml:space="preserve">
          <source>With setTimeout I get a error of up to 7000 microseconds. (7ms)</source>
          <target state="translated">使用setTimeout,我得到的错误是高达7000微秒。(7毫秒)</target>
        </trans-unit>
        <trans-unit id="97d813a2848b6649cad312349ec1212e8f0331b9" translate="yes" xml:space="preserve">
          <source>Writing a sleep function is simple and made even more usable with JavaScript Promises:</source>
          <target state="translated">编写一个睡眠函数很简单,用JavaScript Promises让它变得更加易用。</target>
        </trans-unit>
        <trans-unit id="cc5f21e90bd523a5aec38705c20e647b5e920269" translate="yes" xml:space="preserve">
          <source>You can then just use it in a row of function calls as expected:</source>
          <target state="translated">然后,你就可以按照预期的那样在一排函数调用中使用它。</target>
        </trans-unit>
        <trans-unit id="266188b4a73ab0cf221d22fbbd4b4c542f61ce2c" translate="yes" xml:space="preserve">
          <source>You can then use them nicely with anonymous functions:</source>
          <target state="translated">然后你可以很好地使用它们与匿名功能。</target>
        </trans-unit>
        <trans-unit id="c78dccbf8728682d3f479fe621c4768875a998fe" translate="yes" xml:space="preserve">
          <source>You can't do a sleep like that in JavaScript, or, rather, you shouldn't. Running a sleep or a while loop will cause the user's browser to hang until the loop is done.</source>
          <target state="translated">你不能在JavaScript中做这样的休眠,或者说,你不应该这样做。运行sleep或while循环会导致用户的浏览器挂起,直到循环完成。</target>
        </trans-unit>
        <trans-unit id="db93b4ca57679b2ac0b6a2cfd12b0b8828c5f20b" translate="yes" xml:space="preserve">
          <source>Your question is a bit of a false choice, then. There is no way to sleep in the way you want, nor should you pursue the solution you suggest.</source>
          <target state="translated">那么,你的问题就有点假的选择了。没有办法按照你想的方式睡觉,也不应该追求你建议的解决方案。</target>
        </trans-unit>
        <trans-unit id="c0b9dc796583ee7ecb6a5a8434abeab65bb922c4" translate="yes" xml:space="preserve">
          <source>and also landed &lt;a href=&quot;https://blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/&quot;&gt;in Firefox Nightly in November 2016&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并&lt;/font&gt;&lt;a href=&quot;https://blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;于2016年11月&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;登陆&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Firefox Nightly&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db76f2442e45fb5849007fe4ee4d8c73f8aec35e" translate="yes" xml:space="preserve">
          <source>as a first argument you have to pass just the name (reference) of the function, without the parenthesis</source>
          <target state="translated">作为第一个参数,你必须只传递函数的名称(引用),不带括号</target>
        </trans-unit>
        <trans-unit id="d89a2a6e57657ec16f2c022086f3841b7255a820" translate="yes" xml:space="preserve">
          <source>contents of sleep.php:</source>
          <target state="translated">睡眠.php中的内容。</target>
        </trans-unit>
        <trans-unit id="e924dc15d21c0531a13369a8806d141c8e8c9cc7" translate="yes" xml:space="preserve">
          <source>it landed &lt;a href=&quot;https://blog.risingstack.com/async-await-node-js-7-nightly/&quot;&gt;in Node 7 in October 2016&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它&lt;/font&gt;&lt;a href=&quot;https://blog.risingstack.com/async-await-node-js-7-nightly/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;于2016年10月&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;降落&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Node 7上&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc26cfaae3c682227c6fa2db5b7512399d733bed" translate="yes" xml:space="preserve">
          <source>make sure your calling function is async</source>
          <target state="translated">确保你的调用函数是Async</target>
        </trans-unit>
        <trans-unit id="eac229878481a613da694a26816e8fa74de04089" translate="yes" xml:space="preserve">
          <source>promises are supported &lt;a href=&quot;http://node.green/#Promise&quot;&gt;in Node v0.12+&lt;/a&gt; and &lt;a href=&quot;http://caniuse.com/#feat=promises&quot;&gt;widely supported in browsers&lt;/a&gt;, except IE</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;诺言&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://node.green/#Promise&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在Node v0.12 +中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://caniuse.com/#feat=promises&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;受支持，&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并且&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在浏览器&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（IE除外）中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;得到广泛支持&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c37f9cd26e86a375ee1a9ac08e40437bba6adba" translate="yes" xml:space="preserve">
          <source>the second argument is time in miliseconds</source>
          <target state="translated">第二种说法是以米秒为单位的时间</target>
        </trans-unit>
        <trans-unit id="fa2f80b190663512311c372a57b5e2ff61edf414" translate="yes" xml:space="preserve">
          <source>then:</source>
          <target state="translated">then:</target>
        </trans-unit>
        <trans-unit id="c0ea10fc386ce45f02f65a4d51de8c1c62c07494" translate="yes" xml:space="preserve">
          <source>verified and working fine</source>
          <target state="translated">验收合格,运行良好</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
