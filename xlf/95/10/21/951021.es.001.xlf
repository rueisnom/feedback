<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/951021">
    <body>
      <group id="951021">
        <trans-unit id="406622c7f741253142b69af32d2fc69183da39c3" translate="yes" xml:space="preserve">
          <source>&amp;ndash; and the results are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- y los resultados son:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2700f8d4e97d3dfe5a1abe452d56182b8a5af7da" translate="yes" xml:space="preserve">
          <source>'Javascript is single threaded' is not a valid answer. For example running a sleep function within a worker would not block any of the code running in the ui thread.</source>
          <target state="translated">&quot;Javascript es de un solo hilo&quot; no es una respuesta válida.Por ejemplo,ejecutar una función de sueño dentro de un trabajador no bloquearía ningún código que se ejecuta en el hilo ui.</target>
        </trans-unit>
        <trans-unit id="8990b3dc26e543ba76aed35e3e55df64d120bdc8" translate="yes" xml:space="preserve">
          <source>(See the &lt;a href=&quot;https://stackoverflow.com/a/39914235/11236&quot;&gt;updated answer for 2016&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Ver la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/39914235/11236&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;respuesta actualizada para 2016&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6590ba2888c06482a38037df1538aafe54bd08f9" translate="yes" xml:space="preserve">
          <source>...and here's another link with client-side solutions: &lt;a href=&quot;http://www.devcheater.com/&quot;&gt;http://www.devcheater.com/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... y aqu&amp;iacute; hay otro enlace con soluciones del lado del cliente: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.devcheater.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.devcheater.com/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ece690a66efaf36ced110539212ae4615d51249f" translate="yes" xml:space="preserve">
          <source>//..............
example4:</source>
          <target state="translated">//..............
example4:</target>
        </trans-unit>
        <trans-unit id="dea789c54f2c923b12ea988cf9fcd5bc5b25c8da" translate="yes" xml:space="preserve">
          <source>//.................
example3:</source>
          <target state="translated">//.................
example3:</target>
        </trans-unit>
        <trans-unit id="2fbcc0af48ae16d408a6c7094d3f5f69ffd18acb" translate="yes" xml:space="preserve">
          <source>//....................................
//example2:</source>
          <target state="translated">//....................................
//example2:</target>
        </trans-unit>
        <trans-unit id="7e1c9ecfb5e594fd8df8c40ad65bff0a10eecc30" translate="yes" xml:space="preserve">
          <source>//.........................................
//example1:</source>
          <target state="translated">//.........................................
//example1:</target>
        </trans-unit>
        <trans-unit id="ff4e661d0ce2ba339c7427f12d9e41d828564d04" translate="yes" xml:space="preserve">
          <source>2017 &amp;mdash; 2019 update</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Actualizaci&amp;oacute;n 2017-2019&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28b9ccd63581781697b7ac78ab9b9e05a2e34933" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://ponyfoo.com/articles/es6-promises-in-depth&quot;&gt;Promises, a native feature of ES2015&lt;/a&gt; (aka ES6). We also use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow functions&lt;/a&gt; in the definition of the sleep function.</source>
          <target state="translated">&lt;a href=&quot;https://ponyfoo.com/articles/es6-promises-in-depth&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Promesas, una caracter&amp;iacute;stica nativa de ES2015&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (tambi&amp;eacute;n conocido como ES6). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n utilizamos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funciones de flecha&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la definici&amp;oacute;n de la funci&amp;oacute;n de suspensi&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d171b351e504cff00cf2938d35f83f28dca00dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; landed in V8 and has been &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/async-functions&quot;&gt;enabled by default since Chrome 55&lt;/a&gt; (released in Dec 2016)</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; aterriz&amp;oacute; en V8 y se ha &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/async-functions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;habilitado de forma predeterminada desde Chrome 55&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (lanzado en diciembre de 2016)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91228676b24e988faeaa3234de04afb8b25f56d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt; can only be executed in functions prefixed with the &lt;code&gt;async&lt;/code&gt; keyword, or at the &lt;a href=&quot;https://developers.google.com/web/updates/2017/08/devtools-release-notes#await&quot;&gt;top level&lt;/a&gt; of your script in some environments (e.g. the Chrome DevTools console, or Runkit).</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo se puede ejecutar en funciones con el prefijo de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;async&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , o en el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2017/08/devtools-release-notes#await&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nivel superior&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de su script en algunos entornos (por ejemplo, la consola Chrome DevTools o Runkit).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b65e8b3cd15cb2541889495ca76334a779e3f63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt; only pauses the current &lt;code&gt;async&lt;/code&gt; function</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo pausa la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;async&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; actual&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="21d45d9144479c79e01b39994c172dfe83dbe355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2019 Update using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait&quot;&gt;Atomics.wait&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Actualizaci&amp;oacute;n de 2019 usando &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Atomics.wait&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a0e3f2feb92d1b5feba526fda2d2ab318506af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fc75c7dfe1a500470f6123e2a2cfd9595dd1f10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Further Edit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Editar m&amp;aacute;s&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d4a06d15915075ed2306d054b2f1a25c0b71514" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only for debug/dev&lt;/strong&gt; , I post this if it's useful to someone</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo para depuraci&amp;oacute;n / desarrollo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , publico esto si es &amp;uacute;til para alguien&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="871a9903645c9d0b3fd6b02bed10f4e774f9b501" translate="yes" xml:space="preserve">
          <source>A lot of the answers don't (directly) answer the question, and neither does this one...</source>
          <target state="translated">Muchas de las respuestas no responden (directamente)a la pregunta,y esta tampoco...</target>
        </trans-unit>
        <trans-unit id="02fbbfb92f5ca1686942271ff578950170d22049" translate="yes" xml:space="preserve">
          <source>Adding my two bits. I needed a busy-wait for testing purposes. I didn't want to split the code as that would be a lot of work, so a simple for did it for me.</source>
          <target state="translated">Añadiendo mis dos partes.Necesitaba un tiempo de espera para las pruebas.No quería dividir el código ya que eso sería mucho trabajo,así que un simple &quot;para&quot; lo hizo por mí.</target>
        </trans-unit>
        <trans-unit id="9dcff79a8311a66c39757decc8b388bb60ea8cc6" translate="yes" xml:space="preserve">
          <source>Also, when you are calling &lt;code&gt;alert()&lt;/code&gt;, your code will be paused too, while alert is shown -- need to find a way to not display alert but get the same effect. :)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, cuando est&amp;aacute; llamando a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;alert()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , su c&amp;oacute;digo tambi&amp;eacute;n se pausar&amp;aacute;, mientras se muestra la alerta: debe encontrar una manera de no mostrar la alerta pero obtener el mismo efecto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5afed1ae2c6b9517f18fd5577443ba3207b5198f" translate="yes" xml:space="preserve">
          <source>As pointed out in the comments this will absolutely NOT WORK in a loop. You could do some fancy (ugly) hacking to make it work in a loop, but in general that will just make for disastrous spaghetti code.</source>
          <target state="translated">Como se ha señalado en los comentarios,esto NO FUNCIONARÁ en absoluto en un bucle.Podrías hacer un poco de hackeo elegante (feo)para que funcione en un bucle,pero en general eso sólo hará que el código de los espaguetis sea desastroso.</target>
        </trans-unit>
        <trans-unit id="78dc04bdeddc512eb551f2354e0f1b2d233bb353" translate="yes" xml:space="preserve">
          <source>Better solution to make things look like what most people want is to use an anonymous function:</source>
          <target state="translated">La mejor solución para que las cosas se vean como la mayoría de la gente quiere es usar una función anónima:</target>
        </trans-unit>
        <trans-unit id="e0fbc4de54aec003b0f963e25c69166ec126c9ce" translate="yes" xml:space="preserve">
          <source>But for server-side code, it may require a blocking function (for example, so you can effectively have thread synchronization).</source>
          <target state="translated">Pero para el código del lado del servidor,puede requerir una función de bloqueo (por ejemplo,para poder tener una sincronización efectiva de los hilos).</target>
        </trans-unit>
        <trans-unit id="d6af12b93df4bc50714ba128e4b639a5d59aa76b" translate="yes" xml:space="preserve">
          <source>CoffeeScript versions:</source>
          <target state="translated">Versiones del Script del café:</target>
        </trans-unit>
        <trans-unit id="5d60c7dd62fdcf4abcc61a6a7d335b7117968b4d" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
          <target state="translated">Compatibility</target>
        </trans-unit>
        <trans-unit id="364739c396ccc878b2a23642e03231bfa4bf99da" translate="yes" xml:space="preserve">
          <source>Define a function you want to execute like this:</source>
          <target state="translated">Define una función que quieras ejecutar de esta manera:</target>
        </trans-unit>
        <trans-unit id="5301648dcf6b53cefc9ed52999aaa92d4603cae0" translate="yes" xml:space="preserve">
          <source>Edit</source>
          <target state="translated">Edit</target>
        </trans-unit>
        <trans-unit id="f52876763a0f587fe6c80cf50302560ad36a2f93" translate="yes" xml:space="preserve">
          <source>Every time I've wanted a sleep in the middle of my function, I refactored to use a &lt;code&gt;setTimeout()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada vez que quer&amp;iacute;a dormir en el medio de mi funci&amp;oacute;n, refactorizaba el uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35e59ef9296b27b71a05dcd1854ce1d1ad148089" translate="yes" xml:space="preserve">
          <source>Every two second interval hide text for one second. This shows how to use setInterval and setTimeout to show and hide text each second.</source>
          <target state="translated">Cada intervalo de dos segundos esconde el texto durante un segundo.Esto muestra cómo usar setInterval y setTimeout para mostrar y ocultar el texto cada segundo.</target>
        </trans-unit>
        <trans-unit id="ec471d84b36457f0d9d75c03377c9e3cd5f3de93" translate="yes" xml:space="preserve">
          <source>Example of use:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="0667554d48345180f0b6c72a70f8c62ccbe435d7" translate="yes" xml:space="preserve">
          <source>First you have to get Java loaded up on the page and make its methods available. To do that, I did this:</source>
          <target state="translated">Primero tienes que cargar Java en la página y hacer que sus métodos estén disponibles.Para hacer eso,hice esto:</target>
        </trans-unit>
        <trans-unit id="9fd0da866187697a74c7a4d585f209f050b0a6ff" translate="yes" xml:space="preserve">
          <source>First:</source>
          <target state="translated">First:</target>
        </trans-unit>
        <trans-unit id="ad94030e3a79c84d3baf40f987b4a14740140416" translate="yes" xml:space="preserve">
          <source>For browsers, I agree that setTimeout and setInterval are the way to go.</source>
          <target state="translated">Para los navegadores,estoy de acuerdo en que setTimeout y setInterval son el camino a seguir.</target>
        </trans-unit>
        <trans-unit id="1d78b9f31f69fd44d434b274fb4468846341afdd" translate="yes" xml:space="preserve">
          <source>For the love of $DEITY please do not make a busy-wait sleep function.  &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt; do everything you need.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por amor a $ DEITY, no realice una funci&amp;oacute;n de espera de ocupado. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setInterval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hacen todo lo que necesitas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="571cdab843f3ebdd129bb314e313e2cd1dd65f3b" translate="yes" xml:space="preserve">
          <source>For the specific case of wanting to space out a set of calls being executed by a loop, you can use something like the code below with prototype. Without prototype, you can substitute the delay function with setTimeout.</source>
          <target state="translated">Para el caso específico de querer espaciar un conjunto de llamadas que se ejecutan por un bucle,se puede utilizar algo como el código de abajo con el prototipo.Sin prototipo,puedes sustituir la función de retardo por setTimeout.</target>
        </trans-unit>
        <trans-unit id="efcd1f399246bfc58ed9c6c688251a2c24ecf010" translate="yes" xml:space="preserve">
          <source>Here you go.  As the code says, don't be a bad dev and use this on websites.  It's a development utility function.</source>
          <target state="translated">Aquí tienes.Como dice el código,no seas un mal devorador y usa esto en los sitios web.Es una función de utilidad de desarrollo.</target>
        </trans-unit>
        <trans-unit id="c492a5603570e145be84a5c0681b5e6e7ccb1118" translate="yes" xml:space="preserve">
          <source>Here's a simple solution using a synchronous XMLHttpRequest:</source>
          <target state="translated">Aquí hay una solución simple usando un XMLHttpRequest síncrono:</target>
        </trans-unit>
        <trans-unit id="b08af946d2b887ee9e4b258e0a4ecd19cd505273" translate="yes" xml:space="preserve">
          <source>Here's an example fresh from their own readme:</source>
          <target state="translated">Aquí hay un ejemplo reciente de su propia lectura:</target>
        </trans-unit>
        <trans-unit id="d3cadff62c66a60c1e0320a49970845401a41771" translate="yes" xml:space="preserve">
          <source>Here's my two cents (or functions):</source>
          <target state="translated">Aquí están mis dos centavos (o funciones):</target>
        </trans-unit>
        <trans-unit id="0382b9458ed8f29fea57cc19ae4614f7cc404225" translate="yes" xml:space="preserve">
          <source>However, setTimeout does not hold up execution, it executes the next line of the function immediately after the timeout is SET, not after the timeout expires, so that does not accomplish the same task that a sleep would accomplish.</source>
          <target state="translated">Sin embargo,setTimeout no detiene la ejecución,ejecuta la siguiente línea de la función inmediatamente después de que el tiempo de espera es SET,no después de que el tiempo de espera expire,por lo que no cumple la misma tarea que cumpliría un sueño.</target>
        </trans-unit>
        <trans-unit id="ca583f63dc43e0e510a5ef5b0624a4eca0dd835d" translate="yes" xml:space="preserve">
          <source>I agree with the other posters, a busy sleep is just a bad idea.</source>
          <target state="translated">Estoy de acuerdo con los otros carteles,un sueño ocupado es una mala idea.</target>
        </trans-unit>
        <trans-unit id="762abd47fb03bf8b10ac7924bef5545dfb6fab19" translate="yes" xml:space="preserve">
          <source>I can understand the purpose of a sleep function if you have to deal with synchronous execution. The setInterval and setTimeout functions create a parallel execution thread which returns the execution sequence back to the main program, which is ineffective if you have to wait for a given result. Of course one may use events and handlers, but in some cases is not what is intended.</source>
          <target state="translated">Puedo entender el propósito de una función de sueño si tienes que lidiar con la ejecución sincrónica.Las funciones setInterval y setTimeout crean un hilo de ejecución paralelo que devuelve la secuencia de ejecución al programa principal,lo cual no es efectivo si tienes que esperar un resultado determinado.Por supuesto que se pueden utilizar eventos y manejadores,pero en algunos casos no es lo que se pretende.</target>
        </trans-unit>
        <trans-unit id="a3cef0714e27c56cfe5505fa00e8d235660d562a" translate="yes" xml:space="preserve">
          <source>I don't see any downside in doing this and it did the trick for me.</source>
          <target state="translated">No veo ningún inconveniente en hacer esto y me ha servido de mucho.</target>
        </trans-unit>
        <trans-unit id="a2ea779d0a3649c2ae0a107db682d6488f2b6ab9" translate="yes" xml:space="preserve">
          <source>I have searched/googled quite a few webpages on javascript sleep/wait... and there is NO answer if you want javascript to &quot;RUN, DELAY, RUN&quot;... what most people got was either, &quot;RUN, RUN(useless stuff), RUN&quot; or &quot;RUN, RUN + delayed RUN&quot;....</source>
          <target state="translated">He buscado en google bastantes páginas web en javascript sleepwait...y NO hay respuesta si quieres javascript a &quot;CORRER,RETRASAR,CORRER&quot;...lo que la mayoría de la gente consiguió fue,&quot;CORRER,CORRER (cosas inútiles),CORRER&quot; o &quot;CORRER,CORRER+CORRER retrasado&quot;...</target>
        </trans-unit>
        <trans-unit id="846334fe176a59e836dbcd318ba4902c8504517c" translate="yes" xml:space="preserve">
          <source>I know this is a bit of an old question, but if (like me) you're using Javascript with Rhino, you can use...</source>
          <target state="translated">Sé que es una pregunta un poco vieja,pero si (como yo)estás usando Javascript con Rhino,puedes usar...</target>
        </trans-unit>
        <trans-unit id="654099779870d2baee906c5427be5204727b2fd8" translate="yes" xml:space="preserve">
          <source>I needed a pretty accurate timer in Node.js and it works great for that.
However it seems like there is extremely limited support in browsers.</source>
          <target state="translated">Necesitaba un temporizador bastante preciso en Node.js y funciona muy bien para eso.Sin embargo parece que hay un soporte extremadamente limitado en los navegadores.</target>
        </trans-unit>
        <trans-unit id="96f4f3d3f12779db1703b01c2464fd5c83de7ce6" translate="yes" xml:space="preserve">
          <source>I personally like the simple:</source>
          <target state="translated">Personalmente me gusta lo simple:</target>
        </trans-unit>
        <trans-unit id="fe95ddc694ec2735bd2d23af9cb11c280aa48457" translate="yes" xml:space="preserve">
          <source>I think it's perfectly reasonable to want to perform an action, wait, then perform another action. If you are used to writing in multi-threaded languages, you probably have the idea of yielding execution for a set amount of time until your thread wakes up.</source>
          <target state="translated">Creo que es perfectamente razonable querer realizar una acción,esperar,y luego realizar otra acción.Si estás acostumbrado a escribir en lenguajes multi-hilo,probablemente tengas la idea de ceder la ejecución por un tiempo determinado hasta que tu hilo se despierte.</target>
        </trans-unit>
        <trans-unit id="57d7896ab6043212f596391d958c7a99ca2dcb14" translate="yes" xml:space="preserve">
          <source>I would encapsulate setTimeOut in a Promise for code consistency with other asynchronous tasks : Demo in &lt;a href=&quot;http://jsfiddle.net/a4gjhpgd/&quot;&gt;Fiddle&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Encapsular&amp;iacute;a setTimeOut en una promesa para la coherencia del c&amp;oacute;digo con otras tareas asincr&amp;oacute;nicas: demostraci&amp;oacute;n en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/a4gjhpgd/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Fiddle&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6401a6a07b06b26d74cf17ee0ceb50de6e36ff73" translate="yes" xml:space="preserve">
          <source>I'm using it all the time to create fake load time while creating scripts in P5js</source>
          <target state="translated">Lo uso todo el tiempo para crear falsos tiempos de carga mientras creo scripts en P5js.</target>
        </trans-unit>
        <trans-unit id="4ca06cff7abf55f5c9f43c01a64a8c7dcd8cb73d" translate="yes" xml:space="preserve">
          <source>I've searched for sleep solution too (not for production code, only for dev/tests) and found this article:</source>
          <target state="translated">También he buscado una solución para dormir (no para el código de producción,sólo para las devoluciones)y he encontrado este artículo:</target>
        </trans-unit>
        <trans-unit id="f5fea6a22e18ccd301c4087ce8c66e970a37d2a2" translate="yes" xml:space="preserve">
          <source>If for some weird reason you're using Node older than 7 (which has reached &lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;end of life&lt;/a&gt;), or are targeting old browsers, &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; can still be used via &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; (a tool that will &lt;a href=&quot;https://www.stevefenton.co.uk/2012/11/compiling-vs-transpiling/&quot;&gt;transpile&lt;/a&gt; JavaScript + new features into plain old JavaScript), with the &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&quot;&gt;&lt;code&gt;transform-async-to-generator&lt;/code&gt;&lt;/a&gt; plugin.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si, por alguna extra&amp;ntilde;a raz&amp;oacute;n, est&amp;aacute; utilizando un nodo anterior a 7 (que ha llegado al &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;final de su vida &amp;uacute;til&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), o est&amp;aacute; apuntando a navegadores antiguos, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;async&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; todav&amp;iacute;a se puede usar a trav&amp;eacute;s de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://babeljs.io/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Babel&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (una herramienta que &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.stevefenton.co.uk/2012/11/compiling-vs-transpiling/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;transpilar&amp;aacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JavaScript + nuevas funciones en &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;versiones&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; antiguas) JavaScript), con el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;complemento &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&quot;&gt; &lt;code&gt;transform-async-to-generator&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7f1a9e8c81cc1c08f905fe5adbef82fe04d5f05a" translate="yes" xml:space="preserve">
          <source>If you want less clunky functions than &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;setInterval&lt;/code&gt;, you can wrap them in functions that just reverse the order of the arguments and give them nice names:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea funciones menos complicadas que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setTimeout&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;setInterval&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ajustarlas&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en funciones que simplemente invierten el orden de los argumentos y les dan nombres agradables:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da602048781854e83e9662f408b420c84b0f626b" translate="yes" xml:space="preserve">
          <source>If you're on node.js, you can have a look at &lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt;fibers&lt;/a&gt; &amp;ndash; a native C extension to node, a kinda-multi-threading simulation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; en node.js, puede echar un vistazo a las &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fibras&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : una extensi&amp;oacute;n nativa de C al nodo, una simulaci&amp;oacute;n de subprocesos m&amp;uacute;ltiples.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4e46f600acaca2a4b83a1850f0748d67f693b29" translate="yes" xml:space="preserve">
          <source>If you're using jQuery, someone actually created a &quot;delay&quot; plugin that's nothing more than a wrapper for setTimeout:</source>
          <target state="translated">Si estás usando jQuery,alguien creó un plugin de &quot;delay&quot; que no es más que un envoltorio para setTimeout:</target>
        </trans-unit>
        <trans-unit id="3d8867db255383103753e2daf16182ca1558f387" translate="yes" xml:space="preserve">
          <source>If you're using node.js and meteor, you may have run into the limitations of using setTimeout in a fiber. Here is the code for server-side sleep.</source>
          <target state="translated">Si estás usando node.js y meteorito,puede que te hayas encontrado con las limitaciones de usar setTimeout en una fibra.Aquí está el código para el sueño del lado del servidor.</target>
        </trans-unit>
        <trans-unit id="4c04a5c45e89bf9986bea2ffc80dc17ad658f5e3" translate="yes" xml:space="preserve">
          <source>In JavaScript, I rewrite every function so that it can end as soon as possible. You want the browser back in control so it can make your DOM changes.</source>
          <target state="translated">En JavaScript,reescribo cada función para que pueda terminar lo antes posible.Quieres que el navegador vuelva a tener el control para que pueda hacer tus cambios de DOM.</target>
        </trans-unit>
        <trans-unit id="363014fc9ae5271356820b562e6b0d800b2b5e78" translate="yes" xml:space="preserve">
          <source>In newer runtimes supporting generators and yield, one could bring similar functionality to the sleep function in a single threaded environment:</source>
          <target state="translated">En los nuevos tiempos de ejecución que soportan los generadores y el rendimiento,se podría aportar una funcionalidad similar a la función de sueño en un entorno de un solo hilo:</target>
        </trans-unit>
        <trans-unit id="f6c306f06e3f986a96abf05b5886207f8c4ecd91" translate="yes" xml:space="preserve">
          <source>Interesting stuff, in Firebug ( &amp;amp; probably other js consoles ), nothing happen after hitting enter, only after the sleep duration specified (...)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cosas interesantes, en Firebug (y probablemente otras consolas js), no sucede nada despu&amp;eacute;s de presionar enter, solo despu&amp;eacute;s de la duraci&amp;oacute;n del sue&amp;ntilde;o especificada (...)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bffb9a19c94543015e579e9573a74f691273a065" translate="yes" xml:space="preserve">
          <source>Is there a better way to engineer a &lt;code&gt;sleep&lt;/code&gt; in JavaScript than the following &lt;code&gt;pausecomp&lt;/code&gt; function (&lt;a href=&quot;http://www.sean.co.uk/a/webdesign/javascriptdelay.shtm&quot;&gt;taken from here&lt;/a&gt;)?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Hay una mejor manera de dise&amp;ntilde;ar un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sleep&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en JavaScript que la siguiente &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;pausecomp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.sean.co.uk/a/webdesign/javascriptdelay.shtm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tomada de aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff9ae877d3ed0b7d0fde1fbd4cf68681d478372f" translate="yes" xml:space="preserve">
          <source>It allows you to do a real &lt;code&gt;sleep&lt;/code&gt; in a way which is blocking execution in a fiber, but it's non-blocking in the main thread and other fibers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Le permite &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sleep&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de una manera que bloquea la ejecuci&amp;oacute;n en una fibra, pero no bloquea el hilo principal y otras fibras.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54c8fa8534a8d88415296aac5f80fd9033d7c4e8" translate="yes" xml:space="preserve">
          <source>It can be done using Java's sleep method. I've tested it in FF and IE and it doesn't lock the computer, chew up resources, or cause endless server hits. Seems like a clean solution to me.</source>
          <target state="translated">Se puede hacer usando el método del sueño de Java.Lo he probado en FF e IE y no bloquea el ordenador,ni mastica recursos,ni causa interminables visitas al servidor.Me parece una solución limpia.</target>
        </trans-unit>
        <trans-unit id="5fa7cd51de4ab9f14020a2339f6f9a18c7d20b52" translate="yes" xml:space="preserve">
          <source>It is easy to remember syntax if you used to use Promises.</source>
          <target state="translated">Es fácil recordar la sintaxis si solías usar Promesas.</target>
        </trans-unit>
        <trans-unit id="0150406d19d5021d34da8c499acc95b56afb4ad7" translate="yes" xml:space="preserve">
          <source>Make sure your function names still accurately describe what each piece is doing (I.E. GatherInputThenWait and CheckInput, rather than funcPart1 and funcPart2)</source>
          <target state="translated">Asegúrate de que los nombres de las funciones siguen describiendo con precisión lo que hace cada pieza (por ejemplo,GatherInputThenWait y CheckInput,en lugar de funcPart1 y funcPart2)</target>
        </trans-unit>
        <trans-unit id="30f570b0b295d9a4b9ee3f60ebbb6dbae119af3f" translate="yes" xml:space="preserve">
          <source>Most of the answers here are misguided or at the very least outdated. There is no reason javascript has to be single threaded, and indeed it isnt't. Today all the mainstream browsers support workers, before this was the case other javascript runtimes like Rhino and Node.js supported multithreading.</source>
          <target state="translated">La mayoría de las respuestas aquí son erróneas o al menos anticuadas.No hay ninguna razón por la que el javascript tenga que ser de un solo hilo,y de hecho no lo es.Hoy en día todos los navegadores principales apoyan a los trabajadores,antes de que esto fuera el caso otros tiempos de ejecución de javascript como Rhino y Node.js soportaban multihilo.</target>
        </trans-unit>
        <trans-unit id="22167c2855c48b9a9d67372385bbc12a7ce4f074" translate="yes" xml:space="preserve">
          <source>Note that,</source>
          <target state="translated">Fíjese en eso,</target>
        </trans-unit>
        <trans-unit id="f27fc794032f6a024cc25149494bb1dd3b3f5f1d" translate="yes" xml:space="preserve">
          <source>Note two things</source>
          <target state="translated">Note dos cosas...</target>
        </trans-unit>
        <trans-unit id="b11054d6723cc552b5c52d97639451aab9435928" translate="yes" xml:space="preserve">
          <source>Note, if you need multiple sleeps this can get ugly in a hurry and you might actually need to rethink your design.</source>
          <target state="translated">Nota,si necesitas dormir varias veces esto se puede poner feo en un apuro y puede que necesites repensar tu diseño.</target>
        </trans-unit>
        <trans-unit id="2e134b4ec55e6e5445ce8f0be27b98fd12e45702" translate="yes" xml:space="preserve">
          <source>Now call it with:
sleep(5);</source>
          <target state="translated">Ahora llámalo con:dormir(5);</target>
        </trans-unit>
        <trans-unit id="f7b199b14d50e6584d5b7447ae5a4690e6247cb0" translate="yes" xml:space="preserve">
          <source>Now it reads easily as &quot;after N milliseconds, ...&quot; (or &quot;every N milliseconds, ...&quot;)</source>
          <target state="translated">Ahora se lee fácilmente como &quot;después de N milisegundos,...&quot; (o &quot;cada N milisegundos,...&quot;)</target>
        </trans-unit>
        <trans-unit id="2a142fba7671be5d075cc4d1891fc3b3ae628a94" translate="yes" xml:space="preserve">
          <source>One scenario where you might want a sleep() function rather than using setTimeout() is if you have a function responding to a user click that will ultimately end up opening a new i.e. popup window and you have initiated some processing that requires a short period to complete before the popup is displayed. Moving the open window into a closure means that it typically gets blocked by the browser.</source>
          <target state="translated">Un escenario en el que se podría querer una función sleep()en lugar de usar setTimeout()es si se tiene una función que responda a un clic del usuario y que finalmente termine abriendo una nueva ventana emergente,es decir,que haya iniciado algún procesamiento que requiera un corto período de tiempo para completarse antes de que se muestre la ventana emergente.Mover la ventana abierta a un cierre significa que típicamente es bloqueada por el navegador.</target>
        </trans-unit>
        <trans-unit id="5f60f78ebabe5acd857f520a5c9b9030e9c16056" translate="yes" xml:space="preserve">
          <source>Or as a one-liner:</source>
          <target state="translated">O como una línea de una sola vez:</target>
        </trans-unit>
        <trans-unit id="adcbfd8e666093f94b2541ef0419355bde4b9004" translate="yes" xml:space="preserve">
          <source>Ran a few 10 second timer benchmarks.</source>
          <target state="translated">Hice unos cuantos puntos de referencia de 10 segundos.</target>
        </trans-unit>
        <trans-unit id="2e7073ab955872efe13a99629d7999239fa398ff" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://github.com/laverdet/node-fibers#sleep&quot;&gt;https://github.com/laverdet/node-fibers#sleep&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ver: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/laverdet/node-fibers#sleep&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/laverdet/node-fibers#sleep&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="043053e055d752aac5374641b9b2898a2c46fa78" translate="yes" xml:space="preserve">
          <source>Should work in Node 9.3 or higher.</source>
          <target state="translated">Debería funcionar en el nodo 9.3 o superior.</target>
        </trans-unit>
        <trans-unit id="eb22a9c23335f6d4d7534a37da73381126294653" translate="yes" xml:space="preserve">
          <source>Since 2009 when this question was asked, JavaScript has evolved significantly. All other answers are now obsolete or overly complicated. Here is the current best practice:</source>
          <target state="translated">Desde 2009,cuando se hizo esta pregunta,el JavaScript ha evolucionado significativamente.Todas las demás respuestas son ahora obsoletas o demasiado complicadas.Aquí está la mejor práctica actual:</target>
        </trans-unit>
        <trans-unit id="43b1daa1d5a4f104c402f234bd53ad18d56d8238" translate="yes" xml:space="preserve">
          <source>So I ate some burgers and got thinking:::
here is a solution that works... but you have to chop up your running codes...:::
yes, I know, this is just an easier to read refactoring... still...</source>
          <target state="translated">Así que comí algunas hamburguesas y pensé::aquí hay una solución que funciona...pero tienes que cortar tus códigos de funcionamiento...::sí,lo sé,esto es sólo una refactorización más fácil de leer...aún...</target>
        </trans-unit>
        <trans-unit id="c917bdc3c92e1ef6b56a69a5ab6df675724ff6b1" translate="yes" xml:space="preserve">
          <source>So the user pushes the button, the script loads the invoice page, then waits, checking every quarter second to see if the invoice page is finished loading, then pops up the print dialog for the user to send it to the printer.  QED.</source>
          <target state="translated">Así que el usuario presiona el botón,el guión carga la página de la factura,luego espera,revisando cada cuarto de segundo para ver si la página de la factura ha terminado de cargarse,y luego aparece el diálogo de impresión para que el usuario lo envíe a la impresora.QED.</target>
        </trans-unit>
        <trans-unit id="f3eda502aa4bb64d4f45ae83be2b989c07a563fa" translate="yes" xml:space="preserve">
          <source>So you are pretty much stuck with what others have suggested -- you'll need to break your code up into multiple functions.</source>
          <target state="translated">Así que estás bastante atascado con lo que otros han sugerido...tendrás que dividir tu código en múltiples funciones.</target>
        </trans-unit>
        <trans-unit id="80e53a119901ab9ffc8c6f30a88a8d49b358559c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://ponyfoo.com/articles/understanding-javascript-async-await&quot;&gt;&lt;code&gt;async/await&lt;/code&gt;&lt;/a&gt; feature lets the code explicitly wait for a promise to settle (resolve or reject).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://ponyfoo.com/articles/understanding-javascript-async-await&quot;&gt; &lt;code&gt;async/await&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; permite que el c&amp;oacute;digo espere expl&amp;iacute;citamente una promesa para resolver (resolver o rechazar).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64e4b1c364695fafca7f7fea56048c757b8c24a3" translate="yes" xml:space="preserve">
          <source>The infamous sleep, or delay, function within any language is much debated.  Some will say that there should always be a signal or callback to fire a given functionality, others will argue that sometimes an arbitrary moment of delay is useful.  I say that to each their own and one rule can never dictate anything in this industry.</source>
          <target state="translated">La infame función de sueño,o retraso,dentro de cualquier idioma es muy debatida.Algunos dirán que siempre debe haber una señal o llamada de retorno para disparar una determinada función,otros argumentarán que a veces un momento arbitrario de retraso es útil.Yo digo que cada uno tiene su propia regla y que una regla nunca puede dictar nada en esta industria.</target>
        </trans-unit>
        <trans-unit id="4bbac4158f31881069ba6aa4a45e90e40e4b5a5b" translate="yes" xml:space="preserve">
          <source>The issue here is that JavaScript is a single-thread event-based model. While in a specific case, it might be nice to have the whole engine wait for a few seconds, in general it is bad practice. Suppose I wanted to make use of your functions while writing my own? When I called your method, my methods would all freeze up. If JavaScript could somehow preserve your function's execution context, store it somewhere, then bring it back and continue later, then sleep could happen, but that would basically be threading.</source>
          <target state="translated">El problema aquí es que JavaScript es un modelo basado en eventos de un solo hilo.Mientras que en un caso específico,podría ser bueno tener todo el motor esperando unos segundos,en general es una mala práctica.Supongamos que quisiera hacer uso de sus funciones mientras escribo las mías.Cuando llamara a tu método,mis métodos se congelarían.Si JavaScript pudiera de alguna manera preservar el contexto de ejecución de tu función,almacenarlo en algún lugar,luego traerlo de vuelta y continuar más tarde,entonces el sueño podría suceder,pero eso sería básicamente un hilo de rosca.</target>
        </trans-unit>
        <trans-unit id="5d69f448f7b241059244df04ea621abaf0720a5e" translate="yes" xml:space="preserve">
          <source>The shortest solution without any dependencies:</source>
          <target state="translated">La solución más corta y sin dependencias:</target>
        </trans-unit>
        <trans-unit id="e88005d2ced26e10db713b29399d6853b0af93d9" translate="yes" xml:space="preserve">
          <source>The way to do it is to breakdown your function in to before and after parts.</source>
          <target state="translated">La forma de hacerlo es descomponer su función en partes de antes y después.</target>
        </trans-unit>
        <trans-unit id="b37ed72e2e9d47d39c9991b9cb391df6db030880" translate="yes" xml:space="preserve">
          <source>Then schedule its execution with the setTimeout method:</source>
          <target state="translated">Luego programe su ejecución con el método setTimeout:</target>
        </trans-unit>
        <trans-unit id="4db17d808338df4a951f50dad6aab9fd446e830d" translate="yes" xml:space="preserve">
          <source>Then, all you have to do when you want a painless pause in your JS is:</source>
          <target state="translated">Entonces,todo lo que tienes que hacer cuando quieres una pausa sin dolor en tu JS es:</target>
        </trans-unit>
        <trans-unit id="9615294c90eb69615abbf40d417c05ef74ac9e04" translate="yes" xml:space="preserve">
          <source>This imitation of sleep is different from a true sleep function as it does not block the thread. It is simply sugar on top of javascript's current setTimeout function. This functionality type has been implemented in &lt;a href=&quot;http://taskjs.org/&quot;&gt;Task.js&lt;/a&gt; and should work today in Firefox.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta imitaci&amp;oacute;n del sue&amp;ntilde;o es diferente de una verdadera funci&amp;oacute;n de sue&amp;ntilde;o, ya que no bloquea el hilo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es simplemente az&amp;uacute;car por encima de la funci&amp;oacute;n setTimeout actual de javascript. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este tipo de funcionalidad se ha implementado en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://taskjs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Task.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y deber&amp;iacute;a funcionar hoy en Firefox.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fd3ec0e7d3b9967c3a6029efd26533c141db4ff2" translate="yes" xml:space="preserve">
          <source>This is it. &lt;code&gt;await sleep(&amp;lt;duration&amp;gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso es todo. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;await sleep(&amp;lt;duration&amp;gt;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b261a61a0063f0400318bf5314247207fdf2b998" translate="yes" xml:space="preserve">
          <source>This is not a duplicate of &lt;a href=&quot;https://stackoverflow.com/questions/758688/sleep-in-javascript-delay-between-actions&quot;&gt;Sleep in JavaScript - delay between actions&lt;/a&gt;; I want a &lt;em&gt;real sleep&lt;/em&gt; in the middle of a function, and not a delay before a piece of code executes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto no es un duplicado de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/758688/sleep-in-javascript-delay-between-actions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sleep en JavaScript: retraso entre acciones&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Quiero un &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sue&amp;ntilde;o real&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en medio de una funci&amp;oacute;n, y no un retraso antes de que se ejecute un fragmento de c&amp;oacute;digo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4bcefba4dfc3225fbbbfcbea3928479abfdfb68f" translate="yes" xml:space="preserve">
          <source>This is probably the closest you'll get to something that simply does what you want.</source>
          <target state="translated">Esto es probablemente lo más cerca que estarás de algo que simplemente hace lo que quieres.</target>
        </trans-unit>
        <trans-unit id="b1da0f74b42887ece7aee11e85593721f18925bf" translate="yes" xml:space="preserve">
          <source>This method achieves the purpose of not executing the lines of code you decide until AFTER your timeout, while still returning control back to the client PC to execute whatever else it has queued up.</source>
          <target state="translated">Este método logra el propósito de no ejecutar las líneas de código que usted decida hasta DESPUÉS de su tiempo de espera,mientras que aún devuelve el control al PC cliente para ejecutar cualquier otra cosa que tenga en cola.</target>
        </trans-unit>
        <trans-unit id="4773a6f61e6babbf3a8225d01421a57f43fde7f9" translate="yes" xml:space="preserve">
          <source>Two new JavaScript features helped write this &quot;sleep&quot; function:</source>
          <target state="translated">Dos nuevas características de JavaScript ayudaron a escribir esta función de &quot;dormir&quot;:</target>
        </trans-unit>
        <trans-unit id="8f0c5d9d2119ed6403fef0b878fe23389433b331" translate="yes" xml:space="preserve">
          <source>Use a timer, as specified in the link you referenced.</source>
          <target state="translated">Utilice un temporizador,como se especifica en el enlace al que ha hecho referencia.</target>
        </trans-unit>
        <trans-unit id="5a90f17f75c5f30a0d27e5e351fd17330adde5b4" translate="yes" xml:space="preserve">
          <source>Used like that :</source>
          <target state="translated">Usado así:</target>
        </trans-unit>
        <trans-unit id="88659426ae418806f8f99c39cde8af2c04a8034f" translate="yes" xml:space="preserve">
          <source>What is the JavaScript version of sleep()</source>
          <target state="translated">¿Cuál es la versión de JavaScript de sleep()</target>
        </trans-unit>
        <trans-unit id="ad7cf15474dda28fc6941f8fcf1e2761c89b4904" translate="yes" xml:space="preserve">
          <source>Where xxx is time in milliseconds. In my case (by way of justification), this was part of back-end order fulfillment at a very small company and I needed to print an invoice that had to be loaded from the server. I did it by loading the invoice (as a webpage) into an iFrame and then printing the iFrame. Of course, I had to wait until the page was fully loaded before I could print, so the JS had to pause. I accomplished this by having the invoice page (in the iFrame) change a hidden form field on the parent page with the onLoad event.  And the code on the parent page to print the invoice looked like this (irrelevant parts cut for clarity):</source>
          <target state="translated">Donde xxx es el tiempo en milisegundos.En mi caso (a modo de justificación),esto era parte de la realización de pedidos en una empresa muy pequeña y necesitaba imprimir una factura que debía ser cargada desde el servidor.Lo hice cargando la factura (como una página web)en un iFrame y luego imprimiendo el iFrame.Por supuesto,tuve que esperar hasta que la página estuviera completamente cargada antes de poder imprimir,así que el JS tuvo que hacer una pausa.Logré esto haciendo que la página de la factura (en el iFrame)cambiara un campo de formulario oculto en la página principal con el evento onLoad.Y el código en la página principal para imprimir la factura se veía así (partes irrelevantes cortadas para mayor claridad):</target>
        </trans-unit>
        <trans-unit id="27469fd06c25d5a9b1bbca93e521b7b806b686e3" translate="yes" xml:space="preserve">
          <source>With Atomics my error seems to stay under 600 microseconds. (0.6ms)</source>
          <target state="translated">Con Atomics mi error parece estar por debajo de los 600 microsegundos.(0.6ms)</target>
        </trans-unit>
        <trans-unit id="d2cb3253ab0686adfde608cd1008567edc45b5ed" translate="yes" xml:space="preserve">
          <source>With setTimeout I get a error of up to 7000 microseconds. (7ms)</source>
          <target state="translated">Con setTimeout obtengo un error de hasta 7000 microsegundos.(7ms)</target>
        </trans-unit>
        <trans-unit id="97d813a2848b6649cad312349ec1212e8f0331b9" translate="yes" xml:space="preserve">
          <source>Writing a sleep function is simple and made even more usable with JavaScript Promises:</source>
          <target state="translated">Escribir una función de sueño es simple y se hace aún más útil con Promesas de JavaScript:</target>
        </trans-unit>
        <trans-unit id="cc5f21e90bd523a5aec38705c20e647b5e920269" translate="yes" xml:space="preserve">
          <source>You can then just use it in a row of function calls as expected:</source>
          <target state="translated">Entonces puedes usarlo en una fila de llamadas de funciones como se espera:</target>
        </trans-unit>
        <trans-unit id="266188b4a73ab0cf221d22fbbd4b4c542f61ce2c" translate="yes" xml:space="preserve">
          <source>You can then use them nicely with anonymous functions:</source>
          <target state="translated">Entonces puedes usarlos bien con funciones anónimas:</target>
        </trans-unit>
        <trans-unit id="c78dccbf8728682d3f479fe621c4768875a998fe" translate="yes" xml:space="preserve">
          <source>You can't do a sleep like that in JavaScript, or, rather, you shouldn't. Running a sleep or a while loop will cause the user's browser to hang until the loop is done.</source>
          <target state="translated">No se puede hacer un sueño como ese en JavaScript,o mejor dicho,no se debe.Ejecutar un bucle de &quot;sleep&quot; o &quot;while&quot; hará que el navegador del usuario se cuelgue hasta que el bucle termine.</target>
        </trans-unit>
        <trans-unit id="db93b4ca57679b2ac0b6a2cfd12b0b8828c5f20b" translate="yes" xml:space="preserve">
          <source>Your question is a bit of a false choice, then. There is no way to sleep in the way you want, nor should you pursue the solution you suggest.</source>
          <target state="translated">Su pregunta es un poco falsa,entonces.No hay forma de dormir como usted quiere,ni debe buscar la solución que usted sugiere.</target>
        </trans-unit>
        <trans-unit id="c0b9dc796583ee7ecb6a5a8434abeab65bb922c4" translate="yes" xml:space="preserve">
          <source>and also landed &lt;a href=&quot;https://blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/&quot;&gt;in Firefox Nightly in November 2016&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y tambi&amp;eacute;n aterriz&amp;oacute; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en Firefox Nightly en noviembre de 2016&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db76f2442e45fb5849007fe4ee4d8c73f8aec35e" translate="yes" xml:space="preserve">
          <source>as a first argument you have to pass just the name (reference) of the function, without the parenthesis</source>
          <target state="translated">como primer argumento hay que pasar sólo el nombre (referencia)de la función,sin el paréntesis</target>
        </trans-unit>
        <trans-unit id="d89a2a6e57657ec16f2c022086f3841b7255a820" translate="yes" xml:space="preserve">
          <source>contents of sleep.php:</source>
          <target state="translated">contenido de sleep.php:</target>
        </trans-unit>
        <trans-unit id="e924dc15d21c0531a13369a8806d141c8e8c9cc7" translate="yes" xml:space="preserve">
          <source>it landed &lt;a href=&quot;https://blog.risingstack.com/async-await-node-js-7-nightly/&quot;&gt;in Node 7 in October 2016&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aterriz&amp;oacute; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://blog.risingstack.com/async-await-node-js-7-nightly/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en el Nodo 7 en octubre de 2016&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc26cfaae3c682227c6fa2db5b7512399d733bed" translate="yes" xml:space="preserve">
          <source>make sure your calling function is async</source>
          <target state="translated">Asegúrate de que tu función de llamada es asíncrona</target>
        </trans-unit>
        <trans-unit id="eac229878481a613da694a26816e8fa74de04089" translate="yes" xml:space="preserve">
          <source>promises are supported &lt;a href=&quot;http://node.green/#Promise&quot;&gt;in Node v0.12+&lt;/a&gt; and &lt;a href=&quot;http://caniuse.com/#feat=promises&quot;&gt;widely supported in browsers&lt;/a&gt;, except IE</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;las promesas se admiten &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://node.green/#Promise&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en Node v0.12 +&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://caniuse.com/#feat=promises&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se admiten ampliamente en los navegadores&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , excepto IE&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c37f9cd26e86a375ee1a9ac08e40437bba6adba" translate="yes" xml:space="preserve">
          <source>the second argument is time in miliseconds</source>
          <target state="translated">el segundo argumento es el tiempo en milisegundos</target>
        </trans-unit>
        <trans-unit id="fa2f80b190663512311c372a57b5e2ff61edf414" translate="yes" xml:space="preserve">
          <source>then:</source>
          <target state="translated">then:</target>
        </trans-unit>
        <trans-unit id="c0ea10fc386ce45f02f65a4d51de8c1c62c07494" translate="yes" xml:space="preserve">
          <source>verified and working fine</source>
          <target state="translated">verificado y funcionando bien</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
