<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/9554636">
    <body>
      <group id="9554636">
        <trans-unit id="855f9e933886a93d32ebf837609b340fe090e632" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;&lt;code&gt;JInternalFrame&lt;/code&gt;/&lt;code&gt;JDesktopPane&lt;/code&gt;&lt;/a&gt; typically used for an &lt;a href=&quot;http://en.wikipedia.org/wiki/Multiple_document_interface&quot;&gt;MDI&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt; &lt;code&gt;JInternalFrame&lt;/code&gt; / &lt;code&gt;JDesktopPane&lt;/code&gt; &lt;/a&gt; обычно используется для &lt;a href=&quot;http://en.wikipedia.org/wiki/Multiple_document_interface&quot;&gt;MDI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a46d13b700a93249f6afe7fb6bfe1e263e5530b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;&lt;code&gt;JLayeredPane&lt;/code&gt;&lt;/a&gt; far many well ..layered components.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt; &lt;code&gt;JLayeredPane&lt;/code&gt; &lt;/a&gt; далеко много хорошо .. слоистых компонентов.</target>
        </trans-unit>
        <trans-unit id="fa15a30d2ea44e1bae88344bfaba468ce12217dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;&lt;code&gt;JSplitPane&lt;/code&gt;&lt;/a&gt; A way to display two components of which the importance between one or the other (the size) varies according to what the user is doing.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt; &lt;code&gt;JSplitPane&lt;/code&gt; &lt;/a&gt; Способ отображения двух компонентов, важность которых для одного или другого (размер) зависит от того, что делает пользователь.</target>
        </trans-unit>
        <trans-unit id="109151339ec6f5994c59939e3d44bde37775fe57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt;&lt;code&gt;JTabbedPane&lt;/code&gt;&lt;/a&gt; for groups of components.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt; &lt;code&gt;JTabbedPane&lt;/code&gt; &lt;/a&gt; для групп компонентов.</target>
        </trans-unit>
        <trans-unit id="4d1c280dafddc96fddfd673c95475f20a70bbd27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;&lt;code&gt;JToolBar&lt;/code&gt;&lt;/a&gt; typically contains groups of actions or controls.  Can be dragged around the GUI, or off it entirely according to user need.  As mentioned above, will minimize/restore according to the parent doing so.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt; &lt;code&gt;JToolBar&lt;/code&gt; &lt;/a&gt; обычно содержит группы действий или элементов управления. Может перетаскиваться по всему графическому интерфейсу или полностью отключаться в соответствии с потребностями пользователя. Как упоминалось выше, будет минимизировано / восстановлено в соответствии с действиями родителя</target>
        </trans-unit>
        <trans-unit id="763086f93c3af994a0218d3c81cbcc6c22c71525" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/card.html&quot;&gt;&lt;code&gt;CardLayout&lt;/code&gt;&lt;/a&gt; (short &lt;a href=&quot;https://stackoverflow.com/a/5786005/418556&quot;&gt;demo.&lt;/a&gt;). Good for:</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/card.html&quot;&gt; &lt;code&gt;CardLayout&lt;/code&gt; &lt;/a&gt; (короткая &lt;a href=&quot;https://stackoverflow.com/a/5786005/418556&quot;&gt;демонстрация&lt;/a&gt; ). Хорош для:</target>
        </trans-unit>
        <trans-unit id="550f5f00bb5b95d41520ea13e97393e21fb1dc71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/5630271/418556&quot;&gt;Nested layouts&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/5630271/418556&quot;&gt;Вложенные макеты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e69a34a769e8e98953e94688ba466fa5ffa332bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It's easy to use JInternalFrame&lt;/strong&gt; This is kind of retorical, now it's way easier and other people smarter ( or with more spare time) than us have already think through the Desktop and JInternalFrame pattern, so I would recommend to use it.</source>
          <target state="translated">&lt;strong&gt;Легко использовать JInternalFrame.&lt;/strong&gt; Это своего рода реторика, теперь это намного проще, и другие люди умнее (или с большим количеством свободного времени), чем мы уже продумали шаблон Desktop и JInternalFrame, поэтому я рекомендую использовать его.</target>
        </trans-unit>
        <trans-unit id="6505550594a36da49202f35678c36a219cd1bc64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It's more expensive:&lt;/strong&gt; you will have to allocate way more resources to draw a JFrame that other kind of window container, such as Dialog or JInternalFrame.</source>
          <target state="translated">&lt;strong&gt;Это дороже:&lt;/strong&gt; вам придется выделять больше ресурсов для рисования JFrame, чем другие виды оконных контейнеров, такие как Dialog или JInternalFrame.</target>
        </trans-unit>
        <trans-unit id="64a9e72acd1aeb2087f34209c0fdded738377ff3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Makes it easy for end-users to reference outside material&lt;/strong&gt; - Once, I had this situation: My app had a &quot;data viewer,&quot; from which you could click &quot;Add New&quot; and it would open a data entry screen. Initially, both were &lt;code&gt;JFrame&lt;/code&gt;s. However, I wanted the data entry screen to be a &lt;code&gt;JDialog&lt;/code&gt; whose parent was the data viewer. I made the change, and immediately I received a call from an end-user who relied heavily on the fact that he could minimize or close the &lt;strong&gt;viewer&lt;/strong&gt; and keep the &lt;strong&gt;editor&lt;/strong&gt; open while he referenced another part of the program (or a website, I don't remember). He's &lt;strong&gt;not&lt;/strong&gt; on a multi-monitor, so he needed the entry dialog to be first and &lt;em&gt;something else&lt;/em&gt; to be second, with the data viewer completely hidden. This was impossible with a &lt;code&gt;JDialog&lt;/code&gt; and certainly would've been impossible with a &lt;code&gt;JInternalFrame&lt;/code&gt; as well. I begrudgingly changed it back to being separate &lt;code&gt;JFrames&lt;/code&gt; for his sanity, but it taught me an important lesson.</source>
          <target state="translated">&lt;strong&gt;Позволяет конечным пользователям легко ссылаться на внешние материалы.&lt;/strong&gt; Однажды у меня возникла такая ситуация: в моем приложении был &amp;laquo;просмотрщик данных&amp;raquo;, из которого можно нажать &amp;laquo;Добавить новый&amp;raquo;, и он откроет экран ввода данных. Первоначально оба были &lt;code&gt;JFrame&lt;/code&gt; s. Однако я хотел, чтобы экран ввода данных был &lt;code&gt;JDialog&lt;/code&gt; , чьим родителем был просмотрщик данных. Я внес изменение, и сразу же мне позвонил конечный пользователь, который сильно полагался на тот факт, что он может свернуть или закрыть &lt;strong&gt;средство просмотра&lt;/strong&gt; и оставить &lt;strong&gt;редактор&lt;/strong&gt; открытым, пока он ссылается на другую часть программы (или веб-сайт, который я не помню). Он &lt;strong&gt;не работает&lt;/strong&gt; на нескольких мониторах, поэтому ему нужно, чтобы диалог ввода был первым, а &lt;em&gt;что-то еще&lt;/em&gt; - вторым, а средство просмотра данных было полностью скрыто. Это было невозможно с &lt;code&gt;JDialog&lt;/code&gt; и, конечно, было бы невозможно и с &lt;code&gt;JInternalFrame&lt;/code&gt; . Я неохотно изменил его, чтобы он стал отдельным &lt;code&gt;JFrames&lt;/code&gt; для его здравомыслия, но это преподало мне важный урок.</target>
        </trans-unit>
        <trans-unit id="c350bf5b7874fb5157fa5b4d297e3baedf5daf04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Myth/Unproven: Resource Heavy&lt;/strong&gt; - I'd like to see some facts behind this speculative statement. Although, perhaps, you could say a &lt;code&gt;JFrame&lt;/code&gt; needs more space than a &lt;code&gt;JInternalFrame&lt;/code&gt;, even if you open up 100 &lt;code&gt;JFrame&lt;/code&gt;s, how many more resources would you really be consuming? If your concern is memory leaks because of resources: calling &lt;code&gt;dispose()&lt;/code&gt; frees all resources used by the frame for garbage collection (and, again I say, a &lt;code&gt;JInternalFrame&lt;/code&gt; should invoke exactly the same concern).</source>
          <target state="translated">&lt;strong&gt;Миф / Недоказанный: Ресурс Тяжелый&lt;/strong&gt; - я хотел бы увидеть некоторые факты за этим умозрительным утверждением. Хотя, возможно, вы могли бы сказать, что &lt;code&gt;JFrame&lt;/code&gt; требует больше места, чем &lt;code&gt;JInternalFrame&lt;/code&gt; , даже если вы откроете 100 &lt;code&gt;JFrame&lt;/code&gt; , сколько еще ресурсов вы действительно будете использовать? Если вас беспокоит утечка памяти из-за ресурсов: вызов &lt;code&gt;dispose()&lt;/code&gt; освобождает все ресурсы, используемые фреймом для сборки мусора (и, опять же, я говорю, &lt;code&gt;JInternalFrame&lt;/code&gt; должен вызывать точно такую ​​же проблему).</target>
        </trans-unit>
        <trans-unit id="efb2fd64572b99552839bf2317681d6459eacddf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Myth: Hard to code&lt;/strong&gt; - This is not true in my experience. I don't see why it would be any easier to create a &lt;code&gt;JInternalFrame&lt;/code&gt; than a &lt;code&gt;JFrame&lt;/code&gt;. In fact, in my experience, &lt;code&gt;JInternalFrames&lt;/code&gt; offer much less flexibility. I have developed a systematic way of handling the opening &amp;amp; closing of &lt;code&gt;JFrame&lt;/code&gt;s in my apps that really works well. I control the frame almost completely from within the frame's code itself; the creation of the new frame, &lt;code&gt;SwingWorker&lt;/code&gt;s that control the retrieval of data on background threads and the GUI code on EDT, restoring/bringing to front the frame if the user tries to open it twice, etc. All you need to open my &lt;code&gt;JFrame&lt;/code&gt;s is call a public static method &lt;code&gt;open()&lt;/code&gt; and the open method, combined with a &lt;code&gt;windowClosing()&lt;/code&gt; event handles the rest (is the frame already open? is it not open, but loading? etc.) I made this approach a template so it's not difficult to implement for each frame.</source>
          <target state="translated">&lt;strong&gt;Миф: трудно кодировать&lt;/strong&gt; - это не так в моем опыте. Я не понимаю, почему было бы легче создать &lt;code&gt;JInternalFrame&lt;/code&gt; , чем &lt;code&gt;JFrame&lt;/code&gt; . На самом деле, по моему опыту, &lt;code&gt;JInternalFrames&lt;/code&gt; предлагают гораздо меньшую гибкость. Я разработал систематический способ обработки открытия и закрытия &lt;code&gt;JFrame&lt;/code&gt; в моих приложениях, который действительно хорошо работает. Я почти полностью контролирую фрейм из самого кода фрейма; создание нового фрейма, &lt;code&gt;SwingWorker&lt;/code&gt; , который управляет извлечением данных в фоновых потоках и кода графического интерфейса пользователя в EDT, восстановление / вывод на передний план, если пользователь пытается открыть его дважды, и т. д. Все, что вам нужно, чтобы открыть мой &lt;code&gt;JFrame&lt;/code&gt; Это вызов открытого статического метода &lt;code&gt;open()&lt;/code&gt; а метод open в сочетании с &lt;code&gt;windowClosing()&lt;/code&gt; обрабатывает все остальное (фрейм уже открыт? Разве он не открыт, но загружается? и т. д.). это не сложно реализовать для каждого кадра.</target>
        </trans-unit>
        <trans-unit id="b720d278aac00ca850d3c60052ad4c0ee45a6be7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Not user friendly:&lt;/strong&gt; It is not easy to navigate into a bunch of JFrame stuck together, it will look like your application is a set of applications inconsistent and poorly design.</source>
          <target state="translated">&lt;strong&gt;Не удобно для пользователя.&lt;/strong&gt; Нелегко ориентироваться в куче JFrame, склеенных вместе, это будет выглядеть так, будто ваше приложение представляет собой набор приложений, несовместимых и плохо спроектированных.</target>
        </trans-unit>
        <trans-unit id="e47badd23c6e53dbd9b63a1f01bbb996aa64fedf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ultimate flexibility in layout&lt;/strong&gt; - By allowing separate &lt;code&gt;JFrame&lt;/code&gt;s, you give your end-user the ability to spread out and control what's on his/her screen. The concept feels &quot;open&quot; and non-constricting. You lose this when you go towards one big &lt;code&gt;JFrame&lt;/code&gt; and a bunch of &lt;code&gt;JInternalFrame&lt;/code&gt;s.</source>
          <target state="translated">&lt;strong&gt;Предельная гибкость в макете.&lt;/strong&gt; Предоставляя отдельные &lt;code&gt;JFrame&lt;/code&gt; - ы, вы даете конечному пользователю возможность распределять и контролировать то, что находится на его экране. Концепция чувствует себя &amp;laquo;открытой&amp;raquo; и не стесняющей. Вы теряете это, когда идете к одному большому &lt;code&gt;JFrame&lt;/code&gt; и группе &lt;code&gt;JInternalFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84a7ad212cb5de26f474e362ca7b87eca229fa40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Works well for very modularized applications&lt;/strong&gt; - In my case, most of my applications have 3 - 5 big &quot;modules&quot; that really have nothing to do with each other whatsoever. For instance, one module might be a sales dashboard and one might be an accounting dashboard. They don't talk to each other or anything. However, the executive might want to open both and them being separate frames on the taskbar makes his life easier.</source>
          <target state="translated">&lt;strong&gt;Хорошо работает для очень модульных приложений.&lt;/strong&gt; В моем случае большинство моих приложений имеют 3-5 больших &amp;laquo;модулей&amp;raquo;, которые действительно не имеют никакого отношения друг к другу. Например, один модуль может быть панелью мониторинга продаж, а другой - панелью учета. Они не разговаривают друг с другом или что-то еще. Однако руководитель может захотеть открыть и то, и другое, поскольку отдельные панели на панели задач облегчают его жизнь.</target>
        </trans-unit>
        <trans-unit id="c09531f11456b32284ff4e2a43762199b6770665" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/modality.html&quot;&gt;modal dialog&lt;/a&gt; offers the easy opportunity to focus attention on the content of that dialog - choose/fix/cancel this, &lt;strong&gt;then&lt;/strong&gt; proceed.  Multiple frames do not.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/modality.html&quot;&gt;Модальное диалоговое окно&lt;/a&gt; предлагает простую возможность сосредоточить внимание на содержании этого диалогового окна - выберите / исправьте / отмените это, &lt;strong&gt;затем&lt;/strong&gt; продолжите. Несколько кадров нет.</target>
        </trans-unit>
        <trans-unit id="77810e31cc11f1c6c67cebac737ee31a02924ebe" translate="yes" xml:space="preserve">
          <source>A dialog (or floating tool-bar) with a parent will come to front when the parent is clicked on - you'd have to implement that in frames if that was the desired behavior.</source>
          <target state="translated">Диалог (или плавающая панель инструментов)с родителем появится при нажатии на родителя-вы должны будете реализовать это в кадрах,если это было желаемое поведение.</target>
        </trans-unit>
        <trans-unit id="52189483e5b90097f0c12c725e7468b27890f539" translate="yes" xml:space="preserve">
          <source>A few months ago we started getting requests from our customers to make these report viewer windows modeless, so that they could have multiple reports open at the same time.</source>
          <target state="translated">Несколько месяцев назад мы начали получать запросы от наших клиентов на то,чтобы сделать эти окна просмотра отчетов модельными,чтобы они могли иметь несколько отчетов одновременно.</target>
        </trans-unit>
        <trans-unit id="668c86d396f1672863ae5b4773825a8d5d39ac9b" translate="yes" xml:space="preserve">
          <source>A great example of multiple frames/single document per frame (&lt;a href=&quot;http://en.wikipedia.org/wiki/Single_document_interface&quot;&gt;SDI&lt;/a&gt;) vs single frame/multiple documents per frame (&lt;a href=&quot;http://en.wikipedia.org/wiki/Multiple_document_interface&quot;&gt;MDI&lt;/a&gt;) is Microsoft Excel. Some of MDI benefits:</source>
          <target state="translated">Отличным примером использования нескольких кадров / одного документа на кадр ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_document_interface&quot;&gt;SDI&lt;/a&gt; ) и одного кадра / нескольких документов на кадр ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Multiple_document_interface&quot;&gt;MDI&lt;/a&gt; ) является Microsoft Excel. Некоторые из преимуществ MDI:</target>
        </trans-unit>
        <trans-unit id="481be78e172b7c4c1ccc2711164c06866ca4de84" translate="yes" xml:space="preserve">
          <source>A nightmare to code and maintain:</source>
          <target state="translated">Кошмар для кодирования и поддержания:</target>
        </trans-unit>
        <trans-unit id="81e29999fc6773f2d1b64774d9f19aac3a5acde1" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;JLabel&lt;/code&gt; (centered in a scroll pane) to display whichever image the user is interested in at that moment.  As seen in &lt;a href=&quot;https://stackoverflow.com/a/13463684/418556&quot;&gt;&lt;code&gt;ImageViewer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Один &lt;code&gt;JLabel&lt;/code&gt; (в центре области прокрутки) для отображения любого изображения, интересующего пользователя в данный момент. Как видно из &lt;a href=&quot;https://stackoverflow.com/a/13463684/418556&quot;&gt; &lt;code&gt;ImageViewer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bbb2bffa61ffc5da7a6aa465611d7a0863e77051" translate="yes" xml:space="preserve">
          <source>A single row &lt;code&gt;JList&lt;/code&gt;. As seen in &lt;a href=&quot;https://stackoverflow.com/a/9544652/418556&quot;&gt;this answer&lt;/a&gt;.  The 'single row' part of that only works if they are all the same dimensions.  Alternately, if you are prepared to scale the images on the fly, and they are all the same aspect ratio (e.g. 4:3 or 16:9).</source>
          <target state="translated">Однорядный &lt;code&gt;JList&lt;/code&gt; . Как видно из &lt;a href=&quot;https://stackoverflow.com/a/9544652/418556&quot;&gt;этого ответа&lt;/a&gt; . &amp;laquo;Однорядная&amp;raquo; часть этого работает, только если они имеют одинаковые размеры. Альтернативно, если вы готовы масштабировать изображения на лету, и все они имеют одинаковое соотношение сторон (например, 4: 3 или 16: 9).</target>
        </trans-unit>
        <trans-unit id="dc55daa7dd0a9587b2c55b293fa2cc08de97b8cf" translate="yes" xml:space="preserve">
          <source>Also we can switch between this &lt;code&gt;JPanel&lt;/code&gt;s. So it gives us freedom to display more than on thing in the &lt;code&gt;JFrame&lt;/code&gt;.</source>
          <target state="translated">Также мы можем переключаться между этими &lt;code&gt;JPanel&lt;/code&gt; s. Так что это дает нам свободу отображать больше, чем вещи в &lt;code&gt;JFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="235a62d33b197f5e505ad2f49140e11726f388af" translate="yes" xml:space="preserve">
          <source>As items in a &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/list.html&quot;&gt;&lt;code&gt;JList&lt;/code&gt;&lt;/a&gt; (simple example below).</source>
          <target state="translated">Как элементы в &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/list.html&quot;&gt; &lt;code&gt;JList&lt;/code&gt; &lt;/a&gt; (простой пример ниже).</target>
        </trans-unit>
        <trans-unit id="b88696386beb9499cee8e8d14cb2dbe189e4727c" translate="yes" xml:space="preserve">
          <source>As nodes in a &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;&lt;code&gt;JTree&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Как узлы в &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt; &lt;code&gt;JTree&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa88a229b782b18f180bc35ea575c9856c05f12d" translate="yes" xml:space="preserve">
          <source>Bad (bad, bad) practice.</source>
          <target state="translated">Плохая (плохая,плохая)практика.</target>
        </trans-unit>
        <trans-unit id="2d4d395e63075e1d369f76a05fc7ad4309ce2242" translate="yes" xml:space="preserve">
          <source>Bad practice definitely. One reason is that it is not very 'user-friendly' for the fact that every &lt;code&gt;JFrame&lt;/code&gt; shows a new taskbar icon. Controlling multiple &lt;code&gt;JFrame&lt;/code&gt;s will have you ripping your hair out.</source>
          <target state="translated">Плохая практика определенно. Одна из причин заключается в том, что он не очень удобен для пользователя, потому что каждый &lt;code&gt;JFrame&lt;/code&gt; отображает новый значок на панели задач. Если вы будете &lt;code&gt;JFrame&lt;/code&gt; несколькими JFrame , вы будете рвать на себе волосы.</target>
        </trans-unit>
        <trans-unit id="48b7e32b0d0b98dfd1849893ada1230a6994eabe" translate="yes" xml:space="preserve">
          <source>But if those strategies do not work for a particular use-case, try the following.  Establish a single main &lt;code&gt;JFrame&lt;/code&gt;, then have &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;&lt;code&gt;JDialog&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html#features&quot;&gt;&lt;code&gt;JOptionPane&lt;/code&gt;&lt;/a&gt; instances appear for the rest of the free-floating elements, using the frame as the parent for the dialogs.</source>
          <target state="translated">Но если эти стратегии не работают для конкретного варианта использования, попробуйте следующее. &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt; &lt;code&gt;JDialog&lt;/code&gt; &lt;/a&gt; один основной &lt;code&gt;JFrame&lt;/code&gt; , затем появятся экземпляры JDialog или &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html#features&quot;&gt; &lt;code&gt;JOptionPane&lt;/code&gt; &lt;/a&gt; для остальных свободно плавающих элементов, используя рамку в качестве родительского для диалогов.</target>
        </trans-unit>
        <trans-unit id="372547561d143dc46d276e8a37f9d3e37875665f" translate="yes" xml:space="preserve">
          <source>But its better to change one &lt;code&gt;JFrame&lt;/code&gt; for our different needs rather than having multiple &lt;code&gt;JFrame&lt;/code&gt;s.</source>
          <target state="translated">Но лучше менять один &lt;code&gt;JFrame&lt;/code&gt; для наших разных нужд, чем иметь несколько &lt;code&gt;JFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b7b9110186106fbc6770f355b804553c6609a8c" translate="yes" xml:space="preserve">
          <source>Displaying list, tree etc. selections for items that have an associated component.</source>
          <target state="translated">Отображение выбора списка,дерева и т.д.для элементов,которые имеют ассоциированный компонент.</target>
        </trans-unit>
        <trans-unit id="f20aa55ef6fcf5d4c20d52e4186907ac6e4f6540" translate="yes" xml:space="preserve">
          <source>Flipping between no component and visible component.</source>
          <target state="translated">Переключение между бескомпонентным и видимым компонентами.</target>
        </trans-unit>
        <trans-unit id="e964c3e4f6b23a66ecbd023460578f171f5d331e" translate="yes" xml:space="preserve">
          <source>For each &lt;code&gt;JPanel&lt;/code&gt; we can design different things and all this &lt;code&gt;JPanel&lt;/code&gt; can be displayed on the single &lt;code&gt;JFrame&lt;/code&gt;one at a time.</source>
          <target state="translated">Для каждого &lt;code&gt;JPanel&lt;/code&gt; мы можем создавать разные вещи, и все эти &lt;code&gt;JPanel&lt;/code&gt; могут отображаться на одном &lt;code&gt;JFrame&lt;/code&gt; по одному.</target>
        </trans-unit>
        <trans-unit id="38348ede1c8912649e35d338068ca9b9b1ed3244" translate="yes" xml:space="preserve">
          <source>For modeless dialogs, pass a null parent to the constructor, but locate them relative to their 'parent' window.</source>
          <target state="translated">Для диалоговых окон Modeless передайте конструктору нулевой родитель,но найдите его относительно 'родительского' окна.</target>
        </trans-unit>
        <trans-unit id="c62455a2a5cd91e7727a1d98153de9e332b98738" translate="yes" xml:space="preserve">
          <source>For some time I resisted this request as I did not think this was a good solution. However, my mind was changed when I found out how the users were getting around this 'deficiency' of our system.</source>
          <target state="translated">Некоторое время я сопротивлялся этой просьбе,так как не думал,что это хорошее решение.Однако мое мнение изменилось,когда я узнал,как пользователи обходят этот &quot;недостаток&quot; нашей системы.</target>
        </trans-unit>
        <trans-unit id="c191869b8a33edda7cdd405128b0e40442840200" translate="yes" xml:space="preserve">
          <source>I think using multiple &lt;code&gt;Jframe&lt;/code&gt;s is not a good idea.</source>
          <target state="translated">Я думаю, что использование нескольких &lt;code&gt;Jframe&lt;/code&gt; s не очень хорошая идея.</target>
        </trans-unit>
        <trans-unit id="47beb323263604d1b1e5e6f6e5c6d3e720f4a9d6" translate="yes" xml:space="preserve">
          <source>I'd like to counter the &quot;not user friendly&quot; argument with an example that I have just been involved with.</source>
          <target state="translated">Я хотел бы противопоставить аргумент &quot;неудобства для пользователя&quot; примеру,в котором я только что участвовал.</target>
        </trans-unit>
        <trans-unit id="1af47f037ee6de340a78c3f8c81dbe89cae14102" translate="yes" xml:space="preserve">
          <source>I'm developing an application which displays images, and plays sounds from a database. I'm trying to decide whether or not to use a separate JFrame to add images to the database from the GUI.</source>
          <target state="translated">Я разрабатываю приложение,которое отображает изображения и воспроизводит звуки из базы данных.Я пытаюсь решить,использовать ли отдельный JFrame для добавления изображений в базу данных из графического интерфейса.</target>
        </trans-unit>
        <trans-unit id="e4ec08d035a2860eaee2641f5d1b48e4d2025766" translate="yes" xml:space="preserve">
          <source>I'm just wondering whether it is good practice to use multiple JFrame windows?</source>
          <target state="translated">Мне просто интересно,является ли хорошей практикой использование нескольких окон JFrame?</target>
        </trans-unit>
        <trans-unit id="6166fff8262f4671ea4124eb1c4dce25116ab7c4" translate="yes" xml:space="preserve">
          <source>I'm just wondering whether it is good practice to use multiple JFrames?</source>
          <target state="translated">Мне просто интересно,является ли хорошей практикой использование нескольких JF-фреймов?</target>
        </trans-unit>
        <trans-unit id="70109a724c8dab00d6202da1795974ff980336d6" translate="yes" xml:space="preserve">
          <source>I've written a lot and I feel like I could write more. Anyways, I hope I don't get down-voted simply because it's an unpopular opinion. The question is clearly a valuable one and I hope I've provided a valuable answer, even if it isn't the common opinion.</source>
          <target state="translated">Я много писал и чувствую,что мог бы написать больше.В любом случае,я надеюсь,что меня не проголосуют просто потому,что это непопулярное мнение.Вопрос,безусловно,ценный,и я надеюсь,что дал на него ценный ответ,даже если это не общепринятое мнение.</target>
        </trans-unit>
        <trans-unit id="c11d1eae3222d1ad420eabf6693a1a8a14bc6ddf" translate="yes" xml:space="preserve">
          <source>If the frames are going to be the same size, why not create the frame and pass the frame then as a reference to it instead.</source>
          <target state="translated">Если фреймы будут одного и того же размера,почему бы не создать фрейм и не передать его затем в качестве ссылки на него.</target>
        </trans-unit>
        <trans-unit id="d8eca14de00affb5abab3c716277e3216fff2b85" translate="yes" xml:space="preserve">
          <source>In our application we have a main window where the users run various 'programs' as separate tabs. As much as possible we have tried to keep our application to this single window.</source>
          <target state="translated">В нашем приложении есть главное окно,в котором пользователи запускают различные &quot;программы&quot; в виде отдельных вкладок.Насколько это возможно,мы постарались удержать наше приложение в этом единственном окне.</target>
        </trans-unit>
        <trans-unit id="70c20b9a9bc2f25260461351498ba9aef81d17b2" translate="yes" xml:space="preserve">
          <source>In this case where the multiple elements are images, it would be better to use either of the following instead:</source>
          <target state="translated">В этом случае,когда несколько элементов являются изображениями,лучше использовать один из следующих вариантов:</target>
        </trans-unit>
        <trans-unit id="ede8b7972234cfca52cc35fd271479bfd7c63d76" translate="yes" xml:space="preserve">
          <source>Instead we can use &lt;code&gt;JPanel&lt;/code&gt;s more than one or more &lt;code&gt;JPanel&lt;/code&gt; in the same &lt;code&gt;JFrame&lt;/code&gt;.</source>
          <target state="translated">Вместо этого мы можем использовать несколько &lt;code&gt;JPanel&lt;/code&gt; - ов в одном и том же &lt;code&gt;JFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f41475e79339890879ae861045ad68c3e7bd735" translate="yes" xml:space="preserve">
          <source>It is not a good practice but even though you wish to use it you can use the singleton pattern as its good. I have used the singleton patterns in most of my project its good.</source>
          <target state="translated">Это не является хорошей практикой,но даже если вы хотите ее использовать,вы можете использовать однокнопочный шаблон в качестве хорошего шаблона.Я использовал однокнопочные шаблоны в большинстве моих проектов.</target>
        </trans-unit>
        <trans-unit id="80e6f7ce8bf052de169f73af25b368215b3c8388" translate="yes" xml:space="preserve">
          <source>It seems to be best practice to use JDialog's for these modeless windows</source>
          <target state="translated">Похоже,наилучшей практикой является использование JDialog'ов для этих окон без моделирования.</target>
        </trans-unit>
        <trans-unit id="298c9c67ea16ba4bc93f201fc45211b386669a87" translate="yes" xml:space="preserve">
          <source>It's been a while since the last time i touch swing but in general is a bad practice to do this. Some of the main disadvantages that comes to mind:</source>
          <target state="translated">Прошло много времени с тех пор,как я в последний раз прикасался к качелям,но в целом это плохая практика.Некоторые из основных недостатков,которые приходят на ум:</target>
        </trans-unit>
        <trans-unit id="a7df5571c3f2bc8c6d0d8d7e5164858995ac3c72" translate="yes" xml:space="preserve">
          <source>MDI (Multiple-Document Interface, i.e., every window can have multiple documents):</source>
          <target state="translated">MDI (Multiple-Document Interface,т.е.каждое окно может иметь несколько документов):</target>
        </trans-unit>
        <trans-unit id="c041fbc6f6d5e8180164af2e81ff649862ed2f1c" translate="yes" xml:space="preserve">
          <source>Make an jInternalFrame into main frame and make it invisible. Then you can use it for further events.</source>
          <target state="translated">Сделайте jInternalFrame в главный кадр и сделайте его невидимым.Затем вы можете использовать его для дальнейших событий.</target>
        </trans-unit>
        <trans-unit id="19799c5d85ff59ea7febea012652a9f4974c293e" translate="yes" xml:space="preserve">
          <source>Many images</source>
          <target state="translated">Многие изображения</target>
        </trans-unit>
        <trans-unit id="abe5bc4e611a570041b7ddf07077ea1fc14ea933" translate="yes" xml:space="preserve">
          <source>More than one &lt;code&gt;JFrame&lt;/code&gt; is not a good practice, but there is nothing wrong if we want more than one &lt;code&gt;JFrame&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; не является хорошей практикой, но в этом нет ничего плохого, если нам нужно более одного &lt;code&gt;JFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c6983f6b6fab768e218346da2e077d79ea85ffb" translate="yes" xml:space="preserve">
          <source>Multiple JFrame objects = Pain, trouble, and problems.</source>
          <target state="translated">Многочисленные объекты JFrame=Боль,проблемы и проблемы.</target>
        </trans-unit>
        <trans-unit id="aa24bb0d2031831f6d23f49b9461a627edcfa34d" translate="yes" xml:space="preserve">
          <source>One of the 'programs' they run presents a list of reports that have been generated by the system, and the user can click on an icon on each line to pop open a report viewer dialog. This viewer is showing the equivalent of the portrait/landscape A4 page(s) of the report, so the users like this window to be quite big, almost filling their screens.</source>
          <target state="translated">Одна из &quot;программ&quot;,которую они запускают,представляет собой список отчетов,которые были сгенерированы системой,и пользователь может нажать на иконку в каждой строке,чтобы открыть диалоговое окно просмотра отчетов.Этот просмотрщик показывает эквивалент страницы (страниц)отчета в портретном режиме A4,поэтому пользователям нравится,что это окно довольно большое,почти заполняющее их экраны.</target>
        </trans-unit>
        <trans-unit id="455bf84971f11c9b9b4e73032d41fc1c9c19bc5c" translate="yes" xml:space="preserve">
          <source>Personally, I would use ONE &lt;code&gt;JFrame&lt;/code&gt; for your kind of application. Methods of displaying multiple things is up to you, there are many. &lt;code&gt;Canvas&lt;/code&gt;es, &lt;code&gt;JInternalFrame&lt;/code&gt;, &lt;code&gt;CardLayout&lt;/code&gt;, even &lt;code&gt;JPanel&lt;/code&gt;s possibly.</source>
          <target state="translated">Лично я бы использовал ОДИН &lt;code&gt;JFrame&lt;/code&gt; для вашего вида приложений. Методы отображения нескольких вещей зависит от вас, их много. &lt;code&gt;Canvas&lt;/code&gt; Es, &lt;code&gt;JInternalFrame&lt;/code&gt; , &lt;code&gt;CardLayout&lt;/code&gt; , возможно, даже &lt;code&gt;JPanel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a02280d6357b0974accd403fc8e774f7f619fe2c" translate="yes" xml:space="preserve">
          <source>SDI (Single-Document Interface, i.e., every window can only have a single document):</source>
          <target state="translated">SDI (Single-Document Interface,т.е.каждое окно может иметь только один документ):</target>
        </trans-unit>
        <trans-unit id="21804c77671ee36486bcf0c9bf85e5d1f9e47d65" translate="yes" xml:space="preserve">
          <source>SOME NOTES:</source>
          <target state="translated">ЗАМЕЧАНИЯ:</target>
        </trans-unit>
        <trans-unit id="c99545794d629ad61770e4f2281ea9d1b95b7c1b" translate="yes" xml:space="preserve">
          <source>Showing wizard like dialogs.</source>
          <target state="translated">Показ мастера как диалоги.</target>
        </trans-unit>
        <trans-unit id="0bf5dabc7cb7282680a7e0e93e293d6b01de6405" translate="yes" xml:space="preserve">
          <source>So I relented and made the viewer modeless. This means that each viewer has a task-bar icon.</source>
          <target state="translated">Поэтому я уступил и сделал зрителя моделью.Это означает,что у каждого зрителя есть значок панели задач.</target>
        </trans-unit>
        <trans-unit id="9969b7a30e587dc86c6ccd9bc10943865a3888d2" translate="yes" xml:space="preserve">
          <source>So you go ahead and tell your users that what they want is bad, but ultimately it won't do you any favours.</source>
          <target state="translated">Поэтому вы говорите своим пользователям,что то,чего они хотят,плохо,но в конечном итоге это не принесет вам никаких одолжений.</target>
        </trans-unit>
        <trans-unit id="da7bec0bb8499c9086a991e52be889b85f7197bc" translate="yes" xml:space="preserve">
          <source>So, I'm going to explain the benefits of the multiple &lt;code&gt;JFrame&lt;/code&gt; approach, as well as myth-bust some of the cons that others have presented.</source>
          <target state="translated">Итак, я собираюсь объяснить преимущества подхода с несколькими &lt;code&gt;JFrame&lt;/code&gt; , а также рассказать о некоторых минусах, представленных другими.</target>
        </trans-unit>
        <trans-unit id="9555a28c03ec4e74732765af9fd7a7315e2519fd" translate="yes" xml:space="preserve">
          <source>The Use of Multiple JFrames: Good or Bad Practice</source>
          <target state="translated">Использование нескольких JF-фреймов:Хорошая или плохая практика</target>
        </trans-unit>
        <trans-unit id="ceb502ac410c531592f1d728b268dd2b741ea8a0" translate="yes" xml:space="preserve">
          <source>The multiple &lt;code&gt;JFrame&lt;/code&gt; approach has been something I've implemented since I began programming Swing apps. For the most part, I did it in the beginning because I didn't know any better. &lt;strong&gt;However&lt;/strong&gt;, as I matured in my experience and knowledge as a developer and as began to read and absorb the opinions of so many more experienced Java devs online, I made an attempt to &lt;strong&gt;shift away&lt;/strong&gt; from the multiple &lt;code&gt;JFrame&lt;/code&gt; approach (both in current projects and future projects) only to be met with... get this... &lt;em&gt;resistance from my clients!&lt;/em&gt; As I began implementing modal dialogs to control &quot;child&quot; windows and &lt;code&gt;JInternalFrame&lt;/code&gt;s for separate components, &lt;strong&gt;my clients began to complain!&lt;/strong&gt; I was quite surprised, as I was doing what I thought was best-practice! But, as they say, &quot;A happy wife is a happy life.&quot; Same goes for your clients. Of course, I am a contractor so my end-users have direct access to me, the developer, which is obviously not a common scenario.</source>
          <target state="translated">Подход с использованием нескольких &lt;code&gt;JFrame&lt;/code&gt; был тем, что я реализовал с тех пор, как начал программировать приложения Swing. По большей части, я сделал это в начале, потому что я не знал ничего лучше. &lt;strong&gt;Тем не менее&lt;/strong&gt; , по мере того, как я становился зрелым в своем опыте и знаниях в качестве разработчика и начал читать и воспринимать мнения многих более опытных разработчиков Java в Интернете, я попытался &lt;strong&gt;отойти&lt;/strong&gt; от подхода с несколькими &lt;code&gt;JFrame&lt;/code&gt; (как в текущих проектах, так и в будущем). проекты) только встретиться с ... получить это ... &lt;em&gt;сопротивление от моих клиентов!&lt;/em&gt; Когда я начал внедрять модальные диалоги для управления &amp;laquo;дочерними&amp;raquo; окнами и &lt;code&gt;JInternalFrame&lt;/code&gt; для отдельных компонентов, &lt;strong&gt;мои клиенты начали жаловаться!&lt;/strong&gt; Я был очень удивлен, поскольку делал то, что считал лучшей практикой! Но, как говорится, &amp;laquo;счастливая жена - это счастливая жизнь&amp;raquo;. То же самое касается ваших клиентов. Конечно, я являюсь подрядчиком, поэтому мои конечные пользователи имеют прямой доступ ко мне, разработчику, что, очевидно, не является обычным сценарием.</target>
        </trans-unit>
        <trans-unit id="cc0f517ed38d5dc4aee1525800cb76944363c44a" translate="yes" xml:space="preserve">
          <source>There are any number of ways of displaying many elements in one GUI, e.g.:</source>
          <target state="translated">Существует множество способов отображения многих элементов в одном графическом интерфейсе,например:</target>
        </trans-unit>
        <trans-unit id="876809a0777c1f327a13c68dfb31e3a3b557deed" translate="yes" xml:space="preserve">
          <source>They were opening a viewer, using the 'Save As' facility to save the report as a PDF to a specific directory, using Acrobat Reader to open the PDF file, and then they would do the same with the next report. They would have multiple Acrobat Readers running with the various report outputs that they wanted to look at.</source>
          <target state="translated">Они открывали программу просмотра,используя функцию &quot;Сохранить как&quot;,чтобы сохранить отчет в виде PDF в определенный каталог,используя Acrobat Reader,чтобы открыть PDF-файл,а затем они сделают то же самое со следующим отчетом.У них будет несколько программ Acrobat Reader,которые будут работать с различными отчетами,на которые они хотели бы посмотреть.</target>
        </trans-unit>
        <trans-unit id="07adcf3f02b71244d6c5593ea0fb0de89ed0f816" translate="yes" xml:space="preserve">
          <source>To switch between this &lt;code&gt;JPanel&lt;/code&gt;s use &lt;code&gt;JMenuBar&lt;/code&gt; with &lt;code&gt;JMenuItems&lt;/code&gt; for each &lt;code&gt;JPanel&lt;/code&gt;or 'JButton&lt;code&gt;for each&lt;/code&gt;JPanel`.</source>
          <target state="translated">Для переключения между этими &lt;code&gt;JPanel&lt;/code&gt; используйте &lt;code&gt;JMenuBar&lt;/code&gt; с &lt;code&gt;JMenuItems&lt;/code&gt; для каждого &lt;code&gt;JPanel&lt;/code&gt; или &amp;laquo;JButton &lt;code&gt;for each&lt;/code&gt; JPanel&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="1ef67bd016d5084cd1dc89a3544f7b7deae7f76c" translate="yes" xml:space="preserve">
          <source>Use the constructors that use the new &lt;code&gt;ModalityType&lt;/code&gt; rather than the boolean &lt;code&gt;modal&lt;/code&gt; argument. This is what gives these dialogs the task-bar icon.</source>
          <target state="translated">Используйте конструкторы, которые используют новый &lt;code&gt;ModalityType&lt;/code&gt; , а не логический &lt;code&gt;modal&lt;/code&gt; аргумент. Это то, что дает этим диалогам значок панели задач.</target>
        </trans-unit>
        <trans-unit id="37df70d866bcd3bb36a8422c910e346f9cb84c7b" translate="yes" xml:space="preserve">
          <source>User unfriendly: The user sees multiple icons in their task bar when expecting to see only one.  Plus the side effects of the coding problems..</source>
          <target state="translated">Пользователь недружелюбен:Пользователь видит несколько иконок в панели задач,когда ожидает увидеть только одну.Плюс побочные эффекты проблем с кодировкой...</target>
        </trans-unit>
        <trans-unit id="ba1a9fa2fb40926910838f2b5d2d0d17281ee5e1" translate="yes" xml:space="preserve">
          <source>Version 6 of Java on Windows has a &lt;a href=&quot;http://bugs.sun.com/view_bug.do?bug_id=6829546&quot;&gt;bug&lt;/a&gt; which means that your main window can become 'always on top' without you telling it. Upgrade to version 7 to fix this</source>
          <target state="translated">В версии 6 Java на Windows есть &lt;a href=&quot;http://bugs.sun.com/view_bug.do?bug_id=6829546&quot;&gt;ошибка,&lt;/a&gt; которая означает, что ваше главное окно может стать &amp;laquo;всегда сверху&amp;raquo; без вашего ведома. Обновление до версии 7, чтобы исправить это</target>
        </trans-unit>
        <trans-unit id="5727d35c6ceab167cf86a91daab09b3830139fa4" translate="yes" xml:space="preserve">
          <source>When the latest version was released to them last week, the overwhelming response from them is that they LOVE it. It's been one of our most popular recent enhancements to the system.</source>
          <target state="translated">Когда последняя версия была выпущена для них на прошлой неделе,подавляющим ответом от них было то,что они НАСТОЯТ.Это было одним из наших самых популярных последних улучшений системы.</target>
        </trans-unit>
        <trans-unit id="bfe52204fef7c1c1111b24e5c4b045c5b10d5af6" translate="yes" xml:space="preserve">
          <source>When you have passed the frame you can then decide how to populate it. It would be like having a method for calculating the average of a set of figures. Would you create the method over and over again?</source>
          <target state="translated">После того,как вы пропустили кадр,вы можете решить,как его заполнить.Это все равно,что иметь метод вычисления среднего значения набора фигур.Вы бы создавали этот метод снова и снова?</target>
        </trans-unit>
        <trans-unit id="9e6d5433c3d8befdb496a1390c3d98c9e607a226" translate="yes" xml:space="preserve">
          <source>it is possible to have a few windows in non rectangular shape - so they don't hide desktop or other window from another process (e.g. web browser)</source>
          <target state="translated">можно иметь несколько окон не прямоугольной формы-чтобы они не скрывали рабочий стол или другое окно от другого процесса (например,от веб-браузера).</target>
        </trans-unit>
        <trans-unit id="63c50400e1490c23c20ab019c4988e31ae00c26c" translate="yes" xml:space="preserve">
          <source>it is possible to have different documents on different screens, which is especially useful when screens do not have the same resolution</source>
          <target state="translated">можно иметь разные документы на разных экранах,что особенно полезно,когда экраны не имеют одинакового разрешения</target>
        </trans-unit>
        <trans-unit id="d0f48a7c2e4973a385323f0ad23b27b44b967cb3" translate="yes" xml:space="preserve">
          <source>it is possible to open a window from another process over one Excel window while writing in second Excel window - with MDI, trying to write in one of internal windows will give focus to the entire Excel window, hence hiding window from another process</source>
          <target state="translated">можно открыть окно другого процесса над одним окном Excel,а писать во втором окне Excel-с помощью MDI,попытка писать в одном из внутренних окон даст фокус всему окну Excel,таким образом скрывая окно от другого процесса</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
