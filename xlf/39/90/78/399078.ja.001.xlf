<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/399078">
    <body>
      <group id="399078">
        <trans-unit id="7d67bb6716e56cca3eca8a9065af38ddcf97e9f6" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Anywhere: &lt;code&gt;. ^ $ * + - ? ( ) [ ] { } \ |&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;どこでも：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;. ^ $ * + - ? ( ) [ ] { } \ |&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a8c55057c2c0495b9bccfbec7b17e45412ea5d8" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;For literals, don't escape: &lt;code&gt;+ ? ( ) { } |&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;リテラルの場合、エスケープしないでください：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;+ ? ( ) { } |&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a97d47555ec0720c1f70236663cc597967c70a60" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;For standard regex behavior, escape: &lt;code&gt;\+ \? \( \) \{ \} \|&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;標準の正規表現の動作では、エスケープします：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;\+ \? \( \) \{ \} \|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f12e6d0791605981ba059a406b6691a5f9790e5e" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Inside a character class: &lt;code&gt;^ - [ ]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;文字クラスの内部：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;^ - [ ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="918002f5c663d22dba42a630d4b732416c76c2b3" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Outside a character class: &lt;code&gt;. ^ $ * + ? ( ) [ { } \ |&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;文字クラスの外：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;. ^ $ * + ? ( ) [ { } \ |&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91540850fdd2484dc131620648016ffd98c1f7b1" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Outside a character class: &lt;code&gt;. ^ $ * [ \&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;文字クラスの外：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;. ^ $ * [ \&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2da9c9d2e4568a1a403995617dc37f29af2dbfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://perldoc.perl.org/perlre.html#Quoting-metacharacters&quot;&gt;https://perldoc.perl.org/perlre.html#Quoting-metacharacters&lt;/a&gt; and &lt;a href=&quot;https://perldoc.perl.org/functions/quotemeta.html&quot;&gt;https://perldoc.perl.org/functions/quotemeta.html&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://perldoc.perl.org/perlre.html#Quoting-metacharacters&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://perldoc.perl.org/perlre.html#Quoting-metacharacters&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://perldoc.perl.org/functions/quotemeta.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://perldoc.perl.org/functions/quotemeta.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c393bf2f34a2d6c181e8a2227df5d4efeef0d62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BRE/ed/grep/sed&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;BRE/ed/grep/sed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f59e21f8afbeffd98079028ce6aeaf7d6a78fa84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ERE/awk/egrep/emacs&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ERE/awk/egrep/emacs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e676b1e710b18dc41e56c23b6c72c2cc9e9870df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt; After the comment below, just thought I'd mention the fact that you also have to consider the difference between finite state automata and non-finite state automata when looking at the behaviour of regexp evaluation.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のコメントの後で、正規表現評価の動作を見るときに、有限状態オートマトンと非有限状態オートマトンの違いも考慮する必要があるという事実について触れておきたいと思いました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45c05493036228b57a91a503e22683c5ed128082" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Includes C, C++, Delphi, EditPad, Java, JavaScript, Perl, PHP (preg), PostgreSQL, PowerGREP, PowerShell, Python, REALbasic, Real Studio, Ruby, TCL, VB.Net, VBScript, wxWidgets, XML Schema, Xojo, XRegExp.&lt;br/&gt;PCRE compatibility may vary&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C、C ++、Delphi、EditPad、Java、JavaScript、Perl、PHP（preg）、PostgreSQL、PowerGREP、PowerShell、Python、REALbasic、Real Studio、Ruby、TCL、VB.Net、VBScript、wxWidgets、XML Schema、Xojo、 XRegExp。&lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PCREの互換性は異なる場合があります&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7267e98c4a2f05739245cf705a86774ca73aa3eb" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Includes awk, ed, egrep, emacs, GNUlib, grep, PHP (ereg), MySQL, Oracle, R, sed.&lt;br/&gt;PCRE support may be enabled in later versions or by using extensions&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;awk、ed、egrep、emacs、GNUlib、grep、PHP（ereg）、MySQL、Oracle、R、sedが含まれます。&lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PCREサポートは、以降のバージョンで、または拡張機能を使用して有効にすることができます&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="53935ccb1d1bcc34d9efdfc75f0d546800f41839" translate="yes" xml:space="preserve">
          <source>Ah the joys of studying at UNSW in the late '70's! (-:</source>
          <target state="translated">70年代後半にUNSWに留学していた時の嬉しさ (-:</target>
        </trans-unit>
        <trans-unit id="483f30ef22803526f1679fc7151333a7355f53c7" translate="yes" xml:space="preserve">
          <source>Alphanumeric characters cannot be escaped with a backslash</source>
          <target state="translated">英数字はバックスラッシュでエスケープできません。</target>
        </trans-unit>
        <trans-unit id="f7ebf500ba421b0bf9df4deedc3b6483601a07fa" translate="yes" xml:space="preserve">
          <source>Anyway, regexp's are so clunky compared to &lt;a href=&quot;http://en.wikipedia.org/wiki/SNOBOL&quot;&gt;SNOBOL&lt;/a&gt;!  Now &lt;strong&gt;that&lt;/strong&gt; was an interesting programming course! Along with the one on &lt;a href=&quot;http://en.wikipedia.org/wiki/Simula_67&quot;&gt;Simula&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とにかく、正規表現は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SNOBOL&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SNOBOLに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比べてとても不格好&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;興味深いプログラミングのコースでした！&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Simula_67&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simula&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のものと一緒に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58c85a0276f22c46ce13b2389bc79add52b37f1c" translate="yes" xml:space="preserve">
          <source>Arbitrary symbols can be escaped with a backslash in PCRE, but not BRE/ERE (they must only be escaped when required). For PCRE &lt;code&gt;] -&lt;/code&gt; only need escaping within a character class, but I kept them in a single list for simplicity</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PCREでは任意の記号をバックスラッシュでエスケープできますが、BRE / EREはエスケープできません（必要な場合にのみエスケープする必要があります）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PCREの場合&lt;/font&gt;&lt;/font&gt; &lt;code&gt;] -&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字クラス内でのみエスケープする必要がありますが、簡単にするために、それらを1つのリストにまとめました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a704c051e3f6fec7c0f0d461f093c5717764bc8" translate="yes" xml:space="preserve">
          <source>Aside from escapes, different regex implementations may support different modifiers, character classes, anchors, quantifiers, and other features. For more details, check out &lt;a href=&quot;http://www.regular-expressions.info&quot;&gt;regular-expressions.info&lt;/a&gt;, or use &lt;a href=&quot;https://regex101.com/&quot;&gt;regex101.com&lt;/a&gt; to test your expressions live</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エスケープは別として、さまざまな正規表現の実装は、さまざまな修飾子、文字クラス、アンカー、数量詞、およびその他の機能をサポートする場合があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.regular-expressions.info&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;regular-expressions.infoを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確認する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://regex101.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;regex101.com&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して式をライブでテストしてください&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d89ca9e85b093f0601f26d305e30b91ef0aee25b" translate="yes" xml:space="preserve">
          <source>BTW Character classes are pretty vanilla regexp components so they tend to work in most situations where you need escaped characters in regexps.</source>
          <target state="translated">ちなみに、キャラクタークラスはかなりバニラの正規表現のコンポーネントなので、正規表現でエスケープされたキャラクターが必要な状況では、ほとんどの場合に機能する傾向があります。</target>
        </trans-unit>
        <trans-unit id="13174a9bc7f1c0d22d348a38e636143a4c31cda4" translate="yes" xml:space="preserve">
          <source>Be aware how the string in memory is processed: if can be a plain string inside the code, or a string entered to the command line, but a could be either an interactive command line or a command line stated inside a shell script file, or inside a variable in memory mentioned by the code, or an (string)argument through further evaluation, or a string containing code generated dynamically with any sort of encapsulation...</source>
          <target state="translated">メモリ内の文字列がどのように処理されるかに注意してください:if はコード内のプレーンな文字列、またはコマンドラインに入力された文字列ですが、a は対話的なコマンドライン、またはシェルスクリプトファイル内に記述されたコマンドライン、またはコードによって言及されたメモリ内の変数、またはさらなる評価による (文字列)引数、または任意の種類のカプセル化で動的に生成されたコードを含む文字列のいずれかになります...</target>
        </trans-unit>
        <trans-unit id="dd01e7e261a6b1fe70b847c4b38dda03985adf94" translate="yes" xml:space="preserve">
          <source>Check out Jeff Friedl's &lt;a href=&quot;http://regex.info/&quot;&gt;Mastering Regular Expressions&lt;/a&gt; book.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jeff Friedlの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://regex.info/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mastering Regular Expressionsの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8361115b121b188d914f90203e49011346e5c7e6" translate="yes" xml:space="preserve">
          <source>E.g. A regexp in the command line starting with &lt;code&gt;perl -npe&lt;/code&gt;, needs to be transferred to a set of &lt;em&gt;exec&lt;/em&gt; system calls connecting as pipe the file handles, each of this exec system calls just has a list of arguments that were separated by (non escaped)spaces, and possibly pipes(|) and redirection (&amp;gt; N&amp;gt; N&amp;gt;&amp;amp;M), parenthesis, interactive expansion of &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;$(())&lt;/code&gt; ... (all this are special characters used by the *sh which might appear to interfere with the character of the regular expression in the next context, but they are evaluated in order: before the command line. The command line is read by a program as bash/sh/csh/tcsh/zsh, essentially inside double quote or single quote the escape is simpler but it is not necessary to quote a string in the command line because mostly the space has to be prefixed with backslash and the quote are not necessary leaving available the expand functionality for characters * and ?, but this parse as different context as within quote. Then when the command line is evaluated the regexp obtained in memory (not as written in the command line) receives the same treatment as it would be in a source file.
For regexp there is character-set context within square brackets [ ], perl regular expression can be quoted by a large set of non alfa-numeric characters (E.g. m// or m:/better/for/path: ...).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;perl -npe&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始まるコマンドラインの正規表現は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファイルハンドルをパイプとして接続&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する一連の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;exec&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;システムコールに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;転送する必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。このexecシステムコールのそれぞれには、（エスケープされていない）で区切られた引数のリストがあります。 ）スペース、そしてパイプ（|）とリダイレクト（&amp;gt; N&amp;gt; N&amp;gt;＆M）、括弧、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$(())&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...（これはすべて、* shによって使用される特殊文字であり、次のコンテキストでは正規表現の文字と干渉する可能性がありますが、コマンドラインの前に順番に評価されます。コマンドラインは、 bash / sh / csh / tcsh / zshとしてプログラムします。基本的に二重引用符または単一引用符の内側では、エスケープは単純ですが、コマンドラインで文字列を引用符で囲む必要はありません。文字*と？の展開機能を使用可能にする必要はありませんが、これは引用符内とは異なるコンテキストとして解析されます。コマンドラインが評価されると、メモリで取得されたregexp（コマンドラインで記述されたものではない）は、それと同じ処理を受け取ります。はソースファイルにあります。正規表現では、角かっこ[]内に文字セットコンテキストがあります。perlの正規表現は、英数字以外の文字の大きなセットで引用できます（例：m //またはm：/ better / for / path：...）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adcff3eaaa4ead07debf3d94dc837f7ed21cec06" translate="yes" xml:space="preserve">
          <source>Each of this context assigned some characters with special functionality.</source>
          <target state="translated">このコンテキストのそれぞれには、特別な機能を持つ文字が割り当てられています。</target>
        </trans-unit>
        <trans-unit id="f08f9b14d233c90e12f3bfe6ffd77d280540b8a2" translate="yes" xml:space="preserve">
          <source>Escaping any other characters is an error with POSIX ERE.</source>
          <target state="translated">他の文字をエスケープするとPOSIX EREでエラーになります。</target>
        </trans-unit>
        <trans-unit id="d175c420ed0e4eac7898cadf08c6b147e48609e3" translate="yes" xml:space="preserve">
          <source>Escaping parentheses and curly brackets in BREs gives them the special meaning their unescaped versions have in EREs.  Some implementations (e.g. GNU) also give special meaning to other characters when escaped, such as \? and +.  Escaping a character other than .^$*(){} is normally an error with BREs.</source>
          <target state="translated">BRE で括弧や中括弧をエスケープすると、エスケープされていないバージョンが ERE で持つ特別な意味を与えます。いくつかの実装 (GNU など)では、他の文字をエスケープしたときに特別な意味を与えるものもあります。.^$$*(){}以外の文字をエスケープすることは、通常BREではエラーとなります。</target>
        </trans-unit>
        <trans-unit id="f87278cc2c06764d8e04de06f830e733e448a3fd" translate="yes" xml:space="preserve">
          <source>Except if it's a &quot; or '.  :/</source>
          <target state="translated">または'であれば別ですが。</target>
        </trans-unit>
        <trans-unit id="407083df41efb846753191551f28dbb6de294319" translate="yes" xml:space="preserve">
          <source>For Ionic (Typescript) you have to double slash in order to scape the characters.
For example (this is to match some special characters):</source>
          <target state="translated">Ionic (Typescript)の場合は、文字をスケープするためにダブルスラッシュが必要です。例えば(これは一部の特殊文字に合わせるためです)。</target>
        </trans-unit>
        <trans-unit id="54f275ed7771dcb69cbc20ef9c202565ae878bcf" translate="yes" xml:space="preserve">
          <source>For PCRE, and most other so-called Perl-compatible flavors, escape these outside character classes:</source>
          <target state="translated">PCREや他のほとんどのいわゆるPerl互換フレーバーでは、これらの外部文字クラスをエスケープしてください。</target>
        </trans-unit>
        <trans-unit id="54c4e41693531e3ab7c7a314ea4e2eaa6d1cf7e1" translate="yes" xml:space="preserve">
          <source>For PHP, &quot;it is always safe to precede a non-alphanumeric with &quot;\&quot; to specify that it stands for itself.&quot; - &lt;a href=&quot;http://php.net/manual/en/regexp.reference.escape.php&quot;&gt;http://php.net/manual/en/regexp.reference.escape.php&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPの場合、「英数字以外の前に「\」を付けて、それ自体を表すことは常に安全です。」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/regexp.reference.escape.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://php.net/manual/en/regexp.reference.escape.php&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9380e5c8736cd4f19e0b9dd344946b2244877c31" translate="yes" xml:space="preserve">
          <source>For POSIX extended regexes (ERE), escape these outside character classes (same as PCRE):</source>
          <target state="translated">POSIX 拡張正規表現 (RE)では、これらの外部文字クラスをエスケープします (PCRE と同じ)。</target>
        </trans-unit>
        <trans-unit id="c2b64b544c190d00d427d2155b94a792b1b9db30" translate="yes" xml:space="preserve">
          <source>However, keeping a page like the &lt;a href=&quot;http://www.regular-expressions.info/tools.html&quot;&gt;Regular Expression Tools Page&lt;/a&gt; or this &lt;a href=&quot;http://www.addedbytes.com/cheat-sheets/regular-expressions-cheat-sheet/&quot;&gt;Regular Expression Cheatsheet&lt;/a&gt; can go a long way to help you quickly filter things out.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.regular-expressions.info/tools.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正規表現ツールページ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;やこの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.addedbytes.com/cheat-sheets/regular-expressions-cheat-sheet/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正規表現チートシートの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなページを維持する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことは、物事をすばやくフィルターで除外するのに役立つ場合があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a849b55daf78cf386fa658998ec37854ddff4799" translate="yes" xml:space="preserve">
          <source>I am tired of always trying to guess, if I should escape special characters like '&lt;code&gt;()[]{}|&lt;/code&gt;' etc. when using many implementations of regexps.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;' &lt;/font&gt;&lt;/font&gt; &lt;code&gt;()[]{}|&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような特殊文字をエスケープする必要がある場合、常に推測しようとすることにうんざりしてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'正規表現の多くの実装を使用する場合など。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7ca436bca697c7810913b29993feabb023b8083" translate="yes" xml:space="preserve">
          <source>I tend to just use a simple character class definition instead, so the above expression becomes</source>
          <target state="translated">代わりに単純な文字クラスの定義を使うことが多いので、上記の式は</target>
        </trans-unit>
        <trans-unit id="54394c6bb51712440f21ae57bbe2313f22ce140e" translate="yes" xml:space="preserve">
          <source>If all this makes your head spin, grab a copy of &lt;a href=&quot;http://www.regexbuddy.com&quot;&gt;RegexBuddy&lt;/a&gt;.  On the Create tab, click Insert Token, and then Literal.  RegexBuddy will add escapes as needed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これがすべてあなたの頭を回転させるなら、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.regexbuddy.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegexBuddyの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーをつかんで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[作成]タブで、[トークンの挿入]、[リテラル]の順にクリックします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegexBuddyは必要に応じてエスケープを追加します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e77fe7b95e12760b0659f5fe78377351558ca7ab" translate="yes" xml:space="preserve">
          <source>If unsure about a specific character, it can be escaped like &lt;code&gt;\xFF&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特定の文字が不明な場合は、&lt;/font&gt; &lt;code&gt;\xFF&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようにエスケープできます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06293a23dfd9a2808f8f5af94622a77f9985f0f4" translate="yes" xml:space="preserve">
          <source>In POSIX basic regular expressions (BRE), these are metacharacters that you need to escape to suppress their meaning:</source>
          <target state="translated">POSIX の基本正規表現 (BRE)では、これらはメタキャラクタであり、その意味を抑制するためにエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="11f83cfdeb5fd5da7a22a95360d91b3ad72833f6" translate="yes" xml:space="preserve">
          <source>In the official documentation, such characters are called metacharacters. Example of quoting:</source>
          <target state="translated">公式ドキュメントでは、このような文字のことをメタキャラクタと呼んでいます。引用の例。</target>
        </trans-unit>
        <trans-unit id="ab1a58228582b4b117b80856b4c70bcaadadd844" translate="yes" xml:space="preserve">
          <source>Inside character classes, BREs follow the same rule as EREs.</source>
          <target state="translated">文字クラスの内部では、BRE は ERE と同じルールに従います。</target>
        </trans-unit>
        <trans-unit id="e2b30b848c1b94f3704299738525753a115907c3" translate="yes" xml:space="preserve">
          <source>Inside character classes, the backslash is a literal character in POSIX regular expressions.  You cannot use it to escape anything.  You have to use &quot;clever placement&quot; if you want to include character class metacharacters as literals.  Put the ^ anywhere except at the start, the ] at the start, and the - at the start or the end of the character class to match these literally, e.g.:</source>
          <target state="translated">文字クラスの内部では、バックスラッシュはPOSIX正規表現のリテラル文字です。これを使って何かをエスケープすることはできません。文字クラスのメタキャラクタをリテラルとして含めたい場合は、「巧妙な配置」を使用する必要があります。文字クラスの開始部以外の場所には ^ を、開始部には]を、文字クラスの開始部または終了部には-を置くことで、これらをリテラルに一致させることができます。</target>
        </trans-unit>
        <trans-unit id="894aa802f4d8b50284470b8d7af8d180642a0cbc" translate="yes" xml:space="preserve">
          <source>It is different with, for example, Python, sed, grep, awk, Perl, rename, Apache, find and so on.
Is there any rule set which tells when I should, and when I should not, escape special characters? Does it depend on the regexp type, like PCRE, POSIX or extended regexps?</source>
          <target state="translated">これは、例えば、Python、sed、grep、awk、Perl、rename、Apache、find などでは異なります。特殊文字をエスケープすべき時とすべきでない時のルールはありますか?PCRE、POSIX、拡張正規表現など、正規表現の種類に依存しますか?</target>
        </trans-unit>
        <trans-unit id="f92cf4d271e5e508b9d65066ab31d73c4b3a60db" translate="yes" xml:space="preserve">
          <source>Legacy RegEx Flavors (BRE/ERE)</source>
          <target state="translated">レガシーレジェックスフレーバー(ブリーレ</target>
        </trans-unit>
        <trans-unit id="87ba021fd029962b2cfc3314e679c5178f8e8f91" translate="yes" xml:space="preserve">
          <source>Modern RegEx Flavors (PCRE)</source>
          <target state="translated">モダンレジェックスフレーバー(PCRE)</target>
        </trans-unit>
        <trans-unit id="8dbd969ee97bd9bfab2f6fa3ae907ed08d524cab" translate="yes" xml:space="preserve">
          <source>Not all the world's a PCRE!</source>
          <target state="translated">世界の全てがPCREじゃない!?</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="58712ad0108374c3dbf6f92a6b72b766dd6aebab" translate="yes" xml:space="preserve">
          <source>POSIX recognizes multiple variations on regular expressions - basic regular expressions (BRE) and extended regular expressions (ERE).  And even then, there are quirks because of the historical implementations of the utilities standardized by POSIX.</source>
          <target state="translated">POSIXは、基本正規表現(BRE)と拡張正規表現(RE)という複数のバリエーションの正規表現を認識しています。また、POSIXで標準化されたユーティリティの歴史的な実装があるため、その中にも奇妙な点があります。</target>
        </trans-unit>
        <trans-unit id="42499e430e3ad3149c99af96ca10e885aaf46de4" translate="yes" xml:space="preserve">
          <source>Pay attention to this &lt;code&gt;] [ - _ . /&lt;/code&gt; characters. They have to be double slashed. If you don't do that, you are going to have a type error in your code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これに注意して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;] [ - _ . /&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらはダブルスラッシュにする必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そうしないと、コードに型エラーが発生します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="061d7c539b5b77283f5797bd9cad026318098133" translate="yes" xml:space="preserve">
          <source>Quoted expression strings must also have the surrounding quote characters escaped, and often with backslashes doubled-up (like &lt;code&gt;&quot;(\&quot;)(/)(\\.)&quot;&lt;/code&gt; versus &lt;code&gt;/(&quot;)(\/)(\.)/&lt;/code&gt; in JavaScript)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用符で囲まれた表現の文字列は、周囲の引用符をエスケープしている、と多くの場合、バックスラッシュと二倍アップ（のようにしなければなりません&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;(\&quot;)(/)(\\.)&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対&lt;/font&gt;&lt;/font&gt; &lt;code&gt;/(&quot;)(\/)(\.)/&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でJavaScript）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c4898925ca3b5988085856c93d5eb8db2bb8ad5" translate="yes" xml:space="preserve">
          <source>Really, there isn't.  there are about a half-zillion different regex syntaxes; they seem to come down to Perl, EMACS/GNU, and AT&amp;amp;T in general, but I'm always getting surprised too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本当にありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;約50億の異なる正規表現構文があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らは一般的にPerl、EMACS / GNU、AT＆Tに分類されるように見えますが、私もいつも驚いています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bfebe3640cdb3426c48e83c532cc87ad6d71ffa" translate="yes" xml:space="preserve">
          <source>So you really have to know what style you are trying to quote.</source>
          <target state="translated">だから、どんなスタイルで引用しようとしているのか、本当に理解しておかなければなりません。</target>
        </trans-unit>
        <trans-unit id="39b6f38bf2b3ef957f165d6856f072c9d6cb4abb" translate="yes" xml:space="preserve">
          <source>Sometimes simple escaping is not possible with the characters you've listed. For example, using a backslash to escape a bracket isn't going to work in the left hand side of a substitution string in sed, namely</source>
          <target state="translated">リストアップした文字では単純なエスケープができないことがあります。例えば、バックスラッシュを使って大括弧をエスケープしても、sed の置換文字列の左側、すなわち</target>
        </trans-unit>
        <trans-unit id="3ffbf9108e1fb9f4f739a7c110dd8d9f4aaaeb20" translate="yes" xml:space="preserve">
          <source>There isn't a simple rule for when to use which notation, or even which notation a given command uses.</source>
          <target state="translated">いつどの記法を使うか、あるいは与えられたコマンドがどの記法を使うかという単純なルールはありません。</target>
        </trans-unit>
        <trans-unit id="1eae24d3735cf6382bb598acd327833adead48fa" translate="yes" xml:space="preserve">
          <source>To escape regex pattern variables (or partial variables) in PHP use preg_quote()</source>
          <target state="translated">PHP で正規表現パターン変数 (あるいは部分変数)をエスケープするには preg_quote()を使用します。</target>
        </trans-unit>
        <trans-unit id="547d9c5fe8cf140947c895b536944d926d9e0565" translate="yes" xml:space="preserve">
          <source>To know when and what to escape without attempts is necessary to understand precisely the chain of contexts the string pass through. You will specify the string from the farthest side to its final destination which is the memory handled by the regexp parsing code.</source>
          <target state="translated">いつ、何を試行せずにエスケープするかを知るためには、文字列が通過するコンテキストの連鎖を正確に理解する必要があります。文字列の一番遠い側から最終的な宛先までの文字列を指定します。</target>
        </trans-unit>
        <trans-unit id="495c0df080d56ef66956bee36ba63ba18fb51ee5" translate="yes" xml:space="preserve">
          <source>Unfortunately there really isn't a set set of escape codes since it varies based on the language you are using.</source>
          <target state="translated">残念ながら、使用している言語によって異なるため、エスケープコードのセットはありません。</target>
        </trans-unit>
        <trans-unit id="e0c90f58ad09d2083cef1d05099012604eb5e2e4" translate="yes" xml:space="preserve">
          <source>Unfortunately, the meaning of things like ( and \( are swapped between Emacs style regular expressions and most other styles.  So if you try to escape these you may be doing the opposite of what you want.</source>
          <target state="translated">残念ながら、Emacs スタイルの正規表現と他のほとんどのスタイルの間では、(や \()のようなものの意味が入れ替わっています。そのため、これらをエスケープしようとすると、あなたが望むものとは逆のことをすることになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="202929eaf3ff70c56f13ef4bebb902c161a24535" translate="yes" xml:space="preserve">
          <source>What special characters must be escaped in regular expressions</source>
          <target state="translated">正規表現でエスケープしなければならない特殊文字は何か</target>
        </trans-unit>
        <trans-unit id="42311309ff2118567ad88fb48a34fbf0d59ff5ce" translate="yes" xml:space="preserve">
          <source>When you want to pass the character literally without using its special function (local to the context), than that's the case you have to escape it, for the next context... which might need some other escape characters which might additionally need to be escaped in the preceding context(s).
Furthermore there can be things like character encoding (the most insidious is utf-8 because it look like ASCII for common characters, but might be optionally interpreted even by the terminal depending on its settings so it might behave differently, then the encoding attribute of HTML/XML, it's necessary to understand the process precisely right.</source>
          <target state="translated">特別な関数(コンテキストのローカル)を使わずに文字通り文字を渡したい場合は、次のコンテキストのためにそれをエスケープしなければなりません...その場合、他のエスケープ文字が必要になるかもしれません。さらに、文字エンコーディングのようなものがあるかもしれません(最も厄介なのはutf-8ですが、一般的な文字はASCIIのように見えますが、端末の設定によってはオプションで解釈される可能性があるので、異なる動作をするかもしれません)。</target>
        </trans-unit>
        <trans-unit id="a0a70f58b2f56278f97d8e49ecc8b78c271bc6df" translate="yes" xml:space="preserve">
          <source>Which characters you must and which you mustn't escape indeed depends on the regex flavor you're working with.</source>
          <target state="translated">どの文字を使わなければならず、どの文字を逃がしてはいけないかは、使用している正規表現のフレーバーに依存します。</target>
        </trans-unit>
        <trans-unit id="65f33a96f4971b1a18dc55f52b610954b500eaef" translate="yes" xml:space="preserve">
          <source>You have more details about characters in other answer, which are very specific to the final regexp context. As I noted you mention that you find the regexp escape with attempts, that's probably because different context has different set of character that confused your memory of attempts (often backslash is the character used in those different context to escape a literal character instead of its function).</source>
          <target state="translated">文字についての詳細は他の回答にありますが、それは最終的な正規表現のコンテキストに非常に特有のものです。私が指摘したように、あなたは正規表現のエスケープを試行で見つけると言っていますが、それはおそらく、異なるコンテキストでは異なる文字のセットがあり、試行の記憶を混乱させているからでしょう(多くの場合、バックスラッシュは、その関数の代わりにリテラル文字をエスケープするために、異なるコンテキストで使用される文字です)。</target>
        </trans-unit>
        <trans-unit id="0b2b1ae2916b329bfb39c280bca9d2f0928411cc" translate="yes" xml:space="preserve">
          <source>You might like to look at &quot;the shiny ball book&quot; aka Effective Perl (&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201419750&quot;&gt;sanitised Amazon link&lt;/a&gt;), specifically the chapter on regular expressions, to get a feel for then difference in regexp engine evaluation types.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;光沢のあるボールブック&quot;別名Effective Perl（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201419750&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Amazonのサニタイズされたリンク&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）、特に正規表現の章を見て、正規表現エンジンの評価タイプの違いを感じてください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="053134580733d1b999fe3b6e87c6cffd5823b4cb" translate="yes" xml:space="preserve">
          <source>and these inside character classes:</source>
          <target state="translated">と、これらの文字クラスの内側にあります。</target>
        </trans-unit>
        <trans-unit id="29a0a78174e89d70570199cb327a0b8879d9165e" translate="yes" xml:space="preserve">
          <source>which I find works for most regexp implementations.</source>
          <target state="translated">これはほとんどの正規表現の実装で動作すると思います。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
