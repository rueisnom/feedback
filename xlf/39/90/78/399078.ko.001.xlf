<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/399078">
    <body>
      <group id="399078">
        <trans-unit id="7d67bb6716e56cca3eca8a9065af38ddcf97e9f6" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Anywhere: &lt;code&gt;. ^ $ * + - ? ( ) [ ] { } \ |&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;어디서나 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;. ^ $ * + - ? ( ) [ ] { } \ |&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a8c55057c2c0495b9bccfbec7b17e45412ea5d8" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;For literals, don't escape: &lt;code&gt;+ ? ( ) { } |&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;리터럴의 경우 이스케이프하지 마십시오. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;+ ? ( ) { } |&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a97d47555ec0720c1f70236663cc597967c70a60" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;For standard regex behavior, escape: &lt;code&gt;\+ \? \( \) \{ \} \|&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;표준 정규식 동작의 경우 이스케이프 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;\+ \? \( \) \{ \} \|&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f12e6d0791605981ba059a406b6691a5f9790e5e" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Inside a character class: &lt;code&gt;^ - [ ]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;문자 클래스 내부 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;^ - [ ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="918002f5c663d22dba42a630d4b732416c76c2b3" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Outside a character class: &lt;code&gt;. ^ $ * + ? ( ) [ { } \ |&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;캐릭터 클래스 외부 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;. ^ $ * + ? ( ) [ { } \ |&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91540850fdd2484dc131620648016ffd98c1f7b1" translate="yes" xml:space="preserve">
          <source>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Outside a character class: &lt;code&gt;. ^ $ * [ \&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;캐릭터 클래스 외부 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;. ^ $ * [ \&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2da9c9d2e4568a1a403995617dc37f29af2dbfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://perldoc.perl.org/perlre.html#Quoting-metacharacters&quot;&gt;https://perldoc.perl.org/perlre.html#Quoting-metacharacters&lt;/a&gt; and &lt;a href=&quot;https://perldoc.perl.org/functions/quotemeta.html&quot;&gt;https://perldoc.perl.org/functions/quotemeta.html&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://perldoc.perl.org/perlre.html#Quoting-metacharacters&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://perldoc.perl.org/perlre.html#Quoting-metacharacters&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://perldoc.perl.org/functions/quotemeta.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://perldoc.perl.org/functions/quotemeta.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c393bf2f34a2d6c181e8a2227df5d4efeef0d62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BRE/ed/grep/sed&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;BRE/ed/grep/sed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f59e21f8afbeffd98079028ce6aeaf7d6a78fa84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ERE/awk/egrep/emacs&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ERE/awk/egrep/emacs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e676b1e710b18dc41e56c23b6c72c2cc9e9870df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt; After the comment below, just thought I'd mention the fact that you also have to consider the difference between finite state automata and non-finite state automata when looking at the behaviour of regexp evaluation.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 아래 의견 후에, 정규식 평가의 동작을 볼 때 유한 상태 오토마타와 비 유한 상태 오토마타의 차이점을 고려해야한다는 사실을 언급했다고 생각했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45c05493036228b57a91a503e22683c5ed128082" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Includes C, C++, Delphi, EditPad, Java, JavaScript, Perl, PHP (preg), PostgreSQL, PowerGREP, PowerShell, Python, REALbasic, Real Studio, Ruby, TCL, VB.Net, VBScript, wxWidgets, XML Schema, Xojo, XRegExp.&lt;br/&gt;PCRE compatibility may vary&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C, C ++, Delphi, EditPad, Java, JavaScript, Perl, PHP (preg), PostgreSQL, PowerGREP, PowerShell, Python, REALbasic, Real Studio, Ruby, TCL, VB.Net, VBScript, wxWidgets, XML 스키마, Xojo, XRegExp. &lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PCRE 호환성은 다를 수 있습니다&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7267e98c4a2f05739245cf705a86774ca73aa3eb" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Includes awk, ed, egrep, emacs, GNUlib, grep, PHP (ereg), MySQL, Oracle, R, sed.&lt;br/&gt;PCRE support may be enabled in later versions or by using extensions&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;awk, ed, egrep, emacs, GNUlib, grep, PHP (ereg), MySQL, Oracle, R, sed를 포함합니다. &lt;/font&gt;&lt;/font&gt;&lt;br/&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PCRE 지원은 이후 버전에서 또는 확장을 사용하여 활성화 될 수 있습니다&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="53935ccb1d1bcc34d9efdfc75f0d546800f41839" translate="yes" xml:space="preserve">
          <source>Ah the joys of studying at UNSW in the late '70's! (-:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;70 년대 후반 UNSW에서 공부하는 기쁨! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(-:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="483f30ef22803526f1679fc7151333a7355f53c7" translate="yes" xml:space="preserve">
          <source>Alphanumeric characters cannot be escaped with a backslash</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;영숫자 문자는 백 슬래시로 이스케이프 할 수 없습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7ebf500ba421b0bf9df4deedc3b6483601a07fa" translate="yes" xml:space="preserve">
          <source>Anyway, regexp's are so clunky compared to &lt;a href=&quot;http://en.wikipedia.org/wiki/SNOBOL&quot;&gt;SNOBOL&lt;/a&gt;!  Now &lt;strong&gt;that&lt;/strong&gt; was an interesting programming course! Along with the one on &lt;a href=&quot;http://en.wikipedia.org/wiki/Simula_67&quot;&gt;Simula&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어쨌든 정규 표현식은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/SNOBOL&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SNOBOL에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 비해 너무 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어색합니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 흥미로운 프로그래밍 과정이었다! &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Simula_67&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simula에&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있는 것과 함께 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58c85a0276f22c46ce13b2389bc79add52b37f1c" translate="yes" xml:space="preserve">
          <source>Arbitrary symbols can be escaped with a backslash in PCRE, but not BRE/ERE (they must only be escaped when required). For PCRE &lt;code&gt;] -&lt;/code&gt; only need escaping within a character class, but I kept them in a single list for simplicity</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;임의의 기호는 PCRE에서 백 슬래시로 이스케이프 할 수 있지만 BRE / ERE는 이스케이프 할 수 없습니다 (필요한 경우에만 이스케이프해야 함). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PCRE의 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;] -&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문자 클래스 내에서 이스케이프 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되지만 단순성을 위해 단일 목록으로 유지했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a704c051e3f6fec7c0f0d461f093c5717764bc8" translate="yes" xml:space="preserve">
          <source>Aside from escapes, different regex implementations may support different modifiers, character classes, anchors, quantifiers, and other features. For more details, check out &lt;a href=&quot;http://www.regular-expressions.info&quot;&gt;regular-expressions.info&lt;/a&gt;, or use &lt;a href=&quot;https://regex101.com/&quot;&gt;regex101.com&lt;/a&gt; to test your expressions live</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이스케이프 외에도, 다른 정규식 구현은 다른 수정 자, 문자 클래스, 앵커, 수량 자 및 기타 기능을 지원할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 체크 아웃 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.regular-expressions.info&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;regular-expressions.info&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 또는 사용 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://regex101.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;regex101.com를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신의 표현이 살고 테스트&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d89ca9e85b093f0601f26d305e30b91ef0aee25b" translate="yes" xml:space="preserve">
          <source>BTW Character classes are pretty vanilla regexp components so they tend to work in most situations where you need escaped characters in regexps.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BTW 문자 클래스는 꽤 ​​바닐라 정규 표현식 구성 요소이므로 정규 표현식에서 이스케이프 문자가 필요한 대부분의 상황에서 작동하는 경향이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13174a9bc7f1c0d22d348a38e636143a4c31cda4" translate="yes" xml:space="preserve">
          <source>Be aware how the string in memory is processed: if can be a plain string inside the code, or a string entered to the command line, but a could be either an interactive command line or a command line stated inside a shell script file, or inside a variable in memory mentioned by the code, or an (string)argument through further evaluation, or a string containing code generated dynamically with any sort of encapsulation...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메모리의 문자열이 처리되는 방법에주의하십시오. 코드에서 언급 한 메모리의 변수 내부 또는 추가 평가를 통한 (문자열) 인수 또는 모든 종류의 캡슐화로 동적으로 생성 된 코드가 포함 된 문자열 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd01e7e261a6b1fe70b847c4b38dda03985adf94" translate="yes" xml:space="preserve">
          <source>Check out Jeff Friedl's &lt;a href=&quot;http://regex.info/&quot;&gt;Mastering Regular Expressions&lt;/a&gt; book.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jeff Friedl의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://regex.info/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mastering Regular Expressions&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 책을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;확인하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8361115b121b188d914f90203e49011346e5c7e6" translate="yes" xml:space="preserve">
          <source>E.g. A regexp in the command line starting with &lt;code&gt;perl -npe&lt;/code&gt;, needs to be transferred to a set of &lt;em&gt;exec&lt;/em&gt; system calls connecting as pipe the file handles, each of this exec system calls just has a list of arguments that were separated by (non escaped)spaces, and possibly pipes(|) and redirection (&amp;gt; N&amp;gt; N&amp;gt;&amp;amp;M), parenthesis, interactive expansion of &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;$(())&lt;/code&gt; ... (all this are special characters used by the *sh which might appear to interfere with the character of the regular expression in the next context, but they are evaluated in order: before the command line. The command line is read by a program as bash/sh/csh/tcsh/zsh, essentially inside double quote or single quote the escape is simpler but it is not necessary to quote a string in the command line because mostly the space has to be prefixed with backslash and the quote are not necessary leaving available the expand functionality for characters * and ?, but this parse as different context as within quote. Then when the command line is evaluated the regexp obtained in memory (not as written in the command line) receives the same treatment as it would be in a source file.
For regexp there is character-set context within square brackets [ ], perl regular expression can be quoted by a large set of non alfa-numeric characters (E.g. m// or m:/better/for/path: ...).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;perl -npe&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시작하는 명령 행의 정규 표현식 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 파일 핸들을 파이프로 연결 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 일련의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실행&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 시스템 호출 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로 전송해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 실행 시스템 호출 각각은 (비 이스케이프되지 않은) 인수 목록을 가지고 있습니다. ) 공간 및 가능하면 파이프 (|) 및 리디렉션 (&amp;gt; N&amp;gt; N&amp;gt; &amp;amp; M), 괄호, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 대화식 확장 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$(())&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... (모든 문자는 * sh에서 사용되는 특수 문자로, 다음 컨텍스트에서 정규 표현식의 문자를 방해하는 것처럼 보일 수 있지만 순서대로 평가됩니다. 명령 행 앞의 명령 행을 읽습니다. 프로그램은 bash / sh / csh / tcsh / zsh와 같이 기본적으로 큰 따옴표 또는 작은 따옴표 안에 이스케이프가 더 간단하지만 명령 행에서 문자열을 인용 할 필요는 없지만 대부분 공백은 백 슬래시로 시작해야하며 따옴표는 * 및? 문자에 대한 확장 기능을 사용할 수있는 상태로 둘 필요는 없지만 인용 부호와 다른 컨텍스트로 구문 분석 한 다음 명령 행을 평가할 때 (명령 행에 기록되지 않은) 메모리에서 얻은 정규 표현식이 동일한 처리를 수신합니다. 정규 표현식의 경우 대괄호 [] 안에 문자 세트 컨텍스트가 있습니다.펄 정규 표현식은 큰 비 알파 숫자 문자 (예 : m // 또는 m : / better / for / path : ...)로 인용 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="adcff3eaaa4ead07debf3d94dc837f7ed21cec06" translate="yes" xml:space="preserve">
          <source>Each of this context assigned some characters with special functionality.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문맥 각각은 특수 기능을 가진 일부 문자를 할당했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f08f9b14d233c90e12f3bfe6ffd77d280540b8a2" translate="yes" xml:space="preserve">
          <source>Escaping any other characters is an error with POSIX ERE.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;POSIX ERE에서 다른 문자를 이스케이프 처리하면 오류가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d175c420ed0e4eac7898cadf08c6b147e48609e3" translate="yes" xml:space="preserve">
          <source>Escaping parentheses and curly brackets in BREs gives them the special meaning their unescaped versions have in EREs.  Some implementations (e.g. GNU) also give special meaning to other characters when escaped, such as \? and +.  Escaping a character other than .^$*(){} is normally an error with BREs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BRE에서 괄호와 중괄호를 이스케이프 처리하면 이스케이프 처리되지 않은 버전이 ERE에서 특별한 의미를 갖습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 구현 (예 : GNU)은 이스케이프 할 때 \?와 같은 다른 문자에도 특별한 의미를 부여합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 +. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. ^ $ * () {} 이외의 문자를 이스케이프 처리하는 것은 일반적으로 BRE의 오류입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f87278cc2c06764d8e04de06f830e733e448a3fd" translate="yes" xml:space="preserve">
          <source>Except if it's a &quot; or '.  :/</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;또는&quot;인 경우를 제외하고. : /&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="407083df41efb846753191551f28dbb6de294319" translate="yes" xml:space="preserve">
          <source>For Ionic (Typescript) you have to double slash in order to scape the characters.
For example (this is to match some special characters):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ionic (Typescript)의 경우, 문자를 탈출하려면 슬래시를 두 번 사용해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 (특수 문자와 일치) :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54f275ed7771dcb69cbc20ef9c202565ae878bcf" translate="yes" xml:space="preserve">
          <source>For PCRE, and most other so-called Perl-compatible flavors, escape these outside character classes:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PCRE 및 대부분의 다른 소위 Perl 호환 특징의 경우 다음 외부 문자 클래스를 피하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54c4e41693531e3ab7c7a314ea4e2eaa6d1cf7e1" translate="yes" xml:space="preserve">
          <source>For PHP, &quot;it is always safe to precede a non-alphanumeric with &quot;\&quot; to specify that it stands for itself.&quot; - &lt;a href=&quot;http://php.net/manual/en/regexp.reference.escape.php&quot;&gt;http://php.net/manual/en/regexp.reference.escape.php&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP의 경우 &quot;영숫자가 아닌 문자 앞에&quot;\ &quot;를 붙여서 자체를 나타내는 것이 항상 안전합니다.&quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/regexp.reference.escape.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://php.net/manual/en/regexp.reference.escape.php&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9380e5c8736cd4f19e0b9dd344946b2244877c31" translate="yes" xml:space="preserve">
          <source>For POSIX extended regexes (ERE), escape these outside character classes (same as PCRE):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;POSIX 확장 정규 표현식 (ERE)의 경우 다음 외부 문자 클래스 (PCRE와 동일)를 이스케이프하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2b64b544c190d00d427d2155b94a792b1b9db30" translate="yes" xml:space="preserve">
          <source>However, keeping a page like the &lt;a href=&quot;http://www.regular-expressions.info/tools.html&quot;&gt;Regular Expression Tools Page&lt;/a&gt; or this &lt;a href=&quot;http://www.addedbytes.com/cheat-sheets/regular-expressions-cheat-sheet/&quot;&gt;Regular Expression Cheatsheet&lt;/a&gt; can go a long way to help you quickly filter things out.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나, 같은 페이지를 유지 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.regular-expressions.info/tools.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정규 표현식 도구 페이지&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는이 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.addedbytes.com/cheat-sheets/regular-expressions-cheat-sheet/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정규 표현식 쪽지은&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 신속하게 필터의 일을 당신을 돕기 위해 먼 길을 갈 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a849b55daf78cf386fa658998ec37854ddff4799" translate="yes" xml:space="preserve">
          <source>I am tired of always trying to guess, if I should escape special characters like '&lt;code&gt;()[]{}|&lt;/code&gt;' etc. when using many implementations of regexps.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;' &lt;/font&gt;&lt;/font&gt; &lt;code&gt;()[]{}|&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 특수 문자를 피해야한다면 항상 추측하려고하는 데 지쳤습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 정규식 구현을 사용할 때 '등.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7ca436bca697c7810913b29993feabb023b8083" translate="yes" xml:space="preserve">
          <source>I tend to just use a simple character class definition instead, so the above expression becomes</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 간단한 문자 클래스 정의를 사용하는 경향이 있으므로 위의 표현식은&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54394c6bb51712440f21ae57bbe2313f22ce140e" translate="yes" xml:space="preserve">
          <source>If all this makes your head spin, grab a copy of &lt;a href=&quot;http://www.regexbuddy.com&quot;&gt;RegexBuddy&lt;/a&gt;.  On the Create tab, click Insert Token, and then Literal.  RegexBuddy will add escapes as needed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 모든 것이 머리를 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.regexbuddy.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;돌리면 RegexBuddy&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사본을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가져옵니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작성 탭에서 토큰 삽입을 클릭 한 후 리터럴을 클릭하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegexBuddy는 필요에 따라 이스케이프를 추가합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e77fe7b95e12760b0659f5fe78377351558ca7ab" translate="yes" xml:space="preserve">
          <source>If unsure about a specific character, it can be escaped like &lt;code&gt;\xFF&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 문자가 확실하지 않으면 &lt;/font&gt; &lt;code&gt;\xFF&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같이 이스케이프 처리 할 수 ​​있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06293a23dfd9a2808f8f5af94622a77f9985f0f4" translate="yes" xml:space="preserve">
          <source>In POSIX basic regular expressions (BRE), these are metacharacters that you need to escape to suppress their meaning:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;POSIX 기본 정규 표현식 (BRE)에서 다음은 의미를 억제하기 위해 이스케이프해야하는 메타 문자입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11f83cfdeb5fd5da7a22a95360d91b3ad72833f6" translate="yes" xml:space="preserve">
          <source>In the official documentation, such characters are called metacharacters. Example of quoting:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공식 문서에서 이러한 문자를 메타 문자라고합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인용의 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab1a58228582b4b117b80856b4c70bcaadadd844" translate="yes" xml:space="preserve">
          <source>Inside character classes, BREs follow the same rule as EREs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자 클래스 내에서 BRE는 ERE와 동일한 규칙을 따릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2b30b848c1b94f3704299738525753a115907c3" translate="yes" xml:space="preserve">
          <source>Inside character classes, the backslash is a literal character in POSIX regular expressions.  You cannot use it to escape anything.  You have to use &quot;clever placement&quot; if you want to include character class metacharacters as literals.  Put the ^ anywhere except at the start, the ] at the start, and the - at the start or the end of the character class to match these literally, e.g.:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자 클래스 내에서 백 슬래시는 POSIX 정규식의 리터럴 문자입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 아무것도 탈출하는 데 사용할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자 클래스 메타 문자를 리터럴로 포함하려면 &quot;영리한 배치&quot;를 사용해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자 클래스의 시작 또는 끝을 제외한 ^를 문자 클래스의 시작 또는 끝에-를 입력하여 문자 그대로 일치 시키십시오. 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="894aa802f4d8b50284470b8d7af8d180642a0cbc" translate="yes" xml:space="preserve">
          <source>It is different with, for example, Python, sed, grep, awk, Perl, rename, Apache, find and so on.
Is there any rule set which tells when I should, and when I should not, escape special characters? Does it depend on the regexp type, like PCRE, POSIX or extended regexps?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 Python, sed, grep, awk, Perl, rename, Apache, find 등이 다릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특수 문자를 피해야 할 때와 그렇지 않아야 할 때를 알려주는 규칙 세트가 있습니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PCRE, POSIX 또는 확장 정규 표현식과 같은 정규 표현식 유형에 의존합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f92cf4d271e5e508b9d65066ab31d73c4b3a60db" translate="yes" xml:space="preserve">
          <source>Legacy RegEx Flavors (BRE/ERE)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;레거시 RegEx 맛 (BRE / ERE)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87ba021fd029962b2cfc3314e679c5178f8e8f91" translate="yes" xml:space="preserve">
          <source>Modern RegEx Flavors (PCRE)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최신 RegEx 맛 (PCRE)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8dbd969ee97bd9bfab2f6fa3ae907ed08d524cab" translate="yes" xml:space="preserve">
          <source>Not all the world's a PCRE!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 세계가 PCRE는 아닙니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="58712ad0108374c3dbf6f92a6b72b766dd6aebab" translate="yes" xml:space="preserve">
          <source>POSIX recognizes multiple variations on regular expressions - basic regular expressions (BRE) and extended regular expressions (ERE).  And even then, there are quirks because of the historical implementations of the utilities standardized by POSIX.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;POSIX는 기본 정규 표현식 (BRE) 및 확장 정규 표현식 (ERE)과 같은 정규 표현식의 여러 변형을 인식합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 POSIX가 표준화 한 유틸리티의 역사적 구현으로 인해 단점이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42499e430e3ad3149c99af96ca10e885aaf46de4" translate="yes" xml:space="preserve">
          <source>Pay attention to this &lt;code&gt;] [ - _ . /&lt;/code&gt; characters. They have to be double slashed. If you don't do that, you are going to have a type error in your code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것에주의하십시오 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;] [ - _ . /&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문자. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이중 슬래시 여야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇게하지 않으면 코드에 유형 오류가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="061d7c539b5b77283f5797bd9cad026318098133" translate="yes" xml:space="preserve">
          <source>Quoted expression strings must also have the surrounding quote characters escaped, and often with backslashes doubled-up (like &lt;code&gt;&quot;(\&quot;)(/)(\\.)&quot;&lt;/code&gt; versus &lt;code&gt;/(&quot;)(\/)(\.)/&lt;/code&gt; in JavaScript)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인용 표현 문자열은 문자 탈출 주변의 인용문이 있어야하며, 종종 백 슬래시 두 배로 업 (같은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;(\&quot;)(/)(\\.)&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;/(&quot;)(\/)(\.)/&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의를 자바 스크립트)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c4898925ca3b5988085856c93d5eb8db2bb8ad5" translate="yes" xml:space="preserve">
          <source>Really, there isn't.  there are about a half-zillion different regex syntaxes; they seem to come down to Perl, EMACS/GNU, and AT&amp;amp;T in general, but I'm always getting surprised too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로는 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약 절반 정도의 서로 다른 정규 표현식 구문이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그들은 일반적으로 Perl, EMACS / GNU 및 AT &amp;amp; T로 내려 오는 것 같지만 항상 놀라고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bfebe3640cdb3426c48e83c532cc87ad6d71ffa" translate="yes" xml:space="preserve">
          <source>So you really have to know what style you are trying to quote.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 당신은 실제로 어떤 스타일을 인용하려고하는지 알아야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39b6f38bf2b3ef957f165d6856f072c9d6cb4abb" translate="yes" xml:space="preserve">
          <source>Sometimes simple escaping is not possible with the characters you've listed. For example, using a backslash to escape a bracket isn't going to work in the left hand side of a substitution string in sed, namely</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;목록에있는 문자로 간단한 이스케이프를 할 수없는 경우가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 괄호를 이스케이프하기 위해 백 슬래시를 사용하는 것은 sed의 대체 문자열 왼쪽에서 작동하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ffbf9108e1fb9f4f739a7c110dd8d9f4aaaeb20" translate="yes" xml:space="preserve">
          <source>There isn't a simple rule for when to use which notation, or even which notation a given command uses.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떤 표기법을 사용할 때 또는 주어진 명령이 어떤 표기법을 사용하는지에 대한 간단한 규칙은 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1eae24d3735cf6382bb598acd327833adead48fa" translate="yes" xml:space="preserve">
          <source>To escape regex pattern variables (or partial variables) in PHP use preg_quote()</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP에서 정규식 패턴 변수 (또는 부분 변수)를 피하려면 preg_quote ()&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="547d9c5fe8cf140947c895b536944d926d9e0565" translate="yes" xml:space="preserve">
          <source>To know when and what to escape without attempts is necessary to understand precisely the chain of contexts the string pass through. You will specify the string from the farthest side to its final destination which is the memory handled by the regexp parsing code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문자열이 통과하는 컨텍스트 체인을 정확하게 이해하려면 시도하지 않고 언제 그리고 무엇을 피해야하는지 알아야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 먼 쪽에서 최종 대상까지 문자열을 지정합니다.이 대상은 정규 표현식 구문 분석 코드에서 처리하는 메모리입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="495c0df080d56ef66956bee36ba63ba18fb51ee5" translate="yes" xml:space="preserve">
          <source>Unfortunately there really isn't a set set of escape codes since it varies based on the language you are using.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;불행히도 사용중인 언어에 따라 다르기 때문에 실제로 일련의 이스케이프 코드가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0c90f58ad09d2083cef1d05099012604eb5e2e4" translate="yes" xml:space="preserve">
          <source>Unfortunately, the meaning of things like ( and \( are swapped between Emacs style regular expressions and most other styles.  So if you try to escape these you may be doing the opposite of what you want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;불행히도 (and \ ()와 같은 의미는 Emacs 스타일 정규 표현식과 대부분의 다른 스타일 사이에서 바뀝니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="202929eaf3ff70c56f13ef4bebb902c161a24535" translate="yes" xml:space="preserve">
          <source>What special characters must be escaped in regular expressions</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정규식에서 이스케이프해야하는 특수 문자&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42311309ff2118567ad88fb48a34fbf0d59ff5ce" translate="yes" xml:space="preserve">
          <source>When you want to pass the character literally without using its special function (local to the context), than that's the case you have to escape it, for the next context... which might need some other escape characters which might additionally need to be escaped in the preceding context(s).
Furthermore there can be things like character encoding (the most insidious is utf-8 because it look like ASCII for common characters, but might be optionally interpreted even by the terminal depending on its settings so it might behave differently, then the encoding attribute of HTML/XML, it's necessary to understand the process precisely right.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특수 기능 (컨텍스트에 로컬)을 사용하지 않고 문자를 문자 그대로 전달하려는 경우 다음 컨텍스트의 경우 이스케이프 해야하는 경우보다 추가로 필요한 다른 이스케이프 문자가 필요할 수 있습니다. 이전 컨텍스트에서 이스케이프되었습니다. 또한 문자 인코딩과 같은 것들이있을 수 있습니다 (가장 교활한 utf-8은 일반적인 문자의 ASCII처럼 보이기 때문에 선택에 따라 터미널에서도 해석 될 수 있으므로 다르게 행동 할 수 있으므로 HTML의 인코딩 속성) / XML, 프로세스를 정확히 이해해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0a70f58b2f56278f97d8e49ecc8b78c271bc6df" translate="yes" xml:space="preserve">
          <source>Which characters you must and which you mustn't escape indeed depends on the regex flavor you're working with.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떤 캐릭터를 사용해야하고 실제로 탈출하지 않아야하는 캐릭터는 작업중인 정규 표현식에 따라 다릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65f33a96f4971b1a18dc55f52b610954b500eaef" translate="yes" xml:space="preserve">
          <source>You have more details about characters in other answer, which are very specific to the final regexp context. As I noted you mention that you find the regexp escape with attempts, that's probably because different context has different set of character that confused your memory of attempts (often backslash is the character used in those different context to escape a literal character instead of its function).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 답변의 문자에 대한 자세한 내용은 최종 정규 표현식 컨텍스트와 매우 관련이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 언급 한 것처럼 시도와 함께 정규 표현식 이스케이프를 찾는다는 것은 아마도 다른 컨텍스트에는 시도의 메모리를 혼란스럽게하는 다른 문자 집합이 있기 때문일 수 있습니다 (역 슬래시는 해당 컨텍스트 대신 문자 대신 이스케이프 문자로 사용되는 문자입니다) ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b2b1ae2916b329bfb39c280bca9d2f0928411cc" translate="yes" xml:space="preserve">
          <source>You might like to look at &quot;the shiny ball book&quot; aka Effective Perl (&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201419750&quot;&gt;sanitised Amazon link&lt;/a&gt;), specifically the chapter on regular expressions, to get a feel for then difference in regexp engine evaluation types.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정규 표현식에 대한 장인 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;유효한 볼 북&quot;(일명 유효 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표현식 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(일명 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://rads.stackoverflow.com/amzn/click/com/0201419750&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Amazon 링크&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ))을보고 정규 표현식 엔진 평가 유형의 차이를 느끼고 싶을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="053134580733d1b999fe3b6e87c6cffd5823b4cb" translate="yes" xml:space="preserve">
          <source>and these inside character classes:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 이러한 내부 캐릭터 클래스 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29a0a78174e89d70570199cb327a0b8879d9165e" translate="yes" xml:space="preserve">
          <source>which I find works for most regexp implementations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 대부분의 정규 표현식 구현에서 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
