<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/244777">
    <body>
      <group id="244777">
        <trans-unit id="34fa93b53bbf246051102dca8baae329621c5691" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;hello base three&lt;/code&gt; in ASCII) But instead of 0 use space, for 1 use line feed and for 2 use carriage return.</source>
          <target state="translated">( &lt;code&gt;hello base three&lt;/code&gt; в ASCII) Но вместо 0 используйте пробел, для 1 используйте перевод строки и для 2 используйте возврат каретки.</target>
        </trans-unit>
        <trans-unit id="7ebed1765dd7ccc7851e59bc0fdd628490f7bc7d" translate="yes" xml:space="preserve">
          <source>/* This is a</source>
          <target state="translated">/*Это</target>
        </trans-unit>
        <trans-unit id="bf94bef709f46f7c7d68674f1bb8b200ac2da950" translate="yes" xml:space="preserve">
          <source>//&quot;id&quot;: int</source>
          <target state="translated">/&quot;id&quot;:int</target>
        </trans-unit>
        <trans-unit id="ba4a24b3c03e2ccb99980352a2dca68f0f6be621" translate="yes" xml:space="preserve">
          <source>//&quot;name&quot;: &quot;string&quot;</source>
          <target state="translated">/&quot;имя&quot;:&quot;строка&quot;</target>
        </trans-unit>
        <trans-unit id="5b8cb63271630ae5f51e3cb3a0d8b27849d68701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4627&lt;/a&gt;:
The &lt;code&gt;application/json&lt;/code&gt; Media Type for JavaScript Object Notation (JSON)</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc4627.txt&quot;&gt;RFC 4627&lt;/a&gt; : тип носителя &lt;code&gt;application/json&lt;/code&gt; для нотации объектов JavaScript (JSON)</target>
        </trans-unit>
        <trans-unit id="5c2579c1b1b5cf890fcc4fa294fb6ce099d9d5e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.jsonlint.com&quot;&gt;jsonlint&lt;/a&gt; does not validate this. So comments are a parser specific extension and not standard.</source>
          <target state="translated">&lt;a href=&quot;http://www.jsonlint.com&quot;&gt;Jsonlint&lt;/a&gt; не подтверждает это. Таким образом, комментарии являются специфическим расширением парсера и не являются стандартными.</target>
        </trans-unit>
        <trans-unit id="a702bc50d3f7b75690cde2a03af864243499a7c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc8259&quot;&gt;RFC 8259&lt;/a&gt; The JavaScript Object Notation (JSON) Data Interchange Format (supercedes RFCs 4627, 7158, 7159)</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc8259&quot;&gt;RFC 8259&lt;/a&gt; Формат обмена данными нотации объектов JavaScript (JSON) (заменяет RFC 4627, 7158, 7159)</target>
        </trans-unit>
        <trans-unit id="b13056f66ad1abc6e703073098bfef5dc8973dca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Additional note for people who can't think out of the box:&lt;/strong&gt; I use the JSON format for basic settings in an ASP.NET web application I made. I read the file, convert it into the settings object with the Newtonsoft library and use it when necessary.</source>
          <target state="translated">&lt;strong&gt;Дополнительное примечание для людей, которые не могут мыслить нестандартно:&lt;/strong&gt; я использую формат JSON для основных настроек в веб-приложении ASP.NET, которое я сделал. Я читаю файл, преобразую его в объект настроек с помощью библиотеки Newtonsoft и использую его при необходимости.</target>
        </trans-unit>
        <trans-unit id="d6943fb66cf79edcea0c8ade6aa8085a0f57a63a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Answer:&lt;/strong&gt; It would be a one liner. If you do that then JSON files could be used as configuration files.</source>
          <target state="translated">&lt;strong&gt;Ответ:&lt;/strong&gt; Это был бы один лайнер. Если вы сделаете это, файлы JSON могут быть использованы в качестве файлов конфигурации.</target>
        </trans-unit>
        <trans-unit id="f4e7ab93def871696ab38f62d8d8428ce1283817" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BUT&lt;/strong&gt; as the creator of JSON also observed, there has always been JS pipeline support for comments:</source>
          <target state="translated">&lt;strong&gt;НО,&lt;/strong&gt; как заметил создатель JSON, всегда была поддержка конвейера JS для комментариев:</target>
        </trans-unit>
        <trans-unit id="a65128266d54c908b80eea5f1f75fb9bf5f72005" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you try to put comments in (using &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/* */&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt; for instance), then some parsers will fail because this is strictly not
  within the JSON specification. So you should &lt;em&gt;never&lt;/em&gt; do that.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Если вы попытаетесь добавить комментарии (например, используя &lt;code&gt;//&lt;/code&gt; или &lt;code&gt;/* */&lt;/code&gt; или &lt;code&gt;#&lt;/code&gt; ), то некоторые синтаксические анализаторы не будут работать, потому что это строго не входит в спецификацию JSON.&lt;/strong&gt; &lt;strong&gt;Так что &lt;em&gt;никогда не&lt;/em&gt; делай этого.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bd82eee1a265aa79aa470b1a4e82624e65cc313" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Include comments if you choose; strip them out with a minifier before parsing or transmitting.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Включите комментарии, если вы выберете;&lt;/strong&gt; &lt;strong&gt;удалите их с помощью минификатора перед анализом или передачей.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc137b23a988799b2cc6169d59beb9eb0dd347da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON is not a framed protocol&lt;/strong&gt;. It is a &lt;em&gt;language free format&lt;/em&gt;. So a comment's format is not defined for JSON.</source>
          <target state="translated">&lt;strong&gt;JSON не является протоколом в рамке&lt;/strong&gt; . Это &lt;em&gt;свободный&lt;/em&gt; от &lt;em&gt;языка формат&lt;/em&gt; . Таким образом, формат комментария не определен для JSON.</target>
        </trans-unit>
        <trans-unit id="a910cb594e2078fcfc6c4427443144218212267a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON5 is a proposed extension to JSON&lt;/strong&gt; that aims to make it easier for humans to write and maintain by hand. It does this by adding some minimal syntax features directly from ECMAScript&amp;nbsp;5.</source>
          <target state="translated">&lt;strong&gt;JSON5 - это предлагаемое расширение JSON&lt;/strong&gt; , целью которого является облегчение для людей написания и поддержки вручную. Это достигается путем добавления некоторых минимальных синтаксических функций непосредственно из ECMAScript 5.</target>
        </trans-unit>
        <trans-unit id="44752b4e59de8e3916a24c2afa669cadff40eaaa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NO&lt;/strong&gt;. JSON used to support comments, but they were abused and removed from the standard.</source>
          <target state="translated">&lt;strong&gt;№&lt;/strong&gt; JSON раньше поддерживал комментарии, но они были оскорблены и удалены из стандарта.</target>
        </trans-unit>
        <trans-unit id="a1b2ad6f7fdad1b2c2a4e6520625509eaa2a7e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No&lt;/strong&gt;, comments of the form &lt;code&gt;//&amp;hellip;&lt;/code&gt; or &lt;code&gt;/*&amp;hellip;*/&lt;/code&gt; are not allowed in JSON. This answer is based on:</source>
          <target state="translated">&lt;strong&gt;Нет&lt;/strong&gt; , комментарии в форме &lt;code&gt;//&amp;hellip;&lt;/code&gt; или &lt;code&gt;/*&amp;hellip;*/&lt;/code&gt; не допускаются в JSON. Этот ответ основан на:</target>
        </trans-unit>
        <trans-unit id="fece5910c250a5de635eae9fb85c117466f1d727" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PS:&lt;/strong&gt; Single-line comments are only supported with 6+ versions of Newtonsoft Json.</source>
          <target state="translated">&lt;strong&gt;PS:&lt;/strong&gt; однострочные комментарии поддерживаются только в 6+ версиях Newtonsoft Json.</target>
        </trans-unit>
        <trans-unit id="93fc05c73cfe76d315f7daea63ad940357ab4955" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;*&lt;/sup&gt;The RFC only states &quot;whitespace is allowed before or after any of the six structural characters&quot;, not explicitly mentioning strings, numbers, &quot;false&quot;, &quot;true&quot;, and &quot;null&quot;. This omission is ignored in ALL implementations.</source>
          <target state="translated">&lt;sup&gt;*&lt;/sup&gt; В RFC указывается только &amp;laquo;пробел разрешен до или после любого из шести структурных символов&amp;raquo;, без явного упоминания строк, чисел, &amp;laquo;false&amp;raquo;, &amp;laquo;true&amp;raquo; и &amp;laquo;null&amp;raquo;. Это упущение игнорируется во ВСЕХ реализациях.</target>
        </trans-unit>
        <trans-unit id="b770de645eb5b5b5781f0cd67e201c2b8c143f4f" translate="yes" xml:space="preserve">
          <source>A further alternative is &lt;a href=&quot;https://www.npmjs.com/package/jsonc&quot;&gt;jsonc&lt;/a&gt;.</source>
          <target state="translated">Еще одна альтернатива - &lt;a href=&quot;https://www.npmjs.com/package/jsonc&quot;&gt;jsonc&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ca275b07a1a3e03b4a693a00ced0e07a366f2a6" translate="yes" xml:space="preserve">
          <source>All that said, it's not the intention that the JSON file should contain comments in the traditional sense. It should just be the data.</source>
          <target state="translated">Все это не означает,что файл JSON должен содержать комментарии в традиционном смысле этого слова.Это должны быть только данные.</target>
        </trans-unit>
        <trans-unit id="c1fe2287a775f42989886308f53c46700329e39f" translate="yes" xml:space="preserve">
          <source>An alternative to JSON &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt;.</source>
          <target state="translated">Альтернатива JSON &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c9c7ef0ee577ad0ff1ae47bc8be67f3d6d0023ec" translate="yes" xml:space="preserve">
          <source>And yes, you could &lt;a href=&quot;https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr&quot;&gt;insert comments &lt;em&gt;around&lt;/em&gt; the JSON&lt;/a&gt;, which you could parse out.</source>
          <target state="translated">И да, вы можете &lt;a href=&quot;https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr&quot;&gt;вставить комментарии &lt;em&gt;вокруг&lt;/em&gt; JSON&lt;/a&gt; , которые вы можете разобрать.</target>
        </trans-unit>
        <trans-unit id="fbaba3137d3ba5b895b4df6e513c6af6b39a54f0" translate="yes" xml:space="preserve">
          <source>And you can also have comments starting with &lt;code&gt;#&lt;/code&gt; by setting:</source>
          <target state="translated">И вы также можете иметь комментарии, начиная с &lt;code&gt;#&lt;/code&gt; , установив:</target>
        </trans-unit>
        <trans-unit id="c97099d81edd7356629b8e241277674d1b800eb6" translate="yes" xml:space="preserve">
          <source>Annotations would just make JSON make less interoperable. There is simply nothing else to add, unless what you really need is a markup language (XML), and don't care if your persisted data is easily parsed.</source>
          <target state="translated">Аннотации просто сделают JSON менее совместимым.Просто больше нечего добавить,если только вам не нужен язык разметки (XML),и вам не важно,легко ли разобрать ваши сохраняемые данные.</target>
        </trans-unit>
        <trans-unit id="50e05893022bff20ab64b80f36d87d25f4dc3a58" translate="yes" xml:space="preserve">
          <source>Another parser is &lt;a href=&quot;https://json5.org/&quot;&gt;JSON5&lt;/a&gt;.</source>
          <target state="translated">Другой парсер - &lt;a href=&quot;https://json5.org/&quot;&gt;JSON5&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fca6d7b54ebefddc6d345628fbf6404f43c423a1" translate="yes" xml:space="preserve">
          <source>Any platform can parse JSON with just a few lines of code. XML requires complex OO libraries that are not viable on many platforms.</source>
          <target state="translated">Любая платформа может разобрать JSON всего несколькими строчками кода.XML требует сложных OO-библиотек,которые не жизнеспособны на многих платформах.</target>
        </trans-unit>
        <trans-unit id="16620e2b329b58753187ee6770d1cdd5badc76ed" translate="yes" xml:space="preserve">
          <source>Anyone who understands the &quot;has-a&quot; relationship of object orientation can understand any JSON structure - that is the whole point. It is just a  directed acyclic graph (DAG) with node tags (key/value pairs), which is a near universal data structure.</source>
          <target state="translated">Любой,кто понимает отношение &quot;есть-а&quot; объектной ориентации,может понять любую JSON-структуру-в этом весь смысл.Это всего лишь направленный ациклический граф (DAG)с узловыми тегами (парами ключевых значений),представляющий собой практически универсальную структуру данных.</target>
        </trans-unit>
        <trans-unit id="78fec86ef914ad2766fde71edbc09e36e9fdad94" translate="yes" xml:space="preserve">
          <source>As has been pointed out, this hack takes advantage of the implementation of the spec. Not all JSON parsers will understand this sort of JSON. Streaming parsers in particular will choke.</source>
          <target state="translated">Как было отмечено,этот хакер использует преимущества реализации спецификации.Не все парсеры JSON поймут такого рода JSON.Потоковые парсеры,в частности,задохнутся.</target>
        </trans-unit>
        <trans-unit id="2e587a0976bd75a1ebdc07043907330c24061460" translate="yes" xml:space="preserve">
          <source>As many people have suggested, there are some tricks, for example, duplicate keys or a specific key &lt;code&gt;_comment&lt;/code&gt; that you can use. It's up to you.</source>
          <target state="translated">Как полагают многие, есть несколько хитростей, например, дубликаты ключей или конкретный ключ &lt;code&gt;_comment&lt;/code&gt; , который вы можете использовать. Тебе решать.</target>
        </trans-unit>
        <trans-unit id="07864e21cf41714a1a91b2e8dad908a165050270" translate="yes" xml:space="preserve">
          <source>But if you decided to:</source>
          <target state="translated">Но если ты решишь:</target>
        </trans-unit>
        <trans-unit id="d188f07e39655751d2837cd85a91661937641375" translate="yes" xml:space="preserve">
          <source>But if you want a way of inserting and extracting arbitrary side-channel data to a valid JSON, here is an answer. We take advantage of the non-unique representation of data in a JSON encoding. This is allowed&lt;sup&gt;*&lt;/sup&gt; in section two of the RFC under &quot;whitespace is allowed before or after any of the six structural characters&quot;.</source>
          <target state="translated">Но если вам нужен способ вставки и извлечения произвольных данных побочного канала в допустимый JSON, вот ответ. Мы используем преимущества неуникального представления данных в кодировке JSON. Это разрешено &lt;sup&gt;*&lt;/sup&gt; во втором разделе RFC в разделе &amp;laquo;Пробелы разрешены до или после любого из шести структурных символов&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="b61019c2a4e8ea6e3feb4f45256dda80cb9669bc" translate="yes" xml:space="preserve">
          <source>But in general (as answered before) the specification does not allow comments.</source>
          <target state="translated">Но в целом (как уже было сказано выше)спецификация не допускает комментариев.</target>
        </trans-unit>
        <trans-unit id="2ff9d4802c7bbadfbb8936642807401ba75f0f4b" translate="yes" xml:space="preserve">
          <source>Can I use comments inside a JSON file? If so, how?</source>
          <target state="translated">Могу ли я использовать комментарии внутри JSON-файла? Если да,то как?</target>
        </trans-unit>
        <trans-unit id="3342eaaa081df635d86d4ed103ab827ef1d58839" translate="yes" xml:space="preserve">
          <source>Can comments be used in JSON</source>
          <target state="translated">Могут быть использованы комментарии в JSON</target>
        </trans-unit>
        <trans-unit id="1053334a01b155351dfa23e7c384060bf041ee69" translate="yes" xml:space="preserve">
          <source>Cf: &lt;a href=&quot;http://tech.groups.yahoo.com/group/json/message/152&quot;&gt;Douglas Crockford, author of JSON spec&lt;/a&gt;.</source>
          <target state="translated">Ср .: &lt;a href=&quot;http://tech.groups.yahoo.com/group/json/message/152&quot;&gt;Дуглас Крокфорд, автор JSON spec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f99350726de90bc5586ade4e2c17579ca266470" translate="yes" xml:space="preserve">
          <source>Comments are not an official standard, although some parsers support C++-style comments. One that I use is &lt;a href=&quot;https://github.com/open-source-parsers/jsoncpp&quot;&gt;JsonCpp&lt;/a&gt;. In the examples there is this one:</source>
          <target state="translated">Комментарии не являются официальным стандартом, хотя некоторые парсеры поддерживают комментарии в стиле C ++. Я использую &lt;a href=&quot;https://github.com/open-source-parsers/jsoncpp&quot;&gt;JsonCpp&lt;/a&gt; . В примерах есть это:</target>
        </trans-unit>
        <trans-unit id="df3317483190e8a9a8a35a37f3ab9c10bb8b0448" translate="yes" xml:space="preserve">
          <source>Comments should never be used to transmit anything meaningful. That is
  what JSON is for.</source>
          <target state="translated">Комментарии никогда не должны использоваться для передачи чего-либо значимого.Для этого и нужен JSON.</target>
        </trans-unit>
        <trans-unit id="1fff50af10e5c930549993b32ac848df3e193e26" translate="yes" xml:space="preserve">
          <source>Comments were removed from JSON by design.</source>
          <target state="translated">Комментарии были удалены из JSON по проекту.</target>
        </trans-unit>
        <trans-unit id="df35e067e1b8ca2a8cc8d578088da211eae4be66" translate="yes" xml:space="preserve">
          <source>Consider using YAML. It's nearly a superset of JSON (virtually all valid JSON is valid YAML) and it allows comments.</source>
          <target state="translated">Подумай об использовании ЯМЛ.Это почти суперсет из JSON (практически все действительные JSON действительны YAML)и он позволяет делать комментарии.</target>
        </trans-unit>
        <trans-unit id="c2438b86a8a6c50714e0bad6f85dbf92921e8b73" translate="yes" xml:space="preserve">
          <source>DISCLAIMER: THIS IS SILLY</source>
          <target state="translated">ОГОВОРКА:ЭТО ГЛУПО</target>
        </trans-unit>
        <trans-unit id="093ed9747fb50ad3ace5476606d705f02357276b" translate="yes" xml:space="preserve">
          <source>DISCLAIMER: YOUR WARRANTY IS VOID</source>
          <target state="translated">ОТКАЗ:ВАША ГАРАНТИЯ НЕДЕЙСТВИТЕЛЬНА</target>
        </trans-unit>
        <trans-unit id="9767d216f2b66254e1e20ca9a65631dbeaf4909d" translate="yes" xml:space="preserve">
          <source>Eventually I just sent a manual HTTP request to the address above and realized that the content-type was &lt;code&gt;text/javascript&lt;/code&gt; since, well, JSONP returns pure JavaScript. In this case comments &lt;em&gt;are allowed&lt;/em&gt;. But my application returned content-type &lt;code&gt;application/json&lt;/code&gt;, so I had to remove the comments.</source>
          <target state="translated">В конце концов я просто отправил HTTP-запрос вручную по указанному выше адресу и понял, что тип содержимого был &lt;code&gt;text/javascript&lt;/code&gt; , поскольку, в общем, JSONP возвращает чистый JavaScript. В этом случае комментарии &lt;em&gt;разрешены&lt;/em&gt; . Но мое приложение вернуло тип контента &lt;code&gt;application/json&lt;/code&gt; , поэтому мне пришлось удалить комментарии.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="f90ab4f60b84ef4fb66542eacd1ad110a153f608" translate="yes" xml:space="preserve">
          <source>First, canonicalize your JSON by minifying it:</source>
          <target state="translated">Во-первых,канонизируй свой JSON,минируя его:</target>
        </trans-unit>
        <trans-unit id="c1d409cd4a3403ed218ea6a70a0197bffe0ada5b" translate="yes" xml:space="preserve">
          <source>From the creator of JSON:</source>
          <target state="translated">От создателя JSON:</target>
        </trans-unit>
        <trans-unit id="60985232aee64d7c83d248d5056a34cd0c5ac498" translate="yes" xml:space="preserve">
          <source>Go ahead and insert all the comments you like.
  Then pipe it through JSMin before handing it to your JSON parser. - &lt;a href=&quot;https://web.archive.org/web/20120506232618/https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;Douglas Crockford, 2012&lt;/a&gt;</source>
          <target state="translated">Идите вперед и вставьте все комментарии, которые вам нравятся. Затем передайте его через JSMin, прежде чем передать его вашему анализатору JSON. - &lt;a href=&quot;https://web.archive.org/web/20120506232618/https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;Дуглас Крокфорд, 2012&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d46840c80aa71753041fbcd5316414574c064b6" translate="yes" xml:space="preserve">
          <source>Happy hacking!</source>
          <target state="translated">Счастливого взлома!</target>
        </trans-unit>
        <trans-unit id="945eb7b5688a55ae394939657b1e2ecbfa4c17cf" translate="yes" xml:space="preserve">
          <source>Have a look at the &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON website&lt;/a&gt; for more detail.</source>
          <target state="translated">Загляните на &lt;a href=&quot;http://www.json.org/&quot;&gt;сайт JSON&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="02bd5637edeede78c6aebbc6aea95a4fa0b2aabe" translate="yes" xml:space="preserve">
          <source>Here is what I found in the &lt;a href=&quot;https://firebase.google.com/docs/cloud-messaging/js/client#configure_the_browser_to_receive_messages&quot;&gt;Google Firebase documentation&lt;/a&gt; that allows you to put comments in JSON:</source>
          <target state="translated">Вот что я нашел в документации по &lt;a href=&quot;https://firebase.google.com/docs/cloud-messaging/js/client#configure_the_browser_to_receive_messages&quot;&gt;Google Firebase,&lt;/a&gt; которая позволяет вам оставлять комментарии в JSON:</target>
        </trans-unit>
        <trans-unit id="8633550968c6c22f9e3fa9c75c6d80470c4d5f6f" translate="yes" xml:space="preserve">
          <source>Here is your output:</source>
          <target state="translated">Вот ваш выход:</target>
        </trans-unit>
        <trans-unit id="33a36408989ced26dbe1cb1d8c0cabbfd8ac0f26" translate="yes" xml:space="preserve">
          <source>Here's a for instance, where my &lt;a href=&quot;http://fyngyrz.com/?p=3389&quot;&gt;image manipulation system&lt;/a&gt; has saved image notations and some basic formatted (comment) information relating to them (at the bottom):</source>
          <target state="translated">Вот, например, где моя &lt;a href=&quot;http://fyngyrz.com/?p=3389&quot;&gt;система манипулирования изображениями&lt;/a&gt; сохранила обозначения изображений и некоторую базовую отформатированную (комментарий) информацию, относящуюся к ним (внизу):</target>
        </trans-unit>
        <trans-unit id="0ec84d942319f4dcf466115b9620f8a176cce63e" translate="yes" xml:space="preserve">
          <source>Hjson is a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments.</source>
          <target state="translated">Hjson-это формат файла конфигурации для людей.Расслабленный синтаксис,меньше ошибок,больше комментариев.</target>
        </trans-unit>
        <trans-unit id="e2fe75cc6963d7dc30fb895561d3733408988e3f" translate="yes" xml:space="preserve">
          <source>Hopefully that's helpful to those who disagree with why &lt;strong&gt;JSON.minify()&lt;/strong&gt; could be useful.</source>
          <target state="translated">Надеюсь, это полезно для тех, кто не согласен с тем, почему &lt;strong&gt;JSON.minify ()&lt;/strong&gt; может быть полезным.</target>
        </trans-unit>
        <trans-unit id="129c794cca15aa9f2515c133cd4b997e4d5b6072" translate="yes" xml:space="preserve">
          <source>I guess one could use &lt;code&gt;&quot;#&quot;: &quot;comment&quot;&lt;/code&gt;, for &quot;valid&quot; JSON.</source>
          <target state="translated">Я думаю, что можно использовать &lt;code&gt;&quot;#&quot;: &quot;comment&quot;&lt;/code&gt; , для &quot;действительного&quot; JSON.</target>
        </trans-unit>
        <trans-unit id="8acdec3845099bb2522f4b3146c30f724004a565" translate="yes" xml:space="preserve">
          <source>I just encountering this for configuration files. I don't want to use &lt;strong&gt;XML&lt;/strong&gt; (verbose, graphically, ugly, hard to read), or &quot;ini&quot; format (no hierarchy, no real standard, etc.) or Java &quot;Properties&quot; format (like .ini).</source>
          <target state="translated">Я просто столкнулся с этим для файлов конфигурации. Я не хочу использовать &lt;strong&gt;XML&lt;/strong&gt; (многословный, графически, некрасивый, трудно читаемый), или формат ini (без иерархии, без реального стандарта и т. Д.) Или формат &amp;laquo;Свойства&amp;raquo; Java (например, .ini).</target>
        </trans-unit>
        <trans-unit id="a1697c05a3ee803cc922d72d59e63f002d4870ae" translate="yes" xml:space="preserve">
          <source>I just released &lt;strong&gt;&lt;a href=&quot;http://github.com/getify/JSON.minify&quot;&gt;JSON.minify()&lt;/a&gt;&lt;/strong&gt; which strips out comments and whitespace from a block of JSON and makes it valid JSON that can be parsed. So, you might use it like:</source>
          <target state="translated">Я только что выпустил &lt;strong&gt;&lt;a href=&quot;http://github.com/getify/JSON.minify&quot;&gt;JSON.minify (),&lt;/a&gt;&lt;/strong&gt; который удаляет комментарии и пробелы из блока JSON и делает его допустимым для анализа JSON. Итак, вы можете использовать его как:</target>
        </trans-unit>
        <trans-unit id="71af10f1174fd98a85f027d4574894f58909f6f4" translate="yes" xml:space="preserve">
          <source>I never even tried this, for obvious reasons and neither should you.</source>
          <target state="translated">Я даже не пробовал,по очевидным причинам,и тебе тоже не стоит.</target>
        </trans-unit>
        <trans-unit id="ab9b39900ac2db147c382ac4b6f657544f7a7c9b" translate="yes" xml:space="preserve">
          <source>I prefer writing comments about each individual setting in the JSON file itself, and I really don't care about the integrity of the JSON format as long as the library I use is OK with it.</source>
          <target state="translated">Я предпочитаю писать комментарии о каждой отдельной настройке в самом JSON-файле,и меня действительно не волнует целостность формата JSON,пока используемая мной библиотека не против.</target>
        </trans-unit>
        <trans-unit id="0158a4d90f6b5efaece3cf3af780c9d4914ee6e9" translate="yes" xml:space="preserve">
          <source>I removed comments from JSON because I saw people were using them to hold parsing directives, a practice which would have destroyed interoperability.  I know that the lack of comments makes some people sad, but it shouldn't.  - &lt;a href=&quot;https://web.archive.org/web/20120506232618/https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;Douglas Crockford, 2012&lt;/a&gt;</source>
          <target state="translated">Я удалил комментарии из JSON, потому что видел, что люди использовали их для хранения директив синтаксического анализа, что привело бы к разрушению взаимодействия. Я знаю, что отсутствие комментариев делает некоторых людей грустными, но это не должно. - &lt;a href=&quot;https://web.archive.org/web/20120506232618/https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;Дуглас Крокфорд, 2012&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18b4204602681875e0e110a36d909f3158c98fcc" translate="yes" xml:space="preserve">
          <source>I removed comments from JSON because I saw people were using them to hold parsing directives, a practice which would have destroyed interoperability. I know that the lack of comments makes some people sad, but it shouldn't.</source>
          <target state="translated">Я удалил комментарии из JSON,потому что видел,как люди использовали их для хранения директив по синтаксическому разбору,практика,которая разрушила бы интероперабельность.Я знаю,что отсутствие комментариев огорчает некоторых людей,но это не должно быть так.</target>
        </trans-unit>
        <trans-unit id="437f278795b45207777b6b3f5cb628f7d85f92ee" translate="yes" xml:space="preserve">
          <source>I think this is an 'easier to use/understand' way than creating a separate 'settings.README' file and explaining the settings in it.</source>
          <target state="translated">Я думаю,что это 'простой для понимания' способ,чем создание отдельного 'settings.README' файла и объяснение настроек в нем.</target>
        </trans-unit>
        <trans-unit id="09543815ee5f23cc6a834389eef600ba4052d1cc" translate="yes" xml:space="preserve">
          <source>I've found a little hack that allows you to place comments in a JSON file that will not affect the parsing, or alter the data being represented in any way.</source>
          <target state="translated">Я нашел небольшой хак,который позволяет поместить комментарии в JSON-файл,которые не повлияют на синтаксический разбор,или изменить представляемые данные каким-либо образом.</target>
        </trans-unit>
        <trans-unit id="dbf85d530dd7056debad251a792f8faeead6d98e" translate="yes" xml:space="preserve">
          <source>If people have strong reasons against having comments in JSON when communicating data (whether valid or not), then possibly JSON could be split into two:</source>
          <target state="translated">Если при передаче данных (действительных или нет)у людей есть веские причины против того,чтобы иметь комментарии в JSON,то,возможно,JSON можно разделить на два:</target>
        </trans-unit>
        <trans-unit id="c924e8002bdfd65f69ae7095656a4a4eeb004ed6" translate="yes" xml:space="preserve">
          <source>If we apply this technique, your commented JSON file might look like this:</source>
          <target state="translated">Если мы применим эту технику,ваш прокомментированный JSON файл может выглядеть так:</target>
        </trans-unit>
        <trans-unit id="b9684a17485b0adbd8900445645c8a494c2755a3" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://github.com/FasterXML/jackson&quot;&gt;Jackson&lt;/a&gt; as your JSON parser then this is how you enable it to allow comments:</source>
          <target state="translated">Если вы используете &lt;a href=&quot;https://github.com/FasterXML/jackson&quot;&gt;Джексона в&lt;/a&gt; качестве парсера JSON, вы можете разрешить комментарии следующим образом:</target>
        </trans-unit>
        <trans-unit id="3f8246d0d3adbf7a7389d705ede0a752c209ba38" translate="yes" xml:space="preserve">
          <source>If you are using the Newtonsoft.Json library with ASP.NET to read/deserialize you can use comments in the JSON content:</source>
          <target state="translated">Если вы используете библиотеку Newtonsoft.Json с ASP.NET для риддизайлинга,вы можете использовать комментарии в JSON-контенте:</target>
        </trans-unit>
        <trans-unit id="cabeeb699eaf07605e124cb949346b747a7e0dac" translate="yes" xml:space="preserve">
          <source>If you follow the link, you will see</source>
          <target state="translated">Если вы перейдете по ссылке,вы увидите</target>
        </trans-unit>
        <trans-unit id="a63e2953b6b28d01b6fab0cd0c69b99f6574c7de" translate="yes" xml:space="preserve">
          <source>If you have a problem with this kind of usage; sorry, the genie is out of the lamp. People would find other usages for JSON format, and there is nothing you can do about it.</source>
          <target state="translated">Если у вас возникли проблемы с таким использованием;извините,джинн не работает.Люди найдут другие способы использования для формата JSON,и вы ничего не сможете с этим поделать.</target>
        </trans-unit>
        <trans-unit id="812bab4dd7487fc279216059de97088cf84dae7a" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;http://json5.org/&quot;&gt;JSON5&lt;/a&gt; you can include comments.</source>
          <target state="translated">Если вы используете &lt;a href=&quot;http://json5.org/&quot;&gt;JSON5,&lt;/a&gt; вы можете добавить комментарии.</target>
        </trans-unit>
        <trans-unit id="b08db292e52b29c91db521bfa2b81efa3280057a" translate="yes" xml:space="preserve">
          <source>If your text file, which is a JSON string, is going to be read by some program, how difficult would it be to strip out either C or C++ style comments before using it?</source>
          <target state="translated">Если ваш текстовый файл,представляющий собой JSON-строку,будет прочитан какой-нибудь программой,насколько сложно будет вырезать комментарии в стиле C или C++перед его использованием?</target>
        </trans-unit>
        <trans-unit id="8aa49e3c9f29fe5a6b28c93b5f1a19ce858cb803" translate="yes" xml:space="preserve">
          <source>In a hacky way, you can abuse this to add a comment. For instance: start and end your comment with a tab. Encode the comment in base3 and use the other whitespace characters to represent them. For instance.</source>
          <target state="translated">В халтурной манере,вы можете злоупотребить этим,чтобы добавить комментарий.Например:начать и закончить комментарий с помощью вкладки.Кодируйте комментарий в base3 и используйте другие символы пробела для его представления.Например.</target>
        </trans-unit>
        <trans-unit id="a5f24ec24556750ba15be59104e6be49937079bd" translate="yes" xml:space="preserve">
          <source>In my case, I need use comments for debug purposes, prior the output of the JSON structure. So I decided to use debug information in the HTTP header, to avoid breaking the client:</source>
          <target state="translated">В моем случае,мне необходимо использовать комментарии для отладки,до вывода JSON структуры.Поэтому я решил использовать отладочную информацию в заголовке HTTP,чтобы избежать взлома клиента:</target>
        </trans-unit>
        <trans-unit id="276120a4bf34bb8429f2b43928b3a0e4c6821d79" translate="yes" xml:space="preserve">
          <source>Insignificant whitespace is allowed before or after any token.
  Whitespace is any sequence of one or more of the following code
  points: character tabulation (U+0009), line feed (U+000A), carriage
  return (U+000D), and space (U+0020).</source>
          <target state="translated">Незначительные пробелы разрешены до или после любого маркера.Пробелом называется любая последовательность одной или нескольких следующих точек кода:табуляция символов (U+0009),перевод строки (U+000A),возврат каретки (U+000D)и пробел (U+0020).</target>
        </trans-unit>
        <trans-unit id="48b50f16ce601739669575140e95e21d988bae25" translate="yes" xml:space="preserve">
          <source>It appears that when declaring an object literal you can specify two values with the same key, and the last one takes precedence. Believe it or not, it turns out that JSON parsers work the same way. So we can use this to create comments in the source JSON that will not be present in a parsed object representation.</source>
          <target state="translated">Похоже,что при объявлении объекта буквальным можно указать два значения с одним и тем же ключом,причем последнее имеет приоритет.Хотите верьте,хотите нет,но получается,что парсеры JSON работают одинаково.Таким образом,мы можем использовать это для создания комментариев в исходном JSON,которые не будут присутствовать в синтаксическом представлении объекта.</target>
        </trans-unit>
        <trans-unit id="82cd8d15b1bd8e199799380ad43d59ee9b5ba712" translate="yes" xml:space="preserve">
          <source>It depends on your JSON library. &lt;a href=&quot;https://github.com/JamesNK/Newtonsoft.Json&quot;&gt;Json.NET&lt;/a&gt; supports JavaScript-style comments, &lt;code&gt;/* commment */&lt;/code&gt;.</source>
          <target state="translated">Это зависит от вашей библиотеки JSON. &lt;a href=&quot;https://github.com/JamesNK/Newtonsoft.Json&quot;&gt;Json.NET&lt;/a&gt; поддерживает комментарии в стиле JavaScript, &lt;code&gt;/* commment */&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ff7ed3f3d0cb930680ea06a91bdd9f410385b49" translate="yes" xml:space="preserve">
          <source>It doesn't really allow for comments as such, however, passing a comment as one of the name/value pairs in the data would certainly work, although that data would obviously need to be ignored or handled specifically by the parsing code.</source>
          <target state="translated">На самом деле это не позволяет делать комментарии как таковые,однако,передача комментария как одной из пар имен в данных,безусловно,сработает,хотя эти данные,очевидно,должны быть проигнорированы или обработаны специально для парсинга кодом.</target>
        </trans-unit>
        <trans-unit id="8b19f596dc7224ce2f8d5b6d837618e59941abcb" translate="yes" xml:space="preserve">
          <source>It's an interesting curiosity, but you &lt;strong&gt;should really not be using it for anything at all&lt;/strong&gt;. Below is the original answer.</source>
          <target state="translated">Это интересное любопытство, но вы &lt;strong&gt;не должны использовать его вообще ни для чего&lt;/strong&gt; . Ниже приведен оригинальный ответ.</target>
        </trans-unit>
        <trans-unit id="74a40f3578a3c42e743f19623deb9c7f5d776631" translate="yes" xml:space="preserve">
          <source>JSON by design is an easily reverse-engineered (human parsed) alternative to XML. It is simplified even to the point that annotations are unnecessary. It is not even a markup language. The goal is stability and  interoperablilty.</source>
          <target state="translated">JSON по дизайну является легко реверсивной (человеческий анализ)альтернативой XML.Он упрощен даже до такой степени,что аннотации не нужны.Это даже не язык разметки.Цель-стабильность и интероперабельность.</target>
        </trans-unit>
        <trans-unit id="8398b2bb763389aa2a2ee5d9f2352ebd5b7accf0" translate="yes" xml:space="preserve">
          <source>JSON can do all they can do, but it is way less verbose and more human readable - and parsers are easy and ubiquitous in many languages. It's just a tree of data. But out-of-band comments are a necessity often to document &quot;default&quot; configurations and the like. Configurations are never to be &quot;full documents&quot;, but trees of saved data that can be human readable when needed.</source>
          <target state="translated">JSON может делать все,что угодно,но он гораздо менее многословен и более читабелен-а парсеры просты и вездесущие на многих языках.Это всего лишь дерево данных.Но внеполосные комментарии-это необходимость часто документировать &quot;стандартные&quot; конфигурации и тому подобное.Конфигурации никогда не должны быть &quot;полными документами&quot;,а деревьями сохраненных данных,которые при необходимости могут быть прочитаны человеком.</target>
        </trans-unit>
        <trans-unit id="8c1993e45bffed1300c1dc50e5447b301e83790f" translate="yes" xml:space="preserve">
          <source>JSON does not have comments. A JSON encoder MUST NOT output comments.
  A JSON decoder MAY accept and ignore comments.</source>
          <target state="translated">JSON не имеет комментариев.JSON-кодировщик НЕ ДОЛЖЕН выводить комментарии.Декодер JSON ДОЛЖЕН принимать и игнорировать комментарии.</target>
        </trans-unit>
        <trans-unit id="e2e64a9d1e8c5e44b330ca7a7b80a5418ba7d47d" translate="yes" xml:space="preserve">
          <source>JSON does not support comments natively, but you can make your own decoder or at least preprocessor to strip out comments, that's perfectly fine (as long as you just ignore comments and don't use them to guide how your application should process the JSON data).</source>
          <target state="translated">JSON не поддерживает комментарии нативно,но вы можете сделать свой собственный декодер или,по крайней мере,препроцессор для удаления комментариев,это совершенно нормально (до тех пор,пока вы просто игнорируете комментарии и не используете их для руководства тем,как ваше приложение должно обрабатывать данные JSON).</target>
        </trans-unit>
        <trans-unit id="726f133617e74aa8751821a42ceb51d521bc92cd" translate="yes" xml:space="preserve">
          <source>JSON does not support comments. It was also never intended to be used for configuration files where comments would be needed.</source>
          <target state="translated">JSON не поддерживает комментарии.Он также никогда не предназначался для использования в конфигурационных файлах,где были бы нужны комментарии.</target>
        </trans-unit>
        <trans-unit id="501bdc0f8fdf940649176ca24d143965cb8f6989" translate="yes" xml:space="preserve">
          <source>JSON doesn't allow comments, per se. The reasoning is utterly foolish, because you can use JSON &lt;em&gt;itself&lt;/em&gt; to create comments, which obviates the reasoning entirely, &lt;em&gt;and&lt;/em&gt; loads the parser data space for no good reason at all for &lt;em&gt;exactly&lt;/em&gt; the same result and potential issues, such as they are: a JSON file with comments.</source>
          <target state="translated">JSON сам по себе не позволяет комментировать. Рассуждения совершенно глупы, потому что вы можете использовать &lt;em&gt;сам&lt;/em&gt; JSON для создания комментариев, который полностью устраняет рассуждения &lt;em&gt;и&lt;/em&gt; загружает пространство данных анализатора без какой-либо веской причины для &lt;em&gt;абсолютно&lt;/em&gt; одинакового результата и потенциальных проблем, таких как они: JSON файл с комментариями.</target>
        </trans-unit>
        <trans-unit id="09c3b12a027d2dcd8c91b9b62b6f273b10bad380" translate="yes" xml:space="preserve">
          <source>JSON has its syntax visualized on that page. There isn't any note about comments.</source>
          <target state="translated">Синтаксис JSON визуализирован на этой странице.В комментариях нет никаких примечаний.</target>
        </trans-unit>
        <trans-unit id="976fd2bc03bc2a22ff4f002d1679d2a1718f3011" translate="yes" xml:space="preserve">
          <source>JSON makes a lot of sense for config files and other local usage because it's ubiquitous and because it's much simpler than XML.</source>
          <target state="translated">JSON имеет большой смысл для конфигурационных файлов и другого локального использования,потому что он повсеместно распространен и намного проще,чем XML.</target>
        </trans-unit>
        <trans-unit id="000792ec4997245cbcd13240bdaead6035bcfda0" translate="yes" xml:space="preserve">
          <source>JSON-COM: JSON on the wire, or rules that apply when communicating JSON data.</source>
          <target state="translated">JSON-COM:JSON на проводе,или правила,которые применяются при передаче данных JSON.</target>
        </trans-unit>
        <trans-unit id="48b52d89e7b207194b31e0efa96191605763a131" translate="yes" xml:space="preserve">
          <source>JSON-DOC will allow comments, and other minor differences might exist such as handling whitespace. Parsers can easily convert from one spec to the other.</source>
          <target state="translated">JSON-DOC допустит комментарии,и могут существовать другие незначительные различия,такие как работа с белыми пробелами.Парсеры могут легко преобразовываться из одного спецификатора в другой.</target>
        </trans-unit>
        <trans-unit id="6dbc0606e8c2b4a5f2222aeb77b6b7252bfd4168" translate="yes" xml:space="preserve">
          <source>JSON-DOC: JSON document, or JSON in files or locally. Rules that define a valid JSON document.</source>
          <target state="translated">JSON-DOC:JSON документ,или JSON в файлах или локально.Правила,определяющие действительный JSON документ.</target>
        </trans-unit>
        <trans-unit id="b019fec79fce564e6a858d4135ba07c6e432fcf0" translate="yes" xml:space="preserve">
          <source>No, you shouldn't use duplicative object members to stuff side channel data into a JSON encoding. (See &quot;The names within an object SHOULD be unique&quot; &lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;in the RFC&lt;/a&gt;).</source>
          <target state="translated">Нет, вы не должны использовать дублирующие члены объекта для помещения данных побочного канала в кодировку JSON. (См. &amp;laquo;Имена внутри объекта ДОЛЖНЫ быть уникальными&amp;raquo; &lt;a href=&quot;https://tools.ietf.org/html/rfc7159&quot;&gt;в RFC&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b8b9f1367ad6269845f5ec54d66262066092883f" translate="yes" xml:space="preserve">
          <source>No.</source>
          <target state="translated">No.</target>
        </trans-unit>
        <trans-unit id="41f3445f00f7570dee2718e061446c8ba3e2c310" translate="yes" xml:space="preserve">
          <source>Other JavaScript toolkits may work similarly.</source>
          <target state="translated">Аналогично могут работать и другие инструменты JavaScript.</target>
        </trans-unit>
        <trans-unit id="d7e64daaa3f687a35f3ef2e5959e2d88a2537414" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://hjson.org&quot;&gt;hjson.org&lt;/a&gt; for JavaScript, Java, Python, PHP, Rust, Go, Ruby and C# libraries.</source>
          <target state="translated">Смотрите &lt;a href=&quot;http://hjson.org&quot;&gt;hjson.org&lt;/a&gt; для библиотек JavaScript, Java, Python, PHP, Rust, Go, Ruby и C #.</target>
        </trans-unit>
        <trans-unit id="dfaf82f0dc0b49d0e045c25d554109dfb4f850f2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/a/10325432/166286&quot;&gt;another Stack&amp;nbsp;Overflow question&lt;/a&gt;.</source>
          <target state="translated">Смотрите &lt;a href=&quot;https://stackoverflow.com/a/10325432/166286&quot;&gt;другой вопрос переполнения стека&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="073200acf99512df8130754287c73186048bb656" translate="yes" xml:space="preserve">
          <source>Simply &lt;code&gt;npm install --save strip-json-comments&lt;/code&gt; to install and use it like:</source>
          <target state="translated">Просто &lt;code&gt;npm install --save strip-json-comments&lt;/code&gt; чтобы установить и использовать его следующим образом:</target>
        </trans-unit>
        <trans-unit id="f506a3540bd757d871fdaa0806e59e8449171ae5" translate="yes" xml:space="preserve">
          <source>Since I had a similar file in my local folder, there were no issues with the &lt;a href=&quot;http://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;Same-origin policy&lt;/a&gt;, so I decided to use pure JSON... and, of course, &lt;code&gt;$.getJSON&lt;/code&gt; was failing silently because of the comments.</source>
          <target state="translated">Поскольку у меня был аналогичный файл в локальной папке, проблем с &lt;a href=&quot;http://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;политикой Same-origin не было&lt;/a&gt; , поэтому я решил использовать чистый JSON ... и, конечно, &lt;code&gt;$.getJSON&lt;/code&gt; молча терпел неудачу из-за комментариев.</target>
        </trans-unit>
        <trans-unit id="71afd90a6307c6c96cb48a0eb950d54ed21ba403" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;https://web.archive.org/web/20120507093915/https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;Public statement by Douglas Crockford on G+&lt;/a&gt;</source>
          <target state="translated">Источник: &lt;a href=&quot;https://web.archive.org/web/20120507093915/https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;Публичное заявление Дугласа Крокфорда на G +&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7597ad58479a9cadb8c485eff7b25f3dcde2534b" translate="yes" xml:space="preserve">
          <source>Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser.</source>
          <target state="translated">Предположим,вы используете JSON для хранения конфигурационных файлов,которые вы хотели бы аннотировать.Вставьте все понравившиеся комментарии.Затем пропустите его через JSMin перед тем,как передать вашему JSON парсеру.</target>
        </trans-unit>
        <trans-unit id="95c4ec0c1f6b94f7fa15f8848f32685e381ea392" translate="yes" xml:space="preserve">
          <source>Suppose you are using JSON to keep configuration files, which you would like to annotate. Go ahead and insert all the comments you like. Then pipe it through JSMin before handing it to your JSON parser. - &lt;a href=&quot;https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;Douglas Crockford, 2012&lt;/a&gt;</source>
          <target state="translated">Предположим, вы используете JSON для хранения файлов конфигурации, которые вы хотите аннотировать. Идите вперед и вставьте все комментарии, которые вам нравятся. Затем передайте его через JSMin, прежде чем передать его вашему анализатору JSON. - &lt;a href=&quot;https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;Дуглас Крокфорд, 2012&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a31010b229f5d5d38cb8460296b3ffc06502029e" translate="yes" xml:space="preserve">
          <source>Sure a JSON specific minify can be implemented in any language,
but standardize this so it becomes ubiquitous across parsers in all languages and platforms so people stop wasting their time lacking the feature because they have good use-cases for it, looking the issue up in online forums, and getting people telling them it's a bad idea or suggesting it's easy to implement stripping comments out of text files.</source>
          <target state="translated">Конечно,JSON-специфический minify может быть реализован на любом языке,но стандартизируйте его так,чтобы он стал повсеместным на всех языках и платформах,чтобы люди перестали тратить свое время,не имея возможности использовать эту функцию,потому что у них есть хорошие примеры использования,просматривая проблему на онлайн-форумах,и заставляя людей говорить им,что это плохая идея,или предлагать легко реализовать вырезание комментариев из текстовых файлов.</target>
        </trans-unit>
        <trans-unit id="3e99e6da8be38fff3a522f1f23ad02df352466c2" translate="yes" xml:space="preserve">
          <source>The Dojo Toolkit JavaScript toolkit (at least as of version 1.4), allows you to include comments in your JSON. The comments can be of &lt;code&gt;/* */&lt;/code&gt; format. Dojo Toolkit consumes the JSON via the &lt;code&gt;dojo.xhrGet()&lt;/code&gt; call.</source>
          <target state="translated">Набор инструментов JavaScript Dojo Toolkit (по крайней мере, начиная с версии 1.4) позволяет включать комментарии в ваш JSON. Комментарии могут быть в формате &lt;code&gt;/* */&lt;/code&gt; . Dojo Toolkit использует JSON через &lt;code&gt;dojo.xhrGet()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="506b87b707c634e0b2a9ca847a5419d0c97d6a4c" translate="yes" xml:space="preserve">
          <source>The JSON should all be data, and if you include a comment, then it will be data too.</source>
          <target state="translated">JSON должны быть все данные,и если вы включите комментарий,то это тоже будут данные.</target>
        </trans-unit>
        <trans-unit id="29b2cd6789d0e06a6f2f17423431e5a7ccf21a24" translate="yes" xml:space="preserve">
          <source>The above code is &lt;a href=&quot;http://jsonlint.com/&quot;&gt;valid JSON&lt;/a&gt;. If you parse it, you'll get an object like this:</source>
          <target state="translated">Приведенный выше код является &lt;a href=&quot;http://jsonlint.com/&quot;&gt;действительным JSON&lt;/a&gt; . Если вы проанализируете его, вы получите такой объект:</target>
        </trans-unit>
        <trans-unit id="b8f8fba45d519a650dd034779bb67724bec9b4eb" translate="yes" xml:space="preserve">
          <source>The idea behind JSON is to provide simple data exchange between applications. These are typically web based and the language is JavaScript.</source>
          <target state="translated">Идея JSON заключается в обеспечении простого обмена данными между приложениями.Как правило,они основаны на веб-технологиях,а языком является JavaScript.</target>
        </trans-unit>
        <trans-unit id="118eacae6b4f733ba3d8e27073279fa7d6945aa8" translate="yes" xml:space="preserve">
          <source>The official JSON site is at &lt;a href=&quot;http://json.org&quot;&gt;JSON.org&lt;/a&gt;. JSON is defined as a &lt;a href=&quot;http://ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;standard&lt;/a&gt; by ECMA International. There is always a petition process to have standards revised. It is unlikely that annotations will be added to the JSON standard for several reasons.</source>
          <target state="translated">Официальный сайт JSON находится на &lt;a href=&quot;http://json.org&quot;&gt;JSON.org&lt;/a&gt; . JSON определяется как &lt;a href=&quot;http://ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;стандарт&lt;/a&gt; ECMA International. Всегда есть ходатайство о пересмотре стандартов. Маловероятно, что аннотации будут добавлены в стандарт JSON по нескольким причинам.</target>
        </trans-unit>
        <trans-unit id="6de039dc41d4aabcce5230d7a4c62570374729b7" translate="yes" xml:space="preserve">
          <source>The other issue is interoperability. Suppose you have a library or API or any kind of subsystem which has some config or data files associated with it. And this subsystem is
to be accessed from different languages.  Then do you go about telling people: by the way
don't forget to strip out the comments from the JSON files before passing them to the parser!</source>
          <target state="translated">Другой вопрос-интероперабельность.Предположим,у вас есть библиотека,API или любая другая подсистема,с которой связаны какие-либо конфигурационные файлы или файлы данных.И эта подсистема должна быть доступна с разных языков.Тогда не забудьте сказать людям:кстати,не забудьте вырезать комментарии из JSON-файлов перед тем,как передавать их синтаксическому анализатору!</target>
        </trans-unit>
        <trans-unit id="d0841b7455110d89326e1a28a5e44e10c4570e5d" translate="yes" xml:space="preserve">
          <source>Then encode your comment in binary:</source>
          <target state="translated">Тогда кодируй свой комментарий в двоичном виде:</target>
        </trans-unit>
        <trans-unit id="cb80cdc45aa7b8b143f7abe549b0a2a38ef5ca01" translate="yes" xml:space="preserve">
          <source>Then steg your binary:</source>
          <target state="translated">Тогда управляй своей бинарной:</target>
        </trans-unit>
        <trans-unit id="93ae98bd84aa4fbc409553d7cab4dfbf8d06c00b" translate="yes" xml:space="preserve">
          <source>Then you can have comments like this:</source>
          <target state="translated">Тогда у вас могут быть такие комментарии:</target>
        </trans-unit>
        <trans-unit id="49db07c0eb71bb872bdde75cfbad8f1430e8e945" translate="yes" xml:space="preserve">
          <source>There is actually a way to add comments, and stay within the spec (no additional parser needed). It will not result into human-readable comments without any sort of parsing though.</source>
          <target state="translated">На самом деле есть способ добавлять комментарии и оставаться в пределах спецификации (дополнительный парсер не нужен).Но это не приведет к тому,что комментарии будут читаться человеком без какого-либо анализа.</target>
        </trans-unit>
        <trans-unit id="939c8690fd4debc3efc52fd16ff9fa763116587f" translate="yes" xml:space="preserve">
          <source>This can be helpful when experimenting with alternate data structures (or even data lists) before choosing a final option.</source>
          <target state="translated">Это может быть полезно при экспериментировании с альтернативными структурами данных (или даже списками данных)перед выбором конечного варианта.</target>
        </trans-unit>
        <trans-unit id="f64679fe6571746a9ba9e6ac37f387ce8686d481" translate="yes" xml:space="preserve">
          <source>This is a &lt;strong&gt;&quot;can you&quot;&lt;/strong&gt; question. And here is a &lt;strong&gt;&quot;yes&quot;&lt;/strong&gt; answer.</source>
          <target state="translated">Это вопрос &lt;strong&gt;&amp;laquo;можете ли вы&amp;raquo;&lt;/strong&gt; . И вот ответ &lt;strong&gt;&quot;да&quot;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6fdccc472b5b375de3890696c9e5a380489af6fb" translate="yes" xml:space="preserve">
          <source>This only annotation required might be &quot;//These are DAG tags&quot;. The key names can be as informative as required, allowing arbitrary semantic arity.</source>
          <target state="translated">Эта единственная требуемая аннотация может быть &quot;/Это DAG теги&quot;.Имена ключей могут быть настолько информативными,насколько это необходимо,позволяя произвольную семантическую арифметику.</target>
        </trans-unit>
        <trans-unit id="c9b00a22cb69ded735c57bf505cdfefe076ebaa9" translate="yes" xml:space="preserve">
          <source>This will just leave you with a lot of unreadable whitespace (unless you make an IDE plugin to encode/decode it on the fly).</source>
          <target state="translated">Это просто оставит вам много нечитаемых пробельных символов (если только вы не сделаете плагин IDE,чтобы закодировать его на лету).</target>
        </trans-unit>
        <trans-unit id="388b829f16dd17f84ea2ba8d1476b6313b19ec03" translate="yes" xml:space="preserve">
          <source>To cut a JSON item into parts I add &quot;dummy comment&quot; lines:</source>
          <target state="translated">Чтобы вырезать JSON-элемент на части,я добавляю строки &quot;манекен-комментарий&quot;:</target>
        </trans-unit>
        <trans-unit id="c46c93b452125db5e01ac6f5b129d24508a4638b" translate="yes" xml:space="preserve">
          <source>We are using &lt;a href=&quot;https://github.com/sindresorhus/strip-json-comments&quot;&gt;&lt;code&gt;strip-json-comments&lt;/code&gt;&lt;/a&gt; for our project. It supports something like:</source>
          <target state="translated">Мы используем &lt;a href=&quot;https://github.com/sindresorhus/strip-json-comments&quot;&gt; &lt;code&gt;strip-json-comments&lt;/code&gt; &lt;/a&gt; для нашего проекта. Он поддерживает что-то вроде:</target>
        </trans-unit>
        <trans-unit id="3541c15e44949bf6aaf515ad0f11200bb4b27c8a" translate="yes" xml:space="preserve">
          <source>We're talking about a generic config file issue (cross language/platform), and he's answering with a JS specific utility!</source>
          <target state="translated">Речь идет о проблеме общего конфигурационного файла (кросс-языковая платформа),на которую он отвечает утилитой,специфичной для JS!</target>
        </trans-unit>
        <trans-unit id="40086162c11724bb65bc484b7a663182d4a0214f" translate="yes" xml:space="preserve">
          <source>When I released it, I got a huge backlash of people disagreeing with even the idea of it, so I decided that I'd write a comprehensive blog post on why &lt;a href=&quot;http://web.archive.org/web/20100629021329/http://blog.getify.com/2010/06/json-comments/&quot;&gt;comments make sense in JSON&lt;/a&gt;. It includes this notable comment from the creator of JSON:</source>
          <target state="translated">Когда я выпустил его, я получил огромное количество людей, не согласных даже с его идеей, поэтому я решил написать исчерпывающее сообщение в блоге о том, почему &lt;a href=&quot;http://web.archive.org/web/20100629021329/http://blog.getify.com/2010/06/json-comments/&quot;&gt;комментарии имеют смысл в JSON&lt;/a&gt; . Он включает в себя этот заметный комментарий от создателя JSON:</target>
        </trans-unit>
        <trans-unit id="98fd7e23dcf6f9b9b1816044ced909699b4c49f7" translate="yes" xml:space="preserve">
          <source>Which means there is no trace of the comments, and they won't have weird side-effects.</source>
          <target state="translated">Что означает,что нет никаких следов комментариев,и у них не будет странных побочных эффектов.</target>
        </trans-unit>
        <trans-unit id="c4cb6522fff6a5d557f0d476627f9ece04ec2cfd" translate="yes" xml:space="preserve">
          <source>With regards to the &lt;a href=&quot;https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;remark&lt;/a&gt; made by Douglas Crockford on this issues (referenced by @Artur Czajka)</source>
          <target state="translated">Относительно &lt;a href=&quot;https://plus.google.com/118095276221607585885/posts/RK8qyGVaGSr&quot;&gt;замечания,&lt;/a&gt; сделанного Дугласом Крокфордом по этому вопросу (ссылка @Artur Czajka)</target>
        </trans-unit>
        <trans-unit id="feaa09360dfd54411746acac2798b890bddec1c2" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;can&lt;/em&gt; have comments in &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt;, but not in pure JSON. I've just spent an hour trying to make my program work with this example from Highcharts: &lt;a href=&quot;http://www.highcharts.com/samples/data/jsonp.php?filename=aapl-c.json&amp;amp;callback=?&quot;&gt;http://www.highcharts.com/samples/data/jsonp.php?filename=aapl-c.json&amp;amp;callback=?&lt;/a&gt;</source>
          <target state="translated">Вы &lt;em&gt;можете&lt;/em&gt; иметь комментарии в &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; , но не в чистом JSON. Я только что провел час, пытаясь заставить мою программу работать с этим примером из Highcharts: &lt;a href=&quot;http://www.highcharts.com/samples/data/jsonp.php?filename=aapl-c.json&amp;amp;callback=?&quot;&gt;http://www.highcharts.com/samples/data/jsonp.php?filename=aapl-c.json&amp;amp;callback=?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1deff785b9f44f36c7ffb11fb73ab887e7163ffb" translate="yes" xml:space="preserve">
          <source>You can provide documentation by using the &lt;strong&gt;description&lt;/strong&gt; schema attribute.</source>
          <target state="translated">Вы можете предоставить документацию, используя атрибут схемы &lt;strong&gt;описания&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6321e0e7526a00ea19de7e51a8a6484deb9e4c60" translate="yes" xml:space="preserve">
          <source>You can't. At least that's my experience from a quick glance at &lt;a href=&quot;http://json.org&quot;&gt;json.org&lt;/a&gt;.</source>
          <target state="translated">Ты не можешь По крайней мере, это мой опыт с первого взгляда на &lt;a href=&quot;http://json.org&quot;&gt;json.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a38662ff523b7d9c8a3a3c993706047579876c91" translate="yes" xml:space="preserve">
          <source>You could abuse the following:</source>
          <target state="translated">Ты можешь злоупотребить следующим:</target>
        </trans-unit>
        <trans-unit id="1a3df4432a8595e033223ec8fe5e551c685694e2" translate="yes" xml:space="preserve">
          <source>You could have a designated data element called &lt;code&gt;&quot;_comment&quot;&lt;/code&gt; (or something) that would be ignored by apps that use the JSON data.</source>
          <target state="translated">У вас может быть назначенный элемент данных с именем &lt;code&gt;&quot;_comment&quot;&lt;/code&gt; (или что-то еще), который будет игнорироваться приложениями, использующими данные JSON.</target>
        </trans-unit>
        <trans-unit id="7d1a793bb1b7d02580215fd79bb3a42efc2f9543" translate="yes" xml:space="preserve">
          <source>You should write a &lt;a href=&quot;http://json-schema.org/&quot;&gt;JSON schema&lt;/a&gt; instead. JSON schema is currently a proposed Internet draft specification. Besides documentation, the schema can also be used for validating your JSON data.</source>
          <target state="translated">Вместо этого вы должны написать схему &lt;a href=&quot;http://json-schema.org/&quot;&gt;JSON&lt;/a&gt; . Схема JSON в настоящее время является предложенной в Интернете черновой спецификацией. Помимо документации, схема также может быть использована для проверки ваших данных JSON.</target>
        </trans-unit>
        <trans-unit id="5f1eb38f94b01dd40159fa9e41b98ceba4ac1117" translate="yes" xml:space="preserve">
          <source>You would probably be better having the comment in the processes that generates/receives the JSON, as they are supposed to know what the JSON data will be in advance, or at least the structure of it.</source>
          <target state="translated">Наверное,лучше было бы иметь комментарий в процессах,которые генерируют JSON,так как они должны знать,какие данные JSON будут заранее,или,по крайней мере,его структуру.</target>
        </trans-unit>
        <trans-unit id="7e147e80eb87acbe7b929c746720cc66c49a3fae" translate="yes" xml:space="preserve">
          <source>comment example */</source>
          <target state="translated">пример комментария *</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
