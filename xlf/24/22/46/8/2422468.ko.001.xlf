<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/2422468">
    <body>
      <group id="2422468">
        <trans-unit id="5f1ca1210967cf7ec0665a0d48a694121d166ff6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://joseluisbz.wordpress.com/2014/01/17/manually-installing-php-tomcat-and-httpd-lounge/#Enabling%20File%20Uploads&quot;&gt;http://joseluisbz.wordpress.com/2014/01/17/manually-installing-php-tomcat-and-httpd-lounge/#Enabling%20File%20Uploads&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://joseluisbz.wordpress.com/2014/01/17/manually-installing-php-tomcat-and-httpd-lounge/#Enabling%20File%20Uploads&quot;&gt;http://joseluisbz.wordpress.com/2014/01/17/manually-installing-php-tomcat-and-httpd-lounge/#Enabling%20File%20Uploads&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c802972cb140e98ca35c9f54cf59cd4c59c3c504" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AS YOU CAN SEE&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;당신이 볼 수 있듯이&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="c8c82fd6d2b50c25f40c28ce6616fc2c94a9a204" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In the JSP File&lt;/em&gt; or &lt;em&gt;Servlet&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;JSP 파일&lt;/em&gt; 또는 &lt;em&gt;서블릿에서&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6cdfa52c2ae1a0fca0bd83cad23cb73192529104" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In the html file&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;html 파일에서&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91f22f129213fc64bd890400f19b52156434e6ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For Spring MVC&lt;/strong&gt;
I have been trying for hours to do this
and managed to have a simpler version that worked for taking form input both data and image.</source>
          <target state="translated">&lt;strong&gt;Spring MVC의&lt;/strong&gt; 경우이 작업을 수행하기 위해 몇 시간 동안 노력해 왔으며 데이터와 이미지를 모두 입력하는 데 더 간단한 버전을 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="976c186c8b17e4ceb58ac69ab373f6b81d7f9717" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Uploading Files using JSP. Files:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSP를 사용하여 파일 업로드&lt;/strong&gt; &lt;strong&gt;파일 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b7d61c47c1d04f0f13c6b6b6c5f034514ad0a80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Without component or external Library in Tomcat 6 o 7&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tomcat 6 o 7에 컴포넌트 또는 외부 라이브러리가없는 경우&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="816b589dc3fcb7f757c8d78e6f2c8aff66eabd0c" translate="yes" xml:space="preserve">
          <source>Abstract template for static resource servlet supporting HTTP caching</source>
          <target state="translated">HTTP 캐싱을 지원하는 정적 자원 서블릿에 대한 추상 템플리트</target>
        </trans-unit>
        <trans-unit id="79896a10f482904c45ecf45713e4ab831d7e3b9b" translate="yes" xml:space="preserve">
          <source>After submitting such a form, the binary multipart form data is available in the request body in &lt;a href=&quot;https://stackoverflow.com/questions/13372775/servlet-handling-file-upload-why-bigger-than-the-original/13399437#13399437&quot;&gt;a different format&lt;/a&gt; than when the &lt;code&gt;enctype&lt;/code&gt; isn't set.</source>
          <target state="translated">이러한 양식을 제출하면 요청 본문에서 &lt;code&gt;enctype&lt;/code&gt; 이 설정되지 않은 경우와 &lt;a href=&quot;https://stackoverflow.com/questions/13372775/servlet-handling-file-upload-why-bigger-than-the-original/13399437#13399437&quot;&gt;다른 형식으로&lt;/a&gt; 이진 다중 파트 양식 데이터를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa01a9138d6ed5581ec69a547036ead99184f82e" translate="yes" xml:space="preserve">
          <source>Ajaxifying the form</source>
          <target state="translated">양식 아약시</target>
        </trans-unit>
        <trans-unit id="b6cda67eca08015c20a43a0579a2814b5771ce0a" translate="yes" xml:space="preserve">
          <source>Alternatively you can also wrap this all in a &lt;code&gt;Filter&lt;/code&gt; which parses it all automagically and put the stuff back in the parametermap of the request so that you can continue using &lt;code&gt;request.getParameter()&lt;/code&gt; the usual way and retrieve the uploaded file by &lt;code&gt;request.getAttribute()&lt;/code&gt;. &lt;a href=&quot;http://balusc.blogspot.com/2007/11/multipartfilter.html&quot;&gt;You can find an example in this blog article&lt;/a&gt;.</source>
          <target state="translated">또는이 모든 것을 자동으로 구문 분석하고 요청의 매개 변수 맵에 물건을 다시 넣는 일반적인 방법으로 &lt;code&gt;request.getParameter()&lt;/code&gt; 계속 사용하고 request.getAttribute ()로 업로드 된 파일을 검색 할 수 있도록 &lt;code&gt;Filter&lt;/code&gt; 로이 모든 것을 포장 할 수 있습니다 &lt;code&gt;request.getAttribute()&lt;/code&gt; &lt;a href=&quot;http://balusc.blogspot.com/2007/11/multipartfilter.html&quot;&gt;이 블로그 기사에서 예제를 찾을 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eed3425334f048339b7269df43a9de0871184e14" translate="yes" xml:space="preserve">
          <source>Another source of this problem occurs if you are using Geronimo with its embedded Tomcat. In this case, after many iterations of testing commons-io and commons-fileupload, the problem arises from a parent classloader handling the commons-xxx jars. This has to be prevented. The crash always occurred at:</source>
          <target state="translated">이 문제의 또 다른 원인은 내장 Tomcat과 함께 Geronimo를 사용하는 경우 발생합니다. 이 경우 commons-io 및 commons-fileupload 테스트를 여러 번 반복 한 후 commons-xxx jar를 처리하는 상위 클래스 로더에서 문제가 발생합니다. 이를 방지해야합니다. 충돌은 항상 다음에서 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="052285112e7153712a45418d1cb8aadce253de0f" translate="yes" xml:space="preserve">
          <source>Before Servlet 3.0, the Servlet API didn't natively support &lt;code&gt;multipart/form-data&lt;/code&gt;. It supports only the default form enctype of &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;. The &lt;code&gt;request.getParameter()&lt;/code&gt; and consorts would all return &lt;code&gt;null&lt;/code&gt; when using multipart form data. This is where the well known &lt;a href=&quot;http://commons.apache.org/fileupload&quot;&gt;Apache Commons FileUpload&lt;/a&gt; came into the picture.</source>
          <target state="translated">Servlet 3.0 이전에는 Servlet API가 &lt;code&gt;multipart/form-data&lt;/code&gt; 를 기본적으로 지원하지 않았습니다. &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 의 기본 양식 enctype 만 지원합니다. multipart 양식 데이터를 사용할 때 &lt;code&gt;request.getParameter()&lt;/code&gt; 및 consorts는 모두 &lt;code&gt;null&lt;/code&gt; 을 반환합니다. 여기에서 잘 알려진 &lt;a href=&quot;http://commons.apache.org/fileupload&quot;&gt;Apache Commons FileUpload&lt;/a&gt; 가 등장했습니다.</target>
        </trans-unit>
        <trans-unit id="f5ec78b41b25ed040e46c59fb888dcada543adb1" translate="yes" xml:space="preserve">
          <source>Compile above servlet UploadServlet and create required entry in web.xml file as follows.</source>
          <target state="translated">서블릿 UploadServlet 위에서 컴파일하고 다음과 같이 web.xml 파일에서 필수 항목을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="7519374a969b224a434ff7a89d5989428f5f1e88" translate="yes" xml:space="preserve">
          <source>Controller to handle</source>
          <target state="translated">처리 할 컨트롤러</target>
        </trans-unit>
        <trans-unit id="79888d887fe201f7187f97359c2a96e1253b3b07" translate="yes" xml:space="preserve">
          <source>Don't manually parse it!</source>
          <target state="translated">수동으로 구문 분석하지 마십시오!</target>
        </trans-unit>
        <trans-unit id="f42ea9cd1b30e9f99e72f812f872a3199f233324" translate="yes" xml:space="preserve">
          <source>During research I stumbled upon &lt;a href=&quot;http://commons.apache.org/fileupload&quot;&gt;Apache Common FileUpload&lt;/a&gt;. I tried this:</source>
          <target state="translated">연구하는 동안 &lt;a href=&quot;http://commons.apache.org/fileupload&quot;&gt;Apache Common FileUpload를&lt;/a&gt; 우연히 발견했습니다. 나는 이것을 시도했다 :</target>
        </trans-unit>
        <trans-unit id="236e4ef34309253923d558786788c10ae6bee8fa" translate="yes" xml:space="preserve">
          <source>Edit your code to servlet requirements, like &lt;em&gt;max-file-size&lt;/em&gt;, &lt;em&gt;max-request-size&lt;/em&gt;  and other options that you can to set...</source>
          <target state="translated">&lt;em&gt;max-file-size&lt;/em&gt; , &lt;em&gt;max-request-size&lt;/em&gt; 및 설정할 수있는 기타 옵션과 같은 서블릿 요구 사항에 맞게 코드를 편집하십시오.</target>
        </trans-unit>
        <trans-unit id="f49cde406e0c7558373b92d169a18ab1b83c650d" translate="yes" xml:space="preserve">
          <source>Enabling Upload in the &lt;strong&gt;web.xml&lt;/strong&gt; file:</source>
          <target state="translated">&lt;strong&gt;web.xml&lt;/strong&gt; 파일에서 업로드 활성화</target>
        </trans-unit>
        <trans-unit id="4005b98aca50467cf88bae12854c110a5f44481b" translate="yes" xml:space="preserve">
          <source>Finally, I found 1 place that posed a working solution which successfully solved my problem. You must hide the jars from parent loader in the deployment plan. This was put into geronimo-web.xml with my full file shown below.</source>
          <target state="translated">마지막으로 문제를 성공적으로 해결 한 솔루션을 제시 한 곳을 찾았습니다. 배치 계획에서 상위 로더에서 jar을 숨겨야합니다. 이것은 아래 표시된 전체 파일로 geronimo-web.xml에 저장되었습니다.</target>
        </trans-unit>
        <trans-unit id="01614b7b5b022c8fa0d8275c860507f89f85d53c" translate="yes" xml:space="preserve">
          <source>First annotate your servlet with &lt;a href=&quot;http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/MultipartConfig.html&quot;&gt;&lt;code&gt;@MultipartConfig&lt;/code&gt;&lt;/a&gt; in order to let it recognize and support &lt;code&gt;multipart/form-data&lt;/code&gt; requests and thus get &lt;code&gt;getPart()&lt;/code&gt; to work:</source>
          <target state="translated">먼저 &lt;code&gt;multipart/form-data&lt;/code&gt; 요청을 인식하고 지원하여 &lt;code&gt;getPart()&lt;/code&gt; 가 작동하도록하려면 &lt;a href=&quot;http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/MultipartConfig.html&quot;&gt; &lt;code&gt;@MultipartConfig&lt;/code&gt; &lt;/a&gt; 를 사용하여 서블릿에 주석을 답니다 .</target>
        </trans-unit>
        <trans-unit id="d24d616c422437d271ef913e0e7477402ee96bd1" translate="yes" xml:space="preserve">
          <source>From this object you have to get file items and fields then yo can store into server like followed:</source>
          <target state="translated">이 객체에서 파일 항목과 필드를 가져와야 다음과 같이 서버에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df217e018684ead21e0e3025a39df8244dc03d22" translate="yes" xml:space="preserve">
          <source>HTML PAGE</source>
          <target state="translated">HTML 페이지</target>
        </trans-unit>
        <trans-unit id="0ab82452935082c91e91a8a8f671f8bc055f06bc" translate="yes" xml:space="preserve">
          <source>HTML5 File Upload to Java Servlet</source>
          <target state="translated">Java 서블릿에 HTML5 파일 업로드</target>
        </trans-unit>
        <trans-unit id="7608e216c8f08f251d8c0741b8ca119d95a352a5" translate="yes" xml:space="preserve">
          <source>Head to the following answers for detail on properly saving the obtained &lt;code&gt;InputStream&lt;/code&gt; (the &lt;code&gt;fileContent&lt;/code&gt; variable as shown in the above code snippets) to disk or database:</source>
          <target state="translated">얻은 &lt;code&gt;InputStream&lt;/code&gt; (위의 코드 스 니펫에 표시된 &lt;code&gt;fileContent&lt;/code&gt; 변수)을 디스크 또는 데이터베이스에 올바르게 저장하는 방법에 대한 자세한 내용은 다음 답변을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3b60022c2a6fd10edd9ae3509070592342be240f" translate="yes" xml:space="preserve">
          <source>Head to the following answers for detail on properly serving the saved file from disk or database back to the client:</source>
          <target state="translated">저장된 파일을 디스크 또는 데이터베이스에서 클라이언트로 올바르게 제공하는 방법에 대한 자세한 내용은 다음 답변을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="60bd560a3d767322c4a1bdea25e056bb263ff016" translate="yes" xml:space="preserve">
          <source>Head to the following answers how to upload using Ajax (and jQuery). Do note that the servlet code to collect the form data does not need to be changed for this! Only the way how you respond may be changed, but this is rather trivial (i.e. instead of forwarding to JSP, just print some JSON or XML or even plain text depending on whatever the script responsible for the Ajax call is expecting).</source>
          <target state="translated">다음 답변으로 Ajax (및 jQuery)를 사용하여 업로드하는 방법을 알아보십시오. 양식 데이터를 수집하기위한 서블릿 코드는이를 위해 변경 될 필요가 없습니다. 응답 방식 만 변경 될 수 있지만 이는 다소 사소합니다 (즉, JSP로 전달하는 대신 Ajax 호출을 담당하는 스크립트에 따라 JSON 또는 XML 또는 일반 텍스트 만 인쇄).</target>
        </trans-unit>
        <trans-unit id="f747461915808e1d4e154030418828c551656641" translate="yes" xml:space="preserve">
          <source>Here's a kickoff example how the &lt;code&gt;doPost()&lt;/code&gt; of your &lt;code&gt;UploadServlet&lt;/code&gt; may look like when using Apache Commons FileUpload:</source>
          <target state="translated">Apache Commons FileUpload를 사용할 때 &lt;code&gt;UploadServlet&lt;/code&gt; 의 &lt;code&gt;doPost()&lt;/code&gt; 가 어떻게 보일지에 대한 시작 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75e1da44ba61ab15b1882c07714ba4ee5596822f" translate="yes" xml:space="preserve">
          <source>Here's an example using apache commons-fileupload:</source>
          <target state="translated">다음은 apache commons-fileupload를 사용하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="f06f21f48ab00714a5f687efe6ed514e6290f68e" translate="yes" xml:space="preserve">
          <source>Hope it helps :)</source>
          <target state="translated">그것이 도움이되기를 바랍니다 :)</target>
        </trans-unit>
        <trans-unit id="c7ae901846dd48f28c5a142807dfc13230248ca8" translate="yes" xml:space="preserve">
          <source>Hope this all helps :)</source>
          <target state="translated">이 모든 것이 도움이되기를 바랍니다 :)</target>
        </trans-unit>
        <trans-unit id="25fcff96928db75f166883f1bb1a1957e971ae6c" translate="yes" xml:space="preserve">
          <source>How can I upload files to server using JSP/Servlet? I tried this:</source>
          <target state="translated">JSP / Servlet을 사용하여 파일을 서버에 업로드하려면 어떻게해야합니까? 나는 이것을 시도했다 :</target>
        </trans-unit>
        <trans-unit id="c6c72f46d0082406a10bc66d05a50add855e6c3f" translate="yes" xml:space="preserve">
          <source>How to convert Part to Blob, so I can store it in MySQL?</source>
          <target state="translated">Part를 Blob으로 변환하여 MySQL에 저장할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="ead0c8056b3c97ef973d83b0cd30c0bb9dcfdcab" translate="yes" xml:space="preserve">
          <source>How to retrieve and display images from a database in a JSP page?</source>
          <target state="translated">JSP 페이지에서 데이터베이스에서 이미지를 검색하고 표시하는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="91c3290800a3458e98a05145d89bba52c43ca16f" translate="yes" xml:space="preserve">
          <source>How to upload an image and save it in database?</source>
          <target state="translated">이미지를 업로드하여 데이터베이스에 저장하는 방법?</target>
        </trans-unit>
        <trans-unit id="36ee6e867e8ab123ade5e42ec8cf7b5e519f970d" translate="yes" xml:space="preserve">
          <source>How to upload files to server using JSP/Servlet</source>
          <target state="translated">JSP / Servlet을 사용하여 서버에 파일을 업로드하는 방법</target>
        </trans-unit>
        <trans-unit id="70cbe90eaa16a4700707cad552786a51fb645ab2" translate="yes" xml:space="preserve">
          <source>How to upload files to server using JSP/Servlet and Ajax?</source>
          <target state="translated">JSP / Servlet 및 Ajax를 사용하여 서버에 파일을 업로드하는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="27a9ecde2d19cea3c82935fd6c0ec42df7711cbf" translate="yes" xml:space="preserve">
          <source>However, I only get the file name, not the file content. When I add  &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; to the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, then &lt;code&gt;request.getParameter()&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">그러나 파일 내용이 아닌 파일 이름 만 얻습니다. &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; 를 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 에 추가하면 &lt;code&gt;request.getParameter()&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e430fc8075c236758ccb76022b1bb6896cc5159" translate="yes" xml:space="preserve">
          <source>I added the source code for commons-fileupload and commons-io into my Eclipse project to trace the actual error and finally got some insight. First, the exception thrown is of type Throwable not the stated FileIOException nor even Exception (these will not be trapped). Second, the error message is obfuscatory in that it stated class not found because axis2 could not find commons-io.  Axis2 is not used in my project at all but exists as a folder in the Geronimo repository subdirectory as part of standard installation.</source>
          <target state="translated">commons-fileupload 및 commons-io의 소스 코드를 Eclipse 프로젝트에 추가하여 실제 오류를 추적하고 마침내 통찰력을 얻었습니다. 먼저, 예외는 명시된 FileIOException이 아니고 예외가 아닌 Throwable 유형입니다 (이것은 트랩되지 않습니다). 둘째, 오류 메시지는 axis2가 commons-io를 찾을 수 없기 때문에 클래스를 찾을 수 없다고 언급했기 때문에 난독 화됩니다. Axis2는 내 프로젝트에서 전혀 사용되지 않지만 표준 설치의 일부로 Geronimo 리포지토리 하위 디렉토리에 폴더로 존재합니다.</target>
        </trans-unit>
        <trans-unit id="ab21986a178cd08b064d5a41e91720c77bdc921b" translate="yes" xml:space="preserve">
          <source>I am Using common Servlet for &lt;strong&gt;every&lt;/strong&gt; Html Form whether it has attachments or not.
This Servlet returns a &lt;code&gt;TreeMap&lt;/code&gt; where the keys are jsp name Parameters and values are User Inputs and saves all attachments in fixed directory and later you rename the directory of your choice.Here Connections is our custom interface having connection object. I think this will help you</source>
          <target state="translated">첨부 파일이 있는지 여부에 관계없이 &lt;strong&gt;모든&lt;/strong&gt; HTML 양식에 공통 서블릿을 사용하고 있습니다. 이 서블릿은 키가 jsp 이름 인 &lt;code&gt;TreeMap&lt;/code&gt; 을 리턴합니다. 매개 변수 및 값은 사용자 입력이며 모든 첨부 파일을 고정 된 디렉토리에 저장 한 후 나중에 선택한 디렉토리의 이름을 변경합니다. Connections는 연결 오브젝트가있는 사용자 정의 인터페이스입니다. 나는 이것이 당신을 도울 것이라고 생각합니다</target>
        </trans-unit>
        <trans-unit id="d38da4edfddb86af0e1b682297886c953eb8c99c" translate="yes" xml:space="preserve">
          <source>I've tested this with Spring version &lt;code&gt;4.1.1.RELEASE&lt;/code&gt;.</source>
          <target state="translated">Spring 버전 &lt;code&gt;4.1.1.RELEASE&lt;/code&gt; 로 이것을 테스트했습니다.</target>
        </trans-unit>
        <trans-unit id="b3abf66dfc3693796329fa24d91068d59d24d8d9" translate="yes" xml:space="preserve">
          <source>If you happen to use Spring MVC, this is how to: 
(I'm leaving this here in case someone find it useful).</source>
          <target state="translated">Spring MVC를 사용하는 경우 다음과 같은 방법입니다. (누군가 유용하다고 생각하면 여기에 남겨 둡니다).</target>
        </trans-unit>
        <trans-unit id="4e584a474f83f0920ef21d5d302aa54701cad50b" translate="yes" xml:space="preserve">
          <source>If you're not on Servlet 3.0 yet (isn't it about time to upgrade?), the common practice is to make use of &lt;a href=&quot;http://commons.apache.org/fileupload&quot;&gt;Apache Commons FileUpload&lt;/a&gt; to parse the multpart form data requests. It has an excellent &lt;a href=&quot;http://commons.apache.org/fileupload/using.html&quot;&gt;User Guide&lt;/a&gt; and &lt;a href=&quot;http://commons.apache.org/fileupload/faq.html&quot;&gt;FAQ&lt;/a&gt; (carefully go through both). There's also the O'Reilly (&quot;&lt;a href=&quot;http://www.servlets.com/cos/&quot;&gt;cos&lt;/a&gt;&quot;) &lt;code&gt;MultipartRequest&lt;/code&gt;, but it has some (minor) bugs and isn't actively maintained anymore for years. I wouldn't recommend using it. Apache Commons FileUpload is still actively maintained and currently very mature.</source>
          <target state="translated">아직 Servlet 3.0을 사용하고 있지 않은 경우 (업그레이드 할 시점이 아닙니까?) 일반적인 방법은 &lt;a href=&quot;http://commons.apache.org/fileupload&quot;&gt;Apache Commons FileUpload&lt;/a&gt; 를 사용하여 다중 형식 데이터 요청을 구문 분석하는 것입니다. 훌륭한 &lt;a href=&quot;http://commons.apache.org/fileupload/using.html&quot;&gt;사용자 안내서&lt;/a&gt; 와 &lt;a href=&quot;http://commons.apache.org/fileupload/faq.html&quot;&gt;FAQ가 있습니다&lt;/a&gt; (둘 다 조심스럽게 살펴보십시오). O'Reilly ( &quot; &lt;a href=&quot;http://www.servlets.com/cos/&quot;&gt;cos&lt;/a&gt; &quot;) &lt;code&gt;MultipartRequest&lt;/code&gt; 도 있지만 약간의 버그가 있으며 몇 년 동안 더 이상 활발하게 유지되지 않습니다. 나는 그것을 사용하지 않는 것이 좋습니다. Apache Commons FileUpload는 여전히 활발하게 유지 보수되고 있으며 현재 매우 성숙합니다.</target>
        </trans-unit>
        <trans-unit id="9b85c6258d155b2e3ee148f9c16763360d8b23a3" translate="yes" xml:space="preserve">
          <source>If you're using at least Servlet 3.0 (Tomcat 7, Jetty 9, JBoss AS 6, GlassFish 3, etc), then you can just use standard API provided &lt;a href=&quot;http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html#getParts()&quot;&gt;&lt;code&gt;HttpServletRequest#getPart()&lt;/code&gt;&lt;/a&gt; to collect the individual multipart form data items (most Servlet 3.0 implementations actually use Apache Commons FileUpload under the covers for this!). Also, normal form fields are available by &lt;code&gt;getParameter()&lt;/code&gt; the usual way.</source>
          <target state="translated">최소한 Servlet 3.0 (Tomcat 7, Jetty 9, JBoss AS 6, GlassFish 3 등)을 사용하는 경우 표준 API 제공 &lt;a href=&quot;http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html#getParts()&quot;&gt; &lt;code&gt;HttpServletRequest#getPart()&lt;/code&gt; &lt;/a&gt; 를 사용하여 개별 멀티 파트 양식 데이터 항목 (대부분의 Servlet ) 을 수집 할 수 있습니다 3.0 구현은 실제로 Apache Commons FileUpload를 사용합니다!). 또한 일반적인 양식 필드는 일반적인 방법으로 &lt;code&gt;getParameter()&lt;/code&gt; 통해 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2792b3a162c7e1e506c6ffc41aea631345883f87" translate="yes" xml:space="preserve">
          <source>In case you have a &lt;code&gt;&amp;lt;input type=&quot;file&quot; name=&quot;file&quot; multiple=&quot;true&quot; /&amp;gt;&lt;/code&gt; for multi-file upload, collect them as below (unfortunately there is no such method as &lt;code&gt;request.getParts(&quot;file&quot;)&lt;/code&gt;):</source>
          <target state="translated">다중 파일 업로드를 위해 &lt;code&gt;&amp;lt;input type=&quot;file&quot; name=&quot;file&quot; multiple=&quot;true&quot; /&amp;gt;&lt;/code&gt; 경우 아래와 같이 수집하십시오 (불행히도 &lt;code&gt;request.getParts(&quot;file&quot;)&lt;/code&gt; 와 같은 메소드는 없습니다. ) :</target>
        </trans-unit>
        <trans-unit id="2927a9cf6b59012693ea19c61826c02e97387eb5" translate="yes" xml:space="preserve">
          <source>In order to use Apache Commons FileUpload, you need to have at least the following files in your webapp's &lt;code&gt;/WEB-INF/lib&lt;/code&gt;:</source>
          <target state="translated">Apache Commons FileUpload를 사용하려면 최소한 webapp의 &lt;code&gt;/WEB-INF/lib&lt;/code&gt; 에 다음 파일이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="3f42bea78e0be9336f78c0cc8f964b694e2fe68c" translate="yes" xml:space="preserve">
          <source>In your controller, map the request parameter &lt;code&gt;file&lt;/code&gt; to &lt;code&gt;MultipartFile&lt;/code&gt; type as follows:</source>
          <target state="translated">컨트롤러에서 다음과 같이 요청 매개 변수 &lt;code&gt;file&lt;/code&gt; 을 &lt;code&gt;MultipartFile&lt;/code&gt; 유형에 맵핑하십시오.</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="c5d8a02410399f09874e132d8540410dfc3a1d3c" translate="yes" xml:space="preserve">
          <source>It's very important that you don't call &lt;code&gt;getParameter()&lt;/code&gt;, &lt;code&gt;getParameterMap()&lt;/code&gt;, &lt;code&gt;getParameterValues()&lt;/code&gt;, &lt;code&gt;getInputStream()&lt;/code&gt;, &lt;code&gt;getReader()&lt;/code&gt;, etc on the same request beforehand. Otherwise the servlet container will read and parse the request body and thus Apache Commons FileUpload will get an empty request body. See also a.o. &lt;a href=&quot;https://stackoverflow.com/questions/13881272/servletfileuploadparserequestrequest-returns-an-empty-list&quot;&gt;ServletFileUpload#parseRequest(request) returns an empty list&lt;/a&gt;.</source>
          <target state="translated">동일한 요청에 대해 &lt;code&gt;getParameter()&lt;/code&gt; , &lt;code&gt;getParameterMap()&lt;/code&gt; , &lt;code&gt;getParameterValues()&lt;/code&gt; , &lt;code&gt;getInputStream()&lt;/code&gt; , &lt;code&gt;getReader()&lt;/code&gt; 등을 미리 호출하지 않는 것이 매우 중요합니다. 그렇지 않으면 서블릿 컨테이너는 요청 본문을 읽고 구문 분석하므로 Apache Commons FileUpload는 빈 요청 본문을 얻습니다. ao &lt;a href=&quot;https://stackoverflow.com/questions/13881272/servletfileuploadparserequestrequest-returns-an-empty-list&quot;&gt;ServletFileUpload # parseRequest (request)도 빈 목록을 반환합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a50978fc7dc45d37d68d79c30d48beecf73a887" translate="yes" xml:space="preserve">
          <source>Load images from outside of webapps / webcontext / deploy folder using &amp;lt;h:graphicImage&amp;gt; or &amp;lt;img&amp;gt; tag</source>
          <target state="translated">&amp;lt;h : graphicImage&amp;gt; 또는 &amp;lt;img&amp;gt; 태그를 사용하여 webapps / webcontext / deploy 폴더 외부에서 이미지로드</target>
        </trans-unit>
        <trans-unit id="cc33c714e85666805d8f16e942c8dd3f11d23ea4" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/servlet/http/Part.html#getSubmittedFileName()&quot;&gt;&lt;code&gt;Part#getSubmittedFileName()&lt;/code&gt;&lt;/a&gt; was introduced in Servlet 3.1 (Tomcat 8, Jetty 9, WildFly 8, GlassFish 4, etc). If you're not on Servlet 3.1 yet, then you need an additional utility method to obtain the submitted file name.</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javaee/7/api/javax/servlet/http/Part.html#getSubmittedFileName()&quot;&gt; &lt;code&gt;Part#getSubmittedFileName()&lt;/code&gt; &lt;/a&gt; 은 Servlet 3.1 (Tomcat 8, Jetty 9, WildFly 8, GlassFish 4 등)에 도입되었습니다. 아직 Servlet 3.1을 사용하지 않는 경우 제출 된 파일 이름을 얻으려면 추가 유틸리티 방법이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="422132cae943ddfa642986eb43b66030bc1c54a4" translate="yes" xml:space="preserve">
          <source>Note that Glassfish versions older than 3.1.2 had &lt;a href=&quot;http://java.net/jira/browse/GLASSFISH-16740&quot;&gt;a bug&lt;/a&gt; wherein the &lt;code&gt;getParameter()&lt;/code&gt; still returns &lt;code&gt;null&lt;/code&gt;. If you are targeting such a container and can't upgrade it, then you need to extract the value from &lt;code&gt;getPart()&lt;/code&gt; with help of this utility method:</source>
          <target state="translated">3.1.2 이전의 Glassfish 버전에는 &lt;code&gt;getParameter()&lt;/code&gt; 여전히 &lt;code&gt;null&lt;/code&gt; 을 반환 &lt;a href=&quot;http://java.net/jira/browse/GLASSFISH-16740&quot;&gt;하는 버그&lt;/a&gt; 가있었습니다. 이러한 컨테이너를 대상으로하고 업그레이드 할 수없는 경우이 유틸리티 메소드를 사용하여 &lt;code&gt;getPart()&lt;/code&gt; 에서 값을 추출해야합니다.</target>
        </trans-unit>
        <trans-unit id="d3223bd580e19d77142aea280656cfd4b03cddb8" translate="yes" xml:space="preserve">
          <source>Note that the List type of fileItems has changed with the current version of commons-fileupload to be specifically &lt;code&gt;List&amp;lt;FileItem&amp;gt;&lt;/code&gt; as opposed to prior versions where it was generic &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">fileItems의 List 유형은 현재 버전의 commons-fileupload에서 일반 &lt;code&gt;List&lt;/code&gt; 였던 이전 버전과 달리 &lt;code&gt;List&amp;lt;FileItem&amp;gt;&lt;/code&gt; 으로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="8e4be53d048d23d18a4452a476074ae239e4d5a8" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;FilenameUtils#getName()&lt;/code&gt;. This is a MSIE fix as to obtaining the file name. This browser incorrectly sends the full file path along the name instead of only the file name.</source>
          <target state="translated">&lt;code&gt;FilenameUtils#getName()&lt;/code&gt; 참고하십시오. 파일 이름을 얻는 방법에 대한 MSIE 수정 프로그램입니다. 이 브라우저는 파일 이름 대신 이름을 따라 전체 파일 경로를 잘못 보냅니다.</target>
        </trans-unit>
        <trans-unit id="1b2340999914e37b2ef52dfcc5eb4ce99ee15657" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;Path#getFileName()&lt;/code&gt;. This is a MSIE fix as to obtaining the file name. This browser incorrectly sends the full file path along the name instead of only the file name.</source>
          <target state="translated">&lt;code&gt;Path#getFileName()&lt;/code&gt; 참고하십시오. 파일 이름을 얻는 방법에 대한 MSIE 수정 프로그램입니다. 이 브라우저는 파일 이름 대신 이름을 따라 전체 파일 경로를 잘못 보냅니다.</target>
        </trans-unit>
        <trans-unit id="a7819ad5202a2520690c3779512538a28dbdae82" translate="yes" xml:space="preserve">
          <source>Note the MSIE fix as to obtaining the file name. This browser incorrectly sends the full file path along the name instead of only the file name.</source>
          <target state="translated">파일 이름을 얻는 방법에 대한 MSIE 수정 사항을 참고하십시오. 이 브라우저는 파일 이름 대신 이름을 따라 전체 파일 경로를 잘못 보냅니다.</target>
        </trans-unit>
        <trans-unit id="d19568e50ad99ecd12d66c0a2aa9dbb53f965a50" translate="yes" xml:space="preserve">
          <source>Recommended way to save uploaded files in a servlet application</source>
          <target state="translated">서블릿 애플리케이션에 업로드 된 파일을 저장하는 권장 방법</target>
        </trans-unit>
        <trans-unit id="743ce4827f9b83ba056554fcbb63ebf2706a0400" translate="yes" xml:space="preserve">
          <source>SERVLET FILE</source>
          <target state="translated">서블릿 파일</target>
        </trans-unit>
        <trans-unit id="21e66e6f7f0b649621e5cbb71a94fdf0528c1a79" translate="yes" xml:space="preserve">
          <source>Saving uploaded file (don't use &lt;code&gt;getRealPath()&lt;/code&gt; nor &lt;code&gt;part.write()&lt;/code&gt;!)</source>
          <target state="translated">업로드 된 파일 저장 ( &lt;code&gt;getRealPath()&lt;/code&gt; 또는 &lt;code&gt;part.write()&lt;/code&gt; 사용하지 마십시오!)</target>
        </trans-unit>
        <trans-unit id="8ea4bd5b352f3bc33dfc4673d3d56ad6df1d86d5" translate="yes" xml:space="preserve">
          <source>Send a file as multipart through xmlHttpRequest</source>
          <target state="translated">xmlHttpRequest를 통해 파일을 여러 부분으로 보내기</target>
        </trans-unit>
        <trans-unit id="77e58b90764605fceeecc2238bfa5b3e6deb8582" translate="yes" xml:space="preserve">
          <source>Sending multiple file for file we have to use &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt;</source>
          <target state="translated">파일로 여러 파일을 보내려면 &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt; 를 사용해야합니다</target>
        </trans-unit>
        <trans-unit id="c1f3975e65801e5309eee560ab48c7fa634f82c7" translate="yes" xml:space="preserve">
          <source>Serving uploaded file</source>
          <target state="translated">업로드 된 파일 제공</target>
        </trans-unit>
        <trans-unit id="c1ead808bbd6989ed5fe657f1195a07d0b97a91f" translate="yes" xml:space="preserve">
          <source>Simplest way to serve static data from outside the application server in a Java web application</source>
          <target state="translated">Java 웹 애플리케이션에서 애플리케이션 서버 외부에서 정적 데이터를 제공하는 가장 간단한 방법</target>
        </trans-unit>
        <trans-unit id="0c39f3d1d7cc0fb9dd71cd96c6392c09c11f41d3" translate="yes" xml:space="preserve">
          <source>Then, implement its &lt;code&gt;doPost()&lt;/code&gt; as follows:</source>
          <target state="translated">그런 다음 &lt;code&gt;doPost()&lt;/code&gt; 를 다음과 같이 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="86974eb210d24ae502124d960b0101e64f56a7d7" translate="yes" xml:space="preserve">
          <source>To browse and select a file for upload you need a HTML &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; field in the form. As stated in the &lt;a href=&quot;http://www.w3.org/TR/html4/interact/forms.html&quot;&gt;HTML specification&lt;/a&gt; you have to use the &lt;code&gt;POST&lt;/code&gt; method and the &lt;code&gt;enctype&lt;/code&gt; attribute of the form has to be set to &lt;code&gt;&quot;multipart/form-data&quot;&lt;/code&gt;.</source>
          <target state="translated">업로드 할 파일을 찾아서 선택하려면 양식에 HTML &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; 필드가 필요합니다. &lt;a href=&quot;http://www.w3.org/TR/html4/interact/forms.html&quot;&gt;HTML 스펙에&lt;/a&gt; 명시된 바와 같이 &lt;code&gt;POST&lt;/code&gt; 메소드를 사용해야하며 양식의 &lt;code&gt;enctype&lt;/code&gt; 속성은 &lt;code&gt;&quot;multipart/form-data&quot;&lt;/code&gt; 로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="90522d3de09499002d43103211c12c2e5148ca37" translate="yes" xml:space="preserve">
          <source>To get the &lt;code&gt;common.io.jar&lt;/code&gt; file just google it or just go to the Apache &lt;a href=&quot;http://en.wikipedia.org/wiki/Apache_Tomcat&quot;&gt;Tomcat&lt;/a&gt; website where you get the option for a free download of this file. But remember one thing: download the binary ZIP file if you're a Windows user.</source>
          <target state="translated">&lt;code&gt;common.io.jar&lt;/code&gt; 파일을 가져 오려면 그냥 Google로 가져 오거나 Apache &lt;a href=&quot;http://en.wikipedia.org/wiki/Apache_Tomcat&quot;&gt;Tomcat&lt;/a&gt; 웹 사이트로 이동하여이 파일을 무료로 다운로드 할 수있는 옵션을 받으십시오. 그러나 Windows 사용자라면 바이너리 ZIP 파일을 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="48f3422e738a5d2062f6ec80c7f40f6f12af37b5" translate="yes" xml:space="preserve">
          <source>Unfortunately, the servlet threw an exception without a clear message and cause. Here is the stacktrace:</source>
          <target state="translated">불행하게도, 서블릿은 명확한 메시지와 원인없이 예외를 던졌습니다. 스택 추적은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7a7f0e680f68bb313789da611591c96e89d3706b" translate="yes" xml:space="preserve">
          <source>Use a form with &lt;code&gt;enctype&lt;/code&gt; attribute set to &quot;&lt;code&gt;multipart/form-data&lt;/code&gt;&quot; (Same as BalusC's Answer)</source>
          <target state="translated">&lt;code&gt;enctype&lt;/code&gt; 속성이 &quot; &lt;code&gt;multipart/form-data&lt;/code&gt; &quot;로 설정된 양식을 사용하십시오 (BalusC의 답변과 동일).</target>
        </trans-unit>
        <trans-unit id="ef4e3ac4b836d4368f42d6cc73fc2f9dee1b1725" translate="yes" xml:space="preserve">
          <source>When you're already on Servlet 3.0 or newer, use native API</source>
          <target state="translated">이미 Servlet 3.0 이상에있는 경우 기본 API를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="263a1e004dfe846e3760fdbed241e79f7e1e500a" translate="yes" xml:space="preserve">
          <source>When you're not on Servlet 3.0 yet, use Apache Commons FileUpload</source>
          <target state="translated">아직 Servlet 3.0을 사용하지 않는 경우 Apache Commons FileUpload를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="06d2c2b12c64de8ba019df47faa17be8691887dd" translate="yes" xml:space="preserve">
          <source>When you're not on Servlet 3.1 yet, manually get submitted file name</source>
          <target state="translated">아직 Servlet 3.1이 아닌 경우 수동으로 제출 된 파일 이름을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f2db992af803180ae4385adf77e18c3da8d82c98" translate="yes" xml:space="preserve">
          <source>Workaround for GlassFish3 bug of &lt;code&gt;getParameter()&lt;/code&gt; still returning &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;getParameter()&lt;/code&gt; 의 GlassFish3 버그에 대한 해결 방법이 여전히 &lt;code&gt;null&lt;/code&gt; 을 반환 함</target>
        </trans-unit>
        <trans-unit id="03a16293e241d52ca6692f27c52aceaeba19cea3" translate="yes" xml:space="preserve">
          <source>You can get the filename and size using &lt;code&gt;MultipartFile&lt;/code&gt;'s &lt;code&gt;getOriginalFilename()&lt;/code&gt; and &lt;code&gt;getSize()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MultipartFile&lt;/code&gt; 의 &lt;code&gt;getOriginalFilename()&lt;/code&gt; 및 &lt;code&gt;getSize()&lt;/code&gt; 사용하여 파일 이름과 크기를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35a8da032d3a2dbef7c02420a7227ebc0187748c" translate="yes" xml:space="preserve">
          <source>You can in theory parse the request body yourself based on &lt;a href=&quot;http://docs.oracle.com/javaee/6/api/javax/servlet/ServletRequest.html#getInputStream%28%29&quot;&gt;&lt;code&gt;ServletRequest#getInputStream()&lt;/code&gt;&lt;/a&gt;. However, this is a precise and tedious work which requires precise knowledge of &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2388.html&quot;&gt;RFC2388&lt;/a&gt;. You shouldn't try to do this on your own or copypaste some homegrown library-less code found elsewhere on the Internet. Many online sources have failed hard in this, such as roseindia.net. See also &lt;a href=&quot;https://stackoverflow.com/questions/5038798/uploading-of-pdf-file&quot;&gt;uploading of pdf file&lt;/a&gt;. You should rather use a real library which is used (and implicitly tested!) by millions of users for years. Such a library has proven its robustness.</source>
          <target state="translated">이론적으로 &lt;a href=&quot;http://docs.oracle.com/javaee/6/api/javax/servlet/ServletRequest.html#getInputStream%28%29&quot;&gt; &lt;code&gt;ServletRequest#getInputStream()&lt;/code&gt; &lt;/a&gt; 에 따라 요청 본문을 직접 구문 분석 할 수 있습니다. 그러나 이것은 &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2388.html&quot;&gt;RFC2388에&lt;/a&gt; 대한 정확한 지식이 필요한 정확하고 지루한 작업입니다. 이 작업을 직접 수행하거나 인터넷의 다른 곳에서 찾은 자체 라이브러리가없는 코드를 복사하여 붙여 넣어서는 안됩니다. roseindia.net과 같은 많은 온라인 소스가 이에 실패했습니다. &lt;a href=&quot;https://stackoverflow.com/questions/5038798/uploading-of-pdf-file&quot;&gt;pdf 파일 업로드&lt;/a&gt; 도 참조하십시오. 몇 년 동안 수백만 명의 사용자가 사용하고 암시 적으로 테스트 한 실제 라이브러리를 사용해야합니다. 이러한 라이브러리는 견고성이 입증되었습니다.</target>
        </trans-unit>
        <trans-unit id="1e8986626521ded064dd1af230c20c1455110800" translate="yes" xml:space="preserve">
          <source>You need the &lt;code&gt;common-io.1.4.jar&lt;/code&gt; file to be included in your &lt;code&gt;lib&lt;/code&gt; directory, or if you're working in any editor, like NetBeans, then you need to go to project properties and just add the JAR file and you will be done.</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 디렉토리에 &lt;code&gt;common-io.1.4.jar&lt;/code&gt; 파일이 포함되어 있거나 NetBeans와 같은 편집기에서 작업하는 경우 프로젝트 속성으로 이동하여 JAR 파일을 추가하면됩니다. 끝난.</target>
        </trans-unit>
        <trans-unit id="33dccc7f52bf5b58fc1ec2b8e20e2a608095ba2d" translate="yes" xml:space="preserve">
          <source>Your initial attempt failed most likely because you forgot the commons IO.</source>
          <target state="translated">커먼즈 IO를 잊었 기 때문에 초기 시도가 실패했을 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="a5b8363b277e4deb4686047d5b1b962767fad824" translate="yes" xml:space="preserve">
          <source>and to send multiple file use  &lt;code&gt;multiple=&quot;multiple&quot;&lt;/code&gt; in input tag</source>
          <target state="translated">여러 파일을 보내려면 입력 태그에 &lt;code&gt;multiple=&quot;multiple&quot;&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b5bf4df12f6b2dd32c3c9368402d797c08f678ab" translate="yes" xml:space="preserve">
          <source>on the other hand server side.
use following code.</source>
          <target state="translated">반면에 서버 쪽. 다음 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="883ff21824d1a24fbb42f58b1e145b46d304d8b2" translate="yes" xml:space="preserve">
          <source>web.xml</source>
          <target state="translated">web.xml</target>
        </trans-unit>
        <trans-unit id="208dd9736bbacbca949c6c10fc0bb2609dde7cd8" translate="yes" xml:space="preserve">
          <source>you can upload file using jsp /servlet.</source>
          <target state="translated">jsp / servlet을 사용하여 파일을 업로드 할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
