<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/247621">
    <body>
      <group id="247621">
        <trans-unit id="15517ade6d268a7787abb6c0a11a9bcf8903ba50" translate="yes" xml:space="preserve">
          <source>.NET 2.0 &amp;lt;==&amp;gt; &lt;a href=&quot;http://msdn.microsoft.com/en-US/library/t27ahy37%28v=vs.80%29.aspx&quot;&gt;Visual C# 2005&lt;/a&gt;</source>
          <target state="translated">.NET 2.0 &amp;lt;==&amp;gt; &lt;a href=&quot;http://msdn.microsoft.com/en-US/library/t27ahy37%28v=vs.80%29.aspx&quot;&gt;Visual C # 2005&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="adf7d1ada0656e9c81de9f05c77b63512f0801ee" translate="yes" xml:space="preserve">
          <source>.NET 3.5 &amp;lt;==&amp;gt; &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb383815%28v=vs.90%29.aspx&quot;&gt;Visual C# 2008 Service Pack 1&lt;/a&gt;</source>
          <target state="translated">.NET 3.5 &amp;lt;==&amp;gt; &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb383815%28v=vs.90%29.aspx&quot;&gt;Visual C # 2008 서비스 팩 1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14b5336d667463d99715ddd2a88bdaa76d6bb3fa" translate="yes" xml:space="preserve">
          <source>.NET3.0 &amp;lt;==&amp;gt; Visual C# 2008</source>
          <target state="translated">.NET3.0 &amp;lt;==&amp;gt; Visual C # 2008</target>
        </trans-unit>
        <trans-unit id="a6345cce4d09e93ac0feffb88202bece776935a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://msdn.microsoft.com/en-US/library/7cz8t42e%28v=vs.80%29.aspx&quot;&gt;C# 2.0&lt;/a&gt; is a synonym for &lt;a href=&quot;http://msdn.microsoft.com/en-US/library/t27ahy37%28v=vs.80%29.aspx&quot;&gt;Visual C# 2005&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://msdn.microsoft.com/en-US/library/7cz8t42e%28v=vs.80%29.aspx&quot;&gt;C # 2.0&lt;/a&gt; 은 &lt;a href=&quot;http://msdn.microsoft.com/en-US/library/t27ahy37%28v=vs.80%29.aspx&quot;&gt;Visual C # 2005&lt;/a&gt; 의 동의어입니다.</target>
        </trans-unit>
        <trans-unit id="2e24ba2d7178e5afeb2df6de707ec86e1f373308" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/csharpgeneral/thread/f19a5ce8-1206-4600-a940-cacbbf588344&quot;&gt;VERSION&lt;/a&gt;&lt;code&gt;_____&lt;/code&gt;LANGUAGE SPECIFICATION&lt;code&gt;______&lt;/code&gt;MICROSOFT COMPILER</source>
          <target state="translated">&lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/csharpgeneral/thread/f19a5ce8-1206-4600-a940-cacbbf588344&quot;&gt;버전&lt;/a&gt; &lt;code&gt;_____&lt;/code&gt; 언어 사양 &lt;code&gt;______&lt;/code&gt; MICROSOFT COMPILER</target>
        </trans-unit>
        <trans-unit id="9261c70f421c34fc16decebb64c232e87612e79f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29&quot;&gt;1&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29&quot;&gt;1&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="8474b97ef0ccea1230235d9843302422766c5070" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 1.0&lt;/strong&gt; released with .NET 1.0 and VS2002 (January 2002)</source>
          <target state="translated">.NET 1.0 및 VS2002와 함께 릴리스 된 &lt;strong&gt;C # 1.0&lt;/strong&gt; (2002 년 1 월)</target>
        </trans-unit>
        <trans-unit id="3c8ab76730b95926fc3bd28ac5a10605859b7836" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 1.0&lt;/strong&gt; with Visual Studio.NET</source>
          <target state="translated">Visual Studio.NET을 사용하는 &lt;strong&gt;C # 1.0&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d6bebb080cd854719b17f703552f385b57e2876" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 1.2&lt;/strong&gt; (bizarrely enough); released with .NET 1.1 and VS2003 (April 2003). First version to call &lt;code&gt;Dispose&lt;/code&gt; on &lt;code&gt;IEnumerator&lt;/code&gt;s which implemented &lt;code&gt;IDisposable&lt;/code&gt;. A few other small features.</source>
          <target state="translated">&lt;strong&gt;C # 1.2&lt;/strong&gt; (기괴하게도 충분 함); .NET 1.1 및 VS2003 (2003 년 4 월)과 함께 릴리스되었습니다. &lt;code&gt;IDisposable&lt;/code&gt; 을 구현 한 &lt;code&gt;IEnumerator&lt;/code&gt; 에서 &lt;code&gt;Dispose&lt;/code&gt; 를 호출하는 첫 번째 버전입니다. 다른 작은 기능들.</target>
        </trans-unit>
        <trans-unit id="afbd698ab251565733c29a6174b057a62ec746ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 2.0&lt;/strong&gt; released with .NET 2.0 and VS2005 (November 2005). Major new features: generics, anonymous methods, nullable types, iterator blocks</source>
          <target state="translated">&lt;strong&gt;C # 2.0&lt;/strong&gt; 은 .NET 2.0 및 VS2005 (2005 년 11 월)와 함께 릴리스되었습니다. 주요 새로운 기능 : 제네릭, 익명 메서드, nullable 형식, 반복자 블록</target>
        </trans-unit>
        <trans-unit id="8884e54557a1aba098013f421444b3edb0f400e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 2.0&lt;/strong&gt; with Visual Studio 2005</source>
          <target state="translated">Visual Studio 2005가 포함 된 &lt;strong&gt;C # 2.0&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="136724b5f573ca2848a82ef4b10c1ca1f05b0ad0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 3.0&lt;/strong&gt; released with .NET 3.5 and VS2008 (November 2007). Major new features: lambda expressions, extension methods, expression trees, anonymous types, implicit typing (&lt;code&gt;var&lt;/code&gt;), query expressions</source>
          <target state="translated">&lt;strong&gt;C # 3.0&lt;/strong&gt; 은 .NET 3.5 및 VS2008 (2007 년 11 월)과 함께 릴리스되었습니다. 주요 새로운 기능 : 람다 식, 확장 메서드, 식 트리, 익명 형식, 암시 적 타이핑 ( &lt;code&gt;var&lt;/code&gt; ), 쿼리 식</target>
        </trans-unit>
        <trans-unit id="93a09321864b919643a691c41633424b7e0fdf4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 3.0&lt;/strong&gt; with Visual Studio 2008</source>
          <target state="translated">Visual Studio 2008이 포함 된 &lt;strong&gt;C # 3.0&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84db9bc560a27d2b5c59df7bb5063ca45c97605c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 4.0&lt;/strong&gt; released with .NET 4 and VS2010 (April 2010). Major new features: late binding (&lt;code&gt;dynamic&lt;/code&gt;), delegate and interface generic variance, more COM support, named arguments, tuple data type and optional parameters</source>
          <target state="translated">.NET 4 및 VS2010 (2010 년 4 월)과 함께 릴리스 된 &lt;strong&gt;C # 4.0&lt;/strong&gt; . 주요 새로운 기능 : 후기 바인딩 ( &lt;code&gt;dynamic&lt;/code&gt; ), 델리게이트 및 인터페이스 일반 분산, 추가 COM 지원, 명명 된 인수, 튜플 데이터 형식 및 선택적 매개 변수</target>
        </trans-unit>
        <trans-unit id="3dfe7f709a638ae7b40b027722cd860283e7332c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 4.0&lt;/strong&gt; with Visual Studio 2010</source>
          <target state="translated">Visual Studio 2010이 포함 된 &lt;strong&gt;C # 4.0&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d5cfcd12ec794d51d213ad3df7b77d7d6913ed7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 5.0&lt;/strong&gt; released with .NET 4.5 and VS2012 (August 2012). &lt;a href=&quot;https://devblogs.microsoft.com/csharpfaq/visual-studio-11-beta-is-here/&quot;&gt;Major features&lt;/a&gt;: async programming, caller info attributes. Breaking change: &lt;a href=&quot;https://ericlippert.com/2009/11/16/closing-over-the-loop-variable-considered-harmful-part-two/&quot;&gt;loop variable closure&lt;/a&gt;.</source>
          <target state="translated">.NET 4.5 및 VS2012 (2012 년 8 월)와 함께 릴리스 된 &lt;strong&gt;C # 5.0&lt;/strong&gt; . &lt;a href=&quot;https://devblogs.microsoft.com/csharpfaq/visual-studio-11-beta-is-here/&quot;&gt;주요 기능&lt;/a&gt; : 비동기 프로그래밍, 발신자 정보 속성. 주요 변경 사항 : &lt;a href=&quot;https://ericlippert.com/2009/11/16/closing-over-the-loop-variable-considered-harmful-part-two/&quot;&gt;루프 변수 클로저&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f1d8929fa33448b252830cd656bf2cd821828e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 5.0&lt;/strong&gt; with Visual Studio 2012</source>
          <target state="translated">Visual Studio 2012의 &lt;strong&gt;C # 5.0&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6eb2b5f7dc985ad134c7e656e144cf1bc8e1c306" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 6.0&lt;/strong&gt; released with .NET 4.6 and VS2015 (July 2015). Implemented by &lt;a href=&quot;https://github.com/dotnet/roslyn&quot;&gt;Roslyn&lt;/a&gt;. &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-6&quot;&gt;Features&lt;/a&gt;: initializers for automatically implemented properties, using directives to import static members, exception filters, element initializers, &lt;code&gt;await&lt;/code&gt; in &lt;code&gt;catch&lt;/code&gt; and &lt;code&gt;finally&lt;/code&gt;, extension &lt;code&gt;Add&lt;/code&gt; methods in collection initializers.</source>
          <target state="translated">.NET 4.6 및 VS2015 (2015 년 7 월)와 함께 릴리스 된 &lt;strong&gt;C # 6.0&lt;/strong&gt; . &lt;a href=&quot;https://github.com/dotnet/roslyn&quot;&gt;Roslyn에&lt;/a&gt; 의해 구현되었습니다. &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-6&quot;&gt;특징&lt;/a&gt; : 정적 멤버, 예외 필터, 요소 이니셜 라이저를 가져 오기 위해 지시문을 사용하여 자동으로 구현 된 속성의 이니셜 라이저, &lt;code&gt;catch&lt;/code&gt; &lt;code&gt;await&lt;/code&gt; 및 &lt;code&gt;finally&lt;/code&gt; 으로 확장 컬렉션 이니셜 라이저에 메소드 &lt;code&gt;Add&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="895ee3a9b4c9813be03ec911609aec6bd59101dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 6.0&lt;/strong&gt; with Visual Studio 2015</source>
          <target state="translated">Visual Studio 2015가 포함 된 &lt;strong&gt;C # 6.0&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6abe3eef4556adc27b0830dec8b37a77471be943" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 7.0&lt;/strong&gt; released with .NET 4.7 and VS2017 (March 2017) Major &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7&quot;&gt;new features&lt;/a&gt;: &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#tuples&quot;&gt;tuples&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#ref-locals-and-returns&quot;&gt;ref locals and ref return&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#pattern-matching&quot;&gt;pattern matching&lt;/a&gt; (including pattern-based switch statements), &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#out-variables&quot;&gt;inline &lt;code&gt;out&lt;/code&gt; parameter declarations&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#local-functions&quot;&gt;local functions&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#numeric-literal-syntax-improvements&quot;&gt;binary literals, digit separators&lt;/a&gt;, and &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#generalized-async-return-types&quot;&gt;arbitrary async returns&lt;/a&gt;.</source>
          <target state="translated">.NET 4.7 및 VS2017과 함께 릴리스 된 &lt;strong&gt;C # 7.0&lt;/strong&gt; (2017 년 3 월) 주요 &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7&quot;&gt;새로운 기능&lt;/a&gt; : &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#tuples&quot;&gt;튜플&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#ref-locals-and-returns&quot;&gt;참조 로컬 및 참조 리턴&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#pattern-matching&quot;&gt;패턴 일치&lt;/a&gt; (패턴 기반 스위치 명령문 포함), &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#out-variables&quot;&gt;인라인 &lt;code&gt;out&lt;/code&gt; 매개 변수 선언&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#local-functions&quot;&gt;로컬 함수&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#numeric-literal-syntax-improvements&quot;&gt;이진 리터럴, 숫자 구분 기호&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#generalized-async-return-types&quot;&gt;임의의 비동기가를 반환합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0f558164a9cd55ffa635d4ed2b01372fc8553c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 7.0&lt;/strong&gt; with Visual Studio 2017</source>
          <target state="translated">Visual Studio 2017이 포함 된 &lt;strong&gt;C # 7.0&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d7d7c6bcb94b5e203aef37b1e240005583d0596" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 7.1&lt;/strong&gt; released with VS2017 v15.3 (August 2017) New features: &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/97&quot;&gt;async main&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/415&quot;&gt;tuple member name inference&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/102&quot;&gt;default expression&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/154&quot;&gt;pattern matching with generics&lt;/a&gt;.</source>
          <target state="translated">VS2017 v15.3과 함께 릴리스 된 &lt;strong&gt;C # 7.1&lt;/strong&gt; (2017 년 8 월) 새로운 기능 : &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/97&quot;&gt;비동기 기본&lt;/a&gt; , &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/415&quot;&gt;튜플 멤버 이름 유추&lt;/a&gt; , &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/102&quot;&gt;기본 표현식&lt;/a&gt; , &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/154&quot;&gt;제네릭과 패턴 일치&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ba28cbad5ed5a3614515df92993d7efafb70089" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 7.2&lt;/strong&gt; released with VS2017 v15.5 (November 2017) New features: &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/37&quot;&gt;private protected access modifier&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/666&quot;&gt;Span&amp;lt;T&amp;gt;, aka interior pointer, aka stackonly struct&lt;/a&gt;, &lt;a href=&quot;https://github.com/dotnet/csharplang/milestone/6&quot;&gt;everything else&lt;/a&gt;.</source>
          <target state="translated">VS2017 v15.5와 함께 릴리스 된 &lt;strong&gt;C # 7.2&lt;/strong&gt; (2017 년 11 월) 새로운 기능 : &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/37&quot;&gt;개인 보호 액세스 수정 자&lt;/a&gt; , &lt;a href=&quot;https://github.com/dotnet/csharplang/issues/666&quot;&gt;Span &amp;lt;T&amp;gt;, 일명 내부 포인터, 일명 스택 전용 구조체&lt;/a&gt; 및 기타 &lt;a href=&quot;https://github.com/dotnet/csharplang/milestone/6&quot;&gt;모든 기능&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff9e03e861b0ff4c81513434bc7336a795fcbca9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 7.3&lt;/strong&gt; released with VS2017 v15.7 (May 2018). New features: &lt;a href=&quot;https://devblogs.microsoft.com/premier-developer/dissecting-new-generics-constraints-in-c-7-3/&quot;&gt;enum, delegate and &lt;code&gt;unmanaged&lt;/code&gt; generic type constraints&lt;/a&gt;. &lt;code&gt;ref&lt;/code&gt; reassignment. Unsafe improvements: &lt;code&gt;stackalloc&lt;/code&gt; initialization, unpinned indexed &lt;code&gt;fixed&lt;/code&gt; buffers, custom &lt;code&gt;fixed&lt;/code&gt; statements. Improved overloading resolution. Expression variables in initializers and queries. &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; defined for tuples. Auto-properties' backing fields can now be targeted by attributes.</source>
          <target state="translated">VS2017 v15.7 (2018 년 5 월)과 함께 릴리스 된 &lt;strong&gt;C # 7.3&lt;/strong&gt; 새로운 기능 : &lt;a href=&quot;https://devblogs.microsoft.com/premier-developer/dissecting-new-generics-constraints-in-c-7-3/&quot;&gt;열거 형, 위임 형 및 &lt;code&gt;unmanaged&lt;/code&gt; 제네릭 형식 제약 조건&lt;/a&gt; &lt;code&gt;ref&lt;/code&gt; 재 할당. 안전하지 않은 개선 : &lt;code&gt;stackalloc&lt;/code&gt; 초기화, 고정 되지 않은 인덱스 &lt;code&gt;fixed&lt;/code&gt; 버퍼, 사용자 지정 &lt;code&gt;fixed&lt;/code&gt; 문. 오버로드 해상도가 향상되었습니다. 이니셜 라이저 및 쿼리의 표현식 변수 &lt;code&gt;==&lt;/code&gt; 및 &lt;code&gt;!=&lt;/code&gt; 튜플에 대해 정의되었습니다. 자동 속성의 백업 필드는 이제 속성으로 타겟팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24c099a027b7b281bdcf3733bfa8f35a6c39cc33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 8.0&lt;/strong&gt; released with .Net Core 3.0 and VS2019 v16.3 (September 2019). Major &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8&quot;&gt;new features&lt;/a&gt;: &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/nullable-references&quot;&gt;nullable reference-types&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#asynchronous-streams&quot;&gt;Asynchronous streams&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#indices-and-ranges&quot;&gt;Indices and Ranges&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#readonly-members&quot;&gt;Readonly members&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#using-declarations&quot;&gt;using declarations&lt;/a&gt;,&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#default-interface-methods&quot;&gt;default interface methods&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#static-local-functions&quot;&gt;Static local functions&lt;/a&gt; and &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#enhancement-of-interpolated-verbatim-strings&quot;&gt;Enhancement of interpolated verbatim strings&lt;/a&gt;.</source>
          <target state="translated">.Net Core 3.0 및 VS2019 v16.3 (2019 년 9 월)과 함께 릴리스 된 &lt;strong&gt;C # 8.0&lt;/strong&gt; . &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8&quot;&gt;새로운&lt;/a&gt; 주요 기능 : &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/nullable-references&quot;&gt;널 입력 가능 참조 유형&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#asynchronous-streams&quot;&gt;비동기 스트림&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#indices-and-ranges&quot;&gt;인덱스 및 범위&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#using-declarations&quot;&gt;선언을 사용하는&lt;/a&gt; &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#readonly-members&quot;&gt;읽기 전용 멤버&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#default-interface-methods&quot;&gt;기본 인터페이스 메소드&lt;/a&gt; , &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#static-local-functions&quot;&gt;정적 로컬 함수&lt;/a&gt; 및 &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8#enhancement-of-interpolated-verbatim-strings&quot;&gt;보간 된 문자열의 향상&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4496d450b619a67605672ffba434854a9f18e742" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 8.0&lt;/strong&gt; with Visual Studio 2019</source>
          <target state="translated">Visual Studio 2019가 포함 된 &lt;strong&gt;C # 8.0&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24fa8359c77204e58387cb7c2b634b6d6ba8f7b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# Version History:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C # 버전 기록 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="150df44297363534ffd2b2bc10ea7b2ac2b6771b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; .NET development is pretty much independent of VS these days, there is no correlation between versions of each.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; .NET 개발은 요즘 VS와 거의 독립적이며 각 버전 사이에는 상관 관계가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0e36dbccea7d474e4987c2436eb072d791201450" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[source] :&lt;/strong&gt;&lt;a href=&quot;https://github.com/dotnet/csharplang/blob/master/Language-Version-History.md&quot;&gt;https://github.com/dotnet/csharplang/blob/master/Language-Version-History.md&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;[출처] :&lt;/strong&gt; &lt;a href=&quot;https://github.com/dotnet/csharplang/blob/master/Language-Version-History.md&quot;&gt;https://github.com/dotnet/csharplang/blob/master/Language-Version-History.md&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2639f77f2ffcbbe23c69fdd213bff236ef4164a" translate="yes" xml:space="preserve">
          <source>And the latest version of C# is available in &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29&quot;&gt;C# Versions&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">최신 버전의 C #은 &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29&quot;&gt;C # 버전&lt;/a&gt;&lt;/em&gt; 에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da412e663b232bb8fef830945838efd4abb5cc48" translate="yes" xml:space="preserve">
          <source>As of May 3, 2017, the C# Language Team created a history of C# versions and features on their GitHub repository: &lt;a href=&quot;https://github.com/dotnet/csharplang/blob/master/Language-Version-History.md&quot;&gt;Features Added in C# Language Versions&lt;/a&gt;. There is also &lt;a href=&quot;https://github.com/dotnet/roslyn/blob/master/docs/Language%20Feature%20Status.md&quot;&gt;a page that tracks upcoming and recently implemented language features&lt;/a&gt;.</source>
          <target state="translated">2017 년 5 월 3 일 현재 C # 언어 팀은 GitHub 리포지토리에 C # 버전 및 기능에 대한 기록을 만들었습니다. &lt;a href=&quot;https://github.com/dotnet/csharplang/blob/master/Language-Version-History.md&quot;&gt;C # 언어 버전에 추가 된 기능&lt;/a&gt; . &lt;a href=&quot;https://github.com/dotnet/roslyn/blob/master/docs/Language%20Feature%20Status.md&quot;&gt;다가오는 최신 언어 기능을 추적하는 페이지&lt;/a&gt; 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8fdfa08fd2b9acdc5f02cc5b3a7f106a207d1cbe" translate="yes" xml:space="preserve">
          <source>But further on Microsoft stopped to increment the minor version (after the dot) numbers or to have them other than zero, &lt;code&gt;0&lt;/code&gt;. Though it should be noted that C# corresponding to .NET 3.5 is named in msdn.microsoft.com as &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb383815%28v=vs.90%29.aspx&quot;&gt;&quot;Visual C# 2008 Service Pack 1&quot;&lt;/a&gt;.</source>
          <target state="translated">그러나 Microsoft는 마이너 버전 (점 뒤)을 늘리거나 0, &lt;code&gt;0&lt;/code&gt; 이외의 숫자를 갖기 위해 더 이상 중단했습니다. .NET 3.5에 해당하는 C #은 msdn.microsoft.com에서 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb383815%28v=vs.90%29.aspx&quot;&gt;&quot;Visual C # 2008 Service Pack 1&quot;&lt;/a&gt; 로 명명됩니다.</target>
        </trans-unit>
        <trans-unit id="b6b4110d2061a53c6d3489ef23b9cafddcae89ec" translate="yes" xml:space="preserve">
          <source>C# 1.0 - Visual Studio .NET 2002</source>
          <target state="translated">C # 1.0-Visual Studio .NET 2002</target>
        </trans-unit>
        <trans-unit id="81a8965bbb40ca646d6ebddbc3faafd0392b1625" translate="yes" xml:space="preserve">
          <source>C# 1.2 - Visual Studio .NET 2003</source>
          <target state="translated">C # 1.2-Visual Studio .NET 2003</target>
        </trans-unit>
        <trans-unit id="e952bb28c8c45904c784a70b684604c3b85abda7" translate="yes" xml:space="preserve">
          <source>C# 2.0&lt;code&gt;_______&lt;/code&gt;&lt;a href=&quot;http://download.microsoft.com/download/7/E/6/7E6A548C-9C20-4C80-B3B8-860FAF20887A/CSharp%204.0%20Specification.doc&quot;&gt;September 2005&lt;/a&gt;&lt;code&gt;________________&lt;/code&gt;November 2005&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">C # 2.0 &lt;code&gt;_______&lt;/code&gt; &lt;a href=&quot;http://download.microsoft.com/download/7/E/6/7E6A548C-9C20-4C80-B3B8-860FAF20887A/CSharp%204.0%20Specification.doc&quot;&gt;2005 년 9 월&lt;/a&gt; &lt;code&gt;________________&lt;/code&gt; 2005 년 11 월 &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="153fc6fd07232400cb6463461cbe6860413be871" translate="yes" xml:space="preserve">
          <source>C# 3 - Visual Studio 2008</source>
          <target state="translated">C # 3-Visual Studio 2008</target>
        </trans-unit>
        <trans-unit id="40b2e1a20b6026a62c4a48599f13bc6371adfcce" translate="yes" xml:space="preserve">
          <source>C# 3.0  corresponds (or, more correctly, can target) to:</source>
          <target state="translated">C # 3.0은 다음에 해당하거나보다 정확하게 대상을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="701164f52e5481fc09cf45c9430cecbcb8a205a3" translate="yes" xml:space="preserve">
          <source>C# 3.0&lt;code&gt;_______&lt;/code&gt;&lt;a href=&quot;http://download.microsoft.com/download/5/8/6/5868081c-68aa-40de-9a45-a3803d8134b8/CSharp_3.0_Specification.doc&quot;&gt;May 2006&lt;/a&gt;&lt;code&gt;_____________________&lt;/code&gt;November 2006&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">C # 3.0 &lt;code&gt;_______&lt;/code&gt; &lt;a href=&quot;http://download.microsoft.com/download/5/8/6/5868081c-68aa-40de-9a45-a3803d8134b8/CSharp_3.0_Specification.doc&quot;&gt;2006 년 5 월&lt;/a&gt; &lt;code&gt;_____________________&lt;/code&gt; 2006 년 11 월 &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1720d7eec946d704bcaea31aa9f4fcadf3abe26f" translate="yes" xml:space="preserve">
          <source>C# 4 - Visual Studio 2010</source>
          <target state="translated">C # 4-Visual Studio 2010</target>
        </trans-unit>
        <trans-unit id="801bd2723ced627be04980f80666bdf5a6bd83ba" translate="yes" xml:space="preserve">
          <source>C# 4.0&lt;code&gt;_______&lt;/code&gt;&lt;a href=&quot;http://download.microsoft.com/download/7/E/6/7E6A548C-9C20-4C80-B3B8-860FAF20887A/CSharp%204.0%20Specification.doc&quot;&gt;March 2009 (draft)&lt;/a&gt;&lt;code&gt;______________&lt;/code&gt;April 2010&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">C # 4.0 &lt;code&gt;_______&lt;/code&gt; &lt;a href=&quot;http://download.microsoft.com/download/7/E/6/7E6A548C-9C20-4C80-B3B8-860FAF20887A/CSharp%204.0%20Specification.doc&quot;&gt;2009 년 3 월 (초안)&lt;/a&gt; &lt;code&gt;______________&lt;/code&gt; 2010 년 4 월 &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cfd4615c4bfd5b66ef50f120a16a5ec7d5bdc13f" translate="yes" xml:space="preserve">
          <source>C# 5 - Visual Studio 2012</source>
          <target state="translated">C # 5-Visual Studio 2012</target>
        </trans-unit>
        <trans-unit id="03ae918fe2000de24209907f902b2d2de91e2947" translate="yes" xml:space="preserve">
          <source>C# 5.0; released with .NET 4.5 in August 2012</source>
          <target state="translated">C # 5.0; 2012 년 8 월 .NET 4.5와 함께 출시</target>
        </trans-unit>
        <trans-unit id="5e3eb032a8a03e13e415387c36f24cc23d2b5baa" translate="yes" xml:space="preserve">
          <source>C# 6 - Visual Studio 2015</source>
          <target state="translated">C # 6-Visual Studio 2015</target>
        </trans-unit>
        <trans-unit id="83b2f2b66ba8b4b8c8784ccaf09055999802593b" translate="yes" xml:space="preserve">
          <source>C# 6.0; released with .NET  4.6   2015</source>
          <target state="translated">C # 6.0; .NET 4.6 2015와 함께 출시</target>
        </trans-unit>
        <trans-unit id="52ab9de5f46bdbcfb114d1de460b82a60f218687" translate="yes" xml:space="preserve">
          <source>C# 7.0 - Visual Studio 2017</source>
          <target state="translated">C # 7.0-Visual Studio 2017</target>
        </trans-unit>
        <trans-unit id="73dd8fcd83feffd9b7cdf19dc21a45e87ee5b103" translate="yes" xml:space="preserve">
          <source>C# 7.0; released with .NET  4.7   2017</source>
          <target state="translated">C # 7.0; .NET 4.7 2017과 함께 출시</target>
        </trans-unit>
        <trans-unit id="4ee6cf93f9af07389f8701d5c0d1e570448681c0" translate="yes" xml:space="preserve">
          <source>C# 7.1 - Visual Studio 2017 version 15.3</source>
          <target state="translated">C # 7.1-Visual Studio 2017 버전 15.3</target>
        </trans-unit>
        <trans-unit id="fcab0a64e0217c1c203286419b21f3372ad1620b" translate="yes" xml:space="preserve">
          <source>C# 7.2 - Visual Studio 2017 version 15.5</source>
          <target state="translated">C # 7.2-Visual Studio 2017 버전 15.5</target>
        </trans-unit>
        <trans-unit id="6720190128f3f5c639caff289055a05aa9d27368" translate="yes" xml:space="preserve">
          <source>C# 7.3 - Visual Studio 2017 version 15.7</source>
          <target state="translated">C # 7.3-Visual Studio 2017 버전 15.7</target>
        </trans-unit>
        <trans-unit id="1ef2382175b1f78dd19b3add6ec1b03d1590c840" translate="yes" xml:space="preserve">
          <source>C# 8.0 - .NET Core 3.0 and Visual Studio 2019 version 16.3</source>
          <target state="translated">C # 8.0-.NET Core 3.0 및 Visual Studio 2019 버전 16.3</target>
        </trans-unit>
        <trans-unit id="e9a9b0e7b60ab95ee114b08df61cf3043036e001" translate="yes" xml:space="preserve">
          <source>C# 8.0 is the latest version of c#.it is supported only on .NET Core 3.x and newer versions. Many of the newest features require library and runtime features introduced in .NET Core 3.x</source>
          <target state="translated">C # 8.0은 최신 버전의 c # .it이며 .NET Core 3.x 이상 버전에서만 지원됩니다. 최신 기능을 많이 사용하려면 .NET Core 3.x에 도입 된 라이브러리 및 런타임 기능이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="00d956aa95057a4aff7c9efc94eadfb29b1d59ae" translate="yes" xml:space="preserve">
          <source>C# 8.0; released with .NET  4.8   2019</source>
          <target state="translated">C # 8.0; .NET 4.8 2019로 출시</target>
        </trans-unit>
        <trans-unit id="0e7f009fc2634cd9c32738b29fea48310a3032ea" translate="yes" xml:space="preserve">
          <source>C# &lt;a href=&quot;http://download.microsoft.com/download/a/9/e/a9e229b9-fee5-4c3e-8476-917dee385062/CSharp%20Language%20Specification%20v1.0.doc&quot;&gt;1.0&lt;/a&gt;/&lt;a href=&quot;http://download.microsoft.com/download/5/e/5/5e58be0a-b02b-41ac-a4a3-7a22286214ff/csharp%20language%20specification%20v1.2.doc&quot;&gt;1.2&lt;/a&gt;&lt;code&gt;____&lt;/code&gt;December 2001&lt;sup&gt;?&lt;/sup&gt;/2003&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;___________&lt;/code&gt;January 2002&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">C # &lt;a href=&quot;http://download.microsoft.com/download/a/9/e/a9e229b9-fee5-4c3e-8476-917dee385062/CSharp%20Language%20Specification%20v1.0.doc&quot;&gt;1.0&lt;/a&gt; / &lt;a href=&quot;http://download.microsoft.com/download/5/e/5/5e58be0a-b02b-41ac-a4a3-7a22286214ff/csharp%20language%20specification%20v1.2.doc&quot;&gt;1.2&lt;/a&gt; &lt;code&gt;____&lt;/code&gt; 2001 년 12 월 &lt;sup&gt;?&lt;/sup&gt; / 2003 &lt;sup&gt;?&lt;/sup&gt; &lt;code&gt;___________&lt;/code&gt; 2002 년 1 월 &lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ab887dada7c5a2054388cbe9ac79d43708943215" translate="yes" xml:space="preserve">
          <source>C# has evolved much since its first release in 2002. C# was introduced with .NET Framework 1.0.</source>
          <target state="translated">C #은 2002 년 첫 릴리스 이후 많은 발전을 거쳤습니다. C #은 .NET Framework 1.0과 함께 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="05937567ecc309324247ab9e6620d9d4a011205a" translate="yes" xml:space="preserve">
          <source>C# is a simple and powerful object-oriented programming language developed by Microsoft.</source>
          <target state="translated">C #은 Microsoft에서 개발 한 간단하고 강력한 개체 지향 프로그래밍 언어입니다.</target>
        </trans-unit>
        <trans-unit id="936a1ae7ef8285db0b54fb1e6b9d3f750ef12f5f" translate="yes" xml:space="preserve">
          <source>C# language version history:</source>
          <target state="translated">C # 언어 버전 기록 :</target>
        </trans-unit>
        <trans-unit id="53508fa51f9c6b7b224385131059d2cd71c7e72b" translate="yes" xml:space="preserve">
          <source>Comparing the MSDN articles &lt;a href=&quot;http://msdn.microsoft.com/en-US/library/7cz8t42e%28v=vs.80%29.aspx&quot;&gt;&quot;What's New in the C# 2.0 Language and Compiler&quot;&lt;/a&gt; and &quot;&lt;a href=&quot;http://msdn.microsoft.com/en-US/library/t27ahy37%28v=vs.80%29.aspx&quot;&gt;What's New in Visual C# 2005&lt;/a&gt;&quot;, it is possible to deduce that &quot;C# major_version.minor_version&quot; is coined according to the compiler's version numbering.</source>
          <target state="translated">MSDN 문서 &lt;a href=&quot;http://msdn.microsoft.com/en-US/library/7cz8t42e%28v=vs.80%29.aspx&quot;&gt;&quot;C # 2.0 언어 및 컴파일러&lt;/a&gt; &lt;a href=&quot;http://msdn.microsoft.com/en-US/library/t27ahy37%28v=vs.80%29.aspx&quot;&gt;의 새로운 기능&lt;/a&gt; &quot; 및 &quot; Visual C # 2005의 새로운 기능 &quot;을 비교하면 컴파일러 버전 번호에 따라 &quot;C # major_version.minor_version&quot;이 만들어지는 것으로 추론 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80f17d72de63bf1132923fd79363993ef08cb75f" translate="yes" xml:space="preserve">
          <source>I have included the release date of ASP.NET 5 RC1 in the table, but I've yet to include ASP.NET core 1.0 and other core versions, because I couldn't find the exact release dates. You can read more about the release dates regarding ASP.NET Core here: &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27553952/when-is-asp-net-core-1-0-asp-net-5-vnext-scheduled-for-release&quot;&gt;When is ASP.NET Core 1.0 (ASP.NET 5 / vNext) scheduled for release?&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">표에 ASP.NET 5 RC1의 릴리스 날짜를 포함 시켰지만 정확한 릴리스 날짜를 찾을 수 없기 때문에 아직 ASP.NET 코어 1.0 및 기타 코어 버전을 포함시키지 않았습니다. ASP.NET Core 관련 릴리스 날짜에 대한 자세한 내용은 다음을 참조하십시오. &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/27553952/when-is-asp-net-core-1-0-asp-net-5-vnext-scheduled-for-release&quot;&gt;ASP.NET Core 1.0 (ASP.NET 5 / vNext)은 언제 출시 될 예정입니까?&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd2d8056fe256b6d6379f0ccbc67d0cc9245e96f" translate="yes" xml:space="preserve">
          <source>I've summarised most of the versions in this table. The only ones missing should be ASP.NET Core versions. I've also added different versions of ASP.NET MVC.</source>
          <target state="translated">이 표에서 대부분의 버전을 요약했습니다. 유일하게 누락 된 것은 ASP.NET Core 버전이어야합니다. 또한 다른 버전의 ASP.NET MVC를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="68399996daca5cab519853a0bc8f3937d37d148f" translate="yes" xml:space="preserve">
          <source>In response to the OP's question:</source>
          <target state="translated">OP의 질문에 대한 답변 :</target>
        </trans-unit>
        <trans-unit id="aff36b1f815d19d9d580280f1962c79efa869de5" translate="yes" xml:space="preserve">
          <source>Note that ASP.NET 5 has been rebranded as ASP.NET Core 1.0 and ASP.NET MVC 6 has been rebranded as ASP.NET Core MVC 1.0.0. I believe this change occurred sometime around Jan 2016.</source>
          <target state="translated">ASP.NET 5는 ASP.NET Core 1.0으로 이름이 변경되었으며 ASP.NET MVC 6은 ASP.NET Core MVC 1.0.0으로 이름이 변경되었습니다. 나는이 변화가 2016 년 1 월경 쯤에 일어났다 고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="30d9ef8e94cbe33052de27bbf14679ef03588d1c" translate="yes" xml:space="preserve">
          <source>Refer to &quot;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/versions-and-dependencies&quot;&gt;.NET Framework versions and dependencies&lt;/a&gt;&quot; for more.</source>
          <target state="translated">자세한 내용은 &quot; &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/versions-and-dependencies&quot;&gt;.NET Framework 버전 및 종속성&lt;/a&gt; &quot;을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="357077a4b579aeddbdf4532b208198557e7707ab" translate="yes" xml:space="preserve">
          <source>Source - C# language versioning</source>
          <target state="translated">소스-C # 언어 버전 관리</target>
        </trans-unit>
        <trans-unit id="e41596bf770c038f6e17756d77f2e2ddd37a2614" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;http://www.mono-project.com&quot;&gt;Mono&lt;/a&gt;, and you will see that Mono 2.0 (mostly implemented version 2.0 of the .NET Framework from the ECMA specifications) supports the C# 3.0 syntax and features.</source>
          <target state="translated">&lt;a href=&quot;http://www.mono-project.com&quot;&gt;Mono를&lt;/a&gt; 살펴보면 Mono 2.0 (주로 ECMA 사양에서 .NET Framework의 2.0 버전으로 구현 됨)이 C # 3.0 구문 및 기능을 지원함을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6f1726bc852d83c9a563bf9c5b98ce5f9b9b515" translate="yes" xml:space="preserve">
          <source>The biggest problem when dealing with C#'s version numbers is the fact that it is not tied to a version of the .NET Framework, which it appears to be due to the synchronized releases between Visual Studio and the .NET Framework.</source>
          <target state="translated">C #의 버전 번호를 처리 할 때 가장 큰 문제는 Visual Studio와 .NET Framework 간의 동기화 된 릴리스 때문인 것으로 보이는 .NET Framework 버전과 관련이 없다는 사실입니다.</target>
        </trans-unit>
        <trans-unit id="ff00fd3fb6961a1783fdb58a0e9018633c5444ad" translate="yes" xml:space="preserve">
          <source>The following table lists important features introduced in each version of C#.</source>
          <target state="translated">다음 표에는 각 버전의 C #에 도입 된 중요한 기능이 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="91c5124ccd43628f9a24b49066ea4a24e0c59b43" translate="yes" xml:space="preserve">
          <source>The following table lists the target framework with version and their default C# version.</source>
          <target state="translated">다음 표는 버전 및 대상 C # 버전의 대상 프레임 워크를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2e58fb93fc62ce8dd8c451801750a1a27a523a9a" translate="yes" xml:space="preserve">
          <source>The version of C# is actually bound to the compiler, not the framework. For instance, in Visual&amp;nbsp;Studio&amp;nbsp;2008 you can write C# 3.0 and target .NET Framework 2.0, 3.0 and 3.5. The C# 3.0 nomenclature describes the version of the code syntax and supported features in the same way that &lt;a href=&quot;http://en.wikipedia.org/wiki/ANSI_C&quot;&gt;ANSI C89, C90, C99&lt;/a&gt; describe the code syntax/features for C.</source>
          <target state="translated">C #의 버전은 실제로 프레임 워크가 아닌 컴파일러에 바인딩됩니다. 예를 들어 Visual Studio 2008에서는 C # 3.0을 작성하고 .NET Framework 2.0, 3.0 및 3.5를 대상으로 할 수 있습니다. C # 3.0 명명법은 &lt;a href=&quot;http://en.wikipedia.org/wiki/ANSI_C&quot;&gt;ANSI C89, C90, C99&lt;/a&gt; 가 C의 코드 구문 / 기능을 설명하는 것과 동일한 방식으로 코드 구문의 버전과 지원되는 기능을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="957deb2f78ff50d773c84e569428f1d91ecb0ff4" translate="yes" xml:space="preserve">
          <source>There are two parallel namings: By major .NET/compiler version numbering and by Visual Studio numbering.</source>
          <target state="translated">주요 .NET / 컴파일러 버전 번호 지정과 Visual Studio 번호 지정의 두 가지 병렬 명명이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b1a113edb10d3ec68e8c77e989ecebe1806b083" translate="yes" xml:space="preserve">
          <source>There is &lt;a href=&quot;http://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29#Versions&quot;&gt;C# 1.2 corresponding to .NET  1.1 and VS 2003&lt;/a&gt; and also named as &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa289527%28v=vs.71%29.aspx&quot;&gt;Visual C# .NET 2003&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29#Versions&quot;&gt;.NET 1.1 및 VS 2003에 해당하는 C # 1.2가&lt;/a&gt; 있으며 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa289527%28v=vs.71%29.aspx&quot;&gt;Visual C # .NET 2003&lt;/a&gt; 이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="bc970d3ee80e3afb91a08ce6f69515fcc288b5e3" translate="yes" xml:space="preserve">
          <source>There is no such thing as C# 3.5 - the cause of confusion here is that the C# 3.0 is present in .NET 3.5. The language and framework are versioned independently, however - as is the CLR, which is at version 2.0 for .NET 2.0 through 3.5, .NET 4 introducing CLR 4.0, service packs notwithstanding. The CLR in .NET 4.5 has various improvements, but the versioning is unclear: in some places it may be referred to as CLR 4.5 (&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb822049.aspx&quot;&gt;this MSDN page&lt;/a&gt; used to refer to it that way, for example), but the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.environment.version&quot;&gt;&lt;code&gt;Environment.Version&lt;/code&gt;&lt;/a&gt; property still reports 4.0.xxx.</source>
          <target state="translated">C # 3.5와 같은 것은 없습니다. 혼동의 원인은 C # 3.0이 .NET 3.5에 있다는 것입니다. 그러나 언어와 프레임 워크는 독립적으로 버전이 지정됩니다. CLR과 마찬가지로 .NET 2.0에서 3.5 버전 2.0, CLR 4.0을 도입 한 .NET 4, 서비스 팩에도 적용됩니다. .NET 4.5의 CLR은 여러 가지 개선 사항이 있지만 버전 관리가 불분명합니다. 어떤 곳에서는 CLR 4.5 (예 : &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/bb822049.aspx&quot;&gt;이 MSDN 페이지에서 이러한&lt;/a&gt; 방식으로 참조하는 데 사용됨)라고 할 수 있지만 &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.environment.version&quot;&gt; &lt;code&gt;Environment.Version&lt;/code&gt; &lt;/a&gt; 속성은 여전히 보고 4.0.xxx.</target>
        </trans-unit>
        <trans-unit id="79380eae9c69c763299629259c58a6fae1c219d3" translate="yes" xml:space="preserve">
          <source>These are the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history&quot;&gt;versions of C#&lt;/a&gt; known about at the time of this writing:</source>
          <target state="translated">이 글을 쓰는 시점에 알려진 &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history&quot;&gt;C # 버전은&lt;/a&gt; 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="91f16903d8966b37551ede6c608e33a5265fd017" translate="yes" xml:space="preserve">
          <source>This is the same as most answers here, but tabularized for ease, and it has &lt;strong&gt;Visual Studio&lt;/strong&gt; and &lt;strong&gt;.NET&lt;/strong&gt; versions for completeness.</source>
          <target state="translated">이것은 대부분의 답변과 동일하지만 쉽게 표 형식으로 표시되며 완전성을 위해 &lt;strong&gt;Visual Studio&lt;/strong&gt; 및 &lt;strong&gt;.NET&lt;/strong&gt; 버전이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0add3b479889b955e1ab34a78326d63c2fbbbea2" translate="yes" xml:space="preserve">
          <source>This question is primarily to aid those who are searching for an answer using an incorrect version number, e.g. &lt;strong&gt;&lt;em&gt;C# 3.5&lt;/em&gt;&lt;/strong&gt;. The hope is that anyone failing to find an answer with the wrong version number will find &lt;em&gt;this&lt;/em&gt; question and then search again with the right version number.</source>
          <target state="translated">이 질문은 주로 잘못된 버전 번호 (예 : &lt;strong&gt;&lt;em&gt;C # 3.5)를&lt;/em&gt;&lt;/strong&gt; 사용하여 답변을 검색하는 사람들을 돕기위한 것입니다. 잘못된 버전 번호로 답을 찾지 못하면 누구나이 질문을 찾은 다음 올바른 버전 번호로 다시 검색 할 수 있기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="ece01d00cc80cc92ae1db545113abc86d9cba36d" translate="yes" xml:space="preserve">
          <source>What are the correct version numbers for C#</source>
          <target state="translated">C #의 올바른 버전 번호는 무엇입니까</target>
        </trans-unit>
        <trans-unit id="8810aa2b71bb984f0ee2e377985962a94a4f0002" translate="yes" xml:space="preserve">
          <source>What are the correct version numbers for C#? What came out when? Why can't I find any answers about &lt;strong&gt;&lt;em&gt;C# 3.5&lt;/em&gt;&lt;/strong&gt;?</source>
          <target state="translated">C #의 올바른 버전 번호는 무엇입니까? 언제 나왔어? &lt;strong&gt;&lt;em&gt;C # 3.5에&lt;/em&gt;&lt;/strong&gt; 대한 답변을 찾을 수없는 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="93a170b08816ba12d3c8929fefb1a623108632c0" translate="yes" xml:space="preserve">
          <source>What are the correct version numbers for C#? What came out when? Why can't I find any answers about C# 3.5?</source>
          <target state="translated">C #의 올바른 버전 번호는 무엇입니까? 언제 나왔어? C # 3.5에 대한 답변을 찾을 수없는 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="b53ab29948ca3202be505e940d9c3e27ac7362d5" translate="yes" xml:space="preserve">
          <source>You can check the latest C# versions &lt;a href=&quot;http://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29&quot;&gt;여기&lt;/a&gt; 에서 최신 C # 버전을 확인할 수 있습니다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
