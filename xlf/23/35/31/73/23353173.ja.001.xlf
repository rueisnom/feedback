<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/23353173">
    <body>
      <group id="23353173">
        <trans-unit id="a215145f3d3cea020467b0a82ee5677c1446ea97" translate="yes" xml:space="preserve">
          <source>. Make sure your emulator or device is selected in the &lt;code&gt;Devices&lt;/code&gt; panel. Next, try to find the stack trace, which is shown in red. There may be a lot of stuff logged into logcat, so you may need to scroll a bit. An easy way to find the stack trace is to clear the logcat (using the recycle bin on the right), and let the app crash again.</source>
          <target state="translated">。 [ &lt;code&gt;Devices&lt;/code&gt; ]パネルでエミュレータまたはデバイスが選択されていることを確認します。 次に、赤で表示されているスタックトレースを見つけます。 logcatには多くのものが記録されている可能性があるため、少しスクロールする必要がある場合があります。 スタックトレースを見つける簡単な方法は、logcatをクリアし（右側のごみ箱を使用）、アプリを再度クラッシュさせることです。</target>
        </trans-unit>
        <trans-unit id="253405e7811c600857109e7c1cf106fbb6ee4d33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.android.com/studio/command-line/logcat.html&quot;&gt;HERE&lt;/a&gt; is the Android's page about logcat</source>
          <target state="translated">&lt;a href=&quot;https://developer.android.com/studio/command-line/logcat.html&quot;&gt;こちら&lt;/a&gt;はAndroidのlogcatに関するページです</target>
        </trans-unit>
        <trans-unit id="5dcfeeee1724d0d53219254dfe0ac82132e1c799" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;About this question - obviously inspired by &lt;a href=&quot;https://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors&quot;&gt;What is a stack trace, and how can I use it to debug my application errors?&lt;/a&gt;, there are lots of questions stating that their application has crashed, without any further detail. This question aims to instruct novice Android programmers on how to try and fix their problems themselves, or ask the right questions.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;この質問について-明らかに&lt;a href=&quot;https://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors&quot;&gt;スタックトレースとは何か&lt;/a&gt;からインスピレーションを得て、それを使用してアプリケーションエラーをデバッグする方法を教えてください。&lt;/em&gt; &lt;em&gt;、それ以上の詳細なしで彼らのアプリケーションがクラッシュしたことを述べている多くの質問があります。&lt;/em&gt; &lt;em&gt;この質問は、初心なAndroidプログラマーに問題を自分で解決する方法や、適切な質問をする方法を教えることを目的としています。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1742e3f2bffc6e6b7a0ec0aaf5550830f76efeb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This answer describes the process of retrieving the stack trace. Already have the stack trace? Read up on stack traces in &quot;&lt;a href=&quot;https://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors&quot;&gt;What is a stack trace, and how can I use it to debug my application errors?&lt;/a&gt;&quot;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;この回答では、スタックトレースを取得するプロセスについて説明します。&lt;/em&gt; &lt;em&gt;スタックトレースはすでにありますか？&lt;/em&gt; &lt;em&gt;「スタックトレース&lt;a href=&quot;https://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors&quot;&gt;とは何ですか。また、それを使用してアプリケーションエラーをデバッグするにはどうすればよいですか？&lt;/a&gt; 」のスタックトレースについて読んでください。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0cb9036b6ad3c88783ffc9da95ea7d26428669a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;adb logcat &amp;gt; logcat.txt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;adb logcat&amp;gt; logcat.txt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5675776236029f09b45cdd52142ec4b52f209174" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;gradlew build &amp;gt; log.txt 2&amp;gt;details.txt&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;gradlew build &amp;gt; log.txt 2&amp;gt;details.txt&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80501ebd4a00b1d4443479dc2dcea7e4a4110d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Note 2:&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;I am considering that your device is successfully connected.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;注2：&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;デバイスが正常に接続されたと考えています。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ef8a5a042a622521e98dbe5a04d1b185d68a91f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt;&lt;em&gt; This answer is using Android Studio 2.2.2&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;注：&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;この回答はAndroid Studio 2.2.2を使用しています&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50d0c2d486e8899a547895532d7a03f049fd80af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Analyzing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Analyzing&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddaa01a990fa55c62dde6f67f0c8959b7499d799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Capturing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Capturing&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="175dd94f5456ec4928585d1666d4ec711c42cf37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Click on that blue link&lt;/strong&gt;. It should take you to where the problem occured. In my case, it was due to this line:</source>
          <target state="translated">&lt;strong&gt;その青いリンクをクリックし&lt;/strong&gt;ます。 問題が発生した場所に移動するはずです。 私の場合、それはこの行が原因でした：</target>
        </trans-unit>
        <trans-unit id="fdb78ad9807f38f53d55df3d9d555e5c753c29cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Common error during app crash like:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;次のようなアプリのクラッシュ時の一般的なエラー：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2f473bf4cebda35c92dc33ddd44a1e5d12e2e66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DOCS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;DOCS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35e122cab5bc5a5f2296f0fcf79278ece15df1f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to do that?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;どうやってするか？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80f0fb9807597a2a6d5eeca2f9c9b84f2c975e11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If that &lt;code&gt;Caused by:&lt;/code&gt;&lt;/strong&gt; DOESN'T have a line with a blue text somewhere under it, then look for another &lt;code&gt;Caused by:&lt;/code&gt; that does.</source>
          <target state="translated">&lt;strong&gt;それによって &lt;code&gt;Caused by:&lt;/code&gt; 場合：その&lt;/strong&gt;下のどこかに青いテキストを含む行がない場合は、別の &lt;code&gt;Caused by:&lt;/code&gt; 探します：それはそうです。</target>
        </trans-unit>
        <trans-unit id="d15b2fd36fa70e7af4be5d2633fec743eb796326" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Logcat&lt;/strong&gt; - &lt;strong&gt;To check the logs in the development phase of Android Studio&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Logcat&lt;/strong&gt; - &lt;strong&gt;Android Studioの開発フェーズでログを確認するには&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="015ccc4ce17285116ceb1e59b99b11b21c3f6eca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Next to&lt;/strong&gt; that &lt;code&gt;Caused By:&lt;/code&gt;, there should be the Exception that happened. In my case, it's a &lt;code&gt;RuntimeException&lt;/code&gt; and &lt;strong&gt;under it&lt;/strong&gt; there should be a line which contains a &lt;strong&gt;blue link&lt;/strong&gt; such as:</source>
          <target state="translated">その &lt;code&gt;Caused By:&lt;/code&gt; &lt;strong&gt;横に&lt;/strong&gt; 、発生した例外があるはずです。 私の場合、それは &lt;code&gt;RuntimeException&lt;/code&gt; であり、その&lt;strong&gt;下に次の&lt;/strong&gt;ような&lt;strong&gt;青いリンク&lt;/strong&gt;を含む行があるはずです 。</target>
        </trans-unit>
        <trans-unit id="1d7ddb9ca9305db3b69febe087986d85bdca4704" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Overview&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Overview&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db45c105e26924c54e27641e8f8e759270f7425f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To resolve app crash error:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;アプリのクラッシュエラーを解決するには：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c566898bec7b59122fa1b57e63ad626b0e8e296" translate="yes" xml:space="preserve">
          <source>A NULL Pointer Exception error</source>
          <target state="translated">NULL ポインタ例外エラー</target>
        </trans-unit>
        <trans-unit id="d2c34de080511b786d7d5cc7f2ccd65d6d17a517" translate="yes" xml:space="preserve">
          <source>Activity missing in AndroidManifest file.</source>
          <target state="translated">AndroidManifestファイルにアクティビティがありません。</target>
        </trans-unit>
        <trans-unit id="0a64722b73dbf88db687567ec6e39a20f5f0f6ff" translate="yes" xml:space="preserve">
          <source>After that, you find which point your app has stopped fix that from your point.</source>
          <target state="translated">その後、あなたのアプリが停止しているポイントを見つけて、あなたのポイントからそれを修正します。</target>
        </trans-unit>
        <trans-unit id="033dd6410056e382480733e4ef72f3848ccf1002" translate="yes" xml:space="preserve">
          <source>After that, you find which point your app has stopped it's very easy to solve at your side.</source>
          <target state="translated">その後、あなたのアプリが停止しているポイントを見つけて、あなたの側で解決するのは非常に簡単です。</target>
        </trans-unit>
        <trans-unit id="05801dd87ebf1885e87ebb998cbd5445d51c55a2" translate="yes" xml:space="preserve">
          <source>Also running this command in terminal can help find the problem:</source>
          <target state="translated">また、ターミナルでこのコマンドを実行すると、問題を見つけるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c950be9a99edef9700e290a8eb552cc5fc12a273" translate="yes" xml:space="preserve">
          <source>Android Debug Monitor or Android Device Monitor(type command &lt;strong&gt;monitor&lt;/strong&gt; or open through UI)</source>
          <target state="translated">AndroidデバッグモニターまたはAndroidデバイスモニター（コマンド&lt;strong&gt;モニターを&lt;/strong&gt;入力&lt;strong&gt;する&lt;/strong&gt;か、UIから開く）</target>
        </trans-unit>
        <trans-unit id="a0461b370c97320db4eadce615521905410d30a0" translate="yes" xml:space="preserve">
          <source>Android Studio</source>
          <target state="translated">アンドロイドスタジオ</target>
        </trans-unit>
        <trans-unit id="2e35d99abb3b79dd9a2eb3da6d7070300aa09a56" translate="yes" xml:space="preserve">
          <source>Basic tool from Android to collect/analyse logs is the logcat.</source>
          <target state="translated">Androidからログを収集するための基本的なツールがlogcatです。</target>
        </trans-unit>
        <trans-unit id="de29669dd9cfa902f42faca0d5a0961f1c9fbe5d" translate="yes" xml:space="preserve">
          <source>Basically I forgot to do this in my onCreate():</source>
          <target state="translated">基本的にはonCreate()でこれを忘れていました。</target>
        </trans-unit>
        <trans-unit id="63b61f586e48fd9e0db9cdb67616937af064af5e" translate="yes" xml:space="preserve">
          <source>Basically, you can MANUALLY capture logcat with following command (or just check AndroidMonitor window in AndroidStudio):</source>
          <target state="translated">基本的には以下のコマンドで手動でlogcatをキャプチャすることができます(AndroidStudioのAndroidMonitorウィンドウで確認することもできます)。</target>
        </trans-unit>
        <trans-unit id="0a3951ba0343eafdecabf813150232d982b128b2" translate="yes" xml:space="preserve">
          <source>Best way to check is through &lt;em&gt;Logcat&lt;/em&gt; if you are still developing the app in Android studio which is quick way to read stack trace and check the cause of the app.</source>
          <target state="translated">チェックする最良の方法は、Androidスタジオでアプリを開発している場合は&lt;em&gt;Logcat&lt;/em&gt;を使用することです。これは、スタックトレースを読み取ってアプリの原因をすばやく確認する方法です。</target>
        </trans-unit>
        <trans-unit id="33bdf7f2c2b74786885833f2f8002a91c9705fd4" translate="yes" xml:space="preserve">
          <source>Change &quot;&lt;code&gt;Verbose&lt;/code&gt;&quot; to &quot;&lt;code&gt;Error&lt;/code&gt;&quot; Now it will only show you logged errors. Don't worry about all these errors (if you got them) now.</source>
          <target state="translated">「 &lt;code&gt;Verbose&lt;/code&gt; 」を「 &lt;code&gt;Error&lt;/code&gt; 」に変更します。これで、ログに記録されたエラーのみが表示されます。 これらのすべてのエラーについて（気づいた場合）心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="45228be6b8846c174952bfd7d920ab01c99fd218" translate="yes" xml:space="preserve">
          <source>Check your &lt;code&gt;Logcat&lt;/code&gt; message and see your &lt;code&gt;Manifest&lt;/code&gt; file. There should be something missing like defining the &lt;code&gt;Activity,&lt;/code&gt;User permission`, etc.</source>
          <target state="translated">&lt;code&gt;Logcat&lt;/code&gt; メッセージを確認し、 &lt;code&gt;Manifest&lt;/code&gt; ファイルを確認します。 &lt;code&gt;Activity,&lt;/code&gt; 定義、ユーザー権限など、不足しているものがあるはずです。</target>
        </trans-unit>
        <trans-unit id="93cc6804d673c5d025f5b9cf57b4ad8adf474b9d" translate="yes" xml:space="preserve">
          <source>Click on the &quot;Android Monitor&quot; (The one I underlined in the image above. ^)</source>
          <target state="translated">Android Monitor」(上の画像で下線を引いたやつです ^ ^)をクリックしてください。</target>
        </trans-unit>
        <trans-unit id="38cee37d9824a785ce5a8c4f64ed33c38dd93e89" translate="yes" xml:space="preserve">
          <source>Coding mistake(Wrong use of keywords).</source>
          <target state="translated">コーディングミス(キーワードの誤用)</target>
        </trans-unit>
        <trans-unit id="044a7653226b9518e3cd49b368ae1fff859eccb2" translate="yes" xml:space="preserve">
          <source>Crash during development</source>
          <target state="translated">開発中のクラッシュ</target>
        </trans-unit>
        <trans-unit id="8b83133fa73b47680cf9c4f7367aa03ff15f5b9b" translate="yes" xml:space="preserve">
          <source>Crash in the wild</source>
          <target state="translated">荒れ狂うクラッシュ</target>
        </trans-unit>
        <trans-unit id="95caa7282da1a153114b9b5b1c59768332368e55" translate="yes" xml:space="preserve">
          <source>Declared but not defined.</source>
          <target state="translated">宣言されているが、定義されていない。</target>
        </trans-unit>
        <trans-unit id="11c60a30e428f5e98d32fbee63cced814e4b3dfb" translate="yes" xml:space="preserve">
          <source>Detailed info about the error: &lt;code&gt;Attempt to invoke virtual method 'void android.support.v4.app.FragmentActivity.onBackPressed()' on a null object reference&lt;/code&gt;</source>
          <target state="translated">エラーに関する詳細情報： &lt;code&gt;Attempt to invoke virtual method 'void android.support.v4.app.FragmentActivity.onBackPressed()' on a null object reference&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="caf9d89374f1969a1cfac09a984f329e13a721f6" translate="yes" xml:space="preserve">
          <source>Error happened in file &lt;code&gt;com.example.khan.abc.AudioFragment.java&lt;/code&gt;, inside &lt;code&gt;onClick()&lt;/code&gt; method at line: &lt;code&gt;125&lt;/code&gt; (stacktrace shows the line that error happened)</source>
          <target state="translated">&lt;code&gt;onClick()&lt;/code&gt; メソッド内のファイル &lt;code&gt;com.example.khan.abc.AudioFragment.java&lt;/code&gt; でエラーが発生しました： &lt;code&gt;125&lt;/code&gt; （スタックトレースはエラーが発生した行を示します）</target>
        </trans-unit>
        <trans-unit id="4d997704aaa124982e14877fd5a273cfca5b98f2" translate="yes" xml:space="preserve">
          <source>Every time an Android application crashes (or any Java application for that matter), a &lt;code&gt;Stack trace&lt;/code&gt; is written to the console (in this case, logcat). This stack trace contains vital information for solving your problem.</source>
          <target state="translated">Androidアプリケーションがクラッシュするたびに（または、任意のJavaアプリケーションが）、 &lt;code&gt;Stack trace&lt;/code&gt; がコンソール（この場合はlogcat）に書き込まれます。 このスタックトレースには、問題を解決するための重要な情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="1561666572b07a4184586a98a6c181774556a83c" translate="yes" xml:space="preserve">
          <source>First, you check which point your app has crashed (&lt;code&gt;Unfortunately, MyApp has stopped.&lt;/code&gt;). For this, you can use &lt;code&gt;Log.e(&quot;TAG&quot;, &quot;Message&quot;);&lt;/code&gt;, using this line you can see your app log in logcat.</source>
          <target state="translated">まず、アプリがクラッシュした時点を確認します（ &lt;code&gt;Unfortunately, MyApp has stopped.&lt;/code&gt; ）。 これには、 &lt;code&gt;Log.e(&quot;TAG&quot;, &quot;Message&quot;);&lt;/code&gt; 使用できます。 、この行を使用すると、logcatでアプリのログを確認できます。</target>
        </trans-unit>
        <trans-unit id="d806bc4aaca17be39fb201279369fc2f1cda5624" translate="yes" xml:space="preserve">
          <source>First, you need to check where and why your app has been crashed &lt;code&gt;(Unfortunately, MyApp has stopped.).&lt;/code&gt; With the help of &lt;code&gt;LOG&lt;/code&gt;, you can figure it out what went wrong.</source>
          <target state="translated">まず、アプリがクラッシュした場所と理由を確認する必要があり &lt;code&gt;(Unfortunately, MyApp has stopped.).&lt;/code&gt; &lt;code&gt;LOG&lt;/code&gt; の助けを借りて、何が問題だったかを理解することができます。</target>
        </trans-unit>
        <trans-unit id="b45ea78797c7a2395f7b5591b28a105681377df2" translate="yes" xml:space="preserve">
          <source>For more information, check on &lt;a href=&quot;https://source.android.com/devices/tech/debug&quot;&gt;https://source.android.com/devices/tech/debug&lt;/a&gt;.</source>
          <target state="translated">詳細については、 &lt;a href=&quot;https://source.android.com/devices/tech/debug&quot;&gt;https：//source.android.com/devices/tech/debugを&lt;/a&gt;確認してください 。</target>
        </trans-unit>
        <trans-unit id="2dbfd5bee894dd4b40888a05b7b4cb6cfe66c2d8" translate="yes" xml:space="preserve">
          <source>Go to the LogCat, from the drop down menu select error. This will contain all the required information to help you debug. If that doesn't help, post the LogCat as an edit to your question and somebody will help you out.</source>
          <target state="translated">LogCatに移動し、ドロップダウンメニューからエラーを選択します。これにはデバッグに必要な情報が全て含まれています。それでも解決しない場合は、質問の編集としてLogCatを投稿してください。</target>
        </trans-unit>
        <trans-unit id="fa6020b54bac56e946ea081da56066a1737a69a5" translate="yes" xml:space="preserve">
          <source>How to solve it?</source>
          <target state="translated">どうやって解決するのか?</target>
        </trans-unit>
        <trans-unit id="54025b82ef4418aadce9bed1bc66f252f8d49047" translate="yes" xml:space="preserve">
          <source>However, let's say I got another error:</source>
          <target state="translated">しかし、別のエラーが出たとしましょう。</target>
        </trans-unit>
        <trans-unit id="d315fb149fab1cd8395ba990b2ced89675e82f21" translate="yes" xml:space="preserve">
          <source>I am developing an application, and everytime I run it, I get the message:</source>
          <target state="translated">アプリを開発しているのですが、実行するたびにメッセージが出てきます。</target>
        </trans-unit>
        <trans-unit id="19f3a14eb4d6449b8fef33daffe68a058b53efd6" translate="yes" xml:space="preserve">
          <source>I checked my logcat, I clicked on the blue link it gave me, and it took me here:</source>
          <target state="translated">ログキャットをチェックして青いリンクをクリックしたら、ここにたどり着きました。</target>
        </trans-unit>
        <trans-unit id="88a512987f3bc842d45d9f2d739ad69312c7bb29" translate="yes" xml:space="preserve">
          <source>I have &lt;code&gt;private TextView mTextView&lt;/code&gt; declared at the top of my class. But, I'm not defining it.</source>
          <target state="translated">クラスの最上部で &lt;code&gt;private TextView mTextView&lt;/code&gt; 宣言されています。 しかし、私はそれを定義していません。</target>
        </trans-unit>
        <trans-unit id="91443d71fe058c7246c6bf63820d676e4f4c412f" translate="yes" xml:space="preserve">
          <source>I have found the stack trace, now what?</source>
          <target state="translated">スタックトレースを見つけました、次は何ですか?</target>
        </trans-unit>
        <trans-unit id="67ce8f0ed4e09b928cc3b10c6e963773b3132ef7" translate="yes" xml:space="preserve">
          <source>I hope I could help you someway...
Regards</source>
          <target state="translated">少しでもお役に立てればと思います...宜しくお願いします</target>
        </trans-unit>
        <trans-unit id="4196ada75f212bc56aced85dafb9c30fbcfcb254" translate="yes" xml:space="preserve">
          <source>I observe my code, now I notice something.</source>
          <target state="translated">私は自分のコードを観察して、今、私は何かに気づく。</target>
        </trans-unit>
        <trans-unit id="439b0d0551eb68bf35709af4017d645a2f68dcd4" translate="yes" xml:space="preserve">
          <source>I still can't solve my problem!</source>
          <target state="translated">未だに自分の問題が解決しない!</target>
        </trans-unit>
        <trans-unit id="ca3424c26a8bc2408c0dcd2205c505f86087274a" translate="yes" xml:space="preserve">
          <source>I suggest to use &lt;strong&gt;Android Debug Monitor&lt;/strong&gt;, it is good. Because eclipse hangs when too many logs are there, and through adb logcat filter and all difficult.</source>
          <target state="translated">&lt;strong&gt;Android Debug Monitor&lt;/strong&gt;を使用することをお勧めします。 ログが多すぎるとeclipseがハングし、adb logcatフィルターを介してすべてが困難になるためです。</target>
        </trans-unit>
        <trans-unit id="8b193b65da52d2111c6ec880a8b61b9aa975b644" translate="yes" xml:space="preserve">
          <source>If adding Permission, declare it in the &lt;code&gt;AndroidMainifest&lt;/code&gt; file as well.</source>
          <target state="translated">権限を追加する場合は、 &lt;code&gt;AndroidMainifest&lt;/code&gt; ファイルでも宣言します。</target>
        </trans-unit>
        <trans-unit id="8ecf0d0715d15784a4a750d07547cd6063466a3c" translate="yes" xml:space="preserve">
          <source>If you app is Crashing, you'll get something like:</source>
          <target state="translated">あなたのアプリがクラッシュしている場合は、次のようなものが表示されます。</target>
        </trans-unit>
        <trans-unit id="ddbf8dc90b5f70bafca4dc254288e6a08f33b9f1" translate="yes" xml:space="preserve">
          <source>If you cant see the logcat windows go to this path and open it</source>
          <target state="translated">ログキャットのウィンドウが表示されない場合は、このパスに移動して開いてください。</target>
        </trans-unit>
        <trans-unit id="9f3205a125184717e7251dee4fcdd4587a7645a0" translate="yes" xml:space="preserve">
          <source>If you don't have any kind of interesting log in your terminal (or they are not directly related to your app), maybe your problem is due to a native library. In that case, you should check for the &quot;tombstone&quot; files within your terminal.</source>
          <target state="translated">ターミナル内に興味深いログがない(またはアプリに直接関係していない)場合、問題はネイティブライブラリに原因があるかもしれません。その場合は、ターミナル内に &quot;tombstone &quot;ファイルがないか確認してください。</target>
        </trans-unit>
        <trans-unit id="e5c7dea4856e9ee58202dc5c7804e1dc39696ad0" translate="yes" xml:space="preserve">
          <source>If you don't like it, there're a lot of alternative &lt;a href=&quot;https://stackoverflow.com/q/4325073/1429387&quot;&gt;desktop log viewers for Android&lt;/a&gt;.</source>
          <target state="translated">気に入らない場合は、 &lt;a href=&quot;https://stackoverflow.com/q/4325073/1429387&quot;&gt;Android向け&lt;/a&gt;の代替デスクトップログビューアが多数あります。</target>
        </trans-unit>
        <trans-unit id="8c7f2d2fa75fdb56c72c2b65d929f90f2ab7d1d9" translate="yes" xml:space="preserve">
          <source>If you use android Studio, you can also check this &lt;a href=&quot;https://developer.android.com/studio/debug/index.html#systemLogView&quot;&gt;LINK&lt;/a&gt;.</source>
          <target state="translated">Android Studioを使用している場合は、この&lt;a href=&quot;https://developer.android.com/studio/debug/index.html#systemLogView&quot;&gt;LINK&lt;/a&gt;も確認できます。</target>
        </trans-unit>
        <trans-unit id="b83eb69188ab563f640bf55a54250e2f0a69d1a7" translate="yes" xml:space="preserve">
          <source>If you've found your &lt;code&gt;Exception&lt;/code&gt; and the line where it occurred, and still cannot figure out how to fix it, don't hesitate to ask a question on StackOverflow.</source>
          <target state="translated">&lt;code&gt;Exception&lt;/code&gt; とそれが発生した行を見つけても、それを修正する方法がわからない場合は、StackOverflowで遠慮なく質問してください。</target>
        </trans-unit>
        <trans-unit id="73d1a15151172771c84bd87d9e0bff2d278c5613" translate="yes" xml:space="preserve">
          <source>If your app for some reason crashes without good stacktrace. Try debug it from first line, and go line by line until crash. Then you will have answer, which line is causing you trouble. Proably you could then wrapp it into try catch block and print error output.</source>
          <target state="translated">スタックトレースがうまくいかずに何らかの理由でアプリがクラッシュしてしまった場合。最初の行からデバッグしてみてください。そうすれば、どの行が問題を起こしているのか、答えが出てくるはずです。おそらく、それを try catch ブロックにラップして、エラー出力を表示させることができるでしょう。</target>
        </trans-unit>
        <trans-unit id="eb6cd095ff6fbe37fdc1761a2c0845620e8c742f" translate="yes" xml:space="preserve">
          <source>If your app is already live, then you can not use &lt;em&gt;logcat&lt;/em&gt;. So, for that you can implement &lt;code&gt;Crashlytics&lt;/code&gt; to provide you bug reports of any exception that occurs.</source>
          <target state="translated">アプリがすでに&lt;em&gt;稼働して&lt;/em&gt;いる場合は、 &lt;em&gt;logcatを&lt;/em&gt;使用できません。 そのため、 &lt;code&gt;Crashlytics&lt;/code&gt; を実装して、発生した例外のバグレポートを提供できます。</target>
        </trans-unit>
        <trans-unit id="822f3d226a2c48f50362271306967b577b3a9f66" translate="yes" xml:space="preserve">
          <source>In below showToast() method you have to pass another parameter for context or application context by doing so you can try it.</source>
          <target state="translated">以下のshowToast()メソッドでは、コンテキストやアプリケーションのコンテキストに別のパラメータを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="4f4fcb7ff8e9cc0290756b411e57cf41f9eb2edf" translate="yes" xml:space="preserve">
          <source>In the bottom bar of the window, click on the &lt;code&gt;Logcat&lt;/code&gt; button. Alternatively, you can press</source>
          <target state="translated">ウィンドウの下部のバーで、[ &lt;code&gt;Logcat&lt;/code&gt; ]ボタンをクリックします。 または、</target>
        </trans-unit>
        <trans-unit id="c5ad89ddb14036e82a89584ef0b9b5e9a32aba78" translate="yes" xml:space="preserve">
          <source>In this case you need to make sure your Android manifest is configured correctly (including any manifest merging happening from a library and any activity that would come from a library), and pay particular attention to the first activity displayed in your application in your manifest files.</source>
          <target state="translated">この場合、Androidのマニフェストが正しく設定されていることを確認する必要があります(ライブラリから発生するマニフェストのマージや、ライブラリから来るであろうすべてのアクティビティを含む)。</target>
        </trans-unit>
        <trans-unit id="872a2df18969fb0fbec5afe84dc17ccf2ce04494" translate="yes" xml:space="preserve">
          <source>Initially clear the Logcat and let the app crash again so you can get only crashed log detail. You have to check the Stack trace</source>
          <target state="translated">最初はLogcatをクリアしてアプリを再度クラッシュさせ、クラッシュしたログの詳細だけを取得できるようにします。スタックトレースを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="d6c89e96e11c2e812189ce3b40908c12b8211a35" translate="yes" xml:space="preserve">
          <source>Integrate a real-time crash reporting tool such as &lt;a href=&quot;https://firebase.google.com/docs/crashlytics&quot;&gt;Firebase Crashlytics&lt;/a&gt; in order to get stacktraces of unhandled exceptions which occurred on users' devices.</source>
          <target state="translated">ユーザーのデバイスで発生した未処理の例外のスタックトレースを取得するために、 &lt;a href=&quot;https://firebase.google.com/docs/crashlytics&quot;&gt;Firebase Crashlytics&lt;/a&gt;などのリアルタイムのクラッシュレポートツールを統合します。</target>
        </trans-unit>
        <trans-unit id="f65b2cfd144efb285465e97d6056b7db23a42718" translate="yes" xml:space="preserve">
          <source>It is important to check when the issue happened... You may find several errors in a log... you must be sure that you are checking the proper messages :)</source>
          <target state="translated">問題がいつ発生したのかを確認することが重要です。ログの中にいくつかのエラーが出ているかもしれませんが、適切なメッセージをチェックしているかどうか確認してください。)</target>
        </trans-unit>
        <trans-unit id="102f4c79ac080dbbdd0c46706ccfe1f7c1801328" translate="yes" xml:space="preserve">
          <source>It was called by:</source>
          <target state="translated">によって呼ばれていました。</target>
        </trans-unit>
        <trans-unit id="50d7b95b1a368987d7d6a246469a1e31376d0211" translate="yes" xml:space="preserve">
          <source>Just check the error in log cat.</source>
          <target state="translated">ログキャットでエラーを確認するだけです。</target>
        </trans-unit>
        <trans-unit id="06cd7721c3679c8af0f607497f8d84d7562eea14" translate="yes" xml:space="preserve">
          <source>Keep in mind above points and go through it.</source>
          <target state="translated">上記のポイントを頭に入れてスルーしましょう。</target>
        </trans-unit>
        <trans-unit id="103dea4d1ae126480ab02f19de815e878441eb24" translate="yes" xml:space="preserve">
          <source>Let me share a basic Logcat analysis for when you meet a Force Close (when app stops working).</source>
          <target state="translated">Force Closeに出会った時(アプリが動かなくなった時)のための基本的なLogcatの分析を紹介します。</target>
        </trans-unit>
        <trans-unit id="5a90905e7d506db8c8dd193986908778600f2339" translate="yes" xml:space="preserve">
          <source>Log cat contains error.</source>
          <target state="translated">ログキャットにはエラーが含まれています。</target>
        </trans-unit>
        <trans-unit id="cdd1e0238b1beac2f605f13766cc3eb5d68935a3" translate="yes" xml:space="preserve">
          <source>Make sure if u create a new &lt;code&gt;activity&lt;/code&gt;, always declare the &lt;code&gt;activity&lt;/code&gt; in the &lt;code&gt;AndroidManifest&lt;/code&gt; file.</source>
          <target state="translated">新しい &lt;code&gt;activity&lt;/code&gt; 作成する場合は、必ず &lt;code&gt;AndroidManifest&lt;/code&gt; ファイルで &lt;code&gt;activity&lt;/code&gt; を宣言してください。</target>
        </trans-unit>
        <trans-unit id="ef588cf3934d257fb79c9f7060db8a795def6ea5" translate="yes" xml:space="preserve">
          <source>Make sure to mark &lt;code&gt;./logview&lt;/code&gt; and &lt;code&gt;./lib/logview.jar&lt;/code&gt; as executable when running in Linux.</source>
          <target state="translated">Linuxで実行する場合は、必ず &lt;code&gt;./logview&lt;/code&gt; および &lt;code&gt;./lib/logview.jar&lt;/code&gt; を実行可能としてマークしてください。</target>
        </trans-unit>
        <trans-unit id="d7e347b3fc3e8ee61edf8e660158c57e0941f74b" translate="yes" xml:space="preserve">
          <source>Mismatch property name.</source>
          <target state="translated">プロパティ名が不一致です。</target>
        </trans-unit>
        <trans-unit id="b90a2391f56c58af038c1b469e593390b469fe6e" translate="yes" xml:space="preserve">
          <source>Mismatch version(maybe).</source>
          <target state="translated">ミスマッチバージョン(多分)。</target>
        </trans-unit>
        <trans-unit id="3644d9a2ee229e6bbcc875c3d78e185824f51d61" translate="yes" xml:space="preserve">
          <source>Most common NullPointerException.</source>
          <target state="translated">最も一般的な NullPointerException。</target>
        </trans-unit>
        <trans-unit id="ea780c93044cc8c687a569943794cb7f73d9cdfb" translate="yes" xml:space="preserve">
          <source>Notice &lt;code&gt;Log.d&lt;/code&gt; has a first parameter,in our case &quot;AppDebug&quot;. Click on the &quot;No Filters&quot; drop down menu on the top-right of the logcat. Select &quot;Edit Filter Configuration&quot;, give a name to your filter, and in &quot;Log Tag&quot; put &quot;App Debug&quot;. Click &quot;OK&quot;. Now, you should see two lines in the logcat:</source>
          <target state="translated">&lt;code&gt;Log.d&lt;/code&gt; には最初のパラメーターがあり、この場合は「AppDebug」です。 logcatの右上にある[フィルターなし]ドロップダウンメニューをクリックします。 「フィルター構成の編集」を選択し、フィルターに名前を付け、「ログタグ」に「アプリのデバッグ」を入力します。 「OK」をクリックします。 これで、logcatに2行が表示されます。</target>
        </trans-unit>
        <trans-unit id="590fbdd857cc0f84e8f0c1231e1e45912ebd6d14" translate="yes" xml:space="preserve">
          <source>Now, like we did previously (We changed Verose to Error), we want to change &quot;Error&quot; to &quot;Debug&quot;. Since we're logging by debugging. Here's all the Log methods:</source>
          <target state="translated">さて、前回(VeroseをErrorに変更しました)と同様に、「Error」を「Debug」に変更したいと思います。デバッグしてログを取るので。ここにログのメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="d19c75bbbb75a534ae9890bdb427fbc0187ad3dd" translate="yes" xml:space="preserve">
          <source>Now, you'll get something like this:</source>
          <target state="translated">さて、こんな感じのものが出てきます。</target>
        </trans-unit>
        <trans-unit id="51f8b5e6dc0d5993aeb44478487d19e6bf3e18c9" translate="yes" xml:space="preserve">
          <source>Ok. Now, do what you did to crash your app. After your app crashes, go to your logcat. You should find a new crash log that has a lot of &lt;code&gt;at:x.x.x&lt;/code&gt;: and &lt;code&gt;Caused by: TrumpIsPresidentException&lt;/code&gt; for example. Go to that &lt;code&gt;Caused by:&lt;/code&gt; statement in your logcat.</source>
          <target state="translated">OK。 次に、アプリをクラッシュさせるために行った操作を実行します。 アプリがクラッシュしたら、logcatに移動します。 たとえば、多くの &lt;code&gt;at:x.x.x&lt;/code&gt; あり、 &lt;code&gt;Caused by: TrumpIsPresidentException&lt;/code&gt; である新しいクラッシュログを見つける必要があります。 Logcatの &lt;code&gt;Caused by:&lt;/code&gt; ステートメントに移動します。</target>
        </trans-unit>
        <trans-unit id="e09e16def7e85a8d6efa4f345125b42f782285a3" translate="yes" xml:space="preserve">
          <source>Other wise you can also check the error by executing an application in debug mode.
Firstly set breakpoint after that by doing:</source>
          <target state="translated">その他の方法としては、デバッグモードでアプリケーションを実行してエラーを確認することもできます。その後、まずブレークポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="508ddd59ad73bfef48c7b0f00d997b8c7f961a75" translate="yes" xml:space="preserve">
          <source>People make mistakes, and so coding as well.</source>
          <target state="translated">人はミスをするので、コーディングもそうです。</target>
        </trans-unit>
        <trans-unit id="293fa3251837c6b14672288ffacc9e3e38848dd4" translate="yes" xml:space="preserve">
          <source>Permission missing in AndroidManifest file.</source>
          <target state="translated">AndroidManifestファイルにパーミッションがありません。</target>
        </trans-unit>
        <trans-unit id="b548bb0f5438c7440b5c7b442ffa77801ddd4744" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://tech.trello.com/how-to-release-a-buggy-app-and-live-to-tell-the-story/&quot;&gt;How to Release a Buggy App (And Live to Tell the Tale)&lt;/a&gt; to know more about handling bugs in the field.</source>
          <target state="translated">バグのある&lt;a href=&quot;https://tech.trello.com/how-to-release-a-buggy-app-and-live-to-tell-the-story/&quot;&gt;アプリをリリースする方法（およびライブで物語を伝える方法）を&lt;/a&gt;読んで、現場でのバグ処理の詳細を確認してください。</target>
        </trans-unit>
        <trans-unit id="60666776c3e37a6b3a50de04704ebc6e4b36fb3d" translate="yes" xml:space="preserve">
          <source>Read up on stack traces in &quot;&lt;a href=&quot;https://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors&quot;&gt;What is a stack trace, and how can I use it to debug my application errors?&lt;/a&gt;&quot;</source>
          <target state="translated">「スタックトレース&lt;a href=&quot;https://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors&quot;&gt;とは何ですか。また、それを使用してアプリケーションエラーをデバッグするにはどうすればよいですか？&lt;/a&gt; 」のスタックトレースについて読んでください。</target>
        </trans-unit>
        <trans-unit id="5f42023d6505b1032cc7e6a28242ba92c8c188d6" translate="yes" xml:space="preserve">
          <source>So THAT'S why &lt;code&gt;mTextView&lt;/code&gt; is null, because I forgot to tell my app what it is. So I add that line, run my app, and now the app doesn't crash.</source>
          <target state="translated">そのため、 &lt;code&gt;mTextView&lt;/code&gt; がnullである理由は、アプリにそれを教えるのを忘れたためです。 そのため、その行を追加してアプリを実行すると、アプリがクラッシュしなくなりました。</target>
        </trans-unit>
        <trans-unit id="7838a138696b66514576fec2cb0e9824871e509f" translate="yes" xml:space="preserve">
          <source>So now we know that mTextView is null.</source>
          <target state="translated">これでmTextViewがnullであることがわかりました。</target>
        </trans-unit>
        <trans-unit id="a7defb600d35cb420d8517c6afc6f5f9faedd9d8" translate="yes" xml:space="preserve">
          <source>So, let's find out &lt;strong&gt;what is null&lt;/strong&gt;. There's two possibilities. Either &lt;code&gt;mTextView&lt;/code&gt; is null, or &lt;code&gt;myString&lt;/code&gt; is null. To find out, before the &lt;code&gt;mTextView.setText(mString)&lt;/code&gt; line, I add these two lines:</source>
          <target state="translated">それでは、 &lt;strong&gt;nullとは何かを&lt;/strong&gt;調べてみましょう。 2つの可能性があります。 &lt;code&gt;mTextView&lt;/code&gt; がnullであるか、 &lt;code&gt;myString&lt;/code&gt; がnullです。 調べるために、 &lt;code&gt;mTextView.setText(mString)&lt;/code&gt; 行の前に、次の2行を追加します。</target>
        </trans-unit>
        <trans-unit id="96053eefb7bbc2e3b9823e45ee0dbccd3ffe4879" translate="yes" xml:space="preserve">
          <source>So, now I know why it's crashing. It's because I'm throwing the exception myself. &lt;strong&gt;This was an obvious error&lt;/strong&gt;.</source>
          <target state="translated">だから、なぜそれがクラッシュしているのかわかった。 自分で例外を投げているからです。 &lt;strong&gt;これは明らかなエラー&lt;/strong&gt;でした。</target>
        </trans-unit>
        <trans-unit id="c1450c6f60c12ccd09e5e3d2d12a582ade5e3ef6" translate="yes" xml:space="preserve">
          <source>So, now I want to debug. According to &lt;a href=&quot;https://stackoverflow.com/questions/218384/what-is-a-nullpointerexception-and-how-do-i-fix-it&quot;&gt;this StackOverflow question&lt;/a&gt;, a NullPointerException says that something is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">だから今はデバッグしたい。 &lt;a href=&quot;https://stackoverflow.com/questions/218384/what-is-a-nullpointerexception-and-how-do-i-fix-it&quot;&gt;このStackOverflowの質問に&lt;/a&gt;よると、NullPointerExceptionは何かが &lt;code&gt;null&lt;/code&gt; であることを示しています 。</target>
        </trans-unit>
        <trans-unit id="bedf23ff950028539b173605cce23051ed984351" translate="yes" xml:space="preserve">
          <source>So, since we used &lt;code&gt;Log.d&lt;/code&gt;, we're checking in Debug. That's why we changed it to debug.</source>
          <target state="translated">したがって、 &lt;code&gt;Log.d&lt;/code&gt; を使用したため 、Debugをチェックインしています。 そのため、デバッグに変更しました。</target>
        </trans-unit>
        <trans-unit id="3d1ed854eb0c6a189b7566d07fae0395bb8a0191" translate="yes" xml:space="preserve">
          <source>Stack Trace: Stack Trace shows you the method invocation order... Sometimes, the error happens in the calling method (and not in the called method).</source>
          <target state="translated">スタックトレース スタックトレースを見ると、メソッドの呼び出し順がわかります...時々、エラーは呼び出されたメソッドではなく、呼び出されたメソッドで発生します。</target>
        </trans-unit>
        <trans-unit id="355c15d3884285cbe9de6e8c0623457a61fdc6ca" translate="yes" xml:space="preserve">
          <source>The Problem</source>
          <target state="translated">問題点</target>
        </trans-unit>
        <trans-unit id="fd683620086136da881a4c83473c21e4d3b35361" translate="yes" xml:space="preserve">
          <source>The default location for the tombstone files depends on every device, but if that's the case, you will have a log telling: &lt;code&gt;Tombstone written to: /data/tombstones/tombstone_06&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Tombstone written to: /data/tombstones/tombstone_06&lt;/code&gt; ファイルのデフォルトの場所はすべてのデバイスによって異なりますが、そうである場合は、ログに次の内容が記録されます。</target>
        </trans-unit>
        <trans-unit id="7f32dcb8de851ea6f95e03a73d26e7f0027e396f" translate="yes" xml:space="preserve">
          <source>The first thing you do when your application crashes is look into the LogCat, at the bottom of Android Studio there's a toolbar with a list of menus:</source>
          <target state="translated">アプリケーションがクラッシュしたときに最初にすることは、LogCatを見ることです,Android Studioの下部にはメニューのリストを持つツールバーがあります.</target>
        </trans-unit>
        <trans-unit id="0788073483e4940f0c92a536ec07804a2933b649" translate="yes" xml:space="preserve">
          <source>The most common of these is the &lt;a href=&quot;https://stackoverflow.com/questions/218384/what-is-a-nullpointerexception-and-how-do-i-fix-it&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらの中で最も一般的なのは&lt;a href=&quot;https://stackoverflow.com/questions/218384/what-is-a-nullpointerexception-and-how-do-i-fix-it&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="80622c7f8d30a36ec271e72c774f95d032248c26" translate="yes" xml:space="preserve">
          <source>There's a lot of parameters you can add to command which helps you to filter and display the message that you want... This is personal...  I always use the command below to get the message timestamp:</source>
          <target state="translated">コマンドに追加できるパラメータがたくさんあるので、フィルタリングして欲しいメッセージを表示するのに役立ちます。これは個人的なものですが...。私はいつも以下のコマンドを使ってメッセージのタイムスタンプを取得しています。</target>
        </trans-unit>
        <trans-unit id="e1bfd2fc08a018e53bc3ef828d4974c6af2f0acc" translate="yes" xml:space="preserve">
          <source>This part of the log shows you a lot of information:</source>
          <target state="translated">ログのこの部分を見ると、いろいろな情報が出てきます。</target>
        </trans-unit>
        <trans-unit id="79df7925e83cdd14cac004893edc6c721c7a6183" translate="yes" xml:space="preserve">
          <source>This popup shows only when you get a fatal exception in your code which stops the execution of the app. It could be any exception &lt;code&gt;NullPointerException&lt;/code&gt;, &lt;code&gt;OutOfMemoryException&lt;/code&gt; etc.</source>
          <target state="translated">このポップアップは、アプリの実行を停止するコードで致命的な例外が発生した場合にのみ表示されます。 例外は &lt;code&gt;NullPointerException&lt;/code&gt; 、 &lt;code&gt;OutOfMemoryException&lt;/code&gt; などです。</target>
        </trans-unit>
        <trans-unit id="32fe0adc1e4541fa0d50573cad901adc56aabf93" translate="yes" xml:space="preserve">
          <source>This was just an overview... Not all logs are simple etc... It is just to share the idea and provide a entry-level information to you...</source>
          <target state="translated">これはあくまでも概要ですが...。全てのログが単純なものなどではありません。あくまでも考え方を共有し、入門的な情報を提供するためのものです...</target>
        </trans-unit>
        <trans-unit id="a20a38e0c7e83a5c85e6c762bc2bc5be37e4aa00" translate="yes" xml:space="preserve">
          <source>This way, you know which app crashed (to be sure that you are checking the logs about your message)</source>
          <target state="translated">この方法では、どのアプリがクラッシュしたかを知ることができます(メッセージに関するログを確認していることを確認するため)。</target>
        </trans-unit>
        <trans-unit id="9b2fc463509d09fe5c9f61df50e79e71015a3baa" translate="yes" xml:space="preserve">
          <source>To see Logcat if you use &lt;strong&gt;Android Studio&lt;/strong&gt; then Press &lt;strong&gt;ALT + 6&lt;/strong&gt;
or</source>
          <target state="translated">&lt;strong&gt;Android Studio&lt;/strong&gt;を使用して&lt;strong&gt;いる&lt;/strong&gt;場合にLogcatを表示するには、 &lt;strong&gt;ALT + 6&lt;/strong&gt;または</target>
        </trans-unit>
        <trans-unit id="77f62db26434dba5e8faf629b11ac8c2cf5e83b2" translate="yes" xml:space="preserve">
          <source>Try my favourite tool &lt;a href=&quot;https://bitbucket.org/mlopatkin/android-log-viewer/downloads/&quot;&gt;logview&lt;/a&gt; to get the logs and analyze them during development.</source>
          <target state="translated">私のお気に入りのツールである&lt;a href=&quot;https://bitbucket.org/mlopatkin/android-log-viewer/downloads/&quot;&gt;logview&lt;/a&gt;を試して、ログを取得し、開発中にそれらを分析してください。</target>
        </trans-unit>
        <trans-unit id="8b5e8ea29bdb3cc571d163dd9986eae9369b15d3" translate="yes" xml:space="preserve">
          <source>Try to be as concise as possible: post the stack trace, and the &lt;em&gt;relevant&lt;/em&gt; code (e.g. a few lines up to the line which threw the &lt;code&gt;Exception&lt;/code&gt;).</source>
          <target state="translated">スタックトレースと&lt;em&gt;関連する&lt;/em&gt;コード（例： &lt;code&gt;Exception&lt;/code&gt; をスローした行までの数行）を投稿してください。</target>
        </trans-unit>
        <trans-unit id="358e8259260e0be41dd584e9c570ec1fa3963595" translate="yes" xml:space="preserve">
          <source>Unfortunately MyApp has stopped. How can I solve this</source>
          <target state="translated">残念ながらMyAppが停止してしまいました。どうすれば解決できますか?</target>
        </trans-unit>
        <trans-unit id="d45e85197d8d56de09c79faaceaf609a66c73c71" translate="yes" xml:space="preserve">
          <source>Unfortunately, MyApp has stopped.</source>
          <target state="translated">残念ながらMyAppは停止してしまいました。</target>
        </trans-unit>
        <trans-unit id="d63d3c31b541121eeefaa8fd2d6fa3300ae5c9f6" translate="yes" xml:space="preserve">
          <source>Unsupported plugin(maybe).</source>
          <target state="translated">サポートされていないプラグイン(多分)。</target>
        </trans-unit>
        <trans-unit id="5e37789cca1c6accbcf4730a8a2b43359cc39d28" translate="yes" xml:space="preserve">
          <source>Use the &lt;strong&gt;LogCat&lt;/strong&gt; and try to find what is causing the app to crash.</source>
          <target state="translated">&lt;strong&gt;LogCat&lt;/strong&gt;を使用して、アプリがクラッシュする原因を見つけてください。</target>
        </trans-unit>
        <trans-unit id="7ecf79a6a50db25f2363cb7b39de210815ca5c52" translate="yes" xml:space="preserve">
          <source>What can I do to solve this?</source>
          <target state="translated">これを解決するにはどうしたらいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="730bc33321574afd36ea5d6b24a5220cc2c0de46" translate="yes" xml:space="preserve">
          <source>When ever any &lt;code&gt;error&lt;/code&gt; happened, always check with the logcat with the text in red color however u can find out the &lt;em&gt;real problem in blue color text with underline&lt;/em&gt; in those red color text.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; が発生した場合は、必ず赤い色のテキストでlogcatを確認してください。ただし、赤い&lt;em&gt;テキストに下線が付い&lt;/em&gt;ている&lt;em&gt;青い色のテキストで実際の問題を&lt;/em&gt;見つけることができます。</target>
        </trans-unit>
        <trans-unit id="38e13f8e8cf7955dbb18d5cd8dad4d445df9ffb3" translate="yes" xml:space="preserve">
          <source>When the issue happened: &lt;code&gt;07-09 08:29:13.475&lt;/code&gt;</source>
          <target state="translated">問題が発生したとき： &lt;code&gt;07-09 08:29:13.475&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="63374e29cef2a86fc3204747d940693fb8d94cff" translate="yes" xml:space="preserve">
          <source>Which ERROR: &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;</source>
          <target state="translated">どのエラー： &lt;code&gt;java.lang.NullPointerException&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="daa96ef6aa257e22d3f231c991140b1decc77ebd" translate="yes" xml:space="preserve">
          <source>Which app crashed: &lt;code&gt;com.example.khan.abc&lt;/code&gt;</source>
          <target state="translated">クラッシュしたアプリ： &lt;code&gt;com.example.khan.abc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21412830c60fef4feb00085e0c43498e0c599f37" translate="yes" xml:space="preserve">
          <source>Which was called by:</source>
          <target state="translated">どっちが呼ばれていたのか</target>
        </trans-unit>
        <trans-unit id="754c6220126e2ae6fb6815367759ac7e33ac3d05" translate="yes" xml:space="preserve">
          <source>While, Unfortunately, MyApp has stopped. There are many reasons for it. You can check same in logs. For this, you can use the Log.e(&quot;TAG&quot;,&quot;Message&quot;);</source>
          <target state="translated">一方で、残念ながら、MyAppは停止してしまいました。原因はいろいろあります。ログで確認することができます。そのためには、Log.e(&quot;TAG&quot;,&quot;Message&quot;)を使用します。</target>
        </trans-unit>
        <trans-unit id="f3e5956d0a8b9eb2a6b2af2e84fdab84e4a5ff75" translate="yes" xml:space="preserve">
          <source>With the error, you will get the file name also in blue colour (click on them and jump to code from error is occurring).</source>
          <target state="translated">エラーが発生すると、あなたは(それらをクリックして、エラーが発生しているからコードにジャンプします)青の色でもファイル名を取得します。</target>
        </trans-unit>
        <trans-unit id="8ffc495839d6c605c379d3e2536b81f9a3fe9adc" translate="yes" xml:space="preserve">
          <source>Yay! You're halfway to solving your problem.</source>
          <target state="translated">やったー!問題解決への道のりが半分になりましたね。</target>
        </trans-unit>
        <trans-unit id="8c7256f8b6ec7a4a0c3583a8ef39b5779ab79921" translate="yes" xml:space="preserve">
          <source>You can also get this error message on its own, without any stack trace or any further error message.</source>
          <target state="translated">また、スタックトレースやそれ以上のエラーメッセージを出さずに、このエラーメッセージを単体で取得することもできます。</target>
        </trans-unit>
        <trans-unit id="5c4f1fbe371e86c7e60d41a644f8fa9ca0209e7a" translate="yes" xml:space="preserve">
          <source>You can redirect the output to a file and analyze it in a Text Editor.</source>
          <target state="translated">出力をファイルにリダイレクトして、テキストエディタで解析することができます。</target>
        </trans-unit>
        <trans-unit id="2bbaeafa73b769ebeeb4e48bfbed2f8b07135ec0" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://developer.android.com/studio/command-line/adb.html&quot;&gt;Google's ADB tool&lt;/a&gt; to get &lt;code&gt;Logcat file&lt;/code&gt; to analyze the issue.</source>
          <target state="translated">&lt;a href=&quot;https://developer.android.com/studio/command-line/adb.html&quot;&gt;GoogleのADBツール&lt;/a&gt;を使用して &lt;code&gt;Logcat file&lt;/code&gt; を取得し、問題を分析できます 。</target>
        </trans-unit>
        <trans-unit id="808687efe8119b3dd0df760db07c0f1214005789" translate="yes" xml:space="preserve">
          <source>You can use any of these tools:</source>
          <target state="translated">これらのツールのいずれかを使用することができます。</target>
        </trans-unit>
        <trans-unit id="58d79c27153ba64668e6631c06f5326ae336e525" translate="yes" xml:space="preserve">
          <source>You get the log cat option from in eclipse:</source>
          <target state="translated">eclipseではlog catオプションを取得しています。</target>
        </trans-unit>
        <trans-unit id="51f7668bf058d16687ae548cdac338b29f5c14c2" translate="yes" xml:space="preserve">
          <source>You have to check the &lt;code&gt;Stack trace&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Stack trace&lt;/code&gt; を確認する必要があります</target>
        </trans-unit>
        <trans-unit id="942d746ede39abc185f1cb553adc9bde9d8d0e7e" translate="yes" xml:space="preserve">
          <source>You only need to find out what exactly made your application crash, by analyzing the stack trace.</source>
          <target state="translated">スタックトレースを分析することで、アプリケーションをクラッシュさせた原因を見つける必要があります。</target>
        </trans-unit>
        <trans-unit id="b46437cb509dca24b70d4342f75a99a3ae41e008" translate="yes" xml:space="preserve">
          <source>You tried to call method &lt;code&gt;onBackPressed()&lt;/code&gt; from a &lt;code&gt;FragmentActivity&lt;/code&gt; object. However, that object was &lt;code&gt;null&lt;/code&gt; when you did it.</source>
          <target state="translated">&lt;code&gt;FragmentActivity&lt;/code&gt; オブジェクトからメソッド &lt;code&gt;onBackPressed()&lt;/code&gt; を呼び出そうとしました。 ただし、その場合、そのオブジェクトは &lt;code&gt;null&lt;/code&gt; でした。</target>
        </trans-unit>
        <trans-unit id="301243d9f882c32abe82947fd97e9e261424e784" translate="yes" xml:space="preserve">
          <source>Your application quit because an uncaught &lt;code&gt;RuntimeException&lt;/code&gt; was thrown.</source>
          <target state="translated">キャッチされていない &lt;code&gt;RuntimeException&lt;/code&gt; がスローされたため、アプリケーションが終了しました。</target>
        </trans-unit>
        <trans-unit id="ae0a6d876e07c940c8c6a773ab9a3af5889acaaa" translate="yes" xml:space="preserve">
          <source>adb logcat</source>
          <target state="translated">アドビログキャット</target>
        </trans-unit>
        <trans-unit id="29c80bbab5b1d70a1b50ce24d80be82fb94af6ab" translate="yes" xml:space="preserve">
          <source>adb logcat &amp;gt; logs.txt (you can use editors to open and search errors.)</source>
          <target state="translated">adb logcat&amp;gt; logs.txt（エディターを使用してエラーを開き、検索できます。）</target>
        </trans-unit>
        <trans-unit id="325562c769da3f80d0e63bb56514bc2e2723c9b5" translate="yes" xml:space="preserve">
          <source>alt</source>
          <target state="translated">alt</target>
        </trans-unit>
        <trans-unit id="2be35c13df79ebc096b072e312fcd5735912c6f0" translate="yes" xml:space="preserve">
          <source>at com.example.khan.abc.AudioFragment$1.onClick(AudioFragment.java:125)</source>
          <target state="translated">at com.example.khan.abc.AudioFragment$1.onClick(AudioFragment.java:125)</target>
        </trans-unit>
        <trans-unit id="3c188fcb768144032d8f47d179581d181095c8b8" translate="yes" xml:space="preserve">
          <source>eclipse logcat (If not visible in eclipse, Go to Windows-&amp;gt;Show View-&amp;gt;Others-&amp;gt;Android-&amp;gt;LogCat)</source>
          <target state="translated">eclipse logcat（eclipseに表示されない場合は、Windows-&amp;gt; Show View-&amp;gt; Others-&amp;gt; Android-&amp;gt; LogCatに移動します）</target>
        </trans-unit>
        <trans-unit id="e8d7f36a6be00bd41ceb44237294a90b66899f40" translate="yes" xml:space="preserve">
          <source>etc....</source>
          <target state="translated">etc....</target>
        </trans-unit>
        <trans-unit id="1c92a7dc8f2ecf8f17067c681dc8a388c4d93ff4" translate="yes" xml:space="preserve">
          <source>if you are using Google-Api go to this path</source>
          <target state="translated">Google-APIを使用している場合は、このパスに移動します。</target>
        </trans-unit>
        <trans-unit id="1ff187142dffb2a9d2fba35bc1de0dcb32cd9083" translate="yes" xml:space="preserve">
          <source>if you use &lt;strong&gt;Eclipse&lt;/strong&gt; then 
&lt;strong&gt;Window -&amp;gt; Open Perspective -&amp;gt; Other - LogCat&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Eclipse&lt;/strong&gt;を使用している場合は、 &lt;strong&gt;ウィンドウ-&amp;gt;パースペクティブを開く-&amp;gt;その他-LogCat&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c5dbe21bfa7d2b49d5bab64c142ea8053307306" translate="yes" xml:space="preserve">
          <source>on Your IDE Check the windows form LOGCAT</source>
          <target state="translated">あなたのIDE上で ウィンドウのフォームLOGCATを確認してください。</target>
        </trans-unit>
        <trans-unit id="f6de1d309b43f69118c378e05edeb7cafe02ca80" translate="yes" xml:space="preserve">
          <source>open &lt;code&gt;logcat.txt&lt;/code&gt; file and search for your application name. There should be information on why it failed, the line number, Class name, etc.</source>
          <target state="translated">&lt;code&gt;logcat.txt&lt;/code&gt; ファイルを開き、アプリケーション名を検索します。 失敗した理由、行番号、クラス名などの情報があるはずです。</target>
        </trans-unit>
        <trans-unit id="98b156eea2c8e8eac12be56072d82f362c6dcbff" translate="yes" xml:space="preserve">
          <source>right click on project-&amp;gt;debug as-&amp;gt;Android application</source>
          <target state="translated">プロジェクトを右クリック-&amp;gt;デバッグ-&amp;gt; Androidアプリケーション</target>
        </trans-unit>
        <trans-unit id="bc3cd611361993934f5cbe26b39e40729e521cb6" translate="yes" xml:space="preserve">
          <source>then you should go to gradlew file location in read two above log files.</source>
          <target state="translated">その場合は、上の二つのログファイルを読んで、 gradlew ファイルの場所に行く必要があります。</target>
        </trans-unit>
        <trans-unit id="685449ca44465887f7eb9a9a7b5231a91c8e5260" translate="yes" xml:space="preserve">
          <source>which was called by:</source>
          <target state="translated">によって呼ばれていた。</target>
        </trans-unit>
        <trans-unit id="b42a08daacc13ebac0acb4532b5c80eab0089f65" translate="yes" xml:space="preserve">
          <source>window-&amp;gt;show view-&amp;gt;others-&amp;gt;Android-&amp;gt;Logcat</source>
          <target state="translated">ウィンドウ-&amp;gt;ビューを表示-&amp;gt;その他-&amp;gt; Android-&amp;gt; Logcat</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
