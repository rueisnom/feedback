<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/23740548">
    <body>
      <group id="23740548">
        <trans-unit id="46eec30438cc774dfe89ee6fc8322ef329974f81" translate="yes" xml:space="preserve">
          <source>-After trying this for a while</source>
          <target state="translated">-После того,как я попробую.-После того,как я попробую.-После того,как я попробую.</target>
        </trans-unit>
        <trans-unit id="862341ae9494327cda571a07ef73a817052026e7" translate="yes" xml:space="preserve">
          <source>1. Use AJAX to get the data you need from the server</source>
          <target state="translated">1.Используйте AJAX,чтобы получить необходимые данные с сервера.</target>
        </trans-unit>
        <trans-unit id="d4c2d7c60449a4e8a50591946728b8a55af5c574" translate="yes" xml:space="preserve">
          <source>2. Echo the data into the page somewhere, and use JavaScript to get the information from the DOM</source>
          <target state="translated">2.Эхо данных где-нибудь на странице,и использовать JavaScript для получения информации из DOM</target>
        </trans-unit>
        <trans-unit id="d546fa1ec8ac92e73b01fef0eec4306cdbb7922b" translate="yes" xml:space="preserve">
          <source>3. Echo the data directly to JavaScript</source>
          <target state="translated">3.Эхо данных непосредственно на JavaScript</target>
        </trans-unit>
        <trans-unit id="8ad8c9c0edec3fbde987709801a7a144ff369744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.php.net/manual/en/function.setcookie.php&quot;&gt;Setting a cookie&lt;/a&gt; is really not very difficult, you just assign it a value:</source>
          <target state="translated">&lt;a href=&quot;http://www.php.net/manual/en/function.setcookie.php&quot;&gt;Настройка cookie&lt;/a&gt; действительно не очень сложна, вы просто присваиваете ей значение:</target>
        </trans-unit>
        <trans-unit id="ccb0fc54a2d30cd9681fbe79d88f9fb00705ace9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$PHPVar&lt;/code&gt; encoded as UTF-8, Unicode.</source>
          <target state="translated">&lt;code&gt;$PHPVar&lt;/code&gt; в кодировке UTF-8, Unicode.</target>
        </trans-unit>
        <trans-unit id="e6aa5105da17aeb29cfb7228192ee1fe3f079c69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest&quot;&gt;Using XMLHttpRequest - MDN&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest&quot;&gt;Использование XMLHttpRequest - MDN&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12538cb28bb57e2de5e2e36e792f1d468f0b79e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest&quot;&gt;XMLHttpRequest object reference - MDN&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest&quot;&gt;Ссылка на объект XMLHttpRequest - MDN&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fef4cf36ef38d6a43241496d862b3b0e14229d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14220321/how-to-return-the-response-from-an-ajax-call&quot;&gt;How do I return the response from an asynchronous call?&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14220321/how-to-return-the-response-from-an-ajax-call&quot;&gt;Как мне вернуть ответ от асинхронного вызова?&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc8002d44629e19fb8be35797acc3d6a95bf69ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Allows for asynchronous data transfer&lt;/strong&gt; - Getting the information from PHP might be time/resources expensive. Sometimes you just don't want to wait for the information, load the page, and have the information reach whenever.</source>
          <target state="translated">&lt;strong&gt;Позволяет асинхронную передачу данных.&lt;/strong&gt; Получение информации из PHP может быть дорогостоящим. Иногда вы просто не хотите ждать информацию, загружать страницу и получать информацию в любое время.</target>
        </trans-unit>
        <trans-unit id="10c7bb50f381a1578a2d3b11326496c69af1ab61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Better separation between layers&lt;/strong&gt; - If tomorrow you stop using PHP, and want to move to a servlet, a REST API, or some other service, you don't have to change much of the JavaScript code.</source>
          <target state="translated">&lt;strong&gt;Лучшее разделение между слоями&lt;/strong&gt; - если завтра вы перестанете использовать PHP и захотите перейти на сервлет, REST API или какой-либо другой сервис, вам не придется менять большую часть кода JavaScript.</target>
        </trans-unit>
        <trans-unit id="af5e48ceb48ed07de598bfb063f04f1de1679311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Data is not directly found on the markup&lt;/strong&gt; - This means that your markup is kept clean of any additional data, and only JavaScript sees it.</source>
          <target state="translated">&lt;strong&gt;Данные не находятся непосредственно в разметке&lt;/strong&gt; - это означает, что ваша разметка хранится в чистоте от любых дополнительных данных, и только JavaScript видит их.</target>
        </trans-unit>
        <trans-unit id="e760b2ca0e6a5121c1ae41a18ca3fbeffb5c5f64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Dirties up the Source&lt;/strong&gt; - Data that PHP generates is outputted directly to the HTML source, meaning that you get a bigger and less focused HTML source.</source>
          <target state="translated">&lt;strong&gt;Загрязнение источника&lt;/strong&gt; - данные, которые генерирует PHP, выводятся непосредственно в источник HTML, что означает, что вы получаете больший и менее сфокусированный источник HTML.</target>
        </trans-unit>
        <trans-unit id="d23c2645362bec7cbfffeaa8030ab34246141ca0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Does not dirty source&lt;/strong&gt; - Variables are outputted directly to JavaScript, so the DOM is not affected.</source>
          <target state="translated">&lt;strong&gt;Не изменяет исходный код&lt;/strong&gt; - переменные выводятся непосредственно в JavaScript, поэтому DOM не затрагивается.</target>
        </trans-unit>
        <trans-unit id="4f1f2d1ba0a7e969d5df6fdb8a7f2b397072df69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;EDIT&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8efcde412aa0784b1cf3438ab9e0970583f8316" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Encode the variable as JSON&lt;/strong&gt; - JSON looks very close to JavaScript objects and &lt;em&gt;most&lt;/em&gt; JSON objects are valid JavaScript variables.</source>
          <target state="translated">&lt;strong&gt;Кодируйте переменную как JSON&lt;/strong&gt; - JSON выглядит очень близко к объектам JavaScript, и &lt;em&gt;большинство&lt;/em&gt; объектов JSON являются допустимыми переменными JavaScript.</target>
        </trans-unit>
        <trans-unit id="b00a400c5865b38d4a89f1b5a752e46beb1ee71a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fast&lt;/strong&gt; - DOM operations are often quick, and you can store and access a lot of data relatively quickly.</source>
          <target state="translated">&lt;strong&gt;Быстро&lt;/strong&gt; - операции DOM часто бывают быстрыми, и вы можете хранить и получать доступ к большому количеству данных относительно быстро.</target>
        </trans-unit>
        <trans-unit id="733b3e090efc1ab3767d95e0ec4f08a1357ab427" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Harder to get structured data&lt;/strong&gt; - Structured data will have to be valid HTML, otherwise you'll have to escape and convert strings yourself.</source>
          <target state="translated">&lt;strong&gt;Труднее получить структурированные данные&lt;/strong&gt; - структурированные данные должны быть действительными HTML, в противном случае вам придется самостоятельно экранировать и преобразовывать строки.</target>
        </trans-unit>
        <trans-unit id="34128605373047345591619006457e85b5c1f1b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JS&lt;/strong&gt;&lt;em&gt;(yourexternal.js)&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;JS&lt;/strong&gt;&lt;em&gt;(yourexternal.js)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c84101ad7c4a0f6775e58c6652b6c6ae94763990" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Latency&lt;/strong&gt; - AJAX creates an HTTP request, and HTTP requests are carried over network and have network latencies.</source>
          <target state="translated">&lt;strong&gt;Задержка&lt;/strong&gt; - AJAX создает HTTP-запрос, а HTTP-запросы передаются по сети и имеют сетевые задержки.</target>
        </trans-unit>
        <trans-unit id="d080282a7ebce3dc7e3a2709dd1cf6ce26546537" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;More readable&lt;/strong&gt; - JavaScript is JavaScript, PHP is PHP. Without mixing the two, you get more readable code on both languages.</source>
          <target state="translated">&lt;strong&gt;Более читабельно&lt;/strong&gt; - JavaScript - это JavaScript, PHP - это PHP. Не смешивая их, вы получите более читаемый код на обоих языках.</target>
        </trans-unit>
        <trans-unit id="f8e01739d5b6815e58b82ad6033855dbc821cb51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OR&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;OR&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b86f02d233610bf5027dc98685331fe1c7e25ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OUTPUT&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;OUTPUT&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="226c6d195092d25e48f4779200988ceb25b71b01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Output&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="c0ea0dc97baa1d4c675361104fa844e8cea6bf02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f95e90683350b47754a297318c573269d8508ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Postscript:&lt;/strong&gt; You have to be &lt;em&gt;very&lt;/em&gt; aware of XSS attack vectors when you inject anything from PHP to JavaScript. It's &lt;em&gt;very&lt;/em&gt; hard to escape values properly and it's context sensitive. If you're unsure how to deal with XSS, or unaware of it - please read &lt;a href=&quot;https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)&quot;&gt;this OWASP article&lt;/a&gt;, &lt;a href=&quot;https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet&quot;&gt;this one&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/questions/71328/what-are-the-best-practices-for-avoiding-xss-attacks-in-a-php-site&quot;&gt;this question&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Постскриптум:&lt;/strong&gt; Вы должны &lt;em&gt;очень хорошо&lt;/em&gt; знать векторы атак XSS, когда вводите что-либо из PHP в JavaScript. &lt;em&gt;Очень&lt;/em&gt; трудно правильно избежать значений и это зависит от контекста. Если вы не знаете, как обращаться с XSS, или не знаете об этом - прочитайте &lt;a href=&quot;https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)&quot;&gt;эту статью OWASP&lt;/a&gt; , &lt;a href=&quot;https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet&quot;&gt;эту&lt;/a&gt; и &lt;a href=&quot;https://stackoverflow.com/questions/71328/what-are-the-best-practices-for-avoiding-xss-attacks-in-a-php-site&quot;&gt;этот вопрос&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="008d12f30693a6dfdddb775daaf95b3aec1f33b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Potentially Unsemantic Markup&lt;/strong&gt; - Usually, what happens is that you use some sort of &lt;code&gt;&amp;lt;input type=hidden&amp;gt;&lt;/code&gt; to store the information, because it's easier to get the information out of &lt;code&gt;inputNode.value&lt;/code&gt;, but doing so means that you have a meaningless element in your HTML. HTML has the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; element for data about the document, and HTML 5 introduces &lt;code&gt;data-*&lt;/code&gt; attributes for data specifically for reading with JavaScript that can be associated with particular elements.</source>
          <target state="translated">&lt;strong&gt;Потенциально несемантическая разметка&lt;/strong&gt; - обычно происходит то, что вы используете какой-то &lt;code&gt;&amp;lt;input type=hidden&amp;gt;&lt;/code&gt; для хранения информации, потому что легче получить информацию из &lt;code&gt;inputNode.value&lt;/code&gt; , но это означает, что у вас есть бессмысленный элемент в ваш HTML. HTML имеет элемент &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; для данных о документе, а HTML 5 вводит атрибуты &lt;code&gt;data-*&lt;/code&gt; для данных специально для чтения с помощью JavaScript, которые можно связать с конкретными элементами.</target>
        </trans-unit>
        <trans-unit id="298deaf78fc9d84f89b8dd403d2b57c8597230b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;STEP 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ШАГ 1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf565f25a6f29853f22c43df4846df3d2f59f474" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;STEP 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ШАГ 2&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb67fb2211bcefe810184c828bb2d3f1c746b855" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Set a cookie&lt;/strong&gt; - cookies are headers sent in HTTP requests that both the server and client can read.</source>
          <target state="translated">&lt;strong&gt;Установить cookie&lt;/strong&gt; - &lt;strong&gt;cookie&lt;/strong&gt; - это заголовки, отправляемые в HTTP-запросах, которые могут прочитать и сервер, и клиент.</target>
        </trans-unit>
        <trans-unit id="b1a93cc84e675d25be823ba0798f571385163387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simply use one of the following methods.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Просто используйте один из следующих методов.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1c6d882c37f5a67c2e26e186fe16ff93e4ba82f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;State&lt;/strong&gt; - Data fetched via a separate HTTP request won't include any information from the HTTP request that fetched the HTML document. You may need this information (e.g., if the HTML document is generated in response to a form submission) and, if you do, will have to transfer it across somehow. If you have ruled out embedding the data in the page (which you have if you are using this technique) then that limits you to cookies/sessions which may be subject to race conditions.</source>
          <target state="translated">&lt;strong&gt;Состояние&lt;/strong&gt; - данные, извлеченные с помощью отдельного HTTP-запроса, не будут содержать никакой информации из HTTP-запроса, извлекшего HTML-документ. Вам может понадобиться эта информация (например, если документ HTML генерируется в ответ на отправку формы), и, если вы это сделаете, вам придется каким-то образом передавать ее. Если вы исключили возможность встраивания данных на страницу (которая у вас есть, если вы используете эту технику), то это ограничивает вас файлами cookie / сессиями, которые могут зависеть от условий гонки.</target>
        </trans-unit>
        <trans-unit id="fe8449584afd652ee96e5a74a972156ec3b9cf1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tightly couples PHP to your data logic&lt;/strong&gt; - Because PHP is used in presentation, you can't separate the two cleanly.</source>
          <target state="translated">&lt;strong&gt;Сильно связывает PHP с логикой данных&lt;/strong&gt; - поскольку PHP используется в презентации, вы не можете четко разделить их.</target>
        </trans-unit>
        <trans-unit id="aad7c87eb312788d6d0ca28c9179b01c72dc28de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Very easily implemented&lt;/strong&gt; - It takes very little to implement this, and understand.</source>
          <target state="translated">&lt;strong&gt;Очень легко реализуемо&lt;/strong&gt; - требуется очень мало, чтобы реализовать это и понять.</target>
        </trans-unit>
        <trans-unit id="d0c4ef37b3faa43c6825a3a747130178439dac04" translate="yes" xml:space="preserve">
          <source>A complete tutorial can be found &lt;a href=&quot;http://qnimate.com/assign-javascript-variables-using-wordpressphp/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Полный учебник можно найти &lt;a href=&quot;http://qnimate.com/assign-javascript-variables-using-wordpressphp/&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c439e86e818ec76af3a3fd77e3e1a18e5ad28b4e" translate="yes" xml:space="preserve">
          <source>After much research, I found the easiest method is to pass all kinds of variables easily.</source>
          <target state="translated">После долгих исследований я нашел самый простой метод-легко передавать все виды переменных.</target>
        </trans-unit>
        <trans-unit id="c74b4cb177cfc424544fa7f4912bde5042a2cef3" translate="yes" xml:space="preserve">
          <source>Also you should note that the PHP code output is insecure and should be filtered with &lt;code&gt;json_encode()&lt;/code&gt;.</source>
          <target state="translated">Также вы должны заметить, что вывод PHP-кода небезопасен и должен фильтроваться с помощью &lt;code&gt;json_encode()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69949a2d3916283fd36fd850404fc48c56ce668b" translate="yes" xml:space="preserve">
          <source>Although it works, however it slows down the performance. As PHP is a server-side script while JavaScript is a user side.</source>
          <target state="translated">Хотя это и работает,но замедляет производительность.Поскольку PHP является серверным скриптом,а JavaScript-пользовательским.</target>
        </trans-unit>
        <trans-unit id="7820f70754b5d5e61dd409d6ef8b1bba8fc3fb87" translate="yes" xml:space="preserve">
          <source>Am I writing a website or an application?</source>
          <target state="translated">Я пишу сайт или заявку?</target>
        </trans-unit>
        <trans-unit id="a01e33f4dcdb6ba1ae9f34a97cf8f6deeedf1a8d" translate="yes" xml:space="preserve">
          <source>And</source>
          <target state="translated">And</target>
        </trans-unit>
        <trans-unit id="29023f9af8c36cba36059ee86f933ef640033d91" translate="yes" xml:space="preserve">
          <source>And your JavaScript code looks like this:</source>
          <target state="translated">И ваш код JavaScript выглядит так:</target>
        </trans-unit>
        <trans-unit id="cd368b723a066eda6d70720191b43b06f7eda3f8" translate="yes" xml:space="preserve">
          <source>And, &lt;code&gt;print_scripts()&lt;/code&gt; method of the above example will send this output:</source>
          <target state="translated">И метод &lt;code&gt;print_scripts()&lt;/code&gt; приведенного выше примера отправит этот вывод:</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="8fd06dd0460aa42824404dde19644aba3a0c2914" translate="yes" xml:space="preserve">
          <source>As @Second Rikudo points out, for it to work correctly &lt;code&gt;$val&lt;/code&gt; would need to contain the closing parenthesis, for example: &lt;code&gt;$val=&quot;42);&quot;&lt;/code&gt;</source>
          <target state="translated">Как указывает @Second Rikudo, для правильной работы &lt;code&gt;$val&lt;/code&gt; должна содержать закрывающую скобку, например: &lt;code&gt;$val=&quot;42);&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="82152b3e2ef4efcab6d6236fa8d91f4468fa798e" translate="yes" xml:space="preserve">
          <source>As other commenters have stated, AJAX is one possible solution, but the cons outweigh the pros: it has a latency and it is harder to program (it needs the code to retrieve the value both server- and client-side), when a simpler escaping function should suffice.</source>
          <target state="translated">Как отмечали другие комментаторы,AJAX является одним из возможных решений,но недостатки перевешивают плюсы:у него есть задержка и его труднее программировать (ему нужен код для получения значения как со стороны сервера,так и со стороны клиента),когда более простой экранирующей функции должно быть достаточно.</target>
        </trans-unit>
        <trans-unit id="164c63d22cd065bb4bc3fc7baf2dbd2ec61a2357" translate="yes" xml:space="preserve">
          <source>As per your code</source>
          <target state="translated">В соответствии с вашим кодом</target>
        </trans-unit>
        <trans-unit id="3a44722e596bef5ceddfae3350cdd1b6136ffdd1" translate="yes" xml:space="preserve">
          <source>Assuming &lt;code&gt;$value&lt;/code&gt; is &lt;code&gt;json_encode&lt;/code&gt;able on the PHP side (it usually is). This technique is what Stack Overflow does with its chat for example (only using .NET instead of PHP).</source>
          <target state="translated">Предполагая, что &lt;code&gt;$value&lt;/code&gt; способен &lt;code&gt;json_encode&lt;/code&gt; на стороне PHP (обычно это так). Эта техника - то, что Stack Overflow делает, например, со своим чатом (только с использованием .NET вместо PHP).</target>
        </trans-unit>
        <trans-unit id="c118b0b0e835e36366353b7b99dc3946b9eed95e" translate="yes" xml:space="preserve">
          <source>Because I didn't notice the missing parenthesis in &lt;code&gt;myPlugin.start(&amp;lt;?=$val?&amp;gt;&lt;/code&gt; :-\</source>
          <target state="translated">Потому что я не заметил пропущенных скобок в &lt;code&gt;myPlugin.start(&amp;lt;?=$val?&amp;gt;&lt;/code&gt; : - \</target>
        </trans-unit>
        <trans-unit id="64f754f22c7ea2f537581583a9e1795173d0aedb" translate="yes" xml:space="preserve">
          <source>But in JavaScript this is a syntax error.</source>
          <target state="translated">Но в JavaScript это синтаксическая ошибка.</target>
        </trans-unit>
        <trans-unit id="d1a608b56b4924aac3d153ca85219dcb34e76a9e" translate="yes" xml:space="preserve">
          <source>But there's a big gotcha. If you're using it in events, you need to run &lt;code&gt;htmlspecialchars()&lt;/code&gt; on the result in order to make it correct code. And then you have to either be careful to use double quotes to enclose the event, or always add &lt;code&gt;ENT_QUOTES&lt;/code&gt; to htmlspecialchars. For example:</source>
          <target state="translated">Но есть большая ошибка. Если вы используете его в событиях, вам нужно запустить &lt;code&gt;htmlspecialchars()&lt;/code&gt; для результата, чтобы сделать его правильным кодом. И затем вы должны быть осторожны, используя двойные кавычки для включения события, или всегда добавлять &lt;code&gt;ENT_QUOTES&lt;/code&gt; в htmlspecialchars. Например:</target>
        </trans-unit>
        <trans-unit id="317f903d7b7564d2ab36ba047922882bbb8794a6" translate="yes" xml:space="preserve">
          <source>Call &lt;em&gt;AJAX&lt;/em&gt; to recieve &lt;em&gt;JSON&lt;/em&gt; file</source>
          <target state="translated">Вызовите &lt;em&gt;AJAX&lt;/em&gt; для получения файла &lt;em&gt;JSON&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0fce782e49b19de850642908a7ec08707b6cfa53" translate="yes" xml:space="preserve">
          <source>Cons</source>
          <target state="translated">Cons</target>
        </trans-unit>
        <trans-unit id="2dd9f4cc14ec1bf52b6278d055d1483dda369c44" translate="yes" xml:space="preserve">
          <source>Console output</source>
          <target state="translated">Консольный вывод</target>
        </trans-unit>
        <trans-unit id="bd9b735341ec69897d1e20d25163dd94c6dadd2b" translate="yes" xml:space="preserve">
          <source>Convert &lt;em&gt;JSON&lt;/em&gt; into &lt;em&gt;Javascript&lt;/em&gt; object</source>
          <target state="translated">Конвертировать &lt;em&gt;JSON&lt;/em&gt; в объект &lt;em&gt;Javascript&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72f0b5653e89c4baa4b3ab62dc42c03c457100e0" translate="yes" xml:space="preserve">
          <source>Convert the data into &lt;em&gt;JSON&lt;/em&gt;</source>
          <target state="translated">Преобразовать данные в &lt;em&gt;JSON&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc86b372fd5d410744764f31f04997c73988b44e" translate="yes" xml:space="preserve">
          <source>Cookies are good for a little data. This is what tracking services often do.</source>
          <target state="translated">Печенье хорошо подходит для небольших данных.Это то,что часто делают службы слежения.</target>
        </trans-unit>
        <trans-unit id="68c8137816197867081029b6f0f3cde8f1113ffe" translate="yes" xml:space="preserve">
          <source>Echo the data directly to JavaScript.</source>
          <target state="translated">Эхо данных непосредственно на JavaScript.</target>
        </trans-unit>
        <trans-unit id="5e354e4af87a2f3e24a346e30b270f4b3dcd6f8d" translate="yes" xml:space="preserve">
          <source>Echo the data into the page somewhere, and use JavaScript to get the information from the DOM.</source>
          <target state="translated">Эхо данных где-нибудь на странице,и использовать JavaScript,чтобы получить информацию из DOM.</target>
        </trans-unit>
        <trans-unit id="3a1dacae667cdf3b83bd2c5ed36666b2c0c74153" translate="yes" xml:space="preserve">
          <source>Encode what the server had to say in the initial request.</source>
          <target state="translated">Кодируйте то,что должен был сказать сервер в первоначальном запросе.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="cdb5b3a12ec034b209bab623c4ce3a3671ca0676" translate="yes" xml:space="preserve">
          <source>Explanation of the problem</source>
          <target state="translated">Объяснение проблемы</target>
        </trans-unit>
        <trans-unit id="64eeb1e8052d2c09ab850b1b746650979268dd7c" translate="yes" xml:space="preserve">
          <source>First PHP is run, it generates the HTML that is served to the client.</source>
          <target state="translated">Сначала запускается PHP,он генерирует HTML,который обслуживается клиентом.</target>
        </trans-unit>
        <trans-unit id="7c1147e46e98fc4b1d30aa11d0172cafb2edc8f3" translate="yes" xml:space="preserve">
          <source>First, let's understand the flow of events when a page is served from our server:</source>
          <target state="translated">Во-первых,давайте разберемся с потоком событий,когда страница обслуживается с нашего сервера:</target>
        </trans-unit>
        <trans-unit id="3b3167511d5c059c2404a798c3f217c821b0b98e" translate="yes" xml:space="preserve">
          <source>First, set a script's source directly to a PHP file.</source>
          <target state="translated">Во-первых,установите исходный код скрипта непосредственно в PHP-файл.</target>
        </trans-unit>
        <trans-unit id="0d58205f97c9d7eb168226cdf232ff6a57d8750d" translate="yes" xml:space="preserve">
          <source>For those who have some problem using below code and it keep showing &lt;code&gt;&amp;lt;?php echo $username?&amp;gt;&lt;/code&gt; or something like this, go edit the httpd.conf in the mime_module section by add this 'AddType application/x-httpd-php .html .htm' because it may be disabled by default.</source>
          <target state="translated">Для тех, у кого есть проблемы с использованием приведенного ниже кода, и он продолжает показывать &lt;code&gt;&amp;lt;?php echo $username?&amp;gt;&lt;/code&gt; Или что-то подобное, отредактируйте файл httpd.conf в разделе mime_module, добавив это приложение AddType / x-httpd-php .html. .htm ', потому что он может быть отключен по умолчанию.</target>
        </trans-unit>
        <trans-unit id="8e30d6aac813417d581bd798bb4422107881ac34" translate="yes" xml:space="preserve">
          <source>Good luck!</source>
          <target state="translated">Удачи!</target>
        </trans-unit>
        <trans-unit id="beac9a7099547c58790a38aa21decac1317eb57e" translate="yes" xml:space="preserve">
          <source>Here is a short hand rolled parser, but the answer I linked to right above this has better tested ones:</source>
          <target state="translated">Вот короткий ручной парсер,но ответ,с которым я связался прямо над ним,имеет лучше проверенные:</target>
        </trans-unit>
        <trans-unit id="61d33eda66526ac9e5b34e0b5e5036ca3a5484ee" translate="yes" xml:space="preserve">
          <source>Here is is the trick:</source>
          <target state="translated">Вот в чем фокус:</target>
        </trans-unit>
        <trans-unit id="bcb62a51d573957d494f7c013f964cc6c8a67423" translate="yes" xml:space="preserve">
          <source>Here is one I do not see posted as an option. It is similar to using Ajax, but clearly different.</source>
          <target state="translated">Вот одна из них,которую я не вижу в качестве опции.Это похоже на использование Ajax,но явно отличается.</target>
        </trans-unit>
        <trans-unit id="ddf703231aacf673416bffbd9d07075b0d7fe71a" translate="yes" xml:space="preserve">
          <source>Here is the JavaScript code</source>
          <target state="translated">Вот код JavaScript</target>
        </trans-unit>
        <trans-unit id="9cf080919dfc82edac7797598bdc2917b01a82bc" translate="yes" xml:space="preserve">
          <source>Here is your &lt;strong&gt;'PHP'&lt;/strong&gt; to use that variable:</source>
          <target state="translated">Вот ваш &lt;strong&gt;'PHP'&lt;/strong&gt; для использования этой переменной:</target>
        </trans-unit>
        <trans-unit id="7447988092dd326f69095975e256793b6ee5fc9b" translate="yes" xml:space="preserve">
          <source>How do I pass variables and data from PHP to JavaScript</source>
          <target state="translated">Как передать переменные и данные из PHP в JavaScript</target>
        </trans-unit>
        <trans-unit id="2de995d6a21f5ba6542676ca487b3feceb18aa34" translate="yes" xml:space="preserve">
          <source>However, you can't use &lt;code&gt;htmlspecialchars&lt;/code&gt; on regular JavaScript code (code enclosed in &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;...&lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; tags). That makes use of this function prone to mistakes, by forgetting to &lt;code&gt;htmlspecialchars&lt;/code&gt; the result when writing event code.</source>
          <target state="translated">Однако вы не можете использовать &lt;code&gt;htmlspecialchars&lt;/code&gt; в обычном коде JavaScript (код, заключенный в теги &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; ... &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt; ). Это делает использование этой функции подверженной ошибкам, забывая &lt;code&gt;htmlspecialchars&lt;/code&gt; результат при написании кода события.</target>
        </trans-unit>
        <trans-unit id="f205480dde098e0ceb6af5bbb02af0b31e4bbddd" translate="yes" xml:space="preserve">
          <source>I have JavaScript code that needs &lt;code&gt;val&lt;/code&gt; and looks along the lines of:</source>
          <target state="translated">У меня есть код JavaScript, который нуждается в &lt;code&gt;val&lt;/code&gt; и выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="6be29b03831ced1f45ac2b7208c97ecd67d127d3" translate="yes" xml:space="preserve">
          <source>I have a variable in PHP, and I need its value in my JavaScript code. How can I get my variable from PHP to JavaScript?</source>
          <target state="translated">У меня есть переменная в PHP,и мне нужно ее значение в моем JavaScript-коде.Как я могу получить мою переменную из PHP в JavaScript?</target>
        </trans-unit>
        <trans-unit id="89b02d2b4b59dce9f89219584bf077cb3e047ff9" translate="yes" xml:space="preserve">
          <source>I have code that looks like this:</source>
          <target state="translated">У меня есть код,который выглядит вот так:</target>
        </trans-unit>
        <trans-unit id="8082d8cf01987bd2024be4ab2444fbd234ba939d" translate="yes" xml:space="preserve">
          <source>I have come out with an easy method to assign JavaScript variables using PHP.</source>
          <target state="translated">Я придумал простой способ присвоения переменных JavaScript с помощью PHP.</target>
        </trans-unit>
        <trans-unit id="68c264ab997254314e73ef260dbbff7c2eebca39" translate="yes" xml:space="preserve">
          <source>I quite like the way the WordPress works with its &lt;a href=&quot;http://codex.wordpress.org/Function_Reference/wp_enqueue_script&quot;&gt;enqueue&lt;/a&gt; and &lt;a href=&quot;http://codex.wordpress.org/Function_Reference/wp_localize_script&quot;&gt;localize&lt;/a&gt; functions, so following that model, I wrote a simple class for putting a scripts into page according to the script dependencies, and for making additional data available for the script.</source>
          <target state="translated">Мне очень нравится, как WordPress работает с &lt;a href=&quot;http://codex.wordpress.org/Function_Reference/wp_enqueue_script&quot;&gt;функциями создания&lt;/a&gt; и &lt;a href=&quot;http://codex.wordpress.org/Function_Reference/wp_localize_script&quot;&gt;локализации&lt;/a&gt; , поэтому, следуя этой модели, я написал простой класс для размещения сценариев на странице в соответствии с зависимостями сценариев и для предоставления дополнительных данных для сценария.</target>
        </trans-unit>
        <trans-unit id="8bf317e8eed1372b6549dd6f1a1e7180202cc7db" translate="yes" xml:space="preserve">
          <source>I usually use data-* attributes in HTML.</source>
          <target state="translated">Обычно я использую атрибуты data-*в HTML.</target>
        </trans-unit>
        <trans-unit id="ce6e20fee9e1027b19ea63c6b1b2755152f93df7" translate="yes" xml:space="preserve">
          <source>I would &lt;em&gt;not&lt;/em&gt; recommend making another request &lt;em&gt;unless your site is an application&lt;/em&gt; for getting that information from the server.</source>
          <target state="translated">Я &lt;em&gt;не&lt;/em&gt; рекомендовал бы делать еще один запрос, &lt;em&gt;если ваш сайт не является приложением&lt;/em&gt; для получения этой информации с сервера.</target>
        </trans-unit>
        <trans-unit id="ea8815b5031f3bc30ddd0b55289d44e66321d03f" translate="yes" xml:space="preserve">
          <source>I'll assume that the data to transmit is a string.</source>
          <target state="translated">Я предполагаю,что передаваемые данные-это строка.</target>
        </trans-unit>
        <trans-unit id="a6c4fe8cac40c48cf80aded9c2c2026061a8f4b6" translate="yes" xml:space="preserve">
          <source>I'm going to try a simpler answer:</source>
          <target state="translated">Я попробую более простой ответ:</target>
        </trans-unit>
        <trans-unit id="0a13bc97160fe132329442cd8f2d20a4245d1bcd" translate="yes" xml:space="preserve">
          <source>If you're writing an application - suddenly the initial load time isn't always as important as the ongoing performance of the application, and it starts to pay off to load data and code separately.</source>
          <target state="translated">Если вы пишете приложение-вдруг начальное время загрузки не всегда так важно,как текущая производительность приложения,и оно начинает окупаться для загрузки данных и кода отдельно.</target>
        </trans-unit>
        <trans-unit id="ddf54c58245dfd07b5f8af3f7f8cb68d527d86a2" translate="yes" xml:space="preserve">
          <source>Implementation Example</source>
          <target state="translated">Пример внедрения</target>
        </trans-unit>
        <trans-unit id="1bbd085e7cab3189e6219acec776d97464e0179e" translate="yes" xml:space="preserve">
          <source>Implementation is relatively straightforward:</source>
          <target state="translated">Реализация относительно проста:</target>
        </trans-unit>
        <trans-unit id="b32f566fe85d5afe02db0c806334334aaaa0746c" translate="yes" xml:space="preserve">
          <source>In any of your JavaScript code called on the page, simply call those variables.</source>
          <target state="translated">В любом из ваших JavaScript-кодов,вызываемых на странице,просто вызовите эти переменные.</target>
        </trans-unit>
        <trans-unit id="709dcab1528bab051ad73bb55366dd3a9b5d739f" translate="yes" xml:space="preserve">
          <source>In no particular order:</source>
          <target state="translated">Ни в каком особом порядке:</target>
        </trans-unit>
        <trans-unit id="558aa7016f0efeff04b711ada0d3ebab7db88a0e" translate="yes" xml:space="preserve">
          <source>In the server script, you have two variables, and you are trying to send them to the client scripts:</source>
          <target state="translated">В серверном скрипте у вас есть две переменные,и вы пытаетесь отправить их в клиентские скрипты:</target>
        </trans-unit>
        <trans-unit id="384112f5db9aa7bf720e4c12e53aa26ef2c3f7ee" translate="yes" xml:space="preserve">
          <source>In this post, we'll examine each of the above methods, and see the pros and cons of each, as well as how to implement them.</source>
          <target state="translated">В этой заметке мы рассмотрим каждый из вышеперечисленных методов и увидим плюсы и минусы каждого из них,а также то,как их реализовать.</target>
        </trans-unit>
        <trans-unit id="46cc4226c5a54a93c923df482f127de134bec924" translate="yes" xml:space="preserve">
          <source>It doesn't work because &lt;code&gt;$val&lt;/code&gt; is undefined as far as JavaScript is concerned, i.e. the PHP code did not output anything for &lt;code&gt;$val&lt;/code&gt;. Try viewing the source in your browser and here is what you'll see:</source>
          <target state="translated">Это не работает, поскольку &lt;code&gt;$val&lt;/code&gt; не определен в отношении JavaScript, то есть код PHP ничего не выводил для &lt;code&gt;$val&lt;/code&gt; . Попробуйте просмотреть источник в своем браузере, и вот что вы увидите:</target>
        </trans-unit>
        <trans-unit id="7facb037bd365aa06bac702dc7ca142f124d71f3" translate="yes" xml:space="preserve">
          <source>It uses HTML5 data attributes to store PHP variables and then it's assigned to JavaScript on page load.</source>
          <target state="translated">Он использует атрибуты данных HTML5 для хранения переменных PHP,а затем присваивается JavaScript при загрузке страницы.</target>
        </trans-unit>
        <trans-unit id="494a40dc2d11ce0dbef08a01b0b28c311c21c249" translate="yes" xml:space="preserve">
          <source>It's possible to write a function that does not have that problem, and can be used both in events and in regular JavaScript code, as long as you enclose your events always in single quotes, or always in double quotes. Here is my proposal, requiring them to be in double quotes (which I prefer):</source>
          <target state="translated">Можно написать функцию,которая не имеет такой проблемы и может быть использована как в событиях,так и в обычном JavaScript-коде,при условии,что события всегда заключены в одинарные кавычки,или всегда в двойные.Вот мое предложение,требующее,чтобы они были в двойных кавычках (что я предпочитаю):</target>
        </trans-unit>
        <trans-unit id="3e31c5e3e9f20beab60925115644ad5bdfa13944" translate="yes" xml:space="preserve">
          <source>Let's say your variable is always integer. In that case this is easier:</source>
          <target state="translated">Допустим,ваша переменная всегда целочисленная.В этом случае все проще:</target>
        </trans-unit>
        <trans-unit id="539b1634269f84e6d1b0a5512f50505fc1088004" translate="yes" xml:space="preserve">
          <source>Let's say your variable is not an integer, but if you try above method you will get something like this:</source>
          <target state="translated">Допустим,ваша переменная не является целым числом,но если попробовать вышеприведенный метод,то получится нечто подобное:</target>
        </trans-unit>
        <trans-unit id="c42905fc70a76e1fcc61c03881ec129752d0f6ea" translate="yes" xml:space="preserve">
          <source>Meaning that the PHP will now produce &lt;code&gt;myPlugin.start(42);&lt;/code&gt; and will work as expected when executed by the JavaScript code.</source>
          <target state="translated">Это означает, что PHP теперь &lt;code&gt;myPlugin.start(42);&lt;/code&gt; и будет работать, как ожидается, при выполнении кода JavaScript.</target>
        </trans-unit>
        <trans-unit id="1b8c9de85e6fbb0e299b3b6751348c22b18c7b8f" translate="yes" xml:space="preserve">
          <source>My answer &lt;a href=&quot;https://stackoverflow.com/questions/14220321/how-do-i-return-the-response-from-an-asynchronous-call/16825593#16825593&quot;&gt;here&lt;/a&gt; explains how to load data using AJAX in JavaScript:</source>
          <target state="translated">Мой ответ &lt;a href=&quot;https://stackoverflow.com/questions/14220321/how-do-i-return-the-response-from-an-asynchronous-call/16825593#16825593&quot;&gt;здесь&lt;/a&gt; объясняет, как загрузить данные, используя AJAX в JavaScript:</target>
        </trans-unit>
        <trans-unit id="8f0501484184e845f57d52608b9ec3c8aa5589be" translate="yes" xml:space="preserve">
          <source>Now you can get value using DOM, use innerHTML of span id, in this case you don't need to do any call to server, or Ajax or another thing.</source>
          <target state="translated">Теперь вы можете получить значение,используя DOM,использовать innerHTML идентификатора span id,в этом случае вам не нужно будет делать никаких звонков на сервер,или Ajax,или что-то еще.</target>
        </trans-unit>
        <trans-unit id="8068f871b027293d0305822f527c9cc2ca174cdd" translate="yes" xml:space="preserve">
          <source>Now you have a JavaScript variable called &lt;code&gt;'name'&lt;/code&gt;, and here is your JavaScript code to use that variable:</source>
          <target state="translated">Теперь у вас есть переменная JavaScript с именем &lt;code&gt;'name'&lt;/code&gt; , и вот ваш код JavaScript для использования этой переменной:</target>
        </trans-unit>
        <trans-unit id="cd1b835ef4cc7fda335fe35740e43b557d50fa20" translate="yes" xml:space="preserve">
          <source>Now, the server just needs to contain a &lt;code&gt;/your/url&lt;/code&gt; route/file that contains code that grabs the data and does something with it, in your case:</source>
          <target state="translated">Теперь сервер просто должен содержать &lt;code&gt;/your/url&lt;/code&gt; маршрут / файл, который содержит код, который захватывает данные и что-то с ними делает, в вашем случае:</target>
        </trans-unit>
        <trans-unit id="ef563b295e2f40acee867a5bd36f9f01c3a53e2d" translate="yes" xml:space="preserve">
          <source>Once we have more data, we can encode it with JSON inside a JavaScript variable instead:</source>
          <target state="translated">Как только у нас будет больше данных,мы сможем кодировать их с помощью JSON внутри переменной JavaScript:</target>
        </trans-unit>
        <trans-unit id="04b6afd362e171e5451b9cda1fd5570671306875" translate="yes" xml:space="preserve">
          <source>Or with jQuery:</source>
          <target state="translated">Или с Джей Кьюри:</target>
        </trans-unit>
        <trans-unit id="935b8c8a12491212e450a47c864d20f91db3f9f8" translate="yes" xml:space="preserve">
          <source>PHP 5.2.0 or more</source>
          <target state="translated">PHP 5.2.0 или более</target>
        </trans-unit>
        <trans-unit id="84083370162d72d8f9d3e15fe561f0204aaadf33" translate="yes" xml:space="preserve">
          <source>Pros</source>
          <target state="translated">Pros</target>
        </trans-unit>
        <trans-unit id="e943bdabd69b9682d2a49eb6728d02f4e4f4f78a" translate="yes" xml:space="preserve">
          <source>Regardless the fact that the script 'jquery' is enqueued after the 'jquery-ui', it is printed before because it is defined in 'jquery-ui' that it depends on 'jquery'.
Additional data for the 'custom-script' are inside a new script block and are placed in front of it, it contains &lt;code&gt;mydata&lt;/code&gt; object that holds additional data, now available to 'custom-script'.</source>
          <target state="translated">Независимо от того, что скрипт &amp;laquo;jquery&amp;raquo; ставится в очередь после &amp;laquo;jquery-ui&amp;raquo;, он печатается раньше, потому что он определен в &amp;laquo;jquery-ui&amp;raquo;, что он зависит от &amp;laquo;jquery&amp;raquo;. Дополнительные данные для 'custom-script' находятся внутри нового блока скрипта и помещены перед ним, он содержит объект &lt;code&gt;mydata&lt;/code&gt; , который содержит дополнительные данные, теперь доступные для 'custom-script'.</target>
        </trans-unit>
        <trans-unit id="0d25e7a07e733a6697ed9341862313ab610df792" translate="yes" xml:space="preserve">
          <source>Send more requests from the client &lt;em&gt;after&lt;/em&gt; the initial request is done.</source>
          <target state="translated">Отправьте больше запросов от клиента &lt;em&gt;после того,&lt;/em&gt; как начальный запрос сделан.</target>
        </trans-unit>
        <trans-unit id="f0daee716c96994db229612b39760267e7f30bb0" translate="yes" xml:space="preserve">
          <source>Sending more requests from the client after the initial request is done is &lt;strong&gt;slow&lt;/strong&gt; as it requires more HTTP requests which have significant overhead. Moreover, it requires &lt;em&gt;asynchronousity&lt;/em&gt; as making an AJAX request requires a handler for when it's complete.</source>
          <target state="translated">Посылка большего количества запросов от клиента после того, как начальный запрос сделан, &lt;strong&gt;медленна,&lt;/strong&gt; поскольку это требует большего количества запросов HTTP, которые имеют значительные накладные расходы. Более того, он требует &lt;em&gt;асинхронности,&lt;/em&gt; поскольку для выполнения AJAX-запроса требуется обработчик, когда он завершается.</target>
        </trans-unit>
        <trans-unit id="36b9daa2428f82a34b30f9492aa4a3ea4b6fecf3" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;abcd&lt;/code&gt; in JSON is &lt;code&gt;&quot;abcd&quot;&lt;/code&gt;, it looks like this:</source>
          <target state="translated">Поскольку &lt;code&gt;abcd&lt;/code&gt; в JSON - это &lt;code&gt;&quot;abcd&quot;&lt;/code&gt; , это выглядит так:</target>
        </trans-unit>
        <trans-unit id="6dc911661d90433fc535ccd9f64a4fd2ce0a938f" translate="yes" xml:space="preserve">
          <source>So in PHP we have a function call &lt;code&gt;json_encode&lt;/code&gt; that encode string to a JSON object.</source>
          <target state="translated">Поэтому в PHP у нас есть вызов функции &lt;code&gt;json_encode&lt;/code&gt; , который кодирует строку в объект JSON.</target>
        </trans-unit>
        <trans-unit id="bc95d8a79911147005cceb642ebe959da78a017f" translate="yes" xml:space="preserve">
          <source>So really, the core thing to remember here is that &lt;strong&gt;HTTP is stateless&lt;/strong&gt;. Once a request left the server, the server can not touch it. So, that leaves our options to:</source>
          <target state="translated">В общем, главное, что нужно помнить, это то, что &lt;strong&gt;HTTP не имеет состояния&lt;/strong&gt; . Как только запрос покинул сервер, сервер не может его коснуться. Итак, это оставляет наши варианты:</target>
        </trans-unit>
        <trans-unit id="0232ae782ec7496a58b1ecda2b63db17bc4df3c9" translate="yes" xml:space="preserve">
          <source>So, we're back to escaping. &lt;code&gt;json_encode($string)&lt;/code&gt; works &lt;em&gt;if&lt;/em&gt; you encode the source string as UTF-8 first in case it is not already, because &lt;code&gt;json_encode&lt;/code&gt; requires UTF-8 data. If the string is in ISO-8859-1 then you can simply use &lt;code&gt;json_encode(utf8_encode($string))&lt;/code&gt;; otherwise you can always use &lt;code&gt;iconv&lt;/code&gt; to do the conversion first.</source>
          <target state="translated">Итак, мы вернулись к побегу. &lt;code&gt;json_encode($string)&lt;/code&gt; работает, &lt;em&gt;если&lt;/em&gt; вы сначала кодируете исходную строку как UTF-8, если это не так, потому что &lt;code&gt;json_encode&lt;/code&gt; требует данные UTF-8. Если строка в ISO-8859-1, тогда вы можете просто использовать &lt;code&gt;json_encode(utf8_encode($string))&lt;/code&gt; ; в противном случае вы всегда можете использовать &lt;code&gt;iconv&lt;/code&gt; , чтобы сделать преобразование первым.</target>
        </trans-unit>
        <trans-unit id="05b004a92e5eda3ec6e47516b582fc25b61b35b9" translate="yes" xml:space="preserve">
          <source>Solutions</source>
          <target state="translated">Solutions</target>
        </trans-unit>
        <trans-unit id="414f1973914ff9a699ed29ac2dc98f4a89261b97" translate="yes" xml:space="preserve">
          <source>Some more reading material</source>
          <target state="translated">Дополнительный материал для чтения</target>
        </trans-unit>
        <trans-unit id="d303d8fe99ead8753ac43620504e67e444495a4a" translate="yes" xml:space="preserve">
          <source>That's the core question you should be asking yourself is:</source>
          <target state="translated">Это основной вопрос,который ты должен задать себе:</target>
        </trans-unit>
        <trans-unit id="c17dee84fbe20cbd7cf46952b6d2e914dd81a25b" translate="yes" xml:space="preserve">
          <source>The above combination of the two files will alert &lt;code&gt;42&lt;/code&gt; when the file finishes loading.</source>
          <target state="translated">Приведенная выше комбинация двух файлов предупредит &lt;code&gt;42&lt;/code&gt; , когда файл завершит загрузку.</target>
        </trans-unit>
        <trans-unit id="3098de74828e2d89faf8205c1e204b80788ce5ab" translate="yes" xml:space="preserve">
          <source>The apple color is yellow, the strawberry color is red and the kiwi
  color is green.</source>
          <target state="translated">Яблочный цвет-желтый,клубничный-красный,киви-зеленый.</target>
        </trans-unit>
        <trans-unit id="df2d6642b13d7b99a1a257d4525a9179b63d431b" translate="yes" xml:space="preserve">
          <source>The call to the &lt;code&gt;enqueue_script()&lt;/code&gt; function is for adding script, setting the source and dependencies on other scripts, and additional data needed for the script.</source>
          <target state="translated">Вызов функции &lt;code&gt;enqueue_script()&lt;/code&gt; предназначен для добавления сценария, установки источника и зависимостей от других сценариев, а также дополнительных данных, необходимых для сценария.</target>
        </trans-unit>
        <trans-unit id="60f2098fa6a6c9e65a6e087a4688e064b5e93b7b" translate="yes" xml:space="preserve">
          <source>The function requires PHP 5.4+. Example usage:</source>
          <target state="translated">Для работы функции требуется PHP 5.4+.Пример использования:</target>
        </trans-unit>
        <trans-unit id="27c838ffc4b408d431a304030fcd64624193ea14" translate="yes" xml:space="preserve">
          <source>Then in &quot;your_php_file.php&quot;:</source>
          <target state="translated">Затем в &quot;your_php_file.php&quot;:</target>
        </trans-unit>
        <trans-unit id="6e13348cd254065765f4ea515a928d4fa2d6ab9c" translate="yes" xml:space="preserve">
          <source>Then, the HTML is delivered to the client, after PHP is done with it, I'd like to emphasize that once the code leaves the server - PHP is done with it and can no longer access it.</source>
          <target state="translated">Затем HTML доставляется клиенту,после того,как PHP закончит с ним,я хотел бы подчеркнуть,что как только код покидает сервер-PHP закончил с ним и больше не может получить к нему доступ.</target>
        </trans-unit>
        <trans-unit id="8d3eb2239e46d313d3ae7db1193e3ffc72676396" translate="yes" xml:space="preserve">
          <source>Then, the HTML with JavaScript reaches the client, which can execute JavaScript on that HTML.</source>
          <target state="translated">Затем HTML с JavaScript достигает клиента,который может выполнить JavaScript на этом HTML.</target>
        </trans-unit>
        <trans-unit id="f3d8cf715946572dd0d6d6871113da4d59dbb7a7" translate="yes" xml:space="preserve">
          <source>Then, you can &lt;a href=&quot;https://stackoverflow.com/questions/5639346/shortest-function-for-reading-a-cookie-in-javascript&quot;&gt;read it with JavaScript&lt;/a&gt; using &lt;code&gt;document.cookie&lt;/code&gt;:</source>
          <target state="translated">Затем вы можете &lt;a href=&quot;https://stackoverflow.com/questions/5639346/shortest-function-for-reading-a-cookie-in-javascript&quot;&gt;прочитать его с&lt;/a&gt; помощью JavaScript, используя &lt;code&gt;document.cookie&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c084fe03c55501aa730afdae5f7a028f58de4094" translate="yes" xml:space="preserve">
          <source>There are actually several approaches to do this. Some require more overhead than others, and some are considered better than others.</source>
          <target state="translated">На самом деле для этого есть несколько подходов.Некоторые требуют больших накладных расходов,чем другие,а некоторые считаются лучшими.</target>
        </trans-unit>
        <trans-unit id="feac1ce6e2afa0a863a60c7486a1a4568bdd2fdf" translate="yes" xml:space="preserve">
          <source>This doesn't work because PHP will try to treat &lt;code&gt;myPlugin&lt;/code&gt; as a constant and when that fails it will try to treat it as the string &lt;code&gt;'myPlugin'&lt;/code&gt; which it will try to concatenate with the output of the PHP function &lt;code&gt;start()&lt;/code&gt; and since that is undefined it will produce a fatal error.</source>
          <target state="translated">Это не работает, потому что PHP попытается обработать &lt;code&gt;myPlugin&lt;/code&gt; как константу, а когда это не удастся, он попытается обработать ее как строку &lt;code&gt;'myPlugin'&lt;/code&gt; которую он попытается объединить с выводом функции PHP &lt;code&gt;start()&lt;/code&gt; и с тех пор не определено, это приведет к фатальной ошибке.</target>
        </trans-unit>
        <trans-unit id="fe7e574eda61e3fa9cc5e33b749a9961dbdca531" translate="yes" xml:space="preserve">
          <source>This example uses jQuery, but it can be adapted for another library or vanilla JavaScript.</source>
          <target state="translated">В этом примере используется jQuery,но он может быть адаптирован для другой библиотеки или ванильного JavaScript.</target>
        </trans-unit>
        <trans-unit id="f4d485ec2600bea1a330df3b8934fc1e855097d6" translate="yes" xml:space="preserve">
          <source>This is probably the easiest to understand.</source>
          <target state="translated">Это,наверное,легче всего понять.</target>
        </trans-unit>
        <trans-unit id="bc99bf322dbbdd311a8d1cd8525a8764ec3b2525" translate="yes" xml:space="preserve">
          <source>This method is considered the best, because &lt;strong&gt;your server side and client side scripts are completely separate&lt;/strong&gt;.</source>
          <target state="translated">Этот метод считается лучшим, потому что &lt;strong&gt;сценарии на стороне сервера и на стороне клиента полностью разделены&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="817a2a8d86a0360d021ad43e19b78eba66eb8039" translate="yes" xml:space="preserve">
          <source>This method is less preferable to AJAX, but it still has its advantages. It's still &lt;em&gt;relatively&lt;/em&gt; separated between PHP and JavaScript in a sense that there is no PHP directly in the JavaScript.</source>
          <target state="translated">Этот метод менее предпочтителен, чем AJAX, но все же имеет свои преимущества. Он все еще &lt;em&gt;относительно&lt;/em&gt; разделен между PHP и JavaScript в том смысле, что в JavaScript нет прямого PHP.</target>
        </trans-unit>
        <trans-unit id="a764cec272addae3a75e62bf06bab87a936aec4f" translate="yes" xml:space="preserve">
          <source>This way, our JavaScript file asks for the data and shows it rather than asking for code or for layout. This is cleaner and starts to pay off as the application gets higher. It's also better separation of concerns and it allows testing the client side code without any server side technology involved which is another plus.</source>
          <target state="translated">Таким образом,наш JavaScript-файл запрашивает данные и показывает их,а не запрашивает код или верстку.Это чище и начинает окупаться по мере того,как приложение становится выше.Это также лучшее разделение проблем и позволяет тестировать код клиентской стороны без использования серверной технологии,что является еще одним плюсом.</target>
        </trans-unit>
        <trans-unit id="b21480ff457e048e3c7a6593bfb52719279e1f05" translate="yes" xml:space="preserve">
          <source>Try this:</source>
          <target state="translated">Попробуй это:</target>
        </trans-unit>
        <trans-unit id="25f14026851d4d9317240563a4da69d9f7427ccc" translate="yes" xml:space="preserve">
          <source>Use AJAX to get the data you need from the server.</source>
          <target state="translated">Используйте AJAX для получения необходимых данных с сервера.</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="2e8a57cc5c472f4ac3b071979a38e80db7e59e87" translate="yes" xml:space="preserve">
          <source>Website</source>
          <target state="translated">Website</target>
        </trans-unit>
        <trans-unit id="9d9ec8a09d1900696979b0e6e683945b24278c99" translate="yes" xml:space="preserve">
          <source>Websites are mainly page based, and the page load times needs to be as fast as possible (for example - Wikipedia). Web applications are more AJAX heavy and perform a lot of round trips to get the client fast information (for example - a stock dashboard).</source>
          <target state="translated">Веб-сайты в основном основаны на страницах,и время загрузки страницы должно быть как можно быстрее (например-Википедия).Веб-приложения более тяжелые AJAX и выполнять много поездок туда и обратно,чтобы получить информацию о клиенте быстро (например-фондовая приборная панель).</target>
        </trans-unit>
        <trans-unit id="b7c0e3aafda76649c0e02fe3119acea93028b54a" translate="yes" xml:space="preserve">
          <source>While this is most likely to work, since the PHP code is producing valid JavaScript with the expected arguments, if it fails, chances are it's because &lt;code&gt;myPlugin&lt;/code&gt; isn't ready yet. Check your order of execution.</source>
          <target state="translated">Хотя это, скорее всего, сработает, так как код PHP &lt;code&gt;myPlugin&lt;/code&gt; допустимый JavaScript с ожидаемыми аргументами, в случае сбоя есть вероятность, что myPlugin еще не готов. Проверьте ваш порядок исполнения.</target>
        </trans-unit>
        <trans-unit id="c164b4ac2cac911dd7348633f6c2d71dfd32289f" translate="yes" xml:space="preserve">
          <source>With AJAX, you need two pages, one is where PHP generates the output, and the second is where JavaScript gets that output:</source>
          <target state="translated">С AJAX вам понадобятся две страницы,одна-где PHP генерирует вывод,а вторая-где JavaScript получает этот вывод:</target>
        </trans-unit>
        <trans-unit id="413e55e9d66eac66f9a12aadd1c15b3bcaf80fc4" translate="yes" xml:space="preserve">
          <source>With this, the idea is to create some sort of element which will not be displayed to the user, but is visible to JavaScript.</source>
          <target state="translated">При этом идея заключается в том,чтобы создать некий элемент,который не будет отображаться пользователю,но будет виден на JavaScript.</target>
        </trans-unit>
        <trans-unit id="331aa2907869a83fe8dc9692376762ae5c7e8a68" translate="yes" xml:space="preserve">
          <source>You can read more about the dataset property here: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.dataset&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.dataset&lt;/a&gt;</source>
          <target state="translated">Вы можете прочитать больше о свойстве набора данных здесь: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.dataset&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement.dataset&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9e77e702dff57a309e0f4f15f5ad6ed2ecf16a6" translate="yes" xml:space="preserve">
          <source>You can use same method for arrays:</source>
          <target state="translated">Вы можете использовать тот же метод для массивов:</target>
        </trans-unit>
        <trans-unit id="a0c8d4a13ea45c5c3ec4ac14765af97fc2677c4d" translate="yes" xml:space="preserve">
          <source>You could even pass a variable back to the PHP file such as this example:</source>
          <target state="translated">Вы даже можете передать переменную обратно в PHP-файл,как в этом примере:</target>
        </trans-unit>
        <trans-unit id="779c6c7b3025e227f3a406338c878ce8b7b4ce08" translate="yes" xml:space="preserve">
          <source>You have two ways to tackle the issue</source>
          <target state="translated">У вас есть два способа решить эту проблему</target>
        </trans-unit>
        <trans-unit id="b3ee624442b8df315cfaa849bed4a1f6347453a2" translate="yes" xml:space="preserve">
          <source>You want fast response times which have a &lt;em&gt;huge&lt;/em&gt; impact on conversion and load times. Making Ajax requests is slow for the initial uptime in this case and unneeded.</source>
          <target state="translated">Вам нужно быстрое время отклика, которое оказывает &lt;em&gt;огромное&lt;/em&gt; влияние на конверсию и время загрузки. В этом случае выполнение запросов Ajax является медленным для начального времени безотказной работы и не требуется.</target>
        </trans-unit>
        <trans-unit id="6da3a4d9e4b8d67c7deb98c5c4316435aa9d5b2a" translate="yes" xml:space="preserve">
          <source>Your page will print it using PHP, and you JavaScript will get value using DOM.</source>
          <target state="translated">Ваша страница будет распечатана с помощью PHP,а JavaScript получит значение с помощью DOM.</target>
        </trans-unit>
        <trans-unit id="5985c385fec59acb14a3dfb3afd274b5076d788c" translate="yes" xml:space="preserve">
          <source>and that will work. It's just assigning a JavaScript variable and then passing the value of an existing PHP variable. Since PHP writes the JavaScript lines here, it has the value of of the PHP variable and can pass it directly.</source>
          <target state="translated">и это сработает.Это просто присвоение переменной JavaScript,а затем передача значения существующей переменной PHP.Так как здесь PHP пишет строки JavaScript,он имеет значение переменной PHP и может передавать ее напрямую.</target>
        </trans-unit>
        <trans-unit id="1cc092559279170ed7e71a59d5995be436b0137f" translate="yes" xml:space="preserve">
          <source>get-data.php</source>
          <target state="translated">get-data.php</target>
        </trans-unit>
        <trans-unit id="bb6499b8e938f92a3695fff1afe57edea4b9efb7" translate="yes" xml:space="preserve">
          <source>index.php</source>
          <target state="translated">index.php</target>
        </trans-unit>
        <trans-unit id="0331c939dd50377997ef480e27946ba6c992ad55" translate="yes" xml:space="preserve">
          <source>index.php (or whatever the actual page is named like)</source>
          <target state="translated">index.php (или как там называется фактическая страница).</target>
        </trans-unit>
        <trans-unit id="478730f4ba2a5cea495fccabc06cbed30cf87247" translate="yes" xml:space="preserve">
          <source>json_encode() requires:</source>
          <target state="translated">требует json_encode():</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
