<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/237104">
    <body>
      <group id="237104">
        <trans-unit id="fa1fddf27a8bbd3e6a51595070fec2ffdda0cba8" translate="yes" xml:space="preserve">
          <source>$.inArray works fine for determining whether a &lt;em&gt;scalar&lt;/em&gt; value exists in an array of scalars...</source>
          <target state="translated">$ .inArray funciona bien para determinar si existe un valor &lt;em&gt;escalar&lt;/em&gt; en una matriz de escalares ...</target>
        </trans-unit>
        <trans-unit id="e979338f8a2f2e59abc9249af3190ebc03ad8b13" translate="yes" xml:space="preserve">
          <source>(Unfortunately, while you can create an Array.prototype.contains to &quot;freeze&quot; an array and store a hashtable in this._cache in two lines, this would give wrong results if you chose to edit your array later. JavaScript has insufficient hooks to let you keep this state, unlike Python for example.)</source>
          <target state="translated">(Lamentablemente,aunque puedes crear un Array.prototipo.contiene para &quot;congelar&quot; un array y almacenar un hashtable en este._cache en dos líneas,esto daría resultados erróneos si eliges editar tu array más tarde.JavaScript no tiene suficientes ganchos para permitirte mantener este estado,a diferencia de Python por ejemplo).</target>
        </trans-unit>
        <trans-unit id="666a1d7cd2502c4f03da17df37ee0d8e05fc9ce7" translate="yes" xml:space="preserve">
          <source>* As jamess pointed out in the comment, at the time of this answer, September 2018, &lt;code&gt;Array.prototype.some()&lt;/code&gt; is fully supported: &lt;a href=&quot;http://kangax.github.io/compat-table/es5/#test-Array_methods_Array.prototype.some_a_href=_https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some_title=_MDN_documentation_img_src=_../mdn.png_alt=_MDN_(Mozilla_Development_Network)_logo_width=_15_height=_13_/_/a_nbsp;&quot;&gt;caniuse.com support table&lt;/a&gt;</source>
          <target state="translated">* Como se&amp;ntilde;al&amp;oacute; James en el comentario, en el momento de esta respuesta, septiembre de 2018, &lt;code&gt;Array.prototype.some()&lt;/code&gt; es totalmente compatible: &lt;a href=&quot;http://kangax.github.io/compat-table/es5/#test-Array_methods_Array.prototype.some_a_href=_https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some_title=_MDN_documentation_img_src=_../mdn.png_alt=_MDN_(Mozilla_Development_Network)_logo_width=_15_height=_13_/_/a_nbsp;&quot;&gt;tabla de soporte de caniuse.com&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff01b541f233e095936ed95fd600d53d0d50e8cd" translate="yes" xml:space="preserve">
          <source>... but the question clearly asks for an efficient way to determine if an &lt;em&gt;object&lt;/em&gt; is contained in an array.</source>
          <target state="translated">... pero la pregunta claramente pide una forma eficiente de determinar si un &lt;em&gt;objeto&lt;/em&gt; est&amp;aacute; contenido en una matriz.</target>
        </trans-unit>
        <trans-unit id="82ba87f801a9d4855c22108ef67433ef0a8af8b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt;Array.prototype.some()&lt;/a&gt; was added to the ECMA-262 standard in the 5th edition</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt;Array.prototype.some ()&lt;/a&gt; se agreg&amp;oacute; al est&amp;aacute;ndar ECMA-262 en la quinta edici&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="b1af03410872d22aa090478ca85044102ca7e787" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/indexOf&quot;&gt;&lt;code&gt;indexOf&lt;/code&gt;&lt;/a&gt; maybe, but it's a &quot;JavaScript extension to the ECMA-262 standard; as such it may not be present in other implementations of the standard.&quot;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array/indexOf&quot;&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;/a&gt; quiz&amp;aacute;s, pero es una &quot;extensi&amp;oacute;n de JavaScript para el est&amp;aacute;ndar ECMA-262; como tal, puede no estar presente en otras implementaciones del est&amp;aacute;ndar&quot;.</target>
        </trans-unit>
        <trans-unit id="bffcb9f337378974e8b34966a149dbbb68e52188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array.indexOf&lt;/code&gt; and &lt;code&gt;Array.includes&lt;/code&gt; (as well as most of the answers here) only compare by reference and not by value.</source>
          <target state="translated">&lt;code&gt;Array.indexOf&lt;/code&gt; y &lt;code&gt;Array.includes&lt;/code&gt; (as&amp;iacute; como la mayor&amp;iacute;a de las respuestas aqu&amp;iacute;) solo se comparan por referencia y no por valor.</target>
        </trans-unit>
        <trans-unit id="0c67478f11e2e78d248d12730af40590e49d8d53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requirements:&lt;/em&gt; Recommend most concise and efficient way to find out if a JavaScript array contains an object.</source>
          <target state="translated">&lt;em&gt;Requisitos:&lt;/em&gt; recomiende la forma m&amp;aacute;s concisa y eficiente de averiguar si una matriz de JavaScript contiene un objeto.</target>
        </trans-unit>
        <trans-unit id="3328e402eaab9fa9ffa2904507ac1e15deedaa9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A hopefully faster bidirectional &lt;code&gt;indexOf&lt;/code&gt; / &lt;code&gt;lastIndexOf&lt;/code&gt; alternative&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Una alternativa bidireccional &lt;code&gt;indexOf&lt;/code&gt; / &lt;code&gt;lastIndexOf&lt;/code&gt; con suerte m&amp;aacute;s r&amp;aacute;pida&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d78a67732f4c0a40bd987aec69c5f5c06ced172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Accepted Answer:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Respuesta aceptada:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2dca58c8f007a19a8c485db3191ee67d50e382e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array big - 1.000.000 elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Matriz grande - 1.000.000 elementos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bcb9db629c9a0558ab47a317e2d8b485d0969128" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array small - 10 elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Array peque&amp;ntilde;o - 10 elementos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2550bdae36c113e4a47d24b4ea74558c357b9dd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bidirectional indexOf/lastIndexOf&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Bidirectional indexOf / lastIndexOf&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dca676a8af0cab5dcd796ab1ed5917f8c1ae0c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;My recommendation:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Mi recomendaci&amp;oacute;n:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da2dcdbcfc4b0fe47450de9fb9a98320068c3e91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update from 2019: This answer is from 2008 (11 years old!) and is not relevant for modern JS usage. The promised performance improvement was based on a benchmark done in browsers of that time. It might not be relevant to modern JS execution contexts. If you need an easy solution, look for other answers. If you need the best performance, benchmark for yourself in the relevant execution environments.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Actualizaci&amp;oacute;n de 2019: esta respuesta es de 2008 (&amp;iexcl;11 a&amp;ntilde;os!) Y no es relevante para el uso moderno de JS.&lt;/strong&gt; &lt;strong&gt;La mejora de rendimiento prometida se bas&amp;oacute; en un punto de referencia realizado en los navegadores de la &amp;eacute;poca.&lt;/strong&gt; &lt;strong&gt;Puede que no sea relevante para los contextos modernos de ejecuci&amp;oacute;n de JS.&lt;/strong&gt; &lt;strong&gt;Si necesita una soluci&amp;oacute;n f&amp;aacute;cil, busque otras respuestas.&lt;/strong&gt; &lt;strong&gt;Si necesita el mejor rendimiento, h&amp;aacute;galo una referencia en los entornos de ejecuci&amp;oacute;n relevantes.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9188873b53a0860b8d45c86992acf0ce33ebbec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usage:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3dd7f728110b6212e76f1f99084dfc27e75be15a" translate="yes" xml:space="preserve">
          <source>A performant way has already been found, looking at the top answers. From those I chose the &lt;code&gt;contains&lt;/code&gt; function posted by @Damir Zekic which should be the fastest one. But it also states that the benchmarks are from 2008 and so are outdated.</source>
          <target state="translated">Ya se ha encontrado una forma eficaz, mirando las respuestas principales. De los que eleg&amp;iacute;, la funci&amp;oacute;n &lt;code&gt;contains&lt;/code&gt; publicada por @Damir Zekic, que deber&amp;iacute;a ser la m&amp;aacute;s r&amp;aacute;pida. Pero tambi&amp;eacute;n establece que los puntos de referencia son de 2008 y, por lo tanto, est&amp;aacute;n desactualizados.</target>
        </trans-unit>
        <trans-unit id="3fea7bc0c9c385deaf9e732da8ef43205ce4079c" translate="yes" xml:space="preserve">
          <source>AFAICS &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/k4h76zbx%5C%28VS.85%5C%29.aspx&quot;&gt;Microsoft does &lt;em&gt;not&lt;/em&gt; offer some kind of alternative&lt;/a&gt; to this, but you can add similar functionality to arrays in Internet Explorer (and other browsers that don't support &lt;code&gt;indexOf&lt;/code&gt;) if you want to, as a &lt;a href=&quot;http://google.com/search?q=indexof%20internet%20explorer&quot;&gt;quick Google search reveals&lt;/a&gt; (for example, &lt;a href=&quot;http://soledadpenades.com/2007/05/17/arrayindexof-in-internet-explorer/&quot;&gt;this one&lt;/a&gt;).</source>
          <target state="translated">AFAICS &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/k4h76zbx%5C%28VS.85%5C%29.aspx&quot;&gt;Microsoft &lt;em&gt;no&lt;/em&gt; ofrece alg&amp;uacute;n tipo de alternativa&lt;/a&gt; a esto, pero puede agregar una funcionalidad similar a las matrices en Internet Explorer (y otros navegadores que no admiten &lt;code&gt;indexOf&lt;/code&gt; ) si lo desea, como &lt;a href=&quot;http://google.com/search?q=indexof%20internet%20explorer&quot;&gt;revela una b&amp;uacute;squeda r&amp;aacute;pida en Google&lt;/a&gt; (por ejemplo, &lt;a href=&quot;http://soledadpenades.com/2007/05/17/arrayindexof-in-internet-explorer/&quot;&gt;esto uno&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2e1a21db865a12dc215cd0757653828363ce0b37" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;http://github.com/sstephenson/prototype/blob/f405b2c510e09b55d08c926a9e1a5c2e2d0a1834/src/lang/array.js#L364-365&quot;&gt;here&lt;/a&gt; for how they hook it up.</source>
          <target state="translated">Tambi&amp;eacute;n vea &lt;a href=&quot;http://github.com/sstephenson/prototype/blob/f405b2c510e09b55d08c926a9e1a5c2e2d0a1834/src/lang/array.js#L364-365&quot;&gt;aqu&amp;iacute;&lt;/a&gt; c&amp;oacute;mo lo conectan.</target>
        </trans-unit>
        <trans-unit id="ef2cd47054f7c2e7287dcdcf3389cdb38c008c53" translate="yes" xml:space="preserve">
          <source>Also unlike &lt;code&gt;indexOf&lt;/code&gt;, &lt;code&gt;includes&lt;/code&gt; does not skip missing indices:</source>
          <target state="translated">Adem&amp;aacute;s, a diferencia de &lt;code&gt;indexOf&lt;/code&gt; , include no omite los &amp;iacute;ndices faltantes:</target>
        </trans-unit>
        <trans-unit id="fe1263bbb735fe48bd1e929be3a7542be2dfbbe3" translate="yes" xml:space="preserve">
          <source>Also, it fits nicely in an &lt;code&gt;if&lt;/code&gt; statement since it returns a boolean:</source>
          <target state="translated">Adem&amp;aacute;s, encaja bien en una instrucci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; ya que devuelve un valor booleano:</target>
        </trans-unit>
        <trans-unit id="fd49cf48d65e8591372b9ab2e58ef2862979ec3c" translate="yes" xml:space="preserve">
          <source>And here is the &lt;code&gt;while&lt;/code&gt; variant:</source>
          <target state="translated">Y aqu&amp;iacute; est&amp;aacute; la variante &lt;code&gt;while&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e9e912c3f4aaddf36a551e9a19f1b31785ce824c" translate="yes" xml:space="preserve">
          <source>And now you can simply use the following:</source>
          <target state="translated">Y ahora puedes usar simplemente lo siguiente:</target>
        </trans-unit>
        <trans-unit id="28746dfd1b61ed6d0a8ada4c2b2b65c189a03dc0" translate="yes" xml:space="preserve">
          <source>Array.prototype.&lt;strong&gt;find&lt;/strong&gt; -&amp;gt; (takes callback, returns first &lt;strong&gt;value/object&lt;/strong&gt; that returns true in CB).</source>
          <target state="translated">Array.prototype. &lt;strong&gt;find&lt;/strong&gt; -&amp;gt; (toma la devoluci&amp;oacute;n de llamada, devuelve el primer &lt;strong&gt;valor / objeto&lt;/strong&gt; que devuelve verdadero en CB).</target>
        </trans-unit>
        <trans-unit id="2a2ae4f8c0c85f5dda2d7c7b158b42785c2c9b38" translate="yes" xml:space="preserve">
          <source>Array.prototype.&lt;strong&gt;findIndex&lt;/strong&gt; -&amp;gt; (takes callback, returns &lt;strong&gt;index&lt;/strong&gt; of first value/object that returns true in CB).</source>
          <target state="translated">Array.prototype. &lt;strong&gt;findIndex&lt;/strong&gt; -&amp;gt; (toma la devoluci&amp;oacute;n de llamada, devuelve el &lt;strong&gt;&amp;iacute;ndice&lt;/strong&gt; del primer valor / objeto que devuelve verdadero en CB).</target>
        </trans-unit>
        <trans-unit id="13774ea8043b54624cbe8f2322d27cbd49c3f695" translate="yes" xml:space="preserve">
          <source>Array.prototype.&lt;strong&gt;includes&lt;/strong&gt; -&amp;gt; (returns &lt;strong&gt;true&lt;/strong&gt; or &lt;strong&gt;false&lt;/strong&gt;)</source>
          <target state="translated">Array.prototype. &lt;strong&gt;incluye&lt;/strong&gt; -&amp;gt; (devuelve &lt;strong&gt;verdadero&lt;/strong&gt; o &lt;strong&gt;falso&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="159144824cccf4c9146f260d2d0aec916594f068" translate="yes" xml:space="preserve">
          <source>Array.prototype.&lt;strong&gt;indexOf&lt;/strong&gt; -&amp;gt; (returns &lt;strong&gt;index or -1&lt;/strong&gt;) is generally used for finding index of element in array.
This can also be used for searching object but only works if you are passing reference to same object.</source>
          <target state="translated">Array.prototype. &lt;strong&gt;indexOf&lt;/strong&gt; -&amp;gt; (devuelve &lt;strong&gt;&amp;iacute;ndice o -1&lt;/strong&gt; ) se usa generalmente para encontrar el &amp;iacute;ndice del elemento en la matriz. Esto tambi&amp;eacute;n se puede usar para buscar objetos, pero solo funciona si est&amp;aacute; pasando referencias al mismo objeto.</target>
        </trans-unit>
        <trans-unit id="ee6d18b2067d77f05479b33415bea0665938366f" translate="yes" xml:space="preserve">
          <source>As custom Array method (pre ES2016)</source>
          <target state="translated">Como el método Array personalizado (pre ES2016)</target>
        </trans-unit>
        <trans-unit id="820471fc96bdf044cac7a71fa7e5925072bd7715" translate="yes" xml:space="preserve">
          <source>As others have said, the iteration through the array is probably the best way, but it &lt;a href=&quot;http://blogs.oracle.com/greimer/entry/best_way_to_code_a&quot;&gt;has been proven&lt;/a&gt; that a decreasing &lt;code&gt;while&lt;/code&gt; loop is the fastest way to iterate in JavaScript. So you may want to rewrite your code as follows:</source>
          <target state="translated">Como otros han dicho, la iteraci&amp;oacute;n a trav&amp;eacute;s de la matriz es probablemente la mejor manera, pero se &lt;a href=&quot;http://blogs.oracle.com/greimer/entry/best_way_to_code_a&quot;&gt;ha demostrado&lt;/a&gt; que un ciclo &lt;code&gt;while&lt;/code&gt; decreciente es la forma m&amp;aacute;s r&amp;aacute;pida de iterar en JavaScript. Por lo tanto, es posible que desee volver a escribir su c&amp;oacute;digo de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="a183a9029e6053aa206bd8f78fb63e1bcdddaac1" translate="yes" xml:space="preserve">
          <source>As test I created an array with 100k entries.</source>
          <target state="translated">Como prueba creé una matriz con 100k entradas.</target>
        </trans-unit>
        <trans-unit id="9d7e7c087b4bd3ac73364918b2ee9cb9c1799676" translate="yes" xml:space="preserve">
          <source>Below are three ways of checking whether there is a &lt;code&gt;3&lt;/code&gt; in there. All of them return either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">A continuaci&amp;oacute;n hay tres formas de verificar si hay un &lt;code&gt;3&lt;/code&gt; all&amp;iacute;. Todos ellos devuelven &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d963cfab70d8c850b1221649bcc7b4d96d558d3" translate="yes" xml:space="preserve">
          <source>Bonus</source>
          <target state="translated">Bonus</target>
        </trans-unit>
        <trans-unit id="00d426145cd70803b163fe1889541e0436672a9b" translate="yes" xml:space="preserve">
          <source>Currently it's still a draft but can be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Polyfill&quot;&gt;polyfilled&lt;/a&gt; to make it work on all browsers.</source>
          <target state="translated">Actualmente todav&amp;iacute;a es un borrador, pero se puede &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Polyfill&quot;&gt;rellenar&lt;/a&gt; para que funcione en todos los navegadores.</target>
        </trans-unit>
        <trans-unit id="e52c854d5631eec7468ba4727b4c77eb745f2965" translate="yes" xml:space="preserve">
          <source>Demo</source>
          <target state="translated">Demo</target>
        </trans-unit>
        <trans-unit id="83d36288b5c8873730d74ec2bee7f0a6e4883b2f" translate="yes" xml:space="preserve">
          <source>Demo:</source>
          <target state="translated">Demo:</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="b75e71a9c0a73c636523fc12a59e51c67115ee2c" translate="yes" xml:space="preserve">
          <source>Dojo Toolkit: &lt;a href=&quot;http://dojotoolkit.org/reference-guide/dojo/indexOf.html&quot;&gt;&lt;code&gt;dojo.indexOf(array, value, [fromIndex, findLast])&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Dojo Toolkit: &lt;a href=&quot;http://dojotoolkit.org/reference-guide/dojo/indexOf.html&quot;&gt; &lt;code&gt;dojo.indexOf(array, value, [fromIndex, findLast])&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7eb5e66ccf7ff4b0c3e12f9b838e3c060dbe7ab" translate="yes" xml:space="preserve">
          <source>ECMAScript 6 has an elegant proposal on find.</source>
          <target state="translated">ECMAScript 6 tiene una elegante propuesta en marcha.</target>
        </trans-unit>
        <trans-unit id="b288b702748358f62fc1dabe0b0e9ae73618544c" translate="yes" xml:space="preserve">
          <source>ECMAScript 7 introduces &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot;&gt;&lt;code&gt;Array.prototype.includes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ECMAScript 7 presenta &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot;&gt; &lt;code&gt;Array.prototype.includes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="ac15517e284529ed9d77b5e4ab5790a55e8af0bf" translate="yes" xml:space="preserve">
          <source>Ext: &lt;a href=&quot;http://docs.sencha.com/extjs/4.0.0/#/api/Ext.Array-method-contains&quot;&gt;&lt;code&gt;Ext.Array.contains(array, value)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ext: &lt;a href=&quot;http://docs.sencha.com/extjs/4.0.0/#/api/Ext.Array-method-contains&quot;&gt; &lt;code&gt;Ext.Array.contains(array, value)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb68107e5febdf35eea1d01bad4984345866f1fd" translate="yes" xml:space="preserve">
          <source>Extending the JavaScript &lt;code&gt;Array&lt;/code&gt; object is a really bad idea because you introduce new properties (your custom methods) into &lt;code&gt;for-in&lt;/code&gt; loops which can break existing scripts. A few years ago the authors of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework&quot;&gt;Prototype&lt;/a&gt; library had to re-engineer their library implementation to remove just this kind of thing.</source>
          <target state="translated">Ampliar el objeto de &lt;code&gt;Array&lt;/code&gt; JavaScript es una muy mala idea porque introduce nuevas propiedades (sus m&amp;eacute;todos personalizados) &lt;code&gt;for-in&lt;/code&gt; bucles for-in que pueden romper los scripts existentes. Hace unos a&amp;ntilde;os, los autores de la biblioteca &lt;a href=&quot;http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework&quot;&gt;Prototype&lt;/a&gt; tuvieron que redise&amp;ntilde;ar la implementaci&amp;oacute;n de su biblioteca para eliminar este tipo de cosas.</target>
        </trans-unit>
        <trans-unit id="f5ec22899f4427f21921edbbd5e8fb8dcb009ec9" translate="yes" xml:space="preserve">
          <source>Here is a complex example doing three checks per iteration, but this is only possible with a longer calculation which causes the slowdown of the code.</source>
          <target state="translated">He aquí un ejemplo complejo haciendo tres comprobaciones por iteración,pero esto sólo es posible con un cálculo más largo que causa la ralentización del código.</target>
        </trans-unit>
        <trans-unit id="32a46c0daf7a31dffc5357242054af1019b73d24" translate="yes" xml:space="preserve">
          <source>Here is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find&quot;&gt;MDN documentation&lt;/a&gt; on that.</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; la &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find&quot;&gt;documentaci&amp;oacute;n de MDN&lt;/a&gt; sobre eso.</target>
        </trans-unit>
        <trans-unit id="f73591287f9a256c22a935074fa54f1b4edc5742" translate="yes" xml:space="preserve">
          <source>Here's a &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf&quot;&gt;JavaScript 1.6 compatible&lt;/a&gt; implementation of &lt;code&gt;Array.indexOf&lt;/code&gt;:</source>
          <target state="translated">Aqu&amp;iacute; hay una implementaci&amp;oacute;n &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf&quot;&gt;compatible con JavaScript 1.6&lt;/a&gt; de &lt;code&gt;Array.indexOf&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="73ddb6b3efa49acc39d3b80f97da9706b3ea2e7a" translate="yes" xml:space="preserve">
          <source>Here's how &lt;a href=&quot;http://github.com/sstephenson/prototype/blob/f405b2c510e09b55d08c926a9e1a5c2e2d0a1834/src/lang/array.js#L286-302&quot;&gt;Prototype does it&lt;/a&gt;:</source>
          <target state="translated">As&amp;iacute; es como lo &lt;a href=&quot;http://github.com/sstephenson/prototype/blob/f405b2c510e09b55d08c926a9e1a5c2e2d0a1834/src/lang/array.js#L286-302&quot;&gt;hace Prototype&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="20ae8e0c00b1fa1a1071d47bdb057532c38b84b1" translate="yes" xml:space="preserve">
          <source>How do I check if an array includes a value in JavaScript</source>
          <target state="translated">¿Cómo puedo comprobar si una matriz incluye un valor en JavaScript</target>
        </trans-unit>
        <trans-unit id="2494e96cd66323400e7154384c7f185dc839ebd1" translate="yes" xml:space="preserve">
          <source>How is this possible?</source>
          <target state="translated">¿Cómo es posible?</target>
        </trans-unit>
        <trans-unit id="c99fe5750c3181f3859af356a418988a87310708" translate="yes" xml:space="preserve">
          <source>I also prefer &lt;code&gt;while&lt;/code&gt; over &lt;code&gt;for&lt;/code&gt;, but for not a specific reason I ended writing the function with a for loop. It could be also done with a &lt;code&gt;while --&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n prefiero terminar, pero por una raz&amp;oacute;n no espec&amp;iacute;fica termin&amp;eacute; escribiendo la funci&amp;oacute;n con un bucle for. Tambi&amp;eacute;n podr&amp;iacute;a hacerse con un &lt;code&gt;while --&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e7f926e0198c33afed235e77fff45b62d69efaf" translate="yes" xml:space="preserve">
          <source>I also run test for big array when searched element was on position 66% of array length, and solutions based on &lt;code&gt;for&lt;/code&gt; (C,D,E) gives similar results (~630 ops/sec - but the E on safari and firefox was 10-20% slower than C and D)</source>
          <target state="translated">Tambi&amp;eacute;n ejecut&amp;eacute; la prueba de matriz grande cuando el elemento buscado estaba en la posici&amp;oacute;n 66% de la longitud de la matriz, y las soluciones basadas en (C, D, E) dan resultados similares (~ 630 operaciones / seg, pero la E en safari y firefox era 10 -20% m&amp;aacute;s lento que C y D)</target>
        </trans-unit>
        <trans-unit id="84464b4ca7dfa8c6d4801774a3135af233b2ebac" translate="yes" xml:space="preserve">
          <source>I hope you also find this interesting and test the performance.</source>
          <target state="translated">Espero que también encuentre esto interesante y pruebe la actuación.</target>
        </trans-unit>
        <trans-unit id="9dcc9d0305378204bf3ede8b2618fed0eb90649c" translate="yes" xml:space="preserve">
          <source>I perform 2 tests cases: for array with 10 elements, and array with 1 milion elements. In both cases we put searched element in the array middle.</source>
          <target state="translated">Realizo 2 casos de prueba:para la matriz con 10 elementos,y la matriz con 1 millón de elementos.En ambos casos ponemos el elemento buscado en el medio de la matriz.</target>
        </trans-unit>
        <trans-unit id="0b8a1c5b70eefb3d48daa75b54a499297c28805a" translate="yes" xml:space="preserve">
          <source>I think that the simple calculation to get the reflected index in an array is so simple that it's two times faster than doing an actual loop iteration.</source>
          <target state="translated">Creo que el simple cálculo para obtener el índice reflejado en una matriz es tan simple que es dos veces más rápido que hacer una iteración de bucle real.</target>
        </trans-unit>
        <trans-unit id="c9fe622e69b560ae352d96f8ff0fcf61e9c7bed2" translate="yes" xml:space="preserve">
          <source>I use the following:</source>
          <target state="translated">Uso lo siguiente:</target>
        </trans-unit>
        <trans-unit id="28e4ffc52f1e8141f4b7d43d5c75f149bcd5dfc8" translate="yes" xml:space="preserve">
          <source>I was curious if the iteration was much slower if I check both sides of the array while doing it. Apparently no, and so this function is around two times faster than the top voted ones. Obviously it's also faster than the native one. This in a real world environment, where you never know if the value you are searching is at the beginning or at the end of the array.</source>
          <target state="translated">Tenía curiosidad por saber si la iteración era mucho más lenta si reviso ambos lados de la matriz mientras lo hago.Aparentemente no,y por eso esta función es alrededor de dos veces más rápida que las más votadas.Obviamente también es más rápida que la nativa.Esto en un entorno del mundo real,donde nunca sabes si el valor que buscas está al principio o al final del array.</target>
        </trans-unit>
        <trans-unit id="b9f22fd83bdf3e491fb6e80ec269fbb800d6ee83" translate="yes" xml:space="preserve">
          <source>IE6+ solution:</source>
          <target state="translated">Solución de IE6+:</target>
        </trans-unit>
        <trans-unit id="e2c5590817181cc7e7c8909b5f1ca3dd5150eaf6" translate="yes" xml:space="preserve">
          <source>If you are checking repeatedly for existence of an object in an array you should maybe look into</source>
          <target state="translated">Si estás comprobando repetidamente la existencia de un objeto en una matriz,tal vez deberías mirar en</target>
        </trans-unit>
        <trans-unit id="625b41de336989cef496844e1118db8209392193" translate="yes" xml:space="preserve">
          <source>If you are using JavaScript 1.6 or later (Firefox 1.5 or later) you can use &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf&quot;&gt;Array.indexOf&lt;/a&gt;.  Otherwise, I think you are going to end up with something similar to your original code.</source>
          <target state="translated">Si est&amp;aacute; utilizando JavaScript 1.6 o posterior (Firefox 1.5 o posterior) puede usar &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/indexOf&quot;&gt;Array.indexOf&lt;/a&gt; . De lo contrario, creo que terminar&amp;aacute;s con algo similar a tu c&amp;oacute;digo original.</target>
        </trans-unit>
        <trans-unit id="3ee6e017af8f89d3d12e3d78389bb4add3cf2317" translate="yes" xml:space="preserve">
          <source>If you don't need to worry about compatibility with other JavaScript running on your page, go for it, otherwise, I'd recommend the more awkward, but safer free-standing function solution.</source>
          <target state="translated">Si no necesitas preocuparte por la compatibilidad con otros JavaScript que se ejecuten en tu página,hazlo,de lo contrario,te recomendaría la solución más incómoda,pero más segura de la función independiente.</target>
        </trans-unit>
        <trans-unit id="2daaa05340a4a5fbf45632f41108223c525f42cf" translate="yes" xml:space="preserve">
          <source>If you're having array of objects like below,</source>
          <target state="translated">Si tienes un conjunto de objetos como los de abajo,</target>
        </trans-unit>
        <trans-unit id="d2da7e5fc690c05c7dd880dab7d51eecaf495e88" translate="yes" xml:space="preserve">
          <source>In order to handle both scalars and objects, you could do this:</source>
          <target state="translated">Para poder manejar tanto los escalares como los objetos,podrías hacer esto:</target>
        </trans-unit>
        <trans-unit id="fbb0ba0cb144ea9ec30e8a02f59189cac1e0fd83" translate="yes" xml:space="preserve">
          <source>Is there a better and more concise way to accomplish this?</source>
          <target state="translated">¿Existe una forma mejor y más concisa de lograr esto?</target>
        </trans-unit>
        <trans-unit id="96524039763060c62193d4b3f2e8e0aeb1a9c048" translate="yes" xml:space="preserve">
          <source>It also accepts an optional second argument &lt;code&gt;fromIndex&lt;/code&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n acepta un segundo argumento opcional de &lt;code&gt;fromIndex&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7957cdd685e55b0659e0f881b1501d7538cec20a" translate="yes" xml:space="preserve">
          <source>It can be used like this:</source>
          <target state="translated">Se puede usar así:</target>
        </trans-unit>
        <trans-unit id="dec9bd251fe067dfc0548c5c6f8d543981f5dc35" translate="yes" xml:space="preserve">
          <source>It's concise, accurate and has great cross platform support.</source>
          <target state="translated">Es conciso,preciso y tiene un gran soporte de plataforma cruzada.</target>
        </trans-unit>
        <trans-unit id="d7b1386bed9cbbf81dba8983bdb2c019db7c6ebc" translate="yes" xml:space="preserve">
          <source>It's long time that I was thinking of way to replace the slow indexOf/lastIndexOf functions.</source>
          <target state="translated">Hace mucho tiempo que pensaba en la forma de reemplazar el lento índice de funciones.</target>
        </trans-unit>
        <trans-unit id="25b2e1835d0c0287f224776b63a40c7d557a0824" translate="yes" xml:space="preserve">
          <source>Keeping the array sorted at all times by doing &lt;a href=&quot;http://en.wikipedia.org/wiki/Insertion_sort&quot;&gt;insertion sort&lt;/a&gt; in your array (put new objects in on the right place)</source>
          <target state="translated">Mantener la matriz ordenada en todo momento haciendo una &lt;a href=&quot;http://en.wikipedia.org/wiki/Insertion_sort&quot;&gt;ordenaci&amp;oacute;n&lt;/a&gt; por inserci&amp;oacute;n en su matriz (coloque nuevos objetos en el lugar correcto)</target>
        </trans-unit>
        <trans-unit id="fc09e2e02a3b9b59afbbd4c12fd5ae7cc7d86edf" translate="yes" xml:space="preserve">
          <source>Let's say we have array of Objects arrObj and we want to search obj in it.</source>
          <target state="translated">Digamos que tenemos un conjunto de objetos y queremos buscar objetos en él.</target>
        </trans-unit>
        <trans-unit id="5dcdd6376733383c88fb8505f672ce2c465e3ee7" translate="yes" xml:space="preserve">
          <source>Let's say you've defined an array like so:</source>
          <target state="translated">Digamos que has definido una matriz como tal:</target>
        </trans-unit>
        <trans-unit id="1133d8a8268183b654cc15e962adec1905def045" translate="yes" xml:space="preserve">
          <source>Lodash: &lt;a href=&quot;https://lodash.com/docs#includes&quot;&gt;&lt;code&gt;_.includes(array, value, [from])&lt;/code&gt;&lt;/a&gt; (is &lt;code&gt;_.contains&lt;/code&gt; prior 4.0.0)</source>
          <target state="translated">Lodash: &lt;a href=&quot;https://lodash.com/docs#includes&quot;&gt; &lt;code&gt;_.includes(array, value, [from])&lt;/code&gt; &lt;/a&gt; (es &lt;code&gt;_.contains&lt;/code&gt; 4.0.0 anterior)</target>
        </trans-unit>
        <trans-unit id="15ad60cdf54e6bc76cdd4462ba0c40f97badfa2d" translate="yes" xml:space="preserve">
          <source>MS Ajax: &lt;a href=&quot;http://www.asp.net/ajaxlibrary/Reference.Array-indexOf-Function.ashx&quot;&gt;&lt;code&gt;array.indexOf(value)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">MS Ajax: &lt;a href=&quot;http://www.asp.net/ajaxlibrary/Reference.Array-indexOf-Function.ashx&quot;&gt; &lt;code&gt;array.indexOf(value)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84984b49ae654a77558f7a39ed56f68055a47884" translate="yes" xml:space="preserve">
          <source>Make updating objects as remove+sorted insert operation and</source>
          <target state="translated">Hacer que la actualización de los objetos como la operación de inserción de quitar+clasificar y</target>
        </trans-unit>
        <trans-unit id="13f96a3206465a40fdd57b0c45a1c47a96492ce3" translate="yes" xml:space="preserve">
          <source>Many frameworks also offer similar methods:</source>
          <target state="translated">Muchos marcos también ofrecen métodos similares:</target>
        </trans-unit>
        <trans-unit id="34b498db5861179f4d01de30ad382c1c99d173a6" translate="yes" xml:space="preserve">
          <source>MochiKit: &lt;a href=&quot;http://mochi.github.io/mochikit/doc/html/MochiKit/Base.html#fn-findvalue&quot;&gt;&lt;code&gt;findValue(array, value)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://mochi.github.io/mochikit/doc/html/MochiKit/Base.html#fn-findvalue&quot;&gt; &lt;code&gt;findValue(array, value)&lt;/code&gt; &lt;/a&gt; : findValue (matriz, valor)</target>
        </trans-unit>
        <trans-unit id="11bd5cb3c081453f6118ff4b291498d2d7511e0d" translate="yes" xml:space="preserve">
          <source>Modern browsers have &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Browser_compatibility&quot;&gt;&lt;code&gt;Array#includes&lt;/code&gt;&lt;/a&gt;, which does &lt;em&gt;exactly&lt;/em&gt; that and &lt;a href=&quot;https://kangax.github.io/compat-table/es2016plus/#test-Array.prototype.includes&quot;&gt;is widely supported&lt;/a&gt; by everyone except IE:</source>
          <target state="translated">Los navegadores modernos tienen &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes#Browser_compatibility&quot;&gt; &lt;code&gt;Array#includes&lt;/code&gt; &lt;/a&gt; , que hace &lt;em&gt;exactamente&lt;/em&gt; eso y &lt;a href=&quot;https://kangax.github.io/compat-table/es2016plus/#test-Array.prototype.includes&quot;&gt;es ampliamente compatible&lt;/a&gt; con todos, excepto IE:</target>
        </trans-unit>
        <trans-unit id="ac5f3f86aeba412f6c7300de9ded324b814b2be2" translate="yes" xml:space="preserve">
          <source>MooTools: &lt;a href=&quot;https://mootools.net/core/docs/1.6.0/Types/Array#Array:indexOf&quot;&gt;&lt;code&gt;array.indexOf(value)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">MooTools: &lt;a href=&quot;https://mootools.net/core/docs/1.6.0/Types/Array#Array:indexOf&quot;&gt; &lt;code&gt;array.indexOf(value)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f9f5580daea7b8f13b0defea3a5dc9f8652aa84" translate="yes" xml:space="preserve">
          <source>Native Array method (since ES2016) (&lt;a href=&quot;https://caniuse.com/#feat=array-includes&quot;&gt;compatibility table&lt;/a&gt;)</source>
          <target state="translated">M&amp;eacute;todo de matriz nativa (desde ES2016) ( &lt;a href=&quot;https://caniuse.com/#feat=array-includes&quot;&gt;tabla de compatibilidad&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="697f83c56e4af8a3d870ae1c1d3850dac14005f4" translate="yes" xml:space="preserve">
          <source>Non-optimized ES6 one-liner:</source>
          <target state="translated">ES6 no optimizado de una línea:</target>
        </trans-unit>
        <trans-unit id="cf369e9f80a3aee5118b14ec07f5711bfcb6fc0f" translate="yes" xml:space="preserve">
          <source>Note:
Comparing objects by value will work better if the keys are in the same order, so to be safe you might sort the keys first with a package like this one: &lt;a href=&quot;https://www.npmjs.com/package/sort-keys&quot;&gt;https://www.npmjs.com/package/sort-keys&lt;/a&gt;</source>
          <target state="translated">Nota: Comparar objetos por valor funcionar&amp;aacute; mejor si las claves est&amp;aacute;n en el mismo orden, por lo que, para estar seguro, puede ordenar las claves primero con un paquete como este: &lt;a href=&quot;https://www.npmjs.com/package/sort-keys&quot;&gt;https://www.npmjs.com/package/sort-keys&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11415b96e3d11a9e4bc779554b10a502ba013727" translate="yes" xml:space="preserve">
          <source>Note: As you can see I slightly modified the &lt;code&gt;contains&lt;/code&gt; function to reflect the indexOf &amp;amp; lastIndexOf output (so basically &lt;code&gt;true&lt;/code&gt; with the &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; with &lt;code&gt;-1&lt;/code&gt;). That shouldn't harm it.</source>
          <target state="translated">Nota: Como puede ver, modifiqu&amp;eacute; ligeramente la funci&amp;oacute;n &lt;code&gt;contains&lt;/code&gt; para reflejar el resultado indexOf &amp;amp; lastIndexOf (as&amp;iacute; que b&amp;aacute;sicamente es &lt;code&gt;true&lt;/code&gt; con el &lt;code&gt;index&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; con &lt;code&gt;-1&lt;/code&gt; ). Eso no deber&amp;iacute;a da&amp;ntilde;arlo.</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="f625fa0058ddfcc2adcd5b53ac3bb76651142210" translate="yes" xml:space="preserve">
          <source>Notice that some frameworks implement this as a function, while others add the function to the array prototype.</source>
          <target state="translated">Obsérvese que algunos marcos implementan esto como una función,mientras que otros añaden la función al prototipo de la matriz.</target>
        </trans-unit>
        <trans-unit id="40a0fca5b4ff80b27dceac44499b495cb11b44ad" translate="yes" xml:space="preserve">
          <source>OK, you can just &lt;strong&gt;optimise your&lt;/strong&gt; code to get the result!</source>
          <target state="translated">OK, &amp;iexcl;puedes &lt;strong&gt;optimizar tu&lt;/strong&gt; c&amp;oacute;digo para obtener el resultado!</target>
        </trans-unit>
        <trans-unit id="c6004473778dc819accd15d1a64aa218f11402d1" translate="yes" xml:space="preserve">
          <source>Of course, you may as well extend Array prototype:</source>
          <target state="translated">Por supuesto,también puede extender el prototipo de la matriz:</target>
        </trans-unit>
        <trans-unit id="f479744c024205bcadceb234c72adf9ccab6115d" translate="yes" xml:space="preserve">
          <source>One can use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;Set&lt;/a&gt; that has the method &quot;has()&quot;:</source>
          <target state="translated">Se puede usar &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;Set&lt;/a&gt; que tiene el m&amp;eacute;todo &quot;has ()&quot;:</target>
        </trans-unit>
        <trans-unit id="825581b147d158d0a4fcbad34b8422e021ee90b1" translate="yes" xml:space="preserve">
          <source>One-liner:</source>
          <target state="translated">One-liner:</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="68c145e8a882446ce410a8fffbfe92a5b1901acc" translate="yes" xml:space="preserve">
          <source>Performance test</source>
          <target state="translated">Prueba de rendimiento</target>
        </trans-unit>
        <trans-unit id="14af93ac2aa339aa659d1348d1120c589b66f432" translate="yes" xml:space="preserve">
          <source>Prototype: &lt;a href=&quot;http://api.prototypejs.org/language/Array/prototype/indexOf/&quot;&gt;&lt;code&gt;array.indexOf(value)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Prototipo: &lt;a href=&quot;http://api.prototypejs.org/language/Array/prototype/indexOf/&quot;&gt; &lt;code&gt;array.indexOf(value)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7effb1c9ae5bdca656da5f4d5ba15d3df67f272" translate="yes" xml:space="preserve">
          <source>Ramda: &lt;a href=&quot;https://ramdajs.com/docs/#includes&quot;&gt;&lt;code&gt;R.includes(value, array)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ramda: &lt;a href=&quot;https://ramdajs.com/docs/#includes&quot;&gt; &lt;code&gt;R.includes(value, array)&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="612e12d29278b5519294bc25cdaddffec6d0f1c6" translate="yes" xml:space="preserve">
          <source>Results</source>
          <target state="translated">Results</target>
        </trans-unit>
        <trans-unit id="e8323adb0162f1ecb663442b5fcc7ca8dcc10b18" translate="yes" xml:space="preserve">
          <source>Returns array index if found, or -1 if not found</source>
          <target state="translated">Devuelve el índice de la matriz si se encuentra,o -1 si no se encuentra</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">Mostrar fragmento de código</target>
        </trans-unit>
        <trans-unit id="cde8d71a70567d48dd01952e68d8fa1e0ed18bca" translate="yes" xml:space="preserve">
          <source>Simple function</source>
          <target state="translated">Función simple</target>
        </trans-unit>
        <trans-unit id="0e9d5dfd8c62d9bd7b04e68e33d6289e0216ca1f" translate="yes" xml:space="preserve">
          <source>Simple solution for this requirement is using &lt;code&gt;find()&lt;/code&gt;</source>
          <target state="translated">La soluci&amp;oacute;n simple para este requisito es usar &lt;code&gt;find()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cba0b4c636764d40e59c45dfcbeaff8fd15c2f2f" translate="yes" xml:space="preserve">
          <source>Since find and findIndex takes a callback, we can be fetch any object(even if we don't have the reference) from array by creatively setting the true condition.</source>
          <target state="translated">Dado que find and findIndex recibe una llamada de retorno,podemos buscar cualquier objeto (incluso si no tenemos la referencia)de la matriz estableciendo creativamente la verdadera condición.</target>
        </trans-unit>
        <trans-unit id="e8120e70e781059a2250649e3a26d1ef79737908" translate="yes" xml:space="preserve">
          <source>Solution that works in all modern browsers:</source>
          <target state="translated">Solución que funciona en todos los navegadores modernos:</target>
        </trans-unit>
        <trans-unit id="c76563a98a925864b596ec5d5c1c427850c1e563" translate="yes" xml:space="preserve">
          <source>Surprised that this question still doesn't have latest syntax added, adding my 2 cents.</source>
          <target state="translated">Me sorprende que esta pregunta aún no tenga la última sintaxis añadida,añadiendo mis 2 céntimos.</target>
        </trans-unit>
        <trans-unit id="e32c19490d0541d3cf19e6edf0e601f2c55e35c0" translate="yes" xml:space="preserve">
          <source>The accepted answer does not even meet the requirements.</source>
          <target state="translated">La respuesta aceptada ni siquiera cumple los requisitos.</target>
        </trans-unit>
        <trans-unit id="6e76714ac550731d4df9f2f4c7278a064a84b068" translate="yes" xml:space="preserve">
          <source>The array prototype variant</source>
          <target state="translated">La variante del prototipo de la matriz</target>
        </trans-unit>
        <trans-unit id="fbe496135ed624dc79a7b415841f95f2535966fe" translate="yes" xml:space="preserve">
          <source>The find functionality works like this.</source>
          <target state="translated">La funcionalidad de búsqueda funciona así.</target>
        </trans-unit>
        <trans-unit id="abb94027a4ec61a730cdc8afd975bf908ce25a48" translate="yes" xml:space="preserve">
          <source>The find method executes the callback function once for each element
  present in the array until it finds one where callback returns a true
  value. If such an element is found, find immediately returns the value
  of that element. Otherwise, find returns undefined. callback is
  invoked only for indexes of the array which have assigned values; it
  is not invoked for indexes which have been deleted or which have never
  been assigned values.</source>
          <target state="translated">El método de búsqueda ejecuta la función de devolución de llamada una vez por cada elemento presente en la matriz hasta que encuentra uno en el que la devolución de llamada devuelve un valor verdadero.Si se encuentra un elemento de este tipo,find devuelve inmediatamente el valor de ese elemento.De lo contrario,find devuelve indefinidamente.La devolución de llamada se invoca sólo para los índices de la matriz que tienen valores asignados;no se invoca para los índices que han sido borrados o a los que nunca se les han asignado valores.</target>
        </trans-unit>
        <trans-unit id="5b756913fa20f5856e97197d8d0fda4fbf36c558" translate="yes" xml:space="preserve">
          <source>The function can also be easily modified to return true or false or even the object, string or whatever it is.</source>
          <target state="translated">La función también puede ser fácilmente modificada para devolver verdadero o falso o incluso el objeto,cadena o lo que sea.</target>
        </trans-unit>
        <trans-unit id="42cafc36913e43d0dc7e04557d3be49392edb70e" translate="yes" xml:space="preserve">
          <source>The nice thing about it is that the iteration is aborted once the element is found so unnecessary iteration cycles are spared.</source>
          <target state="translated">Lo bueno de esto es que la iteración es abortada una vez que el elemento se encuentra,así que se evitan los ciclos de iteración innecesarios.</target>
        </trans-unit>
        <trans-unit id="c57bb5822f56318aa1093c9fd0bde5d8e450f3af" translate="yes" xml:space="preserve">
          <source>The top answers assume primitive types but if you want to find out if an array contains an &lt;strong&gt;object&lt;/strong&gt; with some trait, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt;Array.prototype.some()&lt;/a&gt; is a very elegant solution:</source>
          <target state="translated">Las respuestas principales suponen tipos primitivos, pero si desea averiguar si una matriz contiene un &lt;strong&gt;objeto&lt;/strong&gt; con alg&amp;uacute;n rasgo, &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/some&quot;&gt;Array.prototype.some ()&lt;/a&gt; es una soluci&amp;oacute;n muy elegante:</target>
        </trans-unit>
        <trans-unit id="8745427232de5b90792b54c573542edc52081778" translate="yes" xml:space="preserve">
          <source>Then you can check whether the object with your value is already present or not</source>
          <target state="translated">Entonces puede comprobar si el objeto con su valor ya está presente o no</target>
        </trans-unit>
        <trans-unit id="5e5170b7a4ad0e560f4e4f174f48e9a7abcbf1da" translate="yes" xml:space="preserve">
          <source>Then you can find the index of that object in the array and replace the object using below code.</source>
          <target state="translated">Entonces puedes encontrar el índice de ese objeto en la matriz y reemplazar el objeto usando el siguiente código.</target>
        </trans-unit>
        <trans-unit id="c9fd6f4ab61b50813778042886300ccd0e83bc2c" translate="yes" xml:space="preserve">
          <source>There are many ways to do this which are cleaner and better, but I just wanted to get your pattern and apply to that using &lt;code&gt;JSON.stringify&lt;/code&gt;, just simply do something like this in your case:</source>
          <target state="translated">Hay muchas maneras de hacer esto que son m&amp;aacute;s limpias y mejores, pero solo quer&amp;iacute;a obtener su patr&amp;oacute;n y aplicarlo usando &lt;code&gt;JSON.stringify&lt;/code&gt; , simplemente haga algo como esto en su caso:</target>
        </trans-unit>
        <trans-unit id="cc16540816c436314b02d39733fbde781a2be92d" translate="yes" xml:space="preserve">
          <source>Thinking out of the box for a second, if you are making this call many many times, it is vastly more efficient to use &lt;strike&gt;an associative array&lt;/strike&gt; a Map to do lookups using a hash function.</source>
          <target state="translated">Pensando fuera de la caja por un segundo, si est&amp;aacute; haciendo esta llamada muchas veces, es mucho m&amp;aacute;s eficiente usar &lt;strike&gt;una matriz asociativa&lt;/strike&gt; un Mapa para hacer b&amp;uacute;squedas usando una funci&amp;oacute;n hash.</target>
        </trans-unit>
        <trans-unit id="c90ebff9b8cace224a8ac140604be3b76e23637d" translate="yes" xml:space="preserve">
          <source>This is the only way I know to do it:</source>
          <target state="translated">Esta es la única manera que conozco de hacerlo:</target>
        </trans-unit>
        <trans-unit id="9fec1e19841ff4041bd895c4395ba1d97e9718e9" translate="yes" xml:space="preserve">
          <source>This is very closely related to Stack Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array&quot;&gt;Best way to find an item in a JavaScript Array?&lt;/a&gt;&lt;/em&gt; which addresses finding objects in an array using &lt;code&gt;indexOf&lt;/code&gt;.</source>
          <target state="translated">Esto est&amp;aacute; muy relacionado con la pregunta de desbordamiento de pila. &amp;iquest;La &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array&quot;&gt;mejor manera de encontrar un elemento en una matriz de JavaScript?&lt;/a&gt;&lt;/em&gt; que aborda la b&amp;uacute;squeda de objetos en una matriz usando &lt;code&gt;indexOf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b20c684ba339a0aa8fa186e3bd452c5a2f3f3d9" translate="yes" xml:space="preserve">
          <source>Three queries: at the beginning, in the middle &amp;amp; at the end of the array.</source>
          <target state="translated">Tres consultas: al principio, en el medio y al final de la matriz.</target>
        </trans-unit>
        <trans-unit id="5e26c8bf03eec1969b324604b86cbc899b237577" translate="yes" xml:space="preserve">
          <source>To know exactly what the &lt;code&gt;tilde&lt;/code&gt;&lt;code&gt;~&lt;/code&gt; do at this point, refer to this question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12299665/what-does-a-tilde-do-when-it-precedes-an-expression&quot;&gt;What does a tilde do when it precedes an expression?&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Para saber exactamente qu&amp;eacute; hace la &lt;code&gt;tilde&lt;/code&gt; en este punto, consulte esta pregunta &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/12299665/what-does-a-tilde-do-when-it-precedes-an-expression&quot;&gt;&amp;iquest;Qu&amp;eacute; hace una tilde cuando precede a una expresi&amp;oacute;n?&lt;/a&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="48cd98f9836826608a5509761b5545dff093468c" translate="yes" xml:space="preserve">
          <source>Today 2020.01.07 I perform tests on MacOs HighSierra 10.13.6 on Chrome v78.0.0, Safari v13.0.4 and Firefox v71.0.0 for 15 chosen solutions. Conclusions</source>
          <target state="translated">Hoy 2020.01.07 realizo pruebas en MacOs HighSierra 10.13.6 en Chrome v78.0.0,Safari v13.0.4 y Firefox v71.0.0 para 15 soluciones elegidas.Conclusiones</target>
        </trans-unit>
        <trans-unit id="49294c55abc80cbff078b924b2c630ec220213bf" translate="yes" xml:space="preserve">
          <source>Underscore.js: &lt;a href=&quot;http://underscorejs.org/#contains&quot;&gt;&lt;code&gt;_.contains(array, value)&lt;/code&gt;&lt;/a&gt; (also aliased as &lt;code&gt;_.include&lt;/code&gt; and &lt;code&gt;_.includes&lt;/code&gt;)</source>
          <target state="translated">Underscore.js: &lt;a href=&quot;http://underscorejs.org/#contains&quot;&gt; &lt;code&gt;_.contains(array, value)&lt;/code&gt; &lt;/a&gt; (tambi&amp;eacute;n alias como &lt;code&gt;_.include&lt;/code&gt; y &lt;code&gt;_.includes&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f3d059b896de2ed3d87cd30f8be35c02ffb5fc69" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;indexOf&lt;/code&gt;, which uses &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-strict-equality-comparison&quot;&gt;Strict Equality Comparison&lt;/a&gt;, &lt;code&gt;includes&lt;/code&gt; compares using &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-samevaluezero&quot;&gt;SameValueZero&lt;/a&gt; equality algorithm. That means that you can detect if an array includes a &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="translated">A diferencia de &lt;code&gt;indexOf&lt;/code&gt; , que usa la &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-strict-equality-comparison&quot;&gt;comparaci&amp;oacute;n estricta de igualdad&lt;/a&gt; , &lt;code&gt;includes&lt;/code&gt; comparaciones usando el algoritmo de igualdad &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-samevaluezero&quot;&gt;SameValueZero&lt;/a&gt; . Eso significa que puede detectar si una matriz incluye un &lt;code&gt;NaN&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="28771587e0631fb484f44d7bb44cf48c63b7758f" translate="yes" xml:space="preserve">
          <source>Updated the &lt;code&gt;contains&lt;/code&gt; function with a perf optimization. Thanks &lt;a href=&quot;https://stackoverflow.com/users/1397160/itinance&quot;&gt;itinance&lt;/a&gt; for pointing it out.</source>
          <target state="translated">Se actualiz&amp;oacute; la funci&amp;oacute;n &lt;code&gt;contains&lt;/code&gt; con una optimizaci&amp;oacute;n de rendimiento. Gracias a &lt;a href=&quot;https://stackoverflow.com/users/1397160/itinance&quot;&gt;ti&lt;/a&gt; por se&amp;ntilde;alarlo.</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="f0228254bb4ff82bb180b380d25a7ac8da7e9b8c" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;http://en.wikipedia.org/wiki/Binary_search_algorithm&quot;&gt;binary search&lt;/a&gt; lookup in your &lt;code&gt;contains(a, obj)&lt;/code&gt;.</source>
          <target state="translated">Utilice una &lt;a href=&quot;http://en.wikipedia.org/wiki/Binary_search_algorithm&quot;&gt;b&amp;uacute;squeda de&lt;/a&gt; b&amp;uacute;squeda binaria en su &lt;code&gt;contains(a, obj)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7db1625c0ecb79fc25336042f3620583672ba039" translate="yes" xml:space="preserve">
          <source>Use lodash's &lt;a href=&quot;https://lodash.com/docs#some&quot;&gt;some&lt;/a&gt; function.</source>
          <target state="translated">Use &lt;a href=&quot;https://lodash.com/docs#some&quot;&gt;alguna&lt;/a&gt; funci&amp;oacute;n de lodash.</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="99d49a545e16e15fde40c6d01e8df0374271fbf3" translate="yes" xml:space="preserve">
          <source>We use this snippet (works with objects, arrays, strings):</source>
          <target state="translated">Usamos este recorte (trabaja con objetos,arreglos,cuerdas):</target>
        </trans-unit>
        <trans-unit id="e5a8bfa78b6cc841ae306aa109c2288f80d1bcad" translate="yes" xml:space="preserve">
          <source>What is the most concise and efficient way to find out if a JavaScript array contains a value?</source>
          <target state="translated">¿Cuál es la forma más concisa y eficiente de averiguar si una matriz de JavaScript contiene un valor?</target>
        </trans-unit>
        <trans-unit id="8703cf29cfa5ac185fce8c1dec2a01c5c3eb839d" translate="yes" xml:space="preserve">
          <source>When you know you just pushed an array with a value, using lastIndexOf remains probably the best solution, but if you have to travel through big arrays and the result could be everywhere, this could be a solid solution to make things faster.</source>
          <target state="translated">Cuando sabes que acabas de empujar una matriz con un valor,usar lastIndexOf sigue siendo probablemente la mejor solución,pero si tienes que viajar a través de grandes matrices y el resultado podría estar en todas partes,esta podría ser una solución sólida para hacer las cosas más rápidas.</target>
        </trans-unit>
        <trans-unit id="f11390c7b08f5438453c92d12de28409182c4947" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;array.indexOf(x)!=-1&lt;/code&gt; is the most concise way to do this (and has been supported by non-Internet&amp;nbsp;Explorer browsers for over decade...), it is not O(1), but rather O(N), which is terrible. If your array will not be changing, you can convert your array to a hashtable, then do &lt;code&gt;table[x]!==undefined&lt;/code&gt; or &lt;code&gt;===undefined&lt;/code&gt;:</source>
          <target state="translated">Si bien &lt;code&gt;array.indexOf(x)!=-1&lt;/code&gt; es la forma m&amp;aacute;s concisa de hacer esto (y ha sido compatible con navegadores que no son de Internet Explorer durante m&amp;aacute;s de una d&amp;eacute;cada ...), no es O (1), sino O ( N), lo cual es terrible. Si su matriz no va a cambiar, puede convertirla en una tabla hash, luego haga la &lt;code&gt;table[x]!==undefined&lt;/code&gt; o &lt;code&gt;===undefined&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b01c71c2892eac27aa9d47b7b2460c3ca6b6002f" translate="yes" xml:space="preserve">
          <source>While the new method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot;&gt;includes&lt;/a&gt; is very nice, the support is basically zero for now.</source>
          <target state="translated">Si bien el nuevo m&amp;eacute;todo &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot;&gt;incluye&lt;/a&gt; es muy bueno, el soporte es b&amp;aacute;sicamente cero por ahora.</target>
        </trans-unit>
        <trans-unit id="66a9a0ebce37ca21a36fa25294dd0f724d8af682" translate="yes" xml:space="preserve">
          <source>Why to use &lt;code&gt;JSON.stringify&lt;/code&gt;?</source>
          <target state="translated">&amp;iquest;Por qu&amp;eacute; usar &lt;code&gt;JSON.stringify&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="710e9393126b52a4f0c439a6f12859ff0112353e" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf&quot;&gt;&lt;code&gt;Array#indexOf&lt;/code&gt;&lt;/a&gt;, which is less direct, but doesn't require polyfills for outdated browsers.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf&quot;&gt; &lt;code&gt;Array#indexOf&lt;/code&gt; &lt;/a&gt; , que es menos directo, pero no requiere polyfills para navegadores obsoletos.</target>
        </trans-unit>
        <trans-unit id="5d307aa6a64cce35bbe21c4e01d8d6639b51bbad" translate="yes" xml:space="preserve">
          <source>You can perform tests in your machine &lt;a href=&quot;https://jsperf.com/array-big-exist-element/1&quot;&gt;HERE&lt;/a&gt;</source>
          <target state="translated">Puedes realizar pruebas en tu m&amp;aacute;quina &lt;a href=&quot;https://jsperf.com/array-big-exist-element/1&quot;&gt;AQU&amp;Iacute;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c452231ce645912ee34b17df9db70ba167c4c874" translate="yes" xml:space="preserve">
          <source>You can perform tests in your machine &lt;a href=&quot;https://jsperf.com/array-exist-element/1&quot;&gt;HERE&lt;/a&gt;</source>
          <target state="translated">Puedes realizar pruebas en tu m&amp;aacute;quina &lt;a href=&quot;https://jsperf.com/array-exist-element/1&quot;&gt;AQU&amp;Iacute;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cffa6d9408268dd04c67fe0e590fb87b7066b9c" translate="yes" xml:space="preserve">
          <source>You can use this in ECMAScript 5 and below by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find#Polyfill&quot;&gt;defining the function&lt;/a&gt;.</source>
          <target state="translated">Puede usar esto en ECMAScript 5 y siguientes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find#Polyfill&quot;&gt;definiendo la funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a8b0fcd60b778db319e070da9ab5bd99a70551d" translate="yes" xml:space="preserve">
          <source>hope this will help anyone.</source>
          <target state="translated">Espero que esto ayude a alguien.</target>
        </trans-unit>
        <trans-unit id="f4b7e9b9241515996b32e009d8f7fee6dcf4fc80" translate="yes" xml:space="preserve">
          <source>if data is null then no admin, else it will return the existing object like below.</source>
          <target state="translated">si los datos son nulos entonces no hay administrador,sino que devolverá el objeto existente como abajo.</target>
        </trans-unit>
        <trans-unit id="12c167eda8182142022b2a92450f25c79b0bcb8b" translate="yes" xml:space="preserve">
          <source>jQuery: &lt;a href=&quot;http://api.jquery.com/jquery.inarray/&quot;&gt;&lt;code&gt;$.inArray(value, array, [fromIndex])&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">jQuery: &lt;a href=&quot;http://api.jquery.com/jquery.inarray/&quot;&gt; &lt;code&gt;$.inArray(value, array, [fromIndex])&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6101b8b106bb34aa75ee0814071b80c3bd5855d4" translate="yes" xml:space="preserve">
          <source>solutions based on &lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt; and surprisingly &lt;code&gt;find&lt;/code&gt; (K,N,O) are slowest on all browsers</source>
          <target state="translated">Las soluciones basadas en &lt;code&gt;JSON&lt;/code&gt; , &lt;code&gt;Set&lt;/code&gt; y sorprendentemente &lt;code&gt;find&lt;/code&gt; (K, N, O) son m&amp;aacute;s lentas en todos los navegadores</target>
        </trans-unit>
        <trans-unit id="a11a1beae753e81ce95402eff46f26a927ec2374" translate="yes" xml:space="preserve">
          <source>the es6 &lt;code&gt;includes&lt;/code&gt; (F) is fast only on chrome</source>
          <target state="translated">el es6 &lt;code&gt;includes&lt;/code&gt; (F) es r&amp;aacute;pido solo en Chrome</target>
        </trans-unit>
        <trans-unit id="7ec7950d04195293692d83e333f6cef03db4144a" translate="yes" xml:space="preserve">
          <source>the solutions based on &lt;code&gt;for&lt;/code&gt; (C,D) and &lt;code&gt;indexOf&lt;/code&gt; (G,H) are quite-fast on all browsers on small and big arrays so probably they are best choice for efficient solution</source>
          <target state="translated">Las soluciones basadas en &lt;code&gt;for&lt;/code&gt; (C, D) e &lt;code&gt;indexOf&lt;/code&gt; (G, H) son bastante r&amp;aacute;pidas en todos los navegadores en arreglos peque&amp;ntilde;os y grandes, por lo que probablemente sean la mejor opci&amp;oacute;n para una soluci&amp;oacute;n eficiente</target>
        </trans-unit>
        <trans-unit id="289945786f0df06cde96642e167bcc38037aa002" translate="yes" xml:space="preserve">
          <source>the solutions where index decrease during loop, (B) is slower probably because the way of &lt;a href=&quot;https://stackoverflow.com/questions/1950878/c-for-loop-indexing-is-forward-indexing-faster-in-new-cpus&quot;&gt;CPU cache works&lt;/a&gt;.</source>
          <target state="translated">En las soluciones donde el &amp;iacute;ndice disminuye durante el ciclo, (B) es m&amp;aacute;s lento probablemente porque la forma de &lt;a href=&quot;https://stackoverflow.com/questions/1950878/c-for-loop-indexing-is-forward-indexing-faster-in-new-cpus&quot;&gt;cach&amp;eacute;&lt;/a&gt; de la CPU funciona .</target>
        </trans-unit>
        <trans-unit id="798bc4d228938e571a6eb1d95ec4af0226cad052" translate="yes" xml:space="preserve">
          <source>you will get value like below</source>
          <target state="translated">obtendrás un valor como el siguiente</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
