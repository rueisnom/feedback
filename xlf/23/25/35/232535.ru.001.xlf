<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/232535">
    <body>
      <group id="232535">
        <trans-unit id="290dca3ab720e1a5481fc7d2b2daac691a5ecb5a" translate="yes" xml:space="preserve">
          <source>(Action) matches the signature of the method to be called i.e. (&lt;code&gt;Func&amp;lt;string,string,int&amp;gt;&lt;/code&gt; or &lt;code&gt;Action&amp;lt;bool&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Action) соответствует сигнатуре вызываемого метода ie ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Func&amp;lt;string,string,int&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Action&amp;lt;bool&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eade1fee26c0d1bbb44af59dd13e2489047a6b1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;((Action)GenericMethod&amp;lt;object&amp;gt;)&lt;/code&gt; refers to the delegate for a specific method.  &lt;code&gt;((Func&amp;lt;string, int&amp;gt;)GenericMethod&amp;lt;object&amp;gt;)&lt;/code&gt;
refers to a different overload of GenericMethod</source>
          <target state="translated">&lt;code&gt;((Action)GenericMethod&amp;lt;object&amp;gt;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ссылается на делегат для конкретного метода. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;((Func&amp;lt;string, int&amp;gt;)GenericMethod&amp;lt;object&amp;gt;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ссылается на другую перегрузку GenericMethod&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a0d78764959f75f1c68a022f5bd6b24043de989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process&lt;/code&gt; is a generic instance method that writes the real type of the passed argument (by using the &lt;code&gt;GetType()&lt;/code&gt; method) and the type of the generic parameter (by using &lt;code&gt;typeof&lt;/code&gt; operator).</source>
          <target state="translated">&lt;code&gt;Process&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это универсальный метод экземпляра, который записывает реальный тип переданного аргумента (с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GetType()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) и тип универсального параметра (с помощью &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператора &lt;/font&gt;&lt;/font&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9097a22fe8a8346d04ab4f4d592127c641a5df14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Here is a complete example&lt;/strong&gt; how to call this method to instantiate and use a &lt;code&gt;Dictionary&amp;lt;String, int&amp;gt;&lt;/code&gt; :</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот полный пример&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; того, как вызвать этот метод для создания экземпляра и использования &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Dictionary&amp;lt;String, int&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0b37dffa6e6122d271d9e18dfbb71a232abb0a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nobody provided the &quot;&lt;em&gt;classic Reflection&lt;/em&gt;&quot; solution, so here is a complete code example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Никто не предоставил &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;классическое отражение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo;, так что вот полный пример кода:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4b2dbb7dd3fe023446263ea126c7b75aa47f762" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d3e03bcbed0df764147b039386dd063669f0a622" translate="yes" xml:space="preserve">
          <source>Actually, if you try to get the result value in the previous example then you'll get a runtime error in the second loop iteration. This is because you tried to save the return value of a void function.</source>
          <target state="translated">На самом деле,если вы попытаетесь получить значение результата в предыдущем примере,то получите ошибку во время второй итерации цикла.Это связано с тем,что вы пытались сохранить возвращаемое значение функции void.</target>
        </trans-unit>
        <trans-unit id="6948afca7dccd71e85dc3ca8c088ba64645a55fb" translate="yes" xml:space="preserve">
          <source>Adding on to &lt;a href=&quot;https://stackoverflow.com/questions/232535/how-do-i-use-reflection-to-call-a-generic-method/5134251#5134251&quot;&gt;Adrian Gallero's answer&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Добавляем к &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/232535/how-do-i-use-reflection-to-call-a-generic-method/5134251#5134251&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ответу Адриана Галлеро&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33e2d283d2aad7d67769d4f55add11d23ef1e453" translate="yes" xml:space="preserve">
          <source>And here's the output of this program:</source>
          <target state="translated">И вот результат этой программы:</target>
        </trans-unit>
        <trans-unit id="99919dbd92d3b1040229c15105c4f8bceb3982a4" translate="yes" xml:space="preserve">
          <source>And you're done. Works a charm!</source>
          <target state="translated">И тебе конец.Работает очарование!</target>
        </trans-unit>
        <trans-unit id="216a63bdbdc9d45a52c7753edbb2667c6fd32804" translate="yes" xml:space="preserve">
          <source>As @Bevan highlighted, I do not need to create an array when calling the MakeGenericMethod function as it takes in params and I do not need to create an object in order to get the types as I can just pass the types directly to this function. In my case, since I have the types predefined in another class, I simply changed my code to:</source>
          <target state="translated">Как подчеркнул @Bevan,мне не нужно создавать массив при вызове функции MakeGenericMethod,т.к.она принимает параметры,и мне не нужно создавать объект для получения типов,т.к.я могу просто передавать типы непосредственно в эту функцию.В моем случае,так как у меня есть типы,предопределенные в другом классе,я просто изменил свой код:</target>
        </trans-unit>
        <trans-unit id="799d027859f5995cd505ea490d7a05d319fff312" translate="yes" xml:space="preserve">
          <source>As I have my types predefined, I first create the &quot;dummy&quot; objects that represent the observable collection (U) and the object stored in it (T) and that will be used below to get their type when calling the Make</source>
          <target state="translated">Так как у меня есть предопределенные типы,я сначала создаю &quot;фиктивные&quot; объекты,которые представляют наблюдаемую коллекцию (U)и объект,хранящийся в ней (T),и которые будут использоваться ниже для получения их типа при вызове Make</target>
        </trans-unit>
        <trans-unit id="bcc3a3e9403f5f488724ebeb608a3b693141e853" translate="yes" xml:space="preserve">
          <source>As noted, a lot of this is simpler as of C# 4 using &lt;code&gt;dynamic&lt;/code&gt; - if you can use type inference, of course. It doesn't help in cases where type inference isn't available, such as the exact example in the question.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как уже отмечалось, многое из этого проще, чем в C # 4 с использованием &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - если вы, конечно, можете использовать вывод типов. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это не помогает в случаях, когда вывод типа недоступен, например, точный пример в вопросе.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc935acf2946f21ff5a8104d6caf3a54e8ca9c72" translate="yes" xml:space="preserve">
          <source>Assume your method is defined as follows in an Helpers class:</source>
          <target state="translated">Предположим,что ваш метод определен в классе Helpers следующим образом:</target>
        </trans-unit>
        <trans-unit id="e496fd20136d4bb7828ebb0ab925b1bd977208e4" translate="yes" xml:space="preserve">
          <source>Bar</source>
          <target state="translated">Bar</target>
        </trans-unit>
        <trans-unit id="11bbdd21c0418fc331acb348f91073f99e050d4f" translate="yes" xml:space="preserve">
          <source>Below is a simple example that illustrates how some errors can be caught at compile time (commented code) and other at runtime. It also shows how the DLR tries to resolve which method to call.</source>
          <target state="translated">Ниже приведен простой пример,иллюстрирующий,как одни ошибки могут быть пойманы во время компиляции (закомментированный код),а другие-во время выполнения.Он также показывает,как DLR пытается решить,какой метод вызвать.</target>
        </trans-unit>
        <trans-unit id="2c2798ed71d0e9561c4ff9c754ef9e2ce7109cde" translate="yes" xml:space="preserve">
          <source>By casting the object argument to &lt;code&gt;dynamic&lt;/code&gt; type we deferred providing the type parameter until runtime. When the &lt;code&gt;Process&lt;/code&gt; method is called with the &lt;code&gt;dynamic&lt;/code&gt; argument then the compiler doesn't care about the type of this argument. The compiler generates code that at runtime checks the real types of passed arguments (by using reflection) and choose the best method to call. Here there is only this one generic method, so it's invoked with a proper type parameter.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Приведя аргумент объекта к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; типу, мы отложили предоставление параметра типа до времени выполнения. Когда &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Process&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызывается с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аргументом, компилятору не важен тип этого аргумента. Компилятор генерирует код, который во время выполнения проверяет реальные типы передаваемых аргументов (используя отражение) и выбирает лучший метод для вызова. Здесь есть только один универсальный метод, поэтому он вызывается с правильным параметром типа.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8ab9b59067b625e5d1277f4587a383ced70d22f" translate="yes" xml:space="preserve">
          <source>Calling a generic method from type info involves three steps.</source>
          <target state="translated">Вызов общего метода из типовой информации состоит из трех этапов.</target>
        </trans-unit>
        <trans-unit id="b2de9db1a09abb77e65ac60c781e70bcfe2b06e3" translate="yes" xml:space="preserve">
          <source>Calling a generic method with a type parameter known only at runtime can be greatly simplified by using a &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd264741.aspx&quot;&gt;&lt;code&gt;dynamic&lt;/code&gt;&lt;/a&gt; type instead of the reflection API.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вызов универсального метода с параметром типа, известным только во время выполнения, может быть значительно упрощен при использовании &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd264741.aspx&quot;&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; типа вместо API отражения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="700051fbfe581fb9c5bfa257409b6321d2417148" translate="yes" xml:space="preserve">
          <source>Consider the following sample code - inside the &lt;code&gt;Example()&lt;/code&gt; method, what's the most concise way to invoke &lt;code&gt;GenericMethod&amp;lt;T&amp;gt;()&lt;/code&gt; using the &lt;code&gt;Type&lt;/code&gt; stored in the &lt;code&gt;myType&lt;/code&gt; variable?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Рассмотрим следующий пример кода - в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Example()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , какой самый краткий способ вызвать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenericMethod&amp;lt;T&amp;gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; хранящийся в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;переменной &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myType&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2064efa8dc3c980cf7e4c32b5acd966878f7a566" translate="yes" xml:space="preserve">
          <source>Create a lambda expression where the body is a call to your desired method.</source>
          <target state="translated">Создайте лямбда выражение,в котором тело является призывом к желаемому методу.</target>
        </trans-unit>
        <trans-unit id="a217db111f67c2f7402aa3b03890c7a22a0b43dd" translate="yes" xml:space="preserve">
          <source>Extract the body and cast to MethodCallExpression</source>
          <target state="translated">Извлечь тело и отлить в MethodCallExpression</target>
        </trans-unit>
        <trans-unit id="640cece90ac2b8fb0b824605e1912102c78e8327" translate="yes" xml:space="preserve">
          <source>For a static method, pass &lt;code&gt;null&lt;/code&gt; as the first argument to &lt;code&gt;Invoke&lt;/code&gt;. That's nothing to do with generic methods - it's just normal reflection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для статического метода передайте &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в качестве первого аргумента &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Invoke&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это не имеет ничего общего с общими методами - это просто нормальное отражение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55a34421347462e3f49de09230d42ac8cc3ca24b" translate="yes" xml:space="preserve">
          <source>From inside the class that contains the methods:</source>
          <target state="translated">Изнутри класса,содержащего методы:</target>
        </trans-unit>
        <trans-unit id="00a31b6c428bbb944f073d8f4b1f127ee082778f" translate="yes" xml:space="preserve">
          <source>From outside of the class that contains the methods:</source>
          <target state="translated">Вне класса,содержащего методы:</target>
        </trans-unit>
        <trans-unit id="d70b8f016157b260f321a2fb4335baa273a26ce5" translate="yes" xml:space="preserve">
          <source>Get the generic method definition from the method</source>
          <target state="translated">Получить общее определение метода</target>
        </trans-unit>
        <trans-unit id="7b847379849d8d7a344d32e4c647e0ab4351d5a9" translate="yes" xml:space="preserve">
          <source>Here we again execute some method by casting the argument to the &lt;code&gt;dynamic&lt;/code&gt; type. Only verification of first argument's type is postponed to runtime. You will get a compiler error if the name of the method you're calling doesn't exist or if other arguments are invalid (wrong number of arguments or wrong types).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь мы снова выполняем некоторый метод, приводя аргумент к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; типу. Только проверка типа первого аргумента откладывается до времени выполнения. Вы получите ошибку компилятора, если имя метода, который вы вызываете, не существует или если другие аргументы недопустимы (неправильное количество аргументов или неправильные типы).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0315a9e740160f0ca13b2d84138fc111d8391914" translate="yes" xml:space="preserve">
          <source>How do I use reflection to call a generic method</source>
          <target state="translated">Как использовать рефлексию для вызова общего метода.</target>
        </trans-unit>
        <trans-unit id="a4c3790710308f94a83a5dd5f3888b53d1435d7e" translate="yes" xml:space="preserve">
          <source>If the generic method you want to call don't have an argument of a parametrized type (so its type parameter can't be inferred) then you can wrap the invocation of the generic method in a helper method like in the following example:</source>
          <target state="translated">Если общий метод,который вы хотите вызвать,не имеет аргумента параметризованного типа (поэтому его параметр типа не может быть выведен),то вы можете обернуть вызов общего метода в метод-помощник,как в следующем примере:</target>
        </trans-unit>
        <trans-unit id="627cef4b3bc7960549ca0a42a2e855e9f22addfa" translate="yes" xml:space="preserve">
          <source>If you want to call a generic method, that in &quot;normal&quot; usage would have had its type inferred, then it simply comes to casting the object of unknown type to &lt;code&gt;dynamic&lt;/code&gt;. Here's an example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы хотите вызвать универсальный метод, для которого при &amp;laquo;нормальном&amp;raquo; использовании был бы выведен его тип, то это просто сводит объект неизвестного типа к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот пример:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c816ba8015c5a6ba4fca39da061e639a87d64575" translate="yes" xml:space="preserve">
          <source>In C#, the name of a method, i.e. &quot;ToString&quot; or &quot;GenericMethod&quot; actually refers to a group of methods that may contain one or more methods.  Until you provide the types of the method parameters, it is not known which
method you are referring to.</source>
          <target state="translated">В языке C#название метода,т.е.&quot;ToString&quot; или &quot;GenericMethod&quot;,фактически относится к группе методов,которые могут содержать один или несколько методов.До тех пор,пока вы не укажете типы параметров метода,неизвестно,о каком методе идет речь.</target>
        </trans-unit>
        <trans-unit id="64a7903f2368131e45db46d0f45ddc31af324f43" translate="yes" xml:space="preserve">
          <source>In my case, U type is always an observable collection storing object of type T.</source>
          <target state="translated">В моем случае тип U-это всегда наблюдаемая коллекция,в которой хранится объект типа T.</target>
        </trans-unit>
        <trans-unit id="663ed56d7bd2f9b2f4412cef83d93fb68be5fa68" translate="yes" xml:space="preserve">
          <source>In this example, the output is the same as if you wrote:</source>
          <target state="translated">В этом примере вывод такой же,как если бы вы написали:</target>
        </trans-unit>
        <trans-unit id="8d9004c4286a60de60fb05088f82267bb1577163" translate="yes" xml:space="preserve">
          <source>Increased type safety</source>
          <target state="translated">Повышенная безопасность типа</target>
        </trans-unit>
        <trans-unit id="11ecb9e238d47d2076d7d3c7840c7fa92320873c" translate="yes" xml:space="preserve">
          <source>Inspired by &lt;a href=&quot;https://stackoverflow.com/a/3958029/1016343&quot;&gt;Enigmativity's answer&lt;/a&gt; - let's assume you have two (or more) classes, like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вдохновленный &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/3958029/1016343&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ответом Enigmativity&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - давайте предположим, что у вас есть два (или более) класса, например&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e858ba310b42e6a40b6de119e75801635cd79b4" translate="yes" xml:space="preserve">
          <source>It is also a little dangerous in that you lose compile-time check for &lt;code&gt;GenericMethod&lt;/code&gt;. If you later do a refactoring and rename &lt;code&gt;GenericMethod&lt;/code&gt;, this code won't notice and will fail at run time. Also, if there is any post-processing of the assembly (for example obfuscating or removing unused methods/classes) this code might break too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это также немного опасно, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenericMethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; что вы теряете проверку во время компиляции для &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GenericMethod&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы позже выполните рефакторинг и переименуете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenericMethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , этот код не заметит и не выполнится во время выполнения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Также, если есть какая-либо постобработка сборки (например, запутывание или удаление неиспользуемых методов / классов), этот код может также сломаться.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49a8f72f1d6e69c26774d5b7330e9f867d36e46c" translate="yes" xml:space="preserve">
          <source>Just an addition to the original answer. While this will work:</source>
          <target state="translated">Просто дополнение к первоначальному ответу.Пока это будет работать:</target>
        </trans-unit>
        <trans-unit id="164862777ffc462fddf1ecc891e3c07dadf1cb8b" translate="yes" xml:space="preserve">
          <source>Method 1: Use GetMethod() or GetMethods() with appropriate types or binding flags.</source>
          <target state="translated">Метод 1:Используйте GetMethod()или GetMethods()с соответствующими типами или флагами привязки.</target>
        </trans-unit>
        <trans-unit id="ac41f3ed4518f772f2950c9bfbe7e27d036c4e08" translate="yes" xml:space="preserve">
          <source>Method 2: Create a delegate, get the MethodInfo object and then call GetGenericMethodDefinition</source>
          <target state="translated">Метод 2:Создать делегата,получить объект MethodInfo,а затем вызвать GetGenericMethodDefinition.</target>
        </trans-unit>
        <trans-unit id="808836eb797ce4820ccc2b563d024dd00085ac83" translate="yes" xml:space="preserve">
          <source>Method 3: Create a lambda expression containing a method call expression, get the MethodInfo object and then GetGenericMethodDefinition</source>
          <target state="translated">Метод 3:Создать лямбда выражение,содержащее выражение вызова метода,получить объект MethodInfo,а затем GetGenericMethodDefinition</target>
        </trans-unit>
        <trans-unit id="ac9a8276adb665176231fee6f408b81a6e2597bb" translate="yes" xml:space="preserve">
          <source>Once that's done, you need to call the Invoke method as mentioned above.</source>
          <target state="translated">После этого необходимо вызвать метод Invoke,как упоминалось выше.</target>
        </trans-unit>
        <trans-unit id="1ccc6e3ed223e001f1f7a3f43c0c7bf5565c0c7f" translate="yes" xml:space="preserve">
          <source>Other way to do the same would be to create a new wrapper class, and create it through &lt;code&gt;Activator&lt;/code&gt;. I don't know if there is a better way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другой способ сделать то же самое - создать новый класс-обертку и создать его с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Activator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я не знаю, есть ли лучший способ.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18ffe6774cd6052e6a5429ac8ddd7f451be8e518" translate="yes" xml:space="preserve">
          <source>Return type gotcha</source>
          <target state="translated">Тип возврата получен</target>
        </trans-unit>
        <trans-unit id="09fae740bb06d7d7836a868121bf72704812d0cf" translate="yes" xml:space="preserve">
          <source>So far, the above call is pretty much identical as to what was explained above but with a small difference when you need have to pass multiple parameters to it.</source>
          <target state="translated">Пока что вышеприведенный вызов практически идентичен тому,что было объяснено выше,но с небольшой разницей,когда нужно передать ему несколько параметров.</target>
        </trans-unit>
        <trans-unit id="a3945ea8d27fd43e9d99eb3c8a9fd73ce87c698d" translate="yes" xml:space="preserve">
          <source>So, if you know the method you are linking to at compile time, and this isn't called millions of times so overhead doesn't matter, I would change this code to be:</source>
          <target state="translated">Итак,если вы знаете метод,с которым вы связываетесь во время компиляции,и он не называется миллионы раз,так что накладные расходы не имеют значения,я бы изменил этот код:</target>
        </trans-unit>
        <trans-unit id="82810cb97184cf542141f811b63d90bc5de31d1b" translate="yes" xml:space="preserve">
          <source>Square</source>
          <target state="translated">Square</target>
        </trans-unit>
        <trans-unit id="9b41eacb7403e5d890688714639a7294557df4ab" translate="yes" xml:space="preserve">
          <source>Step 1 is getting the MethodInfo for the generic method definition</source>
          <target state="translated">Шаг 1-получение MethodInfo для определения общего метода.</target>
        </trans-unit>
        <trans-unit id="67d9de28a183a084af65257a905a688ecdd5e6bb" translate="yes" xml:space="preserve">
          <source>Step 2 is calling MakeGenericMethod to create a generic method with the appropriate type(s).</source>
          <target state="translated">Шаг 2-вызов метода MakeGenericMethod для создания общего метода с соответствующим типом(ами).</target>
        </trans-unit>
        <trans-unit id="8b661a119a98f836903907c7eb9f961379a66036" translate="yes" xml:space="preserve">
          <source>Step 3 is invoking the method with the appropriate arguments.</source>
          <target state="translated">Шаг 3-вызов метода с соответствующими аргументами.</target>
        </trans-unit>
        <trans-unit id="9943c087af287bfa4af41a991331b810939f0875" translate="yes" xml:space="preserve">
          <source>TLDR: Calling a known generic method with a type object can be accomplished by:</source>
          <target state="translated">TLDR:Вызов известного общего метода с помощью объекта типа может быть выполнен:</target>
        </trans-unit>
        <trans-unit id="6308d99e0166e934578bd1cf387a50a19d5eb3a2" translate="yes" xml:space="preserve">
          <source>Thanks again for highlighting this @Bevan.</source>
          <target state="translated">Еще раз спасибо,что выделил этот @Bevan.</target>
        </trans-unit>
        <trans-unit id="a93a951faeaee285bd27afc60718dea76dbba251" translate="yes" xml:space="preserve">
          <source>The above &lt;code&gt;DynamicDictionaryFactory&lt;/code&gt; class has a method</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Приведенный выше &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DynamicDictionaryFactory&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет метод&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8778d3f2682fbdfb38526c3f44aad540599bb50" translate="yes" xml:space="preserve">
          <source>The version with a dynamic type is definitely shorter and easier to write. You also shouldn't worry about performance of calling this function multiple times. The next call with arguments of the same type should be faster thanks to the &lt;a href=&quot;http://blogs.msdn.com/b/samng/archive/2008/10/29/dynamic-in-c.aspx&quot;&gt;caching&lt;/a&gt; mechanism in DLR. Of course, you can write code that cache invoked delegates, but by using the &lt;code&gt;dynamic&lt;/code&gt; type you get this behaviour for free.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Версия с динамическим типом определенно короче и проще для написания. Вы также не должны беспокоиться о производительности вызова этой функции несколько раз. Следующий вызов с аргументами того же типа должен быть быстрее благодаря &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;механизму &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msdn.com/b/samng/archive/2008/10/29/dynamic-in-c.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;кэширования&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в DLR. Конечно, вы можете написать код, который кэширует вызванные делегаты, но используя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; тип, вы получаете это поведение бесплатно.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a1c8be7af2cd4942d425c8acbca54b27f3a0fd1c" translate="yes" xml:space="preserve">
          <source>Then call the GetMethod to find your Generic function:</source>
          <target state="translated">Затем позвоните в GetMethod,чтобы найти вашу родовую функцию:</target>
        </trans-unit>
        <trans-unit id="c44ea81c31c9bb2a9faf2f4ed6872c9d33de9413" translate="yes" xml:space="preserve">
          <source>Then you can implement an &lt;strong&gt;Extension method&lt;/strong&gt; like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем вы можете реализовать &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод Extension,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; например:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb135918ceddb6a1d5e34c0fb0e83d4f111ed8bf" translate="yes" xml:space="preserve">
          <source>This breaks down to</source>
          <target state="translated">Это сводится к тому,что</target>
        </trans-unit>
        <trans-unit id="a8960ad7737b28ec4ae581cd4869cfab688d34bf" translate="yes" xml:space="preserve">
          <source>This is my 2 cents based on &lt;a href=&quot;https://stackoverflow.com/questions/232535/how-do-i-use-reflection-to-call-a-generic-method/27870198#27870198&quot;&gt;Grax's answer&lt;/a&gt;, but with two parameters required for a generic method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это мои 2 цента, основанные на &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/232535/how-do-i-use-reflection-to-call-a-generic-method/27870198#27870198&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ответе Grax&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но с двумя параметрами, необходимыми для универсального метода.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3015b46b324fde3ee4d8dd94da83a586e9c2768" translate="yes" xml:space="preserve">
          <source>To use this technique the type must be known from the actual object (not just an instance of the &lt;code&gt;Type&lt;/code&gt; class). Otherwise, you have to create an object of that type or use the standard reflection API &lt;a href=&quot;https://stackoverflow.com/a/232621/350384&quot;&gt;solution&lt;/a&gt;. You can create an object by using the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/wccyzw83%28v=vs.110%29.aspx&quot;&gt;Activator.CreateInstance&lt;/a&gt; method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы использовать эту технику, тип должен быть известен из реального объекта (а не только экземпляра &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класса &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В противном случае вам придется создать объект этого типа или использовать стандартное &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/232621/350384&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;решение&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; API отражения &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете создать объект, используя &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/wccyzw83%28v=vs.110%29.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Activator.CreateInstance&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9022f7a3300139eca4da2ae6055f0933304d153a" translate="yes" xml:space="preserve">
          <source>What is really great about using &lt;code&gt;dynamic&lt;/code&gt; object as a replacement for using reflection API is that you only lose compile time checking of this particular type that you don't know until runtime. Other arguments and the name of the method are staticly analysed by the compiler as usual. If you remove or add more arguments, change their types or rename method name then you'll get a compile-time error. This won't happen if you provide the method name as a string in &lt;code&gt;Type.GetMethod&lt;/code&gt; and arguments as the objects array in &lt;code&gt;MethodInfo.Invoke&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что действительно хорошо в использовании &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объекта в качестве замены для использования API отражения, так это то, что вы теряете только проверку времени компиляции этого конкретного типа, которую вы не знаете до времени выполнения. Другие аргументы и имя метода статически анализируются компилятором как обычно. Если вы удалите или добавите больше аргументов, измените их типы или переименуете имя метода, вы получите ошибку во время компиляции. Этого не произойдет, если вы предоставите имя метода в виде строки в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type.GetMethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и аргументы в качестве массива объектов в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MethodInfo.Invoke&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79c6d1b5dee1d9cd5b14b69f29197a6a7def0b37" translate="yes" xml:space="preserve">
          <source>What's the best way to call a generic method when the type parameter isn't known at compile time, but instead is obtained dynamically at runtime?</source>
          <target state="translated">Какой лучший способ вызвать общий метод,когда параметр типа неизвестен во время компиляции,а вместо этого получается динамически во время выполнения?</target>
        </trans-unit>
        <trans-unit id="1b7a47c991c2d8b5beb9c96b965196f41193a463" translate="yes" xml:space="preserve">
          <source>When the above console application is executed, we get the correct, expected result:</source>
          <target state="translated">При выполнении приведенного выше консольного приложения мы получаем правильный,ожидаемый результат:</target>
        </trans-unit>
        <trans-unit id="dce830c550f9fdfb467286f2d4635ef7a543116b" translate="yes" xml:space="preserve">
          <source>When you pass the &lt;code&gt;dynamic&lt;/code&gt; argument to a method then this call is &lt;a href=&quot;http://blogs.msdn.com/b/ericlippert/archive/2012/02/06/what-is-quot-binding-quot-and-what-makes-it-late.aspx&quot;&gt;lately bound&lt;/a&gt;. Method overload resolution happens at runtime and tries to choose the best overload. So if you invoke the &lt;code&gt;ProcessItem&lt;/code&gt; method with an object of &lt;code&gt;BarItem&lt;/code&gt; type then you'll actually call the non-generic method, because it is a better match for this type. However, you'll get a runtime error when you pass an argument of the &lt;code&gt;Alpha&lt;/code&gt; type because there's no method that can handle this object (a generic method has the constraint &lt;code&gt;where T : IItem&lt;/code&gt; and &lt;code&gt;Alpha&lt;/code&gt; class doesn't implement this interface). But that's the whole point. The compiler doesn't have information that this call is valid. You as a programmer know this, and you should make sure that this code runs without errors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы передаете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; аргумент методу, этот вызов в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msdn.com/b/ericlippert/archive/2012/02/06/what-is-quot-binding-quot-and-what-makes-it-late.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;последнее время&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; становится &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;связанным&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Разрешение перегрузки метода происходит во время выполнения и пытается выбрать наилучшую перегрузку. Так что, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если вы вызываете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ProcessItem&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; метод с объектом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;BarItem&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; типа , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;то вы на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;самом деле назвать не-шаблонный метод, потому что это лучше подходит для этого типа. Однако при передаче аргумента типа &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Alpha&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы получите ошибку времени выполнения, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;поскольку нет метода, который может обработать этот объект (универсальный метод имеет ограничение, в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;where T : IItem&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Alpha&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;класс не реализует этот интерфейс). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но в этом все дело. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Компилятор не имеет информации, что этот вызов действителен. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы, как программист, знаете это, и вы должны убедиться, что этот код работает без ошибок.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8404bf1a6dddcdc8393275d5ed416ce9e721c54f" translate="yes" xml:space="preserve">
          <source>When you're calling a non-void method with a parameter of dynamic type, its return type will probably &lt;a href=&quot;http://blogs.msdn.com/b/ericlippert/archive/2012/11/05/dynamic-contagion-part-one.aspx&quot;&gt;be &lt;code&gt;dynamic&lt;/code&gt; too&lt;/a&gt;. So if you'd change previous example to this code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы вызываете непустой метод с параметром динамического типа, его типа возвращаемого значения, вероятно , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msdn.com/b/ericlippert/archive/2012/11/05/dynamic-contagion-part-one.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;будет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; тоже&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что если вы измените предыдущий пример на этот код:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fedfbc7c2bbd6eca438e3ee81dc7bea49d38ab49" translate="yes" xml:space="preserve">
          <source>While not very pretty, you have a compile time reference to &lt;code&gt;GenericMethod&lt;/code&gt; here, and if you refactor, delete or do anything with &lt;code&gt;GenericMethod&lt;/code&gt;, this code will keep working, or at least break at compile time (if for example you remove &lt;code&gt;GenericMethod&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хотя это и не очень красиво, у вас есть ссылка на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenericMethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; во время &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;компиляции&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , и если вы реорганизуете, удаляете или делаете что-то с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenericMethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , этот код будет продолжать работать или, по крайней мере, прерваться во время компиляции (если, например, вы удалите &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenericMethod&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec22391a4f2500abe458e94af602de0364dc138c" translate="yes" xml:space="preserve">
          <source>With C# 4.0, reflection isn't necessary as the DLR can call it using runtime types. Since using the DLR library is kind of a pain dynamically (instead of the C# compiler generating code for you), the open source framework &lt;a href=&quot;https://github.com/ekonbenefits/dynamitey&quot;&gt;Dynamitey&lt;/a&gt; (.net standard 1.5) gives you easy cached run-time access to the same calls the compiler would generate for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В C # 4.0 отражение не требуется, поскольку DLR может вызывать его, используя типы времени выполнения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку использование библиотеки DLR является своего рода динамической болью (вместо того, чтобы компилятор генерировал для вас код C #), среда с открытым исходным кодом &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ekonbenefits/dynamitey&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dynamitey&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (.net стандарт 1.5) предоставляет вам легкий кешированный доступ во время выполнения к тем же вызовам, которые генерирует компилятор. для вас.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fcd000c27dc69c7663b53e7a3d73eb6fdfd2d157" translate="yes" xml:space="preserve">
          <source>With this, you can simply invoke &lt;code&gt;Foo&lt;/code&gt; like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;При этом вы можете просто вызвать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="42897873d05394d080118009dfd1350d62ee67d6" translate="yes" xml:space="preserve">
          <source>You need to pass an Type[] array to the MakeGenericMethod function that contains the &quot;dummy&quot; objects' types that were create above:</source>
          <target state="translated">В функцию MakeGenericMethod необходимо передать массив Type[],содержащий типы &quot;фиктивных&quot; объектов,которые были созданы выше:</target>
        </trans-unit>
        <trans-unit id="853cd5b66a7e2b293f546f0344c027aef902486f" translate="yes" xml:space="preserve">
          <source>You need to use reflection to get the method to start with, then &quot;construct&quot; it by supplying type arguments with &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.reflection.methodinfo.makegenericmethod.aspx&quot;&gt;MakeGenericMethod&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вам нужно использовать отражение, чтобы получить метод для начала, а затем &amp;laquo;создать&amp;raquo; его, предоставив аргументы типа с &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.reflection.methodinfo.makegenericmethod.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MakeGenericMethod&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23069e59f1bd650765a9a30fef468aa3c1c13002" translate="yes" xml:space="preserve">
          <source>You'll get a runtime error if the type doesn't match.</source>
          <target state="translated">Вы получите ошибку во время выполнения,если тип не совпадает.</target>
        </trans-unit>
        <trans-unit id="cd48c0cf5ab841d4c18ac071da7961a84838cc65" translate="yes" xml:space="preserve">
          <source>and it creates and returns an IDictionary instance, the types of whose keys and values are exactly the specified on the call &lt;code&gt;keyType&lt;/code&gt; and &lt;code&gt;valueType&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;и он создает и возвращает экземпляр IDictionary, типы ключей и значений которого точно определены в вызове &lt;/font&gt;&lt;/font&gt; &lt;code&gt;keyType&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;valueType&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a3a44f4007c44bb308dc019adec528028384da4" translate="yes" xml:space="preserve">
          <source>and you want to call the method &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; with &lt;code&gt;Bar&lt;/code&gt; and &lt;code&gt;Square&lt;/code&gt;, which is declared as</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;и вы хотите вызвать метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Square&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который объявлен как&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="373f9635c978d1478015369c2f1c35e7f368020a" translate="yes" xml:space="preserve">
          <source>myClassInfo contains 2 properties of type &lt;code&gt;Type&lt;/code&gt; which I set at run time based on an enum value passed to the constructor and will provide me with the relevant types which I then use in the MakeGenericMethod.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;myClassInfo содержит 2 свойства типа &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Type&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которые я устанавливаю во время выполнения на основе значения перечисления, переданного конструктору, и предоставит мне соответствующие типы, которые я затем использую в MakeGenericMethod.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea239bd275bdb1c60259e5ce696669042c884ce3" translate="yes" xml:space="preserve">
          <source>then the type of the result object would be &lt;code&gt;dynamic&lt;/code&gt;. This is because the compiler don't always know which method will be called. If you know the return type of the function call then you should &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd264736.aspx&quot;&gt;implicitly convert&lt;/a&gt; it to the required type so the rest of the code is statically typed:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;тогда тип объекта результата будет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dynamic&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это потому, что компилятор не всегда знает, какой метод будет вызван. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы знаете тип возвращаемого значения вызова функции, вам следует &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd264736.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;неявно преобразовать&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; его в требуемый тип, чтобы остальная часть кода была статически типизирована:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a372cbfc24988c0b6b54696156394bd41662428f" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;GenericMethod&amp;lt;object&amp;gt;&lt;/code&gt; is the method name to call and any type that satisfies the generic constraints.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;где &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GenericMethod&amp;lt;object&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это имя метода для вызова и любой тип, который удовлетворяет общим ограничениям.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c46221efe69e51d85aefd32ebaa97fd5956d92c8" translate="yes" xml:space="preserve">
          <source>which works for every class. In this case, it will output:</source>
          <target state="translated">которая работает для каждого класса.В этом случае он будет выводить:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
