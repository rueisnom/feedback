<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/23569441">
    <body>
      <group id="23569441">
        <trans-unit id="67250341b0911b601d298e00bed685eab166475f" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; See on jsFiddle</source>
          <target state="translated">&amp;gt;&amp;gt;参见jsFiddle</target>
        </trans-unit>
        <trans-unit id="b0c7f07eb7a90bd1da76eb30fd926d389e760364" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1695/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1695/&quot;&gt;JSFiddle演示&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="4cebc26ef0feb596e82fcce3938eb6701012d8e7" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1696/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1696/&quot;&gt;JSFiddle演示&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="9ba62977224e1fc476eb47b9589788801d713e33" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1697/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1697/&quot;&gt;JSFiddle演示&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="a2c126f656025e176d01c75a145fd8ab571f74b1" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1698/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1698/&quot;&gt;JSFiddle演示&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="1c83916c7bdc1f925bd24b4e785e209c8c93b372" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1699/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1699/&quot;&gt;JSFiddle演示&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="4e4a91caaa92c4927e8bb039a93acea9f4171706" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1700/&quot;&gt;JSFiddle demo&lt;/a&gt; and on &lt;a href=&quot;http://experimental.samtremaine.co.uk/half-style/&quot;&gt;samtremaine.co.uk&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1700/&quot;&gt;JSFiddle演示&lt;/a&gt;和&lt;a href=&quot;http://experimental.samtremaine.co.uk/half-style/&quot;&gt;samtremaine.co.uk上&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="ce74750d65c0e1fedcddd26ce7237ea38dd455f4" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1701/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1701/&quot;&gt;JSFiddle演示&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="0cff5ce11b469923ca894074bd25dd6acb7e39ce" translate="yes" xml:space="preserve">
          <source>** HOWEVER, this approach creates very interesting 'shapes' with asymmetric characters. Try changing the X to a K or to a lower case letter like an &lt;em&gt;h&lt;/em&gt; or a &lt;em&gt;p&lt;/em&gt; in the CSS :)</source>
          <target state="translated">**但是，这种方法会创建带有非对称字符的非常有趣的&amp;ldquo;形状&amp;rdquo;。 尝试将X更改为K或CSS中的&lt;em&gt;h&lt;/em&gt;或&lt;em&gt;p&lt;/em&gt;等小写字母：）</target>
        </trans-unit>
        <trans-unit id="eae8d948746dc19ec69c86e0653cd94b214e482f" translate="yes" xml:space="preserve">
          <source>-HalfStyle Improvement By @KevinGranger</source>
          <target state="translated">-半风格改进 作者:@KevinGranger</target>
        </trans-unit>
        <trans-unit id="6820fbdc84ab019b28524b57136125778c553080" translate="yes" xml:space="preserve">
          <source>-Horizontal 1/3 Parts</source>
          <target state="translated">-横向13个部分</target>
        </trans-unit>
        <trans-unit id="4b7901ed4b7a71af8752f66d1fd99c85f12a9f7b" translate="yes" xml:space="preserve">
          <source>-Horizontal Half Parts</source>
          <target state="translated">-横向半部份</target>
        </trans-unit>
        <trans-unit id="0d2b91137882bae7c79a528e5bee29629cf34876" translate="yes" xml:space="preserve">
          <source>-PeelingStyle improvement of HalfStyle by &lt;a href=&quot;https://stackoverflow.com/users/3631752/sam-tremaine&quot;&gt;@SamTremaine&lt;/a&gt;</source>
          <target state="translated">-SelTremaine对HalfStyle的&lt;a href=&quot;https://stackoverflow.com/users/3631752/sam-tremaine&quot;&gt;PeelingStyle&lt;/a&gt;改进</target>
        </trans-unit>
        <trans-unit id="37f1508800cf0152debddc6f4210ecde2d32efcb" translate="yes" xml:space="preserve">
          <source>-Vertical 1/3 Parts</source>
          <target state="translated">-垂直13个部分</target>
        </trans-unit>
        <trans-unit id="f218924d16232a53576ad2709282991d91e9b251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1355/&quot;&gt;Demo&lt;/a&gt; | &lt;a href=&quot;https://github.com/arbelh/HalfStyle/archive/master.zip&quot;&gt;Download Zip&lt;/a&gt; | &lt;a href=&quot;http://www.half-style.com&quot;&gt;Half-Style.com&lt;/a&gt; (Redirects to GitHub)</source>
          <target state="translated">&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1355/&quot;&gt;演示&lt;/a&gt; | &lt;a href=&quot;https://github.com/arbelh/HalfStyle/archive/master.zip&quot;&gt;下载Zip&lt;/a&gt; | &lt;a href=&quot;http://www.half-style.com&quot;&gt;Half-Style.com&lt;/a&gt; （重定向到GitHub）</target>
        </trans-unit>
        <trans-unit id="b8919177e7a45ddf80153394193d2e1ebf271d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;Here you can find a working live demo&lt;/a&gt; and the original repository is &lt;a href=&quot;https://github.com/mrReiha/Gradext&quot;&gt;here on GitHub as well, open source&lt;/a&gt; and ready to get some updates ( :D )</source>
          <target state="translated">&lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;在这里，您可以找到一个有效的实时演示&lt;/a&gt; ，原始存储库&lt;a href=&quot;https://github.com/mrReiha/Gradext&quot;&gt;也在GitHub上，它是开源的，&lt;/a&gt;并准备进行一些更新（：D）</target>
        </trans-unit>
        <trans-unit id="99e57b9ec18637d1dfc589605ba02c679356888c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Customizing&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Customizing&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7fe690686705345e976d6e378e152b23783dd00c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Markup&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Markup&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="337a288686e092be1b3cf95dec0ebf9093a546ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Usage&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Usage&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="dea49ca8a8ee2ee9428b423403af3e02cd7bb41f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Just for the record in history!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;仅用于历史记录！&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa93c66f38ce1ebfad66fcf68c3423c9846153d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Take a look at this most recent, and accurate, edit as of 6/13/2016 : &lt;a href=&quot;http://jsfiddle.net/9wxfY/43/&quot;&gt;http://jsfiddle.net/9wxfY/43/&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;看看截至2016年6月13日的最新，准确的编辑内容： &lt;a href=&quot;http://jsfiddle.net/9wxfY/43/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/9wxfY/43/&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d9097f393c65b8ccf47c30de644e2614343087d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;With this solution you can style left and right parts, individually and independently&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;使用此解决方案，您可以分别和独立地为左右零件定型&lt;/em&gt;&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="2912a2aa2313c5bee6e91fff93cf53add034b869" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Again, But!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;再次，但是！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe10f7053762968f3a5cdf6693d35c5398fae06d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;But!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="027f03db0f12c66be4967b69634294613c6c0308" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSS:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;CSS:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b48c747d4c6d8fff43c67b659cf00ecf453f96bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Demo:&lt;/strong&gt;&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1694/&quot;&gt;http://jsfiddle.net/arbel/pd9yB/1694/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Demo:&lt;/strong&gt;&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1694/&quot;&gt;http://jsfiddle.net/arbel/pd9yB/1694/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c92aa9f8bbda7096119dbea89947e2cc06dd815f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit (oct 2017): &lt;code&gt;background-clip&lt;/code&gt; or rather &lt;code&gt;background-image options&lt;/code&gt; are now supported by every major browser: &lt;a href=&quot;http://caniuse.com/#search=background-clip&quot;&gt;CanIUse&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;编辑（2017年10月）：每个主要浏览器现在都支持 &lt;code&gt;background-clip&lt;/code&gt; 或相当 &lt;code&gt;background-image options&lt;/code&gt; ： &lt;a href=&quot;http://caniuse.com/#search=background-clip&quot;&gt;CanIUse&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f93779e7f9832d34a62ae0671d36ec0c4b3116b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation for a single character:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;单个字符的说明：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1202b2855452284ca5396ebb81123c4f9f3175df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation for any text:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;任何文字的说明：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15a7f656197166d5af0768e868e3d0738e892b3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed559f58d1012098e76aa02f5987633940fcf2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81c6148a1263c8b391744b0733f535339cf7844b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Limited CSS and jQuery Solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;有限的CSS和jQuery解决方案&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96a30eab14768ac56759def4da9c90a361b742ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pure CSS&lt;/strong&gt; for a Single Character</source>
          <target state="translated">单个字符的&lt;strong&gt;纯CSS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1066d782d540824eb0ba97d4676d6ecccdce59a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SCSS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SCSS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4b2dbb7dd3fe023446263ea126c7b75aa47f762" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c195a51883645167f34fdfec52db411e63182cbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What I am looking for:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;我在寻找什么：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1e108aed2d492656676469b331199e48ea07d73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What I have currently searched for and tried (With no luck):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;我目前正在搜索和尝试过的内容（没有运气）：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b395aa2224be1f0199c978ad05ed87dd985b0e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[Update - 2019 August:]&lt;/strong&gt; Github removed &lt;em&gt;github-pages&lt;/em&gt; demo of that repository because I'm from Iran! Only the source code is available &lt;a href=&quot;https://github.com/mrReiha/Gradext&quot;&gt;here&lt;/a&gt; tho...</source>
          <target state="translated">&lt;strong&gt;[更新-2019年8月：]&lt;/strong&gt; Github删除了该存储库的&lt;em&gt;github-pages&lt;/em&gt;演示，因为我来自伊朗！ &lt;a href=&quot;https://github.com/mrReiha/Gradext&quot;&gt;此处&lt;/a&gt;仅提供源代码。</target>
        </trans-unit>
        <trans-unit id="c7c59c25b35de3fc27fe48db513ecf0376312beb" translate="yes" xml:space="preserve">
          <source>A nice WebKit-only solution that takes advantage of the &lt;code&gt;background-clip: text&lt;/code&gt; support: &lt;a href=&quot;http://jsfiddle.net/sandro_paganotti/wLkVt/&quot;&gt;http://jsfiddle.net/sandro_paganotti/wLkVt/&lt;/a&gt;</source>
          <target state="translated">一个很好的纯WebKit解决方案，利用了 &lt;code&gt;background-clip: text&lt;/code&gt; 支持： &lt;a href=&quot;http://jsfiddle.net/sandro_paganotti/wLkVt/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/sandro_paganotti/wLkVt/</target>
        </trans-unit>
        <trans-unit id="10ab0e73da06aee80e59045706b16cab4a277795" translate="yes" xml:space="preserve">
          <source>A way to style one &lt;strong&gt;HALF&lt;/strong&gt; of a character. (In this case, half the letter being transparent)</source>
          <target state="translated">设置一个字符的&lt;strong&gt;一半&lt;/strong&gt;样式的方法。 （在这种情况下，一半的字母是透明的）</target>
        </trans-unit>
        <trans-unit id="2bd7dabc3f4b21741015e6f85f7e9adf87dd4d3e" translate="yes" xml:space="preserve">
          <source>After all this is done, just make sure you call the jQuery function in your document ready file like this:</source>
          <target state="translated">做完这一切后,只要确保你在你的文档准备文件中调用jQuery函数就可以了。</target>
        </trans-unit>
        <trans-unit id="cd0c8f75c96b6d7ed3b659aa3a9938a74bb34232" translate="yes" xml:space="preserve">
          <source>After downloading the files, make sure you include them in your project:</source>
          <target state="translated">下载文件后,请确保将其包含在你的项目中。</target>
        </trans-unit>
        <trans-unit id="52a357ead9ddc489fde4361f7f6f5f5c223ef411" translate="yes" xml:space="preserve">
          <source>Ah, and the most important, I had fun creating it !</source>
          <target state="translated">啊,最重要的是,我创造它的时候很开心!</target>
        </trans-unit>
        <trans-unit id="f1ac44388a4d3404d203ac23f3a83c1340138d64" translate="yes" xml:space="preserve">
          <source>All you have to do is to asign the class &lt;code&gt;splitchar&lt;/code&gt; , followed by the desired style to the element wrapping your text. e.g</source>
          <target state="translated">您所要做的就是为类 &lt;code&gt;splitchar&lt;/code&gt; 分配一个名称 ，然后为包装文本的元素添加所需的样式。 例如</target>
        </trans-unit>
        <trans-unit id="142df234aefd6dc597d78f6822c430a4116c26cd" translate="yes" xml:space="preserve">
          <source>Also the CSS style-sets' class definitions match the &lt;code&gt;[-CustomClassName-]&lt;/code&gt; part mentioned above and is chained to &lt;code&gt;.halfStyle&lt;/code&gt;, so we will have &lt;code&gt;.halfStyle.[-CustomClassName-]&lt;/code&gt;</source>
          <target state="translated">CSS样式集的类定义也与上述 &lt;code&gt;[-CustomClassName-]&lt;/code&gt; 部分匹配，并链接到 &lt;code&gt;.halfStyle&lt;/code&gt; ，因此我们将拥有 &lt;code&gt;.halfStyle.[-CustomClassName-]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f928936299d1159a0d5bc34cbf106a9b8330eaa" translate="yes" xml:space="preserve">
          <source>Also, the accessibility of the original text is preserved for screen readers for the blind or visually impaired.</source>
          <target state="translated">同时,为盲人或视障人士的屏幕阅读器保留了原文的无障碍性。</target>
        </trans-unit>
        <trans-unit id="a65ffcdc2699e61325d8179c9300c161d22a709d" translate="yes" xml:space="preserve">
          <source>Another CSS-only solution (though data-attribute is needed if you don't want to write letter-specific CSS). This one works more across the board (Tested IE 9/10, Chrome latest &amp;amp; FF latest)</source>
          <target state="translated">另一个仅CSS的解决方案（但是，如果您不想编写特定于字母的CSS，则需要数据属性）。 此功能可全面运行（经过测试的IE 9/10，Chrome最新和FF最新）</target>
        </trans-unit>
        <trans-unit id="07bcbdc90c86419f3fa0391c8333a6268e3c3b01" translate="yes" xml:space="preserve">
          <source>Apply CSS to 50% of a character</source>
          <target state="translated">将CSS应用于50%的字符</target>
        </trans-unit>
        <trans-unit id="430a1309c4347be11e5d3461202361bc54a2e9c0" translate="yes" xml:space="preserve">
          <source>As for the CSS, it is very limited... You only need to apply it to &lt;code&gt;:nth-child(even)&lt;/code&gt;</source>
          <target state="translated">至于CSS，它非常有限...您只需要将其应用于 &lt;code&gt;:nth-child(even)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8bc8b582a6da0e1a53c72e441dfa6109800fe68" translate="yes" xml:space="preserve">
          <source>Assuming our first &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; again. but the content shouldn't be the letters individually; the content should be the whole text, and now we're going to copy the same &amp;zwj;&amp;zwj;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; again and again ( count of spans will define the quality of your gradient, more span, better result, but poor performance ). have a look at this:</source>
          <target state="translated">再次假设我们的第一个 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 。 但是内容不应该单独是字母； 内容应该是整个文本，现在我们要一次又一次地复制相同的&amp;zwj; &amp;lt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; （跨度计数将定义渐变的质量，更大的跨度，更好的结果，但性能较差）。 看看这个：</target>
        </trans-unit>
        <trans-unit id="dc152de82b4ad4b70942834db1c6b8916a94244d" translate="yes" xml:space="preserve">
          <source>Below is an example of what I am trying to obtain.</source>
          <target state="translated">下面是笔者的一个例子,希望得到的东西。</target>
        </trans-unit>
        <trans-unit id="52046a9a7f7fffc5900ce575690393c9478f701f" translate="yes" xml:space="preserve">
          <source>Closest I can get:</source>
          <target state="translated">我最接近了。</target>
        </trans-unit>
        <trans-unit id="cff81cd15be600d547bc2b7a7aedc4b0d34e1e1e" translate="yes" xml:space="preserve">
          <source>Created using a simple SASS Mixin such as</source>
          <target state="translated">使用一个简单的SASS Mixin创建,如</target>
        </trans-unit>
        <trans-unit id="6a3cb1430e2af669b4f6cf3e0aedc5734ce081db" translate="yes" xml:space="preserve">
          <source>Customized different Half-Style style-sets can be used on desired elements on the same page.
You can define multiple style-sets and tell the plugin which one to use.</source>
          <target state="translated">自定义不同的半风格样式集,可以在同一页面上所需的元素上使用。您可以定义多个样式集,并告诉插件使用哪个样式集。</target>
        </trans-unit>
        <trans-unit id="d30700c416b2d112383fa8615ad748b774d1fbd0" translate="yes" xml:space="preserve">
          <source>Demo: &lt;a href=&quot;http://jsfiddle.net/9wxfY/2/&quot;&gt;http://jsfiddle.net/9wxfY/2/&lt;/a&gt;</source>
          <target state="translated">演示： &lt;a href=&quot;http://jsfiddle.net/9wxfY/2/&quot;&gt;http&lt;/a&gt; ： //jsfiddle.net/9wxfY/2/</target>
        </trans-unit>
        <trans-unit id="5ebca7d6902486be0f539ccca52055e71d8d9e2f" translate="yes" xml:space="preserve">
          <source>Does a CSS or JavaScript solution exist for this, or am I going to have to resort to images? I would prefer not to go the image route as this text will end up being generated dynamically.</source>
          <target state="translated">是否有一个CSS或JavaScript的解决方案,或者我必须使用图片?我希望不要走图片路线,因为这些文字最终会被动态生成。</target>
        </trans-unit>
        <trans-unit id="c352b076c4af2dc1a9a5dd7ef2af840ceca30c17" translate="yes" xml:space="preserve">
          <source>Everything is the same, only more advanced CSS does the magic.</source>
          <target state="translated">一切都是一样的,只有更高级的CSS才会有神奇的效果。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="1245dbad57272405d6d0fe4759cf0d0ffce51e74" translate="yes" xml:space="preserve">
          <source>FWIW, here's my take on this doing it only with CSS: &lt;a href=&quot;http://codepen.io/ricardozea/pen/uFbts/&quot;&gt;http://codepen.io/ricardozea/pen/uFbts/&lt;/a&gt;</source>
          <target state="translated">FWIW，这是我的看法，仅使用CSS： &lt;a href=&quot;http://codepen.io/ricardozea/pen/uFbts/&quot;&gt;http&lt;/a&gt; ： //codepen.io/ricardozea/pen/uFbts/</target>
        </trans-unit>
        <trans-unit id="ed5a1f5f6b12dea0c7aba5694ae06636b42d66d3" translate="yes" xml:space="preserve">
          <source>Feel free to fork and improve.</source>
          <target state="translated">欢迎大家随意叉叉和改进。</target>
        </trans-unit>
        <trans-unit id="a0833bf276430618a9726f57cb1c453c3b68dcce" translate="yes" xml:space="preserve">
          <source>First of all, make sure you have the &lt;code&gt;jQuery&lt;/code&gt; library is included. The best way to get the latest jQuery version is to update your head tag with:</source>
          <target state="translated">首先，确保包含了 &lt;code&gt;jQuery&lt;/code&gt; 库。 获得最新jQuery版本的最佳方法是使用以下方法更新head标签：</target>
        </trans-unit>
        <trans-unit id="9ade8e4f64e20a4a7cdf6f950402b36ad319e2e1" translate="yes" xml:space="preserve">
          <source>For each span element containing the character, you can create a data attribute, for example here &lt;code&gt;data-content=&quot;X&quot;&lt;/code&gt;, and on the pseudo element use &lt;code&gt;content: attr(data-content);&lt;/code&gt; so the &lt;code&gt;.halfStyle:before&lt;/code&gt; class will be dynamic and you won't need to hard code it for every instance.</source>
          <target state="translated">对于每个包含字符的span元素，您可以创建一个data属性，例如，这里的 &lt;code&gt;data-content=&quot;X&quot;&lt;/code&gt; ，在伪元素上使用 &lt;code&gt;content: attr(data-content);&lt;/code&gt; 因此 &lt;code&gt;.halfStyle:before&lt;/code&gt; 类将是动态的，并且您无需为每个实例进行硬编码。</target>
        </trans-unit>
        <trans-unit id="ebbad43dd4b1580a6b4c921e571ebae05bd58aad" translate="yes" xml:space="preserve">
          <source>Here an ugly implementation in canvas. I tried this solution, but the results are worse than I expected, so here it is anyway.</source>
          <target state="translated">这里有一个在canvas中的丑陋的实现。我试过这个方案,但效果比我想象的要差,所以还是在这里。</target>
        </trans-unit>
        <trans-unit id="96a267c188f8fcef6f2546e7289baaba0546ede4" translate="yes" xml:space="preserve">
          <source>Heres a version that just uses one span: &lt;a href=&quot;http://jsfiddle.net/9wxfY/4/&quot;&gt;http://jsfiddle.net/9wxfY/4/&lt;/a&gt;</source>
          <target state="translated">这是仅使用一个跨度的版本： &lt;a href=&quot;http://jsfiddle.net/9wxfY/4/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/9wxfY/4/</target>
        </trans-unit>
        <trans-unit id="2f5f96bfbeceec11325834ea549071678641a80c" translate="yes" xml:space="preserve">
          <source>How about something like this for shorter text?</source>
          <target state="translated">这样的短文如何?</target>
        </trans-unit>
        <trans-unit id="77e5179fd52d8010016b7aefa0fb143e16271201" translate="yes" xml:space="preserve">
          <source>I am aware that this is not an ideal or the most scalable solution and the solutions proposed by the people here are far better for &quot;real world&quot; scenarios.</source>
          <target state="translated">我知道这不是一个理想的或最可扩展的解决方案,这里的人提出的解决方案远比 &quot;现实世界 &quot;的场景更好。</target>
        </trans-unit>
        <trans-unit id="cc61ccabaedd4730232f2b09a34e6324bc875641" translate="yes" xml:space="preserve">
          <source>I am not sure how elegant this solution is, but it cuts everything exactly in half: &lt;a href=&quot;http://jsfiddle.net/9wxfY/11/&quot;&gt;http://jsfiddle.net/9wxfY/11/&lt;/a&gt;</source>
          <target state="translated">我不确定此解决方案的优雅程度，但可以将所有内容完全削减一半： &lt;a href=&quot;http://jsfiddle.net/9wxfY/11/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/9wxfY/11/</target>
        </trans-unit>
        <trans-unit id="3c8106395b4bfe35e9151c1ba1dc791ee4342957" translate="yes" xml:space="preserve">
          <source>I called it &quot;Strippex&quot; For 'stripe'+'text', demo : &lt;a href=&quot;http://cdpn.io/FcIBg&quot;&gt;http://cdpn.io/FcIBg&lt;/a&gt;</source>
          <target state="translated">我称它为&amp;ldquo; Strippex&amp;rdquo;，代表&amp;ldquo; stripe&amp;rdquo; +&amp;ldquo; text&amp;rdquo;，演示： &lt;a href=&quot;http://cdpn.io/FcIBg&quot;&gt;http&lt;/a&gt; ://cdpn.io/FcIBg</target>
        </trans-unit>
        <trans-unit id="b77dae800e5cae658327df888e7e2d98523c16a7" translate="yes" xml:space="preserve">
          <source>I just played with @Arbel's solution:</source>
          <target state="translated">我刚玩了@Arbel的解决方案。</target>
        </trans-unit>
        <trans-unit id="6fac92868d6f837c939434792a56fa11f0e9df44" translate="yes" xml:space="preserve">
          <source>I'm not saying this is the solution of any problems, but I already tried to apply css to half of a character, but horizontally, So the idea is the same, the realisation may be horrible, but it works.</source>
          <target state="translated">我并不是说这个方法能解决什么问题,但是我已经尝试过将css应用到一个字符的一半,但是是横向的,所以想法是一样的,实现起来可能很恐怖,但是很管用。</target>
        </trans-unit>
        <trans-unit id="79ebbbd69b56cbe2d46cf1110fbddf8f5ebdb263" translate="yes" xml:space="preserve">
          <source>I've come up with a solution for my own work from 5-6 years ago, which is &lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;Gradext&lt;/a&gt; ( pure javascript and pure css, no dependency ) .</source>
          <target state="translated">我已经为5到6年前的工作提出了一个解决方案，即&lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;Gradext&lt;/a&gt; （纯JavaScript和纯CSS，没有依赖项）。</target>
        </trans-unit>
        <trans-unit id="c50e4cc3091673519bc84dd3f91da1ad652f74d1" translate="yes" xml:space="preserve">
          <source>I've just finished developing the plugin and it is available for everyone to use! Hope you will enjoy it.</source>
          <target state="translated">我刚刚开发完成了这个插件,大家可以使用了! 希望大家会喜欢。</target>
        </trans-unit>
        <trans-unit id="4b3e1d3b0ba52bfc4d2b53e4a9c7ec0825ab6132" translate="yes" xml:space="preserve">
          <source>If you are interested in this, then Lucas Bebber's Glitch is a very similar and super cool effect:</source>
          <target state="translated">如果你对这个感兴趣的话,那么卢卡斯-贝贝贝的《Glitch》就是一个非常类似,超级酷的效果。</target>
        </trans-unit>
        <trans-unit id="4030a48377b7a718cdbe1002e59d728e0bea0c92" translate="yes" xml:space="preserve">
          <source>In order to make the text look exactly as you want it to, all you have to do is apply your design like this:</source>
          <target state="translated">为了让文字看起来像你想要的那样,你要做的就是像这样应用你的设计。</target>
        </trans-unit>
        <trans-unit id="29cb48225314e128ceed24514236f89ee90a9d3a" translate="yes" xml:space="preserve">
          <source>Is it possible to apply CSS to half of a character</source>
          <target state="translated">是否可以对一个字符的一半应用CSS?</target>
        </trans-unit>
        <trans-unit id="dca2e8d9ca23ee6313fa1f338301f7d2469c551b" translate="yes" xml:space="preserve">
          <source>It could even work for longer text if you did something with a loop, repeating the characters with JavaScript. Anyway, the result is something like this:</source>
          <target state="translated">如果你做了一个循环,用JavaScript重复字符,它甚至可以用于较长的文本。总之,结果是这样的。</target>
        </trans-unit>
        <trans-unit id="3b5a2b217096a32d4c888a7c0db55b4ecc06ef3c" translate="yes" xml:space="preserve">
          <source>It may be irrelevant, maybe not, but sometime ago, I created a jQuery function that does the same thing, but horizontally.</source>
          <target state="translated">这可能是不相关的,也可能不是,但前段时间,我创建了一个jQuery函数,做了同样的事情,但是是横向的。</target>
        </trans-unit>
        <trans-unit id="a21c8d981b9f89999097a6e1fc5e79e8199c43f3" translate="yes" xml:space="preserve">
          <source>It will allow you to use gradient style on texts, which is supported by even IE8!</source>
          <target state="translated">它将允许你在文本上使用渐变风格,甚至连IE8都支持!它将允许你在文本上使用渐变风格。</target>
        </trans-unit>
        <trans-unit id="6ea838fa6f9e5a35d8e80d19e8a90c7b74838812" translate="yes" xml:space="preserve">
          <source>JSFiddle DEMO</source>
          <target state="translated">JSFiddle DEMO</target>
        </trans-unit>
        <trans-unit id="8bf9644ca0afe5112c0b506de85f55a004345efe" translate="yes" xml:space="preserve">
          <source>JavaScript used for automation across text or multiple characters</source>
          <target state="translated">用于跨文本或多字符自动化的JavaScript</target>
        </trans-unit>
        <trans-unit id="4c849e30023f42abf22244b49696224ce8ec5a5c" translate="yes" xml:space="preserve">
          <source>Maybe this is not the best option, maybe not the best performant way to do this, but it will open up some space to create exciting and delightful animations to inspire some other people for a better solution.</source>
          <target state="translated">也许这并不是最好的选择,也许这不是最好的表现方式,但它可以打开一些空间,创造出精彩纷呈的、令人愉悦的动画,给其他一些人以启发,让他们有更好的解决方案。</target>
        </trans-unit>
        <trans-unit id="c2743b92fa5ec4bd9c9c26ac36d0f5339ecf4096" translate="yes" xml:space="preserve">
          <source>Methods for styling half of a character/letter</source>
          <target state="translated">字母一半的造型方法</target>
        </trans-unit>
        <trans-unit id="04daa6123be13da114b0de08ba78074e52fcff82" translate="yes" xml:space="preserve">
          <source>More details at &lt;a href=&quot;http://css-tricks.com/glitch-effect-text-images-svg/&quot;&gt;Chris Coyer's CSS Tricks&lt;/a&gt; and &lt;a href=&quot;http://codepen.io/lbebber/pen/ypgql&quot;&gt;Lucas Bebber's Codepen page&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://css-tricks.com/glitch-effect-text-images-svg/&quot;&gt;Chris Coyer的CSS技巧&lt;/a&gt;和&lt;a href=&quot;http://codepen.io/lbebber/pen/ypgql&quot;&gt;Lucas Bebber的Codepen页面上的&lt;/a&gt;更多详细信息</target>
        </trans-unit>
        <trans-unit id="183fb7c7284febbe95cbb798ef84363d127fc906" translate="yes" xml:space="preserve">
          <source>My solution only works on symmetrical characters, like X, A, O, M. **It does not work on asymmetric characters like B, C, F, K or lower case letters.</source>
          <target state="translated">我的解决方案只适用于对称的字符,如X、A、O、M。</target>
        </trans-unit>
        <trans-unit id="9afb4dc665fb9a283dca365274067b7577e65b89" translate="yes" xml:space="preserve">
          <source>Now on GitHub as a Plugin!</source>
          <target state="translated">现在作为一个插件出现在GitHub上!</target>
        </trans-unit>
        <trans-unit id="9216ff082ad8de850a8bc1b8f0e8e2992f072472" translate="yes" xml:space="preserve">
          <source>Now that we know what is possible, let's create some variations.</source>
          <target state="translated">现在,我们知道了可能发生的事情,我们来创造一些变化。</target>
        </trans-unit>
        <trans-unit id="4f124e122d6f4a153f34cce706628543c0685dda" translate="yes" xml:space="preserve">
          <source>Otherwise, I have created a nice solution for you... All you need to do is have this for your HTML:</source>
          <target state="translated">否则,我为你创造了一个不错的解决方案......你所需要做的就是为你的HTML准备好这个。</target>
        </trans-unit>
        <trans-unit id="7163c88e80dde4190e896a2c5b7fe93bcaad0341" translate="yes" xml:space="preserve">
          <source>Part 1: Basic Solution</source>
          <target state="translated">第一部分:基本解决方案</target>
        </trans-unit>
        <trans-unit id="9b60699ad5de6dcfa45bd8e54b49ff6351788095" translate="yes" xml:space="preserve">
          <source>Part 2: Advanced solution - Independent left and right parts</source>
          <target state="translated">第二部分:先进的解决方案----独立的左右部分</target>
        </trans-unit>
        <trans-unit id="9ba3180c7f2eeec52783a413bf2da97459a1729c" translate="yes" xml:space="preserve">
          <source>Part 3: Mix-Match and Improve</source>
          <target state="translated">第三部分:混合匹配和改进</target>
        </trans-unit>
        <trans-unit id="44c9c11d62132c8dc621b64c34491b6cc08a4b57" translate="yes" xml:space="preserve">
          <source>Part 4: Ready for Production</source>
          <target state="translated">第四部分:准备生产</target>
        </trans-unit>
        <trans-unit id="309da882dd1e68bcb04a4237ddcbc940e090c9d5" translate="yes" xml:space="preserve">
          <source>Possibility of Text Shadow for each 1/3 part independently:</source>
          <target state="translated">可能性的文本影子为每13部分独立。</target>
        </trans-unit>
        <trans-unit id="d80f8b66f891b675103841c1446fa87e5451a2c9" translate="yes" xml:space="preserve">
          <source>Possibility of Text Shadow for each half part independently:</source>
          <target state="translated">每半部分独立的文本阴影的可能性。</target>
        </trans-unit>
        <trans-unit id="d72e7c42c59262a5220e4024d9baeadbde4cdde7" translate="yes" xml:space="preserve">
          <source>Preserves Text Accessibility for screen readers for the blind or visually
impaired</source>
          <target state="translated">为盲人或视障人士保留了屏幕阅读器的文字无障碍性。</target>
        </trans-unit>
        <trans-unit id="d582c601a812db811bc9c3191dafe4d660ea2df3" translate="yes" xml:space="preserve">
          <source>Pure CSS. All you need to do is to apply &lt;code&gt;.halfStyle&lt;/code&gt; class to each element that contains the character you want to be half-styled.</source>
          <target state="translated">纯CSS。 您需要做的就是将 &lt;code&gt;.halfStyle&lt;/code&gt; 类应用于包含您要半样式设置的字符的每个元素。</target>
        </trans-unit>
        <trans-unit id="86aa6d610541751b590636225e803e4748748688" translate="yes" xml:space="preserve">
          <source>Several notes:</source>
          <target state="translated">几项注意:</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">显示代码片段</target>
        </trans-unit>
        <trans-unit id="8007c1bbb85cdf972b1c0c9863634dcb64d21578" translate="yes" xml:space="preserve">
          <source>Simply add &lt;code&gt;textToHalfStyle&lt;/code&gt; class to the element containing the text.</source>
          <target state="translated">只需将 &lt;code&gt;textToHalfStyle&lt;/code&gt; 类添加到包含文本的元素中。</target>
        </trans-unit>
        <trans-unit id="d4e5ea69285b08fcb9963bfce0a94cd5103c9dac" translate="yes" xml:space="preserve">
          <source>Since many have asked why I would ever want to style half of a character, this is why. My city had recently spent $250,000 to define a new &quot;brand&quot; for itself. This &lt;strong&gt;&lt;a href=&quot;https://web.archive.org/web/20140428135239/http://halifaxdefined.ca/img/halifax_logo_new.png&quot;&gt;logo&lt;/a&gt;&lt;/strong&gt; is what they came up with. Many people have complained about the simplicity and lack of creativity and continue to do so. My goal was to come up with this &lt;strong&gt;&lt;a href=&quot;http://gameovercancer.ca/tests/brandgenerator/&quot;&gt;website&lt;/a&gt;&lt;/strong&gt; as a joke. Type in 'Halifax' and you will see what I mean.</source>
          <target state="translated">既然许多人问我为什么要对角色的一半进行样式设置，这就是为什么。 我市最近花费了25万美元为自己定义了一个新的&amp;ldquo;品牌&amp;rdquo;。 他们想出了这个&lt;strong&gt;&lt;a href=&quot;https://web.archive.org/web/20140428135239/http://halifaxdefined.ca/img/halifax_logo_new.png&quot;&gt;徽标&lt;/a&gt;&lt;/strong&gt; 。 许多人抱怨简单性和缺乏创造力，并继续这样做。 我的目标是开个玩笑这个&lt;strong&gt;&lt;a href=&quot;http://gameovercancer.ca/tests/brandgenerator/&quot;&gt;网站&lt;/a&gt;&lt;/strong&gt; 。 输入&amp;ldquo; Halifax&amp;rdquo;，您将明白我的意思。</target>
        </trans-unit>
        <trans-unit id="591f4122227c7e81dff1a3ffe6dc48485020078b" translate="yes" xml:space="preserve">
          <source>So, simply on the element containing the text add &lt;code&gt;textToHalfStyle&lt;/code&gt; class and data attribute &lt;code&gt;data-halfstyle=&quot;[-CustomClassName-]&quot;&lt;/code&gt;. The plugin will do the rest of the job.</source>
          <target state="translated">因此，只需在包含文本的元素上添加 &lt;code&gt;textToHalfStyle&lt;/code&gt; 类和数据属性 &lt;code&gt;data-halfstyle=&quot;[-CustomClassName-]&quot;&lt;/code&gt; 。 该插件将完成其余的工作。</target>
        </trans-unit>
        <trans-unit id="235bc4bb31b7a0ab31240cfbaa150a4bc9263198" translate="yes" xml:space="preserve">
          <source>Styling part of a character with CSS or JavaScript</source>
          <target state="translated">使用CSS或JavaScript对部分字符进行造型设计</target>
        </trans-unit>
        <trans-unit id="c4faf68fd450b9f45b9d83f42592799081caa6d5" translate="yes" xml:space="preserve">
          <source>That's it! Now you have the &lt;code&gt;Splitchar&lt;/code&gt; plugin all set. More info about it at &lt;a href=&quot;http://razvanbalosin.com/Splitchar.js/&quot;&gt;http://razvanbalosin.com/Splitchar.js/&lt;/a&gt;.</source>
          <target state="translated">而已！ 现在，您已经全部设置了 &lt;code&gt;Splitchar&lt;/code&gt; 插件。 有关它的更多信息，请访问&lt;a href=&quot;http://razvanbalosin.com/Splitchar.js/&quot;&gt;http://razvanbalosin.com/Splitchar.js/&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="318a6a7bf29534698a5b837e4281816145fb86f3" translate="yes" xml:space="preserve">
          <source>The CSS code I created is based on the first thoughts that came to my mind and my own personal approach to the problem.</source>
          <target state="translated">我创建的CSS代码是根据我最初的想法,以及我个人对这个问题的处理方法来完成的。</target>
        </trans-unit>
        <trans-unit id="0b1c150c1afbd8887e5c3326463217100452a153" translate="yes" xml:space="preserve">
          <source>The main reason I did this was to test myself and see if I was able to accomplish styling half of a character while actually providing a meaningful answer to the OP.</source>
          <target state="translated">我这样做的主要原因是为了测试自己,看看自己是否能够在完成一半的角色造型的同时,还能给OP一个有意义的答案。</target>
        </trans-unit>
        <trans-unit id="1e81a7a692f0fb87d4c8a2e7004b0e0fcbf85c4f" translate="yes" xml:space="preserve">
          <source>The plugin uses data attribute &lt;code&gt;data-halfstyle=&quot;[-CustomClassName-]&quot;&lt;/code&gt; on the target &lt;code&gt;.textToHalfStyle&lt;/code&gt; elements and makes all the necessary changes automatically.</source>
          <target state="translated">该插件在目标 &lt;code&gt;.textToHalfStyle&lt;/code&gt; 元素上使用数据属性 &lt;code&gt;data-halfstyle=&quot;[-CustomClassName-]&quot;&lt;/code&gt; 并自动进行所有必要的更改。</target>
        </trans-unit>
        <trans-unit id="29caa7203523b2816c6e715caed3c03c84f65bde" translate="yes" xml:space="preserve">
          <source>The technical explanation is you can create an element like this:</source>
          <target state="translated">技术上的解释是,你可以创建一个这样的元素。</target>
        </trans-unit>
        <trans-unit id="0ab39128c3261ed5e21f30ae4e7cb7ced599a67b" translate="yes" xml:space="preserve">
          <source>Then there's another solution which could be helpful. I will describe in details.</source>
          <target state="translated">那么,还有一个解决方案可能会有帮助。我将详细介绍一下。</target>
        </trans-unit>
        <trans-unit id="4ea792788cdcd513f22665fce62318052ef5bc1e" translate="yes" xml:space="preserve">
          <source>This can be achieved with just CSS &lt;code&gt;:before&lt;/code&gt; selector and &lt;code&gt;content property value&lt;/code&gt;.</source>
          <target state="translated">这可以通过CSS &lt;code&gt;:before&lt;/code&gt; 选择器和 &lt;code&gt;content property value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3b04010db65df83cc900cbb9502b30f526514f5" translate="yes" xml:space="preserve">
          <source>This is my first time ( yeah, after 5 years, you've heard it right ) to mention this repository anywhere on the Internet, and I'm excited about that!</source>
          <target state="translated">这是我第一次(是的,5年后,你没听错)在互联网上的任何地方提到这个资源库,我很兴奋!这是我第一次在互联网上提到这个资源库。</target>
        </trans-unit>
        <trans-unit id="20c75c440254dc81ac7751d7e4761d73571b9f4b" translate="yes" xml:space="preserve">
          <source>This technique will work with dynamically generated content and different font sizes and widths.</source>
          <target state="translated">这种技术将适用于动态生成的内容和不同的字体大小和宽度。</target>
        </trans-unit>
        <trans-unit id="7f7c14bd3cf7a46d399555b898e477c40cbfcbaf" translate="yes" xml:space="preserve">
          <source>This works on any dynamic text, or a single character, and is all automated. All you need to do is add a class on the target text and the rest is taken care of.</source>
          <target state="translated">这可以在任何动态文本,或单个字符上工作,并且都是自动化的。你需要做的就是在目标文本上添加一个类,剩下的事情就可以搞定了。</target>
        </trans-unit>
        <trans-unit id="638263cb4bd6a491d0a1ec47de365d5905847e75" translate="yes" xml:space="preserve">
          <source>To wrap the dynamically generated string, you could use a function like this:</source>
          <target state="translated">要封装动态生成的字符串,你可以使用这样的函数。</target>
        </trans-unit>
        <trans-unit id="08b9977e2dc827e7fcdfbebbfafb340b3786d2b3" translate="yes" xml:space="preserve">
          <source>View Project on &lt;a href=&quot;https://github.com/emisfera/Splitchar&quot;&gt;GitHub&lt;/a&gt; - View Project &lt;a href=&quot;http://razvanbalosin.com/Splitchar.js/&quot;&gt;Website&lt;/a&gt;. &lt;b&gt;(so you can see all the split styles)&lt;/b&gt;</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/emisfera/Splitchar&quot;&gt;GitHub上&lt;/a&gt;查看项目-查看项目&lt;a href=&quot;http://razvanbalosin.com/Splitchar.js/&quot;&gt;网站&lt;/a&gt; 。 &lt;b&gt;（因此您可以看到所有拆分样式）&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="c269fea8c0aa9ca0265495a16424e6a9e6935432" translate="yes" xml:space="preserve">
          <source>Visually, all the examples that use two characters (be it via JS, CSS pseudo elements, or just HTML) look fine, but note that that all adds content to the DOM which may cause accessibility--as well as text selection/cut/paste issues.</source>
          <target state="translated">从视觉上看,所有使用两个字符的例子(无论是通过JS,CSS伪元素,还是HTML)看起来都很好,但要注意的是,所有这些都会给DOM增加内容,这可能会导致可访问性--以及文本选择剪切粘贴问题。</target>
        </trans-unit>
        <trans-unit id="e09b36c1ef68cc4847dfc6d87424a3356950096c" translate="yes" xml:space="preserve">
          <source>We'll do it using just CSS pseudo selectors!</source>
          <target state="translated">我们只用CSS伪选择器就可以了!</target>
        </trans-unit>
        <trans-unit id="ed4582e8b99604ad27b935084116ff4d36979db0" translate="yes" xml:space="preserve">
          <source>Webkit (and Chrome) only, though:</source>
          <target state="translated">虽然只有Webkit(和Chrome浏览器)。</target>
        </trans-unit>
        <trans-unit id="51b5b6418c3e313f069bd404afea1740f10c763c" translate="yes" xml:space="preserve">
          <source>What if you want to create a &lt;strong&gt;vertical gradient&lt;/strong&gt; effect on texts?</source>
          <target state="translated">如果要在文本上创建&lt;strong&gt;垂直渐变&lt;/strong&gt;效果怎么办？</target>
        </trans-unit>
        <trans-unit id="f8cee6b47d1525df9241d52f768c825c67978dab" translate="yes" xml:space="preserve">
          <source>Without Text Shadow:</source>
          <target state="translated">没有文本阴影。</target>
        </trans-unit>
        <trans-unit id="50c43e89b0d568373b3d9e307f96cd939b4fef72" translate="yes" xml:space="preserve">
          <source>Yes, you can do this with only one character and only CSS.</source>
          <target state="translated">是的,你可以只用一个字符和只用CSS就能做到这一点。</target>
        </trans-unit>
        <trans-unit id="3586a66f0d9c43516c1b156589bb0ce0e74492c0" translate="yes" xml:space="preserve">
          <source>You can also do it using SVG, if you wish:</source>
          <target state="translated">如果你愿意,你也可以用SVG来做。</target>
        </trans-unit>
        <trans-unit id="185108f532dc2c5d392fcdc2f15c395df8eb0541" translate="yes" xml:space="preserve">
          <source>You can crowbar this code into doing all sorts of interesting things - this is just one implementation my associate and I came up with last night.</source>
          <target state="translated">你可以用这段代码来做各种有趣的事情--这只是我和我的同事昨晚想出的一个实现。</target>
        </trans-unit>
        <trans-unit id="6cfe875e7ea03a0401ed69b252ddbad5e43fe682" translate="yes" xml:space="preserve">
          <source>You can use below code. Here in this example I have used &lt;code&gt;h1&lt;/code&gt; tag and added an attribute &lt;code&gt;data-title-text=&quot;Display Text&quot;&lt;/code&gt; which will appear with different color text on &lt;code&gt;h1&lt;/code&gt; tag text element, which gives effect halfcolored text as shown in below example</source>
          <target state="translated">您可以使用以下代码。 在此示例中，我使用了 &lt;code&gt;h1&lt;/code&gt; 标签，并添加了一个属性 &lt;code&gt;data-title-text=&quot;Display Text&quot;&lt;/code&gt; ，该属性将以不同颜色的文本显示在 &lt;code&gt;h1&lt;/code&gt; 标签文本元素上，从而产生半彩色文本效果，如下例所示</target>
        </trans-unit>
        <trans-unit id="2063cc1a86039181da7d01a44b921308f743aa27" translate="yes" xml:space="preserve">
          <source>and you can continue doing this pattern for a long time and long paragraph as well.</source>
          <target state="translated">而且你可以继续做这个模式,可以持续很长的时间和长段。</target>
        </trans-unit>
        <trans-unit id="7a568106c5be1ded84ab5fad0ca390373085693e" translate="yes" xml:space="preserve">
          <source>for example look at this is the word &lt;em&gt;lorem&lt;/em&gt; inside of a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; and will cause a horizontal gradient effect ( &lt;a href=&quot;http://mrreiha.github.io/gradext/#examples&quot;&gt;check the examples&lt;/a&gt; ):</source>
          <target state="translated">例如，看这是 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 内的&lt;em&gt;lorem&lt;/em&gt;一词，它将引起水平渐变效果（ &lt;a href=&quot;http://mrreiha.github.io/gradext/#examples&quot;&gt;请查看示例&lt;/a&gt; ）：</target>
        </trans-unit>
        <trans-unit id="45641e0f3b6be41fafd76fba04b9b61694c51fd2" translate="yes" xml:space="preserve">
          <source>now if you want to make a gradient on text, you need to create some multiple layers, each individually specifically colored and the spectrum created will illustrate the gradient effect.</source>
          <target state="translated">现在如果你想在文字上做一个渐变,你需要创建一些多个图层,每个图层都有专门的颜色,而创建的光谱将说明渐变效果。</target>
        </trans-unit>
        <trans-unit id="09009ce7c85916a4ec1ad3cd0d908ebd4cbbd276" translate="yes" xml:space="preserve">
          <source>this is simply how we're creating gradients ( linear or radial ) on texts. If you liked the idea or want to know more about it, you should check the links provided.</source>
          <target state="translated">这就是我们如何在文本上创建渐变(线性或径向)的简单方法。如果你喜欢这个想法,或者想了解更多关于它的信息,你应该检查一下提供的链接。</target>
        </trans-unit>
        <trans-unit id="56ee7fae4e5ae112a7d41f36289510dcdbe1b324" translate="yes" xml:space="preserve">
          <source>well, there's another solution for it too. You should definitely check &lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;&lt;code&gt;animation: true&lt;/code&gt;&lt;/a&gt; or even &lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;&lt;code&gt;.hoverable()&lt;/code&gt;&lt;/a&gt; method which will lead to a gradient to start based on cursor position! ( sounds cool xD )</source>
          <target state="translated">好吧，还有另一种解决方案。 您绝对应该检查&lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt; &lt;code&gt;animation: true&lt;/code&gt; &lt;/a&gt;或什至&lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt; &lt;code&gt;.hoverable()&lt;/code&gt; &lt;/a&gt;方法，这将导致基于光标位置的渐变开始！ （听起来很酷xD）</target>
        </trans-unit>
        <trans-unit id="ddc86ef8165dbb2e251eb04adf5e057f2b3b6999" translate="yes" xml:space="preserve">
          <source>what if you want to make these gradient effects to move and create an animation out of it?</source>
          <target state="translated">如果你想把这些渐变效果做成移动,并从中制作出一个动画怎么办?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
