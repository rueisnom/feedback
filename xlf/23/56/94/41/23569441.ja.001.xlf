<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/23569441">
    <body>
      <group id="23569441">
        <trans-unit id="67250341b0911b601d298e00bed685eab166475f" translate="yes" xml:space="preserve">
          <source>&amp;gt;&amp;gt; See on jsFiddle</source>
          <target state="translated">&amp;gt;&amp;gt; jsFiddleで見る</target>
        </trans-unit>
        <trans-unit id="b0c7f07eb7a90bd1da76eb30fd926d389e760364" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1695/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1695/&quot;&gt;JSFiddleデモ&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="4cebc26ef0feb596e82fcce3938eb6701012d8e7" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1696/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1696/&quot;&gt;JSFiddleデモ&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="9ba62977224e1fc476eb47b9589788801d713e33" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1697/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1697/&quot;&gt;JSFiddleデモ&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="a2c126f656025e176d01c75a145fd8ab571f74b1" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1698/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1698/&quot;&gt;JSFiddleデモ&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="1c83916c7bdc1f925bd24b4e785e209c8c93b372" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1699/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1699/&quot;&gt;JSFiddleデモ&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="4e4a91caaa92c4927e8bb039a93acea9f4171706" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1700/&quot;&gt;JSFiddle demo&lt;/a&gt; and on &lt;a href=&quot;http://experimental.samtremaine.co.uk/half-style/&quot;&gt;samtremaine.co.uk&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1700/&quot;&gt;JSFiddleデモ&lt;/a&gt;および&lt;a href=&quot;http://experimental.samtremaine.co.uk/half-style/&quot;&gt;samtremaine.co.uk&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="ce74750d65c0e1fedcddd26ce7237ea38dd455f4" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1701/&quot;&gt;JSFiddle demo&lt;/a&gt;)</source>
          <target state="translated">（ &lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1701/&quot;&gt;JSFiddleデモ&lt;/a&gt; ）</target>
        </trans-unit>
        <trans-unit id="0cff5ce11b469923ca894074bd25dd6acb7e39ce" translate="yes" xml:space="preserve">
          <source>** HOWEVER, this approach creates very interesting 'shapes' with asymmetric characters. Try changing the X to a K or to a lower case letter like an &lt;em&gt;h&lt;/em&gt; or a &lt;em&gt;p&lt;/em&gt; in the CSS :)</source>
          <target state="translated">**ただし、このアプローチでは、非対称の文字を持つ非常に興味深い「形状」が作成されます。 XをKに、またはCSSの&lt;em&gt;h&lt;/em&gt;や&lt;em&gt;pの&lt;/em&gt;ような小文字に変更してみてください。</target>
        </trans-unit>
        <trans-unit id="eae8d948746dc19ec69c86e0653cd94b214e482f" translate="yes" xml:space="preserve">
          <source>-HalfStyle Improvement By @KevinGranger</source>
          <target state="translated">-ハーフスタイル改善 by @KevinGranger</target>
        </trans-unit>
        <trans-unit id="6820fbdc84ab019b28524b57136125778c553080" translate="yes" xml:space="preserve">
          <source>-Horizontal 1/3 Parts</source>
          <target state="translated">-水平 13 部品</target>
        </trans-unit>
        <trans-unit id="4b7901ed4b7a71af8752f66d1fd99c85f12a9f7b" translate="yes" xml:space="preserve">
          <source>-Horizontal Half Parts</source>
          <target state="translated">-水平ハーフパーツ</target>
        </trans-unit>
        <trans-unit id="0d2b91137882bae7c79a528e5bee29629cf34876" translate="yes" xml:space="preserve">
          <source>-PeelingStyle improvement of HalfStyle by &lt;a href=&quot;https://stackoverflow.com/users/3631752/sam-tremaine&quot;&gt;@SamTremaine&lt;/a&gt;</source>
          <target state="translated">-@SamTremaineによる&lt;a href=&quot;https://stackoverflow.com/users/3631752/sam-tremaine&quot;&gt;HalfStyleの&lt;/a&gt; PeelingStyleの改善</target>
        </trans-unit>
        <trans-unit id="37f1508800cf0152debddc6f4210ecde2d32efcb" translate="yes" xml:space="preserve">
          <source>-Vertical 1/3 Parts</source>
          <target state="translated">-縦型13パーツ</target>
        </trans-unit>
        <trans-unit id="f218924d16232a53576ad2709282991d91e9b251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1355/&quot;&gt;Demo&lt;/a&gt; | &lt;a href=&quot;https://github.com/arbelh/HalfStyle/archive/master.zip&quot;&gt;Download Zip&lt;/a&gt; | &lt;a href=&quot;http://www.half-style.com&quot;&gt;Half-Style.com&lt;/a&gt; (Redirects to GitHub)</source>
          <target state="translated">&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1355/&quot;&gt;デモ&lt;/a&gt; | &lt;a href=&quot;https://github.com/arbelh/HalfStyle/archive/master.zip&quot;&gt;Zipをダウンロード&lt;/a&gt; | &lt;a href=&quot;http://www.half-style.com&quot;&gt;Half-Style.com&lt;/a&gt; （GitHubにリダイレクト）</target>
        </trans-unit>
        <trans-unit id="b8919177e7a45ddf80153394193d2e1ebf271d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;Here you can find a working live demo&lt;/a&gt; and the original repository is &lt;a href=&quot;https://github.com/mrReiha/Gradext&quot;&gt;here on GitHub as well, open source&lt;/a&gt; and ready to get some updates ( :D )</source>
          <target state="translated">&lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;ここでは、動作するライブデモ&lt;/a&gt;を見つけることができます。元のリポジトリは&lt;a href=&quot;https://github.com/mrReiha/Gradext&quot;&gt;GitHubにもあります。オープンソースで&lt;/a&gt; 、更新を取得する準備ができています（：D）</target>
        </trans-unit>
        <trans-unit id="99e57b9ec18637d1dfc589605ba02c679356888c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Customizing&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Customizing&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7fe690686705345e976d6e378e152b23783dd00c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Markup&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Markup&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="337a288686e092be1b3cf95dec0ebf9093a546ef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Usage&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Usage&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="dea49ca8a8ee2ee9428b423403af3e02cd7bb41f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Just for the record in history!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ちょうど歴史の記録のために！&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa93c66f38ce1ebfad66fcf68c3423c9846153d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Take a look at this most recent, and accurate, edit as of 6/13/2016 : &lt;a href=&quot;http://jsfiddle.net/9wxfY/43/&quot;&gt;http://jsfiddle.net/9wxfY/43/&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;2016年6月13日の最新かつ正確な編集内容を確認してください。http：//jsfiddle.net/9wxfY/43/&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2d9097f393c65b8ccf47c30de644e2614343087d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;With this solution you can style left and right parts, individually and independently&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;このソリューションを使用すると、左右のパーツを個別に個別にスタイルできます&lt;/em&gt;&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="2912a2aa2313c5bee6e91fff93cf53add034b869" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Again, But!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;繰り返しますが、！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe10f7053762968f3a5cdf6693d35c5398fae06d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;But!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="027f03db0f12c66be4967b69634294613c6c0308" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSS:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;CSS:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b48c747d4c6d8fff43c67b659cf00ecf453f96bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Demo:&lt;/strong&gt;&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1694/&quot;&gt;http://jsfiddle.net/arbel/pd9yB/1694/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Demo:&lt;/strong&gt;&lt;a href=&quot;http://jsfiddle.net/arbel/pd9yB/1694/&quot;&gt;http://jsfiddle.net/arbel/pd9yB/1694/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c92aa9f8bbda7096119dbea89947e2cc06dd815f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit (oct 2017): &lt;code&gt;background-clip&lt;/code&gt; or rather &lt;code&gt;background-image options&lt;/code&gt; are now supported by every major browser: &lt;a href=&quot;http://caniuse.com/#search=background-clip&quot;&gt;CanIUse&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;編集（2017年10月）： &lt;code&gt;background-clip&lt;/code&gt; または &lt;code&gt;background-image options&lt;/code&gt; がすべての主要なブラウザーでサポートされるようになりました： &lt;a href=&quot;http://caniuse.com/#search=background-clip&quot;&gt;CanIUse&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f93779e7f9832d34a62ae0671d36ec0c4b3116b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation for a single character:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;単一の文字の説明：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1202b2855452284ca5396ebb81123c4f9f3175df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation for any text:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;テキストの説明：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15a7f656197166d5af0768e868e3d0738e892b3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed559f58d1012098e76aa02f5987633940fcf2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81c6148a1263c8b391744b0733f535339cf7844b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Limited CSS and jQuery Solution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;限定的なCSSおよびjQueryソリューション&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="96a30eab14768ac56759def4da9c90a361b742ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pure CSS&lt;/strong&gt; for a Single Character</source>
          <target state="translated">単一の文字の&lt;strong&gt;純粋なCSS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1066d782d540824eb0ba97d4676d6ecccdce59a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SCSS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SCSS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4b2dbb7dd3fe023446263ea126c7b75aa47f762" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c195a51883645167f34fdfec52db411e63182cbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What I am looking for:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;私が探しているもの：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1e108aed2d492656676469b331199e48ea07d73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What I have currently searched for and tried (With no luck):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;私が現在検索して試したこと（運が悪い）：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b395aa2224be1f0199c978ad05ed87dd985b0e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[Update - 2019 August:]&lt;/strong&gt; Github removed &lt;em&gt;github-pages&lt;/em&gt; demo of that repository because I'm from Iran! Only the source code is available &lt;a href=&quot;https://github.com/mrReiha/Gradext&quot;&gt;here&lt;/a&gt; tho...</source>
          <target state="translated">&lt;strong&gt;[更新-2019年8月：]&lt;/strong&gt;私はイラン出身なので、Githubはそのリポジトリの&lt;em&gt;github-pages&lt;/em&gt;デモを削除しました！ ここではソースコードのみが利用可能&lt;a href=&quot;https://github.com/mrReiha/Gradext&quot;&gt;です&lt;/a&gt; ...</target>
        </trans-unit>
        <trans-unit id="c7c59c25b35de3fc27fe48db513ecf0376312beb" translate="yes" xml:space="preserve">
          <source>A nice WebKit-only solution that takes advantage of the &lt;code&gt;background-clip: text&lt;/code&gt; support: &lt;a href=&quot;http://jsfiddle.net/sandro_paganotti/wLkVt/&quot;&gt;http://jsfiddle.net/sandro_paganotti/wLkVt/&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;background-clip: text&lt;/code&gt; を利用するWebKit専用の優れたソリューション：テキストサポート： &lt;a href=&quot;http://jsfiddle.net/sandro_paganotti/wLkVt/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/sandro_paganotti/wLkVt/</target>
        </trans-unit>
        <trans-unit id="10ab0e73da06aee80e59045706b16cab4a277795" translate="yes" xml:space="preserve">
          <source>A way to style one &lt;strong&gt;HALF&lt;/strong&gt; of a character. (In this case, half the letter being transparent)</source>
          <target state="translated">キャラクターの&lt;strong&gt;半分&lt;/strong&gt;をスタイルする方法。 （この場合、文字の半分が透明になります）</target>
        </trans-unit>
        <trans-unit id="2bd7dabc3f4b21741015e6f85f7e9adf87dd4d3e" translate="yes" xml:space="preserve">
          <source>After all this is done, just make sure you call the jQuery function in your document ready file like this:</source>
          <target state="translated">これがすべて終わったら、次のようにドキュメントレディファイルの中でjQuery関数を呼び出すようにしてください。</target>
        </trans-unit>
        <trans-unit id="cd0c8f75c96b6d7ed3b659aa3a9938a74bb34232" translate="yes" xml:space="preserve">
          <source>After downloading the files, make sure you include them in your project:</source>
          <target state="translated">ファイルをダウンロードした後は、プロジェクトに含めることを確認してください。</target>
        </trans-unit>
        <trans-unit id="52a357ead9ddc489fde4361f7f6f5f5c223ef411" translate="yes" xml:space="preserve">
          <source>Ah, and the most important, I had fun creating it !</source>
          <target state="translated">そして、一番大事なことは、作るのが楽しかったことです。</target>
        </trans-unit>
        <trans-unit id="f1ac44388a4d3404d203ac23f3a83c1340138d64" translate="yes" xml:space="preserve">
          <source>All you have to do is to asign the class &lt;code&gt;splitchar&lt;/code&gt; , followed by the desired style to the element wrapping your text. e.g</source>
          <target state="translated">あなたがしなければならないのは、クラス &lt;code&gt;splitchar&lt;/code&gt; を割り当て 、その後にテキストをラップする要素に希望のスタイルを続けることです。 例えば</target>
        </trans-unit>
        <trans-unit id="142df234aefd6dc597d78f6822c430a4116c26cd" translate="yes" xml:space="preserve">
          <source>Also the CSS style-sets' class definitions match the &lt;code&gt;[-CustomClassName-]&lt;/code&gt; part mentioned above and is chained to &lt;code&gt;.halfStyle&lt;/code&gt;, so we will have &lt;code&gt;.halfStyle.[-CustomClassName-]&lt;/code&gt;</source>
          <target state="translated">また、CSSスタイルセットのクラス定義は、上記の &lt;code&gt;[-CustomClassName-]&lt;/code&gt; の部分と一致し、 .halfStyleにチェーンされている &lt;code&gt;.halfStyle&lt;/code&gt; 、 &lt;code&gt;.halfStyle.[-CustomClassName-]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f928936299d1159a0d5bc34cbf106a9b8330eaa" translate="yes" xml:space="preserve">
          <source>Also, the accessibility of the original text is preserved for screen readers for the blind or visually impaired.</source>
          <target state="translated">また、目の不自由な方や視覚障害者のためのスクリーンリーダーのために、原文へのアクセシビリティを確保しています。</target>
        </trans-unit>
        <trans-unit id="a65ffcdc2699e61325d8179c9300c161d22a709d" translate="yes" xml:space="preserve">
          <source>Another CSS-only solution (though data-attribute is needed if you don't want to write letter-specific CSS). This one works more across the board (Tested IE 9/10, Chrome latest &amp;amp; FF latest)</source>
          <target state="translated">別のCSSのみのソリューション（ただし、レター固有のCSSを記述したくない場合は、データ属性が必要です）。 これは全面的に機能します（テスト済みのIE 9/10、Chrome最新、FF最新）</target>
        </trans-unit>
        <trans-unit id="07bcbdc90c86419f3fa0391c8333a6268e3c3b01" translate="yes" xml:space="preserve">
          <source>Apply CSS to 50% of a character</source>
          <target state="translated">文字の50%にCSSを適用する</target>
        </trans-unit>
        <trans-unit id="430a1309c4347be11e5d3461202361bc54a2e9c0" translate="yes" xml:space="preserve">
          <source>As for the CSS, it is very limited... You only need to apply it to &lt;code&gt;:nth-child(even)&lt;/code&gt;</source>
          <target state="translated">CSSに関しては、非常に制限されています... &lt;code&gt;:nth-child(even)&lt;/code&gt; のみ適用する必要があります</target>
        </trans-unit>
        <trans-unit id="c8bc8b582a6da0e1a53c72e441dfa6109800fe68" translate="yes" xml:space="preserve">
          <source>Assuming our first &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; again. but the content shouldn't be the letters individually; the content should be the whole text, and now we're going to copy the same &amp;zwj;&amp;zwj;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; again and again ( count of spans will define the quality of your gradient, more span, better result, but poor performance ). have a look at this:</source>
          <target state="translated">再び最初の &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; を想定します。 ただし、コンテンツは個別の文字であってはなりません。 コンテンツはテキスト全体である必要があります。次に、同じ&amp;zwj;&amp;zwj; &amp;lt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 何度もコピーします（ スパンの数は、グラデーションの品質、より多くのスパン、より良い結果、ただしパフォーマンスの低下を定義します）。 これを見てください：</target>
        </trans-unit>
        <trans-unit id="dc152de82b4ad4b70942834db1c6b8916a94244d" translate="yes" xml:space="preserve">
          <source>Below is an example of what I am trying to obtain.</source>
          <target state="translated">以下、私が取得しようとしているものの一例です。</target>
        </trans-unit>
        <trans-unit id="52046a9a7f7fffc5900ce575690393c9478f701f" translate="yes" xml:space="preserve">
          <source>Closest I can get:</source>
          <target state="translated">私が得られる最も近いもの。</target>
        </trans-unit>
        <trans-unit id="cff81cd15be600d547bc2b7a7aedc4b0d34e1e1e" translate="yes" xml:space="preserve">
          <source>Created using a simple SASS Mixin such as</source>
          <target state="translated">のようなシンプルなSASS Mixinを使って作成します。</target>
        </trans-unit>
        <trans-unit id="6a3cb1430e2af669b4f6cf3e0aedc5734ce081db" translate="yes" xml:space="preserve">
          <source>Customized different Half-Style style-sets can be used on desired elements on the same page.
You can define multiple style-sets and tell the plugin which one to use.</source>
          <target state="translated">カスタマイズされた異なるハーフスタイルのスタイルセットは、同じページ上の任意の要素に使用することができます。複数のスタイルセットを定義し、どのスタイルセットを使用するかをプラグインに伝えることができます。</target>
        </trans-unit>
        <trans-unit id="d30700c416b2d112383fa8615ad748b774d1fbd0" translate="yes" xml:space="preserve">
          <source>Demo: &lt;a href=&quot;http://jsfiddle.net/9wxfY/2/&quot;&gt;http://jsfiddle.net/9wxfY/2/&lt;/a&gt;</source>
          <target state="translated">デモ： &lt;a href=&quot;http://jsfiddle.net/9wxfY/2/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/9wxfY/2/</target>
        </trans-unit>
        <trans-unit id="5ebca7d6902486be0f539ccca52055e71d8d9e2f" translate="yes" xml:space="preserve">
          <source>Does a CSS or JavaScript solution exist for this, or am I going to have to resort to images? I would prefer not to go the image route as this text will end up being generated dynamically.</source>
          <target state="translated">それとも画像に頼らなければならないのでしょうか?このテキストは動的に生成されることになるので、画像のルートには行かない方がいいと思います。</target>
        </trans-unit>
        <trans-unit id="c352b076c4af2dc1a9a5dd7ef2af840ceca30c17" translate="yes" xml:space="preserve">
          <source>Everything is the same, only more advanced CSS does the magic.</source>
          <target state="translated">すべて同じですが、より高度なCSSだけが魔法をかけてくれます。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="1245dbad57272405d6d0fe4759cf0d0ffce51e74" translate="yes" xml:space="preserve">
          <source>FWIW, here's my take on this doing it only with CSS: &lt;a href=&quot;http://codepen.io/ricardozea/pen/uFbts/&quot;&gt;http://codepen.io/ricardozea/pen/uFbts/&lt;/a&gt;</source>
          <target state="translated">FWIW、CSSでのみこれを実行することについての私の見解を次に示します&lt;a href=&quot;http://codepen.io/ricardozea/pen/uFbts/&quot;&gt;。http&lt;/a&gt; ： //codepen.io/ricardozea/pen/uFbts/</target>
        </trans-unit>
        <trans-unit id="ed5a1f5f6b12dea0c7aba5694ae06636b42d66d3" translate="yes" xml:space="preserve">
          <source>Feel free to fork and improve.</source>
          <target state="translated">ご自由にフォークして改善してください。</target>
        </trans-unit>
        <trans-unit id="a0833bf276430618a9726f57cb1c453c3b68dcce" translate="yes" xml:space="preserve">
          <source>First of all, make sure you have the &lt;code&gt;jQuery&lt;/code&gt; library is included. The best way to get the latest jQuery version is to update your head tag with:</source>
          <target state="translated">まず、 &lt;code&gt;jQuery&lt;/code&gt; ライブラリが含まれていることを確認してください。 最新のjQueryバージョンを取得する最良の方法は、headタグを次のように更新することです。</target>
        </trans-unit>
        <trans-unit id="9ade8e4f64e20a4a7cdf6f950402b36ad319e2e1" translate="yes" xml:space="preserve">
          <source>For each span element containing the character, you can create a data attribute, for example here &lt;code&gt;data-content=&quot;X&quot;&lt;/code&gt;, and on the pseudo element use &lt;code&gt;content: attr(data-content);&lt;/code&gt; so the &lt;code&gt;.halfStyle:before&lt;/code&gt; class will be dynamic and you won't need to hard code it for every instance.</source>
          <target state="translated">文字を含む各スパン要素に対して、データ属性を作成できます。たとえば、ここでは &lt;code&gt;data-content=&quot;X&quot;&lt;/code&gt; で、疑似要素では &lt;code&gt;content: attr(data-content);&lt;/code&gt; 使用します。attr（data-content）; そのため、 &lt;code&gt;.halfStyle:before&lt;/code&gt; クラスは動的になり、インスタンスごとにハードコーディングする必要はありません。</target>
        </trans-unit>
        <trans-unit id="ebbad43dd4b1580a6b4c921e571ebae05bd58aad" translate="yes" xml:space="preserve">
          <source>Here an ugly implementation in canvas. I tried this solution, but the results are worse than I expected, so here it is anyway.</source>
          <target state="translated">ここにcanvasでの醜い実装があります。この解決策を試してみましたが、思ったよりも結果が悪かったので、とりあえずここで。</target>
        </trans-unit>
        <trans-unit id="96a267c188f8fcef6f2546e7289baaba0546ede4" translate="yes" xml:space="preserve">
          <source>Heres a version that just uses one span: &lt;a href=&quot;http://jsfiddle.net/9wxfY/4/&quot;&gt;http://jsfiddle.net/9wxfY/4/&lt;/a&gt;</source>
          <target state="translated">1つのスパンのみを使用するバージョンを次に示します。http： &lt;a href=&quot;http://jsfiddle.net/9wxfY/4/&quot;&gt;//jsfiddle.net/9wxfY/4/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f5f96bfbeceec11325834ea549071678641a80c" translate="yes" xml:space="preserve">
          <source>How about something like this for shorter text?</source>
          <target state="translated">短文の場合はこんな感じでどうでしょうか?</target>
        </trans-unit>
        <trans-unit id="77e5179fd52d8010016b7aefa0fb143e16271201" translate="yes" xml:space="preserve">
          <source>I am aware that this is not an ideal or the most scalable solution and the solutions proposed by the people here are far better for &quot;real world&quot; scenarios.</source>
          <target state="translated">私は、これが理想的ではないことや最もスケーラブルなソリューションではないことは承知していますし、ここにいる人たちが提案しているソリューションの方が「現実世界」のシナリオにははるかに適しています。</target>
        </trans-unit>
        <trans-unit id="cc61ccabaedd4730232f2b09a34e6324bc875641" translate="yes" xml:space="preserve">
          <source>I am not sure how elegant this solution is, but it cuts everything exactly in half: &lt;a href=&quot;http://jsfiddle.net/9wxfY/11/&quot;&gt;http://jsfiddle.net/9wxfY/11/&lt;/a&gt;</source>
          <target state="translated">このソリューションがどれほどエレガントであるかはわかりませんが、すべてが正確に半分になります： &lt;a href=&quot;http://jsfiddle.net/9wxfY/11/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/9wxfY/11/</target>
        </trans-unit>
        <trans-unit id="3c8106395b4bfe35e9151c1ba1dc791ee4342957" translate="yes" xml:space="preserve">
          <source>I called it &quot;Strippex&quot; For 'stripe'+'text', demo : &lt;a href=&quot;http://cdpn.io/FcIBg&quot;&gt;http://cdpn.io/FcIBg&lt;/a&gt;</source>
          <target state="translated">私はそれを &quot;Strippex&quot;と呼びました。</target>
        </trans-unit>
        <trans-unit id="b77dae800e5cae658327df888e7e2d98523c16a7" translate="yes" xml:space="preserve">
          <source>I just played with @Arbel's solution:</source>
          <target state="translated">今、@Arbelさんの解答で遊んでみました。</target>
        </trans-unit>
        <trans-unit id="6fac92868d6f837c939434792a56fa11f0e9df44" translate="yes" xml:space="preserve">
          <source>I'm not saying this is the solution of any problems, but I already tried to apply css to half of a character, but horizontally, So the idea is the same, the realisation may be horrible, but it works.</source>
          <target state="translated">これが問題の解決策だとは言いませんが、私はすでに文字の半分にCSSを適用しようとしましたが、水平方向には適用しませんでした、だからアイデアは同じです、実現は恐ろしいかもしれませんが、それは動作します。</target>
        </trans-unit>
        <trans-unit id="79ebbbd69b56cbe2d46cf1110fbddf8f5ebdb263" translate="yes" xml:space="preserve">
          <source>I've come up with a solution for my own work from 5-6 years ago, which is &lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;Gradext&lt;/a&gt; ( pure javascript and pure css, no dependency ) .</source>
          <target state="translated">私は5〜6年前から自分の仕事の解決策を&lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;考え出しました&lt;/a&gt; 。これはGradext （純粋なJavaScriptと純粋なCSS、依存関係なし）です。</target>
        </trans-unit>
        <trans-unit id="c50e4cc3091673519bc84dd3f91da1ad652f74d1" translate="yes" xml:space="preserve">
          <source>I've just finished developing the plugin and it is available for everyone to use! Hope you will enjoy it.</source>
          <target state="translated">私はちょうどプラグインの開発を終えたので、それは誰もが使用できるようになりました!あなたが楽しんでくれることを願っています。あなたがそれを楽しむことを願っています。</target>
        </trans-unit>
        <trans-unit id="4b3e1d3b0ba52bfc4d2b53e4a9c7ec0825ab6132" translate="yes" xml:space="preserve">
          <source>If you are interested in this, then Lucas Bebber's Glitch is a very similar and super cool effect:</source>
          <target state="translated">興味のある方には、ルーカス・ビーバーのグリッチはとても似ていて超クールな効果があります。</target>
        </trans-unit>
        <trans-unit id="4030a48377b7a718cdbe1002e59d728e0bea0c92" translate="yes" xml:space="preserve">
          <source>In order to make the text look exactly as you want it to, all you have to do is apply your design like this:</source>
          <target state="translated">テキストを思い通りにするためには、このようにデザインを適用するだけです。</target>
        </trans-unit>
        <trans-unit id="29cb48225314e128ceed24514236f89ee90a9d3a" translate="yes" xml:space="preserve">
          <source>Is it possible to apply CSS to half of a character</source>
          <target state="translated">文字の半分にCSSを適用することは可能ですか?</target>
        </trans-unit>
        <trans-unit id="dca2e8d9ca23ee6313fa1f338301f7d2469c551b" translate="yes" xml:space="preserve">
          <source>It could even work for longer text if you did something with a loop, repeating the characters with JavaScript. Anyway, the result is something like this:</source>
          <target state="translated">ループで何かをして、JavaScriptで文字を繰り返すようにすれば、より長いテキストでも動作します。いずれにしても、結果は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3b5a2b217096a32d4c888a7c0db55b4ecc06ef3c" translate="yes" xml:space="preserve">
          <source>It may be irrelevant, maybe not, but sometime ago, I created a jQuery function that does the same thing, but horizontally.</source>
          <target state="translated">関係ないかもしれないし、関係ないかもしれないけど、いつの間にか同じことをするjQueryの関数を水平方向に作ってしまった。</target>
        </trans-unit>
        <trans-unit id="a21c8d981b9f89999097a6e1fc5e79e8199c43f3" translate="yes" xml:space="preserve">
          <source>It will allow you to use gradient style on texts, which is supported by even IE8!</source>
          <target state="translated">これはIE8でもサポートされているテキストにグラデーションスタイルを使用できるようになります!</target>
        </trans-unit>
        <trans-unit id="6ea838fa6f9e5a35d8e80d19e8a90c7b74838812" translate="yes" xml:space="preserve">
          <source>JSFiddle DEMO</source>
          <target state="translated">JSFiddle DEMO</target>
        </trans-unit>
        <trans-unit id="8bf9644ca0afe5112c0b506de85f55a004345efe" translate="yes" xml:space="preserve">
          <source>JavaScript used for automation across text or multiple characters</source>
          <target state="translated">テキストや複数の文字にまたがる自動化に使用されるJavaScript</target>
        </trans-unit>
        <trans-unit id="4c849e30023f42abf22244b49696224ce8ec5a5c" translate="yes" xml:space="preserve">
          <source>Maybe this is not the best option, maybe not the best performant way to do this, but it will open up some space to create exciting and delightful animations to inspire some other people for a better solution.</source>
          <target state="translated">多分これは最良のオプションではないかもしれません、これを行うための最良のパフォーマンスの方法ではないかもしれませんが、それはより良い解決策のために他の何人かの人々を鼓舞するために刺激的で楽しいアニメーションを作成するためのいくつかのスペースを開きます。</target>
        </trans-unit>
        <trans-unit id="c2743b92fa5ec4bd9c9c26ac36d0f5339ecf4096" translate="yes" xml:space="preserve">
          <source>Methods for styling half of a character/letter</source>
          <target state="translated">文字の半分をスタイリングする方法</target>
        </trans-unit>
        <trans-unit id="04daa6123be13da114b0de08ba78074e52fcff82" translate="yes" xml:space="preserve">
          <source>More details at &lt;a href=&quot;http://css-tricks.com/glitch-effect-text-images-svg/&quot;&gt;Chris Coyer's CSS Tricks&lt;/a&gt; and &lt;a href=&quot;http://codepen.io/lbebber/pen/ypgql&quot;&gt;Lucas Bebber's Codepen page&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://css-tricks.com/glitch-effect-text-images-svg/&quot;&gt;Chris CoyerのCSS Tricks&lt;/a&gt;と&lt;a href=&quot;http://codepen.io/lbebber/pen/ypgql&quot;&gt;Lucas BebberのCodepenページの詳細&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="183fb7c7284febbe95cbb798ef84363d127fc906" translate="yes" xml:space="preserve">
          <source>My solution only works on symmetrical characters, like X, A, O, M. **It does not work on asymmetric characters like B, C, F, K or lower case letters.</source>
          <target state="translated">私の解答は、X,A,O,Mのような左右対称の文字にしか動作しません。</target>
        </trans-unit>
        <trans-unit id="9afb4dc665fb9a283dca365274067b7577e65b89" translate="yes" xml:space="preserve">
          <source>Now on GitHub as a Plugin!</source>
          <target state="translated">プラグインとしてGitHubに登場</target>
        </trans-unit>
        <trans-unit id="9216ff082ad8de850a8bc1b8f0e8e2992f072472" translate="yes" xml:space="preserve">
          <source>Now that we know what is possible, let's create some variations.</source>
          <target state="translated">何が可能かわかったところで、いくつかのバリエーションを作ってみましょう。</target>
        </trans-unit>
        <trans-unit id="4f124e122d6f4a153f34cce706628543c0685dda" translate="yes" xml:space="preserve">
          <source>Otherwise, I have created a nice solution for you... All you need to do is have this for your HTML:</source>
          <target state="translated">そうでなければ、私はあなたのために素敵なソリューションを作成しました...あなたのHTMLにはこれがあればいいのです。</target>
        </trans-unit>
        <trans-unit id="7163c88e80dde4190e896a2c5b7fe93bcaad0341" translate="yes" xml:space="preserve">
          <source>Part 1: Basic Solution</source>
          <target state="translated">第1部:基本的な解決策</target>
        </trans-unit>
        <trans-unit id="9b60699ad5de6dcfa45bd8e54b49ff6351788095" translate="yes" xml:space="preserve">
          <source>Part 2: Advanced solution - Independent left and right parts</source>
          <target state="translated">第2部:高度な解法~左右独立した部分</target>
        </trans-unit>
        <trans-unit id="9ba3180c7f2eeec52783a413bf2da97459a1729c" translate="yes" xml:space="preserve">
          <source>Part 3: Mix-Match and Improve</source>
          <target state="translated">第3部:ミックスマッチと改善</target>
        </trans-unit>
        <trans-unit id="44c9c11d62132c8dc621b64c34491b6cc08a4b57" translate="yes" xml:space="preserve">
          <source>Part 4: Ready for Production</source>
          <target state="translated">第4部:本番に向けて</target>
        </trans-unit>
        <trans-unit id="309da882dd1e68bcb04a4237ddcbc940e090c9d5" translate="yes" xml:space="preserve">
          <source>Possibility of Text Shadow for each 1/3 part independently:</source>
          <target state="translated">各部13の独立したテキストシャドウの可能性</target>
        </trans-unit>
        <trans-unit id="d80f8b66f891b675103841c1446fa87e5451a2c9" translate="yes" xml:space="preserve">
          <source>Possibility of Text Shadow for each half part independently:</source>
          <target state="translated">半分ずつ独立したテキストシャドウの可能性</target>
        </trans-unit>
        <trans-unit id="d72e7c42c59262a5220e4024d9baeadbde4cdde7" translate="yes" xml:space="preserve">
          <source>Preserves Text Accessibility for screen readers for the blind or visually
impaired</source>
          <target state="translated">目の不自由な方や視覚障害者のためのスクリーン・リーダーのためのテキスト・アクセシビリティを保持します。</target>
        </trans-unit>
        <trans-unit id="d582c601a812db811bc9c3191dafe4d660ea2df3" translate="yes" xml:space="preserve">
          <source>Pure CSS. All you need to do is to apply &lt;code&gt;.halfStyle&lt;/code&gt; class to each element that contains the character you want to be half-styled.</source>
          <target state="translated">純粋なCSS。 必要なのは、ハーフスタイルにする文字を含む各要素に &lt;code&gt;.halfStyle&lt;/code&gt; クラスを適用することだけです。</target>
        </trans-unit>
        <trans-unit id="86aa6d610541751b590636225e803e4748748688" translate="yes" xml:space="preserve">
          <source>Several notes:</source>
          <target state="translated">いくつかのメモ。</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">コードスニペットを表示</target>
        </trans-unit>
        <trans-unit id="8007c1bbb85cdf972b1c0c9863634dcb64d21578" translate="yes" xml:space="preserve">
          <source>Simply add &lt;code&gt;textToHalfStyle&lt;/code&gt; class to the element containing the text.</source>
          <target state="translated">テキストを含む要素に &lt;code&gt;textToHalfStyle&lt;/code&gt; クラスを追加するだけです。</target>
        </trans-unit>
        <trans-unit id="d4e5ea69285b08fcb9963bfce0a94cd5103c9dac" translate="yes" xml:space="preserve">
          <source>Since many have asked why I would ever want to style half of a character, this is why. My city had recently spent $250,000 to define a new &quot;brand&quot; for itself. This &lt;strong&gt;&lt;a href=&quot;https://web.archive.org/web/20140428135239/http://halifaxdefined.ca/img/halifax_logo_new.png&quot;&gt;logo&lt;/a&gt;&lt;/strong&gt; is what they came up with. Many people have complained about the simplicity and lack of creativity and continue to do so. My goal was to come up with this &lt;strong&gt;&lt;a href=&quot;http://gameovercancer.ca/tests/brandgenerator/&quot;&gt;website&lt;/a&gt;&lt;/strong&gt; as a joke. Type in 'Halifax' and you will see what I mean.</source>
          <target state="translated">多くの人がなぜ私がキャラクターの半分をスタイルしたいのかと尋ねてきたので、これが理由です。 私の市は最近、250,000ドルを費やして自分たちの新しい「ブランド」を定義しました。 この&lt;strong&gt;&lt;a href=&quot;https://web.archive.org/web/20140428135239/http://halifaxdefined.ca/img/halifax_logo_new.png&quot;&gt;ロゴ&lt;/a&gt;&lt;/strong&gt;は彼らが思いついたものです。 多くの人々がシンプルさと創造性の欠如に不満を漏らしており、そうし続けています。 私の目標は、この&lt;strong&gt;&lt;a href=&quot;http://gameovercancer.ca/tests/brandgenerator/&quot;&gt;ウェブサイト&lt;/a&gt;&lt;/strong&gt;を冗談として思いつくことでした。 「ハリファックス」と入力すると、私の意味がわかります。</target>
        </trans-unit>
        <trans-unit id="591f4122227c7e81dff1a3ffe6dc48485020078b" translate="yes" xml:space="preserve">
          <source>So, simply on the element containing the text add &lt;code&gt;textToHalfStyle&lt;/code&gt; class and data attribute &lt;code&gt;data-halfstyle=&quot;[-CustomClassName-]&quot;&lt;/code&gt;. The plugin will do the rest of the job.</source>
          <target state="translated">したがって、単にテキストを含む要素に &lt;code&gt;textToHalfStyle&lt;/code&gt; クラスとデータ属性 &lt;code&gt;data-halfstyle=&quot;[-CustomClassName-]&quot;&lt;/code&gt; を追加します。 プラグインは残りの作業を行います。</target>
        </trans-unit>
        <trans-unit id="235bc4bb31b7a0ab31240cfbaa150a4bc9263198" translate="yes" xml:space="preserve">
          <source>Styling part of a character with CSS or JavaScript</source>
          <target state="translated">CSSやJavaScriptで文字の一部をスタイリングする</target>
        </trans-unit>
        <trans-unit id="c4faf68fd450b9f45b9d83f42592799081caa6d5" translate="yes" xml:space="preserve">
          <source>That's it! Now you have the &lt;code&gt;Splitchar&lt;/code&gt; plugin all set. More info about it at &lt;a href=&quot;http://razvanbalosin.com/Splitchar.js/&quot;&gt;http://razvanbalosin.com/Splitchar.js/&lt;/a&gt;.</source>
          <target state="translated">それでおしまい！ これで &lt;code&gt;Splitchar&lt;/code&gt; プラグインがすべて設定されました。 詳細については、 &lt;a href=&quot;http://razvanbalosin.com/Splitchar.js/&quot;&gt;http：//razvanbalosin.com/Splitchar.js/を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="318a6a7bf29534698a5b837e4281816145fb86f3" translate="yes" xml:space="preserve">
          <source>The CSS code I created is based on the first thoughts that came to my mind and my own personal approach to the problem.</source>
          <target state="translated">私が作成したCSSコードは、最初に思いついた思いと、私の個人的な考え方で作成したものです。</target>
        </trans-unit>
        <trans-unit id="0b1c150c1afbd8887e5c3326463217100452a153" translate="yes" xml:space="preserve">
          <source>The main reason I did this was to test myself and see if I was able to accomplish styling half of a character while actually providing a meaningful answer to the OP.</source>
          <target state="translated">これをやった主な理由は、自分自身を試してみて、OPに意味のある回答をしながら、半分のキャラクターのスタイリングを達成できるかどうかを確認するためでした。</target>
        </trans-unit>
        <trans-unit id="1e81a7a692f0fb87d4c8a2e7004b0e0fcbf85c4f" translate="yes" xml:space="preserve">
          <source>The plugin uses data attribute &lt;code&gt;data-halfstyle=&quot;[-CustomClassName-]&quot;&lt;/code&gt; on the target &lt;code&gt;.textToHalfStyle&lt;/code&gt; elements and makes all the necessary changes automatically.</source>
          <target state="translated">プラグインは、ターゲットの &lt;code&gt;.textToHalfStyle&lt;/code&gt; 要素でデータ属性 &lt;code&gt;data-halfstyle=&quot;[-CustomClassName-]&quot;&lt;/code&gt; を使用し、必要なすべての変更を自動的に行います。</target>
        </trans-unit>
        <trans-unit id="29caa7203523b2816c6e715caed3c03c84f65bde" translate="yes" xml:space="preserve">
          <source>The technical explanation is you can create an element like this:</source>
          <target state="translated">技術的な説明としては、このような要素を作ることができます。</target>
        </trans-unit>
        <trans-unit id="0ab39128c3261ed5e21f30ae4e7cb7ced599a67b" translate="yes" xml:space="preserve">
          <source>Then there's another solution which could be helpful. I will describe in details.</source>
          <target state="translated">それから、参考になりそうな別の解決策があります。詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="4ea792788cdcd513f22665fce62318052ef5bc1e" translate="yes" xml:space="preserve">
          <source>This can be achieved with just CSS &lt;code&gt;:before&lt;/code&gt; selector and &lt;code&gt;content property value&lt;/code&gt;.</source>
          <target state="translated">これは、CSS &lt;code&gt;:before&lt;/code&gt; セレクターと &lt;code&gt;content property value&lt;/code&gt; だけで実現できます 。</target>
        </trans-unit>
        <trans-unit id="d3b04010db65df83cc900cbb9502b30f526514f5" translate="yes" xml:space="preserve">
          <source>This is my first time ( yeah, after 5 years, you've heard it right ) to mention this repository anywhere on the Internet, and I'm excited about that!</source>
          <target state="translated">インターネット上のどこかでこのリポジトリについて言及するのは初めてです。</target>
        </trans-unit>
        <trans-unit id="20c75c440254dc81ac7751d7e4761d73571b9f4b" translate="yes" xml:space="preserve">
          <source>This technique will work with dynamically generated content and different font sizes and widths.</source>
          <target state="translated">このテクニックは、動的に生成されたコンテンツと異なるフォントサイズと幅で動作します。</target>
        </trans-unit>
        <trans-unit id="7f7c14bd3cf7a46d399555b898e477c40cbfcbaf" translate="yes" xml:space="preserve">
          <source>This works on any dynamic text, or a single character, and is all automated. All you need to do is add a class on the target text and the rest is taken care of.</source>
          <target state="translated">これは、任意の動的なテキスト、または単一の文字に対して動作し、すべて自動化されています。必要なのは、ターゲットテキストにクラスを追加するだけで、あとはすべて自動化されます。</target>
        </trans-unit>
        <trans-unit id="638263cb4bd6a491d0a1ec47de365d5905847e75" translate="yes" xml:space="preserve">
          <source>To wrap the dynamically generated string, you could use a function like this:</source>
          <target state="translated">動的に生成された文字列をラップするには、次のような関数を使うことができます。</target>
        </trans-unit>
        <trans-unit id="08b9977e2dc827e7fcdfbebbfafb340b3786d2b3" translate="yes" xml:space="preserve">
          <source>View Project on &lt;a href=&quot;https://github.com/emisfera/Splitchar&quot;&gt;GitHub&lt;/a&gt; - View Project &lt;a href=&quot;http://razvanbalosin.com/Splitchar.js/&quot;&gt;Website&lt;/a&gt;. &lt;b&gt;(so you can see all the split styles)&lt;/b&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/emisfera/Splitchar&quot;&gt;GitHubで&lt;/a&gt;プロジェクトを表示-プロジェクトの&lt;a href=&quot;http://razvanbalosin.com/Splitchar.js/&quot;&gt;ウェブサイトを&lt;/a&gt;表示 &lt;b&gt;（それで、すべての分割スタイルを見ることができます）&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="c269fea8c0aa9ca0265495a16424e6a9e6935432" translate="yes" xml:space="preserve">
          <source>Visually, all the examples that use two characters (be it via JS, CSS pseudo elements, or just HTML) look fine, but note that that all adds content to the DOM which may cause accessibility--as well as text selection/cut/paste issues.</source>
          <target state="translated">視覚的には、2 文字を使用している例(JS、CSS 疑似要素、または単に HTML を介して)はすべて問題なく見えますが、すべてが DOM にコンテンツを追加しているため、アクセス性の問題やテキストの選択・カットペーストの問題が発生する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e09b36c1ef68cc4847dfc6d87424a3356950096c" translate="yes" xml:space="preserve">
          <source>We'll do it using just CSS pseudo selectors!</source>
          <target state="translated">CSSの擬似セレクタだけでやってみます!(笑</target>
        </trans-unit>
        <trans-unit id="ed4582e8b99604ad27b935084116ff4d36979db0" translate="yes" xml:space="preserve">
          <source>Webkit (and Chrome) only, though:</source>
          <target state="translated">Webkit(とChrome)のみですが。</target>
        </trans-unit>
        <trans-unit id="51b5b6418c3e313f069bd404afea1740f10c763c" translate="yes" xml:space="preserve">
          <source>What if you want to create a &lt;strong&gt;vertical gradient&lt;/strong&gt; effect on texts?</source>
          <target state="translated">テキストに&lt;strong&gt;垂直方向のグラデーション&lt;/strong&gt;効果を作成したい場合はどうでしょうか？</target>
        </trans-unit>
        <trans-unit id="f8cee6b47d1525df9241d52f768c825c67978dab" translate="yes" xml:space="preserve">
          <source>Without Text Shadow:</source>
          <target state="translated">テキストシャドウなし。</target>
        </trans-unit>
        <trans-unit id="50c43e89b0d568373b3d9e307f96cd939b4fef72" translate="yes" xml:space="preserve">
          <source>Yes, you can do this with only one character and only CSS.</source>
          <target state="translated">はい、1文字だけ、CSSだけでできます。</target>
        </trans-unit>
        <trans-unit id="3586a66f0d9c43516c1b156589bb0ce0e74492c0" translate="yes" xml:space="preserve">
          <source>You can also do it using SVG, if you wish:</source>
          <target state="translated">ご希望であればSVGでもできます。</target>
        </trans-unit>
        <trans-unit id="185108f532dc2c5d392fcdc2f15c395df8eb0541" translate="yes" xml:space="preserve">
          <source>You can crowbar this code into doing all sorts of interesting things - this is just one implementation my associate and I came up with last night.</source>
          <target state="translated">このコードを使って、いろいろな面白いことをすることができます。</target>
        </trans-unit>
        <trans-unit id="6cfe875e7ea03a0401ed69b252ddbad5e43fe682" translate="yes" xml:space="preserve">
          <source>You can use below code. Here in this example I have used &lt;code&gt;h1&lt;/code&gt; tag and added an attribute &lt;code&gt;data-title-text=&quot;Display Text&quot;&lt;/code&gt; which will appear with different color text on &lt;code&gt;h1&lt;/code&gt; tag text element, which gives effect halfcolored text as shown in below example</source>
          <target state="translated">以下のコードを使用できます。 この例では、 &lt;code&gt;h1&lt;/code&gt; タグを使用し、 &lt;code&gt;h1&lt;/code&gt; タグのテキスト要素に異なる色のテキストで &lt;code&gt;data-title-text=&quot;Display Text&quot;&lt;/code&gt; される属性data-title-text = &quot;Display Text&quot;を追加しました。これにより、以下の例に示すように、ハーフカラーのテキストが生成されます。</target>
        </trans-unit>
        <trans-unit id="2063cc1a86039181da7d01a44b921308f743aa27" translate="yes" xml:space="preserve">
          <source>and you can continue doing this pattern for a long time and long paragraph as well.</source>
          <target state="translated">と、このパターンを長く、長い段落でも続けることができます。</target>
        </trans-unit>
        <trans-unit id="7a568106c5be1ded84ab5fad0ca390373085693e" translate="yes" xml:space="preserve">
          <source>for example look at this is the word &lt;em&gt;lorem&lt;/em&gt; inside of a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; and will cause a horizontal gradient effect ( &lt;a href=&quot;http://mrreiha.github.io/gradext/#examples&quot;&gt;check the examples&lt;/a&gt; ):</source>
          <target state="translated">たとえば、これは &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 内の&lt;em&gt;lorem&lt;/em&gt;という単語で、水平方向のグラデーション効果が発生します（ &lt;a href=&quot;http://mrreiha.github.io/gradext/#examples&quot;&gt;例を確認してください&lt;/a&gt; ）。</target>
        </trans-unit>
        <trans-unit id="45641e0f3b6be41fafd76fba04b9b61694c51fd2" translate="yes" xml:space="preserve">
          <source>now if you want to make a gradient on text, you need to create some multiple layers, each individually specifically colored and the spectrum created will illustrate the gradient effect.</source>
          <target state="translated">テキストにグラデーションを作りたい場合は、複数のレイヤーを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="09009ce7c85916a4ec1ad3cd0d908ebd4cbbd276" translate="yes" xml:space="preserve">
          <source>this is simply how we're creating gradients ( linear or radial ) on texts. If you liked the idea or want to know more about it, you should check the links provided.</source>
          <target state="translated">これは、テキストにグラデーション(線形または放射状)を作成する方法です。このアイデアが気に入った方やもっと知りたい方は、リンク先をチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="56ee7fae4e5ae112a7d41f36289510dcdbe1b324" translate="yes" xml:space="preserve">
          <source>well, there's another solution for it too. You should definitely check &lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;&lt;code&gt;animation: true&lt;/code&gt;&lt;/a&gt; or even &lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt;&lt;code&gt;.hoverable()&lt;/code&gt;&lt;/a&gt; method which will lead to a gradient to start based on cursor position! ( sounds cool xD )</source>
          <target state="translated">まあ、それのための別の解決策もあります。 &lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt; &lt;code&gt;animation: true&lt;/code&gt; &lt;/a&gt;を必ず確認する必要があります。trueまたは&lt;a href=&quot;http://mrreiha.github.io/gradext/&quot;&gt; &lt;code&gt;.hoverable()&lt;/code&gt; &lt;/a&gt;メソッドでも、カーソル位置に基づいてグラデーションが開始されます。 （クールなxDですね）</target>
        </trans-unit>
        <trans-unit id="ddc86ef8165dbb2e251eb04adf5e057f2b3b6999" translate="yes" xml:space="preserve">
          <source>what if you want to make these gradient effects to move and create an animation out of it?</source>
          <target state="translated">これらのグラデーション効果を移動させてアニメーションを作成したい場合はどうでしょうか?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
