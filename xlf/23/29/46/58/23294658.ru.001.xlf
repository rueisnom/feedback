<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/23294658">
    <body>
      <group id="23294658">
        <trans-unit id="06ca039b52be5a1d268ca668352dabcdcac7714f" translate="yes" xml:space="preserve">
          <source>(or whatever key you use) without entering a value, will give you a default one:</source>
          <target state="translated">(или любой другой ключ,который вы используете)без ввода значения,даст вам значение по умолчанию:</target>
        </trans-unit>
        <trans-unit id="3818fa2c7168221aa2ac832f0694486420841b62" translate="yes" xml:space="preserve">
          <source>1.1. If &lt;code&gt;age&lt;/code&gt; is &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;int&lt;/code&gt; data type:</source>
          <target state="translated">1.1. Если тип данных &lt;code&gt;float&lt;/code&gt; или &lt;code&gt;int&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f4bd810f7644fbae9c8a0173f5452dd5e4378ced" translate="yes" xml:space="preserve">
          <source>1.2. If &lt;code&gt;age&lt;/code&gt; is not &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;int&lt;/code&gt; data type, then ask user to input her/his age again (&lt;em&gt;i.e.&lt;/em&gt; go back to step 1.)</source>
          <target state="translated">1.2. Если &lt;code&gt;age&lt;/code&gt; не является типом данных с &lt;code&gt;float&lt;/code&gt; или типом &lt;code&gt;int&lt;/code&gt; , попросите пользователя снова ввести свой возраст ( &lt;em&gt;т.е.&lt;/em&gt; вернуться к шагу 1.)</target>
        </trans-unit>
        <trans-unit id="1543f80f7b5695fd61c0cf06ffa1de03a72d706b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/howto/functional.html&quot;&gt;Functional approach&lt;/a&gt; or &quot;&lt;em&gt;look mum no loops!&lt;/em&gt;&quot;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/howto/functional.html&quot;&gt;Функциональный подход&lt;/a&gt; или &quot; &lt;em&gt;смотри мама без петель!&lt;/em&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="b33d59b9621b02877abf6fe0e4f424749ef7c6c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read_single_keypress()&lt;/code&gt; courtesy &lt;a href=&quot;https://stackoverflow.com/a/6599441/4532996&quot;&gt;https://stackoverflow.com/a/6599441/4532996&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;read_single_keypress()&lt;/code&gt; любезно предоставлено &lt;a href=&quot;https://stackoverflow.com/a/6599441/4532996&quot;&gt;https://stackoverflow.com/a/6599441/4532996&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7ecf19d9ae6af7c153718683f6f215fcb803e9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replies = map(input, prompts)&lt;/code&gt; - here &lt;a href=&quot;https://docs.python.org/howto/functional.html#built-in-functions&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; will apply all the &lt;code&gt;prompts&lt;/code&gt; strings from the previous step to the &lt;a href=&quot;https://docs.python.org/library/functions.html#input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; function. E.g.:</source>
          <target state="translated">&lt;code&gt;replies = map(input, prompts)&lt;/code&gt; - здесь &lt;a href=&quot;https://docs.python.org/howto/functional.html#built-in-functions&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; будет применять все строки &lt;code&gt;prompts&lt;/code&gt; из предыдущего шага к функции &lt;a href=&quot;https://docs.python.org/library/functions.html#input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="853e4b1f776d315f087080450fcb300fd94c71ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Click&lt;/em&gt; is a library for command-line interfaces and it provides functionality for asking a valid response from a user.</source>
          <target state="translated">&lt;em&gt;Click&lt;/em&gt; - это библиотека для интерфейсов командной строки, которая предоставляет функциональные возможности для запроса правильного ответа от пользователя.</target>
        </trans-unit>
        <trans-unit id="9690a5115331c7c51a617a95207de02bf99c7f9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation of above code:&lt;/strong&gt;
In order for a valid age,it should be positive and should not be more than normal physical age,say for example maximum age is 120.</source>
          <target state="translated">&lt;strong&gt;Объяснение приведенного выше кода:&lt;/strong&gt; для того, чтобы иметь действительный возраст, он должен быть положительным и не должен превышать нормальный физический возраст, например, максимальный возраст составляет 120 лет.</target>
        </trans-unit>
        <trans-unit id="a4f55a896addd022f6ae796b1a4820f81035d86a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Membership testing:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Тестирование членства:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a96268eba187fbf6be4877438fe2076252bb1b8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Numbers comparison:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Сравнение чисел:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7853abb571146c43488e9f2a1fb31a1e7f9d8d07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Path existance:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Путь существования:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="075a5abdb5f8dedaf440d2f9d19cd1cfb769b499" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String methods:&lt;/strong&gt; Of course you can use other string methods like &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.isalpha&quot;&gt;&lt;code&gt;str.isalpha&lt;/code&gt;&lt;/a&gt; to get only alphabetic strings, or &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.isupper&quot;&gt;&lt;code&gt;str.isupper&lt;/code&gt;&lt;/a&gt; to get only uppercase. See &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#string-methods&quot;&gt;docs&lt;/a&gt; for the full list.</source>
          <target state="translated">&lt;strong&gt;Строковые методы:&lt;/strong&gt; Конечно, вы можете использовать другие строковые методы, такие как &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.isalpha&quot;&gt; &lt;code&gt;str.isalpha&lt;/code&gt; ,&lt;/a&gt; чтобы получить только буквенные строки, или &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.isupper&quot;&gt; &lt;code&gt;str.isupper&lt;/code&gt; ,&lt;/a&gt; чтобы получить только заглавные буквы. Смотрите &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#string-methods&quot;&gt;документы&lt;/a&gt; для полного списка.</target>
        </trans-unit>
        <trans-unit id="7343e4cba121007208ca736981c8fab7a1466615" translate="yes" xml:space="preserve">
          <source>And to get only the first digits-only string we use &lt;a href=&quot;https://docs.python.org/library/functions.html#next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">И чтобы получить только первую строку, состоящую только из цифр, мы используем &lt;a href=&quot;https://docs.python.org/library/functions.html#next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f0f9aafac7facbd2cde605e88aa01219f87ab9b5" translate="yes" xml:space="preserve">
          <source>Ask user to input her/his &lt;code&gt;age&lt;/code&gt;.</source>
          <target state="translated">Попросите пользователя ввести свой &lt;code&gt;age&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c95fb909de9b09a0171cdf7fa5d483a13e565dc6" translate="yes" xml:space="preserve">
          <source>Asking the user for input until they give a valid response</source>
          <target state="translated">Попросить пользователя ввести данные до тех пор,пока он не даст правильный ответ.</target>
        </trans-unit>
        <trans-unit id="a07e9b13f26a757687582ae149ea32bcd53a502f" translate="yes" xml:space="preserve">
          <source>Both of the above techniques can be combined into one loop.</source>
          <target state="translated">Обе вышеприведенные техники могут быть объединены в один цикл.</target>
        </trans-unit>
        <trans-unit id="e5e68a830f2d3f00ce63d0cd58dc813dcb732ea3" translate="yes" xml:space="preserve">
          <source>Building upon Daniel Q's and Patrick Artner's excellent suggestions,
here is an even more generalized solution.</source>
          <target state="translated">Основываясь на отличных предложениях Дэниела Кью и Патрика Артнера,вот еще более обобщенное решение.</target>
        </trans-unit>
        <trans-unit id="4b645b0a5d3c765b66c61e4d179e51f7b2984463" translate="yes" xml:space="preserve">
          <source>But in the case when there are many rules, it's better to implement a function performing a &lt;a href=&quot;https://en.wikipedia.org/wiki/Logical_conjunction&quot;&gt;logical conjunction&lt;/a&gt;. In the following example I will use a ready one from &lt;a href=&quot;https://lz.readthedocs.io/en/latest/lz.html#lz.logical.conjoin&quot;&gt;here&lt;/a&gt;:</source>
          <target state="translated">Но в случае, когда существует много правил, лучше реализовать функцию, выполняющую &lt;a href=&quot;https://en.wikipedia.org/wiki/Logical_conjunction&quot;&gt;логическое соединение&lt;/a&gt; . В следующем примере я буду использовать готовый &lt;a href=&quot;https://lz.readthedocs.io/en/latest/lz.html#lz.logical.conjoin&quot;&gt;отсюда&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0e2dbc00633189e3e9f18903c03bc9eb6849e823" translate="yes" xml:space="preserve">
          <source>But it fails if the user enters invalid data:</source>
          <target state="translated">Но это не удается,если пользователь вводит недействительные данные:</target>
        </trans-unit>
        <trans-unit id="bd5134b61ca8a4e9ed4e058267db6f88d6705b30" translate="yes" xml:space="preserve">
          <source>Check if &lt;code&gt;0&amp;lt;age&amp;lt;18&lt;/code&gt;. If &lt;code&gt;0&amp;lt;age&amp;lt;18&lt;/code&gt;, print appropriate output and exit.</source>
          <target state="translated">Проверьте, если &lt;code&gt;0&amp;lt;age&amp;lt;18&lt;/code&gt; . Если &lt;code&gt;0&amp;lt;age&amp;lt;18&lt;/code&gt; , выведите соответствующий вывод и выйдите.</target>
        </trans-unit>
        <trans-unit id="2653eac32b9fa268d55d8879cb9d85d28e8f85d6" translate="yes" xml:space="preserve">
          <source>Check if &lt;code&gt;age&amp;gt;=18&lt;/code&gt;. If &lt;code&gt;age&amp;gt;=18&lt;/code&gt;, print appropriate output and exit.</source>
          <target state="translated">Проверьте, если &lt;code&gt;age&amp;gt;=18&lt;/code&gt; . Если &lt;code&gt;age&amp;gt;=18&lt;/code&gt; , выведите соответствующий вывод и выйдите.</target>
        </trans-unit>
        <trans-unit id="bd50246f2ee9f9c945ebb8851f3397efa0d5eeb1" translate="yes" xml:space="preserve">
          <source>Checking if a value is within a range:</source>
          <target state="translated">Проверка того,находится ли значение в пределах диапазона:</target>
        </trans-unit>
        <trans-unit id="44244e3a025af44c4c6db6689d08e950a6fe072f" translate="yes" xml:space="preserve">
          <source>Combining Exception Handling and Custom Validation</source>
          <target state="translated">Сочетание обработки исключений и проверки на соответствие требованиям заказчика</target>
        </trans-unit>
        <trans-unit id="199e536fc2b9b1f0c7b8c6ec962b0779e8a6e9f9" translate="yes" xml:space="preserve">
          <source>Combining validation rules:</source>
          <target state="translated">Сочетание правил проверки:</target>
        </trans-unit>
        <trans-unit id="af7c97e8539fbd53e0cc2eb0cb561603aae77279" translate="yes" xml:space="preserve">
          <source>Common Pitfalls, and Why you Should Avoid Them</source>
          <target state="translated">Обычные ямы,и почему ты должен избегать их.</target>
        </trans-unit>
        <trans-unit id="b7183d64a08aa8ed12db72af8178cbcbead5abc2" translate="yes" xml:space="preserve">
          <source>Default values:</source>
          <target state="translated">Значения по умолчанию:</target>
        </trans-unit>
        <trans-unit id="0aaad5b9b2fd041a8d716ca8c54d8c77998fcce5" translate="yes" xml:space="preserve">
          <source>Encapsulating it All in a Function</source>
          <target state="translated">Encapsulating it All in a Function</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="8dd1ae9de270d1c543c68013dae521bfb2480981" translate="yes" xml:space="preserve">
          <source>For a simple case, for example, when the program asks for age between 1 and 120, one can just add another &lt;code&gt;filter&lt;/code&gt;:</source>
          <target state="translated">Например, для простого случая, когда программа запрашивает возраст от 1 до 120 лет, можно просто добавить другой &lt;code&gt;filter&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8c4d09c4a2067372de134176f0e63aa8bed661a7" translate="yes" xml:space="preserve">
          <source>Good question! You can try the following code for this. =)</source>
          <target state="translated">Хороший вопрос! Для этого можно попробовать следующий код.=)</target>
        </trans-unit>
        <trans-unit id="ac8fd0e83c28123c3d940926041e4c6f07f92307" translate="yes" xml:space="preserve">
          <source>Here is the code.</source>
          <target state="translated">Вот код.</target>
        </trans-unit>
        <trans-unit id="b9486f6c451e79959ed90a91613b6899ffbb7098" translate="yes" xml:space="preserve">
          <source>Here one can use &lt;code&gt;pathlib&lt;/code&gt; library and its &lt;a href=&quot;https://docs.python.org/library/pathlib.html#pathlib.Path.exists&quot;&gt;&lt;code&gt;Path.exists&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Здесь можно использовать библиотеку &lt;code&gt;pathlib&lt;/code&gt; и ее метод &lt;a href=&quot;https://docs.python.org/library/pathlib.html#pathlib.Path.exists&quot;&gt; &lt;code&gt;Path.exists&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f2ee178c41397d5fb9affad4853f9d123e62befa" translate="yes" xml:space="preserve">
          <source>Here's a cleaner, more generalized solution that avoids repetitive if/else blocks: write a function that takes (Error, error prompt) pairs in a dictionary and do all your value-checking with assertions.</source>
          <target state="translated">Вот более чистое,обобщенное решение,которое позволяет избежать повторения блоков ifelse:запишите в словарь функцию,которая принимает пары (Error,error prompt)и выполняет проверку всех ваших значений с помощью утверждений.</target>
        </trans-unit>
        <trans-unit id="b513628479ffc0e00cf666f16ff3d3097a6c8ba7" translate="yes" xml:space="preserve">
          <source>How can I make the program ask for valid inputs instead of crashing when non-sensical data is entered?</source>
          <target state="translated">Как заставить программу запрашивать действительные входы вместо сбоя при вводе несенсорных данных?</target>
        </trans-unit>
        <trans-unit id="addb0ea88759f602b432be14dcc631042eecacd5" translate="yes" xml:space="preserve">
          <source>How can I reject values like &lt;code&gt;-1&lt;/code&gt;, which is a valid &lt;code&gt;int&lt;/code&gt;, but nonsensical in this context?</source>
          <target state="translated">Как я могу отклонить значения, такие как &lt;code&gt;-1&lt;/code&gt; , который является допустимым &lt;code&gt;int&lt;/code&gt; , но бессмысленным в этом контексте?</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">Как это работает?</target>
        </trans-unit>
        <trans-unit id="9bfdd3a1cbdee75c09efadf7fb60594b8441823a" translate="yes" xml:space="preserve">
          <source>I am writing a program that accepts an input from the user.</source>
          <target state="translated">Я пишу программу,которая принимает входные данные от пользователя.</target>
        </trans-unit>
        <trans-unit id="a23f11ad5c1ce07676a25c9967d8842237840ad8" translate="yes" xml:space="preserve">
          <source>I opted for explicit &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;raise&lt;/code&gt; statements instead of an &lt;code&gt;assert&lt;/code&gt;,
because assertion checking may be turned off,
whereas validation should always be on to provide robustness.</source>
          <target state="translated">Я выбрал явные операторы &lt;code&gt;if&lt;/code&gt; и &lt;code&gt;raise&lt;/code&gt; вместо &lt;code&gt;assert&lt;/code&gt; , потому что проверка утверждений может быть отключена, тогда как проверка всегда должна быть включена, чтобы обеспечить надежность.</target>
        </trans-unit>
        <trans-unit id="5b81585406ead66c0ecc9776a3232a31888c6567" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;age&amp;lt;=0&lt;/code&gt;, ask the user to input a valid number for age again, (&lt;em&gt;i.e.&lt;/em&gt; go back to step 1.)</source>
          <target state="translated">Если &lt;code&gt;age&amp;lt;=0&lt;/code&gt; , попросите пользователя снова ввести действительное число для возраста ( &lt;em&gt;т.е.&lt;/em&gt; вернуться к шагу 1.)</target>
        </trans-unit>
        <trans-unit id="ace9bfcc0d44803c1a09c0ab61d7e2f17af84af4" translate="yes" xml:space="preserve">
          <source>If you don't want to torture a user by asking him something an infinite number of times, you can specify a limit in a call of &lt;a href=&quot;https://docs.python.org/library/itertools.html#itertools.repeat&quot;&gt;&lt;code&gt;itertools.repeat&lt;/code&gt;&lt;/a&gt;. This can be combined with providing a default value to the &lt;a href=&quot;https://docs.python.org/library/functions.html#next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Если вы не хотите пытать пользователя, задавая ему что-то бесконечное количество раз, вы можете указать ограничение в вызове &lt;a href=&quot;https://docs.python.org/library/itertools.html#itertools.repeat&quot;&gt; &lt;code&gt;itertools.repeat&lt;/code&gt; &lt;/a&gt; . Это может быть объединено с предоставлением значения по умолчанию для &lt;a href=&quot;https://docs.python.org/library/functions.html#next&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; функции:</target>
        </trans-unit>
        <trans-unit id="aea4a7fd400297d8ce106e24ab2d8096ea950754" translate="yes" xml:space="preserve">
          <source>If you need to ask your user for a lot of different values, it might be useful to put this code in a function, so you don't have to retype it every time.</source>
          <target state="translated">Если вам нужно попросить у пользователя много разных значений,то,возможно,было бы полезно поместить этот код в функцию,чтобы вам не приходилось каждый раз перепечатывать его заново.</target>
        </trans-unit>
        <trans-unit id="c4a119e157648d5a45a867abca16ab0d4e8db745" translate="yes" xml:space="preserve">
          <source>If you want to reject values that Python can successfully parse, you can add your own validation logic.</source>
          <target state="translated">Если вы хотите отклонить значения,которые Python может успешно разобрать,вы можете добавить свою собственную логику проверки.</target>
        </trans-unit>
        <trans-unit id="8aa88cbb714761a2ce228ad57bb7944a6567235e" translate="yes" xml:space="preserve">
          <source>If you've just learned about recursion, you might be tempted to use it in &lt;code&gt;get_non_negative_int&lt;/code&gt; so you can dispose of the while loop.</source>
          <target state="translated">Если вы только что узнали о рекурсии, у вас может возникнуть желание использовать ее в &lt;code&gt;get_non_negative_int&lt;/code&gt; , чтобы вы могли избавиться от цикла while.</target>
        </trans-unit>
        <trans-unit id="c3f8fa0d463c7455e7d3db5328813076dc355aa4" translate="yes" xml:space="preserve">
          <source>Implementing Your Own Validation Rules</source>
          <target state="translated">Внедрение собственных правил проверки</target>
        </trans-unit>
        <trans-unit id="f65489bc1c361348ad9cd63566b532fbd9e581f5" translate="yes" xml:space="preserve">
          <source>In the case when you have many functions to use for preprocessing, it might be easier to use a function performing a &lt;a href=&quot;https://en.wikipedia.org/wiki/Function_composition_(computer_science)&quot;&gt;function composition&lt;/a&gt;. For example, using the one from &lt;a href=&quot;https://lz.readthedocs.io/en/latest/lz.html#lz.functional.compose&quot;&gt;here&lt;/a&gt;:</source>
          <target state="translated">В случае, когда у вас есть много функций для предварительной обработки, может быть проще использовать функцию, выполняющую &lt;a href=&quot;https://en.wikipedia.org/wiki/Function_composition_(computer_science)&quot;&gt;композицию функций&lt;/a&gt; . Например, используя один из &lt;a href=&quot;https://lz.readthedocs.io/en/latest/lz.html#lz.functional.compose&quot;&gt;здесь&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1a807177a047eb2ee56870f0cf1fe6a4b83332f5" translate="yes" xml:space="preserve">
          <source>In this case, simply pressing</source>
          <target state="translated">В этом случае достаточно просто нажать</target>
        </trans-unit>
        <trans-unit id="e1420b6b2f9528d9a3603b392edfc6511f3d7260" translate="yes" xml:space="preserve">
          <source>Instead of crashing, I would like the program to ask for the input again. Like this:</source>
          <target state="translated">Вместо того,чтобы ломаться,я бы хотел,чтобы программа снова попросила ввести данные.Вот так:</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="42095caa1372551faaa10f77df1ccb06d4a7fb67" translate="yes" xml:space="preserve">
          <source>It might look attractive initially because it's shorter than the &lt;code&gt;while True&lt;/code&gt; method, but it violates the &lt;a href=&quot;http://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot;&gt;Don't Repeat Yourself&lt;/a&gt; principle of software development. This increases the likelihood of bugs in your system. What if you want to backport to 2.7 by changing &lt;code&gt;input&lt;/code&gt; to &lt;code&gt;raw_input&lt;/code&gt;, but accidentally change only the first &lt;code&gt;input&lt;/code&gt; above? It's a &lt;code&gt;SyntaxError&lt;/code&gt; just waiting to happen.</source>
          <target state="translated">Сначала он может выглядеть привлекательно, потому что он короче, чем метод &lt;code&gt;while True&lt;/code&gt; , но он нарушает принцип разработки программного обеспечения &amp;laquo; &lt;a href=&quot;http://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot;&gt;Не повторяй себя&amp;raquo;&lt;/a&gt; . Это увеличивает вероятность ошибок в вашей системе. Что если вы хотите перенести обратно в 2.7, изменив &lt;code&gt;input&lt;/code&gt; на &lt;code&gt;raw_input&lt;/code&gt; , но случайно измените только первый &lt;code&gt;input&lt;/code&gt; выше? Это &lt;code&gt;SyntaxError&lt;/code&gt; своего появления .</target>
        </trans-unit>
        <trans-unit id="1b7b99d04df48522a25d875d29bee1c7426a4d09" translate="yes" xml:space="preserve">
          <source>Limiting number of tries:</source>
          <target state="translated">Ограничение количества попыток:</target>
        </trans-unit>
        <trans-unit id="45b3b669489dc4f008395f3b58f703ea613e9627" translate="yes" xml:space="preserve">
          <source>Membership testing:</source>
          <target state="translated">Тестирование на членство:</target>
        </trans-unit>
        <trans-unit id="14d0eb8eab3895eda3cd7e4e43b4ff127484b588" translate="yes" xml:space="preserve">
          <source>Note how it converted the string value to a float automatically.</source>
          <target state="translated">Обратите внимание на то,как оно автоматически преобразует значение строки в плавающий диск.</target>
        </trans-unit>
        <trans-unit id="7131c43c2e37baf69698fa952778088d97499866" translate="yes" xml:space="preserve">
          <source>Note that the nature of this implementation is it closes stdin as soon as something that isn't a digit is read. I didn't hit enter after &lt;code&gt;a&lt;/code&gt;, but I needed to after the numbers.</source>
          <target state="translated">Обратите внимание, что природа этой реализации заключается в том, что она закрывает стандартный ввод, как только что-то, что не является цифрой, читается. Я не нажимал ввод после &lt;code&gt;a&lt;/code&gt; , но мне нужно было после чисел.</target>
        </trans-unit>
        <trans-unit id="062bd15fc2602a4730fe9add611cc67f2e699d25" translate="yes" xml:space="preserve">
          <source>Note: Read comments top of code.</source>
          <target state="translated">Примечание:Читайте комментарии поверх кода.</target>
        </trans-unit>
        <trans-unit id="e9ee53723b1bf7557fe1696a3094ddbd80a09948" translate="yes" xml:space="preserve">
          <source>Once the valid input is entered, we perform a check (using nested if-else statement) whether the age is &amp;gt;=18 or vice versa and print a message whether the user is eligible to vote</source>
          <target state="translated">После ввода правильного ввода мы выполняем проверку (используя вложенный оператор if-else), является ли возраст&amp;gt; = 18 или наоборот, и печатаем сообщение о том, имеет ли пользователь право голоса</target>
        </trans-unit>
        <trans-unit id="c10517ee43c66b1bd6454024216ea2d04a7ea020" translate="yes" xml:space="preserve">
          <source>One more solution for using input validation using a customized &lt;code&gt;ValidationError&lt;/code&gt; and a (optional) range validation for integer inputs:</source>
          <target state="translated">Еще одно решение для использования проверки ввода с использованием настраиваемой &lt;code&gt;ValidationError&lt;/code&gt; и (необязательно) проверки диапазона для целочисленных входных данных:</target>
        </trans-unit>
        <trans-unit id="58ab4d8c70604c5740aafb47ce7b995bd346f944" translate="yes" xml:space="preserve">
          <source>Or, if you don't like using dunder methods (dunder = double-underscore), you can always define your own function, or use the ones from the &lt;a href=&quot;https://docs.python.org/library/operator.html&quot;&gt;&lt;code&gt;operator&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Или, если вам не нравится использование более сложных методов (dunder = двойное подчеркивание), вы всегда можете определить свои собственные функции или использовать функции из модуля &lt;a href=&quot;https://docs.python.org/library/operator.html&quot;&gt; &lt;code&gt;operator&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="24e76a0c2b09dfe1d6b093d6c881f16e39dc5cef" translate="yes" xml:space="preserve">
          <source>Or, to answer the original question:</source>
          <target state="translated">Или,чтобы ответить на исходный вопрос:</target>
        </trans-unit>
        <trans-unit id="0ac3c9882a4b70189ad1bfa57e91f5a096b4d423" translate="yes" xml:space="preserve">
          <source>Other examples:</source>
          <target state="translated">Другие примеры:</target>
        </trans-unit>
        <trans-unit id="2dcab4741f9bbe43708bc513d43f2458d79b138f" translate="yes" xml:space="preserve">
          <source>Other validation rules:</source>
          <target state="translated">Другие правила проверки:</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="1c05d4f66e3072be43dc1137638140dfe5f32eae" translate="yes" xml:space="preserve">
          <source>P.S. This code is for python 3.x.</source>
          <target state="translated">P.S.Этот код для питона 3.x.</target>
        </trans-unit>
        <trans-unit id="98ff22a542694c01a1b0798081723b4f19dc1b8f" translate="yes" xml:space="preserve">
          <source>Password confirmation:</source>
          <target state="translated">Подтверждение пароля:</target>
        </trans-unit>
        <trans-unit id="28f8782852230c31834d2c2f605fd51cf6e49727" translate="yes" xml:space="preserve">
          <source>Persistent user input using &lt;strong&gt;recursive function&lt;/strong&gt;:</source>
          <target state="translated">Постоянный пользовательский ввод с использованием &lt;strong&gt;рекурсивной функции&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="e5ce4ac2d580ca0424bec105c383eaebae30b6a9" translate="yes" xml:space="preserve">
          <source>Preprocessing input data:</source>
          <target state="translated">Предварительная обработка входных данных:</target>
        </trans-unit>
        <trans-unit id="77b515b9d004e2d4a3d253d42b3f58bdf2425286" translate="yes" xml:space="preserve">
          <source>Putting It All Together</source>
          <target state="translated">Складывая все вместе</target>
        </trans-unit>
        <trans-unit id="14b43e8f5c6320bf62922fbff8513a46c1938864" translate="yes" xml:space="preserve">
          <source>Reading and writing files can be done by &lt;code&gt;click.File&lt;/code&gt;:</source>
          <target state="translated">Чтение и запись файлов могут быть выполнены с помощью &lt;code&gt;click.File&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="afb3c5e5525b9dce37b04de7a04b7c9b5fc2d4cb" translate="yes" xml:space="preserve">
          <source>Recursion Will Blow Your Stack</source>
          <target state="translated">Рекурсия взорвет вашу стопку.</target>
        </trans-unit>
        <trans-unit id="563523c7fb9aeb90cd3ca9914f9f94d5abfe8ef0" translate="yes" xml:space="preserve">
          <source>Simple example:</source>
          <target state="translated">Простой пример:</target>
        </trans-unit>
        <trans-unit id="82622f37f30f5d1802b2232c3e3f5756b8406bbd" translate="yes" xml:space="preserve">
          <source>So, I was messing around with something similar to this recently, and I came up with the following solution, which uses a way of getting input that rejects junk, before it's even checked in any logical way.</source>
          <target state="translated">Итак,недавно я подшучивал над чем-то подобным,и придумал следующее решение,использующее способ получения входных данных,который отвергает мусор,еще до того,как он будет проверен каким-либо логическим способом.</target>
        </trans-unit>
        <trans-unit id="447068e318fc0cbd472a1becb0e047b32f09b8a7" translate="yes" xml:space="preserve">
          <source>Sometimes we don't want to reject an input if the user accidentally supplied it &lt;em&gt;IN CAPS&lt;/em&gt; or with a space in the beginning or an end of the string. To take these simple mistakes into account we can preprocess the input data by applying &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.lower&quot;&gt;&lt;code&gt;str.lower&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.strip&quot;&gt;&lt;code&gt;str.strip&lt;/code&gt;&lt;/a&gt; methods. For example, for the case of membership testing the code will look like this:</source>
          <target state="translated">Иногда мы не хотим отклонять ввод, если пользователь случайно предоставил его &lt;em&gt;IN CAPS&lt;/em&gt; или с пробелом в начале или конце строки. Чтобы учесть эти простые ошибки, мы можем предварительно обработать входные данные, применяя &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.lower&quot;&gt; &lt;code&gt;str.lower&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.strip&quot;&gt; &lt;code&gt;str.strip&lt;/code&gt; &lt;/a&gt; . Например, в случае тестирования членства код будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="6cfe19b1a292f94eb1f8dbf0690abf636dd37d37" translate="yes" xml:space="preserve">
          <source>The Redundant Use of Redundant &lt;code&gt;input&lt;/code&gt; Statements</source>
          <target state="translated">Избыточное использование резервных &lt;code&gt;input&lt;/code&gt; операторов</target>
        </trans-unit>
        <trans-unit id="7d7cc27e418d647c28671c429d05fc552a041b46" translate="yes" xml:space="preserve">
          <source>The program works as expected as long as the the user enters meaningful data.</source>
          <target state="translated">Программа работает так,как ожидается,до тех пор,пока пользователь вводит значимые данные.</target>
        </trans-unit>
        <trans-unit id="ee1423d042019ace0669b0816607735161e11198" translate="yes" xml:space="preserve">
          <source>The simple solution would be:</source>
          <target state="translated">Простым решением было бы:</target>
        </trans-unit>
        <trans-unit id="6666e163c2f2a7676e17981407484977fa7c8959" translate="yes" xml:space="preserve">
          <source>The simplest way to accomplish this would be to put the &lt;code&gt;input&lt;/code&gt; method in a while loop. Use &lt;a href=&quot;https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt; when you get bad input, and &lt;code&gt;break&lt;/code&gt; out of the loop when you're satisfied.</source>
          <target state="translated">Самый простой способ сделать это - поместить метод &lt;code&gt;input&lt;/code&gt; в цикл while. Используйте &amp;laquo; &lt;a href=&quot;https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops&quot;&gt; &lt;code&gt;continue&lt;/code&gt; &lt;/a&gt; когда вы получаете неправильный ввод, и выходите из цикла, когда вы удовлетворены.</target>
        </trans-unit>
        <trans-unit id="83b5a3f65009100605bf355439a34b57d45cdba3" translate="yes" xml:space="preserve">
          <source>The var variable is just so that if the user enters a string instead of a integer the program wont return &quot;You are not able to vote in the United States.&quot;</source>
          <target state="translated">Переменная var просто такова,что если пользователь введет строку вместо целого числа,то программа вернёт &quot;Вы не можете голосовать в США&quot;.</target>
        </trans-unit>
        <trans-unit id="72b0f50405e094f9ddb945c6e83be15b30ef9b7e" translate="yes" xml:space="preserve">
          <source>Then we can ask user for age and if age input is negative or more than 120,we consider it invalid input and ask the user to try again.</source>
          <target state="translated">Затем мы можем попросить пользователя указать возраст,и если ввод данных о возрасте отрицателен или больше 120 лет,мы считаем этот ввод недействительным и просим пользователя попробовать еще раз.</target>
        </trans-unit>
        <trans-unit id="9c8501991a64d579db4ba49e291b977238dbac24" translate="yes" xml:space="preserve">
          <source>There are different &lt;a href=&quot;https://click.palletsprojects.com/en/7.x/parameters/#parameter-types&quot;&gt;custom types&lt;/a&gt; provided. To get a number in a specific range we can use &lt;code&gt;IntRange&lt;/code&gt;:</source>
          <target state="translated">Предусмотрено несколько &lt;a href=&quot;https://click.palletsprojects.com/en/7.x/parameters/#parameter-types&quot;&gt;пользовательских типов&lt;/a&gt; . Чтобы получить число в определенном диапазоне, мы можем использовать &lt;code&gt;IntRange&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="15ac60c2b161f8ee4c789f53513c7eded24945e8" translate="yes" xml:space="preserve">
          <source>There are several different ways to perform it. One of them is by using &lt;a href=&quot;https://docs.python.org/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Есть несколько разных способов сделать это. Одним из них является использование метода &lt;a href=&quot;https://docs.python.org/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a0841c6a7032de42781368f82500d8217ffd5677" translate="yes" xml:space="preserve">
          <source>There are useful comparison methods which we can use here. For example, for &lt;a href=&quot;https://docs.python.org/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;&amp;lt;&lt;/code&gt;):</source>
          <target state="translated">Есть полезные методы сравнения, которые мы можем использовать здесь. Например, для &lt;a href=&quot;https://docs.python.org/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;&amp;lt;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="347225df49657cf13b0ed68a51c1c7d5a3737681" translate="yes" xml:space="preserve">
          <source>This appears to work fine most of the time, but if the user enters invalid data enough times, the script will terminate with a &lt;code&gt;RuntimeError: maximum recursion depth exceeded&lt;/code&gt;. You may think &quot;no fool would make 1000 mistakes in a row&quot;, but you're underestimating the ingenuity of fools!</source>
          <target state="translated">В большинстве случаев это работает нормально, но если пользователь вводит недопустимые данные достаточно много раз, сценарий завершается с &lt;code&gt;RuntimeError: maximum recursion depth exceeded&lt;/code&gt; . Вы можете подумать, что &amp;laquo;ни один дурак не сделает 1000 ошибок подряд&amp;raquo;, но вы недооцениваете изобретательность дураков!</target>
        </trans-unit>
        <trans-unit id="f5d125705cdf58dc7a885039f35c323cf8746226" translate="yes" xml:space="preserve">
          <source>This code uses &lt;a href=&quot;https://docs.python.org/3/library/ast.html&quot;&gt;ast.literal_eval()&lt;/a&gt; to &lt;strong&gt;find the data type of the input&lt;/strong&gt; (&lt;code&gt;age&lt;/code&gt;). Then it follows the following algorithm:</source>
          <target state="translated">Этот код использует &lt;a href=&quot;https://docs.python.org/3/library/ast.html&quot;&gt;ast.literal_eval (),&lt;/a&gt; чтобы &lt;strong&gt;найти тип данных ввода&lt;/strong&gt; ( &lt;code&gt;age&lt;/code&gt; ). Далее следует следующий алгоритм:</target>
        </trans-unit>
        <trans-unit id="a11946bf2b62254cfc72241bf4fd047f618144ae" translate="yes" xml:space="preserve">
          <source>This combination of &lt;a href=&quot;https://docs.python.org/library/itertools.html#itertools.chain&quot;&gt;&lt;code&gt;itertools.chain&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/library/itertools.html#itertools.repeat&quot;&gt;&lt;code&gt;itertools.repeat&lt;/code&gt;&lt;/a&gt; will create an iterator 
which will yield strings &lt;code&gt;&quot;Enter a number: &quot;&lt;/code&gt; once, and &lt;code&gt;&quot;Not a number! Try again: &quot;&lt;/code&gt; an infinite number of times:</source>
          <target state="translated">Эта комбинация &lt;a href=&quot;https://docs.python.org/library/itertools.html#itertools.chain&quot;&gt; &lt;code&gt;itertools.chain&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://docs.python.org/library/itertools.html#itertools.repeat&quot;&gt; &lt;code&gt;itertools.repeat&lt;/code&gt; &lt;/a&gt; создаст итератор, который будет выдавать строки &lt;code&gt;&quot;Enter a number: &quot;&lt;/code&gt; один раз и &lt;code&gt;&quot;Not a number! Try again: &quot;&lt;/code&gt; бесконечное количество раз:</target>
        </trans-unit>
        <trans-unit id="420409224aa60a02c210b11bf9b505f77aca1d12" translate="yes" xml:space="preserve">
          <source>This may be used to get different kinds of input,
with different validation conditions.
For example:</source>
          <target state="translated">Это может быть использовано для получения различных видов входных данных,с различными условиями проверки.Например:</target>
        </trans-unit>
        <trans-unit id="034706060061fbab900d658521b10862c22c54b7" translate="yes" xml:space="preserve">
          <source>This method works but is generally considered poor style:</source>
          <target state="translated">Этот метод работает,но обычно считается плохим стилем:</target>
        </trans-unit>
        <trans-unit id="050423c285f77c6944a1c62a612b68ca61666d6b" translate="yes" xml:space="preserve">
          <source>This will be an infinite loo and you would be asked to enter the age, indefinitely.</source>
          <target state="translated">Это будет бесконечный туалет,и вас попросят войти в этот возраст,навсегда.</target>
        </trans-unit>
        <trans-unit id="2d7ed40d1c68685fcffe5200072c4f9b1c5285eb" translate="yes" xml:space="preserve">
          <source>This would result in the following:</source>
          <target state="translated">Это привело бы к следующему:</target>
        </trans-unit>
        <trans-unit id="12a319a58097d326f1bca95ba14ca02c91daac29" translate="yes" xml:space="preserve">
          <source>Though the accepted answer is amazing. I would also like to share a quick hack for this problem. (This takes care of the negative age problem as well.)</source>
          <target state="translated">Хотя принятый ответ поразителен.Я также хотел бы поделиться быстрым взломом для этой проблемы.(Это также решает проблему с отрицательным возрастом.)</target>
        </trans-unit>
        <trans-unit id="a3955912a7edfae39df6ab252ef981b5a5180180" translate="yes" xml:space="preserve">
          <source>Try this one:-</source>
          <target state="translated">Попробуйте вот это.</target>
        </trans-unit>
        <trans-unit id="2a6af9923bd8a38732fd0ed5acbf9aa3b54bf73c" translate="yes" xml:space="preserve">
          <source>Unfortunately, if someone needs a custom message for each failed case, then, I'm afraid, there is no &lt;em&gt;pretty&lt;/em&gt; functional way. Or, at least, I couldn't find one.</source>
          <target state="translated">К сожалению, если кому-то нужно индивидуальное сообщение для каждого неудачного случая, то, боюсь, не существует &lt;em&gt;достаточно&lt;/em&gt; функционального способа. Или, по крайней мере, я не мог найти один.</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="45c71be0ba20b61a6611682a1739d54b0cc60544" translate="yes" xml:space="preserve">
          <source>Use &quot;while&quot; statement till user enter a true value and if the input value is not a number or it's a null value skip it and try to ask again and so on. 
In example I tried to answer truly your question. If we suppose that our age is between 1 and 150 then input value accepted, else it's a wrong value.
For terminating program, the user can use 0 key and enter it as a value.</source>
          <target state="translated">Используйте оператор &quot;while&quot; до тех пор,пока пользователь не введет истинное значение,а если входное значение не является числом или нулевым,пропустите его и попробуйте спросить еще раз и так далее.В примере я попытался ответить на ваш вопрос по-настоящему.Если мы предполагаем,что наш возраст от 1 до 150 лет,то вводимое значение принимается,иначе это неправильное значение.Для завершения программы пользователь может использовать ключ 0 и ввести его в качестве значения.</target>
        </trans-unit>
        <trans-unit id="0809f67fd32cf418102a757d5068f2d2e56411b6" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://docs.python.org/3/tutorial/errors.html#handling-exceptions&quot;&gt;&lt;code&gt;try&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt;&lt;/a&gt; to detect when the user enters data that can't be parsed.</source>
          <target state="translated">Используйте &lt;a href=&quot;https://docs.python.org/3/tutorial/errors.html#handling-exceptions&quot;&gt; &lt;code&gt;try&lt;/code&gt; и &lt;code&gt;except&lt;/code&gt; &lt;/a&gt; чтобы определить, когда пользователь вводит данные, которые не могут быть проанализированы.</target>
        </trans-unit>
        <trans-unit id="156f5333387af7dc462273293869b127062952d5" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://click.palletsprojects.com/en/7.x/&quot;&gt;&lt;em&gt;Click&lt;/em&gt;&lt;/a&gt;:</source>
          <target state="translated">Используя &lt;a href=&quot;https://click.palletsprojects.com/en/7.x/&quot;&gt;&lt;em&gt;Click&lt;/em&gt;&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e0827f75369eff602aaa9fd838662b90e29a3180" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;click.Choice&lt;/code&gt; type. By default this check is case-sensitive.</source>
          <target state="translated">Использование &lt;code&gt;click.Choice&lt;/code&gt; type. По умолчанию эта проверка чувствительна к регистру.</target>
        </trans-unit>
        <trans-unit id="a61e00d389199ef5ead52318c429ad06a181b87f" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;click.Path&lt;/code&gt; type we can check for existing paths and also resolve them:</source>
          <target state="translated">Используя тип &lt;code&gt;click.Path&lt;/code&gt; , мы можем проверить существующие пути, а также разрешить их:</target>
        </trans-unit>
        <trans-unit id="2945efa2e3f0aae3e5184845124f102bc0668b41" translate="yes" xml:space="preserve">
          <source>We can also specify just one of the limits, &lt;code&gt;min&lt;/code&gt; or &lt;code&gt;max&lt;/code&gt;:</source>
          <target state="translated">Мы также можем указать только одно из ограничений, &lt;code&gt;min&lt;/code&gt; или &lt;code&gt;max&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c0e98d4de1b58350a764bf8b8300910406fc0c51" translate="yes" xml:space="preserve">
          <source>We use &lt;a href=&quot;https://docs.python.org/library/functions.html#filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.isdigit&quot;&gt;&lt;code&gt;str.isdigit&lt;/code&gt;&lt;/a&gt; to filter out those strings that contain only digits:</source>
          <target state="translated">Мы используем &lt;a href=&quot;https://docs.python.org/library/functions.html#filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#str.isdigit&quot;&gt; &lt;code&gt;str.isdigit&lt;/code&gt; &lt;/a&gt; для фильтрации тех строк, которые содержат только цифры:</target>
        </trans-unit>
        <trans-unit id="fd91fdc02704dc2671450a642b90e7c2a38b5333" translate="yes" xml:space="preserve">
          <source>When Your Input Might Raise an Exception</source>
          <target state="translated">Когда твой вход может увеличить исключение.</target>
        </trans-unit>
        <trans-unit id="6c5a36afe4a8297f57de0a97af9bb6dedebe5cab" translate="yes" xml:space="preserve">
          <source>While a &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;except&lt;/code&gt; block will work, a much faster and cleaner way to accomplish this task would be to use &lt;code&gt;str.isdigit()&lt;/code&gt;.</source>
          <target state="translated">Несмотря на то, что блок &lt;code&gt;try&lt;/code&gt; / Кроме &lt;code&gt;except&lt;/code&gt; будет работать, гораздо более быстрый и чистый способ выполнить эту задачу будет использовать &lt;code&gt;str.isdigit()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8d5e7a863d787342a44c9040fa72abd9311619f" translate="yes" xml:space="preserve">
          <source>Why would you do a &lt;code&gt;while True&lt;/code&gt; and then break out of this loop while you can also just put your requirements in the while statement since all you want is to stop once you have the age?</source>
          <target state="translated">Зачем вам делать некоторое &lt;code&gt;while True&lt;/code&gt; а затем выходить из этого цикла, в то время как вы можете просто указать свои требования в операторе while, поскольку все, что вам нужно, - это остановиться после достижения возраста?</target>
        </trans-unit>
        <trans-unit id="cd744395bde6d8f68047f3f83c5975cabbfaab23" translate="yes" xml:space="preserve">
          <source>With usage such as:</source>
          <target state="translated">С использованием,например:</target>
        </trans-unit>
        <trans-unit id="1000cef2fdb4b122809f57db7fef5ddfb8878cba" translate="yes" xml:space="preserve">
          <source>Working with paths and files:</source>
          <target state="translated">Работа с путями и файлами:</target>
        </trans-unit>
        <trans-unit id="20f555ab2e7462146bc18902994f4b96a03ad66b" translate="yes" xml:space="preserve">
          <source>You can always apply simple if-else logic and add one more &lt;code&gt;if&lt;/code&gt; logic to your code along with a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">Вы всегда можете применить простую логику if-else и добавить еще одну логику &lt;code&gt;if&lt;/code&gt; в свой код вместе с циклом &lt;code&gt;for&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75b6d7faf5682aeb441bab14ea904b330a258ada" translate="yes" xml:space="preserve">
          <source>You can extend this idea to make a very generic input function:</source>
          <target state="translated">Вы можете расширить эту идею,чтобы сделать очень общую функцию ввода:</target>
        </trans-unit>
        <trans-unit id="dd8d5663f16c4dfa676e3d04e3ff3904dd55678c" translate="yes" xml:space="preserve">
          <source>You can find the complete module &lt;a href=&quot;https://github.com/catb0t/input_constrain&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Вы можете найти полный модуль &lt;a href=&quot;https://github.com/catb0t/input_constrain&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3246cd227ca329e0cc62b73a811b25d03098a598" translate="yes" xml:space="preserve">
          <source>You can make the input statement a while True loop so it repeatedly asks for the users input and then break that loop if the user enters the response you would like. And you can use try and except blocks to handle invalid responses.</source>
          <target state="translated">Вы можете сделать входной оператор некоторое время True цикла,так что он неоднократно просит пользователей ввода,а затем прервать этот цикл,если пользователь входит в ответ,который вы хотите.И Вы можете использовать попытки,за исключением блоков,для обработки недействительных ответов.</target>
        </trans-unit>
        <trans-unit id="70f8952bd80dfba10cd3ab836fd2b382e547129f" translate="yes" xml:space="preserve">
          <source>You can write more general logic to allow user to enter only specific number of times, as the same use-case arises in many real-world applications.</source>
          <target state="translated">Вы можете написать более общую логику,позволяющую пользователю вводить только определенное количество раз,так как один и тот же вариант использования возникает во многих реальных приложениях.</target>
        </trans-unit>
        <trans-unit id="c7ce28cdf280aeb39be90a250f35afde1be5da5f" translate="yes" xml:space="preserve">
          <source>You could merge this with the &lt;code&gt;thismany()&lt;/code&gt; function in the same module to only allow, say, three digits.</source>
          <target state="translated">Вы можете объединить это с &lt;code&gt;thismany()&lt;/code&gt; в том же модуле, чтобы разрешить, скажем, только три цифры.</target>
        </trans-unit>
        <trans-unit id="ba52188347a3e754fd275290e5d3a517dc17f1ac" translate="yes" xml:space="preserve">
          <source>and finally, the question requirement:</source>
          <target state="translated">и,наконец,требование к вопросу:</target>
        </trans-unit>
        <trans-unit id="4d985d07d58297153e5ebb6532053c0e9f9e471d" translate="yes" xml:space="preserve">
          <source>or if you want to have a &quot;bad input&quot; message separated from an input prompt as in other answers:</source>
          <target state="translated">или если вы хотите,чтобы сообщение &quot;плохой ввод&quot; было отделено от приглашения к вводу,как и в других ответах:</target>
        </trans-unit>
        <trans-unit id="f62608e0a56bfde6bfaa8d7d6f39ac0845e09cfd" translate="yes" xml:space="preserve">
          <source>this will work since age will never have a value that will not make sense and the code follows the logic of your &quot;business process&quot;</source>
          <target state="translated">это сработает,так как возраст никогда не будет иметь значения,которое не будет иметь смысла,и код следует логике вашего &quot;бизнес-процесса&quot;.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
