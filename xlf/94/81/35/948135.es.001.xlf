<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/948135">
    <body>
      <group id="948135">
        <trans-unit id="76639e8ea0fe25a9f7e863b3cd51c2f42fa6bae8" translate="yes" xml:space="preserve">
          <source>&quot;&lt;a href=&quot;http://www.skorks.com/2009/09/ruby-equality-and-object-comparison/&quot;&gt;Ruby Equality And Object Comparison&lt;/a&gt;&quot; is a good discussion on the topic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.skorks.com/2009/09/ruby-equality-and-object-comparison/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ruby Equality And Object Comparison&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; es una buena discusi&amp;oacute;n sobre el tema.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fc26d1b1867d876e31ba166bc9b4a38f2ebeb5a" translate="yes" xml:space="preserve">
          <source>(Example taken from &quot;&lt;a href=&quot;http://www.skorks.com/2009/08/how-a-ruby-case-statement-works-and-what-you-can-do-with-it/&quot;&gt;How A Ruby Case Statement Works And What You Can Do With It&lt;/a&gt;&quot;.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Ejemplo tomado de &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.skorks.com/2009/08/how-a-ruby-case-statement-works-and-what-you-can-do-with-it/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;mo funciona una declaraci&amp;oacute;n de caso Ruby y qu&amp;eacute; puede hacer con ella&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5013c403b1648f040432f6fd4e056482d9045e6" translate="yes" xml:space="preserve">
          <source>(Example taken from &quot;&lt;a href=&quot;https://stackoverflow.com/questions/16662295/can-procs-be-used-with-case-statements-in-ruby-2-0&quot;&gt;Can procs be used with case statements in Ruby 2.0?&lt;/a&gt;&quot;.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Ejemplo tomado de &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/16662295/can-procs-be-used-with-case-statements-in-ruby-2-0&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Se pueden usar procs con declaraciones de casos en Ruby 2.0?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3ddd284ff9db6a25d9399a194a2d4c8f758cf4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;case...when&lt;/code&gt; behaves a bit unexpectedly when handling classes. This is due to the fact that it uses the &lt;code&gt;===&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;case...when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; comporta un poco inesperadamente al manejar clases. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se debe al hecho de que utiliza el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac18effc971e975d9bfe0d29fa28b6153b57391c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; is not less than 2, yet the return value is &lt;code&gt;&quot;apple&quot;&lt;/code&gt;. Why? Because &lt;code&gt;x&lt;/code&gt; was 3 and since &lt;code&gt;',`` acts as an&lt;/code&gt;||&lt;code&gt;, it did not bother to evaluate the expression&lt;/code&gt;x &amp;lt; 2'.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es menor que 2, pero el valor de retorno es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;apple&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Por qu&amp;eacute;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; era 3 y desde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;',`` acts as an&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; || &lt;/font&gt;&lt;/font&gt; &lt;code&gt;, it did not bother to evaluate the expression&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; x &amp;lt;2 '.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1200414c8cbbb79b1c1a7dabfdff5f719d44058e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;With parameter:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con par&amp;aacute;metro:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04c39ee477f886065cf76e130447611fbdff33a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Without parameter:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin par&amp;aacute;metro:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30a9396f0c9804200554242ae7fecd5b082a3f77" translate="yes" xml:space="preserve">
          <source>A case statement can end with an &lt;code&gt;else&lt;/code&gt; clause. Each &lt;code&gt;when&lt;/code&gt; a
  statement can have multiple candidate values, separated by commas.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una declaraci&amp;oacute;n de caso puede terminar con una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;else&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una declaraci&amp;oacute;n puede tener m&amp;uacute;ltiples valores candidatos, separados por comas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c44a91760367182e76dfb5f0a6d919d4101e5ec2" translate="yes" xml:space="preserve">
          <source>A workaround following a combination of methods already previously covered in &lt;a href=&quot;https://stackoverflow.com/a/38445037/6225838&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://stackoverflow.com/a/20441220/6225838&quot;&gt;here&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una soluci&amp;oacute;n alternativa que sigue una combinaci&amp;oacute;n de m&amp;eacute;todos ya cubiertos anteriormente &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/38445037/6225838&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/20441220/6225838&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a019b6cef34ec260141b11f307b1cbee88c729db" translate="yes" xml:space="preserve">
          <source>Also, can be used with your own match classes:</source>
          <target state="translated">También,puede ser usado con sus propias clases de fósforo:</target>
        </trans-unit>
        <trans-unit id="1ea29e04326f18275640e53fbdc4399013a3fdd2" translate="yes" xml:space="preserve">
          <source>And a &lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;regular expression&lt;/a&gt; solution here:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;soluci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresi&amp;oacute;n regular&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; aqu&amp;iacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9da229ea4138a5415a4bb39cd2f7765d9d9213d5" translate="yes" xml:space="preserve">
          <source>And as &quot;&lt;a href=&quot;http://blog.honeybadger.io/rubys-case-statement-advanced-techniques/&quot;&gt;Ruby's case statement - advanced techniques&lt;/a&gt;&quot; describes Ruby &lt;code&gt;case&lt;/code&gt;;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y como &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.honeybadger.io/rubys-case-statement-advanced-techniques/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declaraci&amp;oacute;n del caso de Ruby - t&amp;eacute;cnicas avanzadas&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; describe el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Ruby &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7191936c06e3cf785e464cb3ae6b7c1b174b32fe" translate="yes" xml:space="preserve">
          <source>And it turns out you can also replace an arbitrary if/else chain (that is, even if the tests don't involve a common variable) with &lt;code&gt;case&lt;/code&gt; by leaving out the initial &lt;code&gt;case&lt;/code&gt; parameter and just writing expressions where the first match is what you want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y resulta que tambi&amp;eacute;n puede reemplazar una cadena arbitraria if / else (es decir, incluso si las pruebas no involucran una variable com&amp;uacute;n) con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; al omitir el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;par&amp;aacute;metro de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; inicial &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y simplemente escribir expresiones donde la primera coincidencia es lo que usted desear.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dedf5ccdeb6bf446ef7cfb01d8db4c4b042b2078" translate="yes" xml:space="preserve">
          <source>Another example:</source>
          <target state="translated">Otro ejemplo:</target>
        </trans-unit>
        <trans-unit id="70c85bf8152c745fd507319bb06f26dfc74c5874" translate="yes" xml:space="preserve">
          <source>As per the &lt;a href=&quot;http://ruby-doc.org/docs/keywords/1.9/Object.html#method-i-case&quot;&gt;&lt;code&gt;case&lt;/code&gt;&lt;/a&gt; documentation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Seg&amp;uacute;n la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;del &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ruby-doc.org/docs/keywords/1.9/Object.html#method-i-case&quot;&gt; &lt;code&gt;case&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c29e1694ec0a0f0259b89191ef7ca565979a2c7b" translate="yes" xml:space="preserve">
          <source>As stated in many of the above answers, the &lt;code&gt;===&lt;/code&gt; operator is used under the hood on &lt;code&gt;case&lt;/code&gt;/&lt;code&gt;when&lt;/code&gt; statements.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como se indica en muchas de las respuestas anteriores, el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se utiliza bajo el cap&amp;oacute; en las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraciones de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0dc24f8bf5e3239d13e632f2b60a41abdbb2053e" translate="yes" xml:space="preserve">
          <source>Can be used with &lt;a href=&quot;http://ruby-doc.org/core-2.2.0/Range.html&quot;&gt;Ranges&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede usar con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ruby-doc.org/core-2.2.0/Range.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rangos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e70d7eed6ae68f27a4dfe0df4ceff8ed6e2f949f" translate="yes" xml:space="preserve">
          <source>Can be used with &lt;a href=&quot;https://en.wikipedia.org/wiki/Regular_expression&quot;&gt;Regex&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede usar con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Regular_expression&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Regex&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="443da2150f13fbe565fc07781eb3327ca33272e3" translate="yes" xml:space="preserve">
          <source>Can be used with &lt;a href=&quot;https://rubymonk.com/learning/books/4-ruby-primer-ascent/chapters/18-blocks/lessons/64-blocks-procs-lambdas&quot;&gt;Procs and Lambdas&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede usar con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://rubymonk.com/learning/books/4-ruby-primer-ascent/chapters/18-blocks/lessons/64-blocks-procs-lambdas&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Procs y Lambdas&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="268d74cb7b6f809747a2f6a970d48b1081f83046" translate="yes" xml:space="preserve">
          <source>Case equality operator: &lt;code&gt;===&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Operador de igualdad de casos: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b1ae4188184b5a1a15bdbfe6e9a2d0d561bfb16" translate="yes" xml:space="preserve">
          <source>Case statements consist of an optional condition, which is in the
  position of an argument to &lt;code&gt;case&lt;/code&gt;, and zero or more &lt;code&gt;when&lt;/code&gt; clauses.
  The first &lt;code&gt;when&lt;/code&gt; clause to match the condition (or to evaluate to
  Boolean truth, if the condition is null) &amp;ldquo;wins&amp;rdquo;, and its code stanza
  is executed. The value of the case statement is the value of the
  successful &lt;code&gt;when&lt;/code&gt; clause, or &lt;code&gt;nil&lt;/code&gt; if there is no such clause.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las declaraciones de caso consisten en una condici&amp;oacute;n opcional, que est&amp;aacute; en la posici&amp;oacute;n de un argumento para el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y cero o m&amp;aacute;s &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cl&amp;aacute;usulas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La primera &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para que coincida con la condici&amp;oacute;n (o para evaluar la verdad booleana, si la condici&amp;oacute;n es nula) &quot;gana&quot;, y se ejecuta su estrofa de c&amp;oacute;digo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El valor de la declaraci&amp;oacute;n del caso es el valor de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; exitosa &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;nil&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si no existe tal cl&amp;aacute;usula.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="464a0cd3ba034187e0fbdc5820b50ee367d87276" translate="yes" xml:space="preserve">
          <source>Depending on your case, you could prefer to use a hash of methods.</source>
          <target state="translated">Dependiendo de su caso,podría preferir utilizar un hachís de métodos.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="58b9c4f48971ab6c70e74dfbe8d0bf56aa50dac5" translate="yes" xml:space="preserve">
          <source>For Example,</source>
          <target state="translated">Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="61e449a3b295cf591adfa3814a1465e80cdab9f1" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;https://ruby-doc.org/core-2.6.5/doc/syntax/control_expressions_rdoc.html#label-case+Expression&quot;&gt;&lt;code&gt;case&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n del &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://ruby-doc.org/core-2.6.5/doc/syntax/control_expressions_rdoc.html#label-case+Expression&quot;&gt; &lt;code&gt;case&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="897c60f66437ec41ceaeaf247721bfe21b31414a" translate="yes" xml:space="preserve">
          <source>Fortunately, this is easily solved. The &lt;code&gt;===&lt;/code&gt; operator has been defined so that it returns &lt;code&gt;true&lt;/code&gt; if you use it with a class and supply an instance of that class as the second operand:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Afortunadamente, esto se resuelve f&amp;aacute;cilmente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se ha definido para que devuelva &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si lo usa con una clase y proporciona una instancia de esa clase como el segundo operando:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="62fdeef331aa012acaa6fd750f0bffbe05d9fc12" translate="yes" xml:space="preserve">
          <source>Here is additional information about that operator:</source>
          <target state="translated">Aquí hay información adicional sobre ese operador:</target>
        </trans-unit>
        <trans-unit id="c8c63703f2f99478faf813e07398421d80719165" translate="yes" xml:space="preserve">
          <source>How do I write a &lt;code&gt;switch&lt;/code&gt; statement in Ruby?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo escribo una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;switch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en Ruby?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3f9b8e223cd53ad487851dd08b26c4cef3e0712" translate="yes" xml:space="preserve">
          <source>How to write a switch statement in Ruby</source>
          <target state="translated">Cómo escribir una declaración de cambio en Ruby</target>
        </trans-unit>
        <trans-unit id="761bf0d31aeb11ca6de47ed397c0250fbf4fcf53" translate="yes" xml:space="preserve">
          <source>I hit this problem today while looking for an answer, and this was the first appearing page, so I figured it would be useful to others in my same situation.</source>
          <target state="translated">Me encontré con este problema hoy mientras buscaba una respuesta,y esta fue la primera página que apareció,así que me imaginé que sería útil para otros en mi misma situación.</target>
        </trans-unit>
        <trans-unit id="0865dfe7e0bc825e5770532b160a4ee179143f5d" translate="yes" xml:space="preserve">
          <source>I used &lt;code&gt;or&lt;/code&gt;s in the class method statement since &lt;code&gt;||&lt;/code&gt; has higher precedence than 
&lt;code&gt;.include?&lt;/code&gt;. If you are a &lt;a href=&quot;https://stackoverflow.com/a/49814089/6225838&quot;&gt;&lt;em&gt;ruby-nazi&lt;/em&gt;&lt;/a&gt;, please imagine I used this &lt;code&gt;(item.include? 'A') || ...&lt;/code&gt; instead. &lt;a href=&quot;https://repl.it/repls/LightyellowCloseAddition&quot;&gt;repl.it&lt;/a&gt; test.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Us&amp;eacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;or&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s en la declaraci&amp;oacute;n del m&amp;eacute;todo de clase desde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;||&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tiene mayor prioridad que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.include?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si eres un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/49814089/6225838&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;rub&amp;iacute;-nazi&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , imagina que us&amp;eacute; esto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(item.include? 'A') || ...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cambio. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://repl.it/repls/LightyellowCloseAddition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;repl.it&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; test.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fe3ba2832442f13ac2372d35a64b7fb84b188a4" translate="yes" xml:space="preserve">
          <source>I've started to use:</source>
          <target state="translated">He empezado a usar:</target>
        </trans-unit>
        <trans-unit id="13bddd4a54212b6c07afddf99c56c90a6331504e" translate="yes" xml:space="preserve">
          <source>If there is a long list of &lt;code&gt;when&lt;/code&gt;s and each of them has a concrete value to compare with (not an interval), it will be more effective to declare a hash of methods and then to call the relevant method from the hash like that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si hay una larga lista de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s y cada uno de ellos tiene un valor concreto para comparar (no un intervalo), ser&amp;aacute; m&amp;aacute;s efectivo declarar un hash de m&amp;eacute;todos y luego llamar al m&amp;eacute;todo relevante del hash de esa manera.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf9c609c795a0151698714c95edfb7cf61d25673" translate="yes" xml:space="preserve">
          <source>If you are eager to know how to use an OR condition in a Ruby switch case:</source>
          <target state="translated">Si estás ansioso por saber cómo usar una condición de quirófano en un caso de cambio de Ruby:</target>
        </trans-unit>
        <trans-unit id="e4cebe497659f084455212c65d7b225751741dea" translate="yes" xml:space="preserve">
          <source>In C-like languages fallthrough typically looks like this:</source>
          <target state="translated">En las lenguas con forma de C,la caída de la caída se ve típicamente así:</target>
        </trans-unit>
        <trans-unit id="4c25702d6afab47668343e4302c0f5d947b663f9" translate="yes" xml:space="preserve">
          <source>In Ruby 2.0, you can also use lambdas in &lt;code&gt;case&lt;/code&gt; statements, as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En Ruby 2.0, tambi&amp;eacute;n puede usar lambdas en las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraciones de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , de la siguiente manera:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34921fdad1dde0f6219191ca5009eb4204af6e1a" translate="yes" xml:space="preserve">
          <source>In Ruby, the same can be achieved in the following way:</source>
          <target state="translated">En Rubí,lo mismo se puede lograr de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="44267331111fa2a32c3f7326f3c8ec041e062cd3" translate="yes" xml:space="preserve">
          <source>In short, the code above can be fixed by removing the &lt;code&gt;.class&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En resumen, el c&amp;oacute;digo anterior se puede solucionar eliminando el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d89f1712780395526d8cb8aa6eae635293aea3b" translate="yes" xml:space="preserve">
          <source>In the Ruby Programming Language book, Matz says this latter form is the simple (and infrequently used) form, which is nothing more than an alternative syntax for &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;elsif&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt;. However, whether it is infrequently used or not, I do not see any other way to attach multiple &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; expressions for a given &lt;code&gt;when&lt;/code&gt; clause.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el libro Ruby Programming Language, Matz dice que esta &amp;uacute;ltima forma es la forma simple (y que se usa con poca frecuencia), que no es m&amp;aacute;s que una sintaxis alternativa para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;elsif&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;else&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, ya sea que se use con poca frecuencia o no, no veo ninguna otra forma de adjuntar m&amp;uacute;ltiples &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresiones &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dada &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10c206ed548626becfe3df1e80774d696bb0f047" translate="yes" xml:space="preserve">
          <source>It doesn't work because &lt;code&gt;(3 &amp;amp;&amp;amp; x &amp;gt; 2)&lt;/code&gt; evaluates to true, and Ruby takes the True value and compares it to &lt;code&gt;x&lt;/code&gt; with &lt;code&gt;===&lt;/code&gt;, which is not true, since &lt;code&gt;x&lt;/code&gt; is 3.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No funciona porque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(3 &amp;amp;&amp;amp; x &amp;gt; 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; eval&amp;uacute;a como verdadero, y Ruby toma el valor Verdadero y lo compara con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , lo cual no es cierto, ya que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es 3.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="785f08761315ae6f2ae29902dc7d6b41475f05eb" translate="yes" xml:space="preserve">
          <source>It helps compact code in some cases.</source>
          <target state="translated">Ayuda a compactar el código en algunos casos.</target>
        </trans-unit>
        <trans-unit id="fd6933e6e99aad65a484250ed9d5adcf272e3156" translate="yes" xml:space="preserve">
          <source>It is done using &lt;a href=&quot;http://www.techotopia.com/index.php/The_Ruby_case_Statement&quot;&gt;&lt;code&gt;case&lt;/code&gt;&lt;/a&gt; in Ruby. Also see &quot;&lt;a href=&quot;http://en.wikipedia.org/wiki/Switch_statement#Ruby&quot;&gt;Switch statement&lt;/a&gt;&quot; on Wikipedia.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se hace usando el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.techotopia.com/index.php/The_Ruby_case_Statement&quot;&gt; &lt;code&gt;case&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en Ruby. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte tambi&amp;eacute;n &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Switch_statement#Ruby&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declaraci&amp;oacute;n de cambio&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; en Wikipedia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28fb063cbf8a54d1cd9f4aa3a6c1a37c0fa960ab" translate="yes" xml:space="preserve">
          <source>It's called &lt;code&gt;case&lt;/code&gt; and it works like you would expect, plus lots more fun stuff courtesy of &lt;code&gt;===&lt;/code&gt; which implements the tests.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se llama &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y funciona como era de esperar, adem&amp;aacute;s de muchas cosas m&amp;aacute;s divertidas cortes&amp;iacute;a de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que implementa las pruebas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5427141427237a0624a1edf6c79df8cab3d0c228" translate="yes" xml:space="preserve">
          <source>It's critical to emphasize the comma (&lt;code&gt;,&lt;/code&gt;) in a &lt;code&gt;when&lt;/code&gt; clause. It acts as an &lt;code&gt;||&lt;/code&gt; of an &lt;code&gt;if&lt;/code&gt; statement, that is, it does an &lt;em&gt;OR&lt;/em&gt; comparison and not an &lt;em&gt;AND&lt;/em&gt; comparison between the delimited expressions of the &lt;code&gt;when&lt;/code&gt; clause. See the following case statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es cr&amp;iacute;tico enfatizar la coma ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;,&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) en una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Act&amp;uacute;a como un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;||&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , es decir, hace una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;comparaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;OR&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;comparaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AND&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; entre las expresiones delimitadas de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea la siguiente declaraci&amp;oacute;n de caso:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db4003aa3cae6301a94390e75c488e41ff478b41" translate="yes" xml:space="preserve">
          <source>Lots of great answers but I thought I would add one factoid.. If you are attempting to compare objects (Classes) make sure you have a space ship method (not a joke) or understand how they are being compared</source>
          <target state="translated">Muchas respuestas geniales,pero pensé en añadir un dato...Si estás intentando comparar objetos (Clases)asegúrate de tener un método de nave espacial (no una broma)o entender cómo se están comparando</target>
        </trans-unit>
        <trans-unit id="a5a6075d1b13bc2dcfecd46c61ff991768614fb2" translate="yes" xml:space="preserve">
          <source>Many of Ruby's built-in classes, such as String, Range, and Regexp, provide their own implementations of the &lt;code&gt;===&lt;/code&gt; operator, also known as &quot;case-equality&quot;, &quot;triple equals&quot; or &quot;threequals&quot;. Because it's implemented differently in each class, it will behave differently depending on the type of object it was called on. Generally, it returns true if the object on the right &quot;belongs to&quot; or &quot;is a member of&quot; the object on the left. For instance, it can be used to test if an object is an instance of a class (or one of its sub-classes).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Muchas de las clases integradas de Ruby, como String, Range y Regexp, proporcionan sus propias implementaciones del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , tambi&amp;eacute;n conocido como &quot;igualdad de casos&quot;, &quot;triple igual&quot; o &quot;tres iguales&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debido a que se implementa de manera diferente en cada clase, se comportar&amp;aacute; de manera diferente seg&amp;uacute;n el tipo de objeto al que se llam&amp;oacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En general, devuelve verdadero si el objeto de la derecha &quot;pertenece&quot; o &quot;es miembro del&quot; objeto de la izquierda. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, se puede usar para probar si un objeto es una instancia de una clase (o una de sus subclases).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbd861ac434667177a5dcac11da6d1d6eaf5f8a0" translate="yes" xml:space="preserve">
          <source>Many programming languages, especially those derived from C, have support for the so-called &lt;a href=&quot;http://en.wikipedia.org/wiki/Switch_statement#Fallthrough&quot;&gt;Switch Fallthrough&lt;/a&gt;. I was searching for the best way to do the same in Ruby and thought it might be useful to others:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Muchos lenguajes de programaci&amp;oacute;n, especialmente los derivados de C, tienen soporte para el llamado &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Switch_statement#Fallthrough&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Switch Fallthrough&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estaba buscando la mejor manera de hacer lo mismo en Ruby y pens&amp;eacute; que podr&amp;iacute;a ser &amp;uacute;til para otros:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0309fb95b3632a612d4799558ce3ea313b269cd9" translate="yes" xml:space="preserve">
          <source>Multi-value when and no-value case:</source>
          <target state="translated">Caso de multi-valor cuando y sin valor:</target>
        </trans-unit>
        <trans-unit id="da65494263c3ca8935e368be4c63decd6837db31" translate="yes" xml:space="preserve">
          <source>No support for regular expressions in your environment? E.g. &lt;a href=&quot;https://help.shopify.com/manual/apps/apps-by-shopify/script-editor/limitations#regular-expressions&quot;&gt;&lt;strong&gt;Shopify&lt;/strong&gt; Script Editor&lt;/a&gt; (April, 2018):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;No hay soporte para expresiones regulares en su entorno? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://help.shopify.com/manual/apps/apps-by-shopify/script-editor/limitations#regular-expressions&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Shopify&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Script Editor&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (abril de 2018):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5db9bdd8e21630a1bbde23d61145111e905e7f14" translate="yes" xml:space="preserve">
          <source>Now for some fun:</source>
          <target state="translated">Ahora para divertirse un poco:</target>
        </trans-unit>
        <trans-unit id="226660a958c1659d26f365a0a741f33dc5821eac" translate="yes" xml:space="preserve">
          <source>On around page 123 of &lt;em&gt;The Ruby Programming Language&lt;/em&gt; (1st Edition, O'Reilly) on my Kindle, it says the &lt;code&gt;then&lt;/code&gt; keyword following the &lt;code&gt;when&lt;/code&gt; clauses can be replaced with a newline or semicolon (just like in the &lt;code&gt;if then else&lt;/code&gt; syntax). (Ruby 1.8 also allows a colon in place of &lt;code&gt;then&lt;/code&gt;, but this syntax is no longer allowed in Ruby 1.9.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En torno a la p&amp;aacute;gina 123 de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;The Ruby Lenguaje de programaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (primera edici&amp;oacute;n, O'Reilly) en mi Kindle, se dice que la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;then&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de palabras clave siguiendo el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cl&amp;aacute;usulas pueden ser sustituidos por un salto de l&amp;iacute;nea o punto y coma (al igual que en la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if then else&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la sintaxis). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Ruby 1.8 tambi&amp;eacute;n permite dos puntos en lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;then&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero esta sintaxis ya no est&amp;aacute; permitida en Ruby 1.9).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67db7054e0d37096f2fe01073fdac95702b0917b" translate="yes" xml:space="preserve">
          <source>Or, with a complete class:</source>
          <target state="translated">O,con una clase completa:</target>
        </trans-unit>
        <trans-unit id="f15524e951826e96066239c05bcdde0e4b08bf65" translate="yes" xml:space="preserve">
          <source>Please, be aware of &quot;&lt;a href=&quot;https://stackoverflow.com/questions/948135/how-to-write-a-switch-statement-in-ruby/5694333#5694333&quot;&gt;How to write a switch statement in Ruby&lt;/a&gt;&quot; that kikito warns about.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/948135/how-to-write-a-switch-statement-in-ruby/5694333#5694333&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;mo escribir una declaraci&amp;oacute;n de cambio en Ruby&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; sobre el que advierte kikito.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55f24fcb5b12702d13e2fdf9eeef44b709ee2a2a" translate="yes" xml:space="preserve">
          <source>Quoted:</source>
          <target state="translated">Quoted:</target>
        </trans-unit>
        <trans-unit id="c1cf1a5698043c99242f53492cf0e72c704f7be7" translate="yes" xml:space="preserve">
          <source>Range Implementation of &lt;code&gt;===&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Implementaci&amp;oacute;n de rango de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84f05fcd3736c8d6d3a0b519d8d8e08439559cc7" translate="yes" xml:space="preserve">
          <source>Regexp Implementation of &lt;code&gt;===&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Implementaci&amp;oacute;n de expresiones regulares de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="954fdf5eae933806a7278a4a946d62230f4be610" translate="yes" xml:space="preserve">
          <source>Remember that the &lt;code&gt;===&lt;/code&gt; operator invokes the &lt;code&gt;===&lt;/code&gt; method of the left-hand object. So &lt;code&gt;(1..4) === 3&lt;/code&gt; is equivalent to &lt;code&gt;(1..4).=== 3&lt;/code&gt;. In other words, the class of the left-hand operand will define which implementation of the &lt;code&gt;===&lt;/code&gt; method will be called, so the operand positions are not interchangeable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Recuerde que el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; invoca el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del objeto de la izquierda. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1..4) === 3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es equivalente a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1..4).=== 3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En otras palabras, la clase del operando de la izquierda definir&amp;aacute; qu&amp;eacute; implementaci&amp;oacute;n del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se llamar&amp;aacute;, por lo que las posiciones de los operandos no son intercambiables.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe719082baf52a6ccf53ca2b95996439f35edc39" translate="yes" xml:space="preserve">
          <source>Returns true if the string on the right matches the regular expression on the left.</source>
          <target state="translated">Devuelve verdadero si la cuerda de la derecha coincide con la expresión regular de la izquierda.</target>
        </trans-unit>
        <trans-unit id="e4e6158d19f09d02170e7aa52e33f46344a36a2e" translate="yes" xml:space="preserve">
          <source>Ruby compares the object in the &lt;code&gt;when&lt;/code&gt; clause with the object in the &lt;code&gt;case&lt;/code&gt; clause using the &lt;code&gt;===&lt;/code&gt; operator. For example, &lt;code&gt;1..5 === x&lt;/code&gt;, and not &lt;code&gt;x === 1..5&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ruby compara el objeto en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con el objeto en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usando el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1..5 === x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y no &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x === 1..5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d41830e450db54a7620d87a0c36d2cfb49f7b87f" translate="yes" xml:space="preserve">
          <source>Ruby uses the &lt;a href=&quot;http://ruby-doc.com/docs/ProgrammingRuby/html/tut_expressions.html#S5&quot;&gt;&lt;code&gt;case&lt;/code&gt; expression&lt;/a&gt; instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ruby usa la &lt;/font&gt;&lt;a href=&quot;http://ruby-doc.com/docs/ProgrammingRuby/html/tut_expressions.html#S5&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresi&amp;oacute;n de &lt;/font&gt;&lt;/a&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; su&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc5c648a39ede0bc966775b642a6837e547756dc" translate="yes" xml:space="preserve">
          <source>Ruby uses the &lt;code&gt;case&lt;/code&gt; for writing switch statements.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ruby usa el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para escribir declaraciones de cambio.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b44e7ebf4868568ddb5afe63a285950a95ca8aa" translate="yes" xml:space="preserve">
          <source>Ruby's &lt;code&gt;case&lt;/code&gt; will use the equality operand &lt;code&gt;===&lt;/code&gt; for this (thanks @JimDeville). Additional information is available at &quot;&lt;a href=&quot;http://www.tutorialspoint.com/ruby/ruby_operators.htm&quot;&gt;Ruby Operators&lt;/a&gt;&quot;. This also can be done using @mmdemirbas example (without parameter), only this approach is cleaner for these types of cases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de Ruby &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;usar&amp;aacute; el operando de igualdad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para esto (gracias @JimDeville). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay informaci&amp;oacute;n adicional disponible en &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.tutorialspoint.com/ruby/ruby_operators.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Operadores de Ruby&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto tambi&amp;eacute;n se puede hacer usando el ejemplo @mmdemirbas (sin par&amp;aacute;metro), solo este enfoque es m&amp;aacute;s limpio para este tipo de casos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c26f568fe25d08b04b3de4a7d2420b6e28af8e9" translate="yes" xml:space="preserve">
          <source>See &quot;&lt;a href=&quot;http://www.skorks.com/2009/08/how-a-ruby-case-statement-works-and-what-you-can-do-with-it/&quot;&gt;How A Ruby Case Statement Works And What You Can Do With It&lt;/a&gt;&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.skorks.com/2009/08/how-a-ruby-case-statement-works-and-what-you-can-do-with-it/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;mo funciona una declaraci&amp;oacute;n de caso Ruby y qu&amp;eacute; puede hacer con ella&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6ffb4c33d4b5ab24a4ea7607eefc35808437acf" translate="yes" xml:space="preserve">
          <source>See &quot;&lt;a href=&quot;https://www.tutorialspoint.com/ruby/ruby_if_else.htm&quot;&gt;Ruby - if...else, case, unless&lt;/a&gt;&quot; for more information.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.tutorialspoint.com/ruby/ruby_if_else.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ruby: si ... si no, caso, a menos que&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; para obtener m&amp;aacute;s informaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a04448cac01a81088a9f19f02d1a9abe4f5c478" translate="yes" xml:space="preserve">
          <source>Shorter version:</source>
          <target state="translated">Versión más corta:</target>
        </trans-unit>
        <trans-unit id="179aa4ddb4e4ec1e23c18febea92720cbee9d93b" translate="yes" xml:space="preserve">
          <source>Similar to a series of &lt;code&gt;if&lt;/code&gt; statements</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Similar a una serie de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraciones &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ca87cb6bdf97e28f458395ac80d6202810123fb" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;switch case&lt;/code&gt; always returns a single object, we can directly print its result:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dado que el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;switch case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; siempre devuelve un &amp;uacute;nico objeto, podemos imprimir directamente su resultado:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cddf17af804391395d14fc7edc9f15a12978d92" translate="yes" xml:space="preserve">
          <source>So, in a &lt;code&gt;case&lt;/code&gt; statement, a &lt;code&gt;,&lt;/code&gt; is the equivalent of &lt;code&gt;||&lt;/code&gt; in an &lt;code&gt;if&lt;/code&gt; statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, en una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;,&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es el equivalente de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;||&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd197d93f7ca921b3abe6d970512108edac4fae4" translate="yes" xml:space="preserve">
          <source>Specify a target next to the &lt;code&gt;case&lt;/code&gt; and each &lt;code&gt;when&lt;/code&gt; clause is compared to the target.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Especifique un objetivo al lado del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y cada &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se compare con el objetivo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3694b7299e866c10ed21579f16293e56c5b91fc9" translate="yes" xml:space="preserve">
          <source>That operator works as expected with literals, but not with classes:</source>
          <target state="translated">Ese operador trabaja como se espera con los literales,pero no con las clases:</target>
        </trans-unit>
        <trans-unit id="8d36c39ffa393b4f02ee66d1c78f49deec8d462c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;case&lt;/code&gt; statement operator is like &lt;code&gt;switch&lt;/code&gt; in the other languages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador de declaraci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es como un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;switch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en los otros idiomas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d16a53789fadd266c70fcf3d990154f9c17ccd7" translate="yes" xml:space="preserve">
          <source>The only relevant difference between the two examples above is that, when there is a match, &lt;code&gt;===&lt;/code&gt; returns true and &lt;code&gt;=~&lt;/code&gt; returns an integer, which is a truthy value in Ruby. We will get back to this soon.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &amp;uacute;nica diferencia relevante entre los dos ejemplos anteriores es que, cuando hay una coincidencia, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devuelve verdadero y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;=~&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devuelve un n&amp;uacute;mero entero, que es un valor verdadero en Ruby. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Volveremos a esto pronto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d54a09a2141719f156e1afebd3ed04494955c16" translate="yes" xml:space="preserve">
          <source>The same result can be achieved with other methods which are probably best suited for the job, such as &lt;code&gt;is_a?&lt;/code&gt; and &lt;code&gt;instance_of?&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede lograr el mismo resultado con otros m&amp;eacute;todos que probablemente sean los m&amp;aacute;s adecuados para el trabajo, como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;is_a?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instance_of?&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb141e28f9d334103f5286960abb946b6094fcbc" translate="yes" xml:space="preserve">
          <source>This allows for sophisticated &lt;code&gt;when&lt;/code&gt; clauses as seen above. Ranges, classes and all sorts of things can be tested for rather than just equality.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto permite &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usulas &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sofisticadas &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ve arriba. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los rangos, las clases y todo tipo de cosas se pueden probar en lugar de solo la igualdad.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e1acfac6469b3b84a25aa4afe0c0aa1883fa978" translate="yes" xml:space="preserve">
          <source>This is not strictly equivalent, because it's not possible to let &lt;code&gt;'a'&lt;/code&gt; execute a block of code before falling through to &lt;code&gt;'b'&lt;/code&gt; or &lt;code&gt;'c'&lt;/code&gt;, but for the most part I find it similar enough to be useful in the same way.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto no es estrictamente equivalente, porque no es posible dejar que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'a'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ejecute un bloque de c&amp;oacute;digo antes de pasar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'b'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'c'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero en su mayor parte lo encuentro lo suficientemente similar como para ser &amp;uacute;til de la misma manera.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d597e3ae57892a3d2df763828be057f22552cb27" translate="yes" xml:space="preserve">
          <source>This is the syntax of &lt;code&gt;case...when&lt;/code&gt; in Ruby:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta es la sintaxis del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case...when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en Ruby:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2debc6e292438dd2670b24055ac71e378458c78" translate="yes" xml:space="preserve">
          <source>This is the syntax of &lt;code&gt;switch...case&lt;/code&gt; in C:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta es la sintaxis de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;switch...case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en C:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="80b6d2c86afea07ff88ffec026374f14b961d20b" translate="yes" xml:space="preserve">
          <source>This means that if you want to do a &lt;code&gt;case ... when&lt;/code&gt; over an object's class, this will not work:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significa que si quieres hacer un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case ... when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; superes la clase de un objeto, esto no funcionar&amp;aacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="72ae44008d7d207b1a72c49a3d46a734a7a7f323" translate="yes" xml:space="preserve">
          <source>To add more examples to &lt;a href=&quot;https://stackoverflow.com/a/948157/471214&quot;&gt;Chuck's answer&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para agregar m&amp;aacute;s ejemplos a &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/948157/471214&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la respuesta de Chuck&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed193619659df88ea3f19e60bb02b78854e2314e" translate="yes" xml:space="preserve">
          <source>To do an &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; comparison, you will have to treat &lt;code&gt;case&lt;/code&gt; like an &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt; block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para hacer una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;comparaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , deber&amp;aacute; tratar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bloque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt; &lt;code&gt;else&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c9628bc3731c79dff9446644714b99e9ab4c449" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;switch&lt;/code&gt; statements in many other languages, Ruby&amp;rsquo;s &lt;code&gt;case&lt;/code&gt; does not have &lt;a href=&quot;https://en.wikipedia.org/wiki/Switch_statement#Fallthrough&quot;&gt;fall-through&lt;/a&gt;, so there is no need to end each &lt;code&gt;when&lt;/code&gt; with a &lt;code&gt;break&lt;/code&gt;. You can also specify multiple matches in a single &lt;code&gt;when&lt;/code&gt; clause like &lt;code&gt;when &quot;foo&quot;, &quot;bar&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A diferencia de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;switch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; declaraciones en muchos otros idiomas, Ruby &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no tiene &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Switch_statement#Fallthrough&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ca&amp;iacute;da a trav&amp;eacute;s de&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que no hay necesidad de poner fin a cada uno &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;break&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n puede especificar varios partidos en una sola &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la cl&amp;aacute;usula como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;when &quot;foo&quot;, &quot;bar&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="58c5b73ef58cd15a4a9fc54fdf3ec20fe5b9a1b5" translate="yes" xml:space="preserve">
          <source>We can write switch statement for multiple conditions.</source>
          <target state="translated">Podemos escribir una declaración de cambio para múltiples condiciones.</target>
        </trans-unit>
        <trans-unit id="c45a6cb9388b8da4ac00e4bca9713e17f2493bcc" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;===&lt;/code&gt; operator is called on a range object, it returns true if the value on the right falls within the range on the left.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se llama al operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en un objeto de rango, devuelve verdadero si el valor de la derecha cae dentro del rango de la izquierda.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d083f6974e5d35027a6bcf6800324f795043afaa" translate="yes" xml:space="preserve">
          <source>Will print &quot;It is not a string or number&quot;.</source>
          <target state="translated">Imprimirá &quot;No es una cadena o un número&quot;.</target>
        </trans-unit>
        <trans-unit id="d4a8f1ff14de1143edb63d6716d156f8e41f301e" translate="yes" xml:space="preserve">
          <source>You can also create your own comparators easily using a Struct with a custom &lt;code&gt;===&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n puede crear sus propios comparadores f&amp;aacute;cilmente usando un Struct con un personalizado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71a6f156d52f738902b449dd276ab3a973e9bcc6" translate="yes" xml:space="preserve">
          <source>You can do like this in more natural way,</source>
          <target state="translated">Puedes hacer esto de una manera más natural,</target>
        </trans-unit>
        <trans-unit id="1225b0d93c193fb24445c8ca8536761dab852c58" translate="yes" xml:space="preserve">
          <source>You can use regular expressions, such as finding a type of string:</source>
          <target state="translated">Se pueden utilizar expresiones regulares,como encontrar un tipo de cadena:</target>
        </trans-unit>
        <trans-unit id="7ca6c2df7bc0e79b2bd513a6c3d3ce4aed10f0ae" translate="yes" xml:space="preserve">
          <source>You can write &lt;code&gt;case&lt;/code&gt; expressions in two different ways in Ruby:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede escribir &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;expresiones de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;case&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de dos maneras diferentes en Ruby:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a051b9ac5909b8a5fc401d66f69fe9879094fe82" translate="yes" xml:space="preserve">
          <source>You might think that to perform an &lt;em&gt;AND&lt;/em&gt;, you can do something like this below, but it doesn't work:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede pensar que para realizar un &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AND&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede hacer algo como esto a continuaci&amp;oacute;n, pero no funciona:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2417249d66f5766bb3c06e347194ec6675b45458" translate="yes" xml:space="preserve">
          <source>[Error]: uninitialized constant &lt;strong&gt;RegExp&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[Error]: constante &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RegExp&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no inicializada&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24ccf89ff18462fd78f4a1b2daaed952395956d4" translate="yes" xml:space="preserve">
          <source>case...when</source>
          <target state="translated">case...when</target>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">or:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
