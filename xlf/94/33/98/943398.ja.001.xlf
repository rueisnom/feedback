<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/943398">
    <body>
      <group id="943398">
        <trans-unit id="d8fa257552e3c62ffa7a0aca5997d06a183ff904" translate="yes" xml:space="preserve">
          <source>...is a fine declaration.</source>
          <target state="translated">...は立派な宣言です。</target>
        </trans-unit>
        <trans-unit id="af05a07507edc5eed3ec08dfefe8355d35761eca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt; should have the value &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; にする&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e70ccec0eb03913364698d0d5fc1a815f4c9a72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disclaimer:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Disclaimer:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ec161ba197c373ff01439bdeb5f08101571098d" translate="yes" xml:space="preserve">
          <source>Alternatively, you may feel more comfortable with Visual Basic, which caters for this type of expectation in many areas.</source>
          <target state="translated">あるいは、多くの分野でこのような期待に応えてくれるVisual Basicの方が快適に感じるかもしれません。</target>
        </trans-unit>
        <trans-unit id="ef0372a09bd8661fdf85e9aae24599d83040a739" translate="yes" xml:space="preserve">
          <source>And in the code behind to get the enum value:</source>
          <target state="translated">そして、enumの値を取得するための後ろのコードで。</target>
        </trans-unit>
        <trans-unit id="fd41ce9a160057ada550347b9d463025a9399413" translate="yes" xml:space="preserve">
          <source>And the usage is slightly prettier:</source>
          <target state="translated">そして、使い方は少し可愛くなっています。</target>
        </trans-unit>
        <trans-unit id="391d20cd29e037a119c4c664e7163d11b66b0361" translate="yes" xml:space="preserve">
          <source>And then you can reference it as &lt;code&gt;Question.Role&lt;/code&gt;, and it always evaluates to an &lt;code&gt;int&lt;/code&gt; or whatever you define it as.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、あなたはそれを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Question.Role&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として参照することができ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それは常に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;またはあなたが定義したものに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;評価さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba71d36870bd5f7d54901b5133ebcab17467adb8" translate="yes" xml:space="preserve">
          <source>Declare it as a static class having public constants:</source>
          <target state="translated">公開定数を持つ静的クラスとして宣言します。</target>
        </trans-unit>
        <trans-unit id="f79ec4d5fc585625c548353827578a37c9486ecb" translate="yes" xml:space="preserve">
          <source>Enums will increment by 1, and you can set the start value. If you don't set the start value it will be assigned as 0 initially.</source>
          <target state="translated">Enumsは1ずつインクリメントされ、開始値を設定することができます。開始値を設定しない場合は、最初は0として代入されます。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="a9424662eec0b77c30278ed4c528da6559a5dd56" translate="yes" xml:space="preserve">
          <source>Following is the extension method</source>
          <target state="translated">以下は拡張方法です。</target>
        </trans-unit>
        <trans-unit id="a24a6b398c37155ffce124a081e48f49e2d4c7de" translate="yes" xml:space="preserve">
          <source>For an enum</source>
          <target state="translated">列挙型の場合</target>
        </trans-unit>
        <trans-unit id="7e13674c1c63ae27d4512f771d872990073abf98" translate="yes" xml:space="preserve">
          <source>Get int value from enum in C#</source>
          <target state="translated">C#でenumからint値を取得</target>
        </trans-unit>
        <trans-unit id="0a5b1271af9cfc5e358b36873e85ace21e44fe8b" translate="yes" xml:space="preserve">
          <source>However, as &lt;a href=&quot;https://stackoverflow.com/users/333082/cecilphillip&quot;&gt;cecilphillip&lt;/a&gt; points out, enums can have different underlying types.
If an enum is declared as a &lt;code&gt;uint&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, or &lt;code&gt;ulong&lt;/code&gt;, it should be cast to the type of the enum; e.g. for</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/333082/cecilphillip&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cecilphillipが&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指摘しているように、列挙型にはさまざまな種類があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;enumが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;uint&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;long&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ulong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として宣言されている場合は、enum &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の型にキャストする必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="080e76f59416cde7e1c9374e0b921ae566ab0cd2" translate="yes" xml:space="preserve">
          <source>I came up with this extension method that includes current language features. By using dynamic, I don't need to make this a generic method and specify the type which keeps the invocation simpler and consistent:</source>
          <target state="translated">現在の言語の特徴を取り入れた拡張メソッドを考えてみました。ダイナミックを使うことで、これを汎用的なメソッドにして型を指定する必要がなくなり、呼び出しをよりシンプルで一貫性のあるものにすることができます。</target>
        </trans-unit>
        <trans-unit id="f3f3dbad378ed9a0a307388f36cbeb5c5046784c" translate="yes" xml:space="preserve">
          <source>I have a class called &lt;code&gt;Questions&lt;/code&gt; (plural). In this class there is an enum called &lt;code&gt;Question&lt;/code&gt; (singular) which looks like this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Questions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（複数）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;というクラスがあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このクラスには、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のような&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Question&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（singular）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という列挙型があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40a98c579961f5635cd4c84ebda3abaf5c35d558" translate="yes" xml:space="preserve">
          <source>I have recently converted away from using enums in my code in favour of instead using classes with protected constructors and predefined static instances (thanks to Roelof - &lt;a href=&quot;https://stackoverflow.com/questions/10704863/c-sharp-ensure-valid-enum-values-futureproof-method&quot;&gt;C# Ensure Valid Enum Values - Futureproof Method&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は最近、保護されたコンストラクターと事前定義された静的インスタンスを持つクラスを使用する代わりに、コードで列挙型を使用しないように変換しました（Roelof- &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10704863/c-sharp-ensure-valid-enum-values-futureproof-method&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C＃有効な列挙値を保証-Futureproofメソッド&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef147fb8a56b527828e14f6dc712683004384560" translate="yes" xml:space="preserve">
          <source>If you want to get an integer for the enum value that is stored in a variable, for which the type would be &lt;code&gt;Question&lt;/code&gt;, to use for example in a method, you can simply do this I wrote in this example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数に格納されているenum値の整数を取得したい場合、タイプは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Question&lt;/code&gt; であり&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、たとえばメソッドで使用するには、この例で書いたように簡単に実行できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2c583238c0816f1196349e002c0d893c3c5fc62c" translate="yes" xml:space="preserve">
          <source>In Visual Basic, it should be:</source>
          <target state="translated">Visual Basicではそうなっているはずです。</target>
        </trans-unit>
        <trans-unit id="b50b88972be896431d57a8b399bcdf4477f7da82" translate="yes" xml:space="preserve">
          <source>In light of that, below's how I'd now approach this issue (including implicit conversion to/from &lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを踏まえて、以下は私がこの問題にどのように取り組むかです（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;への/からの暗黙の変換を含む&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a7e625c9e32dc7c913dec224ba14c86ebce000b" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Questions&lt;/code&gt; class I have a &lt;code&gt;get(int foo)&lt;/code&gt; function that returns a &lt;code&gt;Questions&lt;/code&gt; object for that &lt;code&gt;foo&lt;/code&gt;. Is there an easy way to get the integer value off the enum so I can do something like this &lt;code&gt;Questions.Get(Question.Role)&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Questions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス私は持っている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;get(int foo)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返す関数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Questions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのためのオブジェクトを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Questions.Get(Question.Role)&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようなことをできるように、列挙型から整数値を取得する簡単な方法はあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11919cf030852eccaba811452811fe296c188bdf" translate="yes" xml:space="preserve">
          <source>It doesn't work for enums based on long.</source>
          <target state="translated">longをベースにしたenumでは動作しません。</target>
        </trans-unit>
        <trans-unit id="80de3f1decc3132f88c5dc517d7dd76a820a02a8" translate="yes" xml:space="preserve">
          <source>It will result in &lt;code&gt;value == 2&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;value == 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6f3d6a61c021aef8657eba477e5028bc9e033a5" translate="yes" xml:space="preserve">
          <source>It will result in:</source>
          <target state="translated">結果的にそうなります。</target>
        </trans-unit>
        <trans-unit id="41854139daf4666c6044dc0f8d80f83039d032a4" translate="yes" xml:space="preserve">
          <source>It's easier than you think - an enum is already an int. It just needs to be reminded:</source>
          <target state="translated">思ったより簡単です。思い出すだけでいいのです。</target>
        </trans-unit>
        <trans-unit id="83bc7cf592d5a0ed15f350dfbf4ed5b600172838" translate="yes" xml:space="preserve">
          <source>It's less elegant to declare, but you don't need to cast it in code:</source>
          <target state="translated">宣言するのはエレガントではありませんが、コードにキャストする必要はありません。</target>
        </trans-unit>
        <trans-unit id="537594c56046371aa011e7d3498da4c0365a1705" translate="yes" xml:space="preserve">
          <source>Just cast the enum, e.g.</source>
          <target state="translated">enumをキャストするだけです。</target>
        </trans-unit>
        <trans-unit id="9490bc32ec8c60009545acdf73850d22ff496336" translate="yes" xml:space="preserve">
          <source>Maybe I missed it, but has anyone tried a simple generic extension method?</source>
          <target state="translated">見落としていたのかもしれませんが、誰か簡単なジェネリックな拡張方法を試した人はいませんか?</target>
        </trans-unit>
        <trans-unit id="99757e99b8f92130fdd8cfd6a6caa3723bd21490" translate="yes" xml:space="preserve">
          <source>My favourite hack with int or smaller enums:</source>
          <target state="translated">intや小さい列挙型を使ったお気に入りのハック。</target>
        </trans-unit>
        <trans-unit id="4172ab565511c7cde417577f156a272fa699e1e4" translate="yes" xml:space="preserve">
          <source>NB: Answer updated 2018-04-27 to make use of C# 6 features; i.e. declaration expressions and lambda expression body definitions.  See &lt;a href=&quot;https://stackoverflow.com/posts/15713789/revisions&quot;&gt;revision history&lt;/a&gt; for original code.  This has the benefit of making the definition a little less verbose; which had been one of the main complaints about this answer's approach.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意：C＃6の機能を利用するために更新された2018-04-27の回答。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、宣言式とラムダ式本体の定義です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元のコードの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/posts/15713789/revisions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更履歴&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これには、定義を少し冗長にする利点があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、この回答のアプローチに関する主な不満の1つでした。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="340644de1cd9bf028a77d851930f1f9d50124a70" translate="yes" xml:space="preserve">
          <source>Now the answer will be 1.</source>
          <target state="translated">これで答えは1になります。</target>
        </trans-unit>
        <trans-unit id="1547cf97ff7d632e4cf2cd4f90318f856f6e1108" translate="yes" xml:space="preserve">
          <source>On a related note, if you want to get the &lt;code&gt;int&lt;/code&gt; value from &lt;code&gt;System.Enum&lt;/code&gt;, then given &lt;code&gt;e&lt;/code&gt; here:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関連するメモとして、&lt;/font&gt; &lt;code&gt;System.Enum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を取得する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここに&lt;/font&gt; &lt;code&gt;e&lt;/code&gt; を指定し&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d87b102796b28bb659b829c4db5de2a0ed69f88f" translate="yes" xml:space="preserve">
          <source>One alternative is to use a class declaration instead:</source>
          <target state="translated">代わりにクラス宣言を使うのも一つの方法です。</target>
        </trans-unit>
        <trans-unit id="2e933c8dad44d4525dc62923485253c0b4765c79" translate="yes" xml:space="preserve">
          <source>One more way to do it:</source>
          <target state="translated">もう一つの方法があります。</target>
        </trans-unit>
        <trans-unit id="ba5a951a7948abfaf8e9683633580ba7534158cb" translate="yes" xml:space="preserve">
          <source>Otherwise, the type is still &lt;code&gt;QuestionType&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それ以外の場合、タイプは引き続き&lt;/font&gt;&lt;/font&gt; &lt;code&gt;QuestionType&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8acb51ad1bd17d811eb7156451dc26204bdf6862" translate="yes" xml:space="preserve">
          <source>Since Enums can be any integral type (&lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, etc.), a more robust way to get the underlying integral value of the enum would be to make use of the &lt;code&gt;GetTypeCode&lt;/code&gt; method in conjunction with the &lt;code&gt;Convert&lt;/code&gt; class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Enumは任意の整数型（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;byte&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;short&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など）にすることができるため、列挙型の基になる整数値を取得するより堅牢な方法は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;GetTypeCode&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Convert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と組み合わせて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用することです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74d418a655798e14b3cd26b92a5a7437540127e3" translate="yes" xml:space="preserve">
          <source>Since enums can be declared with multiple primitive types, a generic extension method to cast any enum type can be useful.</source>
          <target state="translated">列挙型は複数のプリミティブ型で宣言できるので、任意の列挙型をキャストする汎用的な拡張メソッドが便利です。</target>
        </trans-unit>
        <trans-unit id="af2bd675a35e236937e4ac0076c3faa74cdbe92b" translate="yes" xml:space="preserve">
          <source>The above will work for the vast majority of enums you see in the wild, as the default underlying type for an enum is &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;enumのデフォルトの基本型は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; である&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、上記は実際に見られるenumの大部分に対して機能します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a4b614d37805df3e566cbadb10fa3db3009ee3d" translate="yes" xml:space="preserve">
          <source>The advantage of this approach is you get everything you would have from the enum, but your code's now much more flexible, so should you need to perform different actions based on the value of &lt;code&gt;Question&lt;/code&gt;, you can put logic into &lt;code&gt;Question&lt;/code&gt; itself (i.e. in the preferred OO fashion) as opposed to putting lots of case statements throughout your code to tackle each scenario.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このアプローチの利点は、列挙型からすべてのものを取得できることですが、コードははるかに柔軟になりました。そのため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Question&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値に基づいてさまざまなアクションを実行する必要がある場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ロジックを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Question&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自体（つまり、各シナリオに取り組むためにコード全体に多くのケースステートメントを配置するのではなく、OO方式を推奨します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="024122d5a03065dff1a9dbd4478896d8de5ed812" translate="yes" xml:space="preserve">
          <source>The easiest solution I can think of is overloading the &lt;code&gt;Get(int)&lt;/code&gt; method like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が考えることができる最も簡単な解決策は、次のように&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Get(int)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オーバーロードすること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1b5b92df5ecc161d2321a212dd748b9d106234a" translate="yes" xml:space="preserve">
          <source>The example I would like to suggest &quot;to get an 'int' value from an enum&quot;, is</source>
          <target state="translated">私が提案したいのは、「enumから'int'の値を取得する」という例です。</target>
        </trans-unit>
        <trans-unit id="ef5cc8e0d7e3232fae9d6bb0e4369dd8fd09850b" translate="yes" xml:space="preserve">
          <source>The last two are plain ugly. I prefer the first one.</source>
          <target state="translated">最後の2つは普通にブサイクだ 私は最初の方が好きだ</target>
        </trans-unit>
        <trans-unit id="15aa34a09ac020134ae71954ea5c5179031b8ec6" translate="yes" xml:space="preserve">
          <source>This is only true if the enum fits inside an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、列挙型が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;収まる場合にのみ当てはまります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6ac6c7cfaca5806d99b2e02074b4452520cc1c3" translate="yes" xml:space="preserve">
          <source>This level of strictness is the C# way.</source>
          <target state="translated">この程度の厳しさがC#流です。</target>
        </trans-unit>
        <trans-unit id="2a9a0cd244a642aa9ebffcd05a3d058403119283" translate="yes" xml:space="preserve">
          <source>This should work regardless of the underlying integral type.</source>
          <target state="translated">これは、基礎となる積分型に関係なく動作するはずです。</target>
        </trans-unit>
        <trans-unit id="bb1cac1be7e83433798f61449650dc4643187232" translate="yes" xml:space="preserve">
          <source>This simplifies getting the int value of the current enum value:</source>
          <target state="translated">これにより、現在のenum値のint値を取得するのが簡単になります。</target>
        </trans-unit>
        <trans-unit id="ae930c6b42031be30c2457500caf4d00789854a4" translate="yes" xml:space="preserve">
          <source>This will change the window title to 4, because the variable &lt;code&gt;Geselecteerd&lt;/code&gt; is &lt;code&gt;Talen.Nederlands&lt;/code&gt;. If I change it to &lt;code&gt;Talen.Portugees&lt;/code&gt; and call the method again, the text will change to 3.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Geselecteerd&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Talen.Nederlands&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であるため、これによりウィンドウのタイトルが4に変更されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Talen.Portugees&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に変更して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを再度呼び出すと、テキストは3に変わります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="50e62046100ad425f1a5df7c32fea23ba56243e8" translate="yes" xml:space="preserve">
          <source>This works great for me. You can avoid the type cast in your API this way but ultimately it results in a change type operation. This is a good case for programming &lt;a href=&quot;https://en.wikipedia.org/wiki/.NET_Compiler_Platform&quot;&gt;Roslyn&lt;/a&gt; to have the compiler make a GetValue&amp;lt;T&amp;gt; method for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは私にとってはうまくいきます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この方法でAPIの型キャストを回避できますが、最終的には型の変更操作が発生します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コンパイラーにGetValue &amp;lt;T&amp;gt;メソッドを作成させるよう&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/.NET_Compiler_Platform&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Roslyn&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラミングする場合に適し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ea9d5579683f9eb5e3805da85ab439eba39ad94" translate="yes" xml:space="preserve">
          <source>This,</source>
          <target state="translated">This,</target>
        </trans-unit>
        <trans-unit id="365230eb20ef5e1fcedc3d047fcf121498ed1e38" translate="yes" xml:space="preserve">
          <source>To ensure an enum value exists and then parse it, you can also do the following.</source>
          <target state="translated">列挙値が存在することを確認してから解析するには、以下のようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="b3f55fe11d9a7bca27786c420d3c93bbec03f3b5" translate="yes" xml:space="preserve">
          <source>Try this one instead of convert enum to int:</source>
          <target state="translated">enumをintに変換するのではなく、こちらを試してみてください。</target>
        </trans-unit>
        <trans-unit id="d6ef77f9dc82b6e55208ad20ef3c241751e8f18b" translate="yes" xml:space="preserve">
          <source>Use an extension method instead:</source>
          <target state="translated">代わりに拡張メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="bc0e34154d952ed72b15f5d9618112640d548177" translate="yes" xml:space="preserve">
          <source>Use:</source>
          <target state="translated">Use:</target>
        </trans-unit>
        <trans-unit id="054bd122ebb52bbb7c2994079bd0d89602d68e23" translate="yes" xml:space="preserve">
          <source>Will result in &lt;code&gt;value == 2&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;value == 2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6d0f0a0cd980fcd56bf004630f193373143ed19" translate="yes" xml:space="preserve">
          <source>You can do this by implementing an &lt;a href=&quot;https://en.wikipedia.org/wiki/Extension_method&quot;&gt;extension method&lt;/a&gt; to your defined enum type:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを行う&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;には、定義した列挙型に&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extension_method&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張メソッド&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28ce5baaf2a7e364a9e6393430ef2a639312b251" translate="yes" xml:space="preserve">
          <source>You can use:</source>
          <target state="translated">使えます。</target>
        </trans-unit>
        <trans-unit id="f2d2f240461abbf7d4ae4939ac2dadf8702cd3e4" translate="yes" xml:space="preserve">
          <source>You do have to cast the result to int like so:</source>
          <target state="translated">このように結果をintにキャストする必要があります。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="e71003c6b7dd4093ce139ac0c51a6ba38d54a439" translate="yes" xml:space="preserve">
          <source>outputs</source>
          <target state="translated">outputs</target>
        </trans-unit>
        <trans-unit id="1601054b08fbd6ecf3eeb766b64a2e0ea16c01c8" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;[modifiers]&lt;/code&gt; can generally be same as for the &lt;code&gt;Get(int)&lt;/code&gt; method. If you can't edit the &lt;code&gt;Questions&lt;/code&gt; class or for some reason don't want to, you can overload the method by writing an extension:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[modifiers]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は一般に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Get(int)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同じ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Questions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集できない場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または何らかの理由で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;編集し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たくない場合は、拡張機能を記述してメソッドをオーバーロードできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebd9deca7a1dfee62f7034faa7be6bb751eaf571" translate="yes" xml:space="preserve">
          <source>you should use</source>
          <target state="translated">使うべき</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
