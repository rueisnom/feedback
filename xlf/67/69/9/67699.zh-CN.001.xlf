<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/67699">
    <body>
      <group id="67699">
        <trans-unit id="301f531ca75450cb2f7d1c557ac897795fde2749" translate="yes" xml:space="preserve">
          <source>$ git checkout -b experimental origin/experimental</source>
          <target state="translated">$ git checkout -b experimental originexperimental</target>
        </trans-unit>
        <trans-unit id="d9b845f965377efd496762792467b7956a67a199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git branch --all&lt;/code&gt; or &lt;code&gt;git branch -a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git branch --all&lt;/code&gt; 或 &lt;code&gt;git branch -a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="808f46ea8b6d7e40866821ee5a7a7591793b75de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git branch -a&lt;/code&gt; This will show you all the remote branches.</source>
          <target state="translated">&lt;code&gt;git branch -a&lt;/code&gt; 这将向您显示所有远程分支。</target>
        </trans-unit>
        <trans-unit id="4fe1973e7baebc3ae59caf3db9d6713e6b005cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git branch -a&lt;/code&gt; shows all branches, &lt;em&gt;including remote branches&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;git branch -a&lt;/code&gt; 显示所有分支， &lt;em&gt;包括远程分支&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca562b4f001393db3334c499f5188be181ef8d4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clone --mirror&lt;/code&gt; on the original repo works well for this.</source>
          <target state="translated">原始 &lt;code&gt;git clone --mirror&lt;/code&gt; 上的git clone --mirror可以很好地解决这个问题。</target>
        </trans-unit>
        <trans-unit id="ca3e908b3d20e92f2a7f0cedb0c75a20647fdc54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clone&lt;/code&gt; downloads all remote branches but still considers them &quot;remote&quot;, even though the files are located in your new repository. There's one exception to this, which is that the cloning process creates a local branch called &quot;master&quot; from the remote branch called &quot;master&quot;. By default, &lt;code&gt;git branch&lt;/code&gt; only shows local branches, which is why you only see &quot;master&quot;.</source>
          <target state="translated">&lt;code&gt;git clone&lt;/code&gt; 下载所有远程分支，但即使文件位于您的新存储库中，也仍然将它们视为&amp;ldquo;远程&amp;rdquo;。 唯一的例外是，克隆过程会从称为&amp;ldquo; master&amp;rdquo;的远程分支创建一个名为&amp;ldquo; master&amp;rdquo;的本地分支。 默认情况下， &lt;code&gt;git branch&lt;/code&gt; 仅显示本地分支，这就是为什么您只看到&amp;ldquo; master&amp;rdquo;的原因。</target>
        </trans-unit>
        <trans-unit id="42547dc1981659d5cdfe3f986d8b011690b7ca9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch &amp;lt;origin-name&amp;gt; &amp;lt;branch-name&amp;gt;&lt;/code&gt; brings the branch down for you. While this doesn't pull all branches at once, you can singularly execute this per-branch.</source>
          <target state="translated">&lt;code&gt;git fetch &amp;lt;origin-name&amp;gt; &amp;lt;branch-name&amp;gt;&lt;/code&gt; 为您降低了分支。 尽管这不会一次拉出所有分支，但您可以按分支单独执行此操作。</target>
        </trans-unit>
        <trans-unit id="03a6f011d01355055fa890cf01f210adbfa6711c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch origin&lt;/code&gt; This will bring all the remote branches to your local.</source>
          <target state="translated">&lt;code&gt;git fetch origin&lt;/code&gt; 这会将所有远程分支带到您的本地。</target>
        </trans-unit>
        <trans-unit id="3bb4c311efdde40b7d503b32e15584c5ca07cc2a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Based on &lt;a href=&quot;https://stackoverflow.com/a/6300386/1998046&quot;&gt;answer&lt;/a&gt; of &lt;a href=&quot;https://stackoverflow.com/users/6309/vonc&quot;&gt;VonC&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;基于&lt;a href=&quot;https://stackoverflow.com/users/6309/vonc&quot;&gt;VonC的&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/a/6300386/1998046&quot;&gt;答案&lt;/a&gt; 。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a4841f998170893a1dfedec0a375be9bc995367" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Credits for one-liner go to user cfi&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;一线信用归功于用户CFI&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d371a375635dead23e71c6018c06fc0b2d6bcf0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method 1:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;方法1：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39ba8b2d14f80c96148df898ae74111bfba336f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method 2:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;方法2：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b85f5fd3a37f8f6b212f361fd9f2d33e32cff56d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OK,&lt;/strong&gt; when you clone your repo, you have all branches there...</source>
          <target state="translated">&lt;strong&gt;好，&lt;/strong&gt;克隆仓库时，所有分支都在那里...</target>
        </trans-unit>
        <trans-unit id="f9b7fc59ec32619b7362f2d4e28752a85f1aa324" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One liner&lt;/strong&gt;: &lt;code&gt;git branch -a | grep -v HEAD | perl -ne 'chomp($_); s|^\*?\s*||; if (m|(.+)/(.+)| &amp;amp;&amp;amp; not $d{$2}) {print qq(git branch --track $2 $1/$2\n)} else {$d{$_}=1}' | csh -xfs&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;一线&lt;/strong&gt; ： &lt;code&gt;git branch -a | grep -v HEAD | perl -ne 'chomp($_); s|^\*?\s*||; if (m|(.+)/(.+)| &amp;amp;&amp;amp; not $d{$2}) {print qq(git branch --track $2 $1/$2\n)} else {$d{$_}=1}' | csh -xfs&lt;/code&gt; grep -v头| perl -ne'chomp（$ _）; s | ^ \ *？\ s * ||; if（m |（。+）/（。+）| &amp;amp;&amp;amp;不是$ d {$ 2}）{打印qq（git branch --track $ 2 $ 1 / $ 2 \ n）}否则{$ d {$ _} = 1} '| csh -xfs</target>
        </trans-unit>
        <trans-unit id="03fd26efb0ba8ef0fdfafb13fc8b44b41f652951" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;check out&lt;/strong&gt; branch from the remote</source>
          <target state="translated">从远程&lt;strong&gt;签出&lt;/strong&gt;分支</target>
        </trans-unit>
        <trans-unit id="4d6f5f2b0449257fbe75cf43896bdff0962fa55a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;delete&lt;/strong&gt; local branch (so that we can check out force-updated branches)</source>
          <target state="translated">&lt;strong&gt;删除&lt;/strong&gt;本地分支（以便我们可以检出强制更新的分支）</target>
        </trans-unit>
        <trans-unit id="4c47ed8880cad9add68ee96040fa21eec8f95d77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;loop through all branches&lt;/strong&gt; of the remote except master and HEAD</source>
          <target state="translated">&lt;strong&gt;遍历&lt;/strong&gt;遥控器的&lt;strong&gt;所有分支&lt;/strong&gt; （主服务器和HEAD除外）</target>
        </trans-unit>
        <trans-unit id="4c223e83979e975fbe477cefcf74a83291e1a259" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;select remote&lt;/strong&gt; to checkout (change it to whatever remote you have)</source>
          <target state="translated">&lt;strong&gt;选择&lt;/strong&gt;要签出的&lt;strong&gt;遥控器&lt;/strong&gt; （将其更改为您拥有的任何遥控器）</target>
        </trans-unit>
        <trans-unit id="678c308bcd70afd312c9a957d86adebf91647e2e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Reference: &lt;a href=&quot;https://git.wiki.kernel.org/index.php/Git_FAQ#How_do_I_clone_a_repository_with_all_remotely_tracked_branches.3F&quot;&gt;Git FAQ: How do I clone a repository with all remotely tracked branches? &lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;参考： &lt;a href=&quot;https://git.wiki.kernel.org/index.php/Git_FAQ#How_do_I_clone_a_repository_with_all_remotely_tracked_branches.3F&quot;&gt;Git常见问题解答：如何克隆具有所有远程跟踪分支的存储库？&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="da421b8657c21a03119727b7aa7e0479c605bee1" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;The &lt;code&gt;--depth=10000&lt;/code&gt; parameter may help if you've shallowed repository.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;如果将存储库变浅，则 &lt;code&gt;--depth=10000&lt;/code&gt; 参数可能会有所帮助。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1ce8674470a57f633143963be8ef90127307f848" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;git clone&lt;/code&gt; is supposed to copy the entire repository.  Try cloning it, and then run &lt;code&gt;git branch -a&lt;/code&gt;.  It should list all the branches.  If then you want to switch to branch &quot;foo&quot; instead of &quot;master&quot;, use &lt;code&gt;git checkout foo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git clone&lt;/code&gt; 应该复制整个存储库。 尝试克隆它，然后运行 &lt;code&gt;git branch -a&lt;/code&gt; 。 它应该列出所有分支。 如果那么您想切换到分支&amp;ldquo; foo&amp;rdquo;而不是&amp;ldquo; master&amp;rdquo;，请使用 &lt;code&gt;git checkout foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c10ce513d40dc2073d4c0536211efc2089159cf7" translate="yes" xml:space="preserve">
          <source>Also created the image below for you to simplify what I said:</source>
          <target state="translated">还为你创造了下面的图片,简化了我说的话。</target>
        </trans-unit>
        <trans-unit id="ffceac6103511230790137fcafeafda4a719a87f" translate="yes" xml:space="preserve">
          <source>Alternatively we can specify the remote branch instead.  This is based on &lt;a href=&quot;https://stackoverflow.com/users/144330/murphytalk&quot;&gt;murphytalk&lt;/a&gt;'s &lt;a href=&quot;https://stackoverflow.com/a/1186645/445221&quot;&gt;answer&lt;/a&gt;.</source>
          <target state="translated">另外，我们可以指定远程分支。 这是基于&lt;a href=&quot;https://stackoverflow.com/users/144330/murphytalk&quot;&gt;murphytalk&lt;/a&gt;的&lt;a href=&quot;https://stackoverflow.com/a/1186645/445221&quot;&gt;答案&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f9df9d68e055253c086cab88c8be5d115c5a626" translate="yes" xml:space="preserve">
          <source>And you can switch to any branch which you already have.</source>
          <target state="translated">而且你可以切换到你已经拥有的任何分支。</target>
        </trans-unit>
        <trans-unit id="593ef78e51c436cd66a563e6883dc4e210f64ca0" translate="yes" xml:space="preserve">
          <source>As of early 2017, the answer &lt;a href=&quot;https://stackoverflow.com/questions/67699/how-to-clone-all-remote-branches-in-git#comment2170694_72156&quot;&gt;in this comment&lt;/a&gt; works:</source>
          <target state="translated">截至2017年初， &lt;a href=&quot;https://stackoverflow.com/questions/67699/how-to-clone-all-remote-branches-in-git#comment2170694_72156&quot;&gt;此评论中&lt;/a&gt;的答案有效：</target>
        </trans-unit>
        <trans-unit id="12bebcaa76fddb944d1aca23f1b83d2c24722670" translate="yes" xml:space="preserve">
          <source>As usual: test in your setup before copying rm -rf universe as we know it</source>
          <target state="translated">像往常一样:在复制rm -rf宇宙之前,在你的设置中进行测试。</target>
        </trans-unit>
        <trans-unit id="b2aaac0b957edd419ddc600021d5573eec4db5b9" translate="yes" xml:space="preserve">
          <source>At this point you have a complete copy of the remote repo with all of it's branches (verify with &lt;code&gt;git branch&lt;/code&gt;).  You can use &lt;code&gt;--mirror&lt;/code&gt; instead of &lt;code&gt;--bare&lt;/code&gt; if your remote repo has remotes of its own.</source>
          <target state="translated">至此，您已经获得了带有所有分支的远程仓库的完整副本（使用 &lt;code&gt;git branch&lt;/code&gt; 验证）。 如果您的远程 &lt;code&gt;--bare&lt;/code&gt; 有自己的遥控器，则可以使用 &lt;code&gt;--mirror&lt;/code&gt; 而不是--bare 。</target>
        </trans-unit>
        <trans-unit id="99fc7b688162413079b41c3407b8f0c9ca8deff2" translate="yes" xml:space="preserve">
          <source>At this point, things are getting pretty crazy, so run &lt;code&gt;gitk&lt;/code&gt; to see what's going on:</source>
          <target state="translated">此时，事情变得非常疯狂，因此运行 &lt;code&gt;gitk&lt;/code&gt; 看看发生了什么：</target>
        </trans-unit>
        <trans-unit id="8c7875ace5025aaed734115d52f10ab9596ff44a" translate="yes" xml:space="preserve">
          <source>Better late than never, but here is the best way to do this:</source>
          <target state="translated">迟来的总比没来的好,但这里有一个最好的办法。</target>
        </trans-unit>
        <trans-unit id="e7fd99d2b1b9780441b6d0342458b5d033d2802b" translate="yes" xml:space="preserve">
          <source>Both commands can be aliased.</source>
          <target state="translated">这两条命令都可以别名。</target>
        </trans-unit>
        <trans-unit id="53159098c758a6cdb6866692e1b8e8c61cbdc83e" translate="yes" xml:space="preserve">
          <source>But beware, if one of remote branches is named as e.g. admin_master  it won't get downloaded!</source>
          <target state="translated">但要注意,如果其中一个远程分支被命名为例如admin_master,它将不会被下载!</target>
        </trans-unit>
        <trans-unit id="79fbe1fe23d00e363fc9210e6a012f7c01d8cdcd" translate="yes" xml:space="preserve">
          <source>But how about if the branch created by someone else after you clone?</source>
          <target state="translated">但是,如果你克隆后别人创建的分支,那怎么办?</target>
        </trans-unit>
        <trans-unit id="ea949a51fa8e944ca95850f1619f2d002c43c4ce" translate="yes" xml:space="preserve">
          <source>But if you want to work on that branch, you'll need to create a local tracking branch which is done automatically by:</source>
          <target state="translated">但如果你想在这个分支上工作,你需要创建一个本地跟踪分支,这个分支是通过自动完成的。</target>
        </trans-unit>
        <trans-unit id="c2591533a4fdf6f2da04b4b946423631176f7190" translate="yes" xml:space="preserve">
          <source>But there are other branches hiding in your repository! You can see these using the &lt;code&gt;-a&lt;/code&gt; flag:</source>
          <target state="translated">但是您的存储库中还隐藏着其他分支！ 您可以使用 &lt;code&gt;-a&lt;/code&gt; 标志查看它们：</target>
        </trans-unit>
        <trans-unit id="9ea87432285cb01210d2713146ec738d85831a62" translate="yes" xml:space="preserve">
          <source>Check if &lt;code&gt;origin&lt;/code&gt; points to the right URL via: &lt;code&gt;git remote show origin&lt;/code&gt; (see this &lt;a href=&quot;https://stackoverflow.com/q/5243231/55075&quot;&gt;post&lt;/a&gt;).</source>
          <target state="translated">通过以下命令检查 &lt;code&gt;origin&lt;/code&gt; 是否指向正确的URL： &lt;code&gt;git remote show origin&lt;/code&gt; （请参阅此&lt;a href=&quot;https://stackoverflow.com/q/5243231/55075&quot;&gt;帖子&lt;/a&gt; ）。</target>
        </trans-unit>
        <trans-unit id="80816ffb31404735fc035cde7ba8c26445d825df" translate="yes" xml:space="preserve">
          <source>Cloning from a local repo will not work with git clone &amp;amp; git fetch: a lot of branches/tags will remain unfetched.</source>
          <target state="translated">从本地存储库克隆不适用于git clone和git fetch：许多分支/标签将保持未提取状态。</target>
        </trans-unit>
        <trans-unit id="930286fefe00a0578e0de03873d6ee913f35a292" translate="yes" xml:space="preserve">
          <source>Don't worry that after you &quot;git clone&quot;, you don't need to connect with the remote repo, &quot;git branch -a&quot; and &quot;git checkout &quot; can be run successfully when you close your wifi. So it is proved that when you do &quot;git clone&quot;, it already has copied all branches from the remote repo. After that, you don't need the remote repo, your local already has all branches' codes.</source>
          <target state="translated">不用担心你 &quot;git clone &quot;之后,你不需要再连接远程版本,&quot;git branch -a &quot;和 &quot;git checkout &quot;都可以在你关闭wifi的时候成功运行。所以事实证明,当你做 &quot;git clone &quot;的时候,它已经复制了远程版本的所有分支。在这之后,你就不需要远程版本了,你的本地已经有了所有分支的代码。</target>
        </trans-unit>
        <trans-unit id="3fe3c5578d2022b9e801ad93a15fe2d4ea59e81b" translate="yes" xml:space="preserve">
          <source>Double check your remotes (&lt;code&gt;git remote -v&lt;/code&gt;), e.g.</source>
          <target state="translated">仔细检查您的遥控器（ &lt;code&gt;git remote -v&lt;/code&gt; ），例如</target>
        </trans-unit>
        <trans-unit id="ef8ae25204b888689faeec56a121a1bfeb35cd8a" translate="yes" xml:space="preserve">
          <source>Each time it does an operation on your behalf, it prints it in red at the console. Over time, they finally stick into your brain :-)</source>
          <target state="translated">每当它为你做一个操作时,它就会在控制台以红色打印出来。随着时间的推移,它们最终会粘在你的大脑里 :-)</target>
        </trans-unit>
        <trans-unit id="299f3e5211d43bbd5573ce814ba530f5c1d6a4c5" translate="yes" xml:space="preserve">
          <source>Even though you only see master branch, you can use &quot;git branch -a&quot; to see all branches.</source>
          <target state="translated">即使你只看到主分支,你也可以使用 &quot;git branch -a &quot;来查看所有的分支。</target>
        </trans-unit>
        <trans-unit id="26c3acfafa7b99822d5ac1cb02f37c83f54d3066" translate="yes" xml:space="preserve">
          <source>Existing branches will simply be checked out, or declared as already in it, but filters can be added to avoid the conflicts.</source>
          <target state="translated">现有的分支将简单地被选中,或者声明为已经在其中,但可以添加过滤器来避免冲突。</target>
        </trans-unit>
        <trans-unit id="b5795a17b25798899d631807c8f04285e59bb24d" translate="yes" xml:space="preserve">
          <source>Finally, all commands have aliases, to make memorization easier.</source>
          <target state="translated">最后,为了方便记忆,所有的命令都有别名。</target>
        </trans-unit>
        <trans-unit id="bb6c4941136ed90befe7375c3458e03e31e29e8b" translate="yes" xml:space="preserve">
          <source>First step</source>
          <target state="translated">第一步</target>
        </trans-unit>
        <trans-unit id="1056dc406c6a2e988deef61bb7fb07283a39b216" translate="yes" xml:space="preserve">
          <source>First, clone a remote &lt;a href=&quot;http://en.wikipedia.org/wiki/Git_%28software%29&quot;&gt;Git&lt;/a&gt; repository and &lt;a href=&quot;http://en.wikipedia.org/wiki/Cd_%28command%29&quot;&gt;cd&lt;/a&gt; into it:</source>
          <target state="translated">首先，克隆一个远程&lt;a href=&quot;http://en.wikipedia.org/wiki/Git_%28software%29&quot;&gt;Git&lt;/a&gt;存储库并&lt;a href=&quot;http://en.wikipedia.org/wiki/Cd_%28command%29&quot;&gt;cd&lt;/a&gt;到其中：</target>
        </trans-unit>
        <trans-unit id="776056333d0cb52b81767959d68e4640de0d93e3" translate="yes" xml:space="preserve">
          <source>For copy-paste into command line:</source>
          <target state="translated">用于复制粘贴到命令行。</target>
        </trans-unit>
        <trans-unit id="f05a911df776c9209ed3927e38cdb6d3801e48f0" translate="yes" xml:space="preserve">
          <source>For more readibility:</source>
          <target state="translated">为了提高可读性。</target>
        </trans-unit>
        <trans-unit id="21592b13daebfb6dea667bb7386f3f2965c0e42f" translate="yes" xml:space="preserve">
          <source>Git usually (when not specified) fetches all branches and/or tags (refs, see: &lt;code&gt;git ls-refs&lt;/code&gt;) from one or more other repositories along with the objects necessary to complete their histories. In other words it fetches the objects which are reachable by the objects that are already downloaded. See: &lt;a href=&quot;https://stackoverflow.com/a/36243207/55075&quot;&gt;What does &lt;code&gt;git fetch&lt;/code&gt; really do?&lt;/a&gt;</source>
          <target state="translated">Git通常（未指定时）从一个或多个其他存储库中获取所有分支和/或标签（参考，请参阅： &lt;code&gt;git ls-refs&lt;/code&gt; ）以及完成其历史记录所需的对象。 换句话说，它获取已下载对象可以访问的对象。 请参阅： &lt;a href=&quot;https://stackoverflow.com/a/36243207/55075&quot;&gt; &lt;code&gt;git fetch&lt;/code&gt; 实际做什么？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b76ded2f402752f0ab4fc335b07322fbd203f05e" translate="yes" xml:space="preserve">
          <source>Git will automatically do the right thing:</source>
          <target state="translated">Git会自动做正确的事情。</target>
        </trans-unit>
        <trans-unit id="de23286b6837b41ad300e659bca5ffebe6385833" translate="yes" xml:space="preserve">
          <source>Git will check whether a branch with the same name exists in exactly one remote, and if it does, it tracks it the same way as if you had explicitly specified that it's a remote branch. From the git-checkout man page of Git 1.8.2.1:</source>
          <target state="translated">Git 会检查同一个名字的分支是否存在于同一个远程,如果存在,就会像你明确指定是远程分支一样跟踪它。来自 Git 1.8.2.1 的 git-checkout man page。</target>
        </trans-unit>
        <trans-unit id="31573bf9b35d67abc5c3ace961e3e3495517b5bd" translate="yes" xml:space="preserve">
          <source>Grab everything that inside the current folder and create all the branches on the local machine, therefore making this a normal repo.</source>
          <target state="translated">抓取当前文件夹内的一切,并在本地机上创建所有的分支,从而使之成为一个正常的repo。</target>
        </trans-unit>
        <trans-unit id="e08642655ee9705f1e63e0d7d13c6436ae6dabb2" translate="yes" xml:space="preserve">
          <source>Here is another short one-liner command which
creates local branches for all remote branches:</source>
          <target state="translated">下面是另一个简短的单行命令,它为所有远程分支创建本地分支。</target>
        </trans-unit>
        <trans-unit id="b34ecef9b36ef720971249f23ad287ed2c275185" translate="yes" xml:space="preserve">
          <source>Here's an answer that uses awk.  This method should suffice if used on a new repo.</source>
          <target state="translated">这里有一个使用awk的答案。如果在新的repo上使用这个方法应该就足够了。</target>
        </trans-unit>
        <trans-unit id="20542ef656654b246f76f23e268c9c3d9a9ad2c5" translate="yes" xml:space="preserve">
          <source>Here's the help when you run grb help:</source>
          <target state="translated">当你运行 grb 帮助时,这里是帮助。</target>
        </trans-unit>
        <trans-unit id="a9b277456b96b95cf266b621fee07552a5bb7870" translate="yes" xml:space="preserve">
          <source>How to clone all remote branches in Git</source>
          <target state="translated">如何在Git中克隆所有远程分支</target>
        </trans-unit>
        <trans-unit id="b5ab89c3f6e60702c0e43530b82f887c582f2ca4" translate="yes" xml:space="preserve">
          <source>How to get local branches</source>
          <target state="translated">如何获得当地的分支机构</target>
        </trans-unit>
        <trans-unit id="ff185a323114a5fcd49149360a6d7c9a7b503ef0" translate="yes" xml:space="preserve">
          <source>However, when you want to clone a repo with a lot of branches all the ways illustrated are above are lengthy and tedious in respect to a much cleaner and quicker way that I am going to show, though it's a bit complicated. You need three steps to accomplish this:</source>
          <target state="translated">然而,当你想克隆一个有很多分支的repo时,上面所展示的所有方法都是冗长而繁琐的,而我将要展示的是一个更干净、更快捷的方法,虽然有点复杂。你需要三个步骤来完成。</target>
        </trans-unit>
        <trans-unit id="4372151be6cd5728bd559cabd9d12e7b23ef8f97" translate="yes" xml:space="preserve">
          <source>I have a &lt;code&gt;master&lt;/code&gt; and a &lt;code&gt;development&lt;/code&gt; branch, both pushed to &lt;a href=&quot;http://en.wikipedia.org/wiki/GitHub&quot;&gt;GitHub&lt;/a&gt;. I've &lt;code&gt;clone&lt;/code&gt;d, &lt;code&gt;pull&lt;/code&gt;ed, and &lt;code&gt;fetch&lt;/code&gt;ed, but I remain unable to get anything other than the &lt;code&gt;master&lt;/code&gt; branch back.</source>
          <target state="translated">我有一个 &lt;code&gt;master&lt;/code&gt; 和一个 &lt;code&gt;development&lt;/code&gt; 分支，都被推送到&lt;a href=&quot;http://en.wikipedia.org/wiki/GitHub&quot;&gt;GitHub&lt;/a&gt; 。 我已经 &lt;code&gt;clone&lt;/code&gt; d， &lt;code&gt;pull&lt;/code&gt; ed和 &lt;code&gt;fetch&lt;/code&gt; ed，但是除了 &lt;code&gt;master&lt;/code&gt; 分支以外，我仍然无法获得其他任何东西。</target>
        </trans-unit>
        <trans-unit id="969752d323845a8628eec1919fa3b8d9cf76f42e" translate="yes" xml:space="preserve">
          <source>I needed to do exactly the same. Here is my &lt;a href=&quot;http://en.wikipedia.org/wiki/Ruby_%28programming_language%29&quot;&gt;Ruby&lt;/a&gt; script.</source>
          <target state="translated">我需要做的完全一样。 这是我的&lt;a href=&quot;http://en.wikipedia.org/wiki/Ruby_%28programming_language%29&quot;&gt;Ruby&lt;/a&gt;脚本。</target>
        </trans-unit>
        <trans-unit id="c4292b32834aeb0ec76fb6efd8da8a9e0d8e35dd" translate="yes" xml:space="preserve">
          <source>I was having trouble with moving a repo from one server/system to another. When I cloned the repo, it only created a local branch for master so when I pushed to the new remote, only master branch was pushed.</source>
          <target state="translated">我在将一个repo从一个服务器系统转移到另一个服务器系统时遇到了麻烦。当我克隆repo时,它只为master创建了一个本地分支,所以当我推送到新的远程时,只推送了master分支。</target>
        </trans-unit>
        <trans-unit id="f74da9fefce5a6552c2becb1f5200a5efd6e1130" translate="yes" xml:space="preserve">
          <source>I wrote this small &lt;strong&gt;Powershell&lt;/strong&gt; functions to be able to checkout all my git branches, that are on origin remote.</source>
          <target state="translated">我编写了这个小的&lt;strong&gt;Powershell&lt;/strong&gt;函数，以便能够检出我的所有git分支，这些分支位于源远程。</target>
        </trans-unit>
        <trans-unit id="d42f1310a09bd0f27b7120964a57f59d3155c0d5" translate="yes" xml:space="preserve">
          <source>I'm sure I'm missing something obvious, but I have read the manual and I'm getting no joy at all.</source>
          <target state="translated">我肯定是漏掉了什么明显的东西,但是我看了一下说明书,完全没有得到任何的喜悦。</target>
        </trans-unit>
        <trans-unit id="d234afa8d7c49dd35161a362bf35d9a55739662f" translate="yes" xml:space="preserve">
          <source>If &amp;lt;branch&amp;gt; is not found but there does exist a tracking branch in
  exactly one remote (call it &amp;lt;remote&amp;gt;) with a matching name, treat as
  equivalent to</source>
          <target state="translated">如果未找到&amp;lt;branch&amp;gt;，但确实在一个具有匹配名称的远程站点（称为&amp;lt;remote&amp;gt;）中存在跟踪分支，则将其等同于</target>
        </trans-unit>
        <trans-unit id="25faa613652f37fb764c40d08e5ccb4b1035abec" translate="yes" xml:space="preserve">
          <source>If above won't help, you need to add missing branches manually to the tracked list (as they got lost somehow):</source>
          <target state="translated">如果上面的方法没有帮助,你需要手动将丢失的分支添加到跟踪列表中(因为它们莫名其妙地丢失了)。</target>
        </trans-unit>
        <trans-unit id="1a14359df5526c8866b54bcdd94f5b679c0e138d" translate="yes" xml:space="preserve">
          <source>If you actually want to work on a branch, you'll probably want a &quot;local&quot; version of it. To simply create local branches from remote branches &lt;em&gt;(without checking them out and thereby changing the contents of your working directory)&lt;/em&gt;, you can do that like this:</source>
          <target state="translated">如果您实际上想在分支上工作，则可能需要它的&amp;ldquo;本地&amp;rdquo;版本。 要简单地从远程分支创建本地分支&lt;em&gt;（无需检出它们，从而不更改工作目录的内容）&lt;/em&gt; ，可以这样进行：</target>
        </trans-unit>
        <trans-unit id="4437e4612310d6856b546b4f56c5dcd4513d260c" translate="yes" xml:space="preserve">
          <source>If you do not need to have &lt;code&gt;master&lt;/code&gt; branch checked out after cloning, use</source>
          <target state="translated">如果您不需要在克隆后检出 &lt;code&gt;master&lt;/code&gt; 分支，请使用</target>
        </trans-unit>
        <trans-unit id="da914ab2547bb422c2c4e467c515df7a14f8a389" translate="yes" xml:space="preserve">
          <source>If you don't want grb to run commands on your behalf, just use the 'explain' feature. The commands will be printed to your console instead of executed for you.</source>
          <target state="translated">如果你不想让grb代你执行命令,只需使用 &quot;解释 &quot;功能。这些命令将被打印到你的控制台,而不是为你执行。</target>
        </trans-unit>
        <trans-unit id="1df53534155e15120a376ae4cb28a9f588e7a1f4" translate="yes" xml:space="preserve">
          <source>If you have many remote branches that you want to fetch at once, do:</source>
          <target state="translated">如果你有很多远程分支要一次性取走,请做。</target>
        </trans-unit>
        <trans-unit id="cc3b083a56fe1fb412680ed10c66fbe4af734503" translate="yes" xml:space="preserve">
          <source>If you just checkout to the branch, you get all you need.</source>
          <target state="translated">如果你只是结账到分行,你就能得到你所需要的一切。</target>
        </trans-unit>
        <trans-unit id="5534e19d892d0e286c9a619c4893b78305b4b1b7" translate="yes" xml:space="preserve">
          <source>If you just do &lt;code&gt;git branch&lt;/code&gt;, they are kind of hidden...</source>
          <target state="translated">如果您只是做 &lt;code&gt;git branch&lt;/code&gt; ，它们就是隐藏的...</target>
        </trans-unit>
        <trans-unit id="38c5c163571026b7685a448acac703e023a9ae11" translate="yes" xml:space="preserve">
          <source>If you just want to take a quick peek at an upstream branch, you can check it out directly:</source>
          <target state="translated">如果你只是想看一看上游的分支,可以直接查看一下。</target>
        </trans-unit>
        <trans-unit id="c03b69f363d8bf1f2dcfe450a25553020cd16960" translate="yes" xml:space="preserve">
          <source>If you like to fetch and checkout at the same time, you can do:</source>
          <target state="translated">如果你喜欢同时取货和结账,可以。</target>
        </trans-unit>
        <trans-unit id="81bd5d25d136c008fe0dd2dc4a9c268f29383d87" translate="yes" xml:space="preserve">
          <source>If you still cannot get anything other than the master branch, check the followings:</source>
          <target state="translated">如果还是拿不到主干支部以外的东西,那就看看下面的内容。</target>
        </trans-unit>
        <trans-unit id="28b33bd4d48a46b7ed8cb6551abcd866e7721073" translate="yes" xml:space="preserve">
          <source>In order to work on top of a specific remote branch, assuming it's the origin remote:</source>
          <target state="translated">为了在特定的远程分支上工作,假设是原点远程,假设是原点远程。</target>
        </trans-unit>
        <trans-unit id="1d0072897a7357e3ee9d2fd0675a8fcd514a3db7" translate="yes" xml:space="preserve">
          <source>In this case, just do:</source>
          <target state="translated">在这种情况下,只是做。</target>
        </trans-unit>
        <trans-unit id="3459c77ae7c5c24c59f8271356fa156298488ad4" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;branchone&lt;/code&gt; is the name of a local branch you're creating based on &lt;code&gt;origin/branchone&lt;/code&gt;; if you instead want to create local branches with different names, you can do this:</source>
          <target state="translated">在此示例中， &lt;code&gt;branchone&lt;/code&gt; 是您基于 &lt;code&gt;origin/branchone&lt;/code&gt; 创建的本地分支的名称； 如果您想使用不同的名称创建本地分支，则可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="62e28de059a281efc8c9d2b1435590e6c9816ad9" translate="yes" xml:space="preserve">
          <source>It can also be modified so it calls an explicit &lt;code&gt;git checkout -b &amp;lt;branch&amp;gt; -t &amp;lt;remote&amp;gt;/&amp;lt;branch&amp;gt;&lt;/code&gt; command.</source>
          <target state="translated">也可以对其进行修改，以便调用显式的 &lt;code&gt;git checkout -b &amp;lt;branch&amp;gt; -t &amp;lt;remote&amp;gt;/&amp;lt;branch&amp;gt;&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="c8d289cf33cf01f1a01e7b5e112c7f50087b4784" translate="yes" xml:space="preserve">
          <source>It throws fatal error messages on conflicts but I see them harmless.</source>
          <target state="translated">它在冲突时抛出致命的错误信息,但我看到它们是无害的。</target>
        </trans-unit>
        <trans-unit id="7b11f2e763d832fcde8fb41e48bbdbca4559197e" translate="yes" xml:space="preserve">
          <source>It will create tracking branches for all remote branches, except master (which you probably got from the original clone command). I think you might still need to do a</source>
          <target state="translated">它将为所有的远程分支创建跟踪分支,除了master(你可能是从原始的克隆命令中得到的)。我想你可能还需要做一个</target>
        </trans-unit>
        <trans-unit id="08157d13fce8f2cc30ac676bad8a23a7f9089dc5" translate="yes" xml:space="preserve">
          <source>It works also properly if tracking local branches are already created.
You can call it after the first &lt;code&gt;git clone&lt;/code&gt; or any time later.</source>
          <target state="translated">如果已创建跟踪本地分支，它也可以正常工作。 您可以在第一个 &lt;code&gt;git clone&lt;/code&gt; 或之后的任何时间调用它。</target>
        </trans-unit>
        <trans-unit id="edad9a82d9dba1609376dbbcd049f80b32fbb705" translate="yes" xml:space="preserve">
          <source>Just do this:</source>
          <target state="translated">就这样做吧。</target>
        </trans-unit>
        <trans-unit id="bb5415c2bb23bb4629b3b5f76a5f0e04440efb16" translate="yes" xml:space="preserve">
          <source>Looking at one of answers to the question I noticed that it's possible to shorten it:</source>
          <target state="translated">看了其中一个问题的答案,我发现可以缩短它。</target>
        </trans-unit>
        <trans-unit id="e11d591b7e8e36d20f6c470e79c8f196f46d3067" translate="yes" xml:space="preserve">
          <source>More git functions can be found on &lt;a href=&quot;https://github.com/aburok/mysettings/blob/master/PowerShell/config/git-alias.ps1&quot;&gt;my git settings repo&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/aburok/mysettings/blob/master/PowerShell/config/git-alias.ps1&quot;&gt;我的git设置库中&lt;/a&gt;可以找到更多的git功能</target>
        </trans-unit>
        <trans-unit id="fda7d0c53ead03d7a617ca22b7b9968b4c38228f" translate="yes" xml:space="preserve">
          <source>Next, look at the local branches in your repository:</source>
          <target state="translated">接下来,看看你的存储库中的本地分支。</target>
        </trans-unit>
        <trans-unit id="d31445656d6ad5b4ae57150f44f708711d0cc85a" translate="yes" xml:space="preserve">
          <source>None of these answers cut it, except user nobody is on the right track.</source>
          <target state="translated">这些答案都没有切开,除了用户没有人在正确的轨道上。</target>
        </trans-unit>
        <trans-unit id="620ff77c38debe97aeffdd621f6178c52e8a6248" translate="yes" xml:space="preserve">
          <source>Note that this is &lt;a href=&quot;http://programblings.com/2008/08/06/time-to-git-collaborating-with-git_remote_branch/&quot;&gt;alpha software&lt;/a&gt; ;-)</source>
          <target state="translated">请注意，这是&lt;a href=&quot;http://programblings.com/2008/08/06/time-to-git-collaborating-with-git_remote_branch/&quot;&gt;Alpha软件&lt;/a&gt; ；-)</target>
        </trans-unit>
        <trans-unit id="13b662f96dc05a55957e72aca6e62d8e95673d8e" translate="yes" xml:space="preserve">
          <source>Notice the * sign that denotes the current branch.</source>
          <target state="translated">注意*号表示当前分支。</target>
        </trans-unit>
        <trans-unit id="5961922ec547b8dad92b80187ad353f2eafffd7a" translate="yes" xml:space="preserve">
          <source>Now you can checkout any branch as you need to, without hitting the remote repository.</source>
          <target state="translated">现在,你可以根据自己的需要,在不打远程资源库的情况下,查看任何分支。</target>
        </trans-unit>
        <trans-unit id="2e7eefbf7f29d706c05433be74b13e007b531221" translate="yes" xml:space="preserve">
          <source>Now, if you look at your local branches, this is what you'll see:</source>
          <target state="translated">现在,如果你看看当地的分支机构,你会看到这样的情况。</target>
        </trans-unit>
        <trans-unit id="7ef0fa65d8e00ab7e4c7afb9fe208f44c76d0b51" translate="yes" xml:space="preserve">
          <source>Now, when you are on the dev branch, &quot;git pull&quot; will update your local dev to the same point as the remote dev branch.  Note that it will fetch all branches, but only pull the one you are on to the top of the tree.</source>
          <target state="translated">现在,当你在dev分支上的时候,&quot;git pull &quot;会将你的本地dev更新到与远程dev分支相同的位置。注意,它将获取所有的分支,但只会把你所在的分支拉到树的顶端。</target>
        </trans-unit>
        <trans-unit id="50e1fde6ec99f0c25dc7e679426e55e9aa717370" translate="yes" xml:space="preserve">
          <source>Once you've created a local branch, you can see it with &lt;code&gt;git branch&lt;/code&gt; (remember, you don't need &lt;code&gt;-a&lt;/code&gt; to see local branches).</source>
          <target state="translated">创建本地分支后，您可以使用 &lt;code&gt;git branch&lt;/code&gt; 查看它（请记住，您不需要 &lt;code&gt;-a&lt;/code&gt; 即可查看本地分支）。</target>
        </trans-unit>
        <trans-unit id="c8ea076decc01c52eb7e6ef603451913e28b26ce" translate="yes" xml:space="preserve">
          <source>Personally I'd use &lt;code&gt;track-all&lt;/code&gt; or &lt;code&gt;track-all-branches&lt;/code&gt;.</source>
          <target state="translated">就个人而言，我将使用全 &lt;code&gt;track-all&lt;/code&gt; 或全 &lt;code&gt;track-all-branches&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78661573440759b79a8f231bcc4014f9cc208dc2" translate="yes" xml:space="preserve">
          <source>Regarding,</source>
          <target state="translated">Regarding,</target>
        </trans-unit>
        <trans-unit id="472249ab326172c712293505899f939961ecabc5" translate="yes" xml:space="preserve">
          <source>Second step</source>
          <target state="translated">第二步</target>
        </trans-unit>
        <trans-unit id="bdda1441221b896dba833cb84c0e6e22be619aad" translate="yes" xml:space="preserve">
          <source>So I found these two methods VERY useful. Hope they help someone else.</source>
          <target state="translated">所以我发现这两个方法非常有用。希望它们能帮助到别人。</target>
        </trans-unit>
        <trans-unit id="c80c8aec2de465af54e7f390fcfdcde0497f6ae1" translate="yes" xml:space="preserve">
          <source>So if you'd like to see all branches name, just simply add &lt;code&gt;--all&lt;/code&gt; flag like this:</source>
          <target state="translated">因此，如果您想查看所有分支名称，只需添加 &lt;code&gt;--all&lt;/code&gt; 标志，如下所示：</target>
        </trans-unit>
        <trans-unit id="1bbaa234799e1d39395f0f9e989811e094db7b3f" translate="yes" xml:space="preserve">
          <source>So now you can just type the command &quot;git branch&quot; and you can see that all the branches are downloaded.</source>
          <target state="translated">所以现在你只要输入 &quot;git branch &quot;命令,就可以看到所有的分支都被下载了。</target>
        </trans-unit>
        <trans-unit id="a842aa3da102a1c9a8a4173222d37f1bc67be144" translate="yes" xml:space="preserve">
          <source>So to &lt;strong&gt;fetch them all&lt;/strong&gt;, try:</source>
          <target state="translated">因此，要&lt;strong&gt;全部获取它们&lt;/strong&gt; ，请尝试：</target>
        </trans-unit>
        <trans-unit id="7e9ee1431137dc10474a236583c516762f0c52f8" translate="yes" xml:space="preserve">
          <source>Sometimes you may have branches/tags which aren't directly connected to the current one, so &lt;code&gt;git pull --all&lt;/code&gt;/&lt;code&gt;git fetch --all&lt;/code&gt; won't help in that case, but you can list them by:</source>
          <target state="translated">有时您可能拥有的分支/标记没有直接连接到当前分支/标记，因此 &lt;code&gt;git pull --all&lt;/code&gt; / &lt;code&gt;git fetch --all&lt;/code&gt; 在这种情况下无济于事，但是您可以通过以下方式列出它们：</target>
        </trans-unit>
        <trans-unit id="a30e548dfcbb2eea59e05a9ae91634ecd39863fe" translate="yes" xml:space="preserve">
          <source>Thanks to bigfish for original idea</source>
          <target state="translated">感谢bigfish的创意</target>
        </trans-unit>
        <trans-unit id="00497e6863251261eab340cd362291173675bac1" translate="yes" xml:space="preserve">
          <source>That last line throws some people: &quot;New branch&quot; - huh?
What it really means is that the branch is taken from the index and created locally for you.  The &lt;em&gt;previous&lt;/em&gt; line is actually more informative as it tells you that the branch is being set up to track the remote branch, which usually means the origin/branch_name branch</source>
          <target state="translated">最后一行引发了一些人：&amp;ldquo;新分支&amp;rdquo;-是吗？ 这实际上意味着分支是从索引中提取的，并为您本地创建。 &lt;em&gt;前&lt;/em&gt;一行实际上更具信息性，因为它告诉您正在设置分支以跟踪远程分支，这通常意味着origin / branch_name分支</target>
        </trans-unit>
        <trans-unit id="eb2301e071497dc9ced7147bb2e1df9aee7d0cc4" translate="yes" xml:space="preserve">
          <source>The fetch that you are doing should get all the remote branches, but it won't create local branches for them. If you use gitk, you should see the remote branches described as &quot;remotes/origin/dev&quot; or something similar.</source>
          <target state="translated">你所做的提取应该会得到所有的远程分支,但它不会为它们创建本地分支。如果你使用gitk,你应该会看到远程分支被描述为 &quot;Remoteesorigindev &quot;或类似的东西。</target>
        </trans-unit>
        <trans-unit id="6855b6ff6eb4777534819fd8d8a0b570d7f78e1a" translate="yes" xml:space="preserve">
          <source>The output will like this;</source>
          <target state="translated">输出会是这样的。</target>
        </trans-unit>
        <trans-unit id="e5e2c2d9d615bdce4c4810af3a2860b858e38623" translate="yes" xml:space="preserve">
          <source>Then check all your branches again:</source>
          <target state="translated">然后再检查一遍你的所有分支。</target>
        </trans-unit>
        <trans-unit id="7425a5d18582c1acbc601b57740bcb0a00f9798a" translate="yes" xml:space="preserve">
          <source>These code will pull all remote branches code to local repo.</source>
          <target state="translated">这些代码将把所有的远程分支代码拉到本地repo。</target>
        </trans-unit>
        <trans-unit id="3342d5c5367d84612ab97657956aa20e618ae7d0" translate="yes" xml:space="preserve">
          <source>Third Step</source>
          <target state="translated">第三步</target>
        </trans-unit>
        <trans-unit id="a6793ef1dad62e88bf4b177329a886201177aad0" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29&quot;&gt;Bash&lt;/a&gt; script helped me out:</source>
          <target state="translated">这个&lt;a href=&quot;http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29&quot;&gt;Bash&lt;/a&gt;脚本帮助我：</target>
        </trans-unit>
        <trans-unit id="f8dabde90c9fee0597297bc22424492125fa364d" translate="yes" xml:space="preserve">
          <source>This answer follows &lt;a href=&quot;https://stackoverflow.com/users/856199/nikos-c&quot;&gt;Nikos C.&lt;/a&gt;'s &lt;a href=&quot;https://stackoverflow.com/a/10563611/445221&quot;&gt;idea&lt;/a&gt;.</source>
          <target state="translated">该答案遵循&lt;a href=&quot;https://stackoverflow.com/users/856199/nikos-c&quot;&gt;Nikos C.&lt;/a&gt;的&lt;a href=&quot;https://stackoverflow.com/a/10563611/445221&quot;&gt;想法&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="261e90f1e3af2f822792c202c79e89f411a57034" translate="yes" xml:space="preserve">
          <source>This is the quick way in which you can clone a git repository with all the branches at once, but it's not something you wanna do for every single project in this way.</source>
          <target state="translated">这是一种快速的方法,你可以一次性克隆一个git仓库中所有的分支,但不是每个项目都想用这种方式来做。</target>
        </trans-unit>
        <trans-unit id="ab5e91411dd9f26c97228c52a101ee830f876ca9" translate="yes" xml:space="preserve">
          <source>This isn't too much complicated, very simple and straight forward steps are as follows;</source>
          <target state="translated">这个并没有太复杂,很简单直接的步骤如下。</target>
        </trans-unit>
        <trans-unit id="a291220bace82fc699106fdc0c78b94804985569" translate="yes" xml:space="preserve">
          <source>This will:</source>
          <target state="translated">这将。</target>
        </trans-unit>
        <trans-unit id="3dc2f854808ea3dad01c452a9c607100f4eab7a0" translate="yes" xml:space="preserve">
          <source>To create a local branch based on a remote branch, do something like:</source>
          <target state="translated">要在远程分支的基础上创建一个本地分支,可以这样做。</target>
        </trans-unit>
        <trans-unit id="95c36f856b6800415b5fa6fb30e5412a082b979e" translate="yes" xml:space="preserve">
          <source>To get a clone with all branches and tags but also with a working copy:</source>
          <target state="translated">要获得一个具有所有分支和标签的克隆,但也要有一个工作副本。</target>
        </trans-unit>
        <trans-unit id="1e8f88ebad2ccc24959462baa31698636b7ec42a" translate="yes" xml:space="preserve">
          <source>To get a clone with all branches and tags.</source>
          <target state="translated">要得到一个带有所有分支和标签的克隆。</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="8ce69806e0744fa9e3a09ae5301ae119695b37d0" translate="yes" xml:space="preserve">
          <source>Use aliases. Though there aren't any native Git one-liners, you can define your own as</source>
          <target state="translated">使用别名。虽然没有任何原生的Git单行本,但你可以将自己的别名定义为</target>
        </trans-unit>
        <trans-unit id="a833ccc6264658a8a599cc4b11f2b141d7c47979" translate="yes" xml:space="preserve">
          <source>Use my tool &lt;a href=&quot;http://programblings.com/2008/08/06/time-to-git-collaborating-with-git_remote_branch/&quot;&gt;git_remote_branch&lt;/a&gt; (you need Ruby installed on your machine). It's built specifically to make remote branch manipulations dead easy.</source>
          <target state="translated">使用我的工具&lt;a href=&quot;http://programblings.com/2008/08/06/time-to-git-collaborating-with-git_remote_branch/&quot;&gt;git_remote_branch&lt;/a&gt; （您需要在机器上安装Ruby）。 它是专门为使远程分支操作变得简单而构建的。</target>
        </trans-unit>
        <trans-unit id="3bc19fcfb95afa56c9c0dadf40520dbb1f0a59d5" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://stackoverflow.com/users/2383918/nobody&quot;&gt;nobody&lt;/a&gt;'s &lt;a href=&quot;https://stackoverflow.com/a/16563327/445221&quot;&gt;answer&lt;/a&gt; as reference, we can have the following commands to create the aliases:</source>
          <target state="translated">使用&lt;a href=&quot;https://stackoverflow.com/users/2383918/nobody&quot;&gt;没人&lt;/a&gt;的&lt;a href=&quot;https://stackoverflow.com/a/16563327/445221&quot;&gt;答案&lt;/a&gt;作为参考，我们可以使用以下命令来创建别名：</target>
        </trans-unit>
        <trans-unit id="1773acfb1a5b1250da63e75db924bddbba366aaa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;--mirror&lt;/code&gt; option seems to copy the &lt;code&gt;remote&lt;/code&gt; tracking branches properly.
However, it sets up the repository as a bare repository, so you have to turn it back into a normal repository afterwards.</source>
          <target state="translated">使用 &lt;code&gt;--mirror&lt;/code&gt; 选项似乎可以正确复制 &lt;code&gt;remote&lt;/code&gt; 跟踪分支。 但是，它会将存储库设置为裸存储库，因此之后必须将其转换回普通存储库。</target>
        </trans-unit>
        <trans-unit id="35cfd145ad7d3f17d8f064c74e56f78d5a5fd272" translate="yes" xml:space="preserve">
          <source>Validate that &lt;code&gt;git config branch.master.remote&lt;/code&gt; is &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">验证 &lt;code&gt;git config branch.master.remote&lt;/code&gt; 是 &lt;code&gt;origin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74cbedaadf9f59b649aaff3c74143aa7a5832b96" translate="yes" xml:space="preserve">
          <source>Verify whether you are in the desired branch by the following command;</source>
          <target state="translated">通过以下命令确认你是否在所需的分支中。</target>
        </trans-unit>
        <trans-unit id="74cb7eec03a23ae2553a813034fc41c457179fa8" translate="yes" xml:space="preserve">
          <source>When you clone a repository all the information of the branches is actually downloaded but the branches are hidden. With the command</source>
          <target state="translated">当你克隆一个存储库时,所有的分支信息实际上都会被下载,但分支是隐藏的。使用以下命令</target>
        </trans-unit>
        <trans-unit id="edaf5ac1fa3f07ce16d86f8e784d6e989678d290" translate="yes" xml:space="preserve">
          <source>When you do &quot;git clone git://location&quot;, all branches and tags are fetched.</source>
          <target state="translated">当你做 &quot;git clone git:/location &quot;的时候,所有的分支和标签都会被提取。</target>
        </trans-unit>
        <trans-unit id="acccf42b8e873d5db5f0d9e0fa9d01abbc24b21e" translate="yes" xml:space="preserve">
          <source>Which should return something like:</source>
          <target state="translated">这应该返回类似的东西:</target>
        </trans-unit>
        <trans-unit id="3cc07b5a4565837fd0c94b1042ef5c8f01572213" translate="yes" xml:space="preserve">
          <source>Why you only see &quot;master&quot;</source>
          <target state="translated">为什么你只看到 &quot;主人&quot;?</target>
        </trans-unit>
        <trans-unit id="599416f2bfc34cec6b2286335ae339fee9f3ba1d" translate="yes" xml:space="preserve">
          <source>You can actually track more than one remote repository using &lt;code&gt;git remote&lt;/code&gt;.</source>
          <target state="translated">实际上，您可以使用 &lt;code&gt;git remote&lt;/code&gt; 跟踪多个远程存储库。</target>
        </trans-unit>
        <trans-unit id="85e17208f2a61b55ddd7f6bff2f5d111a2f2d15e" translate="yes" xml:space="preserve">
          <source>You can easily switch to a branch without using the fancy &quot;git checkout -b somebranch origin/somebranch&quot; syntax.  You can just do:</source>
          <target state="translated">你可以轻松地切换到一个分支,而不需要使用花哨的 &quot;git checkout -b somebranch originsomebranch &quot;语法。你可以直接做。</target>
        </trans-unit>
        <trans-unit id="ff1c1e662deac14b0ec579efc11eebb4264b38bb" translate="yes" xml:space="preserve">
          <source>You only need to use &quot;git clone&quot; to get all branches.</source>
          <target state="translated">你只需要使用 &quot;git clone &quot;就可以得到所有的分支。</target>
        </trans-unit>
        <trans-unit id="faf5b6aec65a13cec421dcae0ea195e5abd1c470" translate="yes" xml:space="preserve">
          <source>You see, 'git clone git://example.com/myprojectt' fetches everything, even the branches, you just have to checkout them, then your local branch will be created.</source>
          <target state="translated">你看,'git clone git:/example.commyprojectt'可以获取所有的东西,甚至是分支,你只需要检查它们,然后你的本地分支就会被创建出来。</target>
        </trans-unit>
        <trans-unit id="a3f8ac5eca8f606c25754e8bc8ca3bb624b42e61" translate="yes" xml:space="preserve">
          <source>all the answers I saw here are valid but there is a much cleaner way to clone a repository and to pull all the branches at once.</source>
          <target state="translated">我在这里看到的所有答案都是有道理的,但有一个更干净的方法可以克隆一个存储库,并一次性拉出所有的分支。</target>
        </trans-unit>
        <trans-unit id="b651cdf28b86b10dbfe9991c53832a4cd260bf13" translate="yes" xml:space="preserve">
          <source>and check all branches again...</source>
          <target state="translated">并再次检查所有的分支机构.....</target>
        </trans-unit>
        <trans-unit id="e8233383c2f197cb243bee10b8f2e06e597d83af" translate="yes" xml:space="preserve">
          <source>and fetch them manually by knowing the ref names.</source>
          <target state="translated">并通过了解裁判的名字,手动获取它们。</target>
        </trans-unit>
        <trans-unit id="f200dac23cbfd780612a0446217b60ada118534c" translate="yes" xml:space="preserve">
          <source>and then use it as</source>
          <target state="translated">然后用它作为</target>
        </trans-unit>
        <trans-unit id="abfdb0f896f8dc2ec024de13627b9635a8296b2b" translate="yes" xml:space="preserve">
          <source>and you will see</source>
          <target state="translated">你会发现</target>
        </trans-unit>
        <trans-unit id="cfd42c2d8f36d6d1f6bb96ee4840313ebd9568f6" translate="yes" xml:space="preserve">
          <source>by &lt;code&gt;git remote set-branches&lt;/code&gt; like:</source>
          <target state="translated">通过 &lt;code&gt;git remote set-branches&lt;/code&gt; 例如：</target>
        </trans-unit>
        <trans-unit id="7ac42d872ae211b768eeaddce90f3cc9eb60f628" translate="yes" xml:space="preserve">
          <source>check out master (for the sake of it)</source>
          <target state="translated">看在眼里</target>
        </trans-unit>
        <trans-unit id="32cc7371d8ab3f6d436ba08a6170c7fd3cadde8d" translate="yes" xml:space="preserve">
          <source>check out master (so that we can delete branch we are on)</source>
          <target state="translated">签出主站</target>
        </trans-unit>
        <trans-unit id="9590d8978d109761c8eb1143ff14df15719b2da5" translate="yes" xml:space="preserve">
          <source>create a new empty folder on your machine and clone a mirror copy of the .git folder from the repository:</source>
          <target state="translated">在你的机器上创建一个新的空文件夹,并从版本库中克隆一个.git文件夹的镜像副本。</target>
        </trans-unit>
        <trans-unit id="db6162f14163082d71e98f21a1ca78f1a06ca2db" translate="yes" xml:space="preserve">
          <source>might be better, in terms of tracking a remote repository.</source>
          <target state="translated">可能会更好,在追踪远程存储库方面。</target>
        </trans-unit>
        <trans-unit id="02e4e388b02f55b4b75cc79864d49d1a33b564bc" translate="yes" xml:space="preserve">
          <source>or the more verbose but easier to remember</source>
          <target state="translated">还是比较拗口但容易记住的</target>
        </trans-unit>
        <trans-unit id="dd3a5032cc67d17d0a229a6741c66e2552cb9f27" translate="yes" xml:space="preserve">
          <source>so it may appear under &lt;code&gt;remotes/origin&lt;/code&gt; after fetch:</source>
          <target state="translated">因此它在获取后可能会显示在 &lt;code&gt;remotes/origin&lt;/code&gt; 下：</target>
        </trans-unit>
        <trans-unit id="7e8d4241b88ff268043f86b1c2c0d1961627cc58" translate="yes" xml:space="preserve">
          <source>switch this repository from an empty (bare) repository to a regular repository by switching the boolean value &quot;bare&quot; of the git configurations to false:</source>
          <target state="translated">通过将git配置中的布尔值 &quot;裸体 &quot;切换为false,将这个仓库从空的(裸体)仓库切换到普通仓库。</target>
        </trans-unit>
        <trans-unit id="ac9b542420c95a107f17e647038e5aeeb8338fb3" translate="yes" xml:space="preserve">
          <source>the local repository inside the folder my_repo_folder is still empty, there is just a hidden .git folder now that you can see with a &quot;ls -alt&quot; command from the terminal.</source>
          <target state="translated">my_repo_folder里面的本地版本库仍然是空的,现在只有一个隐藏的.git文件夹,你可以用 &quot;ls -alt &quot;命令从终端看到。</target>
        </trans-unit>
        <trans-unit id="6ee68b3a2cfa9518c399656cfb58c7a62f733b30" translate="yes" xml:space="preserve">
          <source>to be sure.</source>
          <target state="translated">可以肯定的是</target>
        </trans-unit>
        <trans-unit id="92bd75ebd8fd2b0179172217b15350cc6d4002f0" translate="yes" xml:space="preserve">
          <source>using</source>
          <target state="translated">using</target>
        </trans-unit>
        <trans-unit id="3e6ccb76f79e6850f1acfebc7ac926f5cb9061e4" translate="yes" xml:space="preserve">
          <source>you can show all the branches of the repository, and with the command</source>
          <target state="translated">你可以显示仓库的所有分支,并且用命令</target>
        </trans-unit>
        <trans-unit id="2daa6e36fdfa4b70b796e2becaf433447bc65917" translate="yes" xml:space="preserve">
          <source>you can then &quot;download&quot; them manually one at a time.</source>
          <target state="translated">然后你可以一次一个个手动 &quot;下载 &quot;它们。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
