<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/67699">
    <body>
      <group id="67699">
        <trans-unit id="301f531ca75450cb2f7d1c557ac897795fde2749" translate="yes" xml:space="preserve">
          <source>$ git checkout -b experimental origin/experimental</source>
          <target state="translated">$ git checkout -b experimental originexperimental</target>
        </trans-unit>
        <trans-unit id="d9b845f965377efd496762792467b7956a67a199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git branch --all&lt;/code&gt; or &lt;code&gt;git branch -a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git branch --all&lt;/code&gt; または &lt;code&gt;git branch -a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="808f46ea8b6d7e40866821ee5a7a7591793b75de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git branch -a&lt;/code&gt; This will show you all the remote branches.</source>
          <target state="translated">&lt;code&gt;git branch -a&lt;/code&gt; これにより、すべてのリモートブランチが表示されます。</target>
        </trans-unit>
        <trans-unit id="4fe1973e7baebc3ae59caf3db9d6713e6b005cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git branch -a&lt;/code&gt; shows all branches, &lt;em&gt;including remote branches&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;git branch -a&lt;/code&gt; は、 &lt;em&gt;リモートブランチを含む&lt;/em&gt;すべてのブランチを表示します。</target>
        </trans-unit>
        <trans-unit id="ca562b4f001393db3334c499f5188be181ef8d4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clone --mirror&lt;/code&gt; on the original repo works well for this.</source>
          <target state="translated">元のリポジトリの &lt;code&gt;git clone --mirror&lt;/code&gt; がこれに適しています。</target>
        </trans-unit>
        <trans-unit id="ca3e908b3d20e92f2a7f0cedb0c75a20647fdc54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git clone&lt;/code&gt; downloads all remote branches but still considers them &quot;remote&quot;, even though the files are located in your new repository. There's one exception to this, which is that the cloning process creates a local branch called &quot;master&quot; from the remote branch called &quot;master&quot;. By default, &lt;code&gt;git branch&lt;/code&gt; only shows local branches, which is why you only see &quot;master&quot;.</source>
          <target state="translated">&lt;code&gt;git clone&lt;/code&gt; はすべてのリモートブランチをダウンロードしますが、ファイルが新しいリポジトリにある場合でも、それらを「リモート」と見なします。 これには1つの例外があります。これは、クローン作成プロセスが「master」というリモートブランチから「master」というローカルブランチを作成することです。 デフォルトでは、 &lt;code&gt;git branch&lt;/code&gt; はローカルブランチのみを表示するため、「マスター」のみが表示されます。</target>
        </trans-unit>
        <trans-unit id="42547dc1981659d5cdfe3f986d8b011690b7ca9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch &amp;lt;origin-name&amp;gt; &amp;lt;branch-name&amp;gt;&lt;/code&gt; brings the branch down for you. While this doesn't pull all branches at once, you can singularly execute this per-branch.</source>
          <target state="translated">&lt;code&gt;git fetch &amp;lt;origin-name&amp;gt; &amp;lt;branch-name&amp;gt;&lt;/code&gt; はブランチをダウンさせます。 これはすべてのブランチを一度にプルするわけではありませんが、ブランチごとに単独で実行できます。</target>
        </trans-unit>
        <trans-unit id="03a6f011d01355055fa890cf01f210adbfa6711c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git fetch origin&lt;/code&gt; This will bring all the remote branches to your local.</source>
          <target state="translated">&lt;code&gt;git fetch origin&lt;/code&gt; これはすべてのリモートブランチをローカルに持ってきます。</target>
        </trans-unit>
        <trans-unit id="3bb4c311efdde40b7d503b32e15584c5ca07cc2a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Based on &lt;a href=&quot;https://stackoverflow.com/a/6300386/1998046&quot;&gt;answer&lt;/a&gt; of &lt;a href=&quot;https://stackoverflow.com/users/6309/vonc&quot;&gt;VonC&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/users/6309/vonc&quot;&gt;VonCの&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/a/6300386/1998046&quot;&gt;回答&lt;/a&gt;に基づく 。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a4841f998170893a1dfedec0a375be9bc995367" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Credits for one-liner go to user cfi&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ワンライナーのクレジットはユーザーcfiに送られます&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d371a375635dead23e71c6018c06fc0b2d6bcf0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method 1:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;方法1：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39ba8b2d14f80c96148df898ae74111bfba336f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method 2:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;方法2：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b85f5fd3a37f8f6b212f361fd9f2d33e32cff56d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OK,&lt;/strong&gt; when you clone your repo, you have all branches there...</source>
          <target state="translated">&lt;strong&gt;OK、&lt;/strong&gt;リポジトリを複製すると、そこにすべてのブランチがあります...</target>
        </trans-unit>
        <trans-unit id="f9b7fc59ec32619b7362f2d4e28752a85f1aa324" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One liner&lt;/strong&gt;: &lt;code&gt;git branch -a | grep -v HEAD | perl -ne 'chomp($_); s|^\*?\s*||; if (m|(.+)/(.+)| &amp;amp;&amp;amp; not $d{$2}) {print qq(git branch --track $2 $1/$2\n)} else {$d{$_}=1}' | csh -xfs&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;1つのライナー&lt;/strong&gt; ： &lt;code&gt;git branch -a | grep -v HEAD | perl -ne 'chomp($_); s|^\*?\s*||; if (m|(.+)/(.+)| &amp;amp;&amp;amp; not $d{$2}) {print qq(git branch --track $2 $1/$2\n)} else {$d{$_}=1}' | csh -xfs&lt;/code&gt; grep -v HEAD | perl -ne 'chomp（$ _）; s | ^ \ *？\ s * ||; if（m |（。+）/（。+）| &amp;amp;&amp;amp; not $ d {$ 2}）{print qq（git branch --track $ 2 $ 1 / $ 2 \ n）} else {$ d {$ _} = 1} '| csh -xfs</target>
        </trans-unit>
        <trans-unit id="03fd26efb0ba8ef0fdfafb13fc8b44b41f652951" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;check out&lt;/strong&gt; branch from the remote</source>
          <target state="translated">リモートからブランチを&lt;strong&gt;チェックアウトする&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d6f5f2b0449257fbe75cf43896bdff0962fa55a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;delete&lt;/strong&gt; local branch (so that we can check out force-updated branches)</source>
          <target state="translated">ローカルブランチを&lt;strong&gt;削除します&lt;/strong&gt; （強制的に更新されたブランチをチェックアウトできるようにするため）</target>
        </trans-unit>
        <trans-unit id="4c47ed8880cad9add68ee96040fa21eec8f95d77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;loop through all branches&lt;/strong&gt; of the remote except master and HEAD</source>
          <target state="translated">マスターとヘッドを除くリモートの&lt;strong&gt;すべてのブランチ&lt;/strong&gt;を&lt;strong&gt;ループします&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c223e83979e975fbe477cefcf74a83291e1a259" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;select remote&lt;/strong&gt; to checkout (change it to whatever remote you have)</source>
          <target state="translated">チェックアウト&lt;strong&gt;するリモート&lt;/strong&gt;を&lt;strong&gt;選択&lt;/strong&gt; （お持ちのリモートに変更してください）</target>
        </trans-unit>
        <trans-unit id="678c308bcd70afd312c9a957d86adebf91647e2e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Reference: &lt;a href=&quot;https://git.wiki.kernel.org/index.php/Git_FAQ#How_do_I_clone_a_repository_with_all_remotely_tracked_branches.3F&quot;&gt;Git FAQ: How do I clone a repository with all remotely tracked branches? &lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;リファレンス： &lt;a href=&quot;https://git.wiki.kernel.org/index.php/Git_FAQ#How_do_I_clone_a_repository_with_all_remotely_tracked_branches.3F&quot;&gt;Git FAQ：リモートで追跡されたすべてのブランチを含むリポジトリのクローンを作成するにはどうすればよいですか？&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="da421b8657c21a03119727b7aa7e0479c605bee1" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;The &lt;code&gt;--depth=10000&lt;/code&gt; parameter may help if you've shallowed repository.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt; &lt;code&gt;--depth=10000&lt;/code&gt; パラメータは、リポジトリを浅くしている場合に役立つことがあります。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1ce8674470a57f633143963be8ef90127307f848" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;git clone&lt;/code&gt; is supposed to copy the entire repository.  Try cloning it, and then run &lt;code&gt;git branch -a&lt;/code&gt;.  It should list all the branches.  If then you want to switch to branch &quot;foo&quot; instead of &quot;master&quot;, use &lt;code&gt;git checkout foo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git clone&lt;/code&gt; はリポジトリ全体をコピーすることになっています。 クローンを作成してから、 &lt;code&gt;git branch -a&lt;/code&gt; を実行してください。 すべてのブランチがリストされているはずです。 次に、「master」ではなくブランチ「foo」に切り替える場合は、 &lt;code&gt;git checkout foo&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="c10ce513d40dc2073d4c0536211efc2089159cf7" translate="yes" xml:space="preserve">
          <source>Also created the image below for you to simplify what I said:</source>
          <target state="translated">また、私が言ったことを簡単にするためにあなたのために下の画像を作成しました。</target>
        </trans-unit>
        <trans-unit id="ffceac6103511230790137fcafeafda4a719a87f" translate="yes" xml:space="preserve">
          <source>Alternatively we can specify the remote branch instead.  This is based on &lt;a href=&quot;https://stackoverflow.com/users/144330/murphytalk&quot;&gt;murphytalk&lt;/a&gt;'s &lt;a href=&quot;https://stackoverflow.com/a/1186645/445221&quot;&gt;answer&lt;/a&gt;.</source>
          <target state="translated">あるいは、代わりにリモートブランチを指定できます。 これは&lt;a href=&quot;https://stackoverflow.com/users/144330/murphytalk&quot;&gt;マーフィートーク&lt;/a&gt;の&lt;a href=&quot;https://stackoverflow.com/a/1186645/445221&quot;&gt;答えに&lt;/a&gt;基づいています 。</target>
        </trans-unit>
        <trans-unit id="0f9df9d68e055253c086cab88c8be5d115c5a626" translate="yes" xml:space="preserve">
          <source>And you can switch to any branch which you already have.</source>
          <target state="translated">また、すでに持っているブランチに切り替えることもできます。</target>
        </trans-unit>
        <trans-unit id="593ef78e51c436cd66a563e6883dc4e210f64ca0" translate="yes" xml:space="preserve">
          <source>As of early 2017, the answer &lt;a href=&quot;https://stackoverflow.com/questions/67699/how-to-clone-all-remote-branches-in-git#comment2170694_72156&quot;&gt;in this comment&lt;/a&gt; works:</source>
          <target state="translated">2017年の初めに&lt;a href=&quot;https://stackoverflow.com/questions/67699/how-to-clone-all-remote-branches-in-git#comment2170694_72156&quot;&gt;、このコメント&lt;/a&gt;の答えは機能します：</target>
        </trans-unit>
        <trans-unit id="12bebcaa76fddb944d1aca23f1b83d2c24722670" translate="yes" xml:space="preserve">
          <source>As usual: test in your setup before copying rm -rf universe as we know it</source>
          <target state="translated">いつものように:rm -rf universe をコピーする前に、セットアップでテストしてください。</target>
        </trans-unit>
        <trans-unit id="b2aaac0b957edd419ddc600021d5573eec4db5b9" translate="yes" xml:space="preserve">
          <source>At this point you have a complete copy of the remote repo with all of it's branches (verify with &lt;code&gt;git branch&lt;/code&gt;).  You can use &lt;code&gt;--mirror&lt;/code&gt; instead of &lt;code&gt;--bare&lt;/code&gt; if your remote repo has remotes of its own.</source>
          <target state="translated">この時点で、すべてのブランチを含むリモートリポジトリの完全なコピーがあります（ &lt;code&gt;git branch&lt;/code&gt; で確認してください）。 リモートリポジトリに独自のリモートがある場合は、 &lt;code&gt;--bare&lt;/code&gt; 代わりに &lt;code&gt;--mirror&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="99fc7b688162413079b41c3407b8f0c9ca8deff2" translate="yes" xml:space="preserve">
          <source>At this point, things are getting pretty crazy, so run &lt;code&gt;gitk&lt;/code&gt; to see what's going on:</source>
          <target state="translated">この時点で、物事はかなりおかしくなっているので、 &lt;code&gt;gitk&lt;/code&gt; を実行して何が起こっているかを確認します。</target>
        </trans-unit>
        <trans-unit id="8c7875ace5025aaed734115d52f10ab9596ff44a" translate="yes" xml:space="preserve">
          <source>Better late than never, but here is the best way to do this:</source>
          <target state="translated">遅れるよりは遅い方がいいですが、これが一番いい方法です。</target>
        </trans-unit>
        <trans-unit id="e7fd99d2b1b9780441b6d0342458b5d033d2802b" translate="yes" xml:space="preserve">
          <source>Both commands can be aliased.</source>
          <target state="translated">どちらのコマンドもエイリアスにすることができます。</target>
        </trans-unit>
        <trans-unit id="53159098c758a6cdb6866692e1b8e8c61cbdc83e" translate="yes" xml:space="preserve">
          <source>But beware, if one of remote branches is named as e.g. admin_master  it won't get downloaded!</source>
          <target state="translated">しかし、リモートブランチの一つがadmin_masterのような名前になっているとダウンロードされないので注意してください!</target>
        </trans-unit>
        <trans-unit id="79fbe1fe23d00e363fc9210e6a012f7c01d8cdcd" translate="yes" xml:space="preserve">
          <source>But how about if the branch created by someone else after you clone?</source>
          <target state="translated">しかし、クローンした後に他の人が作ったブランチの場合はどうでしょうか?</target>
        </trans-unit>
        <trans-unit id="ea949a51fa8e944ca95850f1619f2d002c43c4ce" translate="yes" xml:space="preserve">
          <source>But if you want to work on that branch, you'll need to create a local tracking branch which is done automatically by:</source>
          <target state="translated">しかし、もしそのブランチで作業をしたいのであれば、自動的に行われるローカルトラッキングブランチを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="c2591533a4fdf6f2da04b4b946423631176f7190" translate="yes" xml:space="preserve">
          <source>But there are other branches hiding in your repository! You can see these using the &lt;code&gt;-a&lt;/code&gt; flag:</source>
          <target state="translated">しかし、リポジトリに隠れている他のブランチがあります！ これらは、 &lt;code&gt;-a&lt;/code&gt; フラグを使用して表示できます。</target>
        </trans-unit>
        <trans-unit id="9ea87432285cb01210d2713146ec738d85831a62" translate="yes" xml:space="preserve">
          <source>Check if &lt;code&gt;origin&lt;/code&gt; points to the right URL via: &lt;code&gt;git remote show origin&lt;/code&gt; (see this &lt;a href=&quot;https://stackoverflow.com/q/5243231/55075&quot;&gt;post&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;origin&lt;/code&gt; が &lt;code&gt;git remote show origin&lt;/code&gt; を介して正しいURLを指しているかどうかを確認します（この&lt;a href=&quot;https://stackoverflow.com/q/5243231/55075&quot;&gt;投稿を&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="80816ffb31404735fc035cde7ba8c26445d825df" translate="yes" xml:space="preserve">
          <source>Cloning from a local repo will not work with git clone &amp;amp; git fetch: a lot of branches/tags will remain unfetched.</source>
          <target state="translated">ローカルリポジトリからのクローンは、git cloneとgit fetchでは機能しません。多くのブランチ/タグがフェッチされないままになります。</target>
        </trans-unit>
        <trans-unit id="930286fefe00a0578e0de03873d6ee913f35a292" translate="yes" xml:space="preserve">
          <source>Don't worry that after you &quot;git clone&quot;, you don't need to connect with the remote repo, &quot;git branch -a&quot; and &quot;git checkout &quot; can be run successfully when you close your wifi. So it is proved that when you do &quot;git clone&quot;, it already has copied all branches from the remote repo. After that, you don't need the remote repo, your local already has all branches' codes.</source>
          <target state="translated">git clone&quot; を実行した後、リモートレポに接続しなくても、wifi を閉じれば &quot;git branch -a&quot; や &quot;git checkout&quot; は正常に実行できます。つまり、&quot;git clone &quot;を行うと、すでにリモートレポからすべてのブランチがコピーされていることが証明されています。これで、リモートレポは必要なくなり、ローカルにはすでにすべてのブランチのコードがあるということになります。</target>
        </trans-unit>
        <trans-unit id="3fe3c5578d2022b9e801ad93a15fe2d4ea59e81b" translate="yes" xml:space="preserve">
          <source>Double check your remotes (&lt;code&gt;git remote -v&lt;/code&gt;), e.g.</source>
          <target state="translated">リモコンを再確認します（ &lt;code&gt;git remote -v&lt;/code&gt; ）。たとえば、</target>
        </trans-unit>
        <trans-unit id="ef8ae25204b888689faeec56a121a1bfeb35cd8a" translate="yes" xml:space="preserve">
          <source>Each time it does an operation on your behalf, it prints it in red at the console. Over time, they finally stick into your brain :-)</source>
          <target state="translated">それがあなたに代わって操作を行うたびに、それはコンソールでそれを赤く印刷します。時間が経つにつれて、最終的にはあなたの脳裏に焼き付いていきます。)</target>
        </trans-unit>
        <trans-unit id="299f3e5211d43bbd5573ce814ba530f5c1d6a4c5" translate="yes" xml:space="preserve">
          <source>Even though you only see master branch, you can use &quot;git branch -a&quot; to see all branches.</source>
          <target state="translated">master ブランチしか見ていなくても、&quot;git branch -a&quot; を使えばすべてのブランチを見ることができます。</target>
        </trans-unit>
        <trans-unit id="26c3acfafa7b99822d5ac1cb02f37c83f54d3066" translate="yes" xml:space="preserve">
          <source>Existing branches will simply be checked out, or declared as already in it, but filters can be added to avoid the conflicts.</source>
          <target state="translated">既存のブランチは単にチェックアウトされるか、あるいはすでに存在すると宣言されますが、フィルタを追加して競合を回避することもできます。</target>
        </trans-unit>
        <trans-unit id="b5795a17b25798899d631807c8f04285e59bb24d" translate="yes" xml:space="preserve">
          <source>Finally, all commands have aliases, to make memorization easier.</source>
          <target state="translated">最後に、すべてのコマンドにはエイリアスがあり、記憶を容易にします。</target>
        </trans-unit>
        <trans-unit id="bb6c4941136ed90befe7375c3458e03e31e29e8b" translate="yes" xml:space="preserve">
          <source>First step</source>
          <target state="translated">第一段階</target>
        </trans-unit>
        <trans-unit id="1056dc406c6a2e988deef61bb7fb07283a39b216" translate="yes" xml:space="preserve">
          <source>First, clone a remote &lt;a href=&quot;http://en.wikipedia.org/wiki/Git_%28software%29&quot;&gt;Git&lt;/a&gt; repository and &lt;a href=&quot;http://en.wikipedia.org/wiki/Cd_%28command%29&quot;&gt;cd&lt;/a&gt; into it:</source>
          <target state="translated">最初に、リモート&lt;a href=&quot;http://en.wikipedia.org/wiki/Git_%28software%29&quot;&gt;Git&lt;/a&gt;リポジトリのクローンを作成し、そこに&lt;a href=&quot;http://en.wikipedia.org/wiki/Cd_%28command%29&quot;&gt;cd&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="776056333d0cb52b81767959d68e4640de0d93e3" translate="yes" xml:space="preserve">
          <source>For copy-paste into command line:</source>
          <target state="translated">コマンドラインへのコピーペースト用。</target>
        </trans-unit>
        <trans-unit id="f05a911df776c9209ed3927e38cdb6d3801e48f0" translate="yes" xml:space="preserve">
          <source>For more readibility:</source>
          <target state="translated">より読みやすくするために</target>
        </trans-unit>
        <trans-unit id="21592b13daebfb6dea667bb7386f3f2965c0e42f" translate="yes" xml:space="preserve">
          <source>Git usually (when not specified) fetches all branches and/or tags (refs, see: &lt;code&gt;git ls-refs&lt;/code&gt;) from one or more other repositories along with the objects necessary to complete their histories. In other words it fetches the objects which are reachable by the objects that are already downloaded. See: &lt;a href=&quot;https://stackoverflow.com/a/36243207/55075&quot;&gt;What does &lt;code&gt;git fetch&lt;/code&gt; really do?&lt;/a&gt;</source>
          <target state="translated">通常、Gitは（指定されていない場合）、1つ以上の他のリポジトリからすべてのブランチやタグ（参照： &lt;code&gt;git ls-refs&lt;/code&gt; ）を、それらの履歴を完成するために必要なオブジェクトとともにフェッチします。 言い換えると、すでにダウンロードされているオブジェクトから到達可能なオブジェクトをフェッチします。 参照： &lt;a href=&quot;https://stackoverflow.com/a/36243207/55075&quot;&gt; &lt;code&gt;git fetch&lt;/code&gt; は実際には何をしますか？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b76ded2f402752f0ab4fc335b07322fbd203f05e" translate="yes" xml:space="preserve">
          <source>Git will automatically do the right thing:</source>
          <target state="translated">Gitは自動的に正しいことをしてくれます。</target>
        </trans-unit>
        <trans-unit id="de23286b6837b41ad300e659bca5ffebe6385833" translate="yes" xml:space="preserve">
          <source>Git will check whether a branch with the same name exists in exactly one remote, and if it does, it tracks it the same way as if you had explicitly specified that it's a remote branch. From the git-checkout man page of Git 1.8.2.1:</source>
          <target state="translated">Git は、同じ名前のブランチが正確にひとつのリモートに存在するかどうかをチェックし、存在する場合は、それがリモートブランチであることを明示的に指定した場合と同じ方法で追跡します。Git 1.8.2.1のgit-checkoutのマンページより。</target>
        </trans-unit>
        <trans-unit id="31573bf9b35d67abc5c3ace961e3e3495517b5bd" translate="yes" xml:space="preserve">
          <source>Grab everything that inside the current folder and create all the branches on the local machine, therefore making this a normal repo.</source>
          <target state="translated">現在のフォルダ内のすべてのものを取得し、ローカルマシン上にすべてのブランチを作成し、これを通常のレポにします。</target>
        </trans-unit>
        <trans-unit id="e08642655ee9705f1e63e0d7d13c6436ae6dabb2" translate="yes" xml:space="preserve">
          <source>Here is another short one-liner command which
creates local branches for all remote branches:</source>
          <target state="translated">ここには、すべてのリモートブランチに対してローカルブランチを作成する別の短いワンライナーコマンドがあります。</target>
        </trans-unit>
        <trans-unit id="b34ecef9b36ef720971249f23ad287ed2c275185" translate="yes" xml:space="preserve">
          <source>Here's an answer that uses awk.  This method should suffice if used on a new repo.</source>
          <target state="translated">これが awk を使った答えです。この方法は新しいレポで使用する場合には十分です。</target>
        </trans-unit>
        <trans-unit id="20542ef656654b246f76f23e268c9c3d9a9ad2c5" translate="yes" xml:space="preserve">
          <source>Here's the help when you run grb help:</source>
          <target state="translated">grbヘルプを実行したときのヘルプです。</target>
        </trans-unit>
        <trans-unit id="a9b277456b96b95cf266b621fee07552a5bb7870" translate="yes" xml:space="preserve">
          <source>How to clone all remote branches in Git</source>
          <target state="translated">Git ですべてのリモートブランチをクローンする方法</target>
        </trans-unit>
        <trans-unit id="b5ab89c3f6e60702c0e43530b82f887c582f2ca4" translate="yes" xml:space="preserve">
          <source>How to get local branches</source>
          <target state="translated">地方支部の取得方法</target>
        </trans-unit>
        <trans-unit id="ff185a323114a5fcd49149360a6d7c9a7b503ef0" translate="yes" xml:space="preserve">
          <source>However, when you want to clone a repo with a lot of branches all the ways illustrated are above are lengthy and tedious in respect to a much cleaner and quicker way that I am going to show, though it's a bit complicated. You need three steps to accomplish this:</source>
          <target state="translated">しかし、たくさんのブランチを持つレポをクローンしたい場合、上記で説明した方法はどれも長くて面倒ですが、これから紹介するよりもずっとクリーンで迅速な方法は、少し複雑です。これを達成するには3つのステップが必要です。</target>
        </trans-unit>
        <trans-unit id="4372151be6cd5728bd559cabd9d12e7b23ef8f97" translate="yes" xml:space="preserve">
          <source>I have a &lt;code&gt;master&lt;/code&gt; and a &lt;code&gt;development&lt;/code&gt; branch, both pushed to &lt;a href=&quot;http://en.wikipedia.org/wiki/GitHub&quot;&gt;GitHub&lt;/a&gt;. I've &lt;code&gt;clone&lt;/code&gt;d, &lt;code&gt;pull&lt;/code&gt;ed, and &lt;code&gt;fetch&lt;/code&gt;ed, but I remain unable to get anything other than the &lt;code&gt;master&lt;/code&gt; branch back.</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; と &lt;code&gt;development&lt;/code&gt; ブランチがあり、どちらも&lt;a href=&quot;http://en.wikipedia.org/wiki/GitHub&quot;&gt;GitHubに&lt;/a&gt;プッシュされています 。 私はd、 &lt;code&gt;pull&lt;/code&gt; ed、 &lt;code&gt;fetch&lt;/code&gt; edの &lt;code&gt;clone&lt;/code&gt; ましたが、 &lt;code&gt;master&lt;/code&gt; ブランチ以外を戻すことはできません。</target>
        </trans-unit>
        <trans-unit id="969752d323845a8628eec1919fa3b8d9cf76f42e" translate="yes" xml:space="preserve">
          <source>I needed to do exactly the same. Here is my &lt;a href=&quot;http://en.wikipedia.org/wiki/Ruby_%28programming_language%29&quot;&gt;Ruby&lt;/a&gt; script.</source>
          <target state="translated">私はまったく同じことをする必要がありました。 これが私の&lt;a href=&quot;http://en.wikipedia.org/wiki/Ruby_%28programming_language%29&quot;&gt;Ruby&lt;/a&gt;スクリプトです。</target>
        </trans-unit>
        <trans-unit id="c4292b32834aeb0ec76fb6efd8da8a9e0d8e35dd" translate="yes" xml:space="preserve">
          <source>I was having trouble with moving a repo from one server/system to another. When I cloned the repo, it only created a local branch for master so when I pushed to the new remote, only master branch was pushed.</source>
          <target state="translated">あるサーバーシステムから別のサーバーシステムにレポを移動する際に問題がありました。レポをクローンしたときにmasterのローカルブランチしか作成されなかったので、新しいリモートにプッシュしたときにmasterのブランチだけがプッシュされてしまいました。</target>
        </trans-unit>
        <trans-unit id="f74da9fefce5a6552c2becb1f5200a5efd6e1130" translate="yes" xml:space="preserve">
          <source>I wrote this small &lt;strong&gt;Powershell&lt;/strong&gt; functions to be able to checkout all my git branches, that are on origin remote.</source>
          <target state="translated">オリジンのリモートにあるすべてのgitブランチをチェックアウトできるように、この小さな&lt;strong&gt;Powershell&lt;/strong&gt;関数を作成しました。</target>
        </trans-unit>
        <trans-unit id="d42f1310a09bd0f27b7120964a57f59d3155c0d5" translate="yes" xml:space="preserve">
          <source>I'm sure I'm missing something obvious, but I have read the manual and I'm getting no joy at all.</source>
          <target state="translated">当たり前のように見落としているとは思いますが、説明書を読んだだけで、全く喜びを感じられません。</target>
        </trans-unit>
        <trans-unit id="d234afa8d7c49dd35161a362bf35d9a55739662f" translate="yes" xml:space="preserve">
          <source>If &amp;lt;branch&amp;gt; is not found but there does exist a tracking branch in
  exactly one remote (call it &amp;lt;remote&amp;gt;) with a matching name, treat as
  equivalent to</source>
          <target state="translated">&amp;lt;branch&amp;gt;が見つからないが、名前が一致する1つのリモート（&amp;lt;remote&amp;gt;と呼びます）に追跡ブランチが存在する場合は、次と同等として扱います。</target>
        </trans-unit>
        <trans-unit id="25faa613652f37fb764c40d08e5ccb4b1035abec" translate="yes" xml:space="preserve">
          <source>If above won't help, you need to add missing branches manually to the tracked list (as they got lost somehow):</source>
          <target state="translated">上記で解決しない場合は、行方不明のブランチを手動で追跡リストに追加する必要があります (何かの拍子に行方不明になってしまったので)。</target>
        </trans-unit>
        <trans-unit id="1a14359df5526c8866b54bcdd94f5b679c0e138d" translate="yes" xml:space="preserve">
          <source>If you actually want to work on a branch, you'll probably want a &quot;local&quot; version of it. To simply create local branches from remote branches &lt;em&gt;(without checking them out and thereby changing the contents of your working directory)&lt;/em&gt;, you can do that like this:</source>
          <target state="translated">実際にブランチで作業したい場合は、おそらく「ローカル」バージョンのブランチが必要です。 リモートブランチからローカルブランチを簡単に作成するには&lt;em&gt;（チェックアウトして作業ディレクトリの内容を変更せずに）&lt;/em&gt; 、次のようにします。</target>
        </trans-unit>
        <trans-unit id="4437e4612310d6856b546b4f56c5dcd4513d260c" translate="yes" xml:space="preserve">
          <source>If you do not need to have &lt;code&gt;master&lt;/code&gt; branch checked out after cloning, use</source>
          <target state="translated">クローン後に &lt;code&gt;master&lt;/code&gt; ブランチをチェックアウトする必要がない場合は、</target>
        </trans-unit>
        <trans-unit id="da914ab2547bb422c2c4e467c515df7a14f8a389" translate="yes" xml:space="preserve">
          <source>If you don't want grb to run commands on your behalf, just use the 'explain' feature. The commands will be printed to your console instead of executed for you.</source>
          <target state="translated">もし grb にコマンドを実行させたくない場合は、'説明' 機能を使ってください。コマンドはあなたの代わりに実行される代わりにコンソールに出力されます。</target>
        </trans-unit>
        <trans-unit id="1df53534155e15120a376ae4cb28a9f588e7a1f4" translate="yes" xml:space="preserve">
          <source>If you have many remote branches that you want to fetch at once, do:</source>
          <target state="translated">一度に取得したいリモートブランチがたくさんある場合は、そうします。</target>
        </trans-unit>
        <trans-unit id="cc3b083a56fe1fb412680ed10c66fbe4af734503" translate="yes" xml:space="preserve">
          <source>If you just checkout to the branch, you get all you need.</source>
          <target state="translated">支店にチェックアウトするだけで、必要なものは全て手に入ります。</target>
        </trans-unit>
        <trans-unit id="5534e19d892d0e286c9a619c4893b78305b4b1b7" translate="yes" xml:space="preserve">
          <source>If you just do &lt;code&gt;git branch&lt;/code&gt;, they are kind of hidden...</source>
          <target state="translated">&lt;code&gt;git branch&lt;/code&gt; だけを実行すると、それらは一種の隠されたものになります...</target>
        </trans-unit>
        <trans-unit id="38c5c163571026b7685a448acac703e023a9ae11" translate="yes" xml:space="preserve">
          <source>If you just want to take a quick peek at an upstream branch, you can check it out directly:</source>
          <target state="translated">上流のブランチをサクッと覗いてみたいだけなら、直接チェックしてみてもいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="c03b69f363d8bf1f2dcfe450a25553020cd16960" translate="yes" xml:space="preserve">
          <source>If you like to fetch and checkout at the same time, you can do:</source>
          <target state="translated">フェッチとチェックアウトを同時に行うのが好きな方は可能です。</target>
        </trans-unit>
        <trans-unit id="81bd5d25d136c008fe0dd2dc4a9c268f29383d87" translate="yes" xml:space="preserve">
          <source>If you still cannot get anything other than the master branch, check the followings:</source>
          <target state="translated">それでもマスターブランチ以外のものが手に入らない場合は、以下を確認してみてください。</target>
        </trans-unit>
        <trans-unit id="28b33bd4d48a46b7ed8cb6551abcd866e7721073" translate="yes" xml:space="preserve">
          <source>In order to work on top of a specific remote branch, assuming it's the origin remote:</source>
          <target state="translated">特定のリモートブランチの上で作業するためには、それがオリジンリモートであることを前提とします。</target>
        </trans-unit>
        <trans-unit id="1d0072897a7357e3ee9d2fd0675a8fcd514a3db7" translate="yes" xml:space="preserve">
          <source>In this case, just do:</source>
          <target state="translated">この場合は、ただやればいい。</target>
        </trans-unit>
        <trans-unit id="3459c77ae7c5c24c59f8271356fa156298488ad4" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;branchone&lt;/code&gt; is the name of a local branch you're creating based on &lt;code&gt;origin/branchone&lt;/code&gt;; if you instead want to create local branches with different names, you can do this:</source>
          <target state="translated">この例では、 &lt;code&gt;branchone&lt;/code&gt; は &lt;code&gt;origin/branchone&lt;/code&gt; に基づいて作成するローカルブランチの名前です。 代わりに、異なる名前でローカルブランチを作成する場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="62e28de059a281efc8c9d2b1435590e6c9816ad9" translate="yes" xml:space="preserve">
          <source>It can also be modified so it calls an explicit &lt;code&gt;git checkout -b &amp;lt;branch&amp;gt; -t &amp;lt;remote&amp;gt;/&amp;lt;branch&amp;gt;&lt;/code&gt; command.</source>
          <target state="translated">明示的に &lt;code&gt;git checkout -b &amp;lt;branch&amp;gt; -t &amp;lt;remote&amp;gt;/&amp;lt;branch&amp;gt;&lt;/code&gt; コマンドを呼び出すように変更することもできます。</target>
        </trans-unit>
        <trans-unit id="c8d289cf33cf01f1a01e7b5e112c7f50087b4784" translate="yes" xml:space="preserve">
          <source>It throws fatal error messages on conflicts but I see them harmless.</source>
          <target state="translated">競合時に致命的なエラーメッセージを投げますが、私は無害だと思っています。</target>
        </trans-unit>
        <trans-unit id="7b11f2e763d832fcde8fb41e48bbdbca4559197e" translate="yes" xml:space="preserve">
          <source>It will create tracking branches for all remote branches, except master (which you probably got from the original clone command). I think you might still need to do a</source>
          <target state="translated">master を除いたすべてのリモートブランチのトラッキングブランチを作成します (これはおそらくオリジナルの clone コマンドから取得したものでしょう)。これはおそらくオリジナルの clone コマンドで取得したものでしょう)を除くすべてのリモートブランチにトラッキングブランチを作成します。</target>
        </trans-unit>
        <trans-unit id="08157d13fce8f2cc30ac676bad8a23a7f9089dc5" translate="yes" xml:space="preserve">
          <source>It works also properly if tracking local branches are already created.
You can call it after the first &lt;code&gt;git clone&lt;/code&gt; or any time later.</source>
          <target state="translated">ローカルブランチの追跡がすでに作成されている場合も、適切に機能します。 最初の &lt;code&gt;git clone&lt;/code&gt; 後で、または後でいつでも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="edad9a82d9dba1609376dbbcd049f80b32fbb705" translate="yes" xml:space="preserve">
          <source>Just do this:</source>
          <target state="translated">これをやってくれ</target>
        </trans-unit>
        <trans-unit id="bb5415c2bb23bb4629b3b5f76a5f0e04440efb16" translate="yes" xml:space="preserve">
          <source>Looking at one of answers to the question I noticed that it's possible to shorten it:</source>
          <target state="translated">回答の一つを見ていると、短縮できることに気がつきました。</target>
        </trans-unit>
        <trans-unit id="e11d591b7e8e36d20f6c470e79c8f196f46d3067" translate="yes" xml:space="preserve">
          <source>More git functions can be found on &lt;a href=&quot;https://github.com/aburok/mysettings/blob/master/PowerShell/config/git-alias.ps1&quot;&gt;my git settings repo&lt;/a&gt;</source>
          <target state="translated">より多くのgit関数が&lt;a href=&quot;https://github.com/aburok/mysettings/blob/master/PowerShell/config/git-alias.ps1&quot;&gt;私のgit設定リポジトリにあります&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fda7d0c53ead03d7a617ca22b7b9968b4c38228f" translate="yes" xml:space="preserve">
          <source>Next, look at the local branches in your repository:</source>
          <target state="translated">次に、リポジトリ内のローカルブランチを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="d31445656d6ad5b4ae57150f44f708711d0cc85a" translate="yes" xml:space="preserve">
          <source>None of these answers cut it, except user nobody is on the right track.</source>
          <target state="translated">これらの答えのどれもがそれをカットしない、ユーザー以外の誰もが正しい道を歩んでいません。</target>
        </trans-unit>
        <trans-unit id="620ff77c38debe97aeffdd621f6178c52e8a6248" translate="yes" xml:space="preserve">
          <source>Note that this is &lt;a href=&quot;http://programblings.com/2008/08/06/time-to-git-collaborating-with-git_remote_branch/&quot;&gt;alpha software&lt;/a&gt; ;-)</source>
          <target state="translated">これは&lt;a href=&quot;http://programblings.com/2008/08/06/time-to-git-collaborating-with-git_remote_branch/&quot;&gt;アルファ版ソフトウェアで&lt;/a&gt;あることに注意してください;-)</target>
        </trans-unit>
        <trans-unit id="13b662f96dc05a55957e72aca6e62d8e95673d8e" translate="yes" xml:space="preserve">
          <source>Notice the * sign that denotes the current branch.</source>
          <target state="translated">現在のブランチを示す*記号に注目してください。</target>
        </trans-unit>
        <trans-unit id="5961922ec547b8dad92b80187ad353f2eafffd7a" translate="yes" xml:space="preserve">
          <source>Now you can checkout any branch as you need to, without hitting the remote repository.</source>
          <target state="translated">これで、リモートリポジトリにアクセスすることなく、必要に応じてブランチをチェックアウトすることができるようになりました。</target>
        </trans-unit>
        <trans-unit id="2e7eefbf7f29d706c05433be74b13e007b531221" translate="yes" xml:space="preserve">
          <source>Now, if you look at your local branches, this is what you'll see:</source>
          <target state="translated">さて、お近くの支店を見てみるとこんな感じです。</target>
        </trans-unit>
        <trans-unit id="7ef0fa65d8e00ab7e4c7afb9fe208f44c76d0b51" translate="yes" xml:space="preserve">
          <source>Now, when you are on the dev branch, &quot;git pull&quot; will update your local dev to the same point as the remote dev branch.  Note that it will fetch all branches, but only pull the one you are on to the top of the tree.</source>
          <target state="translated">さて、dev ブランチにいるときに &quot;git pull&quot; を実行すると、ローカルの dev ブランチをリモートの dev ブランチと同じ位置に更新します。これはすべてのブランチを取得しますが、今いるブランチだけをツリーの一番上に引っ張ることに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="50e1fde6ec99f0c25dc7e679426e55e9aa717370" translate="yes" xml:space="preserve">
          <source>Once you've created a local branch, you can see it with &lt;code&gt;git branch&lt;/code&gt; (remember, you don't need &lt;code&gt;-a&lt;/code&gt; to see local branches).</source>
          <target state="translated">ローカルブランチを作成したら、それを &lt;code&gt;git branch&lt;/code&gt; 表示できます（ローカルブランチを表示するために &lt;code&gt;-a&lt;/code&gt; は必要ありません）。</target>
        </trans-unit>
        <trans-unit id="c8ea076decc01c52eb7e6ef603451913e28b26ce" translate="yes" xml:space="preserve">
          <source>Personally I'd use &lt;code&gt;track-all&lt;/code&gt; or &lt;code&gt;track-all-branches&lt;/code&gt;.</source>
          <target state="translated">個人的には &lt;code&gt;track-all&lt;/code&gt; または &lt;code&gt;track-all-branches&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="78661573440759b79a8f231bcc4014f9cc208dc2" translate="yes" xml:space="preserve">
          <source>Regarding,</source>
          <target state="translated">Regarding,</target>
        </trans-unit>
        <trans-unit id="472249ab326172c712293505899f939961ecabc5" translate="yes" xml:space="preserve">
          <source>Second step</source>
          <target state="translated">第二段階</target>
        </trans-unit>
        <trans-unit id="bdda1441221b896dba833cb84c0e6e22be619aad" translate="yes" xml:space="preserve">
          <source>So I found these two methods VERY useful. Hope they help someone else.</source>
          <target state="translated">だから、私はこの2つの方法が非常に有用であることを発見しました。誰かの役に立てればいいのですが</target>
        </trans-unit>
        <trans-unit id="c80c8aec2de465af54e7f390fcfdcde0497f6ae1" translate="yes" xml:space="preserve">
          <source>So if you'd like to see all branches name, just simply add &lt;code&gt;--all&lt;/code&gt; flag like this:</source>
          <target state="translated">したがって、すべてのブランチ名を表示したい場合は、次のように &lt;code&gt;--all&lt;/code&gt; フラグを追加するだけです。</target>
        </trans-unit>
        <trans-unit id="1bbaa234799e1d39395f0f9e989811e094db7b3f" translate="yes" xml:space="preserve">
          <source>So now you can just type the command &quot;git branch&quot; and you can see that all the branches are downloaded.</source>
          <target state="translated">これで、&quot;git branch &quot;というコマンドを入力するだけで、すべてのブランチがダウンロードされていることがわかります。</target>
        </trans-unit>
        <trans-unit id="a842aa3da102a1c9a8a4173222d37f1bc67be144" translate="yes" xml:space="preserve">
          <source>So to &lt;strong&gt;fetch them all&lt;/strong&gt;, try:</source>
          <target state="translated">&lt;strong&gt;これらすべて&lt;/strong&gt;を&lt;strong&gt;取得するには&lt;/strong&gt; 、次を試してください：</target>
        </trans-unit>
        <trans-unit id="7e9ee1431137dc10474a236583c516762f0c52f8" translate="yes" xml:space="preserve">
          <source>Sometimes you may have branches/tags which aren't directly connected to the current one, so &lt;code&gt;git pull --all&lt;/code&gt;/&lt;code&gt;git fetch --all&lt;/code&gt; won't help in that case, but you can list them by:</source>
          <target state="translated">時々、現在のものに直接接続されていないブランチ/タグがあるかもしれません、それで &lt;code&gt;git pull --all&lt;/code&gt; / &lt;code&gt;git fetch --all&lt;/code&gt; はその場合助けにはなりませんが、あなたはそれらをリストすることができます：</target>
        </trans-unit>
        <trans-unit id="a30e548dfcbb2eea59e05a9ae91634ecd39863fe" translate="yes" xml:space="preserve">
          <source>Thanks to bigfish for original idea</source>
          <target state="translated">独創的なアイデアを提供してくれたbigfishさんに感謝します。</target>
        </trans-unit>
        <trans-unit id="00497e6863251261eab340cd362291173675bac1" translate="yes" xml:space="preserve">
          <source>That last line throws some people: &quot;New branch&quot; - huh?
What it really means is that the branch is taken from the index and created locally for you.  The &lt;em&gt;previous&lt;/em&gt; line is actually more informative as it tells you that the branch is being set up to track the remote branch, which usually means the origin/branch_name branch</source>
          <target state="translated">その最後の行は何人かの人々を投げます：「新しいブランチ」-え？ それが実際に意味することは、ブランチがインデックスから取得され、ローカルに作成されることです。 &lt;em&gt;前の&lt;/em&gt;行は、ブランチがリモートブランチを追跡するように設定されていることを示しているため、実際にはより有益です。通常はorigin / branch_nameブランチを意味します</target>
        </trans-unit>
        <trans-unit id="eb2301e071497dc9ced7147bb2e1df9aee7d0cc4" translate="yes" xml:space="preserve">
          <source>The fetch that you are doing should get all the remote branches, but it won't create local branches for them. If you use gitk, you should see the remote branches described as &quot;remotes/origin/dev&quot; or something similar.</source>
          <target state="translated">あなたが行っているフェッチはすべてのリモートブランチを取得するはずですが、それに対してローカルブランチを作成することはありません。gitk を使っている場合は、リモートブランチが &quot;remotesorigindev&quot; あるいはそれに似たようなものとして表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="6855b6ff6eb4777534819fd8d8a0b570d7f78e1a" translate="yes" xml:space="preserve">
          <source>The output will like this;</source>
          <target state="translated">出力はこのようになります。</target>
        </trans-unit>
        <trans-unit id="e5e2c2d9d615bdce4c4810af3a2860b858e38623" translate="yes" xml:space="preserve">
          <source>Then check all your branches again:</source>
          <target state="translated">そして、もう一度すべてのブランチをチェックしてください。</target>
        </trans-unit>
        <trans-unit id="7425a5d18582c1acbc601b57740bcb0a00f9798a" translate="yes" xml:space="preserve">
          <source>These code will pull all remote branches code to local repo.</source>
          <target state="translated">これらのコードはすべてのリモートブランチのコードをローカルのレポに引っ張ってきます。</target>
        </trans-unit>
        <trans-unit id="3342d5c5367d84612ab97657956aa20e618ae7d0" translate="yes" xml:space="preserve">
          <source>Third Step</source>
          <target state="translated">第三段階</target>
        </trans-unit>
        <trans-unit id="a6793ef1dad62e88bf4b177329a886201177aad0" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29&quot;&gt;Bash&lt;/a&gt; script helped me out:</source>
          <target state="translated">この&lt;a href=&quot;http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29&quot;&gt;Bash&lt;/a&gt;スクリプトは私を助けました：</target>
        </trans-unit>
        <trans-unit id="f8dabde90c9fee0597297bc22424492125fa364d" translate="yes" xml:space="preserve">
          <source>This answer follows &lt;a href=&quot;https://stackoverflow.com/users/856199/nikos-c&quot;&gt;Nikos C.&lt;/a&gt;'s &lt;a href=&quot;https://stackoverflow.com/a/10563611/445221&quot;&gt;idea&lt;/a&gt;.</source>
          <target state="translated">この回答は、 &lt;a href=&quot;https://stackoverflow.com/users/856199/nikos-c&quot;&gt;ニコスC.&lt;/a&gt;の&lt;a href=&quot;https://stackoverflow.com/a/10563611/445221&quot;&gt;考えに&lt;/a&gt;従います。</target>
        </trans-unit>
        <trans-unit id="261e90f1e3af2f822792c202c79e89f411a57034" translate="yes" xml:space="preserve">
          <source>This is the quick way in which you can clone a git repository with all the branches at once, but it's not something you wanna do for every single project in this way.</source>
          <target state="translated">これは、すべてのブランチを一度にgitリポジトリにクローンすることができる手っ取り早い方法ですが、この方法ですべてのプロジェクトに対して行いたいわけではありません。</target>
        </trans-unit>
        <trans-unit id="ab5e91411dd9f26c97228c52a101ee830f876ca9" translate="yes" xml:space="preserve">
          <source>This isn't too much complicated, very simple and straight forward steps are as follows;</source>
          <target state="translated">これはあまりにも複雑ではなく、非常にシンプルで分かりやすい手順は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="a291220bace82fc699106fdc0c78b94804985569" translate="yes" xml:space="preserve">
          <source>This will:</source>
          <target state="translated">これは、そうなるだろう。</target>
        </trans-unit>
        <trans-unit id="3dc2f854808ea3dad01c452a9c607100f4eab7a0" translate="yes" xml:space="preserve">
          <source>To create a local branch based on a remote branch, do something like:</source>
          <target state="translated">リモートブランチをベースにローカルブランチを作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="95c36f856b6800415b5fa6fb30e5412a082b979e" translate="yes" xml:space="preserve">
          <source>To get a clone with all branches and tags but also with a working copy:</source>
          <target state="translated">すべてのブランチとタグを含むクローンを取得するだけでなく、作業コピーも取得します。</target>
        </trans-unit>
        <trans-unit id="1e8f88ebad2ccc24959462baa31698636b7ec42a" translate="yes" xml:space="preserve">
          <source>To get a clone with all branches and tags.</source>
          <target state="translated">すべてのブランチとタグを含むクローンを取得するには</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="8ce69806e0744fa9e3a09ae5301ae119695b37d0" translate="yes" xml:space="preserve">
          <source>Use aliases. Though there aren't any native Git one-liners, you can define your own as</source>
          <target state="translated">エイリアスを使用します。Git にはネイティブのワンライナーはありませんが、自分で定義したものは次のように定義できます。</target>
        </trans-unit>
        <trans-unit id="a833ccc6264658a8a599cc4b11f2b141d7c47979" translate="yes" xml:space="preserve">
          <source>Use my tool &lt;a href=&quot;http://programblings.com/2008/08/06/time-to-git-collaborating-with-git_remote_branch/&quot;&gt;git_remote_branch&lt;/a&gt; (you need Ruby installed on your machine). It's built specifically to make remote branch manipulations dead easy.</source>
          <target state="translated">私のツール&lt;a href=&quot;http://programblings.com/2008/08/06/time-to-git-collaborating-with-git_remote_branch/&quot;&gt;git_remote_branchを&lt;/a&gt;使用してください（マシンにRubyがインストールされている必要があります）。 これは、リモートブランチの操作を非常に簡単にするために特別に構築されています。</target>
        </trans-unit>
        <trans-unit id="3bc19fcfb95afa56c9c0dadf40520dbb1f0a59d5" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://stackoverflow.com/users/2383918/nobody&quot;&gt;nobody&lt;/a&gt;'s &lt;a href=&quot;https://stackoverflow.com/a/16563327/445221&quot;&gt;answer&lt;/a&gt; as reference, we can have the following commands to create the aliases:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/users/2383918/nobody&quot;&gt;nobody&lt;/a&gt;の&lt;a href=&quot;https://stackoverflow.com/a/16563327/445221&quot;&gt;回答&lt;/a&gt;を参照として使用して、次のコマンドでエイリアスを作成できます。</target>
        </trans-unit>
        <trans-unit id="1773acfb1a5b1250da63e75db924bddbba366aaa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;--mirror&lt;/code&gt; option seems to copy the &lt;code&gt;remote&lt;/code&gt; tracking branches properly.
However, it sets up the repository as a bare repository, so you have to turn it back into a normal repository afterwards.</source>
          <target state="translated">&lt;code&gt;--mirror&lt;/code&gt; オプションを使用すると、 &lt;code&gt;remote&lt;/code&gt; 追跡ブランチが正しくコピーされるようです。 ただし、リポジトリはベアリポジトリとして設定されるため、後で通常のリポジトリに戻す必要があります。</target>
        </trans-unit>
        <trans-unit id="35cfd145ad7d3f17d8f064c74e56f78d5a5fd272" translate="yes" xml:space="preserve">
          <source>Validate that &lt;code&gt;git config branch.master.remote&lt;/code&gt; is &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git config branch.master.remote&lt;/code&gt; が &lt;code&gt;origin&lt;/code&gt; であることを確認します。</target>
        </trans-unit>
        <trans-unit id="74cbedaadf9f59b649aaff3c74143aa7a5832b96" translate="yes" xml:space="preserve">
          <source>Verify whether you are in the desired branch by the following command;</source>
          <target state="translated">以下のコマンドで、目的のブランチにいるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="74cb7eec03a23ae2553a813034fc41c457179fa8" translate="yes" xml:space="preserve">
          <source>When you clone a repository all the information of the branches is actually downloaded but the branches are hidden. With the command</source>
          <target state="translated">リポジトリをクローンするとき、ブランチの情報はすべてダウンロードされますが、ブランチは隠されています。コマンドで</target>
        </trans-unit>
        <trans-unit id="edaf5ac1fa3f07ce16d86f8e784d6e989678d290" translate="yes" xml:space="preserve">
          <source>When you do &quot;git clone git://location&quot;, all branches and tags are fetched.</source>
          <target state="translated">git clone git:/location」を行うと、すべてのブランチとタグがフェッチされます。</target>
        </trans-unit>
        <trans-unit id="acccf42b8e873d5db5f0d9e0fa9d01abbc24b21e" translate="yes" xml:space="preserve">
          <source>Which should return something like:</source>
          <target state="translated">のようなものが返ってくるはずです。</target>
        </trans-unit>
        <trans-unit id="3cc07b5a4565837fd0c94b1042ef5c8f01572213" translate="yes" xml:space="preserve">
          <source>Why you only see &quot;master&quot;</source>
          <target state="translated">あなたが &quot;マスター &quot;しか見ない理由</target>
        </trans-unit>
        <trans-unit id="599416f2bfc34cec6b2286335ae339fee9f3ba1d" translate="yes" xml:space="preserve">
          <source>You can actually track more than one remote repository using &lt;code&gt;git remote&lt;/code&gt;.</source>
          <target state="translated">実際には、 &lt;code&gt;git remote&lt;/code&gt; を使用して複数のリモートリポジトリを追跡できます。</target>
        </trans-unit>
        <trans-unit id="85e17208f2a61b55ddd7f6bff2f5d111a2f2d15e" translate="yes" xml:space="preserve">
          <source>You can easily switch to a branch without using the fancy &quot;git checkout -b somebranch origin/somebranch&quot; syntax.  You can just do:</source>
          <target state="translated">派手な &quot;git checkout -b somebranch originsomebranch&quot; 構文を使わなくても、簡単にブランチに切り替えることができます。してしまえばいいのです。</target>
        </trans-unit>
        <trans-unit id="ff1c1e662deac14b0ec579efc11eebb4264b38bb" translate="yes" xml:space="preserve">
          <source>You only need to use &quot;git clone&quot; to get all branches.</source>
          <target state="translated">すべてのブランチを取得するには「git clone」を使うだけです。</target>
        </trans-unit>
        <trans-unit id="faf5b6aec65a13cec421dcae0ea195e5abd1c470" translate="yes" xml:space="preserve">
          <source>You see, 'git clone git://example.com/myprojectt' fetches everything, even the branches, you just have to checkout them, then your local branch will be created.</source>
          <target state="translated">git clone git:/example.commyprojectt' はすべてのブランチを取得します。</target>
        </trans-unit>
        <trans-unit id="a3f8ac5eca8f606c25754e8bc8ca3bb624b42e61" translate="yes" xml:space="preserve">
          <source>all the answers I saw here are valid but there is a much cleaner way to clone a repository and to pull all the branches at once.</source>
          <target state="translated">私がここで見た答えはすべて有効ですが、リポジトリをクローンして、すべてのブランチを一度に引っ張ってくる方がずっとクリーンな方法があります。</target>
        </trans-unit>
        <trans-unit id="b651cdf28b86b10dbfe9991c53832a4cd260bf13" translate="yes" xml:space="preserve">
          <source>and check all branches again...</source>
          <target state="translated">と、すべてのブランチを再度確認してください...</target>
        </trans-unit>
        <trans-unit id="e8233383c2f197cb243bee10b8f2e06e597d83af" translate="yes" xml:space="preserve">
          <source>and fetch them manually by knowing the ref names.</source>
          <target state="translated">を使用して、参照名を知ることで手動で取得することができます。</target>
        </trans-unit>
        <trans-unit id="f200dac23cbfd780612a0446217b60ada118534c" translate="yes" xml:space="preserve">
          <source>and then use it as</source>
          <target state="translated">として使用し、それを</target>
        </trans-unit>
        <trans-unit id="abfdb0f896f8dc2ec024de13627b9635a8296b2b" translate="yes" xml:space="preserve">
          <source>and you will see</source>
          <target state="translated">見ての通り</target>
        </trans-unit>
        <trans-unit id="cfd42c2d8f36d6d1f6bb96ee4840313ebd9568f6" translate="yes" xml:space="preserve">
          <source>by &lt;code&gt;git remote set-branches&lt;/code&gt; like:</source>
          <target state="translated">&lt;code&gt;git remote set-branches&lt;/code&gt; のように：</target>
        </trans-unit>
        <trans-unit id="7ac42d872ae211b768eeaddce90f3cc9eb60f628" translate="yes" xml:space="preserve">
          <source>check out master (for the sake of it)</source>
          <target state="translated">師匠を見習う</target>
        </trans-unit>
        <trans-unit id="32cc7371d8ab3f6d436ba08a6170c7fd3cadde8d" translate="yes" xml:space="preserve">
          <source>check out master (so that we can delete branch we are on)</source>
          <target state="translated">マスターをチェックアウトする</target>
        </trans-unit>
        <trans-unit id="9590d8978d109761c8eb1143ff14df15719b2da5" translate="yes" xml:space="preserve">
          <source>create a new empty folder on your machine and clone a mirror copy of the .git folder from the repository:</source>
          <target state="translated">マシン上に新しい空のフォルダを作成し、リポジトリから.gitフォルダのミラーコピーをクローンします。</target>
        </trans-unit>
        <trans-unit id="db6162f14163082d71e98f21a1ca78f1a06ca2db" translate="yes" xml:space="preserve">
          <source>might be better, in terms of tracking a remote repository.</source>
          <target state="translated">の方が、リモートリポジトリを追跡するという点では良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="02e4e388b02f55b4b75cc79864d49d1a33b564bc" translate="yes" xml:space="preserve">
          <source>or the more verbose but easier to remember</source>
          <target state="translated">冗長だが覚えやすいほうがいい</target>
        </trans-unit>
        <trans-unit id="dd3a5032cc67d17d0a229a6741c66e2552cb9f27" translate="yes" xml:space="preserve">
          <source>so it may appear under &lt;code&gt;remotes/origin&lt;/code&gt; after fetch:</source>
          <target state="translated">そのため、フェッチ後に &lt;code&gt;remotes/origin&lt;/code&gt; の下に表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="7e8d4241b88ff268043f86b1c2c0d1961627cc58" translate="yes" xml:space="preserve">
          <source>switch this repository from an empty (bare) repository to a regular repository by switching the boolean value &quot;bare&quot; of the git configurations to false:</source>
          <target state="translated">git configurations の boolean 値 &quot;bare&quot; を false に切り替えることで、このリポジトリを空の (むき出しの)リポジトリから通常のリポジトリに切り替えます。</target>
        </trans-unit>
        <trans-unit id="ac9b542420c95a107f17e647038e5aeeb8338fb3" translate="yes" xml:space="preserve">
          <source>the local repository inside the folder my_repo_folder is still empty, there is just a hidden .git folder now that you can see with a &quot;ls -alt&quot; command from the terminal.</source>
          <target state="translated">my_repo_folder フォルダ内のローカルリポジトリはまだ空っぽです。</target>
        </trans-unit>
        <trans-unit id="6ee68b3a2cfa9518c399656cfb58c7a62f733b30" translate="yes" xml:space="preserve">
          <source>to be sure.</source>
          <target state="translated">を確認してください。</target>
        </trans-unit>
        <trans-unit id="92bd75ebd8fd2b0179172217b15350cc6d4002f0" translate="yes" xml:space="preserve">
          <source>using</source>
          <target state="translated">using</target>
        </trans-unit>
        <trans-unit id="3e6ccb76f79e6850f1acfebc7ac926f5cb9061e4" translate="yes" xml:space="preserve">
          <source>you can show all the branches of the repository, and with the command</source>
          <target state="translated">リポジトリのすべてのブランチを表示することができます。</target>
        </trans-unit>
        <trans-unit id="2daa6e36fdfa4b70b796e2becaf433447bc65917" translate="yes" xml:space="preserve">
          <source>you can then &quot;download&quot; them manually one at a time.</source>
          <target state="translated">そして、それらを一度に一つずつ手動で「ダウンロード」することができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
