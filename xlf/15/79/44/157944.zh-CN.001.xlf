<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/157944">
    <body>
      <group id="157944">
        <trans-unit id="9b942cc7947960be180c4985b4aa7badbbf83dab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://openjdk.java.net/jeps/269&quot;&gt;JEP 269&lt;/a&gt; provides some convenience factory methods for &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_collections_framework&quot;&gt;Java Collections&lt;/a&gt; API. These immutable static factory methods are built into the &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/List.html&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/Set.html&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/Map.html&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interfaces in Java 9 and later.</source>
          <target state="translated">&lt;a href=&quot;http://openjdk.java.net/jeps/269&quot;&gt;JEP 269&lt;/a&gt;为&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_collections_framework&quot;&gt;Java Collections&lt;/a&gt; API提供了一些便利的工厂方法。 这些不可变的静态工厂方法内置在Java 9及更高版本的&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/List.html&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; ， &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/Set.html&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/Map.html&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;接口中。</target>
        </trans-unit>
        <trans-unit id="ef1dc5e83054168577f46179178e2089cd651f39" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;sup&gt;(old thread, but just 2 cents as none mention Guava or other libs and some other details)&lt;/sup&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;sup&gt;（旧线程，但只有2美分，因为没有人提到Guava或其他库以及其他一些细节）&lt;/sup&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b45e3acdf3c125b56f5b7f5368924189613667f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Convert Array to ArrayList&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;将数组转换为ArrayList&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfc1fdfab9256b5d294a77b3432d03a3bc5cd514" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Convert Array to LinkedList&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;将数组转换为LinkedList&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46d961acbe9218bcb8a1992f9fa428411e0f8473" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Convert Array to List:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;将数组转换为列表：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f58a420090ad27155b159be3bd06ba5e31fef68d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Given Object Array:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;给定对象数组：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="427c44d8ba6ed744b734bb05ae190b4a05959f13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; : each &lt;code&gt;new Element(int args)&lt;/code&gt; will be treated as Individual Object and can be passed as a &lt;code&gt;var-args&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt; ：每个 &lt;code&gt;new Element(int args)&lt;/code&gt; 将被视为单个对象，并且可以作为 &lt;code&gt;var-args&lt;/code&gt; 传递。</target>
        </trans-unit>
        <trans-unit id="5b86f02d233610bf5027dc98685331fe1c7e25ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OUTPUT&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;OUTPUT&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5cb942b5cb26a39470c45755826667a5964a3b32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ObservableList:&lt;/strong&gt; A list that allows listeners to track changes when they occur.</source>
          <target state="translated">&lt;strong&gt;ObservableList：&lt;/strong&gt;一个列表，允许侦听器跟踪发生的更改。</target>
        </trans-unit>
        <trans-unit id="bf1bcbb61652e94d6357fc7728e4d9db1f0bd54b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Print List:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;列印清单：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="002a4166f0e9c3eab1497b02e125c5f42fd851da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update Java 9&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;更新Java 9&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0412f3cba7610d10f68030b8f476f54d286e373d" translate="yes" xml:space="preserve">
          <source>A few characters would be saved, if this could be just a &lt;code&gt;List&lt;/code&gt;</source>
          <target state="translated">如果这只是一个 &lt;code&gt;List&lt;/code&gt; ，将保存一些字符</target>
        </trans-unit>
        <trans-unit id="12f88e64757b6a7f9bb520382c40bf67f02a1047" translate="yes" xml:space="preserve">
          <source>According with the question the answer using java 1.7 is:</source>
          <target state="translated">根据这个问题,使用java 1.7的答案是:。</target>
        </trans-unit>
        <trans-unit id="217cf842234efe4f32f01d8c6ad53b49a1f4f515" translate="yes" xml:space="preserve">
          <source>Already everyone has provided enough good answer for your problem. 
Now from the all suggestions, you need to decided which will fit your requirement. There are two types of collection which you need to know. One is unmodified collection and other one collection which will allow you to modify the object later.</source>
          <target state="translated">大家已经为你的问题提供了足够好的答案。现在,从所有的建议中,你需要决定哪一种适合你的要求。有两种类型的集合,你需要知道。一种是未修改的集合,另一种是可以让你以后修改对象的集合。</target>
        </trans-unit>
        <trans-unit id="5eb363d873c8badba233f6343c7ada54c73339f4" translate="yes" xml:space="preserve">
          <source>And they very well support all operations of ArrayList</source>
          <target state="translated">而且它们很好地支持ArrayList的所有操作。</target>
        </trans-unit>
        <trans-unit id="aa4d8277c171fa4ab1ac60f69cba4865b43e908a" translate="yes" xml:space="preserve">
          <source>Another Java8 solution &lt;em&gt;(I may have missed the answer among the large set. If so, my apologies).&lt;/em&gt; This creates an ArrayList (as opposed to a List) i.e. one can delete elements</source>
          <target state="translated">另一个Java8解决方案&lt;em&gt;（我可能错过了大部分答案）。如果是这样，我表示歉意。&lt;/em&gt; 这将创建一个ArrayList（与List相对），即可以删除元素</target>
        </trans-unit>
        <trans-unit id="1162980813c64df820fe0dd105ad7848144e56fa" translate="yes" xml:space="preserve">
          <source>Another simple way is to add all elements from the array to a new ArrayList using a for-each loop.</source>
          <target state="translated">另一个简单的方法是使用for-each循环将数组中的所有元素添加到一个新的ArrayList中。</target>
        </trans-unit>
        <trans-unit id="128d630cda50f2ae478c85cde76ad78ca2282c3c" translate="yes" xml:space="preserve">
          <source>Another update, almost ending year 2014, you can do it with Java 8 too:</source>
          <target state="translated">另一个更新,2014年快结束了,你也可以用Java 8来做。</target>
        </trans-unit>
        <trans-unit id="7f15d4df893701ff324bb3febd8121c1e8335818" translate="yes" xml:space="preserve">
          <source>Another way (although essentially equivalent to the &lt;code&gt;new ArrayList(Arrays.asList(array))&lt;/code&gt; solution performance-wise:</source>
          <target state="translated">性能方面的另一种方法（尽管本质上等效于 &lt;code&gt;new ArrayList(Arrays.asList(array))&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e8fccef5cf6ed02799d46e512e1c7f5463912bae" translate="yes" xml:space="preserve">
          <source>As of Java 5, &lt;code&gt;Arrays.asList()&lt;/code&gt; takes a varargs parameter and you don't have to construct the array explicitly.</source>
          <target state="translated">从Java 5开始， &lt;code&gt;Arrays.asList()&lt;/code&gt; 带有varargs参数，您不必显式构造数组。</target>
        </trans-unit>
        <trans-unit id="33513d9337d9ae79236a7b76e271d5c23bf5b8d0" translate="yes" xml:space="preserve">
          <source>But it's not the only reason (and Java 7 isn't everywhere yet): the shorthand syntax is also very handy, and the methods initializers, as seen above, allow to write more expressive code. You do in one Guava call what takes 2 with the current Java Collections.</source>
          <target state="translated">但这并不是唯一的原因(Java 7还没有普及):速记语法也很方便,方法的初始化器,如上图所示,可以写出更多的表现力强的代码。你可以在一个Guava调用中完成当前Java Collections所需要的2个方法。</target>
        </trans-unit>
        <trans-unit id="8d47923f1cbb36ac3a5a8bb2f4b633fedd31b222" translate="yes" xml:space="preserve">
          <source>But the following operations returns just a List view of an ArrayList and not actual ArrayList.</source>
          <target state="translated">但是下面的操作只是返回一个ArrayList的List视图,而不是实际的ArrayList。</target>
        </trans-unit>
        <trans-unit id="bb46a0512987983a307df4629e6094b9c08da5ff" translate="yes" xml:space="preserve">
          <source>Create ArrayList from array</source>
          <target state="translated">从数组中创建数组列表</target>
        </trans-unit>
        <trans-unit id="55cec6035ea7cd683c88e52d9f5892d3f6e12cb5" translate="yes" xml:space="preserve">
          <source>Even though there are many perfectly written answers to this question, I will add my inputs.</source>
          <target state="translated">虽然这个问题有很多完美的答案,但我还是要补充一下我的投入。</target>
        </trans-unit>
        <trans-unit id="b56bc0c7117deede8ae48599b4c7c2af6ecca205" translate="yes" xml:space="preserve">
          <source>For A Mutable List</source>
          <target state="translated">对于一个可更改的列表</target>
        </trans-unit>
        <trans-unit id="cb87386ab9412d8e4c203ea1ce2bb60edbfb3790" translate="yes" xml:space="preserve">
          <source>For Educational Purposes: The Good ol' Manual Way</source>
          <target state="translated">用于教育目的。良好的手动方式</target>
        </trans-unit>
        <trans-unit id="6798c49e9b80213f237b24c89c618646bfc94382" translate="yes" xml:space="preserve">
          <source>For a Mutable List</source>
          <target state="translated">对于一个可更改的列表</target>
        </trans-unit>
        <trans-unit id="c518db1644f1c3a95b6977af509f1c2b7c6c5808" translate="yes" xml:space="preserve">
          <source>For an Immutable List</source>
          <target state="translated">对于一个不可更改的列表</target>
        </trans-unit>
        <trans-unit id="6317d7eb41a522fbd75319c35fca4a417b35e665" translate="yes" xml:space="preserve">
          <source>For more detail you can refer to &lt;a href=&quot;http://javarevisited.blogspot.in/2011/06/converting-array-to-arraylist-in-java.html&quot;&gt;http://javarevisited.blogspot.in/2011/06/converting-array-to-arraylist-in-java.html&lt;/a&gt;</source>
          <target state="translated">有关更多详细信息，请参阅&lt;a href=&quot;http://javarevisited.blogspot.in/2011/06/converting-array-to-arraylist-in-java.html&quot;&gt;http://javarevisited.blogspot.in/2011/06/converting-array-to-arraylist-in-java.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4995b03bb76a28d266ae0e6878f17f62e4353375" translate="yes" xml:space="preserve">
          <source>Fortunately the JDK implementation is fast and &lt;code&gt;Arrays.asList(a[])&lt;/code&gt; is very well done. It create a kind of ArrayList named Arrays.ArrayList where the Object[] data points directly to the array.</source>
          <target state="translated">幸运的是，JDK实现非常快，并且 &lt;code&gt;Arrays.asList(a[])&lt;/code&gt; 做得很好。 它创建一种名为Arrays.ArrayList的ArrayList，其中Object []数据直接指向该数组。</target>
        </trans-unit>
        <trans-unit id="4975cd64a92e88880758085eef7772db2bdb4f4d" translate="yes" xml:space="preserve">
          <source>Given:</source>
          <target state="translated">Given:</target>
        </trans-unit>
        <trans-unit id="f7ff9e8b7bb2e09b70935a5d785e0cc5d9d0abf0" translate="yes" xml:space="preserve">
          <source>Hello</source>
          <target state="translated">Hello</target>
        </trans-unit>
        <trans-unit id="910f96951b7a91ba2dfaefacbe9558bf86f578e0" translate="yes" xml:space="preserve">
          <source>However it's better always use the interface:</source>
          <target state="translated">然而,最好总是使用界面。</target>
        </trans-unit>
        <trans-unit id="b4774e6ebd900d7ee57aac2fc27964b74209e88b" translate="yes" xml:space="preserve">
          <source>I have an array that is initialized like:</source>
          <target state="translated">我有一个数组是这样初始化的。</target>
        </trans-unit>
        <trans-unit id="489056af7da65c50784f0f80798a4ba7b77aa6cd" translate="yes" xml:space="preserve">
          <source>I love to use &lt;code&gt;Collections&lt;/code&gt;, &lt;code&gt;Arrays&lt;/code&gt;, or Guava. But if it don't fit, or you don't feel it, just write another inelegant line instead.</source>
          <target state="translated">我喜欢使用 &lt;code&gt;Collections&lt;/code&gt; ， &lt;code&gt;Arrays&lt;/code&gt; 或Guava。 但是，如果它不合适或您感觉不到，则只需改写另一条优雅的行即可。</target>
        </trans-unit>
        <trans-unit id="c3c3ccdd7ab586a11d712daa5812f2dfa54edf34" translate="yes" xml:space="preserve">
          <source>I would like to convert this array into an object of the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html&quot;&gt;&lt;code&gt;ArrayList&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">我想将此数组转换为&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html&quot;&gt; &lt;code&gt;ArrayList&lt;/code&gt; &lt;/a&gt;类的对象。</target>
        </trans-unit>
        <trans-unit id="a2532bc9ed0c0e0fa544de8f817764604bda711d" translate="yes" xml:space="preserve">
          <source>If You Can't...</source>
          <target state="translated">如果你不能.....</target>
        </trans-unit>
        <trans-unit id="c60e904065c51b655cedff0205733c91ab3fb109" translate="yes" xml:space="preserve">
          <source>If You Can, Use Guava</source>
          <target state="translated">如果可以,就用石榴</target>
        </trans-unit>
        <trans-unit id="7ea1026b3ba5e93eb23c4ac9f2715d49c8e5b7b6" translate="yes" xml:space="preserve">
          <source>If not, the most understandable way is to do this :</source>
          <target state="translated">如果没有,最容易理解的方法是这样做。</target>
        </trans-unit>
        <trans-unit id="1b1777513c4a56aa5555565ee7b2d0c8dc234624" translate="yes" xml:space="preserve">
          <source>If the array is of a primitive type, the given answers won't work. But since Java 8 you can use:</source>
          <target state="translated">如果数组是基元类型的,那么给定的答案将不起作用。但自从Java 8开始,你可以使用:</target>
        </trans-unit>
        <trans-unit id="d54231b2a573c62f741b9c8227d1b63f49d676d7" translate="yes" xml:space="preserve">
          <source>If we see the definition of &lt;code&gt;Arrays.asList()&lt;/code&gt; method you will get something like this:</source>
          <target state="translated">如果我们看到 &lt;code&gt;Arrays.asList()&lt;/code&gt; 方法的定义，您将得到以下内容：</target>
        </trans-unit>
        <trans-unit id="5a60b1ac823fcaa6316d16f6d82e04c67c686e68" translate="yes" xml:space="preserve">
          <source>If you see declaration for &lt;code&gt;java.util.Collections.addAll()&lt;/code&gt; method you will get something like this:</source>
          <target state="translated">如果看到 &lt;code&gt;java.util.Collections.addAll()&lt;/code&gt; 方法的声明，您将得到类似以下内容：</target>
        </trans-unit>
        <trans-unit id="98d8199108d84fe0f14808410092cf0049556e9a" translate="yes" xml:space="preserve">
          <source>If you use :</source>
          <target state="translated">如果您使用 :</target>
        </trans-unit>
        <trans-unit id="9ae135b8a6b978c83d3a4808b1e740481640da4a" translate="yes" xml:space="preserve">
          <source>Immutable collection creation :: When you don't want to modify the collection object after creation</source>
          <target state="translated">不可变的集合创建::当你不想在创建后修改集合对象时。</target>
        </trans-unit>
        <trans-unit id="b7567251aa123cef5b9285727b4a21303b990669" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#Java_SE_9&quot;&gt;Java 9&lt;/a&gt;, you can use &lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/List.html#of-E-E-E-&quot;&gt;&lt;code&gt;List.of&lt;/code&gt;&lt;/a&gt; static factory method in order to create a &lt;code&gt;List&lt;/code&gt; literal. Something like the following:</source>
          <target state="translated">在&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_version_history#Java_SE_9&quot;&gt;Java 9中&lt;/a&gt; ，可以使用&lt;a href=&quot;https://docs.oracle.com/javase/9/docs/api/java/util/List.html#of-E-E-E-&quot;&gt; &lt;code&gt;List.of&lt;/code&gt; &lt;/a&gt;静态工厂方法来创建 &lt;code&gt;List&lt;/code&gt; 文字。 类似于以下内容：</target>
        </trans-unit>
        <trans-unit id="e83b98eaecd1f582ab703758d4723c13ab1af0b7" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Java 9&lt;/code&gt; you can use:</source>
          <target state="translated">在 &lt;code&gt;Java 9&lt;/code&gt; 中,您可以使用：</target>
        </trans-unit>
        <trans-unit id="278fa8cbf16218e0d49a65c3ed7dbd142d2114f2" translate="yes" xml:space="preserve">
          <source>It forbids modifications through some of the &lt;code&gt;List&lt;/code&gt; API's methods by way of simply extending an &lt;code&gt;AbstractList&lt;/code&gt; (so, adding or removing elements is unsupported), however it allows calls to &lt;code&gt;set()&lt;/code&gt; to override elements. Thus this list isn't truly immutable and a call to &lt;code&gt;asList()&lt;/code&gt; should be wrapped with &lt;code&gt;Collections.unmodifiableList()&lt;/code&gt;.</source>
          <target state="translated">它禁止通过某些 &lt;code&gt;List&lt;/code&gt; API的方法通过简单地扩展 &lt;code&gt;AbstractList&lt;/code&gt; 的方式进行修改（因此，不支持添加或删除元素），但是它允许调用 &lt;code&gt;set()&lt;/code&gt; 来覆盖元素。 因此，此列表并非真正不变，因此应使用 &lt;code&gt;Collections.unmodifiableList()&lt;/code&gt; 包装对 &lt;code&gt;asList()&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="68ea1d0dba80fb87a8c2c7bc11b595268940fd31" translate="yes" xml:space="preserve">
          <source>It's worth pointing out the Guava way, which greatly simplifies these shenanigans:</source>
          <target state="translated">值得指出的是,石榴的方式,大大简化了这些诡计。</target>
        </trans-unit>
        <trans-unit id="d428ada67860a9918a72f1319c195859f7748eda" translate="yes" xml:space="preserve">
          <source>JEP 269: Convenience Factory Methods for Collections</source>
          <target state="translated">JEP 269:JEP 269:便利工厂的收款方法</target>
        </trans-unit>
        <trans-unit id="93e3eacff2e082a56024c3cb6fbe4505d1213946" translate="yes" xml:space="preserve">
          <source>Java 8&amp;rsquo;s Arrays class provides a stream() method which has overloaded versions accepting both primitive arrays and Object arrays.</source>
          <target state="translated">Java 8的Arrays类提供了stream（）方法，该方法具有接受原始数组和对象数组的重载版本。</target>
        </trans-unit>
        <trans-unit id="ab994d56aa86e444fa4e74d952e3f0b12739c889" translate="yes" xml:space="preserve">
          <source>Java 9</source>
          <target state="translated">Java 9</target>
        </trans-unit>
        <trans-unit id="da7284a98307aa46a9a33aa051e9b6e8d9f0470e" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;myArray&lt;/code&gt; is the same type as &lt;code&gt;T&lt;/code&gt;. You'll get a compiler error if you try to create a &lt;code&gt;List&amp;lt;Integer&amp;gt;&lt;/code&gt; from an array of &lt;code&gt;int&lt;/code&gt;, for example.</source>
          <target state="translated">确保 &lt;code&gt;myArray&lt;/code&gt; 与 &lt;code&gt;T&lt;/code&gt; 是相同的类型。 例如，如果尝试从 &lt;code&gt;int&lt;/code&gt; 数组创建 &lt;code&gt;List&amp;lt;Integer&amp;gt;&lt;/code&gt; ，则会出现编译器错误。</target>
        </trans-unit>
        <trans-unit id="60806d6e1cd6fad57126f564546fd544a8aa6f94" translate="yes" xml:space="preserve">
          <source>More on List representation of array &lt;a href=&quot;https://stackoverflow.com/questions/43187083/benefits-of-creating-a-list-using-arrays-aslist&quot;&gt;link&lt;/a&gt;.</source>
          <target state="translated">有关数组&lt;a href=&quot;https://stackoverflow.com/questions/43187083/benefits-of-creating-a-list-using-arrays-aslist&quot;&gt;链接的&lt;/a&gt;列表表示的更多信息。</target>
        </trans-unit>
        <trans-unit id="e70df6edef171f51963ab12bfc15983e41b06fd8" translate="yes" xml:space="preserve">
          <source>Mutable collection creation :: When you may want to modify the created collection object after creation.</source>
          <target state="translated">可互换集合的创建::当你可能想在创建后修改已创建的集合对象。</target>
        </trans-unit>
        <trans-unit id="4937210990bb5ba1d320b0a7a7236d42431b52bb" translate="yes" xml:space="preserve">
          <source>New ArrayList can be created in the following ways</source>
          <target state="translated">新的数组列表可以通过以下方式创建</target>
        </trans-unit>
        <trans-unit id="8af295b8d3b352e0fb2f5e97eec7875b9593baa1" translate="yes" xml:space="preserve">
          <source>Note that the returned type for &lt;code&gt;asList()&lt;/code&gt; is a &lt;code&gt;List&lt;/code&gt; using a concrete &lt;code&gt;ArrayList&lt;/code&gt; implementation, but &lt;strong&gt;it is NOT&lt;/strong&gt;&lt;code&gt;java.util.ArrayList&lt;/code&gt;. It's an inner type, which emulates an &lt;code&gt;ArrayList&lt;/code&gt; but actually directly references the passed array and makes it &quot;write through&quot; (modifications are reflected in the array).</source>
          <target state="translated">请注意，返回的 &lt;code&gt;asList()&lt;/code&gt; 类型是使用具体 &lt;code&gt;ArrayList&lt;/code&gt; 实现的 &lt;code&gt;List&lt;/code&gt; ，但&lt;strong&gt;不是&lt;/strong&gt; &lt;code&gt;java.util.ArrayList&lt;/code&gt; 。 这是一个内部类型，它模拟 &lt;code&gt;ArrayList&lt;/code&gt; ,但实际上直接引用传递的数组并使它&amp;ldquo;直写&amp;rdquo;（修改反映在数组中）。</target>
        </trans-unit>
        <trans-unit id="3c52b1cffad0a53918650e84c042c989af91e254" translate="yes" xml:space="preserve">
          <source>Or as said @glglgl, you can create another independant ArrayList with :</source>
          <target state="translated">或者像@glglglglglgl说的那样,你可以用.NET Framework.NET创建另一个独立的ArrayList。</target>
        </trans-unit>
        <trans-unit id="cf22996f8dd491ddaa900ef6d32eafa32b31e974" translate="yes" xml:space="preserve">
          <source>Output is...</source>
          <target state="translated">输出是.....</target>
        </trans-unit>
        <trans-unit id="d65713d5a91b13d0fa38c5631f2f80906eddc3c3" translate="yes" xml:space="preserve">
          <source>Please also note the similar methods for other data structures in other classes, for instance in &lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Sets.java&quot;&gt;&lt;code&gt;Sets&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">还请注意其他类（例如&lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Sets.java&quot;&gt; &lt;code&gt;Sets&lt;/code&gt; )中&lt;/a&gt;其他数据结构的类似方法。</target>
        </trans-unit>
        <trans-unit id="358b3c17a9df55e717acb5abbd5e5d045e791086" translate="yes" xml:space="preserve">
          <source>Same as above, but wrapped with an actual &lt;code&gt;java.util.ArrayList&lt;/code&gt;:</source>
          <target state="translated">与上述相同，但使用实际的 &lt;code&gt;java.util.ArrayList&lt;/code&gt; 包装：</target>
        </trans-unit>
        <trans-unit id="4d4b8a23213e549dc605819e685badc539ba1eca" translate="yes" xml:space="preserve">
          <source>Say you have &lt;code&gt;Element[] array = { new Element(1), new Element(2), new Element(3) };&lt;/code&gt;</source>
          <target state="translated">假设您有 &lt;code&gt;Element[] array = { new Element(1), new Element(2), new Element(3) };&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c4c57d2de5343a338b898ba059d53dc507504fa9" translate="yes" xml:space="preserve">
          <source>See the next step if you need a mutable list.</source>
          <target state="translated">如果你需要突变列表,请看下一步。</target>
        </trans-unit>
        <trans-unit id="374746167a97c2dc04667bfabcece01028932223" translate="yes" xml:space="preserve">
          <source>Simplest way to do so is by adding following code. Tried and Tested.</source>
          <target state="translated">最简单的方法是添加以下代码。经过测试。</target>
        </trans-unit>
        <trans-unit id="3cb8a85a9802a1d9486fddcf6dca428f95553375" translate="yes" xml:space="preserve">
          <source>Since Java 8 there is an easier way to transform:</source>
          <target state="translated">由于Java 8有一个更简单的改造方法。</target>
        </trans-unit>
        <trans-unit id="2d5f13aecf8cd0e0c80dd962dee97f85e7f0ce3e" translate="yes" xml:space="preserve">
          <source>Since this question is pretty old, it surprises me that nobody suggested the simplest form yet:</source>
          <target state="translated">因为这个问题已经很老了,没想到还没有人提出最简单的形式。</target>
        </trans-unit>
        <trans-unit id="00c08764d7eb1dd4c928db5068b732194c2eab45" translate="yes" xml:space="preserve">
          <source>So, Here I will give short example for two use cases.</source>
          <target state="translated">所以,这里我就举两个用例来简单说明一下。</target>
        </trans-unit>
        <trans-unit id="c0861646d613a192ebaa8d73142cabaae8db82f3" translate="yes" xml:space="preserve">
          <source>So, this code is also useful to do so</source>
          <target state="translated">所以,这段代码也是很好用的,可以这么做</target>
        </trans-unit>
        <trans-unit id="1a6892fc5d4b805d3c2ecdc87d782d8f1d9f5e8c" translate="yes" xml:space="preserve">
          <source>So, you might initialize &lt;code&gt;arraylist&lt;/code&gt; like this:</source>
          <target state="translated">因此，您可以像这样初始化 &lt;code&gt;arraylist&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="641a78617d5f3e336db6a161acc5f88ed2367b3d" translate="yes" xml:space="preserve">
          <source>The dangerous side is that &lt;strong&gt;if you change the initial array, you change the List !&lt;/strong&gt; Are you sure you want that ? Maybe yes, maybe not.</source>
          <target state="translated">危险的一面是， &lt;strong&gt;如果更改初始数组，则更改List！&lt;/strong&gt; 确定要吗？ 可能是可能不是。</target>
        </trans-unit>
        <trans-unit id="29bb40b0f5bd08cfd23f01c6af96fdebb7d9a5c2" translate="yes" xml:space="preserve">
          <source>The list returned from &lt;code&gt;asList()&lt;/code&gt; is backed by the original array.  If you modify the original array, the list will be modified as well.  This may be surprising.</source>
          <target state="translated">从 &lt;code&gt;asList()&lt;/code&gt; 返回的列表由原始数组支持。 如果您修改原始数组，则列表也会被修改。 这可能令人惊讶。</target>
        </trans-unit>
        <trans-unit id="21ee5afaa980de511bb99b0dc1f832fa117188b8" translate="yes" xml:space="preserve">
          <source>The list returned from asList has &lt;strong&gt;fixed size&lt;/strong&gt;.  So, if you want to be able to add or remove elements from the returned list in your code, you'll need to wrap it in a new &lt;code&gt;ArrayList&lt;/code&gt;.  Otherwise you'll get an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">从asList返回的列表具有&lt;strong&gt;固定大小&lt;/strong&gt; 。 因此，如果您希望能够在代码中的返回列表中添加或删除元素，则需要将其包装在新的 &lt;code&gt;ArrayList&lt;/code&gt; 中 。 否则，您将收到 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4337f04aeb488665906b2f40b45af14c0b5f94e7" translate="yes" xml:space="preserve">
          <source>The main attraction could be to reduce the clutter due to generics for type-safety, as the use of the Guava &lt;a href=&quot;http://code.google.com/p/guava-libraries/wiki/CollectionUtilitiesExplained#Static_constructors&quot;&gt;factory methods&lt;/a&gt; allow the types to be inferred most of the time. However, this argument holds less water since Java 7 arrived with the new diamond operator.</source>
          <target state="translated">主要的吸引力可能是减少由于类型安全的泛型而造成的混乱，因为使用番石榴&lt;a href=&quot;http://code.google.com/p/guava-libraries/wiki/CollectionUtilitiesExplained#Static_constructors&quot;&gt;工厂方法&lt;/a&gt;可以在大多数时间推断类型。 但是，自从Java 7随新的Diamond运算符一起出现以来，这种争论就没有那么多了。</target>
        </trans-unit>
        <trans-unit id="840a436d443fc6c0bd10a906f67e02decbb0609a" translate="yes" xml:space="preserve">
          <source>The simplest answer is to do:</source>
          <target state="translated">最简单的答案是做。</target>
        </trans-unit>
        <trans-unit id="6efab02db44f967bd95b4588d14ae5fbdd227074" translate="yes" xml:space="preserve">
          <source>There is no guarantee that the object will actually be of class &lt;code&gt;ArrayList&lt;/code&gt;. If you need that guarantee, do this:</source>
          <target state="translated">无法保证该对象实际上是 &lt;code&gt;ArrayList&lt;/code&gt; 类。 如果需要保证，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="636b4dc927af51b52275857fbdccdf6c42213821" translate="yes" xml:space="preserve">
          <source>There might be another answer for this question too.</source>
          <target state="translated">这个问题可能还有另一个答案。</target>
        </trans-unit>
        <trans-unit id="4baf066f30b88f0c9642dd55f6dbbbfdc6a4ca7a" translate="yes" xml:space="preserve">
          <source>Therefore, they will give error when trying to make some ArrayList operations</source>
          <target state="translated">因此,当试图进行一些ArrayList操作时,它们会出现错误。</target>
        </trans-unit>
        <trans-unit id="d82b06291a651c647124ca9cee89faf90f5147aa" translate="yes" xml:space="preserve">
          <source>This will work fine.  But some caveats:</source>
          <target state="translated">这样做就可以了。但要注意一些注意事项。</target>
        </trans-unit>
        <trans-unit id="dc3eba237c7cf2053b645bc3b346db75683a429b" translate="yes" xml:space="preserve">
          <source>This would return an &lt;a href=&quot;https://en.wikipedia.org/wiki/Immutable_object&quot;&gt;&lt;strong&gt;&lt;em&gt;immutable&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; list containing three elements. If you want a &lt;strong&gt;&lt;em&gt;mutable&lt;/em&gt;&lt;/strong&gt; list, pass that list to the &lt;code&gt;ArrayList&lt;/code&gt; constructor:</source>
          <target state="translated">这将返回一个包含三个元素的&lt;a href=&quot;https://en.wikipedia.org/wiki/Immutable_object&quot;&gt;&lt;strong&gt;&lt;em&gt;不可变&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;列表。 如果您想要一个&lt;strong&gt;&lt;em&gt;可变&lt;/em&gt;&lt;/strong&gt;列表，则将该列表传递给 &lt;code&gt;ArrayList&lt;/code&gt; 构造函数：</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="0be377c7eef2d55ed7e4a8f226fd171c393a3633" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java&quot;&gt;&lt;code&gt;ImmutableList&lt;/code&gt;&lt;/a&gt; class and its &lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L101&quot;&gt;&lt;code&gt;of()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L225&quot;&gt;&lt;code&gt;copyOf()&lt;/code&gt;&lt;/a&gt; factory methods &lt;sup&gt;(elements can't be null)&lt;/sup&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java&quot;&gt; &lt;code&gt;ImmutableList&lt;/code&gt; &lt;/a&gt;类及其&lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L101&quot;&gt; &lt;code&gt;of()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/ImmutableList.java#L225&quot;&gt; &lt;code&gt;copyOf()&lt;/code&gt; &lt;/a&gt;工厂方法&lt;sup&gt;（元素不能为null）&lt;/sup&gt; ：</target>
        </trans-unit>
        <trans-unit id="99ab97408967acb971b5bc6f7868d6e0b38da7be" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java&quot;&gt;&lt;code&gt;Lists&lt;/code&gt;&lt;/a&gt; class and its &lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java#L87&quot;&gt;&lt;code&gt;newArrayList()&lt;/code&gt;&lt;/a&gt; factory methods:</source>
          <target state="translated">使用&lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java&quot;&gt; &lt;code&gt;Lists&lt;/code&gt; &lt;/a&gt;类及其&lt;a href=&quot;https://github.com/google/guava/blob/master/guava/src/com/google/common/collect/Lists.java#L87&quot;&gt; &lt;code&gt;newArrayList()&lt;/code&gt; &lt;/a&gt;工厂方法：</target>
        </trans-unit>
        <trans-unit id="dcba10e0d2d5781546fa406b4d574cb10c7975fb" translate="yes" xml:space="preserve">
          <source>Use the JDK's &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html&quot;&gt;&lt;code&gt;Arrays&lt;/code&gt;&lt;/a&gt; class and its &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#asList%28T...%29&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; factory method, wrapped with a &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#unmodifiableList%28java.util.List%29&quot;&gt;&lt;code&gt;Collections.unmodifiableList()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用JDK的&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html&quot;&gt; &lt;code&gt;Arrays&lt;/code&gt; &lt;/a&gt;类及其&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Arrays.html#asList%28T...%29&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; &lt;/a&gt;工厂方法，并用&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#unmodifiableList%28java.util.List%29&quot;&gt; &lt;code&gt;Collections.unmodifiableList()&lt;/code&gt; &lt;/a&gt;包装：</target>
        </trans-unit>
        <trans-unit id="aec4a80ca6eee75f469f008c65a4f866789bd956" translate="yes" xml:space="preserve">
          <source>Use the following code to convert an element array into an ArrayList.</source>
          <target state="translated">使用下面的代码将一个元素数组转换为ArrayList。</target>
        </trans-unit>
        <trans-unit id="3474f63056db5bd42198df04253aa7aa104c7bd8" translate="yes" xml:space="preserve">
          <source>We can easily convert an array to &lt;code&gt;ArrayList&lt;/code&gt;.
We use Collection interface's &lt;code&gt;addAll()&lt;/code&gt; method for the purpose of copying content from one list to another.</source>
          <target state="translated">我们可以轻松地将数组转换为 &lt;code&gt;ArrayList&lt;/code&gt; 。 我们使用Collection接口的 &lt;code&gt;addAll()&lt;/code&gt; 方法来将内容从一个列表复制到另一个列表。</target>
        </trans-unit>
        <trans-unit id="e4bd01a2df5f7a6defd6c408d945fdf71336a0c7" translate="yes" xml:space="preserve">
          <source>Why Guava?</source>
          <target state="translated">为什么是石榴?</target>
        </trans-unit>
        <trans-unit id="2f87a94597835d6ab7a6946872546fd74a5bbc0d" translate="yes" xml:space="preserve">
          <source>You also can do it with stream in Java 8.</source>
          <target state="translated">你也可以用Java 8中的流媒体来做。</target>
        </trans-unit>
        <trans-unit id="12dd80890a066d28dc8ad725395340354a998a45" translate="yes" xml:space="preserve">
          <source>You can convert using different methods</source>
          <target state="translated">你可以使用不同的方法进行转换</target>
        </trans-unit>
        <trans-unit id="659ba4d47965f130f8b5e87cbd2f27a40475f0f8" translate="yes" xml:space="preserve">
          <source>You can create an &lt;code&gt;ArrayList&lt;/code&gt; using &lt;a href=&quot;http://www.cactoos.org&quot;&gt;Cactoos&lt;/a&gt; (I'm one of the developers):</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://www.cactoos.org&quot;&gt;Cactoos&lt;/a&gt;创建 &lt;code&gt;ArrayList&lt;/code&gt; （我是开发人员之一）：</target>
        </trans-unit>
        <trans-unit id="1198b75340b73cc9d05513a7fa4f63670acec015" translate="yes" xml:space="preserve">
          <source>You can do it in java 8 as follows</source>
          <target state="translated">你可以在java 8中进行如下操作</target>
        </trans-unit>
        <trans-unit id="de2a9e345b0c261a3a3fff27ea9505b8b03d0860" translate="yes" xml:space="preserve">
          <source>You probably just need a List, not an ArrayList.  In that case you can just do:</source>
          <target state="translated">你可能只需要一个List,而不是一个ArrayList。在这种情况下,你可以直接做。</target>
        </trans-unit>
        <trans-unit id="b94fd054a92499944db0f317a52118892228f5e1" translate="yes" xml:space="preserve">
          <source>also in Java 9 it's a little bit easy:</source>
          <target state="translated">也是在Java 9中,它有点容易。</target>
        </trans-unit>
        <trans-unit id="ae06032282695639c4e4f07750d8b27ba70300f2" translate="yes" xml:space="preserve">
          <source>and the common newest way to create array is &lt;strong&gt;observableArrays&lt;/strong&gt;</source>
          <target state="translated">创建数组的最常见的最新方法是&lt;strong&gt;observableArrays&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="601f9603b5a145f80a10350d7a726681f5748433" translate="yes" xml:space="preserve">
          <source>as all said this will do so</source>
          <target state="translated">如是说来</target>
        </trans-unit>
        <trans-unit id="138078261bddfafa47efd0d260bc862c574f795a" translate="yes" xml:space="preserve">
          <source>for Java SE you can try</source>
          <target state="translated">对于Java SE,你可以尝试</target>
        </trans-unit>
        <trans-unit id="95eb570201e5431d654286b99cc3c32e47657684" translate="yes" xml:space="preserve">
          <source>observableArrayList()
  Creates a new empty observable list that is backed by an arraylist.
  observableArrayList(E... items)
  Creates a new observable array list with items added to it.</source>
          <target state="translated">observableArrayList()创建一个新的可观察的空列表,该列表由数组列表支持。 observableArrayList(E...项)创建一个新的可观察的数组列表,并将项添加到其中。</target>
        </trans-unit>
        <trans-unit id="41798c1b73ce6f5c7fc33c62895a88e11ceb5ea2" translate="yes" xml:space="preserve">
          <source>that is according to &lt;a href=&quot;https://docs.oracle.com/javase/8/javafx/api/javafx/collections/FXCollections.html&quot;&gt;Oracle Docs&lt;/a&gt;</source>
          <target state="translated">这是根据&lt;a href=&quot;https://docs.oracle.com/javase/8/javafx/api/javafx/collections/FXCollections.html&quot;&gt;Oracle Docs&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c211433f02071597741e6ff5a8ea34789abbf43" translate="yes" xml:space="preserve">
          <source>world</source>
          <target state="translated">world</target>
        </trans-unit>
        <trans-unit id="52e1b56f52ba9e1c2459b76aae686a62e0a5149e" translate="yes" xml:space="preserve">
          <source>you &lt;strong&gt;may&lt;/strong&gt; create &lt;strong&gt;and fill&lt;/strong&gt; two lists ! Filling twice a big list is exactly what you don't want to do because it will create another &lt;code&gt;Object[]&lt;/code&gt; array each time the capacity needs to be extended.</source>
          <target state="translated">您&lt;strong&gt;可以&lt;/strong&gt;创建&lt;strong&gt;并填写&lt;/strong&gt;两个列表！ 填充两次大列表确实是您不希望执行的操作，因为每次需要扩展容量时，它都会创建另一个 &lt;code&gt;Object[]&lt;/code&gt; 数组。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
