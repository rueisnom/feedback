<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/15182496">
    <body>
      <group id="15182496">
        <trans-unit id="688bb00c52ee8db12a4c9db300233ff399080780" translate="yes" xml:space="preserve">
          <source>&amp;lambda; = floor[32/log₂(27)] - 1 = 5</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;lambda;= floor [32 /log₂（27）]-1 = 5&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2988e3a82082ebc0177cb8460086b303ddda966d" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://ideone.com/RnDYd2&quot;&gt;Demo on ideone.&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ideone.com/RnDYd2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ideoneのデモ。&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdffa6a6e5c8a2c295be9603d1d95ff643248283" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;randomString()&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;randomString()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は次のようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fef1886d6f17700a90a018cc57db7d852ec1126" translate="yes" xml:space="preserve">
          <source>As multi-threading is very easy with Java, here is a variant that searches for a seed using all cores available: &lt;a href=&quot;http://ideone.com/ROhmTA&quot;&gt;http://ideone.com/ROhmTA&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マルチスレッドはJavaで非常に簡単なので、利用可能なすべてのコアを使用してシードを検索するバリアントを次に示します&lt;/font&gt;&lt;a href=&quot;http://ideone.com/ROhmTA&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//ideone.com/ROhmTA&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cb899fb036c48b55c9494fc26f0fa33630d0b35e" translate="yes" xml:space="preserve">
          <source>Derived from &lt;a href=&quot;https://stackoverflow.com/a/15187009/1208581&quot;&gt;Denis Tulskiy&lt;/a&gt;'s answer, this method generates the seed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由来&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/15187009/1208581&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デニスTulskiy&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の答えは、この方法では、シードを生成します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbb0d375d5d2441737b6221988ae4d19e007df74" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Random&lt;/code&gt; constructed with the same seed will generate the same pattern of numbers every time.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じシードで構築された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;毎回&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じパターンの数を生成します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9bda4e1f95e1a8b8ddf2c57b808ef45b84755176" translate="yes" xml:space="preserve">
          <source>Everyone here did a great job of explaining how the code works and showing how you can construct your own examples, but here's an information theoretical answer showing why we can reasonably expect a solution to exist that the brute force search will eventually find.</source>
          <target state="translated">ここでは誰もがコードがどのように機能するかを説明し、どのようにして独自の例を構築できるかを示してくれましたが、ここでは、ブルートフォース検索が最終的に見つけるであろう解決策が存在することを合理的に期待できる理由を示す情報理論的な答えを示しています。</target>
        </trans-unit>
        <trans-unit id="a394a859def9b115f6e2320f57cfe1ac0e7ee6cd" translate="yes" xml:space="preserve">
          <source>For 7 letters we're looking at closer to 1.52%, but I hadn't realized that before giving it a try:</source>
          <target state="translated">7文字の場合は1.52%に近い値を見ていますが、試してみる前は気がつきませんでした。</target>
        </trans-unit>
        <trans-unit id="84f911763c41a6e3ab0b273ea6856f03dc4f6eb2" translate="yes" xml:space="preserve">
          <source>For a word &lt;code&gt;&amp;omega; &amp;isin; &amp;Sigma;*&lt;/code&gt; and its &lt;code&gt;&amp;perp;-&lt;/code&gt;terminated counterpart &lt;code&gt;&amp;omega;' := &amp;omega; &amp;middot; &amp;perp; &amp;isin; (&amp;Sigma;')*&lt;/code&gt;, we have</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単語&lt;/font&gt; &lt;code&gt;&amp;perp;-&lt;/code&gt; &lt;/font&gt; &lt;code&gt;&amp;omega; &amp;isin; &amp;Sigma;*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とその&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;perp;で&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;終了する対応&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;語&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;omega; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;omega;' := &amp;omega; &amp;middot; &amp;perp; &amp;isin; (&amp;Sigma;')*&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;perp;&amp;isin; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&amp;Sigma;'）*&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;について、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44ed5c089eba0400d5be6c18b5a0f545ecdde4a3" translate="yes" xml:space="preserve">
          <source>From the Java docs, this is an intentional feature when specifying a seed value for the Random class.</source>
          <target state="translated">Javaのドキュメントによると、これはRandomクラスにシード値を指定する際に意図的な機能だそうです。</target>
        </trans-unit>
        <trans-unit id="cf3ec4e2e7e87864043049e98e91b27519ee80cb" translate="yes" xml:space="preserve">
          <source>Given an instance of &lt;code&gt;Random&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Random&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスがあるとします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6437818e66f8d56a837b1500144f582e2f096d5" translate="yes" xml:space="preserve">
          <source>Here is a minor improvement for Denis Tulskiy &lt;a href=&quot;https://stackoverflow.com/a/15187009/1129332&quot;&gt;answer&lt;/a&gt;. It cuts the time by half</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は、Denis Tulskiyの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/15187009/1129332&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マイナーな改善です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;時間を半分に短縮&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6671798ca2e74782524a66a5edcd59a4838f7e9f" translate="yes" xml:space="preserve">
          <source>I got 15131 hits.</source>
          <target state="translated">15131ヒットしました。</target>
        </trans-unit>
        <trans-unit id="d6876b2f961070ec4bbad0b6c1573c0aff37bf83" translate="yes" xml:space="preserve">
          <source>I have it running in the background now, but it's already found enough words for a classic pangram:</source>
          <target state="translated">今はバックグラウンドで実行しているが、すでに古典的なパングラムのために十分な単語が見つかっている。</target>
        </trans-unit>
        <trans-unit id="1568e8f6b0f1e00854fc7084bf68bcd4e04ffecd" translate="yes" xml:space="preserve">
          <source>I think that the code did not work for any other words. The guy that programmed that knows the random sequence very well.</source>
          <target state="translated">他の単語にはコードが効かなかったと思います。プログラムした奴は乱数列をよく知っていて</target>
        </trans-unit>
        <trans-unit id="7d223ba4fb784dec362dc81bd38397f2bb965776" translate="yes" xml:space="preserve">
          <source>I was intrigued by this, I ran this random  word generator on a dictionary word list.
Range: Integer.MIN_VALUE to Integer.MAX_VALUE</source>
          <target state="translated">これに興味をそそられた私は、辞書の単語リストでこのランダムな単語ジェネレータを実行しました。範囲は 整数.MIN_VALUEから整数.MAX_VALUEまで</target>
        </trans-unit>
        <trans-unit id="426c512c59e2cdc051947f4de7006dc9759e09e3" translate="yes" xml:space="preserve">
          <source>I wrote a quick program to find these seeds:</source>
          <target state="translated">これらの種を探すために、簡単なプログラムを書いてみました。</target>
        </trans-unit>
        <trans-unit id="8bcf70796ffd466b7fd7aaf268fb9266845e2207" translate="yes" xml:space="preserve">
          <source>I'll just leave it here. Whoever has a lot of (CPU) time to spare, feel free to experiment :) Also, if you have mastered some fork-join-fu to make this thing burn all CPU cores (just threads are boring, right?), please share your code. I would greatly appreciate it.</source>
          <target state="translated">ここに置いておきます。(CPUの)時間に余裕がある人は、遠慮なく実験してみてください :)また、もしあなたがこれをすべてのCPUコアを燃やすためのフォーク・ジョイン・フーをマスターしたならば(ただのスレッドはつまらないですよね)、あなたのコードを共有してください。私はそれを大いに感謝します。</target>
        </trans-unit>
        <trans-unit id="efee33f27f4ad1ad392a55e306df355046e27d31" translate="yes" xml:space="preserve">
          <source>I(&amp;alpha;) = -log₂[P(X = &amp;alpha;)] = -log₂(1/27) = log₂(27)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;I（&amp;alpha;）=-log₂[P（X =&amp;alpha;）] =-log₂（1/27）=log₂（27）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f3c207347029e37fe344f0d8fcd73531ec86b26" translate="yes" xml:space="preserve">
          <source>I(&amp;omega;) := I(&amp;omega;') = |&amp;omega;'| * log₂(27) = (|&amp;omega;| + 1) * log₂(27)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;I（&amp;omega;）：= I（&amp;omega; '）= |&amp;omega;' | &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*log₂（27）=（|&amp;omega;| + 1）*log₂（27）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2956c97d57d3e55dfdec9992ca5808585a0304f7" translate="yes" xml:space="preserve">
          <source>If two instances of Random are created with the same seed, and the
  same sequence of method calls is made for each, they will generate and
  return identical sequences of numbers. In order to guarantee this
  property, particular algorithms are specified for the class Random.
  Java implementations must use all the algorithms shown here for the
  class Random, for the sake of absolute portability of Java code.</source>
          <target state="translated">Random の 2 つのインスタンスが同じシードで作成され、それぞれに対して同じシーケンスのメソッド呼び出しが行われた場合、それらは同じ数列を生成して返します。この特性を保証するために、Random クラスには特定のアルゴリズムが指定されています。Java コードの絶対的な移植性のために、Java の実装では、Random クラスに対してここで示したすべてのアルゴリズムを使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="432928783f05bc96f3b86a7166a7080ab48cba4b" translate="yes" xml:space="preserve">
          <source>It is about &quot;seed&quot;. Same seeds give the same result.</source>
          <target state="translated">それは「種」についてです。同じ種でも同じ結果が得られます。</target>
        </trans-unit>
        <trans-unit id="97c2f01a3fbe0fad67808344a6d5712d30e92b42" translate="yes" xml:space="preserve">
          <source>It's all about the input &lt;strong&gt;seed&lt;/strong&gt;. Same seed give the same results all
  the time. Even you re-run  your program again and again it's the same output.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはすべて入力&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;シード&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関するもの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じ種はいつも同じ結果を与えます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プログラムを何度も再実行しても、同じ出力になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6fab977f8ee21836e2218e86a0daecd57ed90937" translate="yes" xml:space="preserve">
          <source>It's very great geek code!</source>
          <target state="translated">とても素晴らしいオトクなコードですね。</target>
        </trans-unit>
        <trans-unit id="533283f8f1664f9f0d562593cb0d2afe0c019db8" translate="yes" xml:space="preserve">
          <source>LCGs are quite predictable given a fixed seed. Basically, use a seed that gives you your first letter, then write an app that continues to generate the next int (char) until you hit the next letter in your target string and write down how many times you had to invoke the LCG. Continue until you've generated each and every letter.</source>
          <target state="translated">LCGは固定シードが与えられていれば、かなり予測可能です。基本的には、最初の文字を与えるシードを使用し、ターゲット文字列の次の文字にヒットするまで次のint(char)を生成し続けるアプリを書き、何回LCGを呼び出したかをメモします。すべての文字を生成するまで続けます。</target>
        </trans-unit>
        <trans-unit id="ce7f0be08f54b85b99462685b2f38b582e047279" translate="yes" xml:space="preserve">
          <source>Let &lt;code&gt;&amp;alpha;&lt;/code&gt; be a symbol and X a uniformly distributed random variable over &lt;code&gt;&amp;Sigma;'&lt;/code&gt;. The probability of obtaining that symbol, &lt;code&gt;P(X = &amp;alpha;)&lt;/code&gt;, and its information content, &lt;code&gt;I(&amp;alpha;)&lt;/code&gt;, are given by:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してみましょう&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;alpha;&lt;/code&gt; は、&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;シンボルとXの上に均一に分布する確率変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;Sigma;'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのシンボルを取得する確率&lt;/font&gt;&lt;/font&gt; &lt;code&gt;P(X = &amp;alpha;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とその情報コンテンツ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;I(&amp;alpha;)&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次の式で与えられます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e785a400a270f5943928a5b23d3f08ba5829b99" translate="yes" xml:space="preserve">
          <source>Most random number generators are, in fact, &quot;pseudo random.&quot; They are Linear Congruential Generators, or LCGs (&lt;a href=&quot;http://en.wikipedia.org/wiki/Linear_congruential_generator&quot;&gt;http://en.wikipedia.org/wiki/Linear_congruential_generator&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの乱数ジェネレータは、実際には「疑似乱数」です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらは線形合同生成器、またはLCG（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Linear_congruential_generator&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://en.wikipedia.org/wiki/Linear_congruential_generator&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f12f4cfc97e5e3701ded0191cd8ddaff00877d8" translate="yes" xml:space="preserve">
          <source>Odd though, you would think there are implicit security issues in having predictable 'random' numbers.</source>
          <target state="translated">予測可能な「乱数」を持つことに暗黙のセキュリティ上の問題があると思うだろうが、奇妙なことだ。</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="65eb99b73449c6006f3602c56fc15590fd8644b5" translate="yes" xml:space="preserve">
          <source>P(X = &amp;alpha;) = 1/|&amp;Sigma;'| = 1/27</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;P（X =&amp;alpha;）= 1 / |&amp;Sigma; '| &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;= 1/27&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a76cf9887b6f0853816551224e51090fbd36556" translate="yes" xml:space="preserve">
          <source>Prints</source>
          <target state="translated">Prints</target>
        </trans-unit>
        <trans-unit id="5b2074080e7d276688c753bf34c463bed573abae" translate="yes" xml:space="preserve">
          <source>Ps. &lt;code&gt;-727295876, -128911, -1611659, -235516779&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ps。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-727295876, -128911, -1611659, -235516779&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04eaeea4835696acdd1beb06fc21d380b38ad135" translate="yes" xml:space="preserve">
          <source>Random always return the same sequence. It's used for shuffling arrays and other operations as permutations.</source>
          <target state="translated">ランダムは常に同じ配列を返します。配列をシャッフルしたり、他の演算を順列にしたりするときに使われます。</target>
        </trans-unit>
        <trans-unit id="efdded6302c4a4ff729f7edd4b65957ade0a95cb" translate="yes" xml:space="preserve">
          <source>See the output: &lt;a href=&quot;http://ideone.com/JRGb3l&quot;&gt;http://ideone.com/JRGb3l&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出力を参照してください：&lt;/font&gt;&lt;a href=&quot;http://ideone.com/JRGb3l&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//ideone.com/JRGb3l&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e1e938c2b1ff5b48e2e5ca61d99f121b8163c31" translate="yes" xml:space="preserve">
          <source>Since the Pseudorandom Number Generator (PRNG) is initialized with a 32-bit seed, we can expect most words of length up to</source>
          <target state="translated">疑似乱数発生器(PRNG)は32ビットシードで初期化されているので、長さのほとんどのワードが</target>
        </trans-unit>
        <trans-unit id="d9b66e735d8f0a21b6b2cd72f26684e64671beb6" translate="yes" xml:space="preserve">
          <source>The 26 different lower-case letters form our alphabet &lt;code&gt;&amp;Sigma;&lt;/code&gt;. To allow generating words of different lengths, we further add a terminator symbol &lt;code&gt;&amp;perp;&lt;/code&gt; to yield an extended alphabet &lt;code&gt;&amp;Sigma;' := &amp;Sigma; &amp;cup; {&amp;perp;}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;26種類の小文字がアルファベット&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;Sigma;&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;形成します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;異なる長さの単語を生成できるようにするために、終端記号&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;perp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をさらに追加&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、拡張アルファベット&lt;/font&gt;&lt;/font&gt; &lt;code&gt;&amp;Sigma;' := &amp;Sigma; &amp;cup; {&amp;perp;}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="79fe83e7d283d814ddc5a97b515111049f249b5f" translate="yes" xml:space="preserve">
          <source>The first 6 numbers that &lt;code&gt;r.nextInt(27)&lt;/code&gt; generates are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;r.nextInt(27)&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の6つの数値は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のとおり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71acf4e29330e3f850d18d7a3cb42c78f5b3d7f6" translate="yes" xml:space="preserve">
          <source>The following print statement would print &quot;hello world&quot;.
Could anyone explain this?</source>
          <target state="translated">次のようなprint文では「hello world」と表示されてしまいます。誰かこれを説明してくれませんか?</target>
        </trans-unit>
        <trans-unit id="19a5e1c31bf075d76c077a859c4587a240d32b34" translate="yes" xml:space="preserve">
          <source>The other answers explain why, but here is how.</source>
          <target state="translated">他の回答では理由を説明していますが、ここではその方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="b9c29f4814c2ae9c9cb91d654ae12cfe2500f7e6" translate="yes" xml:space="preserve">
          <source>The principal is the Random Class constructed with the same seed will generate the same pattern of numbers every time.</source>
          <target state="translated">プリンシパルは、同じシードで構築されたランダムクラスは、毎回同じパターンの数字を生成します。</target>
        </trans-unit>
        <trans-unit id="47d67f2caaabffa0d30c05495a958e88aaa11dcb" translate="yes" xml:space="preserve">
          <source>The randomSting get the random number in the i position (seed = -229985452) of the &quot;random&quot; sequence. Then uses the &lt;a href=&quot;http://en.wikipedia.org/wiki/ASCII&quot;&gt;ASCII&lt;/a&gt; code for the next 27 character in the sequence after the seed position until this value are equal to 0. This return the &quot;hello&quot;. The same operation is done for &quot;world&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;randomStingは、「ランダム」シーケンスのi位置（シード= -229985452）の乱数を取得します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、シード位置の後のシーケンスの次の27文字&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ASCII&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ASCII&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この値が0になるまでこれを返します。これにより、「hello」が返されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じ操作が &quot;world&quot;に対しても行われます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3585c6ff97e0097a13d630258614ad60f498e8c" translate="yes" xml:space="preserve">
          <source>Then just add those numbers to the integer representation of the character &lt;code&gt;`&lt;/code&gt; (which is 96):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、それらの数値を文字&lt;/font&gt;&lt;/font&gt; &lt;code&gt;`&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数表現&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（96）に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3922d067b8df7c823ce0ff174d69273bc07636b8" translate="yes" xml:space="preserve">
          <source>To get different sequences, it's necessary initialize the sequence in some position, called &quot;seed&quot;.</source>
          <target state="translated">異なるシーケンスを取得するためには、シードと呼ばれるある位置でシーケンスを初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="efee92597d2aeca68aa64f2cf3f53667af332875" translate="yes" xml:space="preserve">
          <source>When an instance of &lt;code&gt;java.util.Random&lt;/code&gt; is constructed with a specific seed parameter (in this case &lt;code&gt;-229985452&lt;/code&gt; or &lt;code&gt;-147909649&lt;/code&gt;), it follows the random number generation algorithm &lt;em&gt;beginning&lt;/em&gt; with that seed value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;java.util.Random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のインスタンスが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特定のシードパラメータ（この場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-229985452&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-147909649&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構築されると、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのシード値で&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;始まる&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;乱数生成アルゴリズムに従い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45e53de7a5664af2c274b497dcd5126327f22242" translate="yes" xml:space="preserve">
          <source>Why does this code using random strings print “hello world”</source>
          <target state="translated">なぜこのコードはランダムな文字列を使って &quot;hello world&quot; と表示するのでしょうか?</target>
        </trans-unit>
        <trans-unit id="feb47ae72cf0c5003035615b660166260fa30185" translate="yes" xml:space="preserve">
          <source>and the first 6 numbers that &lt;code&gt;r.nextInt(27)&lt;/code&gt; generates given &lt;code&gt;Random r = new Random(-147909649)&lt;/code&gt; are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与えられた&lt;/font&gt; &lt;code&gt;Random r = new Random(-147909649)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;指定し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;r.nextInt(27)&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の6つの数値は次の&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とおり&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5de159bd6ca9169eb7b0f810558cbc9f4cc66b63" translate="yes" xml:space="preserve">
          <source>to be generated by at least one seed. Even if we were to search for a 6-character word, we would still be successful about 41.06% of the time. Not too shabby.</source>
          <target state="translated">が少なくとも1つのシードによって生成されます。6文字の単語を検索したとしても 約41.06%の確率で成功しています あまりにもみすぼらしいですね。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
