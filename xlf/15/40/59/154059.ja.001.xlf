<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/154059">
    <body>
      <group id="154059">
        <trans-unit id="bdfc33c4270853cf7d357e3aa5a4aae92ae4b072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;code&gt;&quot;a&quot;&lt;/code&gt;&lt;code&gt;&quot; &quot;&lt;/code&gt;- empty string, string with letter and string with space</source>
          <target state="translated">&lt;code&gt;&quot;&quot;&lt;/code&gt; &lt;code&gt;&quot;a&quot;&lt;/code&gt; &lt;code&gt;&quot; &quot;&lt;/code&gt; -空の文字列、文字付きの文字列とスペース付きの文字列</target>
        </trans-unit>
        <trans-unit id="21a6168ca22fe08a509239266fb9f46bca13a9f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;&lt;code&gt;1&lt;/code&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;code&gt;Infinity&lt;/code&gt; - numbers</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;code&gt;Infinity&lt;/code&gt; -数値</target>
        </trans-unit>
        <trans-unit id="0997a12418824f09293407063f7e05d491e8eedb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt;&lt;code&gt;{}&lt;/code&gt;&lt;code&gt;f&lt;/code&gt;- array, object and function</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; &lt;code&gt;{}&lt;/code&gt; &lt;code&gt;f&lt;/code&gt; -配列、オブジェクト、関数</target>
        </trans-unit>
        <trans-unit id="0199f44a7420f88b68ff32760279674cccb4633d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;&lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt;&lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00f1e6a1b7db4a0b9c668df953fedebd216b3e7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;&lt;code&gt;false&lt;/code&gt; - Boolean</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; &lt;code&gt;false&lt;/code&gt; -ブール</target>
        </trans-unit>
        <trans-unit id="54d43c52441fb7bd3ed00affd5f9186806533d64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4538870588f5b79ebc3044bf53373ff196863e0" translate="yes" xml:space="preserve">
          <source>A bit excessive, I know.</source>
          <target state="translated">ちょっとやり過ぎですよね。</target>
        </trans-unit>
        <trans-unit id="e1f556cdd024cd86231985a8dfd51eb5a3b2bcce" translate="yes" xml:space="preserve">
          <source>A lot of answers, and a lot of different possibilities!</source>
          <target state="translated">たくさんの答えがあって、いろいろな可能性が出てきますね!</target>
        </trans-unit>
        <trans-unit id="21c6ca749a159644fabed6263ef65c83f78e538b" translate="yes" xml:space="preserve">
          <source>All the previous answers are good, but this will be even better. Use the &lt;code&gt;!!&lt;/code&gt;(&lt;em&gt;not not&lt;/em&gt;) operator.</source>
          <target state="translated">以前のすべての答えは良いですが、これはさらに良いでしょう。 使用してください &lt;code&gt;!!&lt;/code&gt; （で&lt;em&gt;はない&lt;/em&gt; ）演算子。</target>
        </trans-unit>
        <trans-unit id="4926738125811b6f1c34f95d5e32e7258e2be1c0" translate="yes" xml:space="preserve">
          <source>All these answers are nice.</source>
          <target state="translated">どれも素敵な回答ばかりです。</target>
        </trans-unit>
        <trans-unit id="806be928f82755c49801cae219224f4ac85dcf0f" translate="yes" xml:space="preserve">
          <source>Also, in case you consider a whitespace filled string as &quot;empty&quot;.</source>
          <target state="translated">また、空白で埋められた文字列を「空」と考える場合に備えて。</target>
        </trans-unit>
        <trans-unit id="5759af978fba1c233efd4d144f158b89b62066dd" translate="yes" xml:space="preserve">
          <source>And then for all methods I perform speed test case &lt;code&gt;str = &quot;&quot;&lt;/code&gt; for browsers Chrome v78.0.0, Safari v13.0.4, and Firefox v71.0.0 - you can run tests on your machine &lt;a href=&quot;https://jsperf.com/empty-string-checking/1&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">そして、すべてのメソッドについて、速度テストケース &lt;code&gt;str = &quot;&quot;&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="7dab0608a171a536a94e84b267156c2e4afb71f7" translate="yes" xml:space="preserve">
          <source>As of now there is no direct method like string.empty to check whether a string is empty or not. But in your code you can use a wrapper check for an empty string like:</source>
          <target state="translated">現在のところ、文字列が空かどうかをチェックするstring.emptyのような直接的なメソッドはありません。しかし、あなたのコードでは、次のような空文字列のラッパーチェックを使うことができます。</target>
        </trans-unit>
        <trans-unit id="158d49add5db36264d365aac641407cbc286f90e" translate="yes" xml:space="preserve">
          <source>As per the comment from &lt;a href=&quot;https://stackoverflow.com/users/20310/constantin&quot;&gt;Constantin&lt;/a&gt;, if strVar could some how end up containing an integer 0 value, then that would indeed be one of those intention-clarifying situations.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/users/20310/constantin&quot;&gt;Constantin&lt;/a&gt;のコメントのとおり、strVarに整数0の値が含まれる場合は、意図を明確にする状況の1つになります。</target>
        </trans-unit>
        <trans-unit id="7381419082e966c749a545dac09d9d4fe1d2b678" translate="yes" xml:space="preserve">
          <source>Both do the same function. Typecast the variable to Boolean, where &lt;code&gt;str&lt;/code&gt; is a variable.</source>
          <target state="translated">どちらも同じ機能を果たします。 変数をブール値に型キャストします。strは変数です。</target>
        </trans-unit>
        <trans-unit id="ac8ef2b99e3ca15964afeea9d763cbdf10922005" translate="yes" xml:space="preserve">
          <source>But I cannot be sure that variable is a string, doesn't contain only spaces (this is important for me), and can contain '0' (string).</source>
          <target state="translated">しかし、変数が文字列であること、スペースだけを含まないこと(これは私にとって重要です)、そして'0'(文字列)を含むことができることを確認することはできません。</target>
        </trans-unit>
        <trans-unit id="7d60d4307666d945384581c7f4657edff13a88fe" translate="yes" xml:space="preserve">
          <source>But it always returns &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;Number&lt;/code&gt; type of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;JavaScript primitive data types&lt;/a&gt; like &lt;code&gt;_.isEmpty(10)&lt;/code&gt; or &lt;code&gt;_.isEmpty(Number.MAX_VALUE)&lt;/code&gt; both returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ただし、 &lt;code&gt;_.isEmpty(10)&lt;/code&gt; や &lt;code&gt;_.isEmpty(Number.MAX_VALUE)&lt;/code&gt; のような&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;JavaScriptプリミティブデータ&lt;/a&gt;型の &lt;code&gt;Number&lt;/code&gt; タイプでは常に &lt;code&gt;true&lt;/code&gt; が返され &lt;code&gt;true&lt;/code&gt; 。どちらもtrueを返します 。</target>
        </trans-unit>
        <trans-unit id="53094a3fa4329d788342d5d4bdb089c0532edd58" translate="yes" xml:space="preserve">
          <source>Checks for strings that are either empty or filled with whitespace.</source>
          <target state="translated">文字列が空か空白で埋まっているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="989b392d29549fad3e5dcb22bc55f1adfc02a905" translate="yes" xml:space="preserve">
          <source>For checking if a string is blank or contains only white-space:</source>
          <target state="translated">文字列が空白であるか、または空白のみを含むかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="6533dd6dcb9da6b71099563cc7d132042520aa98" translate="yes" xml:space="preserve">
          <source>For checking if a string is blank, null or undefined I use:</source>
          <target state="translated">文字列が空か、NULLか、未定義かをチェックするために、私はこれを使います。</target>
        </trans-unit>
        <trans-unit id="a26ffb1c2da40f3337204cdc21f994d7c73924df" translate="yes" xml:space="preserve">
          <source>For checking if a string is empty, null or undefined I use:</source>
          <target state="translated">文字列が空か、NULLか、未定義かをチェックするために使用します。</target>
        </trans-unit>
        <trans-unit id="160b3670e04858fde7e4140b45e86e3c1b2090a9" translate="yes" xml:space="preserve">
          <source>Function:</source>
          <target state="translated">Function:</target>
        </trans-unit>
        <trans-unit id="b320d28eb9985a9524eb1f520a46631f57850f5f" translate="yes" xml:space="preserve">
          <source>How can I check for an empty/undefined/null string in JavaScript</source>
          <target state="translated">JavaScriptで空のundefinednull文字列をチェックする方法</target>
        </trans-unit>
        <trans-unit id="98ea240d9f2822a7d22d7a386bb90b0adad351a5" translate="yes" xml:space="preserve">
          <source>However, as many other examples are available. The best functional method to go about this, I would suggest:</source>
          <target state="translated">しかし、他にも多くの例があるように その中でも最も機能的な方法として、私が提案するのは</target>
        </trans-unit>
        <trans-unit id="a854d074c99f886a59abb6ec50680c230e62dc0d" translate="yes" xml:space="preserve">
          <source>I didn't see a good answer here (at least not an answer that fits for me)</source>
          <target state="translated">ここには良い答えがなかった(少なくとも自分に合う答えがなかった</target>
        </trans-unit>
        <trans-unit id="d4234e19b25992d998624e3f4128947faaf2580b" translate="yes" xml:space="preserve">
          <source>I have not noticed an answer that takes into account the possibility of null characters in a string. For example, if we have a null character string:</source>
          <target state="translated">文字列にヌル文字が含まれている可能性を考慮した回答に気づいたことがありません。例えば、ヌル文字の文字列があるとします。</target>
        </trans-unit>
        <trans-unit id="7cdd43e014ec037cebbd5e7ee0de1548bece1ebc" translate="yes" xml:space="preserve">
          <source>I perform tests on &lt;a href=&quot;https://en.wikipedia.org/wiki/MacOS_High_Sierra&quot;&gt;macOS v10.13.6&lt;/a&gt; (High Sierra) for 18 chosen solutions. Solutions works slightly different (for corner-case input data) which was presented in the snippet below.</source>
          <target state="translated">選択した18のソリューションに対して&lt;a href=&quot;https://en.wikipedia.org/wiki/MacOS_High_Sierra&quot;&gt;macOS v10.13.6&lt;/a&gt; （High Sierra）でテストを実行します。 ソリューションは、以下のスニペットに示されているように（コーナーケースの入力データの場合）少し異なります。</target>
        </trans-unit>
        <trans-unit id="77469f7697876861aedd0b47e100808cb4573328" translate="yes" xml:space="preserve">
          <source>I saw &lt;a href=&quot;https://stackoverflow.com/questions/10230/checking-for-string-contents-string-length-vs-empty-string&quot;&gt;this question&lt;/a&gt;, but I didn't see a JavaScript specific example. Is there a simple &lt;code&gt;string.Empty&lt;/code&gt; available in JavaScript, or is it just a case of checking for &lt;code&gt;&quot;&quot;&lt;/code&gt;?</source>
          <target state="translated">私は&lt;a href=&quot;https://stackoverflow.com/questions/10230/checking-for-string-contents-string-length-vs-empty-string&quot;&gt;この質問&lt;/a&gt;を見ましたが、JavaScript固有の例を見ませんでした。 JavaScriptで利用可能な単純な &lt;code&gt;string.Empty&lt;/code&gt; はありますか、それとも単なる &lt;code&gt;&quot;&quot;&lt;/code&gt; のチェックの場合ですか？</target>
        </trans-unit>
        <trans-unit id="e0e721111393b3dbea1a93dff99d2c9fabb7ca18" translate="yes" xml:space="preserve">
          <source>I use a combination, and the fastest checks are first.</source>
          <target state="translated">私はコンビを使っていますが、チェックが早い方が先です。</target>
        </trans-unit>
        <trans-unit id="3ec2989463c05eebf4b0f2796a0e8f296376b4fb" translate="yes" xml:space="preserve">
          <source>I use:</source>
          <target state="translated">使っています。</target>
        </trans-unit>
        <trans-unit id="69bc22a0add39671b4e99d1c231205019351cf92" translate="yes" xml:space="preserve">
          <source>I usually use something like this,</source>
          <target state="translated">普段はこんな感じのものを使っています。</target>
        </trans-unit>
        <trans-unit id="b5555459dcfed1a3bfe957966b45a7e6b3756298" translate="yes" xml:space="preserve">
          <source>I would not worry too much about the most &lt;strong&gt;efficient&lt;/strong&gt; method. Use what is most clear to your intention. For me that's usually &lt;code&gt;strVar == &quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">最も&lt;strong&gt;効率的な&lt;/strong&gt;方法についてはあまり心配しません。 あなたの意図に最も明確なものを使用してください。 私にとっては通常 &lt;code&gt;strVar == &quot;&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bf4bde6cbaf34ea31564fac4431ed38e226a5e30" translate="yes" xml:space="preserve">
          <source>If one needs to detect not only empty but also blank strings, I'll add to Goral's answer:</source>
          <target state="translated">空文字列だけでなく空文字列も検出する必要がある場合は、Goralさんの回答に追加します。</target>
        </trans-unit>
        <trans-unit id="b7342ba05bc53f62f1d40acee066622a5b0d16d0" translate="yes" xml:space="preserve">
          <source>If you just want to check whether there's any value, you can do</source>
          <target state="translated">値があるかどうかを確認したいだけならば</target>
        </trans-unit>
        <trans-unit id="196934966cd2c87409baf22de706d9423bf358d6" translate="yes" xml:space="preserve">
          <source>If you need to check specifically for an empty string over null, I would think checking against &lt;code&gt;&quot;&quot;&lt;/code&gt; is your best bet, using &lt;a href=&quot;http://webreference.com/js/column26/stricteq.html&quot;&gt;the &lt;code&gt;===&lt;/code&gt; operator&lt;/a&gt; (so that you know that it is, in fact, a string you're comparing against).</source>
          <target state="translated">nullで空の文字列を具体的に確認する必要がある場合は&lt;a href=&quot;http://webreference.com/js/column26/stricteq.html&quot;&gt;、 &lt;code&gt;===&lt;/code&gt; 演算子&lt;/a&gt;を使用して &lt;code&gt;&quot;&quot;&lt;/code&gt; を確認するのが最善の策だと思います（実際には、比較対象の文字列であることを知っているため） ）。</target>
        </trans-unit>
        <trans-unit id="cd19ff8251fb387b7fb35e12abbef68dcd864b5f" translate="yes" xml:space="preserve">
          <source>If you need to make sure that the string is not just a bunch of empty spaces (I'm assuming this is for form validation) you need to do a replace on the spaces.</source>
          <target state="translated">文字列がただの空白の束ではないことを確認する必要がある場合 (これはフォームの検証のためだと思います)、空白の部分を置換する必要があります。</target>
        </trans-unit>
        <trans-unit id="3f179983c9e95d4a5ae2866ead5db5cd85912898" translate="yes" xml:space="preserve">
          <source>Ignoring whitespace strings, you could use this to check for null, empty and undefined:</source>
          <target state="translated">空白文字列を無視して、これを使ってヌル、空、未定義をチェックすることができます。</target>
        </trans-unit>
        <trans-unit id="676fd1bc88c1b0237674cd5954b0f60481845100" translate="yes" xml:space="preserve">
          <source>In the below snippet I compare results of chosen 18 methods by use different input parameters</source>
          <target state="translated">以下のスニペットでは、異なる入力パラメータを使用して、選択された18の方法の結果を比較しています。</target>
        </trans-unit>
        <trans-unit id="e56da9b318ab9df314decdbc0174a92c09abd510" translate="yes" xml:space="preserve">
          <source>It covers a lot of cases like &lt;code&gt;{}&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;{}&lt;/code&gt; 、 &lt;code&gt;''&lt;/code&gt; 、 &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;undefined&lt;/code&gt; などの多くのケースをカバーしています 。</target>
        </trans-unit>
        <trans-unit id="177bce9d50cc7c759b9884978ff310ac77e8d780" translate="yes" xml:space="preserve">
          <source>It is concise and it works for undefined properties, although it's not the most readable.</source>
          <target state="translated">簡潔で、未定義のプロパティに対しても動作しますが、最も読みやすいものではありません。</target>
        </trans-unit>
        <trans-unit id="4346eda8dabc4b95eedbdc297939a0292ecea990" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;null,undefined,0,000,&quot;&quot;,false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null,undefined,0,000,&quot;&quot;,false&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="63ffe9b80bd859e119848ba55b4fe2235bc7c17c" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;true&lt;/code&gt; for string &quot;0&quot; and whitespace &quot; &quot;.</source>
          <target state="translated">文字列「0」と空白「」に対して &lt;code&gt;true&lt;/code&gt; を返します 。</target>
        </trans-unit>
        <trans-unit id="68fed1e5c0fd1356254f2473de8ebeded49ddf96" translate="yes" xml:space="preserve">
          <source>It works on a null string, and on an empty string and it is accessible for all strings. In addition, it could be expanded to contain other JavaScript empty or whitespace characters (i.e. nonbreaking space, byte order mark, line/paragraph separator, etc.).</source>
          <target state="translated">これはヌル文字列でも空文字列でも動作し、すべての文字列に対してアクセス可能です。さらに、他の JavaScript の空文字や空白文字を含むように拡張することもできます (すなわち、非改行スペース、バイトオーダーマーク、行間区切り文字など)。</target>
        </trans-unit>
        <trans-unit id="124516c60c45e1945641a02be7a7160c0c991fd9" translate="yes" xml:space="preserve">
          <source>Meanwhile we can have one function that checks for all 'empties' like &lt;strong&gt;null, undefined, '', ' ', {}, []&lt;/strong&gt;.
So I just wrote this.</source>
          <target state="translated">一方&lt;strong&gt;、null、undefined、 ''、 ''、{}、[]&lt;/strong&gt;などのすべての「空」をチェックする1つの関数を使用できます。 だから私はこれを書いた。</target>
        </trans-unit>
        <trans-unit id="2158bc3ad89efc8ddb1227911b6ad7bd9524888f" translate="yes" xml:space="preserve">
          <source>My version:</source>
          <target state="translated">私のバージョン。</target>
        </trans-unit>
        <trans-unit id="ad538cfea97e6a8019c038a047166b5919a62234" translate="yes" xml:space="preserve">
          <source>Not all tested methods support all input cases.</source>
          <target state="translated">すべてのテスト済みメソッドがすべての入力ケースをサポートしているわけではありません。</target>
        </trans-unit>
        <trans-unit id="3118a6caed5588efeddb92c6bd6599ab9f196a0d" translate="yes" xml:space="preserve">
          <source>Or use type casting:</source>
          <target state="translated">またはタイプキャスティングを使用します。</target>
        </trans-unit>
        <trans-unit id="f5df947ea4e06eb88528f81a80923b33db2a44d6" translate="yes" xml:space="preserve">
          <source>Otherwise if you'd like to check both &lt;code&gt;''&lt;/code&gt; empty string and &lt;code&gt;'   '&lt;/code&gt; with space, you can do that by just adding &lt;code&gt;trim()&lt;/code&gt;, something like the code below:</source>
          <target state="translated">そうでない場合、 &lt;code&gt;''&lt;/code&gt; 空の文字列と &lt;code&gt;' '&lt;/code&gt; 両方をスペースでチェックしたい場合は、次のコードのように、 &lt;code&gt;trim()&lt;/code&gt; を追加するだけで確認できます。</target>
        </trans-unit>
        <trans-unit id="e39cd29cb0fd6f5e033d543e79369564aeaa6ad1" translate="yes" xml:space="preserve">
          <source>PS.: &lt;strong&gt;You don't need to check typeof&lt;/strong&gt;, since it would explode and throw even before it enters the method</source>
          <target state="translated">PS .: &lt;strong&gt;typeofをチェックする必要はありません&lt;/strong&gt; 。メソッドに入る前でも爆発してスローされるからです。</target>
        </trans-unit>
        <trans-unit id="eec32088dbe27ed7fe9e171f95eca92658e99580" translate="yes" xml:space="preserve">
          <source>PS: In JavaScript, don't use line break after &lt;code&gt;return&lt;/code&gt;;</source>
          <target state="translated">PS：JavaScriptでは、 &lt;code&gt;return&lt;/code&gt; 後に改行を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="5bd3f7820af903720acc7644f15a1fc20d842887" translate="yes" xml:space="preserve">
          <source>Sample on &lt;a href=&quot;http://jsfiddle.net/YZfGs/&quot;&gt;jsfiddle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://jsfiddle.net/YZfGs/&quot;&gt;jsfiddleの&lt;/a&gt;サンプル。</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">コードスニペットを表示</target>
        </trans-unit>
        <trans-unit id="4d7a36e26fd9437353d9e2cfcf8ddd24050003d4" translate="yes" xml:space="preserve">
          <source>So I decided to answer myself:</source>
          <target state="translated">そこで、自分で答えを出すことにしました。</target>
        </trans-unit>
        <trans-unit id="302f7ef338a27df313d235f96e6c43f2267e5612" translate="yes" xml:space="preserve">
          <source>Something simple like below code can do the job for you if you want to check &lt;code&gt;''&lt;/code&gt; empty strings:</source>
          <target state="translated">&lt;code&gt;''&lt;/code&gt; 空の文字列をチェックしたい場合は、以下のコードのような簡単なものでうまくいきます：</target>
        </trans-unit>
        <trans-unit id="822ba60a28851b52a02ebace21bb3bb1af9a7ede" translate="yes" xml:space="preserve">
          <source>The closest thing you can get to &lt;code&gt;str.Empty&lt;/code&gt; (with the precondition that str is a String) is:</source>
          <target state="translated">&lt;code&gt;str.Empty&lt;/code&gt; （strが文字列であることを前提とする）に最も近いものは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5cfc2477270eeb77856b9ee707a8df10ad747f35" translate="yes" xml:space="preserve">
          <source>The type check is needed in order to avoid runtime errors when &lt;code&gt;test&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">型チェックは、 &lt;code&gt;test&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; または &lt;code&gt;null&lt;/code&gt; の場合の実行時エラーを回避するために必要です。</target>
        </trans-unit>
        <trans-unit id="251b94c2e651b4e9d491fb6b7f502f7c1eb47fe0" translate="yes" xml:space="preserve">
          <source>There's no &lt;code&gt;isEmpty()&lt;/code&gt; method, you have to check for the type and the length:</source>
          <target state="translated">&lt;code&gt;isEmpty()&lt;/code&gt; メソッドはありません。タイプと長さを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="b2833d7f997a75638e55c5f9958ad98eb6405e57" translate="yes" xml:space="preserve">
          <source>There's nothing representing an empty string in JavaScript. Do a check against either &lt;code&gt;length&lt;/code&gt; (if you know that the var will always be a string) or against &lt;code&gt;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">JavaScriptでは空の文字列を表すものは何もありません。 &lt;code&gt;length&lt;/code&gt; （varが常に文字列であることがわかっている場合）または &lt;code&gt;&quot;&quot;&lt;/code&gt; に対してチェックします。</target>
        </trans-unit>
        <trans-unit id="e93301ac2ebdc2604e3a22da0c97b3a9960132f9" translate="yes" xml:space="preserve">
          <source>To check if it is an empty string OR a logical equivalent for no-value (null, undefined, 0, NaN, false, ...):</source>
          <target state="translated">それが空の文字列であるか、または値なし(null,undefined,0,NaN,false,...)の論理的等価物であるかをチェックします。</target>
        </trans-unit>
        <trans-unit id="3698d54097ab43b9432640c6c99ff207aaf9fc0e" translate="yes" xml:space="preserve">
          <source>To check if it is exactly an empty string:</source>
          <target state="translated">正確に空文字列であるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="9b4c5c1acb6cded11f68cf461ff5884635337fed" translate="yes" xml:space="preserve">
          <source>To test its nullness one could do something like this:</source>
          <target state="translated">その無効性をテストするために、次のようなことができます。</target>
        </trans-unit>
        <trans-unit id="3d82a9f15156c36519fc72f9af221c32d7422e29" translate="yes" xml:space="preserve">
          <source>Try this</source>
          <target state="translated">これを試してみてください</target>
        </trans-unit>
        <trans-unit id="b21480ff457e048e3c7a6593bfb52719279e1f05" translate="yes" xml:space="preserve">
          <source>Try this:</source>
          <target state="translated">これを試してみてください。</target>
        </trans-unit>
        <trans-unit id="102acb4ebe4f9295900af5f522c91830395377c0" translate="yes" xml:space="preserve">
          <source>Try:</source>
          <target state="translated">Try:</target>
        </trans-unit>
        <trans-unit id="debbc2eb12f8f2918bbf071deb603a77d62e1d3f" translate="yes" xml:space="preserve">
          <source>Use cases and results.</source>
          <target state="translated">活用事例と成果。</target>
        </trans-unit>
        <trans-unit id="f2a17fb75a2b21128655ecf1303ed82a08062fc5" translate="yes" xml:space="preserve">
          <source>Using this you can also make sure that string is not undefined or null too. Remember, undefined, null and empty are three different things.</source>
          <target state="translated">これを使うと、文字列が未定義やヌルでないことも確認できます。未定義、NULL、空は3つの異なるものであることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="d24f502de4b92e43a5297f639a7e3a11a2bfc1e4" translate="yes" xml:space="preserve">
          <source>With that said, wrap it up in a method like:</source>
          <target state="translated">それを踏まえた上で、次のような方法で包んでいきましょう。</target>
        </trans-unit>
        <trans-unit id="7109799ec1e9e4a283be47540f14538c0b16b57d" translate="yes" xml:space="preserve">
          <source>Without a doubt for quick and simple implementation the winner is: &lt;code&gt;if (!str.length) {...}&lt;/code&gt;</source>
          <target state="translated">迅速かつ簡単な実装で間違いなく勝者は次のとおり &lt;code&gt;if (!str.length) {...}&lt;/code&gt; ： if（！str.length）{...}</target>
        </trans-unit>
        <trans-unit id="19165eba04c535cd4831b465de7a3bf851a93ad0" translate="yes" xml:space="preserve">
          <source>You can easily add it to native &lt;strong&gt;String&lt;/strong&gt; object in &lt;strong&gt;JavaScript&lt;/strong&gt; and reuse it over and over...</source>
          <target state="translated">&lt;strong&gt;JavaScriptで&lt;/strong&gt;ネイティブの&lt;strong&gt;String&lt;/strong&gt;オブジェクトに簡単に追加して、何度でも繰り返し使用&lt;strong&gt;できます&lt;/strong&gt; ...</target>
        </trans-unit>
        <trans-unit id="cc3a14119d465b7eee720224b2fe86e92ff1e963" translate="yes" xml:space="preserve">
          <source>You can test it with this regular expression:</source>
          <target state="translated">この正規表現でテストすることができます。</target>
        </trans-unit>
        <trans-unit id="2cc4bd0ada7518c036ce40d7c6fb7c0c3a67a1a2" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt;:
_.isEmpty(value).</source>
          <target state="translated">&lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; ：_.isEmpty（value）を使用できます。</target>
        </trans-unit>
        <trans-unit id="8d3d12a96a23a09375cf4e4808c1baf8493ea1c3" translate="yes" xml:space="preserve">
          <source>You cannot have !! or only &lt;code&gt;if(value)&lt;/code&gt; since if you check &lt;code&gt;0&lt;/code&gt; it's going to give you a false answer (0 is false).</source>
          <target state="translated">持てない!! または &lt;code&gt;if(value)&lt;/code&gt; のみ &lt;code&gt;0&lt;/code&gt; にチェックすると、誤った答えが返されます（0は偽）。</target>
        </trans-unit>
        <trans-unit id="1443521148bee1163d4e565aeb595aad139e7714" translate="yes" xml:space="preserve">
          <source>You could also go with regular expressions:</source>
          <target state="translated">正規表現を使ってもいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="99b77bf04caf6768b4afce4758de85b686adfe15" translate="yes" xml:space="preserve">
          <source>You need to start checking if it's undefined. Otherwise your method can explode, and then you can check if it equals null or is equal to an empty string.</source>
          <target state="translated">未定義かどうかのチェックを始める必要があります。そうしないとメソッドが爆発する可能性があるので、それがnullに等しいか空の文字列に等しいかをチェックします。</target>
        </trans-unit>
        <trans-unit id="46f2d7311dcbc0da15594452e949ed2c464e9bc9" translate="yes" xml:space="preserve">
          <source>and you can call it this way:</source>
          <target state="translated">と、このように呼ぶことができます。</target>
        </trans-unit>
        <trans-unit id="ad7330559e8c8e0d0f1eaa33df62abba695bd3e1" translate="yes" xml:space="preserve">
          <source>check that &lt;code&gt;var a;&lt;/code&gt; exist</source>
          <target state="translated">その &lt;code&gt;var a;&lt;/code&gt; 確認してください。 存在する</target>
        </trans-unit>
        <trans-unit id="893cd211a7d3192a132f3e9f8a0988231c81329b" translate="yes" xml:space="preserve">
          <source>the simple solutions based on &lt;code&gt;!str&lt;/code&gt;,&lt;code&gt;==&lt;/code&gt;,&lt;code&gt;===&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; are fast for all browsers (A,B,C,G,I,J)</source>
          <target state="translated">&lt;code&gt;!str&lt;/code&gt; 、 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;===&lt;/code&gt; および &lt;code&gt;length&lt;/code&gt; 基づく単純なソリューションは、すべてのブラウザ（A、B、C、G、I、J）で高速です。</target>
        </trans-unit>
        <trans-unit id="bc3f39f7d435e9471ffcf73a5b54560e34a1cc58" translate="yes" xml:space="preserve">
          <source>the solutions based on the regular expression (&lt;code&gt;test&lt;/code&gt;,&lt;code&gt;replace&lt;/code&gt;) and &lt;code&gt;charAt&lt;/code&gt; are slowest for all browsers (H,L,M,P)</source>
          <target state="translated">正規表現（ &lt;code&gt;test&lt;/code&gt; 、 &lt;code&gt;replace&lt;/code&gt; ）と &lt;code&gt;charAt&lt;/code&gt; に基づくソリューションは、すべてのブラウザー（H、L、M、P）で最も遅い</target>
        </trans-unit>
        <trans-unit id="b2148156801e321107c315272e5c6d24370db5f9" translate="yes" xml:space="preserve">
          <source>the solutions marked as fastest was fastest only for one test run - but in many runs it changes inside 'fast' solutions group</source>
          <target state="translated">最速とマークされたソリューションは、1回のテストでのみ最速でしたが、多くのテストでは'fast'ソリューショングループの中で変化します。</target>
        </trans-unit>
        <trans-unit id="b4ad398f6f72aa719a09141ec08d4fa75fc3aad2" translate="yes" xml:space="preserve">
          <source>trim out the &lt;code&gt;false spaces&lt;/code&gt; in the value, then test for &lt;code&gt;emptiness&lt;/code&gt;</source>
          <target state="translated">値の &lt;code&gt;false spaces&lt;/code&gt; を &lt;code&gt;emptiness&lt;/code&gt; 、 空かどうかをテストします</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
