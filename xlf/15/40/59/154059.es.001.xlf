<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/154059">
    <body>
      <group id="154059">
        <trans-unit id="bdfc33c4270853cf7d357e3aa5a4aae92ae4b072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;code&gt;&quot;a&quot;&lt;/code&gt;&lt;code&gt;&quot; &quot;&lt;/code&gt;- empty string, string with letter and string with space</source>
          <target state="translated">&lt;code&gt;&quot;&quot;&lt;/code&gt; &lt;code&gt;&quot;a&quot;&lt;/code&gt; &lt;code&gt;&quot; &quot;&lt;/code&gt; - cadena vac&amp;iacute;a, cadena con letra y cadena con espacio</target>
        </trans-unit>
        <trans-unit id="21a6168ca22fe08a509239266fb9f46bca13a9f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;&lt;code&gt;1&lt;/code&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;code&gt;Infinity&lt;/code&gt; - numbers</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;code&gt;Infinity&lt;/code&gt; - n&amp;uacute;meros</target>
        </trans-unit>
        <trans-unit id="0997a12418824f09293407063f7e05d491e8eedb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt;&lt;code&gt;{}&lt;/code&gt;&lt;code&gt;f&lt;/code&gt;- array, object and function</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; &lt;code&gt;{}&lt;/code&gt; &lt;code&gt;f&lt;/code&gt; - matriz, objeto y funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="0199f44a7420f88b68ff32760279674cccb4633d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;&lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt;&lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00f1e6a1b7db4a0b9c668df953fedebd216b3e7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;&lt;code&gt;false&lt;/code&gt; - Boolean</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; &lt;code&gt;false&lt;/code&gt; - booleano</target>
        </trans-unit>
        <trans-unit id="54d43c52441fb7bd3ed00affd5f9186806533d64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4538870588f5b79ebc3044bf53373ff196863e0" translate="yes" xml:space="preserve">
          <source>A bit excessive, I know.</source>
          <target state="translated">Un poco excesivo,lo sé.</target>
        </trans-unit>
        <trans-unit id="e1f556cdd024cd86231985a8dfd51eb5a3b2bcce" translate="yes" xml:space="preserve">
          <source>A lot of answers, and a lot of different possibilities!</source>
          <target state="translated">¡Muchas respuestas,y muchas posibilidades diferentes!</target>
        </trans-unit>
        <trans-unit id="21c6ca749a159644fabed6263ef65c83f78e538b" translate="yes" xml:space="preserve">
          <source>All the previous answers are good, but this will be even better. Use the &lt;code&gt;!!&lt;/code&gt;(&lt;em&gt;not not&lt;/em&gt;) operator.</source>
          <target state="translated">Todas las respuestas anteriores son buenas, pero esto ser&amp;aacute; a&amp;uacute;n mejor. Usa el &lt;code&gt;!!&lt;/code&gt; ( &lt;em&gt;no no&lt;/em&gt; ) operador.</target>
        </trans-unit>
        <trans-unit id="4926738125811b6f1c34f95d5e32e7258e2be1c0" translate="yes" xml:space="preserve">
          <source>All these answers are nice.</source>
          <target state="translated">Todas estas respuestas son buenas.</target>
        </trans-unit>
        <trans-unit id="806be928f82755c49801cae219224f4ac85dcf0f" translate="yes" xml:space="preserve">
          <source>Also, in case you consider a whitespace filled string as &quot;empty&quot;.</source>
          <target state="translated">También,en caso de que consideren que una cadena llena de espacios en blanco está &quot;vacía&quot;.</target>
        </trans-unit>
        <trans-unit id="5759af978fba1c233efd4d144f158b89b62066dd" translate="yes" xml:space="preserve">
          <source>And then for all methods I perform speed test case &lt;code&gt;str = &quot;&quot;&lt;/code&gt; for browsers Chrome v78.0.0, Safari v13.0.4, and Firefox v71.0.0 - you can run tests on your machine &lt;a href=&quot;https://jsperf.com/empty-string-checking/1&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">Y luego, para todos los m&amp;eacute;todos, realizo el caso de prueba de velocidad &lt;code&gt;str = &quot;&quot;&lt;/code&gt; para los navegadores Chrome v78.0.0, Safari v13.0.4 y Firefox v71.0.0: puede ejecutar pruebas en su m&amp;aacute;quina &lt;a href=&quot;https://jsperf.com/empty-string-checking/1&quot;&gt;aqu&amp;iacute;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7dab0608a171a536a94e84b267156c2e4afb71f7" translate="yes" xml:space="preserve">
          <source>As of now there is no direct method like string.empty to check whether a string is empty or not. But in your code you can use a wrapper check for an empty string like:</source>
          <target state="translated">Hasta ahora no hay un método directo como string.empty para comprobar si una cadena está vacía o no.Pero en tu código puedes usar un chequeo de envoltura para una cadena vacía como:</target>
        </trans-unit>
        <trans-unit id="158d49add5db36264d365aac641407cbc286f90e" translate="yes" xml:space="preserve">
          <source>As per the comment from &lt;a href=&quot;https://stackoverflow.com/users/20310/constantin&quot;&gt;Constantin&lt;/a&gt;, if strVar could some how end up containing an integer 0 value, then that would indeed be one of those intention-clarifying situations.</source>
          <target state="translated">Seg&amp;uacute;n el comentario de &lt;a href=&quot;https://stackoverflow.com/users/20310/constantin&quot;&gt;Constantin&lt;/a&gt; , si strVar podr&amp;iacute;a de alguna manera terminar conteniendo un valor entero 0, entonces esa ser&amp;iacute;a una de esas situaciones de aclaraci&amp;oacute;n de intenciones.</target>
        </trans-unit>
        <trans-unit id="7381419082e966c749a545dac09d9d4fe1d2b678" translate="yes" xml:space="preserve">
          <source>Both do the same function. Typecast the variable to Boolean, where &lt;code&gt;str&lt;/code&gt; is a variable.</source>
          <target state="translated">Ambos hacen la misma funci&amp;oacute;n. Escriba la variable en booleano, donde &lt;code&gt;str&lt;/code&gt; es una variable.</target>
        </trans-unit>
        <trans-unit id="ac8ef2b99e3ca15964afeea9d763cbdf10922005" translate="yes" xml:space="preserve">
          <source>But I cannot be sure that variable is a string, doesn't contain only spaces (this is important for me), and can contain '0' (string).</source>
          <target state="translated">Pero no puedo estar seguro de que esa variable sea una cadena,no contiene sólo espacios (esto es importante para mí),y puede contener '0' (cadena).</target>
        </trans-unit>
        <trans-unit id="7d60d4307666d945384581c7f4657edff13a88fe" translate="yes" xml:space="preserve">
          <source>But it always returns &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;Number&lt;/code&gt; type of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;JavaScript primitive data types&lt;/a&gt; like &lt;code&gt;_.isEmpty(10)&lt;/code&gt; or &lt;code&gt;_.isEmpty(Number.MAX_VALUE)&lt;/code&gt; both returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Pero siempre devuelve &lt;code&gt;true&lt;/code&gt; para el tipo &lt;code&gt;Number&lt;/code&gt; tipos de &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;datos primitivos&lt;/a&gt; de JavaScript como &lt;code&gt;_.isEmpty(10)&lt;/code&gt; o &lt;code&gt;_.isEmpty(Number.MAX_VALUE)&lt;/code&gt; ambos devuelve &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53094a3fa4329d788342d5d4bdb089c0532edd58" translate="yes" xml:space="preserve">
          <source>Checks for strings that are either empty or filled with whitespace.</source>
          <target state="translated">Comprueba si las cuerdas están vacías o llenas de espacios en blanco.</target>
        </trans-unit>
        <trans-unit id="dc3decbb93847518f1a049dcf49d0d7c6560bcc6" translate="yes" xml:space="preserve">
          <source>Details</source>
          <target state="translated">Details</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="989b392d29549fad3e5dcb22bc55f1adfc02a905" translate="yes" xml:space="preserve">
          <source>For checking if a string is blank or contains only white-space:</source>
          <target state="translated">Para comprobar si una cadena está en blanco o contiene sólo espacios en blanco:</target>
        </trans-unit>
        <trans-unit id="6533dd6dcb9da6b71099563cc7d132042520aa98" translate="yes" xml:space="preserve">
          <source>For checking if a string is blank, null or undefined I use:</source>
          <target state="translated">Para comprobar si una cadena está en blanco,nula o indefinida utilizo:</target>
        </trans-unit>
        <trans-unit id="a26ffb1c2da40f3337204cdc21f994d7c73924df" translate="yes" xml:space="preserve">
          <source>For checking if a string is empty, null or undefined I use:</source>
          <target state="translated">Para comprobar si una cadena está vacía,nula o indefinida utilizo:</target>
        </trans-unit>
        <trans-unit id="160b3670e04858fde7e4140b45e86e3c1b2090a9" translate="yes" xml:space="preserve">
          <source>Function:</source>
          <target state="translated">Function:</target>
        </trans-unit>
        <trans-unit id="b320d28eb9985a9524eb1f520a46631f57850f5f" translate="yes" xml:space="preserve">
          <source>How can I check for an empty/undefined/null string in JavaScript</source>
          <target state="translated">¿Cómo puedo comprobar si hay una cadena vacía y sin definir en JavaScript</target>
        </trans-unit>
        <trans-unit id="98ea240d9f2822a7d22d7a386bb90b0adad351a5" translate="yes" xml:space="preserve">
          <source>However, as many other examples are available. The best functional method to go about this, I would suggest:</source>
          <target state="translated">Sin embargo,se dispone de otros muchos ejemplos.Yo sugeriría el mejor método funcional para hacerlo:</target>
        </trans-unit>
        <trans-unit id="a854d074c99f886a59abb6ec50680c230e62dc0d" translate="yes" xml:space="preserve">
          <source>I didn't see a good answer here (at least not an answer that fits for me)</source>
          <target state="translated">No vi una buena respuesta aquí (al menos no una respuesta que se ajuste a mí)</target>
        </trans-unit>
        <trans-unit id="d4234e19b25992d998624e3f4128947faaf2580b" translate="yes" xml:space="preserve">
          <source>I have not noticed an answer that takes into account the possibility of null characters in a string. For example, if we have a null character string:</source>
          <target state="translated">No he notado una respuesta que tenga en cuenta la posibilidad de caracteres nulos en una cadena.Por ejemplo,si tenemos una cadena de caracteres nulos:</target>
        </trans-unit>
        <trans-unit id="7cdd43e014ec037cebbd5e7ee0de1548bece1ebc" translate="yes" xml:space="preserve">
          <source>I perform tests on &lt;a href=&quot;https://en.wikipedia.org/wiki/MacOS_High_Sierra&quot;&gt;macOS v10.13.6&lt;/a&gt; (High Sierra) for 18 chosen solutions. Solutions works slightly different (for corner-case input data) which was presented in the snippet below.</source>
          <target state="translated">Realizo pruebas en &lt;a href=&quot;https://en.wikipedia.org/wiki/MacOS_High_Sierra&quot;&gt;macOS v10.13.6&lt;/a&gt; (High Sierra) para 18 soluciones elegidas. Las soluciones funcionan ligeramente diferentes (para datos de entrada de may&amp;uacute;sculas y min&amp;uacute;sculas) que se present&amp;oacute; en el fragmento a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="77469f7697876861aedd0b47e100808cb4573328" translate="yes" xml:space="preserve">
          <source>I saw &lt;a href=&quot;https://stackoverflow.com/questions/10230/checking-for-string-contents-string-length-vs-empty-string&quot;&gt;this question&lt;/a&gt;, but I didn't see a JavaScript specific example. Is there a simple &lt;code&gt;string.Empty&lt;/code&gt; available in JavaScript, or is it just a case of checking for &lt;code&gt;&quot;&quot;&lt;/code&gt;?</source>
          <target state="translated">Vi &lt;a href=&quot;https://stackoverflow.com/questions/10230/checking-for-string-contents-string-length-vs-empty-string&quot;&gt;esta pregunta&lt;/a&gt; , pero no vi un ejemplo espec&amp;iacute;fico de JavaScript. &amp;iquest;Hay una &lt;code&gt;string.Empty&lt;/code&gt; simple. Vac&amp;iacute;o disponible en JavaScript, o es solo un caso de verificar &lt;code&gt;&quot;&quot;&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="e0e721111393b3dbea1a93dff99d2c9fabb7ca18" translate="yes" xml:space="preserve">
          <source>I use a combination, and the fastest checks are first.</source>
          <target state="translated">Uso una combinación,y las comprobaciones más rápidas son las primeras.</target>
        </trans-unit>
        <trans-unit id="3ec2989463c05eebf4b0f2796a0e8f296376b4fb" translate="yes" xml:space="preserve">
          <source>I use:</source>
          <target state="translated">Yo uso:</target>
        </trans-unit>
        <trans-unit id="69bc22a0add39671b4e99d1c231205019351cf92" translate="yes" xml:space="preserve">
          <source>I usually use something like this,</source>
          <target state="translated">Normalmente uso algo como esto,</target>
        </trans-unit>
        <trans-unit id="b5555459dcfed1a3bfe957966b45a7e6b3756298" translate="yes" xml:space="preserve">
          <source>I would not worry too much about the most &lt;strong&gt;efficient&lt;/strong&gt; method. Use what is most clear to your intention. For me that's usually &lt;code&gt;strVar == &quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">No me preocupar&amp;iacute;a demasiado por el m&amp;eacute;todo m&amp;aacute;s &lt;strong&gt;eficiente&lt;/strong&gt; . Use lo que sea m&amp;aacute;s claro para su intenci&amp;oacute;n. Para m&amp;iacute; eso suele ser &lt;code&gt;strVar == &quot;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf4bde6cbaf34ea31564fac4431ed38e226a5e30" translate="yes" xml:space="preserve">
          <source>If one needs to detect not only empty but also blank strings, I'll add to Goral's answer:</source>
          <target state="translated">Si uno necesita detectar no sólo cadenas vacías sino también en blanco,añadiré a la respuesta de Goral:</target>
        </trans-unit>
        <trans-unit id="b7342ba05bc53f62f1d40acee066622a5b0d16d0" translate="yes" xml:space="preserve">
          <source>If you just want to check whether there's any value, you can do</source>
          <target state="translated">Si sólo quieres comprobar si hay algún valor,puedes hacer</target>
        </trans-unit>
        <trans-unit id="196934966cd2c87409baf22de706d9423bf358d6" translate="yes" xml:space="preserve">
          <source>If you need to check specifically for an empty string over null, I would think checking against &lt;code&gt;&quot;&quot;&lt;/code&gt; is your best bet, using &lt;a href=&quot;http://webreference.com/js/column26/stricteq.html&quot;&gt;the &lt;code&gt;===&lt;/code&gt; operator&lt;/a&gt; (so that you know that it is, in fact, a string you're comparing against).</source>
          <target state="translated">Si necesita verificar espec&amp;iacute;ficamente si hay una cadena vac&amp;iacute;a sobre nula, creo que verificar contra &lt;code&gt;&quot;&quot;&lt;/code&gt; es su mejor opci&amp;oacute;n, utilizando &lt;a href=&quot;http://webreference.com/js/column26/stricteq.html&quot;&gt;el operador &lt;code&gt;===&lt;/code&gt; &lt;/a&gt; (para que sepa que, de hecho, es una cadena con la que est&amp;aacute; comparando )</target>
        </trans-unit>
        <trans-unit id="cd19ff8251fb387b7fb35e12abbef68dcd864b5f" translate="yes" xml:space="preserve">
          <source>If you need to make sure that the string is not just a bunch of empty spaces (I'm assuming this is for form validation) you need to do a replace on the spaces.</source>
          <target state="translated">Si necesitas asegurarte de que la cadena no es sólo un montón de espacios vacíos (asumo que esto es para la validación del formulario)necesitas hacer un reemplazo en los espacios.</target>
        </trans-unit>
        <trans-unit id="3f179983c9e95d4a5ae2866ead5db5cd85912898" translate="yes" xml:space="preserve">
          <source>Ignoring whitespace strings, you could use this to check for null, empty and undefined:</source>
          <target state="translated">Ignorando las cuerdas de los espacios en blanco,podrías usar esto para buscar nulos,vacíos e indefinidos:</target>
        </trans-unit>
        <trans-unit id="676fd1bc88c1b0237674cd5954b0f60481845100" translate="yes" xml:space="preserve">
          <source>In the below snippet I compare results of chosen 18 methods by use different input parameters</source>
          <target state="translated">En el siguiente fragmento comparo los resultados de los 18 métodos elegidos utilizando diferentes parámetros de entrada</target>
        </trans-unit>
        <trans-unit id="e56da9b318ab9df314decdbc0174a92c09abd510" translate="yes" xml:space="preserve">
          <source>It covers a lot of cases like &lt;code&gt;{}&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, etc.</source>
          <target state="translated">Cubre muchos casos como &lt;code&gt;{}&lt;/code&gt; , &lt;code&gt;''&lt;/code&gt; , &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;undefined&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="177bce9d50cc7c759b9884978ff310ac77e8d780" translate="yes" xml:space="preserve">
          <source>It is concise and it works for undefined properties, although it's not the most readable.</source>
          <target state="translated">Es conciso y funciona para propiedades no definidas,aunque no es el más legible.</target>
        </trans-unit>
        <trans-unit id="4346eda8dabc4b95eedbdc297939a0292ecea990" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;null,undefined,0,000,&quot;&quot;,false&lt;/code&gt;.</source>
          <target state="translated">Devuelve &lt;code&gt;false&lt;/code&gt; para &lt;code&gt;null,undefined,0,000,&quot;&quot;,false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63ffe9b80bd859e119848ba55b4fe2235bc7c17c" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;true&lt;/code&gt; for string &quot;0&quot; and whitespace &quot; &quot;.</source>
          <target state="translated">Devuelve &lt;code&gt;true&lt;/code&gt; para la cadena &quot;0&quot; y el espacio en blanco &quot;&quot;.</target>
        </trans-unit>
        <trans-unit id="68fed1e5c0fd1356254f2473de8ebeded49ddf96" translate="yes" xml:space="preserve">
          <source>It works on a null string, and on an empty string and it is accessible for all strings. In addition, it could be expanded to contain other JavaScript empty or whitespace characters (i.e. nonbreaking space, byte order mark, line/paragraph separator, etc.).</source>
          <target state="translated">Funciona en una cuerda nula,y en una cuerda vacía y es accesible para todas las cuerdas.Además,puede ser ampliado para contener otros caracteres de JavaScript vacíos o de espacio en blanco (es decir,espacio sin romper,marca de orden de bytes,separador de line-paragraph,etc.).</target>
        </trans-unit>
        <trans-unit id="124516c60c45e1945641a02be7a7160c0c991fd9" translate="yes" xml:space="preserve">
          <source>Meanwhile we can have one function that checks for all 'empties' like &lt;strong&gt;null, undefined, '', ' ', {}, []&lt;/strong&gt;.
So I just wrote this.</source>
          <target state="translated">Mientras tanto, podemos tener una funci&amp;oacute;n que verifica todos los 'vac&amp;iacute;os' como &lt;strong&gt;nulo, indefinido, '', '', {}, []&lt;/strong&gt; . Entonces acabo de escribir esto.</target>
        </trans-unit>
        <trans-unit id="2158bc3ad89efc8ddb1227911b6ad7bd9524888f" translate="yes" xml:space="preserve">
          <source>My version:</source>
          <target state="translated">Mi versión:</target>
        </trans-unit>
        <trans-unit id="ad538cfea97e6a8019c038a047166b5919a62234" translate="yes" xml:space="preserve">
          <source>Not all tested methods support all input cases.</source>
          <target state="translated">No todos los métodos probados apoyan todos los casos de entrada.</target>
        </trans-unit>
        <trans-unit id="3118a6caed5588efeddb92c6bd6599ab9f196a0d" translate="yes" xml:space="preserve">
          <source>Or use type casting:</source>
          <target state="translated">O utilizar el tipo de casting:</target>
        </trans-unit>
        <trans-unit id="f5df947ea4e06eb88528f81a80923b33db2a44d6" translate="yes" xml:space="preserve">
          <source>Otherwise if you'd like to check both &lt;code&gt;''&lt;/code&gt; empty string and &lt;code&gt;'   '&lt;/code&gt; with space, you can do that by just adding &lt;code&gt;trim()&lt;/code&gt;, something like the code below:</source>
          <target state="translated">De lo contrario, si desea marcar &lt;code&gt;''&lt;/code&gt; cadena vac&amp;iacute;a y &lt;code&gt;' '&lt;/code&gt; con espacio, puede hacerlo simplemente agregando &lt;code&gt;trim()&lt;/code&gt; , algo as&amp;iacute; como el c&amp;oacute;digo a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="e39cd29cb0fd6f5e033d543e79369564aeaa6ad1" translate="yes" xml:space="preserve">
          <source>PS.: &lt;strong&gt;You don't need to check typeof&lt;/strong&gt;, since it would explode and throw even before it enters the method</source>
          <target state="translated">PD .: &lt;strong&gt;No es necesario verificar typeof&lt;/strong&gt; , ya que explotar&amp;iacute;a y arrojar&amp;iacute;a incluso antes de ingresar al m&amp;eacute;todo</target>
        </trans-unit>
        <trans-unit id="eec32088dbe27ed7fe9e171f95eca92658e99580" translate="yes" xml:space="preserve">
          <source>PS: In JavaScript, don't use line break after &lt;code&gt;return&lt;/code&gt;;</source>
          <target state="translated">PD: en JavaScript, no use el salto de l&amp;iacute;nea despu&amp;eacute;s del &lt;code&gt;return&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="5bd3f7820af903720acc7644f15a1fc20d842887" translate="yes" xml:space="preserve">
          <source>Sample on &lt;a href=&quot;http://jsfiddle.net/YZfGs/&quot;&gt;jsfiddle&lt;/a&gt;.</source>
          <target state="translated">Muestra en &lt;a href=&quot;http://jsfiddle.net/YZfGs/&quot;&gt;jsfiddle&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">Mostrar fragmento de código</target>
        </trans-unit>
        <trans-unit id="4d7a36e26fd9437353d9e2cfcf8ddd24050003d4" translate="yes" xml:space="preserve">
          <source>So I decided to answer myself:</source>
          <target state="translated">Así que decidí contestarme a mí mismo:</target>
        </trans-unit>
        <trans-unit id="302f7ef338a27df313d235f96e6c43f2267e5612" translate="yes" xml:space="preserve">
          <source>Something simple like below code can do the job for you if you want to check &lt;code&gt;''&lt;/code&gt; empty strings:</source>
          <target state="translated">Algo simple como el siguiente c&amp;oacute;digo puede hacer el trabajo por usted si desea verificar las cadenas vac&amp;iacute;as:</target>
        </trans-unit>
        <trans-unit id="822ba60a28851b52a02ebace21bb3bb1af9a7ede" translate="yes" xml:space="preserve">
          <source>The closest thing you can get to &lt;code&gt;str.Empty&lt;/code&gt; (with the precondition that str is a String) is:</source>
          <target state="translated">Lo m&amp;aacute;s cercano que puede llegar a &lt;code&gt;str.Empty&lt;/code&gt; (con la condici&amp;oacute;n previa de que str es una cadena) es:</target>
        </trans-unit>
        <trans-unit id="5cfc2477270eeb77856b9ee707a8df10ad747f35" translate="yes" xml:space="preserve">
          <source>The type check is needed in order to avoid runtime errors when &lt;code&gt;test&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">La verificaci&amp;oacute;n de tipo es necesaria para evitar errores de tiempo de ejecuci&amp;oacute;n cuando la &lt;code&gt;test&lt;/code&gt; &lt;code&gt;undefined&lt;/code&gt; est&amp;aacute; definida o es &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="251b94c2e651b4e9d491fb6b7f502f7c1eb47fe0" translate="yes" xml:space="preserve">
          <source>There's no &lt;code&gt;isEmpty()&lt;/code&gt; method, you have to check for the type and the length:</source>
          <target state="translated">No hay &lt;code&gt;isEmpty()&lt;/code&gt; m&amp;eacute;todo isEmpty () , debe verificar el tipo y la longitud:</target>
        </trans-unit>
        <trans-unit id="b2833d7f997a75638e55c5f9958ad98eb6405e57" translate="yes" xml:space="preserve">
          <source>There's nothing representing an empty string in JavaScript. Do a check against either &lt;code&gt;length&lt;/code&gt; (if you know that the var will always be a string) or against &lt;code&gt;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">No hay nada que represente una cadena vac&amp;iacute;a en JavaScript. Realice una comprobaci&amp;oacute;n con cualquier &lt;code&gt;length&lt;/code&gt; (si sabe que la var siempre ser&amp;aacute; una cadena) o con &lt;code&gt;&quot;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e93301ac2ebdc2604e3a22da0c97b3a9960132f9" translate="yes" xml:space="preserve">
          <source>To check if it is an empty string OR a logical equivalent for no-value (null, undefined, 0, NaN, false, ...):</source>
          <target state="translated">Para comprobar si se trata de una cadena vacía O un equivalente lógico de no-valor (nulo,indefinido,0,NaN,falso,...):</target>
        </trans-unit>
        <trans-unit id="3698d54097ab43b9432640c6c99ff207aaf9fc0e" translate="yes" xml:space="preserve">
          <source>To check if it is exactly an empty string:</source>
          <target state="translated">Para comprobar si es exactamente una cadena vacía:</target>
        </trans-unit>
        <trans-unit id="9b4c5c1acb6cded11f68cf461ff5884635337fed" translate="yes" xml:space="preserve">
          <source>To test its nullness one could do something like this:</source>
          <target state="translated">Para probar su nulidad uno podría hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="3d82a9f15156c36519fc72f9af221c32d7422e29" translate="yes" xml:space="preserve">
          <source>Try this</source>
          <target state="translated">Pruebe esto.</target>
        </trans-unit>
        <trans-unit id="b21480ff457e048e3c7a6593bfb52719279e1f05" translate="yes" xml:space="preserve">
          <source>Try this:</source>
          <target state="translated">Pruebe esto:</target>
        </trans-unit>
        <trans-unit id="102acb4ebe4f9295900af5f522c91830395377c0" translate="yes" xml:space="preserve">
          <source>Try:</source>
          <target state="translated">Try:</target>
        </trans-unit>
        <trans-unit id="debbc2eb12f8f2918bbf071deb603a77d62e1d3f" translate="yes" xml:space="preserve">
          <source>Use cases and results.</source>
          <target state="translated">Usar los casos y los resultados.</target>
        </trans-unit>
        <trans-unit id="f2a17fb75a2b21128655ecf1303ed82a08062fc5" translate="yes" xml:space="preserve">
          <source>Using this you can also make sure that string is not undefined or null too. Remember, undefined, null and empty are three different things.</source>
          <target state="translated">Usando esto también puedes asegurarte de que la cadena no esté indefinida o sea nula también.Recuerda,indefinido,nulo y vacío son tres cosas diferentes.</target>
        </trans-unit>
        <trans-unit id="d24f502de4b92e43a5297f639a7e3a11a2bfc1e4" translate="yes" xml:space="preserve">
          <source>With that said, wrap it up in a method like:</source>
          <target state="translated">Dicho esto,envuélvelo en un método como:</target>
        </trans-unit>
        <trans-unit id="7109799ec1e9e4a283be47540f14538c0b16b57d" translate="yes" xml:space="preserve">
          <source>Without a doubt for quick and simple implementation the winner is: &lt;code&gt;if (!str.length) {...}&lt;/code&gt;</source>
          <target state="translated">Sin duda para una implementaci&amp;oacute;n r&amp;aacute;pida y simple, el ganador es: &lt;code&gt;if (!str.length) {...}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19165eba04c535cd4831b465de7a3bf851a93ad0" translate="yes" xml:space="preserve">
          <source>You can easily add it to native &lt;strong&gt;String&lt;/strong&gt; object in &lt;strong&gt;JavaScript&lt;/strong&gt; and reuse it over and over...</source>
          <target state="translated">Puede agregarlo f&amp;aacute;cilmente al objeto &lt;strong&gt;String&lt;/strong&gt; nativo en &lt;strong&gt;JavaScript&lt;/strong&gt; y reutilizarlo una y otra vez ...</target>
        </trans-unit>
        <trans-unit id="cc3a14119d465b7eee720224b2fe86e92ff1e963" translate="yes" xml:space="preserve">
          <source>You can test it with this regular expression:</source>
          <target state="translated">Puedes probarlo con esta expresión regular:</target>
        </trans-unit>
        <trans-unit id="2cc4bd0ada7518c036ce40d7c6fb7c0c3a67a1a2" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt;:
_.isEmpty(value).</source>
          <target state="translated">Puede usar &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; : _.isEmpty (value).</target>
        </trans-unit>
        <trans-unit id="8d3d12a96a23a09375cf4e4808c1baf8493ea1c3" translate="yes" xml:space="preserve">
          <source>You cannot have !! or only &lt;code&gt;if(value)&lt;/code&gt; since if you check &lt;code&gt;0&lt;/code&gt; it's going to give you a false answer (0 is false).</source>
          <target state="translated">No puedes tener !! o solo &lt;code&gt;if(value)&lt;/code&gt; ya que si marca &lt;code&gt;0&lt;/code&gt; le dar&amp;aacute; una respuesta falsa (0 es falso).</target>
        </trans-unit>
        <trans-unit id="1443521148bee1163d4e565aeb595aad139e7714" translate="yes" xml:space="preserve">
          <source>You could also go with regular expressions:</source>
          <target state="translated">También podrías ir con expresiones regulares:</target>
        </trans-unit>
        <trans-unit id="99b77bf04caf6768b4afce4758de85b686adfe15" translate="yes" xml:space="preserve">
          <source>You need to start checking if it's undefined. Otherwise your method can explode, and then you can check if it equals null or is equal to an empty string.</source>
          <target state="translated">Tienes que empezar a comprobar si está indefinido.De lo contrario,tu método puede explotar,y entonces puedes comprobar si es igual a nulo o es igual a una cadena vacía.</target>
        </trans-unit>
        <trans-unit id="46f2d7311dcbc0da15594452e949ed2c464e9bc9" translate="yes" xml:space="preserve">
          <source>and you can call it this way:</source>
          <target state="translated">y puedes llamarlo así:</target>
        </trans-unit>
        <trans-unit id="ad7330559e8c8e0d0f1eaa33df62abba695bd3e1" translate="yes" xml:space="preserve">
          <source>check that &lt;code&gt;var a;&lt;/code&gt; exist</source>
          <target state="translated">compruebe que &lt;code&gt;var a;&lt;/code&gt; existe</target>
        </trans-unit>
        <trans-unit id="893cd211a7d3192a132f3e9f8a0988231c81329b" translate="yes" xml:space="preserve">
          <source>the simple solutions based on &lt;code&gt;!str&lt;/code&gt;,&lt;code&gt;==&lt;/code&gt;,&lt;code&gt;===&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; are fast for all browsers (A,B,C,G,I,J)</source>
          <target state="translated">Las soluciones simples basadas en &lt;code&gt;!str&lt;/code&gt; , &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;===&lt;/code&gt; y &lt;code&gt;length&lt;/code&gt; son r&amp;aacute;pidas para todos los navegadores (A, B, C, G, I, J)</target>
        </trans-unit>
        <trans-unit id="bc3f39f7d435e9471ffcf73a5b54560e34a1cc58" translate="yes" xml:space="preserve">
          <source>the solutions based on the regular expression (&lt;code&gt;test&lt;/code&gt;,&lt;code&gt;replace&lt;/code&gt;) and &lt;code&gt;charAt&lt;/code&gt; are slowest for all browsers (H,L,M,P)</source>
          <target state="translated">Las soluciones basadas en la expresi&amp;oacute;n regular ( &lt;code&gt;test&lt;/code&gt; , &lt;code&gt;replace&lt;/code&gt; ) y &lt;code&gt;charAt&lt;/code&gt; son las m&amp;aacute;s lentas para todos los navegadores (H, L, M, P)</target>
        </trans-unit>
        <trans-unit id="b2148156801e321107c315272e5c6d24370db5f9" translate="yes" xml:space="preserve">
          <source>the solutions marked as fastest was fastest only for one test run - but in many runs it changes inside 'fast' solutions group</source>
          <target state="translated">las soluciones marcadas como más rápidas fueron las más rápidas sólo para una prueba-pero en muchas pruebas cambia dentro del grupo de soluciones &quot;rápidas&quot;.</target>
        </trans-unit>
        <trans-unit id="b4ad398f6f72aa719a09141ec08d4fa75fc3aad2" translate="yes" xml:space="preserve">
          <source>trim out the &lt;code&gt;false spaces&lt;/code&gt; in the value, then test for &lt;code&gt;emptiness&lt;/code&gt;</source>
          <target state="translated">recorta los &lt;code&gt;false spaces&lt;/code&gt; en el valor, luego prueba el &lt;code&gt;emptiness&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
