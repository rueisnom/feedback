<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/151969">
    <body>
      <group id="151969">
        <trans-unit id="4d4cde087294d40ddd52dd8d2cf0c9449f3ab766" translate="yes" xml:space="preserve">
          <source>$derek is now a specific instance of Person.
Every Person has a first_name and a last_name, but $derek has a specific first_name and last_name (Derek Martin). Inside the $derek instance, we can refer to those as $this-&amp;gt;first_name and $this-&amp;gt;last_name</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ derekはPersonの特定のインスタンスになりました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての人にはfirst_nameとlast_nameがありますが、$ derekには特定のfirst_nameとlast_nameがあります（Derek Martin）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ derekインスタンス内では、$ this-&amp;gt; first_nameおよび$ this-&amp;gt; last_nameとして参照できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1b921f3468463d58e60424bf8684d38d91c7aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this-&amp;gt;&lt;/code&gt; is used to refer to a specific instance of a class's variables (member variables) or methods.</source>
          <target state="translated">&lt;code&gt;$this-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、クラスの変数（メンバー変数）またはメソッドの特定のインスタンスを参照するために使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32f2111f75129681ff16a2fee0df55016b4a6f5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this-&amp;gt;&lt;/code&gt; refers to the current object (an instance of a class), whereas &lt;code&gt;static::&lt;/code&gt; refers to a class</source>
          <target state="translated">&lt;code&gt;$this-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のオブジェクト（クラスのインスタンス）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はクラスを参照し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d8cefbc92c029e940c5e95f8fbcd6439e09cc62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; can be used to call static functions</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は静的関数を呼び出すために使用できます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4574451c83c5b126c11a21076ec18369a67e3bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; can not be used inside static functions</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は静的関数内では使用できません&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25dbe760b866ebf1da982eca618b05efcaf04e79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; refers current object.
You can use static instead of self.
See the example:</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のオブジェクトを参照します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自分の代わりに静的を使用できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例を参照してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3153c6f2de78d3079c064c225cb8b957319e5d72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; refers to the current class object, &lt;code&gt;self&lt;/code&gt; refers to the current class (Not object). The class is the blueprint of the object. So you define a class, but you construct objects.</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のクラスオブジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のクラス（オブジェクトではない）を指します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスはオブジェクトの青写真です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、クラスを定義しますが、オブジェクトを作成します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="162dc1830d43b9c0795bc91d68280a724964aa1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; refers to the current object</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のオブジェクトを参照します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99754f65729ba08744c867cf124e9463016f4774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; requires an instance of the class</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;にはクラスのインスタンスが必要です&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8673300e52567f48c9fd1fbc397726c3e2c158c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; should not be used to call static member variables.  Use &lt;code&gt;self&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して静的メンバー変数を呼び出すことはできません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a56f8da08ac74fc34f4efcbc5ca5b6f2e8bb3e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt;, on the other hand, is used to call an instance and methods of any class as long as that class is accessible.</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ thisは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、そのクラスがアクセス可能である限り、任意のクラスのインスタンスとメソッドを呼び出すために使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa9a0eda2afed89a13353f8481c9d1fd8c2464ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt; - &lt;em&gt;object-operator&lt;/em&gt; - This is always used when we're accessing an instance.</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;object-operator-&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、インスタンスにアクセスするときに常に使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="515ec7d21612595a2e89c062cdecc358fc1b440a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt; - &lt;em&gt;scope-resolution-operator&lt;/em&gt; - This is always used to access a Class static property or method.</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;scope-resolution-operator-&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは常に、クラスの静的プロパティまたはメソッドにアクセスするために使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fad4836b5ad0bd35722936dd55551001c8de6907" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parent&lt;/code&gt; - This refers to the parent of the current class.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、現在のクラスの親を指します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce0b08596ba53df33a733dc5c30d04f99b98040f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sayHello()&lt;/code&gt; uses the &lt;code&gt;$this&lt;/code&gt; pointer, so the vtable is invoked to call &lt;code&gt;Geek::getTitle()&lt;/code&gt;.
&lt;code&gt;sayGoodbye()&lt;/code&gt; uses &lt;code&gt;self::getTitle()&lt;/code&gt;, so the vtable is not used, and &lt;code&gt;Person::getTitle()&lt;/code&gt; is called.  In both cases, we are dealing with the method of an instantiated object, and have access to the &lt;code&gt;$this&lt;/code&gt; pointer within the called functions.</source>
          <target state="translated">&lt;code&gt;sayHello()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ポインターを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Geek::getTitle()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出すためにvtableが呼び出されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sayGoodbye()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::getTitle()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;getTitle（）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、vtableは使用されず、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person::getTitle()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が呼び出されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どちらの場合も、インスタンス化されたオブジェクトのメソッドを処理しており&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、呼び出された関数内の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ポインターに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アクセスでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f6e465c1f2a9affd31500d919b01c2214eeaa46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self::&lt;/code&gt; doesn't</source>
          <target state="translated">&lt;code&gt;self::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しない&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbadacf65051d3980613f537162a33fcf7458388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; (not $self) refers to the &lt;em&gt;type&lt;/em&gt; of class, where as &lt;code&gt;$this&lt;/code&gt; refers to the current &lt;em&gt;instance&lt;/em&gt; of the class.  &lt;code&gt;self&lt;/code&gt; is for use in static member functions to allow you to access static member variables. &lt;code&gt;$this&lt;/code&gt; is used in non-static member functions, and is a reference to the instance of the class on which the member function was called.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（$ selfではない）は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指し&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、静的メンバー関数で使用して、静的メンバー変数にアクセスできるようにします。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は非静的メンバー関数で使用され、メンバー関数が呼び出されたクラスのインスタンスへの参照です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7501b335ad092e875766772dfcee2ab55150c573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; - This refers to the current class name. So &lt;code&gt;self::baz()&lt;/code&gt; is the same as &lt;code&gt;Foo::baz()&lt;/code&gt; within the &lt;code&gt;Foo&lt;/code&gt; class (any method on it).</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは現在のクラス名を指します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::baz()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス（その上の任意のメソッド&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo::baz()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Foo :: baz（）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同じ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46125b937734c41cde08d2d4e873e75c00527631" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; can also turn off polymorphic behavior by bypassing the vtable</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、vtableをバイパスすることで、ポリモーフィックな動作をオフにすることもできます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c07d8ca95abef37884d269f1460e99adc6f5488f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; can be used inside static functions</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は静的関数内で使用できます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8519f5337d1a8c7d31589e81a7c0bcd28f45de46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; can be used to call static functions and reference static member variables</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して静的関数を呼び出し、静的メンバー変数を参照できます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a88577bc5bcc310216b79eddcf514fa26da7507e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; refers current class(in which it is called),</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のクラス（それが呼び出されるクラス）を参照し、&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fc57fa29902202991d5ad791a8714aad56e680c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; refers to the current class</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のクラスを参照します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6368e89ac608c21f0b0131eb9abfb6d1877afede" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; - This refers to the called class. Thanks to inheritance, child classes can override methods and static properties. So calling them using &lt;code&gt;static&lt;/code&gt; instead of a class name allows us to resolve where the call came from, rather than the current level.</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出されたクラスを指します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;継承のおかげで、子クラスはメソッドと静的プロパティをオーバーライドできます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、クラス名の代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してそれらを呼び出すと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、現在のレベルではなく、呼び出し元の場所を解決できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a9be218e6f9cc24e0de67fb310654293027aa93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Constants&lt;/em&gt; - Class resolved constants. Not going any deeper here, but adding for completeness:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -クラス解決済み定数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここではこれ以上詳しく説明しませんが、完全を期すために追加します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56ea9526ebb1c196092c1295f1be048af86503c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Methods&lt;/em&gt; - These are functions which each instance will contain (and operate on instances).</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -これらは、各インスタンスに含まれる（およびインスタンスで動作する）関数です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7458b2a34b42c915eaa6efa2d12fb87ded68bc7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Properties&lt;/em&gt; - Think of these as variables that each instance will contain.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -これらは、各インスタンスに含まれる変数と考えてください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="128d60b444cb55406fdd8df7a74e98947804e819" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Static Methods&lt;/em&gt; - These are functions which are shared across the entire class. They do &lt;strong&gt;not&lt;/strong&gt; operate on instances, but instead on the static properties only.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的メソッド&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -これらはクラス全体で共有される関数です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らはない&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス上で、代わりにのみ静的プロパティを操作します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f75a3c90992d8bdd9876921d564afd1084b48ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Static Properties&lt;/em&gt; - Think of these as variables that are shared at the class level. Meaning that they are never copied by each instance.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的プロパティ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -これらは、クラスレベルで共有される変数と考えてください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、各インスタンスによってコピーされることはありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="816b7732ab0ba8e4f6af1fdc7d51f95511e324b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DO NOT USE &lt;code&gt;self::&lt;/code&gt;, use &lt;code&gt;static::&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DO NOT USE &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static::&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1960ca308fa4467b88ed48f433d9e60c3ae74d7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SELF::&lt;/strong&gt;
If you are coding &lt;em&gt;outside&lt;/em&gt; the object that has the static method you want to refer to, you must call it using the object's name View::format_phone_number($phone_number);
If you are coding &lt;em&gt;inside&lt;/em&gt; the object that has the static method you want to refer to, you can &lt;em&gt;either&lt;/em&gt; use the object's name View::format_phone_number($pn), OR you can use the self::format_phone_number($pn)  shortcut</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SELF ::&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照する静的メソッドを持つオブジェクトの&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外部で&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; コーディングする場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オブジェクト名View :: format_phone_number（$ phone_number）;を使用してそれを呼び出す必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照する静的メソッドを持つオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コーディング&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、オブジェクト名View :: format_phone_number（$ pn）を使用するか、またはself :: format_phone_number（$ pn）ショートカットを使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68bf47fe448e7b6bcaa227ddc8b7bd6c9cb0deca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Method Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的メソッドの例：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7a950b3b9c74af6be7e4eb081fdb583f914db33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Variables Example:&lt;/strong&gt;
Pretend we have a database class with a single member variable: static $num_connections;
Now, put this in the constructor:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的変数の例：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 単一のメンバー変数を持つデータベースクラスがあるとします：static $ num_connections; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、これをコンストラクターに入れます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cc5fbd787f82bdc666880548b05944b8e6f8fb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;self::&lt;/strong&gt;&amp;nbsp;keyword&amp;nbsp;used for the current class and basically it is used to access static members, methods, and constants. But in case of &lt;strong&gt;$this&lt;/strong&gt; you cannot call the static member, method and functions.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;self ::&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;nbsp;キーワードは現在のクラスに使用され、基本的には静的メンバー、メソッド、定数にアクセスするために使用されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ thisの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、静的メンバー、メソッド、関数を呼び出すことはできません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa4fdde56e69bee5798199be9a881d0c1436e7ac" translate="yes" xml:space="preserve">
          <source>Accessing State</source>
          <target state="translated">状態へのアクセス</target>
        </trans-unit>
        <trans-unit id="a0d9ee114dd82860876deacf8335621865d41b1a" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;http://www.php.net/manual/en/language.oop5.static.php&quot;&gt;http://www.php.net/manual/en/language.oop5.static.php&lt;/a&gt; there is no &lt;code&gt;$self&lt;/code&gt;. There is only &lt;code&gt;$this&lt;/code&gt;, for referring to the current instance of the class (the object), and self, which can be used to refer to static members of a class. The difference between an object instance and a class comes into play here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/language.oop5.static.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.php.net/manual/en/language.oop5.static.php&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一の存在である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスの静的メンバを参照するために使用することができ、現在のクラス（オブジェクト）のインスタンス、および自己を参照するために、。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでは、オブジェクトインスタンスとクラスの違いが関係しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="150f7ef864ced34a00980d60e9bab4db4fa88e38" translate="yes" xml:space="preserve">
          <source>According to php.net there are three special keywords in this context: &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;parent&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt;. They are used to access properties or methods from inside the class definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;php.netによると、このコンテキストには&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 3つの特別なキーワードが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらは、クラス定義内からプロパティまたはメソッドにアクセスするために使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27c355478a7ac93a44923b6dd97a919aaf871fda" translate="yes" xml:space="preserve">
          <source>Additionally since &lt;code&gt;$this::&lt;/code&gt; has not been discussed yet.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;についてはまだ議論されていません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec44dc4850ea2a9fda1b8ab9805c34f408036cf2" translate="yes" xml:space="preserve">
          <source>Additionally, we can call a static method on an object in the same way:</source>
          <target state="translated">さらに、同じようにオブジェクトの静的メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="004aca446e1b708534e6e4e4a299341485674162" translate="yes" xml:space="preserve">
          <source>An object on the other hand is what's called an &lt;em&gt;instance&lt;/em&gt; of a Class. What that means is that we take the &quot;blueprint&quot; of the class, and use it to make a dynamic copy. This copy is now specifically tied to the variable it's stored in. Therefore, any changes to an &lt;em&gt;instance&lt;/em&gt; is local to that instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方、オブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、クラスの&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるもの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、クラスの「青写真」を取得し、それを使用して動的コピーを作成します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このコピーは、格納されている変数に具体的に関連付けられています。したがって、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;への変更は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのインスタンスに対してローカルです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="572f6e2edf1f53c6894eb0db147eb684a34a5078" translate="yes" xml:space="preserve">
          <source>As no one here talked about performances, here is a small benchmark I did (5.6):</source>
          <target state="translated">ここでは誰もパフォーマンスの話をしていないので、ここでは私がやった小さなベンチマーク(5.6)を紹介します。</target>
        </trans-unit>
        <trans-unit id="07fc332427462b72ff5bd8f5b19441aced239f1f" translate="yes" xml:space="preserve">
          <source>As you can see, public static function prettyName knows nothing about the object. It's just working with the parameters you pass in, like a normal function that's not part of an object. Why bother, then, if we could just have it not as part of the object?</source>
          <target state="translated">ご覧のように、public static function prettyName はオブジェクトについて何も知りません。オブジェクトの一部ではない通常の関数のように、あなたが渡すパラメータを使って動作しています。オブジェクトの一部ではないのに、なぜ悩むのでしょうか?</target>
        </trans-unit>
        <trans-unit id="22e61f5fe01d6d4929a77c34a82cb4e3c22373e8" translate="yes" xml:space="preserve">
          <source>As you can tell, there is a property on that class called &lt;code&gt;$name&lt;/code&gt; and a method (function) called &lt;code&gt;sayHello()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご存知のように、そのクラスには&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼ばれるプロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sayHello()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるメソッド（関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2d726517905b7da67b4f226d2c382352a4f7d3ef" translate="yes" xml:space="preserve">
          <source>Because $num_connections is static (shared), it will reflect the total number of active database objects. You may have seen this technique used to share database connections among all instances of a database class. This is done because creating the database connection takes a long time, so it's best to create just one, and share it (this is called a Singleton Pattern).</source>
          <target state="translated">num_connections は静的 (共有)なので、アクティブなデータベースオブジェクトの総数を反映します。このテクニックは、データベースクラスのすべてのインスタンス間でデータベース接続を共有するために使用されているのを見たことがあるかもしれません。これは、データベース接続の作成に時間がかかるので、1つだけ作成して共有するのがベストだからです(これをシングルトンパターンと呼びます)。</target>
        </trans-unit>
        <trans-unit id="814c2f3426404175d88afad2fc920417154c085e" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;self&lt;/code&gt; is not an object, it's basically a type that automatically refers to the current class, you use it like: &lt;code&gt;self::member&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はオブジェクトではない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、基本的には現在のクラスを自動的に参照する型なので、次のように使用します：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::member&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d15b7ff19010b7db1208f885ce45c034a47ebb8d" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;this&lt;/code&gt; is an object, you use it like: &lt;code&gt;$this-&amp;gt;member&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はオブジェクトな&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次のように使用します：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;member&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dab8b984058591150715ae9b357a22b033be3c9d" translate="yes" xml:space="preserve">
          <source>Because tying everything together using class names is rather dirty, PHP provides 3 basic &quot;shortcut&quot; keywords to make scope resolving easier.</source>
          <target state="translated">クラス名を使ってすべてを結びつけるのはかなり汚いので、PHPではスコープ解決を簡単にするための基本的な3つの &quot;ショートカット &quot;キーワードを用意しています。</target>
        </trans-unit>
        <trans-unit id="d2684a70050ede11cd9cb2996c483ad916662277" translate="yes" xml:space="preserve">
          <source>But if the DB class wanted to refer to its own static variable, it would just say self:
&lt;strong&gt;Example:&lt;/strong&gt; self::connection;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、DBクラスが独自の静的変数を参照したい場合は、単にselfと表示されます。 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; self :: connection;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c99d4b4a594aefb1de1e780889e572f61a7c48a" translate="yes" xml:space="preserve">
          <source>By &lt;a href=&quot;http://board.phpbuilder.com/member.php?145249-laserlight&quot;&gt;http://board.phpbuilder.com/member.php?145249-laserlight&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://board.phpbuilder.com/member.php?145249-laserlight&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://board.phpbuilder.com/member.php?145249-laserlight&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7934d25bc9763d227c8b0b8ed36b96949eacc476" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Deceased::status()&lt;/code&gt; we would expect to see &quot;Person is deceased&quot; however what we see is &quot;Person is alive&quot; as the scope contains the original method definition when call to &lt;code&gt;self::getStatus()&lt;/code&gt; was defined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Deceased::status()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出すと、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「Person is deceased」が表示されることが予想されますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::getStatus()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;への呼び出しが定義されたときにスコープには元のメソッド定義が含まれているため、「Person is alive」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が表示されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6429c9edf8cb87c26faeed0f5a4bf3a3b795d575" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Foo::bar()&lt;/code&gt; will call the &lt;code&gt;baz()&lt;/code&gt; method statically, and hence &lt;code&gt;$this&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; be populated. It's worth noting that in recent versions of PHP (5.3+) this will trigger an &lt;code&gt;E_STRICT&lt;/code&gt; error, because we're calling non-static methods statically.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo::bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出します&lt;/font&gt;&lt;/font&gt; &lt;code&gt;baz()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的メソッド、ひいては&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;になる&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取り込むことを。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最近のバージョンのPHP（5.3以降）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では、静的ではないメソッドを静的に呼び出すため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;エラー&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がトリガーされることに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9aa01e2331e57fa5dfc0c32786cfd45af2abfa86" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;bar()&lt;/code&gt; method on &lt;code&gt;$foo&lt;/code&gt; (an instance of &lt;code&gt;Foo&lt;/code&gt;) using the object-operator: &lt;code&gt;$foo-&amp;gt;bar()&lt;/code&gt; will result in the instance's version of &lt;code&gt;$a&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトオペレーター&lt;/font&gt; &lt;code&gt;$foo-&amp;gt;bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して&lt;/font&gt; &lt;code&gt;$foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、インスタンスのバージョンの&lt;/font&gt; &lt;code&gt;$a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd7af18c4e6c86cbdd3243a59f7ace40e90ec5fd" translate="yes" xml:space="preserve">
          <source>Case 1: Use &lt;code&gt;self&lt;/code&gt; can be used for class constants</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ケース1：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス定数に使用できる&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="670e31ee56c242a74a46a36028a84bb3dc79aef9" translate="yes" xml:space="preserve">
          <source>Case 2: For static properties</source>
          <target state="translated">ケース2:静的プロパティの場合</target>
        </trans-unit>
        <trans-unit id="ea3c14b550f7e09eccd86e522970aef004cb94b8" translate="yes" xml:space="preserve">
          <source>ClassName:: is used to refer to that type of class, and its static variables, static methods. If it helps, you can mentally replace the word &quot;static&quot; with &quot;shared&quot;.    Because they are shared, they cannot refer to $this, which refers to a specific instance (not shared). Static Variables (i.e. static $db_connection) can be shared among all instances of a type of object. For example, all database objects share a single connection (static $connection).</source>
          <target state="translated">ClassName::は、そのタイプのクラスとその静的変数、静的メソッドを参照するために使用されます。参考になれば、精神的に &quot;static &quot;という単語を &quot;shared &quot;に置き換えることができます。これらは共有されているので、特定のインスタンス(共有されていない)を参照する$thisを参照することはできません。静的変数 (すなわち静的 $db_connection)は、あるタイプのオブジェクトのすべてのインスタンス間で共有することができます。たとえば、すべてのデータベースオブジェクトは単一の接続を共有します (static $connection)。</target>
        </trans-unit>
        <trans-unit id="bf18f2de4a445263792dc727f052cd48a1782977" translate="yes" xml:space="preserve">
          <source>Classes And Objects, Conceptually</source>
          <target state="translated">クラスとオブジェクト、概念的に</target>
        </trans-unit>
        <trans-unit id="00c5252c394597f9ca37e455c6ff334c93f1a9f0" translate="yes" xml:space="preserve">
          <source>Consider this code:</source>
          <target state="translated">このコードを考えてみてください。</target>
        </trans-unit>
        <trans-unit id="78c1c7da1f711105ba800de75e2c36e85347befc" translate="yes" xml:space="preserve">
          <source>Defining State</source>
          <target state="translated">状態の定義</target>
        </trans-unit>
        <trans-unit id="8ef799b5cf00ccf1ed5cccac63003d0f99b39c86" translate="yes" xml:space="preserve">
          <source>Every time we create a new instance, it will increase our connection counter by one. Every time we destroy or stop using an instance, it will decrease the connection counter by one.   In this way, we can monitor the number of instances of the database object we have in use with:</source>
          <target state="translated">新しいインスタンスを作成するたびに、接続カウンタが1つ増えます。インスタンスを破棄したり使用を停止したりするたびに、接続カウンタが1つ減ります。このようにして、使用中のデータベースオブジェクトのインスタンス数を監視することができます。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="71336be8f1c91387e5be20bfa5ddd6397fcb3391" translate="yes" xml:space="preserve">
          <source>First, attaching functions to objects helps you keep things organized, so you know where to find them.</source>
          <target state="translated">まず、オブジェクトに機能を付けることで、物事を整理しやすくなり、どこに何があるかが分かるようになります。</target>
        </trans-unit>
        <trans-unit id="a977b902824d573881034de9eeaec40cf902b3d1" translate="yes" xml:space="preserve">
          <source>For e.g., both of the following examples work without any errors, whether you use &lt;code&gt;self::&lt;/code&gt; or &lt;code&gt;$this-&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、次の例は両方とも、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt; &lt;code&gt;$this-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してもエラーなしで機能します。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f7f847b2118c0fb89352d83202f8e35bee91a35" translate="yes" xml:space="preserve">
          <source>For informational purposes only, as of PHP 5.3 when dealing with instantiated objects to get the current scope value, as opposed to using &lt;code&gt;static::&lt;/code&gt;, one can alternatively use &lt;code&gt;$this::&lt;/code&gt; like so.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;情報提供のみを目的として、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するのではなく、PHP 5.3以降、インスタンス化されたオブジェクトを処理して現在のスコープ値を取得する場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c31fe8f28086a2cca4a030be8478e06341f25a8" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://www.phpbuilder.com/board/showthread.php?t=10354489&quot;&gt;http://www.phpbuilder.com/board/showthread.php?t=10354489&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.phpbuilder.com/board/showthread.php?t=10354489&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.phpbuilder.com/board/showthread.php?t=10354489&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f97706abc6e27e06860b8a13aeab2a1094cf0c57" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://www.programmerinterview.com/index.php/php-questions/php-self-vs-this/&quot;&gt;this blog post&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.programmerinterview.com/index.php/php-questions/php-self-vs-this/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このブログ投稿&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c16b704fc31acac97db9ffe7fe3cb478dcb7bfae" translate="yes" xml:space="preserve">
          <source>From Inside Of An Instance/Class</source>
          <target state="translated">InstanceClass の内部から</target>
        </trans-unit>
        <trans-unit id="b70622e59e066546d8dab2a376f9a6fdcba7cc28" translate="yes" xml:space="preserve">
          <source>From Outside Of An Instance/Class</source>
          <target state="translated">InstanceClass の外部から</target>
        </trans-unit>
        <trans-unit id="834513cba42008c7e5655f7d32b7dacfa8b497f6" translate="yes" xml:space="preserve">
          <source>From the outside of an instance/class, our rules are quite simple and predictable. We have two operators, and each tells us immediately if we're dealing with an instance or a class static:</source>
          <target state="translated">インスタンスクラスの外側から見ると、私たちのルールは非常にシンプルで予測可能です。2 つの演算子があり、それぞれがインスタンスを扱っているのか静的なクラスを扱っているのかをすぐに教えてくれます。</target>
        </trans-unit>
        <trans-unit id="625e278d8c14ec540469b8761431bdf9787d7ac5" translate="yes" xml:space="preserve">
          <source>Full Answer</source>
          <target state="translated">フルアンサー</target>
        </trans-unit>
        <trans-unit id="ef31a45e1459bb857e11670527ba62fb80322f25" translate="yes" xml:space="preserve">
          <source>Goodbye from Ludwig the person</source>
          <target state="translated">ルートヴィヒ・ザ・パーソンからのお別れ</target>
        </trans-unit>
        <trans-unit id="bb5531a2d72f5cf61bd22b931064a8c4817f9398" translate="yes" xml:space="preserve">
          <source>Hello, I'm Ludwig the geek</source>
          <target state="translated">こんにちは、オタクのルートヴィヒです。</target>
        </trans-unit>
        <trans-unit id="d670e29faa4de76c3e660a64d8c58d97e6627c18" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;strong&gt;correct&lt;/strong&gt; usage of &lt;code&gt;$this&lt;/code&gt; and &lt;code&gt;self&lt;/code&gt; for non-static and static member variables:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非静的および静的メンバー変数に対する&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正しい&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5141f805a0f343d34ccea141b4783a9d8b9f487f" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;strong&gt;incorrect&lt;/strong&gt; usage of &lt;code&gt;$this&lt;/code&gt; and &lt;code&gt;self&lt;/code&gt; for non-static and static member variables:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非静的および静的メンバー変数に対する&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誤った&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2dd85eb18c0b0aed70fc90dc3d5ab4892b9ce48f" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;strong&gt;polymorphism&lt;/strong&gt; with &lt;code&gt;$this&lt;/code&gt; for member functions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでの例である&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メンバ関数のためには：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddd234cfab3d7616160878604b52ca6ca638ce97" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;strong&gt;suppressing polymorphic behaviour&lt;/strong&gt; by using &lt;code&gt;self&lt;/code&gt; for member functions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、メンバー関数に&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多態性の動作&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;抑制する&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例を示し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77db41140957c7d832d77ac047057469d4676703" translate="yes" xml:space="preserve">
          <source>Here is an example of correct usage of $this and self for non-static
  and static member variables:</source>
          <target state="translated">ここでは、非静的および静的なメンバー変数のための$thisとselfの正しい使い方の例を示します。</target>
        </trans-unit>
        <trans-unit id="e98b31a6b6d7074788f89eb1eb7ea386f57f3fa3" translate="yes" xml:space="preserve">
          <source>Hope that helps clear things up :)</source>
          <target state="translated">それが物事を明確にするのに役立つことを願っています :)</target>
        </trans-unit>
        <trans-unit id="62165d580654660682e1e2f3f3364de3d8834bad" translate="yes" xml:space="preserve">
          <source>I believe question was not whether you can call the static member of the class by calling &lt;code&gt;ClassName::staticMember&lt;/code&gt;. Question was what's the difference between using &lt;code&gt;self::classmember&lt;/code&gt; and &lt;code&gt;$this-&amp;gt;classmember&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ClassName::staticMember&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出してクラスの静的メンバーを呼び出すことができるかどうかは問題ではなかったと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;思い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::classmember&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;classmember&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用の違い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f37dea87409d20a060ce0c0fd75ea6db8de885d" translate="yes" xml:space="preserve">
          <source>I ran into the same question and the simple answer is:</source>
          <target state="translated">同じ質問にぶつかったのですが、簡単な答えはこうです。</target>
        </trans-unit>
        <trans-unit id="51846eab05f92f21a3036f6092a88ad488017710" translate="yes" xml:space="preserve">
          <source>If a method is called statically, the &lt;code&gt;$this&lt;/code&gt; variable &lt;em&gt;is not defined&lt;/em&gt;. This is because there's no instance associated with a static call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドが静的に呼び出された場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は定義されません&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、静的呼び出しに関連付けられたインスタンスがないためです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01c41208d0fc37d4cef0407bb5d3ed986dcbe8aa" translate="yes" xml:space="preserve">
          <source>If the object-operator is used (&lt;code&gt;-&amp;gt;&lt;/code&gt;), then you &lt;em&gt;always&lt;/em&gt; know you're dealing with an instance. If the scope-resolution-operator is used (&lt;code&gt;::&lt;/code&gt;), you need more information about the context (are we in an object-context already? Are we outside of an object? etc).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトオペレーターが使用されている場合（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスを処理していることが&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;わかります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;scope-resolution-operatorが使用されている場合（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; )&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コンテキストに関する詳細情報が必要です（既にオブジェクトコンテキストにあるか？オブジェクトの外部にいるか？など）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8417118ad8ea5a5b4b4bfaeb120d91e770d8c11e" translate="yes" xml:space="preserve">
          <source>If we call &lt;code&gt;Person::status()&lt;/code&gt; we will see &quot;Person is alive&quot; . Now consider what happens when we make a class that inherits from this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Person::status()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、「Person is alive」が表示されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これから継承するクラスを作成するとどうなるかを考えてみましょう。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1871b679c5ff558f692a536a5af0e64339fe1699" translate="yes" xml:space="preserve">
          <source>If you want to call it outside of the class, use &lt;code&gt;classA::POUNDS_TO_KILOGRAMS&lt;/code&gt; to access the constants</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスの外で呼び出す場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;classA::POUNDS_TO_KILOGRAMS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して定数にアクセスします&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0236d1fb368e9fca37853e8aea62006de6791c4d" translate="yes" xml:space="preserve">
          <source>In PHP 5, what is the difference between using &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;$this&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;違いは何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="165dd949a89067e2305af9add876f710f1b9c3c0" translate="yes" xml:space="preserve">
          <source>In PHP, you use the self keyword to access static properties and methods.</source>
          <target state="translated">PHP では、静的なプロパティやメソッドにアクセスするには self キーワードを使用します。</target>
        </trans-unit>
        <trans-unit id="601ac441f6d008a976bfbf83f44e663663e0706a" translate="yes" xml:space="preserve">
          <source>In general you'll want to use what's known as Late-Static-Binding by using &lt;code&gt;static&lt;/code&gt; instead of &lt;code&gt;self&lt;/code&gt;. But note that they are not the same thing, so saying &quot;always use &lt;code&gt;static&lt;/code&gt; instead of &lt;code&gt;self&lt;/code&gt; is really short-sighted. Instead, stop and think about the call you want to make and think if you want child classes to be able to override that &lt;em&gt;static resolved&lt;/em&gt; call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一般的に、あなたは使用して後期スタティックバインディングとして知られているものを使用したいと思う&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の代わりに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、これらは同じではないため、「常に&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用するの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は近視眼です。代わりに、作成する呼び出しを停止して、子クラスでオーバーライドできるようにするかどうかを検討してください。&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的解決された&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出し。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2b2bca88c8dde02fd410d96e7b370fcf7da09af" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;self::who()&lt;/code&gt; will always output &amp;lsquo;parent&amp;rsquo;, while &lt;code&gt;$this-&amp;gt;who()&lt;/code&gt; will depend on what class the object has.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この例では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::who()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は常に「親」を出力しますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;who()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はオブジェクトが持つクラスに依存します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b2a5c63f2d2bfbbc5ea03e313bf8e590562b004" translate="yes" xml:space="preserve">
          <source>Inside a class definition, &lt;code&gt;$this&lt;/code&gt; refers to the current object, while &lt;code&gt;self&lt;/code&gt; refers to the current class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス定義内では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のオブジェクトを示し、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のクラスを示します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e18b09b6a9092225df7a27c8eb07ef9a54bcd88" translate="yes" xml:space="preserve">
          <source>Inside of a method, an object's instance is represented by the &lt;code&gt;$this&lt;/code&gt; variable. The current state of that object is there, and mutating (changing) any property will result in a change to that instance (but not others).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド内では、オブジェクトのインスタンスは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのオブジェクトの現在の状態がそこにあり、プロパティを変更（変更）すると、そのインスタンスが変更されます（他のインスタンスは変更されません）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59b015ccef26de64cb29b9a9c79774e958d0abfc" translate="yes" xml:space="preserve">
          <source>Inside the DB class, if we were referring to a static method of some other object, we would use the object's name:
&lt;strong&gt;Example:&lt;/strong&gt; Session::getUsersOnline();</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DBクラス内で、他のオブジェクトの静的メソッドを参照している場合は、オブジェクトの名前を使用します。 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Session :: getUsersOnline（）;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="511f6cef2bc3bad6af234f083a72fd94b0bb8965" translate="yes" xml:space="preserve">
          <source>Is not &lt;strong&gt;always&lt;/strong&gt; true.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正しいと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は限りませ&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ん&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9dd2aabd0c86542cdcd00197358f21aea24000bc" translate="yes" xml:space="preserve">
          <source>It also represents the usage of &lt;code&gt;$object::CONSTANT&lt;/code&gt; for example &lt;code&gt;echo $foo::NAME;&lt;/code&gt; as opposed to &lt;code&gt;$this::NAME;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$object::CONSTANT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用法も示し&lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo $foo::NAME;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;echo $ foo :: NAME; &lt;/font&gt; &lt;code&gt;$this::NAME;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;とは対照的&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a3fd980bac5a9aa2d558daa298319d9f1b9d865" translate="yes" xml:space="preserve">
          <source>It is necessary to refer to a class element using &lt;code&gt;self&lt;/code&gt;, and refer to an object element using &lt;code&gt;$this&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してクラス要素を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照し、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してオブジェクト要素を参照する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5bef08b9f2ec75137ccbf02a42401ec6b85e392" translate="yes" xml:space="preserve">
          <source>It's &lt;em&gt;extremely&lt;/em&gt; important to note that when we do this &lt;strong&gt;from outside&lt;/strong&gt;, the object's instance is hidden from the &lt;code&gt;bar()&lt;/code&gt; method. Meaning that it's the exact same as running:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはだ&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常に&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我々はこれを行う際に注意することが重要&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外側から&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オブジェクトのインスタンスがから隠されている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは実行とまったく同じであることを意味します：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0aadd95e658719e057341c5c991a0350fa9491ed" translate="yes" xml:space="preserve">
          <source>It's &lt;em&gt;very&lt;/em&gt; important to note that the &lt;em&gt;class&lt;/em&gt; is a static structure. Which means that the class &lt;code&gt;Person&lt;/code&gt;, once defined, is always the same everywhere you look at it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはだ&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非常&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに注意することが重要な&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスは&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的な構造です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、一度定義されると、どこを見ても常に同じです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec19b474341b34c4172cbdade0e64b94ad730680" translate="yes" xml:space="preserve">
          <source>It's important to note that calling &lt;code&gt;Person-&amp;gt;foo&lt;/code&gt; does not make sense (since &lt;code&gt;Person&lt;/code&gt; is a class, not an instance). Therefore, that is a parse error.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Person-&amp;gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ても意味がないこと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はインスタンスではなくクラスであるため）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、これは解析エラーです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="121f1ab70f120b81cbf4ca9f31975e7c7248d491" translate="yes" xml:space="preserve">
          <source>Just as objects have constructors, they also have destructors, which are executed when the object dies or is unset:</source>
          <target state="translated">オブジェクトにコンストラクタがあるように、オブジェクトにもデストラクタがあります。</target>
        </trans-unit>
        <trans-unit id="b39368b79b19888c891eeaf9cf0f92fd154ff342" translate="yes" xml:space="preserve">
          <source>Let's start off by talking about what a &lt;em&gt;class&lt;/em&gt; and an &lt;em&gt;object&lt;/em&gt; is.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何であるかについて話すことから始めましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68d0bdf1c98814dd0744d461665c1a8b94843fef" translate="yes" xml:space="preserve">
          <source>Make sense? Didn't think so. It's confusing.</source>
          <target state="translated">意味があるのか?そうは思わなかった 混乱してる</target>
        </trans-unit>
        <trans-unit id="0ed46054d102079e43ca7da01870ec7b6e36682b" translate="yes" xml:space="preserve">
          <source>Most of the time you want to refer to the current class which is why you use &lt;code&gt;static&lt;/code&gt; or &lt;code&gt;$this&lt;/code&gt;. However, there are times when you &lt;em&gt;need&lt;/em&gt;&lt;code&gt;self&lt;/code&gt; because you want the original class regardless of what extends it. (Very, Very seldom)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの場合、現在のクラスを参照する必要があるため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何を拡張するかに関係なく、元のクラス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自己&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要になる&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合が&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（とても、めったにない）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de19b5d94b3b965e5ebbaf155e5ca993831896cd" translate="yes" xml:space="preserve">
          <source>Note that static methods and properties are shared by everyone. That makes them basically global variables. With all the same problems that come with globals. So I would be really hesitant to store information in static methods/properties unless you're comfortable with it being truly global.</source>
          <target state="translated">静的なメソッドとプロパティは全員で共有されていることに注意してください。つまり、基本的にはグローバル変数になります。グローバルと同じ問題を抱えています。ですから、真のグローバル変数であることに不安がない限り、静的メソッドプロパティに情報を保存することは本当に躊躇してしまいます。</target>
        </trans-unit>
        <trans-unit id="3bf98e4ccf03409da11de5c0570b5d78fe8ab7d7" translate="yes" xml:space="preserve">
          <source>Note that the calling context is what determines if an instance is used. Therefore:</source>
          <target state="translated">呼び出しコンテキストは、インスタンスが使用されるかどうかを決定するものであることに注意してください。したがって</target>
        </trans-unit>
        <trans-unit id="4b48ef2514bedcb7eef495823704d625f2a09a41" translate="yes" xml:space="preserve">
          <source>Note that we're executing the &lt;code&gt;Person::getName()&lt;/code&gt;&lt;em&gt;instance&lt;/em&gt; method every time. But we're using the &lt;code&gt;parent::getName()&lt;/code&gt; to do it in one of the cases (the child case). This is what makes this approach powerful.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Person::getName()&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを毎回&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行していることに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、私たちは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent::getName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して、いずれかのケース（子ケース）でそれを実行しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが、このアプローチを強力にする理由です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8492456d9b9fec47bcfc3d3e05fd0cabe75aeef5" translate="yes" xml:space="preserve">
          <source>Now it is &lt;em&gt;really&lt;/em&gt; weird here. We're calling a different class, but the &lt;code&gt;$this&lt;/code&gt; that gets passed to the &lt;code&gt;Foo::isFoo()&lt;/code&gt; method is the instance of &lt;code&gt;$bar&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本当に&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;奇妙です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別のクラスを呼び出しています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、&lt;/font&gt; &lt;code&gt;Foo::isFoo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;渡される&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt; &lt;code&gt;$bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d2bfff8447b41db55fa244b685764b4f4dced95" translate="yes" xml:space="preserve">
          <source>Now we can see that self refers to the class in which it is called, while &lt;code&gt;$this&lt;/code&gt; refers to the &lt;strong&gt;class of the current object&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで、selfが呼び出さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れた&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスを&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照しているの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に対し、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在のオブジェクトのクラスを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照していることがわかり&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a39a16821f726ccb961109544f061fbc0093a2e6" translate="yes" xml:space="preserve">
          <source>Now, we're also looking at inheritance here. Ignore for a moment that this is a bad object model, but let's look at what happens when we play with this:</source>
          <target state="translated">さて、ここでは継承についても考えてみましょう。これが悪いオブジェクトモデルであることはちょっと無視して、これを使って何が起こるかを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="4b10725a377c6abde1b3c098b8c29b6fad44ba00" translate="yes" xml:space="preserve">
          <source>Ok, fine. In short, &lt;code&gt;self&lt;/code&gt; is used to reference &lt;em&gt;the current class name&lt;/em&gt; within a class, where as &lt;code&gt;$this&lt;/code&gt; refers to the current object &lt;em&gt;instance&lt;/em&gt;. Note that &lt;code&gt;self&lt;/code&gt; is a copy/paste short-cut. You can safely replace it with your class name, and it'll work fine. But &lt;code&gt;$this&lt;/code&gt; is a dynamic variable that can't be determined ahead of time (and may not even be your class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いいよ。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の現在のクラス名&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を参照&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ために&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が使用され&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のオブジェクト&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスを&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照し&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;はコピー/貼り付けのショートカットである&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;安全にクラス名に置き換えることができ、問題なく機能します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は事前に決定できない動的変数であり、クラスでさえない場合があります。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d1c2349def9d3ca0c5bd7d0e5ef472781dd6018" translate="yes" xml:space="preserve">
          <source>One other thing we should talk about, is that we can &lt;em&gt;check&lt;/em&gt; if an instance is an &lt;code&gt;instanceof&lt;/code&gt; a particular class: &lt;code&gt;$bob instanceof Person&lt;/code&gt; which returns a boolean if the &lt;code&gt;$bob&lt;/code&gt; instance was made using the &lt;code&gt;Person&lt;/code&gt; class, &lt;em&gt;or&lt;/em&gt; a child of &lt;code&gt;Person&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もう1つ説明する必要があるの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が特定のクラスの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どうか&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確認&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt; &lt;code&gt;$bob instanceof Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt; &lt;code&gt;$bob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスが&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/em&gt; &lt;code&gt;Person&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して作成された場合に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブール値を返します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ac5f2f675da339aaafc5d71fa9cb69b196bfae8" translate="yes" xml:space="preserve">
          <source>Output:
      parent
     child</source>
          <target state="translated">出力:親子</target>
        </trans-unit>
        <trans-unit id="0b2ec670e8267a579673e7d6a636d9c07f4610bd" translate="yes" xml:space="preserve">
          <source>PHP 5.3 has a solution. the &lt;strong&gt;&lt;code&gt;static::&lt;/code&gt;&lt;/strong&gt; resolution operator implements &quot;late static binding&quot; which is a fancy way of saying that it's bound to the scope of the class called. Change the line in &lt;code&gt;status()&lt;/code&gt; to  &lt;code&gt;static::getStatus()&lt;/code&gt; and the results are what you would expect. In older versions of PHP you will have to find a kludge to do this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5.3には解決策があります。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;static::&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはと呼ばれるクラスのスコープにバインドされていますというのファンシーな方法です解像度オペレータが実装「結合後半静的」。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;status()&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static::getStatus()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、期待どおりの結果になります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPの古いバージョンでは、これを行うための手がかりを見つける必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75f6e61120a16fecd6bc4ffdcc049a9227358094" translate="yes" xml:space="preserve">
          <source>Second, it prevents naming conflicts. In a big project, you're likely to have two developers create getName() functions. If one creates a ClassName1::getName(), and the other creates ClassName2::getName(), it's no problem at all. No conflict. Yay static methods!</source>
          <target state="translated">第二に、名前の競合を防ぐことができます。大きなプロジェクトでは、二人の開発者が getName()関数を作成することになるでしょう。一人が ClassName1::getName()を作成し、もう一人が ClassName2::getName()を作成すれば、全く問題ありません。競合もありません。イェーイ!静的メソッド</target>
        </trans-unit>
        <trans-unit id="8c86a52517f64ebbbc3e7a528258a315695a861f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://php.net/manual/en/language.oop5.late-static-bindings.php&quot;&gt;PHP Documentation&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://php.net/manual/en/language.oop5.late-static-bindings.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPのドキュメントを&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16f576113b59a35ca1c6b5bc0579a8940b2c1017" translate="yes" xml:space="preserve">
          <source>See the following example which shows overloading.</source>
          <target state="translated">オーバーロードを示す次の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="9243d90df408b082d63c6763de4ec30a6e16a97d" translate="yes" xml:space="preserve">
          <source>Short Answer</source>
          <target state="translated">ショートアンサー</target>
        </trans-unit>
        <trans-unit id="1eccf2f61e5d8187153a5406f4a26b566bd88239" translate="yes" xml:space="preserve">
          <source>Short-Cut Keywords</source>
          <target state="translated">ショートカットキーワード</target>
        </trans-unit>
        <trans-unit id="1c9c0977873122de2ecf7d6eb09bc393a0e41d0c" translate="yes" xml:space="preserve">
          <source>So basically, we're storing information on the class and object container using &quot;hints&quot; about &lt;em&gt;static&lt;/em&gt; which identify whether the information is shared (and hence static) or not (and hence dynamic).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、基本的に、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;情報が共有されている（したがって静的）か共有されていない（したがって動的）かを識別する&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関する「ヒント」を使用して、クラスとオブジェクトコンテナーに情報を格納しています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85248e20ba609cafb8a732d25f83659583bdbb50" translate="yes" xml:space="preserve">
          <source>So in other words, use &lt;code&gt;self for static&lt;/code&gt; and &lt;code&gt;this for none-static members or methods&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self for static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;には&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;selfを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、静的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this for none-static members or methods&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db0f62bf8d60dee96cf2f15b4c1edad3293c65b6" translate="yes" xml:space="preserve">
          <source>So let's dig a bit into what a class actually contains. There are 5 types of &quot;things&quot; that a class contains:</source>
          <target state="translated">それでは、クラスが実際に何を含んでいるのかを少し掘り下げてみましょう。クラスに含まれる「もの」には5つのタイプがあります。</target>
        </trans-unit>
        <trans-unit id="364f18440d7246234bc237ac2cd7550d14f5de82" translate="yes" xml:space="preserve">
          <source>So now that we have stored that state, we need to access it. This can get a bit tricky (or &lt;strong&gt;way&lt;/strong&gt; more than a bit), so let's split this into two viewpoints: from outside of an instance/class (say from a normal function call, or from the global scope), and inside of an instance/class (from within a method on the object).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その状態を保存したので、それにアクセスする必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは少しトリッキー（または得ることができる&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス/クラス（通常の関数呼び出しから、またはグローバルスコープから言う）の外側、およびインスタンスの内部から：ので、2つの視点にのスプリットこれを聞かせて、より多くのビットより） / class（オブジェクトのメソッド内から）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3606a8de9c3c12492217e32b1e6586cea872e9f" translate="yes" xml:space="preserve">
          <source>So that's how we expect.</source>
          <target state="translated">ということで、期待しています。</target>
        </trans-unit>
        <trans-unit id="216e52d1e9adc1fdae308225a060d913c58bf5ac" translate="yes" xml:space="preserve">
          <source>So the ID counter is shared across both instances and the children (because we're using &lt;code&gt;self&lt;/code&gt; to access it. If we used &lt;code&gt;static&lt;/code&gt;, we could override it in a child class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IDカウンタが両方のインスタンスと子供たちの間で共有されるので、（私たちが使用しているので、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それにアクセスする。我々が使用している場合&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、我々は、子クラスでそれをオーバーライドすることができます）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3dbe5dff2e728f0103b6ed14300172822699ae0" translate="yes" xml:space="preserve">
          <source>So to answer the question not as asked ...</source>
          <target state="translated">だから尋ねられたようにではなく、質問に答えるために...</target>
        </trans-unit>
        <trans-unit id="d95e71e4559193b8b9862c659116d835bba591a6" translate="yes" xml:space="preserve">
          <source>So, looking at the above code, calling &lt;code&gt;$foo-&amp;gt;bar()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt;, since the &quot;static&quot; call happens inside of an instance context.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、上記のコードを見ると、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$foo-&amp;gt;bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が返され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは、「静的」呼び出しがインスタンスコンテキスト内で発生するためです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a4a165818249fdfb4c7850aaca71b29d69615d0" translate="yes" xml:space="preserve">
          <source>So, what &lt;strong&gt;is&lt;/strong&gt; a &lt;em&gt;class&lt;/em&gt;? A lot of people define it as a &lt;em&gt;blueprint&lt;/em&gt; or a &lt;em&gt;template&lt;/em&gt; for an object. In fact, you can read more &lt;a href=&quot;https://stackoverflow.com/questions/2206387/what-is-a-class-in-php/2206835#2206835&quot;&gt;About Classes In PHP Here&lt;/a&gt;. And to some extent that's what it really is. Let's look at a class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だから、何&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;である&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスは&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くの人がそれを&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;青写真&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テンプレート&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として定義し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2206387/what-is-a-class-in-php/2206835#2206835&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPのクラスについてはこちらを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、それが実際にはある程度です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラスを見てみましょう：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e9217e9dd6a5f58f72f1a1f6a0ae4eea45d6846" translate="yes" xml:space="preserve">
          <source>So, you should use self only when &lt;code&gt;$this&lt;/code&gt; is not available, or when you don&amp;rsquo;t want to allow descendant classes to overwrite the current method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が使用できない場合、または子孫クラスが現在のメソッドを上書きできないようにする場合に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみ、selfを使用する必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4adc3397571d1dbb4b35057ad51d99220a0abb9" translate="yes" xml:space="preserve">
          <source>State and Methods</source>
          <target state="translated">状態と方法</target>
        </trans-unit>
        <trans-unit id="384340960ce0636ed5085eda9c6b587ae92457e7" translate="yes" xml:space="preserve">
          <source>Static Methods (i.e. public static View::format_phone_number($digits)) can be used WITHOUT first instantiating one of those objects (i.e. They do not internally refer to $this).</source>
          <target state="translated">静的メソッド (すなわち、public static View::format_phone_number($digits))は、それらのオブジェクトのいずれかを最初にインスタンス化しなくても使用できます (つまり、内部的に $this を参照しません)。</target>
        </trans-unit>
        <trans-unit id="92c3a431f297edf66cc7224aa697fc2665736146" translate="yes" xml:space="preserve">
          <source>TL/DR</source>
          <target state="translated">TL/DR</target>
        </trans-unit>
        <trans-unit id="8a9ea19d14d99c053e3db2a2ed1a583079f16fa1" translate="yes" xml:space="preserve">
          <source>TL/DR #2</source>
          <target state="translated">TLDR #2</target>
        </trans-unit>
        <trans-unit id="db7fec9bd37fb84a229eca15f0fa786a8c42b5f9" translate="yes" xml:space="preserve">
          <source>TL/DR #3</source>
          <target state="translated">TLDR #3</target>
        </trans-unit>
        <trans-unit id="fb77a9002c6bd05e9e18337d51ea78833edf930d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object-operator&lt;/em&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt; is still used to make calls to the object's instance state.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト・オペレータは、&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まだ、オブジェクトのインスタンス状態への呼び出しを行うために使用されています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f470b7160b3d3add7918ef40ddc281b7945dde97" translate="yes" xml:space="preserve">
          <source>The class value &lt;code&gt;parent&lt;/code&gt; refers to the parent of the exact class it was defined in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス値の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、それが定義された正確なクラスの親を指します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e17a4ab1bce73bd674e27ba1114fdb1eded4aa29" translate="yes" xml:space="preserve">
          <source>The class value &lt;code&gt;self&lt;/code&gt; refers to the exact class it was defined in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス値&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、それが定義された正確なクラスを参照します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59e9bcbe249e2cb84740b0d1078506918c6f2f2a" translate="yes" xml:space="preserve">
          <source>The class value &lt;code&gt;static&lt;/code&gt; refers to the current object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、現在のオブジェクトを参照します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="774c64fa2570ab1f150e9a5869af6de64206382a" translate="yes" xml:space="preserve">
          <source>The code given below is a example of &lt;strong&gt;self::&lt;/strong&gt; and &lt;strong&gt;$this&lt;/strong&gt; keyword. Just copy and paste the code in your code file and see the output.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のコードは、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;self ::&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ this&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードの例です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードをコピーしてコードファイルに貼り付け、出力を確認するだけです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90608d86da4c8576a8ce57d55dd04217fdc70849" translate="yes" xml:space="preserve">
          <source>The easiest way to understand this is to start looking at some examples. Let's pick a class:</source>
          <target state="translated">これを理解する最も簡単な方法は、いくつかの例を見始めることです。クラスを選んでみましょう。</target>
        </trans-unit>
        <trans-unit id="160a7f79c74dc939d600a29bbb442bfeee32dc7a" translate="yes" xml:space="preserve">
          <source>The idea is that &lt;code&gt;$this-&amp;gt;foo()&lt;/code&gt; calls the &lt;code&gt;foo()&lt;/code&gt; member function of whatever  is the exact type of the current object. If the object is of &lt;code&gt;type X&lt;/code&gt;, it thus calls &lt;code&gt;X::foo()&lt;/code&gt;. If the object is of &lt;code&gt;type Y&lt;/code&gt;, it calls &lt;code&gt;Y::foo()&lt;/code&gt;. But with self::foo(), &lt;code&gt;X::foo()&lt;/code&gt; is always called.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、現在のオブジェクトの正確な型である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メンバー関数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という考え方です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、オブジェクトは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;X::foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;type Y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、オブジェクトは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Y::foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、self :: foo（）では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;X::foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が常に呼び出されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a218d68655abd6fd149a068036befe8830488e2" translate="yes" xml:space="preserve">
          <source>The interesting thing here is how static calls are made. So let's talk about how we access the state:</source>
          <target state="translated">ここで興味深いのは、静的な呼び出しがどのように行われているかということです。では、どのようにして状態にアクセスするのかについてお話しましょう。</target>
        </trans-unit>
        <trans-unit id="963289ce11cbdf1785e9a10a4308dcb73bc98e4e" translate="yes" xml:space="preserve">
          <source>The keyword self does &lt;strong&gt;NOT&lt;/strong&gt; refer merely to the 'current class', at least not in a way that restricts you to static members.  Within the context of a non-static member, &lt;code&gt;self&lt;/code&gt; also provides a way of bypassing the vtable (&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_method_table&quot;&gt;see wiki on vtable&lt;/a&gt;) for the current object.  Just as you can use &lt;code&gt;parent::methodName()&lt;/code&gt; to call the parents version of a function, so you can call &lt;code&gt;self::methodName()&lt;/code&gt; to call the current classes implementation of a method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードselfは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、「現在のクラス」を単に参照するのではなく、少なくとも静的メンバーに制限する方法では参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非静的メンバーのコンテキスト内では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のvtable（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_method_table&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vtableのwikiを参照&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バイパスする方法も提供し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent::methodName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て関数の親バージョンを呼び出す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことができるのと同じように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::methodName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出してメソッドの現在のクラス実装を呼び出す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a58a621f00c087382ca40c2385a7b6bca73b52b" translate="yes" xml:space="preserve">
          <source>The meaning of the &lt;code&gt;::&lt;/code&gt; operator though changes. It depends on the context of the call to the current function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の意味は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変わります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、現在の関数の呼び出しのコンテキストによって異なります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f55114a0517d6a8e72dc0caa83dc2c03b397c0b2" translate="yes" xml:space="preserve">
          <source>The object pointer &lt;code&gt;$this&lt;/code&gt; to refers to the current object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトポインター&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、現在のオブジェクトを参照します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbd25782c97fa19a7da020b7a36affb1ad9a7201" translate="yes" xml:space="preserve">
          <source>The problem is that you can replace &lt;code&gt;$this-&amp;gt;method()&lt;/code&gt; with &lt;code&gt;self::method()&lt;/code&gt;anywhere, regardless if &lt;code&gt;method()&lt;/code&gt; is declared static or not. So which one should you use?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;問題は、&lt;/font&gt; &lt;code&gt;method()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が静的に宣言されているか&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どうかに関係なく、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;method()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::method()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どこにでも&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;置き換えることができることです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それであなたはどちらを使うべきですか？&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b1273ff099611009ed7194bdfc93e8b5b2979ec" translate="yes" xml:space="preserve">
          <source>The same goes for static variables:
&lt;strong&gt;Example:&lt;/strong&gt; View::templates_path versus self::templates_path</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じことが静的変数にも当てはまります。 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; View :: templates_pathとself :: templates_path&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a27398b9fb33c18e22d695de1d9cadd667eca945" translate="yes" xml:space="preserve">
          <source>There is another aspect of self:: that is worth mentioning. Annoyingly &lt;strong&gt;&lt;code&gt;self::&lt;/code&gt; refers to the scope at the point of definition not at the point of execution&lt;/strong&gt;. Consider this simple class with two methods:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自己の別の側面があります::言及する価値があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;厄介な&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに、&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;self::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、実行ポイントではなく定義ポイントのスコープを指し&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の2つのメソッドを持つ単純なクラスを考えます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a919145ad00b36ac764049dc9e41fd344c13426" translate="yes" xml:space="preserve">
          <source>Therefore, &lt;code&gt;$this&lt;/code&gt; is not defined in the static call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は静的呼び出しで定義されていません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fff785811e31978be3abb467180fa6bbcb31eb46" translate="yes" xml:space="preserve">
          <source>Therefore, we say that a Class is a global structure, and an Object is a local structure. Don't worry about that funny &lt;code&gt;-&amp;gt;&lt;/code&gt; syntax, we're going to go into that in a little bit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、クラスはグローバル構造であり、オブジェクトはローカル構造であると言います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おかしい&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;については心配しないでください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。少し後で説明します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5798792236c0aea99d1a8ca2d1a480420ae390d1" translate="yes" xml:space="preserve">
          <source>Things change a bit here. The same operators are used, but their meaning becomes significantly blurred.</source>
          <target state="translated">ここで少し事情が変わります。同じ演算子を使っているのに、その意味がかなり曖昧になる。</target>
        </trans-unit>
        <trans-unit id="8c5944222ff9adcc847c6cb8422786e06e7073ff" translate="yes" xml:space="preserve">
          <source>This can cause all sorts of bugs and conceptual WTF-ery. So I'd highly suggest avoiding the &lt;code&gt;::&lt;/code&gt; operator from within instance methods on anything except those three virtual &quot;short-cut&quot; keywords (&lt;code&gt;static&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt;, and &lt;code&gt;parent&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、あらゆる種類のバグと概念的なWTF-eryを引き起こす可能性があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3つの仮想「ショートカット」キーワード（&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt; &lt;code&gt;parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以外のインスタンスメソッド内から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ないことを強くお勧め&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b46eddbab6254457b8ebab9baf3adae48d81292f" translate="yes" xml:space="preserve">
          <source>This will output:</source>
          <target state="translated">これで出力されます。</target>
        </trans-unit>
        <trans-unit id="9c63266b2354811e66bb71ef81d6900afe270584" translate="yes" xml:space="preserve">
          <source>Those are the results for 2 000 000 runs, and here is the code I used:</source>
          <target state="translated">これらは2,000,000回実行した結果であり、ここに私が使用したコードがあります。</target>
        </trans-unit>
        <trans-unit id="611234192a030ee89389e8d8ec355ba195cfd6ce" translate="yes" xml:space="preserve">
          <source>To really understand what we're talking about when we talk about &lt;code&gt;self&lt;/code&gt; versus &lt;code&gt;$this&lt;/code&gt;, we need to actually dig into what's going on at a conceptual and a practical level. I don't really feel any of the answers do this appropriately, so here's my attempt.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;対&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;について話すときに何を話しているのかを本当に理解するには&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、概念レベルと実用レベルで何が起こっているのかを実際に掘り下げる必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は答えがどれも適切にこれをすることを本当に感じていません、それでここに私の試みがあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddd191cb93808e45097cd1c62e2e929d69264990" translate="yes" xml:space="preserve">
          <source>Too bad, go back and read it. It may be too long, but it's that long because this is a complex topic</source>
          <target state="translated">残念、戻って読んでみてください。長すぎるかもしれませんが、複雑なテーマだからこその長さです。</target>
        </trans-unit>
        <trans-unit id="23b07925a8c0be9ce48b57703ff6f42aca43a23a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$this&lt;/code&gt; to refer to the current
  object. Use &lt;code&gt;self&lt;/code&gt; to refer to the
  current class. In other words, use
  &lt;code&gt;$this-&amp;gt;member&lt;/code&gt; for non-static members,
  use &lt;code&gt;self::$member&lt;/code&gt; for static members.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在のオブジェクトを参照します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在のクラスを参照するには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;非静的メンバー&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;には &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;member&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し、静的メンバーには&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::$member&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3425f60abe5514935cd6d9a40237d81c7b6d1f7f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;self&lt;/code&gt; if you want to call a method of a class without creating an object/instance of that class, thus saving &lt;a href=&quot;http://en.wikipedia.org/wiki/Random-access_memory&quot;&gt;RAM&lt;/a&gt; (sometimes use self for that purpose). In other words, it is actually calling a method statically. Use &lt;code&gt;this&lt;/code&gt; for object perspective.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは、このように保存し、そのクラスのオブジェクト/インスタンスを作成せずに、クラスのメソッドを呼び出したい場合は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Random-access_memory&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RAMを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（時には、その目的のために自己を使用します）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、実際にはメソッドを静的に呼び出しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのパースペクティブに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="936e04a66ddd2a0dfd203a8781f50b5f27174d04" translate="yes" xml:space="preserve">
          <source>Using the code above is not common or recommended practice, but is simply to illustrate its usage, and is to act as more of a &quot;Did you know?&quot; in reference to the original poster's question.</source>
          <target state="translated">上記のコードを使用することは、一般的でも推奨される慣習でもなく、単にその使用法を説明するためのものであり、元のポスターの質問を参照して、より多くの「知っていましたか」として振る舞うことです。</target>
        </trans-unit>
        <trans-unit id="52d1b3e9dff7921acf71b8e081651a25a00510fb" translate="yes" xml:space="preserve">
          <source>We create new &lt;em&gt;instances&lt;/em&gt; of a class using the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;演算子&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して、クラスの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成し&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e86f5725e4192c64ef5ed45f22f2a697881f72cf" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;self&lt;/code&gt; is used with the &lt;code&gt;::&lt;/code&gt; operator it refers to the current class, which can be done both in static and non-static contexts. &lt;code&gt;$this&lt;/code&gt; refers to the object itself. In addition, it is perfectly legal to use &lt;code&gt;$this&lt;/code&gt; to call static methods (but not to refer to fields).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ときに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用いて使用されている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オペレータは静的および非静的コンテキストの両方を行うことができる現在のクラスを指します。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はオブジェクト自体を指します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的メソッドを呼び出す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことは完全に合法です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（ただし、フィールドを参照することはできません）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15fc6bfd44405398f67d7cc9e5ee08fe18a7b814" translate="yes" xml:space="preserve">
          <source>When is each appropriate?</source>
          <target state="translated">それぞれどのような時に適切なのでしょうか?</target>
        </trans-unit>
        <trans-unit id="679b698f7813556efafd70a9aab9869ba13be1e0" translate="yes" xml:space="preserve">
          <source>When to use self over $this</source>
          <target state="translated">self over $thisを使うタイミング</target>
        </trans-unit>
        <trans-unit id="0aeb751e403d45d5910c5f1e2fb70a717e70137f" translate="yes" xml:space="preserve">
          <source>Whenever you are using &lt;strong&gt;static methods&lt;/strong&gt; or &lt;strong&gt;static attributes&lt;/strong&gt; and want to call them without having an object of the class instantiated you need to use &lt;code&gt;self:&lt;/code&gt; to call them, because &lt;code&gt;$this&lt;/code&gt; always requires on object to be created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用しているときはいつでも&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、静的メソッド&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的属性を&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、クラスのオブジェクトがなくても、それらを呼びたいあなたが使用する必要がインスタンス化&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、それらを呼び出すために&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に作成されるオブジェクトに必要です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b43a9f4c14e9f3949cd5eb69a1ed28815183ce57" translate="yes" xml:space="preserve">
          <source>Within a static context</source>
          <target state="translated">静的なコンテキストの中で</target>
        </trans-unit>
        <trans-unit id="02e518b52f895e4adb176c0170b00f8d56ea48cc" translate="yes" xml:space="preserve">
          <source>Within a static context, any calls made using &lt;code&gt;::&lt;/code&gt; will also be static. Let's look at an example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静的コンテキスト内では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して行われた呼び出し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もすべて静的です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例を見てみましょう：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44a5ce926d9cb880980e8e313c5013db547b8cde" translate="yes" xml:space="preserve">
          <source>Within an instance context</source>
          <target state="translated">インスタンスコンテキスト内で</target>
        </trans-unit>
        <trans-unit id="2fb4883617a7576fc6b1c8b372fae20ad5147eb3" translate="yes" xml:space="preserve">
          <source>Within an instance context on the other hand, calls made using &lt;code&gt;::&lt;/code&gt; depend on the receiver of the call (the method we're calling). If the method is defined as &lt;code&gt;static&lt;/code&gt;, then it will use a static call. If it's not, it will forward the instance information.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方、インスタンスコンテキスト内では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して行われ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た呼び出しは、呼び出しの受信者（呼び出しているメソッド）によって異なります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として定義されて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、静的呼び出しを使用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そうでない場合は、インスタンス情報を転送します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78b7d103e3753af55fa72b72da53a75fd517d5d6" translate="yes" xml:space="preserve">
          <source>Word Of Caution #1</source>
          <target state="translated">注意事項その1</target>
        </trans-unit>
        <trans-unit id="ba11597170fce82f6bc3c92171ed8891ebc9f9f8" translate="yes" xml:space="preserve">
          <source>Word Of Caution #2</source>
          <target state="translated">注意事項その2</target>
        </trans-unit>
        <trans-unit id="c305b99037f2a741cdb8fe0799269aadb46f759e" translate="yes" xml:space="preserve">
          <source>Word Of Caution #3</source>
          <target state="translated">注意の言葉その3</target>
        </trans-unit>
        <trans-unit id="00d453e4a5a98c008de08d7ecd436cdbc3dfe5d5" translate="yes" xml:space="preserve">
          <source>You can use the &lt;strong&gt;self::&lt;/strong&gt; keyword in another class and access the static members, method and constants. When it will be extends from parent class and same in case of &lt;strong&gt;$this&lt;/strong&gt; keyword. You can access the non static members, method and function in another class when it will be extends from parent class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別のクラスで&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;self ::&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、静的メンバー、メソッド、および定数にアクセスできます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;親クラスから拡張される場合、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ this&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合も同じ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;親クラスから拡張される場合、別のクラスの非静的メンバー、メソッド、および関数にアクセスできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bf3480927f56d74bb2f68be2ed373b4692f6567" translate="yes" xml:space="preserve">
          <source>also in child/parent scenario &lt;code&gt;self / parent&lt;/code&gt; is mostly used to identified child and parent class members and methods.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子/親シナリオでも、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;self / parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は主に、子クラスと親クラスのメンバーとメソッドを識別するために使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
