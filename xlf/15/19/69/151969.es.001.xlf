<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/151969">
    <body>
      <group id="151969">
        <trans-unit id="4d4cde087294d40ddd52dd8d2cf0c9449f3ab766" translate="yes" xml:space="preserve">
          <source>$derek is now a specific instance of Person.
Every Person has a first_name and a last_name, but $derek has a specific first_name and last_name (Derek Martin). Inside the $derek instance, we can refer to those as $this-&amp;gt;first_name and $this-&amp;gt;last_name</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ derek ahora es una instancia espec&amp;iacute;fica de Person. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada persona tiene un nombre y un apellido, pero $ derek tiene un nombre y apellido espec&amp;iacute;ficos (Derek Martin). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dentro de la instancia $ derek, podemos referirnos a ellos como $ this-&amp;gt; first_name y $ this-&amp;gt; last_name&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1b921f3468463d58e60424bf8684d38d91c7aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this-&amp;gt;&lt;/code&gt; is used to refer to a specific instance of a class's variables (member variables) or methods.</source>
          <target state="translated">&lt;code&gt;$this-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa para referirse a una instancia espec&amp;iacute;fica de las variables o m&amp;eacute;todos de una clase (variables miembro).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32f2111f75129681ff16a2fee0df55016b4a6f5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this-&amp;gt;&lt;/code&gt; refers to the current object (an instance of a class), whereas &lt;code&gt;static::&lt;/code&gt; refers to a class</source>
          <target state="translated">&lt;code&gt;$this-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al objeto actual (una instancia de una clase), mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a una clase&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d8cefbc92c029e940c5e95f8fbcd6439e09cc62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; can be used to call static functions</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede usar para llamar a funciones est&amp;aacute;ticas&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4574451c83c5b126c11a21076ec18369a67e3bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; can not be used inside static functions</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se puede usar dentro de funciones est&amp;aacute;ticas&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25dbe760b866ebf1da982eca618b05efcaf04e79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; refers current object.
You can use static instead of self.
See the example:</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al objeto actual. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puedes usar static en lugar de self. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mira el ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3153c6f2de78d3079c064c225cb8b957319e5d72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; refers to the current class object, &lt;code&gt;self&lt;/code&gt; refers to the current class (Not object). The class is the blueprint of the object. So you define a class, but you construct objects.</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al objeto de clase actual, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; se&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a la clase actual (No objeto). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La clase es el plano del objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces usted define una clase, pero construye objetos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="162dc1830d43b9c0795bc91d68280a724964aa1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; refers to the current object</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al objeto actual&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99754f65729ba08744c867cf124e9463016f4774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; requires an instance of the class</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; requiere una instancia de la clase&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8673300e52567f48c9fd1fbc397726c3e2c158c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt; should not be used to call static member variables.  Use &lt;code&gt;self&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no debe usarse para llamar a variables miembro est&amp;aacute;ticas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;su&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a56f8da08ac74fc34f4efcbc5ca5b6f2e8bb3e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$this&lt;/code&gt;, on the other hand, is used to call an instance and methods of any class as long as that class is accessible.</source>
          <target state="translated">&lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por otro lado, se usa para llamar a una instancia y m&amp;eacute;todos de cualquier clase siempre que esa clase sea accesible.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa9a0eda2afed89a13353f8481c9d1fd8c2464ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;gt;&lt;/code&gt; - &lt;em&gt;object-operator&lt;/em&gt; - This is always used when we're accessing an instance.</source>
          <target state="translated">&lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;object-operator&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : esto siempre se usa cuando accedemos a una instancia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="515ec7d21612595a2e89c062cdecc358fc1b440a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt; - &lt;em&gt;scope-resolution-operator&lt;/em&gt; - This is always used to access a Class static property or method.</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;scope-resolution-operator&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Esto siempre se usa para acceder a una propiedad o m&amp;eacute;todo est&amp;aacute;tico de Clase.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fad4836b5ad0bd35722936dd55551001c8de6907" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parent&lt;/code&gt; - This refers to the parent of the current class.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Esto se refiere al padre de la clase actual.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce0b08596ba53df33a733dc5c30d04f99b98040f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sayHello()&lt;/code&gt; uses the &lt;code&gt;$this&lt;/code&gt; pointer, so the vtable is invoked to call &lt;code&gt;Geek::getTitle()&lt;/code&gt;.
&lt;code&gt;sayGoodbye()&lt;/code&gt; uses &lt;code&gt;self::getTitle()&lt;/code&gt;, so the vtable is not used, and &lt;code&gt;Person::getTitle()&lt;/code&gt; is called.  In both cases, we are dealing with the method of an instantiated object, and have access to the &lt;code&gt;$this&lt;/code&gt; pointer within the called functions.</source>
          <target state="translated">&lt;code&gt;sayHello()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;puntero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que se invoca la vtable para llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Geek::getTitle()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sayGoodbye()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::getTitle()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que no se usa vtable y &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se llama a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person::getTitle()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En ambos casos, estamos tratando con el m&amp;eacute;todo de un objeto instanciado, y tenemos acceso al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;puntero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dentro de las funciones llamadas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f6e465c1f2a9affd31500d919b01c2214eeaa46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self::&lt;/code&gt; doesn't</source>
          <target state="translated">&lt;code&gt;self::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fbadacf65051d3980613f537162a33fcf7458388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; (not $self) refers to the &lt;em&gt;type&lt;/em&gt; of class, where as &lt;code&gt;$this&lt;/code&gt; refers to the current &lt;em&gt;instance&lt;/em&gt; of the class.  &lt;code&gt;self&lt;/code&gt; is for use in static member functions to allow you to access static member variables. &lt;code&gt;$this&lt;/code&gt; is used in non-static member functions, and is a reference to the instance of the class on which the member function was called.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (no $ self) se refiere al &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de clase, donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instancia&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; actual &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de la clase. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa en funciones miembro est&amp;aacute;ticas para permitirle acceder a variables miembro est&amp;aacute;ticas. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa en funciones miembro no est&amp;aacute;ticas y es una referencia a la instancia de la clase en la que se llam&amp;oacute; a la funci&amp;oacute;n miembro.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7501b335ad092e875766772dfcee2ab55150c573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; - This refers to the current class name. So &lt;code&gt;self::baz()&lt;/code&gt; is the same as &lt;code&gt;Foo::baz()&lt;/code&gt; within the &lt;code&gt;Foo&lt;/code&gt; class (any method on it).</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : se refiere al nombre de la clase actual. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::baz()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es lo mismo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo::baz()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dentro de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (cualquier m&amp;eacute;todo en &amp;eacute;l).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46125b937734c41cde08d2d4e873e75c00527631" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; can also turn off polymorphic behavior by bypassing the vtable</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n puede desactivar el comportamiento polim&amp;oacute;rfico al pasar por alto la vtable&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c07d8ca95abef37884d269f1460e99adc6f5488f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; can be used inside static functions</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede usar dentro de funciones est&amp;aacute;ticas&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8519f5337d1a8c7d31589e81a7c0bcd28f45de46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; can be used to call static functions and reference static member variables</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede usar para llamar funciones est&amp;aacute;ticas y hacer referencia a variables miembro est&amp;aacute;ticas&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a88577bc5bcc310216b79eddcf514fa26da7507e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; refers current class(in which it is called),</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hace referencia a la clase actual (en la que se llama),&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fc57fa29902202991d5ad791a8714aad56e680c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt; refers to the current class</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; se&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a la clase actual&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6368e89ac608c21f0b0131eb9abfb6d1877afede" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;static&lt;/code&gt; - This refers to the called class. Thanks to inheritance, child classes can override methods and static properties. So calling them using &lt;code&gt;static&lt;/code&gt; instead of a class name allows us to resolve where the call came from, rather than the current level.</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - Esto se refiere a la clase llamada. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Gracias a la herencia, las clases secundarias pueden anular m&amp;eacute;todos y propiedades est&amp;aacute;ticas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, llamarlos usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de un nombre de clase nos permite resolver de d&amp;oacute;nde vino la llamada, en lugar del nivel actual.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a9be218e6f9cc24e0de67fb310654293027aa93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Constants&lt;/em&gt; - Class resolved constants. Not going any deeper here, but adding for completeness:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Constantes&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : constantes resueltas por clase. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No profundizando aqu&amp;iacute;, pero agregando para completar:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="56ea9526ebb1c196092c1295f1be048af86503c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Methods&lt;/em&gt; - These are functions which each instance will contain (and operate on instances).</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;eacute;todos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : son funciones que cada instancia contendr&amp;aacute; (y operar&amp;aacute; en instancias).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7458b2a34b42c915eaa6efa2d12fb87ded68bc7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Properties&lt;/em&gt; - Think of these as variables that each instance will contain.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Propiedades&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : piense en ellas como variables que contendr&amp;aacute; cada instancia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="128d60b444cb55406fdd8df7a74e98947804e819" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Static Methods&lt;/em&gt; - These are functions which are shared across the entire class. They do &lt;strong&gt;not&lt;/strong&gt; operate on instances, but instead on the static properties only.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;eacute;todos est&amp;aacute;ticos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : son funciones que se comparten en toda la clase. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ellos &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operan en los casos, pero en cambio en las propiedades est&amp;aacute;ticas solamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f75a3c90992d8bdd9876921d564afd1084b48ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Static Properties&lt;/em&gt; - Think of these as variables that are shared at the class level. Meaning that they are never copied by each instance.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Propiedades est&amp;aacute;ticas&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : piense en estas como variables que se comparten a nivel de clase. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que significa que nunca son copiados por cada instancia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="816b7732ab0ba8e4f6af1fdc7d51f95511e324b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DO NOT USE &lt;code&gt;self::&lt;/code&gt;, use &lt;code&gt;static::&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO USE &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static::&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1960ca308fa4467b88ed48f433d9e60c3ae74d7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SELF::&lt;/strong&gt;
If you are coding &lt;em&gt;outside&lt;/em&gt; the object that has the static method you want to refer to, you must call it using the object's name View::format_phone_number($phone_number);
If you are coding &lt;em&gt;inside&lt;/em&gt; the object that has the static method you want to refer to, you can &lt;em&gt;either&lt;/em&gt; use the object's name View::format_phone_number($pn), OR you can use the self::format_phone_number($pn)  shortcut</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SELF ::&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Si est&amp;aacute; codificando &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fuera&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del objeto que tiene el m&amp;eacute;todo est&amp;aacute;tico al que desea referirse, debe llamarlo usando el nombre del objeto View :: format_phone_number ($ phone_number); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; codificando &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en el interior&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del objeto que tiene el m&amp;eacute;todo est&amp;aacute;tico que desea hacer referencia a, puede &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;o bien&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; utilizar el nombre Vista :: format_phone_number del objeto ($ pn), o puede utilizar el mismo :: format_phone_number ($ pn) de acceso directo&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68bf47fe448e7b6bcaa227ddc8b7bd6c9cb0deca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Method Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplo de m&amp;eacute;todo est&amp;aacute;tico:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7a950b3b9c74af6be7e4eb081fdb583f914db33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static Variables Example:&lt;/strong&gt;
Pretend we have a database class with a single member variable: static $num_connections;
Now, put this in the constructor:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplo de variables est&amp;aacute;ticas: Supongamos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que tenemos una clase de base de datos con una sola variable miembro: static $ num_ connections; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora, pon esto en el constructor:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cc5fbd787f82bdc666880548b05944b8e6f8fb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;self::&lt;/strong&gt;&amp;nbsp;keyword&amp;nbsp;used for the current class and basically it is used to access static members, methods, and constants. But in case of &lt;strong&gt;$this&lt;/strong&gt; you cannot call the static member, method and functions.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;self ::&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;nbsp;palabra clave utilizada para la clase actual y b&amp;aacute;sicamente se utiliza para acceder a miembros est&amp;aacute;ticos, m&amp;eacute;todos y constantes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero en el caso de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ this&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no puede llamar al miembro est&amp;aacute;tico, m&amp;eacute;todo y funciones.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aa4fdde56e69bee5798199be9a881d0c1436e7ac" translate="yes" xml:space="preserve">
          <source>Accessing State</source>
          <target state="translated">Estado de acceso</target>
        </trans-unit>
        <trans-unit id="a0d9ee114dd82860876deacf8335621865d41b1a" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;http://www.php.net/manual/en/language.oop5.static.php&quot;&gt;http://www.php.net/manual/en/language.oop5.static.php&lt;/a&gt; there is no &lt;code&gt;$self&lt;/code&gt;. There is only &lt;code&gt;$this&lt;/code&gt;, for referring to the current instance of the class (the object), and self, which can be used to refer to static members of a class. The difference between an object instance and a class comes into play here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De acuerdo con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/language.oop5.static.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.php.net/manual/en/language.oop5.static.php&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no hay &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo hay &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , para referirse a la instancia actual de la clase (el objeto) y self, que se puede usar para referirse a miembros est&amp;aacute;ticos de una clase. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; entra en juego la diferencia entre una instancia de objeto y una clase.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="150f7ef864ced34a00980d60e9bab4db4fa88e38" translate="yes" xml:space="preserve">
          <source>According to php.net there are three special keywords in this context: &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;parent&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt;. They are used to access properties or methods from inside the class definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Seg&amp;uacute;n php.net, hay tres palabras clave especiales en este contexto: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se utilizan para acceder a propiedades o m&amp;eacute;todos desde dentro de la definici&amp;oacute;n de clase.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="27c355478a7ac93a44923b6dd97a919aaf871fda" translate="yes" xml:space="preserve">
          <source>Additionally since &lt;code&gt;$this::&lt;/code&gt; has not been discussed yet.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, desde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a&amp;uacute;n no se ha discutido.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec44dc4850ea2a9fda1b8ab9805c34f408036cf2" translate="yes" xml:space="preserve">
          <source>Additionally, we can call a static method on an object in the same way:</source>
          <target state="translated">Además,podemos llamar a un método estático en un objeto de la misma manera:</target>
        </trans-unit>
        <trans-unit id="004aca446e1b708534e6e4e4a299341485674162" translate="yes" xml:space="preserve">
          <source>An object on the other hand is what's called an &lt;em&gt;instance&lt;/em&gt; of a Class. What that means is that we take the &quot;blueprint&quot; of the class, and use it to make a dynamic copy. This copy is now specifically tied to the variable it's stored in. Therefore, any changes to an &lt;em&gt;instance&lt;/em&gt; is local to that instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un objeto por otro lado es lo que se llama una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instancia&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de una Clase. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que eso significa es que tomamos el &quot;plano&quot; de la clase y lo usamos para hacer una copia din&amp;aacute;mica. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta copia ahora est&amp;aacute; vinculada espec&amp;iacute;ficamente a la variable en la que est&amp;aacute; almacenada. Por lo tanto, cualquier cambio en una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instancia&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es local para esa instancia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="572f6e2edf1f53c6894eb0db147eb684a34a5078" translate="yes" xml:space="preserve">
          <source>As no one here talked about performances, here is a small benchmark I did (5.6):</source>
          <target state="translated">Como nadie aquí habló de actuaciones,aquí hay un pequeño punto de referencia que hice (5.6):</target>
        </trans-unit>
        <trans-unit id="07fc332427462b72ff5bd8f5b19441aced239f1f" translate="yes" xml:space="preserve">
          <source>As you can see, public static function prettyName knows nothing about the object. It's just working with the parameters you pass in, like a normal function that's not part of an object. Why bother, then, if we could just have it not as part of the object?</source>
          <target state="translated">Como puedes ver,la función pública estática prettyName no sabe nada del objeto.Sólo trabaja con los parámetros que le pasas,como una función normal que no es parte de un objeto.¿Por qué molestarse,entonces,si podemos tenerla no como parte del objeto?</target>
        </trans-unit>
        <trans-unit id="22e61f5fe01d6d4929a77c34a82cb4e3c22373e8" translate="yes" xml:space="preserve">
          <source>As you can tell, there is a property on that class called &lt;code&gt;$name&lt;/code&gt; and a method (function) called &lt;code&gt;sayHello()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como puede ver, hay una propiedad en esa clase llamada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$name&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y un m&amp;eacute;todo (funci&amp;oacute;n) llamado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sayHello()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2d726517905b7da67b4f226d2c382352a4f7d3ef" translate="yes" xml:space="preserve">
          <source>Because $num_connections is static (shared), it will reflect the total number of active database objects. You may have seen this technique used to share database connections among all instances of a database class. This is done because creating the database connection takes a long time, so it's best to create just one, and share it (this is called a Singleton Pattern).</source>
          <target state="translated">Debido a que $num_connections es estático (compartido),reflejará el número total de objetos activos de la base de datos.Es posible que haya visto cómo se utiliza esta técnica para compartir las conexiones de la base de datos entre todas las instancias de una clase de base de datos.Esto se hace porque crear la conexión de la base de datos lleva mucho tiempo,por lo que es mejor crear sólo una,y compartirla (esto se denomina Patrón Singleton).</target>
        </trans-unit>
        <trans-unit id="814c2f3426404175d88afad2fc920417154c085e" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;self&lt;/code&gt; is not an object, it's basically a type that automatically refers to the current class, you use it like: &lt;code&gt;self::member&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es un objeto, es b&amp;aacute;sicamente un tipo que se refiere autom&amp;aacute;ticamente a la clase actual, lo usas como: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::member&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d15b7ff19010b7db1208f885ce45c034a47ebb8d" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;this&lt;/code&gt; is an object, you use it like: &lt;code&gt;$this-&amp;gt;member&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debido a que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un objeto, lo usa como: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;member&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dab8b984058591150715ae9b357a22b033be3c9d" translate="yes" xml:space="preserve">
          <source>Because tying everything together using class names is rather dirty, PHP provides 3 basic &quot;shortcut&quot; keywords to make scope resolving easier.</source>
          <target state="translated">Debido a que atar todo junto usando nombres de clase es bastante sucio,PHP proporciona 3 palabras clave básicas de &quot;atajo&quot; para hacer más fácil la resolución del alcance.</target>
        </trans-unit>
        <trans-unit id="d2684a70050ede11cd9cb2996c483ad916662277" translate="yes" xml:space="preserve">
          <source>But if the DB class wanted to refer to its own static variable, it would just say self:
&lt;strong&gt;Example:&lt;/strong&gt; self::connection;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero si la clase DB quisiera referirse a su propia variable est&amp;aacute;tica, solo dir&amp;iacute;a self: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplo:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; self :: connection;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c99d4b4a594aefb1de1e780889e572f61a7c48a" translate="yes" xml:space="preserve">
          <source>By &lt;a href=&quot;http://board.phpbuilder.com/member.php?145249-laserlight&quot;&gt;http://board.phpbuilder.com/member.php?145249-laserlight&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://board.phpbuilder.com/member.php?145249-laserlight&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://board.phpbuilder.com/member.php?145249-laserlight&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7934d25bc9763d227c8b0b8ed36b96949eacc476" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Deceased::status()&lt;/code&gt; we would expect to see &quot;Person is deceased&quot; however what we see is &quot;Person is alive&quot; as the scope contains the original method definition when call to &lt;code&gt;self::getStatus()&lt;/code&gt; was defined.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Llamando a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Deceased::status()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; esperar&amp;iacute;amos ver &quot;Persona fallecida&quot;, sin embargo, lo que vemos es &quot;Persona viva&quot; ya que el alcance contiene la definici&amp;oacute;n del m&amp;eacute;todo original cuando &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se defini&amp;oacute; la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;llamada a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::getStatus()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6429c9edf8cb87c26faeed0f5a4bf3a3b795d575" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Foo::bar()&lt;/code&gt; will call the &lt;code&gt;baz()&lt;/code&gt; method statically, and hence &lt;code&gt;$this&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; be populated. It's worth noting that in recent versions of PHP (5.3+) this will trigger an &lt;code&gt;E_STRICT&lt;/code&gt; error, because we're calling non-static methods statically.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Llamando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo::bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; llamar&amp;aacute; al &lt;/font&gt;&lt;/font&gt; &lt;code&gt;baz()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;eacute;todo est&amp;aacute;ticamente, y por lo tanto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ser&amp;aacute; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ser poblada. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vale la pena se&amp;ntilde;alar que en versiones recientes de PHP (5.3+) esto provocar&amp;aacute; un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;error &lt;/font&gt;&lt;/font&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , porque estamos llamando a m&amp;eacute;todos no est&amp;aacute;ticos est&amp;aacute;ticamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9aa01e2331e57fa5dfc0c32786cfd45af2abfa86" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;bar()&lt;/code&gt; method on &lt;code&gt;$foo&lt;/code&gt; (an instance of &lt;code&gt;Foo&lt;/code&gt;) using the object-operator: &lt;code&gt;$foo-&amp;gt;bar()&lt;/code&gt; will result in the instance's version of &lt;code&gt;$a&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Llamar al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (una instancia de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) usando el operador de objeto: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$foo-&amp;gt;bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dar&amp;aacute; como resultado la versi&amp;oacute;n de la instancia de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd7af18c4e6c86cbdd3243a59f7ace40e90ec5fd" translate="yes" xml:space="preserve">
          <source>Case 1: Use &lt;code&gt;self&lt;/code&gt; can be used for class constants</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Caso 1: Use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede usar para constantes de clase&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="670e31ee56c242a74a46a36028a84bb3dc79aef9" translate="yes" xml:space="preserve">
          <source>Case 2: For static properties</source>
          <target state="translated">Caso 2:Para las propiedades estáticas</target>
        </trans-unit>
        <trans-unit id="ea3c14b550f7e09eccd86e522970aef004cb94b8" translate="yes" xml:space="preserve">
          <source>ClassName:: is used to refer to that type of class, and its static variables, static methods. If it helps, you can mentally replace the word &quot;static&quot; with &quot;shared&quot;.    Because they are shared, they cannot refer to $this, which refers to a specific instance (not shared). Static Variables (i.e. static $db_connection) can be shared among all instances of a type of object. For example, all database objects share a single connection (static $connection).</source>
          <target state="translated">ClassName::se utiliza para referirse a ese tipo de clase,y sus variables estáticas,métodos estáticos.Si ayuda,puede reemplazar mentalmente la palabra &quot;estática&quot; por &quot;compartida&quot;.Debido a que son compartidos,no pueden referirse a $this,que se refiere a una instancia específica (no compartida).Las variables estáticas (es decir,$db_connection estático)pueden ser compartidas entre todas las instancias de un tipo de objeto.Por ejemplo,todos los objetos de la base de datos comparten una única conexión ($conexión estática).</target>
        </trans-unit>
        <trans-unit id="bf18f2de4a445263792dc727f052cd48a1782977" translate="yes" xml:space="preserve">
          <source>Classes And Objects, Conceptually</source>
          <target state="translated">Clases y objetos,conceptualmente</target>
        </trans-unit>
        <trans-unit id="00c5252c394597f9ca37e455c6ff334c93f1a9f0" translate="yes" xml:space="preserve">
          <source>Consider this code:</source>
          <target state="translated">Considere este código:</target>
        </trans-unit>
        <trans-unit id="78c1c7da1f711105ba800de75e2c36e85347befc" translate="yes" xml:space="preserve">
          <source>Defining State</source>
          <target state="translated">Definición de estado</target>
        </trans-unit>
        <trans-unit id="8ef799b5cf00ccf1ed5cccac63003d0f99b39c86" translate="yes" xml:space="preserve">
          <source>Every time we create a new instance, it will increase our connection counter by one. Every time we destroy or stop using an instance, it will decrease the connection counter by one.   In this way, we can monitor the number of instances of the database object we have in use with:</source>
          <target state="translated">Cada vez que creemos una nueva instancia,aumentará nuestro contador de conexiones en uno.Cada vez que destruyamos o dejemos de usar una instancia,disminuirá el contador de conexiones en uno.De esta manera,podemos controlar el número de instancias del objeto de la base de datos que tenemos en uso:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="71336be8f1c91387e5be20bfa5ddd6397fcb3391" translate="yes" xml:space="preserve">
          <source>First, attaching functions to objects helps you keep things organized, so you know where to find them.</source>
          <target state="translated">En primer lugar,adjuntar funciones a los objetos te ayuda a mantener las cosas organizadas,para que sepas dónde encontrarlas.</target>
        </trans-unit>
        <trans-unit id="a977b902824d573881034de9eeaec40cf902b3d1" translate="yes" xml:space="preserve">
          <source>For e.g., both of the following examples work without any errors, whether you use &lt;code&gt;self::&lt;/code&gt; or &lt;code&gt;$this-&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, los dos ejemplos siguientes funcionan sin errores, ya sea que use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f7f847b2118c0fb89352d83202f8e35bee91a35" translate="yes" xml:space="preserve">
          <source>For informational purposes only, as of PHP 5.3 when dealing with instantiated objects to get the current scope value, as opposed to using &lt;code&gt;static::&lt;/code&gt;, one can alternatively use &lt;code&gt;$this::&lt;/code&gt; like so.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo con fines informativos, a partir de PHP 5.3 cuando se trata de objetos instanciados para obtener el valor de alcance actual, en lugar de usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , uno puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como tal.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c31fe8f28086a2cca4a030be8478e06341f25a8" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://www.phpbuilder.com/board/showthread.php?t=10354489&quot;&gt;http://www.phpbuilder.com/board/showthread.php?t=10354489&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.phpbuilder.com/board/showthread.php?t=10354489&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.phpbuilder.com/board/showthread.php?t=10354489&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f97706abc6e27e06860b8a13aeab2a1094cf0c57" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://www.programmerinterview.com/index.php/php-questions/php-self-vs-this/&quot;&gt;this blog post&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.programmerinterview.com/index.php/php-questions/php-self-vs-this/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esta publicaci&amp;oacute;n de blog&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c16b704fc31acac97db9ffe7fe3cb478dcb7bfae" translate="yes" xml:space="preserve">
          <source>From Inside Of An Instance/Class</source>
          <target state="translated">Desde el interior de una clase de instancia</target>
        </trans-unit>
        <trans-unit id="b70622e59e066546d8dab2a376f9a6fdcba7cc28" translate="yes" xml:space="preserve">
          <source>From Outside Of An Instance/Class</source>
          <target state="translated">Desde fuera de una clase de instancia</target>
        </trans-unit>
        <trans-unit id="834513cba42008c7e5655f7d32b7dacfa8b497f6" translate="yes" xml:space="preserve">
          <source>From the outside of an instance/class, our rules are quite simple and predictable. We have two operators, and each tells us immediately if we're dealing with an instance or a class static:</source>
          <target state="translated">Desde el exterior de una clase instanciada,nuestras reglas son bastante simples y predecibles.Tenemos dos operadores,y cada uno nos dice inmediatamente si estamos tratando con una instancia o una clase estática:</target>
        </trans-unit>
        <trans-unit id="625e278d8c14ec540469b8761431bdf9787d7ac5" translate="yes" xml:space="preserve">
          <source>Full Answer</source>
          <target state="translated">Respuesta completa</target>
        </trans-unit>
        <trans-unit id="ef31a45e1459bb857e11670527ba62fb80322f25" translate="yes" xml:space="preserve">
          <source>Goodbye from Ludwig the person</source>
          <target state="translated">Adiós de Ludwig la persona</target>
        </trans-unit>
        <trans-unit id="bb5531a2d72f5cf61bd22b931064a8c4817f9398" translate="yes" xml:space="preserve">
          <source>Hello, I'm Ludwig the geek</source>
          <target state="translated">Hola,soy Ludwig el geek</target>
        </trans-unit>
        <trans-unit id="d670e29faa4de76c3e660a64d8c58d97e6627c18" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;strong&gt;correct&lt;/strong&gt; usage of &lt;code&gt;$this&lt;/code&gt; and &lt;code&gt;self&lt;/code&gt; for non-static and static member variables:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un ejemplo del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;uso &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;correcto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para variables miembro no est&amp;aacute;ticas y est&amp;aacute;ticas:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5141f805a0f343d34ccea141b4783a9d8b9f487f" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;strong&gt;incorrect&lt;/strong&gt; usage of &lt;code&gt;$this&lt;/code&gt; and &lt;code&gt;self&lt;/code&gt; for non-static and static member variables:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un ejemplo del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;uso &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;incorrecto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para variables miembro no est&amp;aacute;ticas y est&amp;aacute;ticas:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2dd85eb18c0b0aed70fc90dc3d5ab4892b9ce48f" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;strong&gt;polymorphism&lt;/strong&gt; with &lt;code&gt;$this&lt;/code&gt; for member functions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un ejemplo de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;polimorfismo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para funciones miembro:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddd234cfab3d7616160878604b52ca6ca638ce97" translate="yes" xml:space="preserve">
          <source>Here is an example of &lt;strong&gt;suppressing polymorphic behaviour&lt;/strong&gt; by using &lt;code&gt;self&lt;/code&gt; for member functions:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un ejemplo de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;supresi&amp;oacute;n del comportamiento polim&amp;oacute;rfico&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; mediante el uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para funciones miembro:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77db41140957c7d832d77ac047057469d4676703" translate="yes" xml:space="preserve">
          <source>Here is an example of correct usage of $this and self for non-static
  and static member variables:</source>
          <target state="translated">Aquí hay un ejemplo de uso correcto de $this and self para las variables de miembros no estáticos y estáticos:</target>
        </trans-unit>
        <trans-unit id="e98b31a6b6d7074788f89eb1eb7ea386f57f3fa3" translate="yes" xml:space="preserve">
          <source>Hope that helps clear things up :)</source>
          <target state="translated">Espero que eso ayude a aclarar las cosas :)</target>
        </trans-unit>
        <trans-unit id="62165d580654660682e1e2f3f3364de3d8834bad" translate="yes" xml:space="preserve">
          <source>I believe question was not whether you can call the static member of the class by calling &lt;code&gt;ClassName::staticMember&lt;/code&gt;. Question was what's the difference between using &lt;code&gt;self::classmember&lt;/code&gt; and &lt;code&gt;$this-&amp;gt;classmember&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creo que la pregunta no era si puede llamar al miembro est&amp;aacute;tico de la clase llamando a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ClassName::staticMember&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La pregunta era cu&amp;aacute;l es la diferencia entre usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::classmember&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;classmember&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f37dea87409d20a060ce0c0fd75ea6db8de885d" translate="yes" xml:space="preserve">
          <source>I ran into the same question and the simple answer is:</source>
          <target state="translated">Me encontré con la misma pregunta y la respuesta simple es:</target>
        </trans-unit>
        <trans-unit id="51846eab05f92f21a3036f6092a88ad488017710" translate="yes" xml:space="preserve">
          <source>If a method is called statically, the &lt;code&gt;$this&lt;/code&gt; variable &lt;em&gt;is not defined&lt;/em&gt;. This is because there's no instance associated with a static call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si un m&amp;eacute;todo se llama est&amp;aacute;ticamente, la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no est&amp;aacute; definida&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se debe a que no hay una instancia asociada con una llamada est&amp;aacute;tica.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01c41208d0fc37d4cef0407bb5d3ed986dcbe8aa" translate="yes" xml:space="preserve">
          <source>If the object-operator is used (&lt;code&gt;-&amp;gt;&lt;/code&gt;), then you &lt;em&gt;always&lt;/em&gt; know you're dealing with an instance. If the scope-resolution-operator is used (&lt;code&gt;::&lt;/code&gt;), you need more information about the context (are we in an object-context already? Are we outside of an object? etc).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se usa el operador de objeto ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;siempre&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sabr&amp;aacute; que est&amp;aacute; tratando con una instancia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se utiliza el operador de resoluci&amp;oacute;n de alcance ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; )&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , necesita m&amp;aacute;s informaci&amp;oacute;n sobre el contexto (&amp;iquest;ya estamos en un contexto de objeto? &amp;iquest;Estamos fuera de un objeto? Etc.).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8417118ad8ea5a5b4b4bfaeb120d91e770d8c11e" translate="yes" xml:space="preserve">
          <source>If we call &lt;code&gt;Person::status()&lt;/code&gt; we will see &quot;Person is alive&quot; . Now consider what happens when we make a class that inherits from this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si llamamos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person::status()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; veremos &quot;Person is alive&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora considere lo que sucede cuando hacemos una clase que hereda de esto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1871b679c5ff558f692a536a5af0e64339fe1699" translate="yes" xml:space="preserve">
          <source>If you want to call it outside of the class, use &lt;code&gt;classA::POUNDS_TO_KILOGRAMS&lt;/code&gt; to access the constants</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea llamarlo fuera de la clase, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;classA::POUNDS_TO_KILOGRAMS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para acceder a las constantes&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0236d1fb368e9fca37853e8aea62006de6791c4d" translate="yes" xml:space="preserve">
          <source>In PHP 5, what is the difference between using &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;$this&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En PHP 5, &amp;iquest;cu&amp;aacute;l es la diferencia entre usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="165dd949a89067e2305af9add876f710f1b9c3c0" translate="yes" xml:space="preserve">
          <source>In PHP, you use the self keyword to access static properties and methods.</source>
          <target state="translated">En PHP,se utiliza la palabra clave propia para acceder a las propiedades y métodos estáticos.</target>
        </trans-unit>
        <trans-unit id="601ac441f6d008a976bfbf83f44e663663e0706a" translate="yes" xml:space="preserve">
          <source>In general you'll want to use what's known as Late-Static-Binding by using &lt;code&gt;static&lt;/code&gt; instead of &lt;code&gt;self&lt;/code&gt;. But note that they are not the same thing, so saying &quot;always use &lt;code&gt;static&lt;/code&gt; instead of &lt;code&gt;self&lt;/code&gt; is really short-sighted. Instead, stop and think about the call you want to make and think if you want child classes to be able to override that &lt;em&gt;static resolved&lt;/em&gt; call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En general, querr&amp;aacute; usar lo que se conoce como enlace est&amp;aacute;tico tard&amp;iacute;o mediante el uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero tenga en cuenta que no son lo mismo, por lo que decir &quot;siempre usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; en&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es realmente miope. En cambio, det&amp;eacute;ngase y piense en la llamada que desea hacer y piense si desea que las clases secundarias puedan anular eso &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;llamada &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;est&amp;aacute;tica resuelta&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2b2bca88c8dde02fd410d96e7b370fcf7da09af" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;self::who()&lt;/code&gt; will always output &amp;lsquo;parent&amp;rsquo;, while &lt;code&gt;$this-&amp;gt;who()&lt;/code&gt; will depend on what class the object has.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En este ejemplo, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::who()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; siempre generar&amp;aacute; 'parent', mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;who()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; depender&amp;aacute; de la clase que tenga el objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b2a5c63f2d2bfbbc5ea03e313bf8e590562b004" translate="yes" xml:space="preserve">
          <source>Inside a class definition, &lt;code&gt;$this&lt;/code&gt; refers to the current object, while &lt;code&gt;self&lt;/code&gt; refers to the current class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dentro de una definici&amp;oacute;n de clase, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al objeto actual, mientras &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; se&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a la clase actual.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e18b09b6a9092225df7a27c8eb07ef9a54bcd88" translate="yes" xml:space="preserve">
          <source>Inside of a method, an object's instance is represented by the &lt;code&gt;$this&lt;/code&gt; variable. The current state of that object is there, and mutating (changing) any property will result in a change to that instance (but not others).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dentro de un m&amp;eacute;todo, la instancia de un objeto est&amp;aacute; representada por la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El estado actual de ese objeto est&amp;aacute; all&amp;iacute;, y la mutaci&amp;oacute;n (cambio) de cualquier propiedad dar&amp;aacute; como resultado un cambio en esa instancia (pero no en otras).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59b015ccef26de64cb29b9a9c79774e958d0abfc" translate="yes" xml:space="preserve">
          <source>Inside the DB class, if we were referring to a static method of some other object, we would use the object's name:
&lt;strong&gt;Example:&lt;/strong&gt; Session::getUsersOnline();</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dentro de la clase DB, si nos referi&amp;eacute;ramos a un m&amp;eacute;todo est&amp;aacute;tico de alg&amp;uacute;n otro objeto, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;usar&amp;iacute;amos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el nombre del objeto: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplo:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Session :: getUsersOnline ();&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="511f6cef2bc3bad6af234f083a72fd94b0bb8965" translate="yes" xml:space="preserve">
          <source>Is not &lt;strong&gt;always&lt;/strong&gt; true.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;siempre es&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; verdad.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9dd2aabd0c86542cdcd00197358f21aea24000bc" translate="yes" xml:space="preserve">
          <source>It also represents the usage of &lt;code&gt;$object::CONSTANT&lt;/code&gt; for example &lt;code&gt;echo $foo::NAME;&lt;/code&gt; as opposed to &lt;code&gt;$this::NAME;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n representa el uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$object::CONSTANT&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por ejemplo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo $foo::NAME;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a diferencia de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this::NAME;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a3fd980bac5a9aa2d558daa298319d9f1b9d865" translate="yes" xml:space="preserve">
          <source>It is necessary to refer to a class element using &lt;code&gt;self&lt;/code&gt;, and refer to an object element using &lt;code&gt;$this&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es necesario referirse a un elemento de clase usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y referirse a un elemento objeto usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5bef08b9f2ec75137ccbf02a42401ec6b85e392" translate="yes" xml:space="preserve">
          <source>It's &lt;em&gt;extremely&lt;/em&gt; important to note that when we do this &lt;strong&gt;from outside&lt;/strong&gt;, the object's instance is hidden from the &lt;code&gt;bar()&lt;/code&gt; method. Meaning that it's the exact same as running:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extremadamente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; importante tener en cuenta que cuando hacemos esto &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;desde afuera&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , la instancia del objeto se oculta del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que significa que es exactamente lo mismo que correr:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0aadd95e658719e057341c5c991a0350fa9491ed" translate="yes" xml:space="preserve">
          <source>It's &lt;em&gt;very&lt;/em&gt; important to note that the &lt;em&gt;class&lt;/em&gt; is a static structure. Which means that the class &lt;code&gt;Person&lt;/code&gt;, once defined, is always the same everywhere you look at it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;muy&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; importante tener en cuenta que la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una estructura est&amp;aacute;tica. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que significa que la clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , una vez definida, siempre es la misma en todas partes donde la miras.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec19b474341b34c4172cbdade0e64b94ad730680" translate="yes" xml:space="preserve">
          <source>It's important to note that calling &lt;code&gt;Person-&amp;gt;foo&lt;/code&gt; does not make sense (since &lt;code&gt;Person&lt;/code&gt; is a class, not an instance). Therefore, that is a parse error.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es importante tener en cuenta que llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person-&amp;gt;foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no tiene sentido (ya que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una clase, no una instancia). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, eso es un error de an&amp;aacute;lisis.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="121f1ab70f120b81cbf4ca9f31975e7c7248d491" translate="yes" xml:space="preserve">
          <source>Just as objects have constructors, they also have destructors, which are executed when the object dies or is unset:</source>
          <target state="translated">Así como los objetos tienen constructores,también tienen destructores,que se ejecutan cuando el objeto muere o se desestabiliza:</target>
        </trans-unit>
        <trans-unit id="b39368b79b19888c891eeaf9cf0f92fd154ff342" translate="yes" xml:space="preserve">
          <source>Let's start off by talking about what a &lt;em&gt;class&lt;/em&gt; and an &lt;em&gt;object&lt;/em&gt; is.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Comencemos hablando de qu&amp;eacute; es una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y un &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objeto&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68d0bdf1c98814dd0744d461665c1a8b94843fef" translate="yes" xml:space="preserve">
          <source>Make sense? Didn't think so. It's confusing.</source>
          <target state="translated">¿Tiene sentido? No lo creo.Es confuso.</target>
        </trans-unit>
        <trans-unit id="0ed46054d102079e43ca7da01870ec7b6e36682b" translate="yes" xml:space="preserve">
          <source>Most of the time you want to refer to the current class which is why you use &lt;code&gt;static&lt;/code&gt; or &lt;code&gt;$this&lt;/code&gt;. However, there are times when you &lt;em&gt;need&lt;/em&gt;&lt;code&gt;self&lt;/code&gt; because you want the original class regardless of what extends it. (Very, Very seldom)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La mayor&amp;iacute;a de las veces desea referirse a la clase actual, raz&amp;oacute;n por la cual usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, hay momentos en los que &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;necesita &lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; porque desea la clase original independientemente de lo que la extienda. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Muy, muy raramente)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de19b5d94b3b965e5ebbaf155e5ca993831896cd" translate="yes" xml:space="preserve">
          <source>Note that static methods and properties are shared by everyone. That makes them basically global variables. With all the same problems that come with globals. So I would be really hesitant to store information in static methods/properties unless you're comfortable with it being truly global.</source>
          <target state="translated">Tenga en cuenta que los métodos y propiedades estáticas son compartidos por todos.Eso los hace básicamente variables globales.Con todos los mismos problemas que vienen con los globales.Así que yo dudaría mucho en almacenar información en propiedades estáticas de métodos a menos que te sientas cómodo con que sea realmente global.</target>
        </trans-unit>
        <trans-unit id="3bf98e4ccf03409da11de5c0570b5d78fe8ab7d7" translate="yes" xml:space="preserve">
          <source>Note that the calling context is what determines if an instance is used. Therefore:</source>
          <target state="translated">Tenga en cuenta que el contexto de la llamada es lo que determina si se utiliza una instancia.Por lo tanto:</target>
        </trans-unit>
        <trans-unit id="4b48ef2514bedcb7eef495823704d625f2a09a41" translate="yes" xml:space="preserve">
          <source>Note that we're executing the &lt;code&gt;Person::getName()&lt;/code&gt;&lt;em&gt;instance&lt;/em&gt; method every time. But we're using the &lt;code&gt;parent::getName()&lt;/code&gt; to do it in one of the cases (the child case). This is what makes this approach powerful.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que estamos ejecutando el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instancia &lt;/font&gt;&lt;/em&gt;&lt;/font&gt; &lt;code&gt;Person::getName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cada vez. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero estamos usando &lt;/font&gt; &lt;code&gt;parent::getName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; para hacerlo en uno de los casos (el caso secundario). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es lo que hace que este enfoque sea poderoso.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8492456d9b9fec47bcfc3d3e05fd0cabe75aeef5" translate="yes" xml:space="preserve">
          <source>Now it is &lt;em&gt;really&lt;/em&gt; weird here. We're calling a different class, but the &lt;code&gt;$this&lt;/code&gt; that gets passed to the &lt;code&gt;Foo::isFoo()&lt;/code&gt; method is the instance of &lt;code&gt;$bar&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;realmente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; raro aqu&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Estamos llamando a una clase diferente, pero el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se pasa al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo::isFoo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es la instancia de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$bar&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d2bfff8447b41db55fa244b685764b4f4dced95" translate="yes" xml:space="preserve">
          <source>Now we can see that self refers to the class in which it is called, while &lt;code&gt;$this&lt;/code&gt; refers to the &lt;strong&gt;class of the current object&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora podemos ver que self se refiere a la clase en la que se llama, mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase del objeto actual&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a39a16821f726ccb961109544f061fbc0093a2e6" translate="yes" xml:space="preserve">
          <source>Now, we're also looking at inheritance here. Ignore for a moment that this is a bad object model, but let's look at what happens when we play with this:</source>
          <target state="translated">Ahora,también estamos viendo la herencia aquí.Ignoren por un momento que este es un mal modelo de objeto,pero veamos qué pasa cuando jugamos con esto:</target>
        </trans-unit>
        <trans-unit id="4b10725a377c6abde1b3c098b8c29b6fad44ba00" translate="yes" xml:space="preserve">
          <source>Ok, fine. In short, &lt;code&gt;self&lt;/code&gt; is used to reference &lt;em&gt;the current class name&lt;/em&gt; within a class, where as &lt;code&gt;$this&lt;/code&gt; refers to the current object &lt;em&gt;instance&lt;/em&gt;. Note that &lt;code&gt;self&lt;/code&gt; is a copy/paste short-cut. You can safely replace it with your class name, and it'll work fine. But &lt;code&gt;$this&lt;/code&gt; is a dynamic variable that can't be determined ahead of time (and may not even be your class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Est&amp;aacute; bien. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En resumen, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa para hacer referencia &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;al nombre de la clase actual&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dentro de una clase, donde &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instancia del&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; objeto actual &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un atajo de copiar / pegar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede reemplazarlo con seguridad con el nombre de su clase, y funcionar&amp;aacute; bien. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una variable din&amp;aacute;mica que no se puede determinar con anticipaci&amp;oacute;n (y puede que ni siquiera sea su clase).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d1c2349def9d3ca0c5bd7d0e5ef472781dd6018" translate="yes" xml:space="preserve">
          <source>One other thing we should talk about, is that we can &lt;em&gt;check&lt;/em&gt; if an instance is an &lt;code&gt;instanceof&lt;/code&gt; a particular class: &lt;code&gt;$bob instanceof Person&lt;/code&gt; which returns a boolean if the &lt;code&gt;$bob&lt;/code&gt; instance was made using the &lt;code&gt;Person&lt;/code&gt; class, &lt;em&gt;or&lt;/em&gt; a child of &lt;code&gt;Person&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otra cosa de la que deber&amp;iacute;amos hablar es que podemos &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;verificar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si una instancia es una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una clase en particular: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$bob instanceof Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que devuelve un valor booleano si la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instancia &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$bob&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se realiz&amp;oacute; utilizando la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;o&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un hijo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Person&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ac5f2f675da339aaafc5d71fa9cb69b196bfae8" translate="yes" xml:space="preserve">
          <source>Output:
      parent
     child</source>
          <target state="translated">Salida:padre e hijo</target>
        </trans-unit>
        <trans-unit id="0b2ec670e8267a579673e7d6a636d9c07f4610bd" translate="yes" xml:space="preserve">
          <source>PHP 5.3 has a solution. the &lt;strong&gt;&lt;code&gt;static::&lt;/code&gt;&lt;/strong&gt; resolution operator implements &quot;late static binding&quot; which is a fancy way of saying that it's bound to the scope of the class called. Change the line in &lt;code&gt;status()&lt;/code&gt; to  &lt;code&gt;static::getStatus()&lt;/code&gt; and the results are what you would expect. In older versions of PHP you will have to find a kludge to do this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5.3 tiene una soluci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;static::&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; resolution implementa el &quot;enlace est&amp;aacute;tico tard&amp;iacute;o&quot;, que es una forma elegante de decir que est&amp;aacute; vinculado al alcance de la clase llamada. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cambie la l&amp;iacute;nea en el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;status()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static::getStatus()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y los resultados son lo que esperar&amp;iacute;a. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En versiones anteriores de PHP, tendr&amp;aacute; que encontrar un kludge para hacer esto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75f6e61120a16fecd6bc4ffdcc049a9227358094" translate="yes" xml:space="preserve">
          <source>Second, it prevents naming conflicts. In a big project, you're likely to have two developers create getName() functions. If one creates a ClassName1::getName(), and the other creates ClassName2::getName(), it's no problem at all. No conflict. Yay static methods!</source>
          <target state="translated">En segundo lugar,evita los conflictos de nombres.En un proyecto grande,es probable que dos desarrolladores creen funciones getName().Si uno crea un ClassName1::getName(),y el otro crea ClassName2::getName(),no hay ningún problema.No hay conflicto.Yay métodos estáticos!</target>
        </trans-unit>
        <trans-unit id="8c86a52517f64ebbbc3e7a528258a315695a861f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://php.net/manual/en/language.oop5.late-static-bindings.php&quot;&gt;PHP Documentation&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ver &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/language.oop5.late-static-bindings.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n de PHP&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16f576113b59a35ca1c6b5bc0579a8940b2c1017" translate="yes" xml:space="preserve">
          <source>See the following example which shows overloading.</source>
          <target state="translated">Véase el siguiente ejemplo que muestra la sobrecarga.</target>
        </trans-unit>
        <trans-unit id="9243d90df408b082d63c6763de4ec30a6e16a97d" translate="yes" xml:space="preserve">
          <source>Short Answer</source>
          <target state="translated">Respuesta corta</target>
        </trans-unit>
        <trans-unit id="1eccf2f61e5d8187153a5406f4a26b566bd88239" translate="yes" xml:space="preserve">
          <source>Short-Cut Keywords</source>
          <target state="translated">Palabras clave cortas</target>
        </trans-unit>
        <trans-unit id="1c9c0977873122de2ecf7d6eb09bc393a0e41d0c" translate="yes" xml:space="preserve">
          <source>So basically, we're storing information on the class and object container using &quot;hints&quot; about &lt;em&gt;static&lt;/em&gt; which identify whether the information is shared (and hence static) or not (and hence dynamic).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;B&amp;aacute;sicamente, estamos almacenando informaci&amp;oacute;n sobre la clase y el contenedor de objetos usando &quot;pistas&quot; sobre &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;est&amp;aacute;tica&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que identifican si la informaci&amp;oacute;n es compartida (y por lo tanto est&amp;aacute;tica) o no (y por lo tanto din&amp;aacute;mica).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85248e20ba609cafb8a732d25f83659583bdbb50" translate="yes" xml:space="preserve">
          <source>So in other words, use &lt;code&gt;self for static&lt;/code&gt; and &lt;code&gt;this for none-static members or methods&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En otras palabras, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self for static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this for none-static members or methods&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db0f62bf8d60dee96cf2f15b4c1edad3293c65b6" translate="yes" xml:space="preserve">
          <source>So let's dig a bit into what a class actually contains. There are 5 types of &quot;things&quot; that a class contains:</source>
          <target state="translated">Así que vamos a indagar un poco en lo que realmente contiene una clase.Hay 5 tipos de &quot;cosas&quot; que contiene una clase:</target>
        </trans-unit>
        <trans-unit id="364f18440d7246234bc237ac2cd7550d14f5de82" translate="yes" xml:space="preserve">
          <source>So now that we have stored that state, we need to access it. This can get a bit tricky (or &lt;strong&gt;way&lt;/strong&gt; more than a bit), so let's split this into two viewpoints: from outside of an instance/class (say from a normal function call, or from the global scope), and inside of an instance/class (from within a method on the object).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, ahora que hemos almacenado ese estado, necesitamos acceder a &amp;eacute;l. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto puede ser un poco complicado (o &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mucho&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;aacute;s que un poco), as&amp;iacute; que dividamos esto en dos puntos de vista: desde fuera de una instancia / clase (por ejemplo, desde una llamada de funci&amp;oacute;n normal, o desde el alcance global), y dentro de una instancia / class (desde un m&amp;eacute;todo en el objeto).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3606a8de9c3c12492217e32b1e6586cea872e9f" translate="yes" xml:space="preserve">
          <source>So that's how we expect.</source>
          <target state="translated">Así que así es como esperamos.</target>
        </trans-unit>
        <trans-unit id="216e52d1e9adc1fdae308225a060d913c58bf5ac" translate="yes" xml:space="preserve">
          <source>So the ID counter is shared across both instances and the children (because we're using &lt;code&gt;self&lt;/code&gt; to access it. If we used &lt;code&gt;static&lt;/code&gt;, we could override it in a child class).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, el contador de ID se comparte entre ambas instancias y los elementos secundarios (porque estamos usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para acceder a &amp;eacute;l. Si utilizamos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , podr&amp;iacute;amos anularlo en una clase secundaria).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3dbe5dff2e728f0103b6ed14300172822699ae0" translate="yes" xml:space="preserve">
          <source>So to answer the question not as asked ...</source>
          <target state="translated">Así que para responder a la pregunta no como se hizo...</target>
        </trans-unit>
        <trans-unit id="d95e71e4559193b8b9862c659116d835bba591a6" translate="yes" xml:space="preserve">
          <source>So, looking at the above code, calling &lt;code&gt;$foo-&amp;gt;bar()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt;, since the &quot;static&quot; call happens inside of an instance context.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, mirando el c&amp;oacute;digo anterior, llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$foo-&amp;gt;bar()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; devolver&amp;aacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ya que la llamada &quot;est&amp;aacute;tica&quot; ocurre dentro de un contexto de instancia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a4a165818249fdfb4c7850aaca71b29d69615d0" translate="yes" xml:space="preserve">
          <source>So, what &lt;strong&gt;is&lt;/strong&gt; a &lt;em&gt;class&lt;/em&gt;? A lot of people define it as a &lt;em&gt;blueprint&lt;/em&gt; or a &lt;em&gt;template&lt;/em&gt; for an object. In fact, you can read more &lt;a href=&quot;https://stackoverflow.com/questions/2206387/what-is-a-class-in-php/2206835#2206835&quot;&gt;About Classes In PHP Here&lt;/a&gt;. And to some extent that's what it really is. Let's look at a class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;qu&amp;eacute; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mucha gente lo define como un &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;plano&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;plantilla&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para un objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De hecho, puede leer m&amp;aacute;s &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2206387/what-is-a-class-in-php/2206835#2206835&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sobre las clases en PHP aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y hasta cierto punto, eso es lo que realmente es. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Veamos una clase:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e9217e9dd6a5f58f72f1a1f6a0ae4eea45d6846" translate="yes" xml:space="preserve">
          <source>So, you should use self only when &lt;code&gt;$this&lt;/code&gt; is not available, or when you don&amp;rsquo;t want to allow descendant classes to overwrite the current method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, debe usar self solo cuando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no est&amp;aacute; disponible, o cuando no desea permitir que las clases descendientes sobrescriban el m&amp;eacute;todo actual.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c4adc3397571d1dbb4b35057ad51d99220a0abb9" translate="yes" xml:space="preserve">
          <source>State and Methods</source>
          <target state="translated">Estado y métodos</target>
        </trans-unit>
        <trans-unit id="384340960ce0636ed5085eda9c6b587ae92457e7" translate="yes" xml:space="preserve">
          <source>Static Methods (i.e. public static View::format_phone_number($digits)) can be used WITHOUT first instantiating one of those objects (i.e. They do not internally refer to $this).</source>
          <target state="translated">Los métodos estáticos (es decir,la vista estática pública::formato_número_de_teléfono($dígitos))pueden ser usados SIN tener que instanciar primero uno de esos objetos (es decir,no se refieren internamente a $esto).</target>
        </trans-unit>
        <trans-unit id="92c3a431f297edf66cc7224aa697fc2665736146" translate="yes" xml:space="preserve">
          <source>TL/DR</source>
          <target state="translated">TL/DR</target>
        </trans-unit>
        <trans-unit id="8a9ea19d14d99c053e3db2a2ed1a583079f16fa1" translate="yes" xml:space="preserve">
          <source>TL/DR #2</source>
          <target state="translated">TLDR #2</target>
        </trans-unit>
        <trans-unit id="db7fec9bd37fb84a229eca15f0fa786a8c42b5f9" translate="yes" xml:space="preserve">
          <source>TL/DR #3</source>
          <target state="translated">TLDR #3</target>
        </trans-unit>
        <trans-unit id="fb77a9002c6bd05e9e18337d51ea78833edf930d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object-operator&lt;/em&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt; is still used to make calls to the object's instance state.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador de objeto &lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; todav&amp;iacute;a se usa para hacer llamadas al estado de instancia del objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f470b7160b3d3add7918ef40ddc281b7945dde97" translate="yes" xml:space="preserve">
          <source>The class value &lt;code&gt;parent&lt;/code&gt; refers to the parent of the exact class it was defined in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El valor de clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al padre de la clase exacta en la que se defini&amp;oacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e17a4ab1bce73bd674e27ba1114fdb1eded4aa29" translate="yes" xml:space="preserve">
          <source>The class value &lt;code&gt;self&lt;/code&gt; refers to the exact class it was defined in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El valor de clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; se&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a la clase exacta en la que se defini&amp;oacute;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59e9bcbe249e2cb84740b0d1078506918c6f2f2a" translate="yes" xml:space="preserve">
          <source>The class value &lt;code&gt;static&lt;/code&gt; refers to the current object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El valor de clase &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; se&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al objeto actual.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="774c64fa2570ab1f150e9a5869af6de64206382a" translate="yes" xml:space="preserve">
          <source>The code given below is a example of &lt;strong&gt;self::&lt;/strong&gt; and &lt;strong&gt;$this&lt;/strong&gt; keyword. Just copy and paste the code in your code file and see the output.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El c&amp;oacute;digo que figura a continuaci&amp;oacute;n es un ejemplo de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;self ::&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ this&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Simplemente copie y pegue el c&amp;oacute;digo en su archivo de c&amp;oacute;digo y vea el resultado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90608d86da4c8576a8ce57d55dd04217fdc70849" translate="yes" xml:space="preserve">
          <source>The easiest way to understand this is to start looking at some examples. Let's pick a class:</source>
          <target state="translated">La forma más fácil de entender esto es empezar a ver algunos ejemplos.Elijamos una clase:</target>
        </trans-unit>
        <trans-unit id="160a7f79c74dc939d600a29bbb442bfeee32dc7a" translate="yes" xml:space="preserve">
          <source>The idea is that &lt;code&gt;$this-&amp;gt;foo()&lt;/code&gt; calls the &lt;code&gt;foo()&lt;/code&gt; member function of whatever  is the exact type of the current object. If the object is of &lt;code&gt;type X&lt;/code&gt;, it thus calls &lt;code&gt;X::foo()&lt;/code&gt;. If the object is of &lt;code&gt;type Y&lt;/code&gt;, it calls &lt;code&gt;Y::foo()&lt;/code&gt;. But with self::foo(), &lt;code&gt;X::foo()&lt;/code&gt; is always called.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La idea es que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; llama a la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n miembro &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de lo que sea el tipo exacto del objeto actual. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el objeto es de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type X&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , llama a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;X::foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el objeto es de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;type Y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , llama a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Y::foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero con self :: foo (), &lt;/font&gt;&lt;/font&gt; &lt;code&gt;X::foo()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; siempre se llama.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a218d68655abd6fd149a068036befe8830488e2" translate="yes" xml:space="preserve">
          <source>The interesting thing here is how static calls are made. So let's talk about how we access the state:</source>
          <target state="translated">Lo interesante aquí es cómo se hacen las llamadas estáticas.Así que hablemos de cómo accedemos al estado:</target>
        </trans-unit>
        <trans-unit id="963289ce11cbdf1785e9a10a4308dcb73bc98e4e" translate="yes" xml:space="preserve">
          <source>The keyword self does &lt;strong&gt;NOT&lt;/strong&gt; refer merely to the 'current class', at least not in a way that restricts you to static members.  Within the context of a non-static member, &lt;code&gt;self&lt;/code&gt; also provides a way of bypassing the vtable (&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_method_table&quot;&gt;see wiki on vtable&lt;/a&gt;) for the current object.  Just as you can use &lt;code&gt;parent::methodName()&lt;/code&gt; to call the parents version of a function, so you can call &lt;code&gt;self::methodName()&lt;/code&gt; to call the current classes implementation of a method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La palabra clave self &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NO se&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere simplemente a la 'clase actual', al menos no de una manera que lo restrinja a miembros est&amp;aacute;ticos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dentro del contexto de un miembro no est&amp;aacute;tico, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n proporciona una forma de omitir vtable ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_method_table&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ver wiki en vtable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) para el objeto actual. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Del mismo modo que puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent::methodName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para llamar a la versi&amp;oacute;n principal de una funci&amp;oacute;n, tambi&amp;eacute;n puede llamar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::methodName()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para llamar a la implementaci&amp;oacute;n de las clases actuales de un m&amp;eacute;todo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a58a621f00c087382ca40c2385a7b6bca73b52b" translate="yes" xml:space="preserve">
          <source>The meaning of the &lt;code&gt;::&lt;/code&gt; operator though changes. It depends on the context of the call to the current function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El significado del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; aunque cambia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Depende del contexto de la llamada a la funci&amp;oacute;n actual:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f55114a0517d6a8e72dc0caa83dc2c03b397c0b2" translate="yes" xml:space="preserve">
          <source>The object pointer &lt;code&gt;$this&lt;/code&gt; to refers to the current object.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El puntero del objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; to se refiere al objeto actual.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbd25782c97fa19a7da020b7a36affb1ad9a7201" translate="yes" xml:space="preserve">
          <source>The problem is that you can replace &lt;code&gt;$this-&amp;gt;method()&lt;/code&gt; with &lt;code&gt;self::method()&lt;/code&gt;anywhere, regardless if &lt;code&gt;method()&lt;/code&gt; is declared static or not. So which one should you use?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El problema es que puede reemplazar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;method()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::method()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cualquier lugar, independientemente de si el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;method()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se declara est&amp;aacute;tico o no. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;cu&amp;aacute;l deber&amp;iacute;as usar?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b1273ff099611009ed7194bdfc93e8b5b2979ec" translate="yes" xml:space="preserve">
          <source>The same goes for static variables:
&lt;strong&gt;Example:&lt;/strong&gt; View::templates_path versus self::templates_path</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo mismo ocurre con las variables est&amp;aacute;ticas: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplo:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; View :: templates_path versus self :: templates_path&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a27398b9fb33c18e22d695de1d9cadd667eca945" translate="yes" xml:space="preserve">
          <source>There is another aspect of self:: that is worth mentioning. Annoyingly &lt;strong&gt;&lt;code&gt;self::&lt;/code&gt; refers to the scope at the point of definition not at the point of execution&lt;/strong&gt;. Consider this simple class with two methods:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay otro aspecto de self :: que vale la pena mencionar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Molestamente &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;self::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al alcance en el punto de definici&amp;oacute;n, no en el punto de ejecuci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Considere esta clase simple con dos m&amp;eacute;todos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a919145ad00b36ac764049dc9e41fd344c13426" translate="yes" xml:space="preserve">
          <source>Therefore, &lt;code&gt;$this&lt;/code&gt; is not defined in the static call.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no est&amp;aacute; definido en la llamada est&amp;aacute;tica.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fff785811e31978be3abb467180fa6bbcb31eb46" translate="yes" xml:space="preserve">
          <source>Therefore, we say that a Class is a global structure, and an Object is a local structure. Don't worry about that funny &lt;code&gt;-&amp;gt;&lt;/code&gt; syntax, we're going to go into that in a little bit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, decimos que una Clase es una estructura global y un Objeto es una estructura local. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No se preocupe por esa &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sintaxis &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;divertida &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , vamos a entrar en eso en un momento.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5798792236c0aea99d1a8ca2d1a480420ae390d1" translate="yes" xml:space="preserve">
          <source>Things change a bit here. The same operators are used, but their meaning becomes significantly blurred.</source>
          <target state="translated">Las cosas cambian un poco aquí.Se utilizan los mismos operadores,pero su significado se vuelve significativamente borroso.</target>
        </trans-unit>
        <trans-unit id="8c5944222ff9adcc847c6cb8422786e06e7073ff" translate="yes" xml:space="preserve">
          <source>This can cause all sorts of bugs and conceptual WTF-ery. So I'd highly suggest avoiding the &lt;code&gt;::&lt;/code&gt; operator from within instance methods on anything except those three virtual &quot;short-cut&quot; keywords (&lt;code&gt;static&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt;, and &lt;code&gt;parent&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto puede causar todo tipo de errores y errores conceptuales de WTF. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, sugiero evitar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operador desde dentro de los m&amp;eacute;todos de instancia en cualquier cosa, excepto esas tres palabras clave virtuales de &quot;atajo&quot; ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b46eddbab6254457b8ebab9baf3adae48d81292f" translate="yes" xml:space="preserve">
          <source>This will output:</source>
          <target state="translated">Esto saldrá:</target>
        </trans-unit>
        <trans-unit id="9c63266b2354811e66bb71ef81d6900afe270584" translate="yes" xml:space="preserve">
          <source>Those are the results for 2 000 000 runs, and here is the code I used:</source>
          <target state="translated">Estos son los resultados de 2 000 000 de ejecuciones,y aquí está el código que usé:</target>
        </trans-unit>
        <trans-unit id="611234192a030ee89389e8d8ec355ba195cfd6ce" translate="yes" xml:space="preserve">
          <source>To really understand what we're talking about when we talk about &lt;code&gt;self&lt;/code&gt; versus &lt;code&gt;$this&lt;/code&gt;, we need to actually dig into what's going on at a conceptual and a practical level. I don't really feel any of the answers do this appropriately, so here's my attempt.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para comprender realmente de qu&amp;eacute; estamos hablando cuando hablamos de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; frente a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , necesitamos profundizar en lo que est&amp;aacute; sucediendo a nivel conceptual y pr&amp;aacute;ctico. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Realmente no siento que ninguna de las respuestas haga esto apropiadamente, as&amp;iacute; que aqu&amp;iacute; est&amp;aacute; mi intento.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ddd191cb93808e45097cd1c62e2e929d69264990" translate="yes" xml:space="preserve">
          <source>Too bad, go back and read it. It may be too long, but it's that long because this is a complex topic</source>
          <target state="translated">Lástima,vuelve y léelo.Puede que sea demasiado largo,pero es así de largo porque este es un tema complejo</target>
        </trans-unit>
        <trans-unit id="23b07925a8c0be9ce48b57703ff6f42aca43a23a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$this&lt;/code&gt; to refer to the current
  object. Use &lt;code&gt;self&lt;/code&gt; to refer to the
  current class. In other words, use
  &lt;code&gt;$this-&amp;gt;member&lt;/code&gt; for non-static members,
  use &lt;code&gt;self::$member&lt;/code&gt; for static members.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para referirse al objeto actual. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para referirse a la clase actual. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En otras palabras, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this-&amp;gt;member&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;miembros&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no est&amp;aacute;ticos, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self::$member&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para miembros est&amp;aacute;ticos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3425f60abe5514935cd6d9a40237d81c7b6d1f7f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;self&lt;/code&gt; if you want to call a method of a class without creating an object/instance of that class, thus saving &lt;a href=&quot;http://en.wikipedia.org/wiki/Random-access_memory&quot;&gt;RAM&lt;/a&gt; (sometimes use self for that purpose). In other words, it is actually calling a method statically. Use &lt;code&gt;this&lt;/code&gt; for object perspective.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si desea llamar a un m&amp;eacute;todo de una clase sin crear un objeto / instancia de esa clase, ahorrando as&amp;iacute; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Random-access_memory&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RAM&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (a veces use self para ese prop&amp;oacute;sito). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En otras palabras, en realidad est&amp;aacute; llamando a un m&amp;eacute;todo est&amp;aacute;ticamente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para la perspectiva del objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="936e04a66ddd2a0dfd203a8781f50b5f27174d04" translate="yes" xml:space="preserve">
          <source>Using the code above is not common or recommended practice, but is simply to illustrate its usage, and is to act as more of a &quot;Did you know?&quot; in reference to the original poster's question.</source>
          <target state="translated">El uso del código anterior no es una práctica común o recomendada,sino que es simplemente para ilustrar su uso,y es para actuar como más de un &quot;¿Sabía usted?&quot; en referencia a la pregunta del cartel original.</target>
        </trans-unit>
        <trans-unit id="52d1b3e9dff7921acf71b8e081651a25a00510fb" translate="yes" xml:space="preserve">
          <source>We create new &lt;em&gt;instances&lt;/em&gt; of a class using the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creamos nuevas &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;instancias&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de una clase usando el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;new&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; operador.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e86f5725e4192c64ef5ed45f22f2a697881f72cf" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;self&lt;/code&gt; is used with the &lt;code&gt;::&lt;/code&gt; operator it refers to the current class, which can be done both in static and non-static contexts. &lt;code&gt;$this&lt;/code&gt; refers to the object itself. In addition, it is perfectly legal to use &lt;code&gt;$this&lt;/code&gt; to call static methods (but not to refer to fields).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa con el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se refiere a la clase actual, que se puede hacer tanto en contextos est&amp;aacute;ticos como no est&amp;aacute;ticos. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere al objeto en s&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, es perfectamente legal usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para llamar a m&amp;eacute;todos est&amp;aacute;ticos (pero no para referirse a los campos).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15fc6bfd44405398f67d7cc9e5ee08fe18a7b814" translate="yes" xml:space="preserve">
          <source>When is each appropriate?</source>
          <target state="translated">¿Cuándo es apropiado cada uno?</target>
        </trans-unit>
        <trans-unit id="679b698f7813556efafd70a9aab9869ba13be1e0" translate="yes" xml:space="preserve">
          <source>When to use self over $this</source>
          <target state="translated">Cuándo usar uno mismo por encima de esto</target>
        </trans-unit>
        <trans-unit id="0aeb751e403d45d5910c5f1e2fb70a717e70137f" translate="yes" xml:space="preserve">
          <source>Whenever you are using &lt;strong&gt;static methods&lt;/strong&gt; or &lt;strong&gt;static attributes&lt;/strong&gt; and want to call them without having an object of the class instantiated you need to use &lt;code&gt;self:&lt;/code&gt; to call them, because &lt;code&gt;$this&lt;/code&gt; always requires on object to be created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Siempre que est&amp;eacute; utilizando &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos est&amp;aacute;ticos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributos est&amp;aacute;ticos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y desee llamarlos sin tener un objeto de la clase instanciado, debe usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self:&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para llamarlos, porque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; siempre requiere que se cree un objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b43a9f4c14e9f3949cd5eb69a1ed28815183ce57" translate="yes" xml:space="preserve">
          <source>Within a static context</source>
          <target state="translated">En un contexto estático</target>
        </trans-unit>
        <trans-unit id="02e518b52f895e4adb176c0170b00f8d56ea48cc" translate="yes" xml:space="preserve">
          <source>Within a static context, any calls made using &lt;code&gt;::&lt;/code&gt; will also be static. Let's look at an example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dentro de un contexto est&amp;aacute;tico, cualquier llamada realizada usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n ser&amp;aacute; est&amp;aacute;tica. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Veamos un ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44a5ce926d9cb880980e8e313c5013db547b8cde" translate="yes" xml:space="preserve">
          <source>Within an instance context</source>
          <target state="translated">En el contexto de una instancia</target>
        </trans-unit>
        <trans-unit id="2fb4883617a7576fc6b1c8b372fae20ad5147eb3" translate="yes" xml:space="preserve">
          <source>Within an instance context on the other hand, calls made using &lt;code&gt;::&lt;/code&gt; depend on the receiver of the call (the method we're calling). If the method is defined as &lt;code&gt;static&lt;/code&gt;, then it will use a static call. If it's not, it will forward the instance information.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por otro lado, dentro de un contexto de instancia, las llamadas realizadas usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;::&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dependen del receptor de la llamada (el m&amp;eacute;todo al que estamos llamando). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el m&amp;eacute;todo se define como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , utilizar&amp;aacute; una llamada est&amp;aacute;tica. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no es as&amp;iacute;, reenviar&amp;aacute; la informaci&amp;oacute;n de la instancia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78b7d103e3753af55fa72b72da53a75fd517d5d6" translate="yes" xml:space="preserve">
          <source>Word Of Caution #1</source>
          <target state="translated">Palabra de precaución #1</target>
        </trans-unit>
        <trans-unit id="ba11597170fce82f6bc3c92171ed8891ebc9f9f8" translate="yes" xml:space="preserve">
          <source>Word Of Caution #2</source>
          <target state="translated">Palabra de precaución #2</target>
        </trans-unit>
        <trans-unit id="c305b99037f2a741cdb8fe0799269aadb46f759e" translate="yes" xml:space="preserve">
          <source>Word Of Caution #3</source>
          <target state="translated">Palabra de precaución #3</target>
        </trans-unit>
        <trans-unit id="00d453e4a5a98c008de08d7ecd436cdbc3dfe5d5" translate="yes" xml:space="preserve">
          <source>You can use the &lt;strong&gt;self::&lt;/strong&gt; keyword in another class and access the static members, method and constants. When it will be extends from parent class and same in case of &lt;strong&gt;$this&lt;/strong&gt; keyword. You can access the non static members, method and function in another class when it will be extends from parent class.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;self ::&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en otra clase y acceder a los miembros est&amp;aacute;ticos, el m&amp;eacute;todo y las constantes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cu&amp;aacute;ndo se extender&amp;aacute; desde la clase padre e igual en el caso de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ this&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; keyword. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede acceder a los miembros no est&amp;aacute;ticos, el m&amp;eacute;todo y la funci&amp;oacute;n en otra clase cuando se extender&amp;aacute; desde la clase principal.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2bf3480927f56d74bb2f68be2ed373b4692f6567" translate="yes" xml:space="preserve">
          <source>also in child/parent scenario &lt;code&gt;self / parent&lt;/code&gt; is mostly used to identified child and parent class members and methods.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tambi&amp;eacute;n en el escenario secundario / primario, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;self / parent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa principalmente para identificar a los miembros y m&amp;eacute;todos de la clase principal y secundaria.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
