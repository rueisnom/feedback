<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/1554099">
    <body>
      <group id="1554099">
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="5b427777b61b3a1ada0ce78e091f56463d1bee6d" translate="yes" xml:space="preserve">
          <source>, type &lt;code&gt;netcfg&lt;/code&gt;, remember the IP address, press</source>
          <target state="translated">，键入 &lt;code&gt;netcfg&lt;/code&gt; ，记住IP地址，按</target>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="f66ca0fed6569ba5e1581434fd8002fbb8a13e62" translate="yes" xml:space="preserve">
          <source>. Then enable &lt;code&gt;Quick Boot&lt;/code&gt; like below screenshot.</source>
          <target state="translated">。 然后启用 &lt;code&gt;Quick Boot&lt;/code&gt; 如下图所示。</target>
        </trans-unit>
        <trans-unit id="f83d7b56575dbf09c2b7674c9efeeb0c4a9285d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://developer.android.com/sdk/eclipse-adt.html&quot;&gt;Android Development Tools (ADT) 9.0.0&lt;/a&gt; (or later) has a feature that allows you to save state of the AVD (emulator), and you can start your emulator instantly. You have to enable this feature while creating a new AVD or you can just create it later by editing the AVD.</source>
          <target state="translated">&lt;a href=&quot;http://developer.android.com/sdk/eclipse-adt.html&quot;&gt;Android开发工具（ADT）9.0.0&lt;/a&gt; （或更高版本）具有一项功能，可让您保存AVD（仿真器）的状态，并且可以立即启动仿真器。 您必须在创建新的AVD时启用此功能，也可以稍后通过编辑AVD来创建它。</target>
        </trans-unit>
        <trans-unit id="b342d18a8334f5c091e987d13fa877f76b64b888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-icount [N|auto]&lt;/code&gt; -- enable virtual instruction counter with 2^N clock ticks per instruction</source>
          <target state="translated">&lt;code&gt;-icount [N|auto]&lt;/code&gt; -启用虚拟指令计数器，每条指令具有2 ^ N个时钟滴答</target>
        </trans-unit>
        <trans-unit id="54c25bbf1383e1c95d1ce3e4ff847b605a509b4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-no-boot-anim&lt;/code&gt; -- disable animation for faster boot</source>
          <target state="translated">&lt;code&gt;-no-boot-anim&lt;/code&gt; -禁用动画以加快启动速度</target>
        </trans-unit>
        <trans-unit id="245d1b531be79dd771d7402beb05601a66068a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-qemu args...&lt;/code&gt; -- pass arguments to qemu</source>
          <target state="translated">&lt;code&gt;-qemu args...&lt;/code&gt; 将参数传递给qemu</target>
        </trans-unit>
        <trans-unit id="9d71a43f4b66e562efb938c2a478e90469bfc9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@my_avd&lt;/code&gt; -- launch a virtual device named 'my_avd'</source>
          <target state="translated">&lt;code&gt;@my_avd&lt;/code&gt; -启动名为'my_avd'的虚拟设备</target>
        </trans-unit>
        <trans-unit id="3df0a7f0d6e7a722d148e3ab7c8b4899db161fc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Genymotion - Preferred&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Genymotion-首选&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ebd827c5e70cf7b5addfa49a346b4218feff08c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always double-check the settings after saving!&lt;/strong&gt;  The emulator is very picky about what it allows you to set, and it will revert configurations without telling you.</source>
          <target state="translated">&lt;strong&gt;保存后请务必仔细检查设置！&lt;/strong&gt; 该仿真器对允许您设置的内容非常挑剔，它将在不通知您的情况下还原配置。</target>
        </trans-unit>
        <trans-unit id="fb6d2cbca9db8d84583598a334de2106f639c1cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assign all available processors to the emulator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;将所有可用处理器分配给仿真器&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2471740fa087de7f03d1d17e0b6844813bd5a9cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HAXM&lt;/strong&gt; stands for - &lt;strong&gt;&quot;Intel Hardware Accelerated Execution Manager&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HAXM&lt;/strong&gt;代表- &lt;strong&gt;&amp;ldquo;英特尔硬件加速执行管理器&amp;rdquo;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="014555d5bf48a4ecbc835b2d4fa8645a9f125c6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT NOTE&lt;/strong&gt;: Please &lt;strong&gt;first&lt;/strong&gt; refer to &lt;a href=&quot;http://web.archive.org/web/20160102075218/http://ark.intel.com/Products/VirtualizationTechnology&quot;&gt;the Intel list about VT&lt;/a&gt; to make sure your CPU supports Intel VT.</source>
          <target state="translated">&lt;strong&gt;重要说明&lt;/strong&gt; ：请&lt;strong&gt;首先&lt;/strong&gt;参考&lt;a href=&quot;http://web.archive.org/web/20160102075218/http://ark.intel.com/Products/VirtualizationTechnology&quot;&gt;有关VT的Intel列表&lt;/a&gt; ，以确保您的CPU支持Intel VT。</target>
        </trans-unit>
        <trans-unit id="f45d87f406a965d1d12dad3466a365ee86d42698" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Set the device memory to 1024&amp;nbsp; MB or more&lt;/strong&gt;, but not more than the Intel HAXM setting. I use 1024&amp;nbsp; MB per device and 2048 for HAXM.</source>
          <target state="translated">&lt;strong&gt;将设备内存设置为1024 MB或更大&lt;/strong&gt; ，但不要超过Intel HAXM设置。 我为每个设备使用1024 MB，为HAXM使用2048。</target>
        </trans-unit>
        <trans-unit id="d0683dbf080f1ba2f1f74a4af9d94ce334d84b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE:&lt;/strong&gt; The latest version of Android studio (2.x) made major improvements to the bundled emulator.  It's responsive and has a whole bunch of features.</source>
          <target state="translated">&lt;strong&gt;更新：&lt;/strong&gt;最新版本的Android Studio（2.x）对捆绑的模拟器进行了重大改进。 它反应灵敏，并具有很多功能。</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="641a99032b1654281c4179479c83ca2b230f920c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use GPU emulation.&lt;/strong&gt;  You cannot use the Snapshot option when using GPU emulation as of this writing.  Ensure that GPU emulation is set to &quot;yes&quot;.</source>
          <target state="translated">&lt;strong&gt;使用GPU仿真。&lt;/strong&gt; 在撰写本文时，使用GPU仿真时，不能使用Snapshot选项。 确保将GPU仿真设置为&amp;ldquo;是&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="54a843f274d429f1ce47a152bb0a3c370fbcb440" translate="yes" xml:space="preserve">
          <source>A new option is the &lt;a href=&quot;http://blogs.msdn.com/b/visualstudioalm/archive/2014/11/12/introducing-visual-studio-s-emulator-for-android.aspx&quot;&gt;Visual Studio Emulator for Android&lt;/a&gt;--it's fast, &lt;a href=&quot;http://en.wikipedia.org/wiki/Hyper-V&quot;&gt;Hyper-V&lt;/a&gt;, x86, and &lt;a href=&quot;http://aka.ms/vsemu&quot;&gt;free to download even without VS&lt;/a&gt;.</source>
          <target state="translated">一个新选项是&lt;a href=&quot;http://blogs.msdn.com/b/visualstudioalm/archive/2014/11/12/introducing-visual-studio-s-emulator-for-android.aspx&quot;&gt;适用于Android&lt;/a&gt;的Visual Studio模拟器 -快速， &lt;a href=&quot;http://en.wikipedia.org/wiki/Hyper-V&quot;&gt;Hyper-V&lt;/a&gt; ，x86， &lt;a href=&quot;http://aka.ms/vsemu&quot;&gt;即使没有VS&lt;/a&gt;也可以免费下载 。</target>
        </trans-unit>
        <trans-unit id="a86c7088144b8bfd5ea5b781432b107bf2edfb98" translate="yes" xml:space="preserve">
          <source>After compiling, it installs instantly. It is very impressive, considering I have rather an average computer hardware (dual core with 4&amp;nbsp; GB of RAM).</source>
          <target state="translated">编译后，它将立即安装。 考虑到我拥有相当普通的计算机硬件（具有4 GB RAM的双核），这非常令人印象深刻。</target>
        </trans-unit>
        <trans-unit id="b9efc989d1c2e22b3053905be079bfa53516d4eb" translate="yes" xml:space="preserve">
          <source>After developing for a while, my emulator became brutally slow. I chose &lt;strong&gt;wipe user data&lt;/strong&gt;, and it was much much better. I am guessing that it takes time to load up each &lt;a href=&quot;http://en.wikipedia.org/wiki/APK_%28file_format%29&quot;&gt;APK&lt;/a&gt; file you've deployed.</source>
          <target state="translated">经过一段时间的开发，我的模拟器变得非常缓慢。 我选择了&lt;strong&gt;擦除用户数据&lt;/strong&gt; ，这要好得多。 我猜想加载您部署的每个&lt;a href=&quot;http://en.wikipedia.org/wiki/APK_%28file_format%29&quot;&gt;APK&lt;/a&gt;文件都需要时间。</target>
        </trans-unit>
        <trans-unit id="0781cb034bf29924bdf40e8035c3764bbd98224e" translate="yes" xml:space="preserve">
          <source>After these changes, Android Emulator was launching in 5-10 seconds and running without any noticeable lag.
Be aware that these features are hardware dependent (CPU/GPU) and may not work on some systems.</source>
          <target state="translated">经过这些改动后,安卓模拟器在5-10秒内启动并运行,没有任何明显的延迟。请注意,这些功能对硬件有一定的依赖性(CPUGPU),可能在某些系统上无法工作。</target>
        </trans-unit>
        <trans-unit id="0effc9719dc125f777a2560dbbecff91f07b88c1" translate="yes" xml:space="preserve">
          <source>After you have installed the drivers and downloaded an Android X86 system image (as described in the documentation) you should be able to create a new AVD using the x86 image:</source>
          <target state="translated">在你安装了驱动程序并下载了Android X86系统映像(如文档中描述的那样)后,你应该可以使用x86映像创建一个新的AVD。</target>
        </trans-unit>
        <trans-unit id="59e04a212fa14359ad02d1c085748250318eb2ad" translate="yes" xml:space="preserve">
          <source>Also I have increased the &lt;code&gt;Device RAM Size&lt;/code&gt; to &lt;code&gt;1024&lt;/code&gt; which results in a very fast emulator.</source>
          <target state="translated">另外，我将 &lt;code&gt;Device RAM Size&lt;/code&gt; 增加到 &lt;code&gt;1024&lt;/code&gt; ，这导致了非常快速的仿真器。</target>
        </trans-unit>
        <trans-unit id="e30eff925100b7c3e119ed678e39009e962455b0" translate="yes" xml:space="preserve">
          <source>Alt</source>
          <target state="translated">Alt</target>
        </trans-unit>
        <trans-unit id="4569354a7d35cf871ff20be6401348397a115647" translate="yes" xml:space="preserve">
          <source>And Instant run will look like this</source>
          <target state="translated">瞬间运行会是这样的</target>
        </trans-unit>
        <trans-unit id="76b8594931b91429654ccb8da12ce46a95cf045f" translate="yes" xml:space="preserve">
          <source>And for speeding up your emulator you can refer to &lt;em&gt;&lt;a href=&quot;http://jolicode.com/blog/speed-up-your-android-emulator&quot;&gt;Speed up your Android Emulator!&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">有关加速模拟器的信息，请参阅&lt;em&gt;&lt;a href=&quot;http://jolicode.com/blog/speed-up-your-android-emulator&quot;&gt;加速Android模拟器！&lt;/a&gt;&lt;/em&gt; ：</target>
        </trans-unit>
        <trans-unit id="23254b249bd8dfaa4d4fbbc9d8a076aafaf07e3f" translate="yes" xml:space="preserve">
          <source>And now the emulator (although takes a while to start) seems to be running faster than previously.</source>
          <target state="translated">而现在模拟器(虽然启动需要一段时间)似乎比以前运行得更快。</target>
        </trans-unit>
        <trans-unit id="d4b5338ebfbb43483effff954af9704a3139798e" translate="yes" xml:space="preserve">
          <source>And start it:</source>
          <target state="translated">并启动它。</target>
        </trans-unit>
        <trans-unit id="37a3808106f12fa1adab3ba07adff4a7fbf9ef19" translate="yes" xml:space="preserve">
          <source>Android SDK rev. 17 supports Virtual Machine Acceleration using AMD and Intel virtualization technologies.</source>
          <target state="translated">Android SDK rev.17支持使用AMD和英特尔虚拟化技术的虚拟机加速。</target>
        </trans-unit>
        <trans-unit id="5e3d54d9b1180255e9e6718d243603888c570969" translate="yes" xml:space="preserve">
          <source>Android emulator is dead slow. It takes 800MB memory while running.
If you are on Windows, You can use Microsoft Android Emulator. It is superb, provides you functionalities more than Android Studio Emulator. And most important it is fast ( consumes 13MB only).
It comes with Visual Studio 2015 Technical Preview. I am using it and happy with it. I downloaded and installed entire VS pack, I need to look how we can install VS Emulator only.</source>
          <target state="translated">安卓模拟器的运行速度很慢。运行时需要800MB内存。如果你是在Windows上,你可以使用Microsoft Android模拟器。它是一流的,提供给你的功能比Android Studio模拟器更多。最重要的是,它的速度很快(只需13MB)。它自带Visual Studio 2015技术预览版。我正在使用它并对它感到满意。我下载并安装了整个VS包,我需要看一下如何才能安装VS模拟器。</target>
        </trans-unit>
        <trans-unit id="396f0eb47225b0f34d48e5a7ea6c9c50c72d4abf" translate="yes" xml:space="preserve">
          <source>Android emulator release 9 has a new &quot;snapshot&quot; feature. You can &lt;a href=&quot;http://good-android-dev.blogspot.com/2011/02/slow-android-emulator-speed-up-it.html&quot;&gt;save the state of the emulator&lt;/a&gt; (make an image of the emulator) and avoid booting when you start the emulator.</source>
          <target state="translated">Android仿真器版本9具有新的&amp;ldquo;快照&amp;rdquo;功能。 您可以&lt;a href=&quot;http://good-android-dev.blogspot.com/2011/02/slow-android-emulator-speed-up-it.html&quot;&gt;保存仿真器的状态&lt;/a&gt; （制作仿真器映像），并避免在启动仿真器时启动。</target>
        </trans-unit>
        <trans-unit id="ab5a000e88b5d9d0fa2575f5c6263eb93452405d" translate="yes" xml:space="preserve">
          <source>Andy</source>
          <target state="translated">Andy</target>
        </trans-unit>
        <trans-unit id="adf69dfabba37f2c1bdb58e97df0eb9462da16aa" translate="yes" xml:space="preserve">
          <source>As of Revision 17 of Android SDK Tools, the emulator can use graphic acceleration and CPU-provided extensions for better efficiency. The prerequisites and full configuration and user notes are at:</source>
          <target state="translated">从Android SDK工具的第17版开始,模拟器可以使用图形加速和CPU提供的扩展来提高效率。前提条件和完整的配置和用户说明在。</target>
        </trans-unit>
        <trans-unit id="b73369d2929a79e8036c37968223888678d73a20" translate="yes" xml:space="preserve">
          <source>BlueStacks</source>
          <target state="translated">BlueStacks</target>
        </trans-unit>
        <trans-unit id="609a5349f61c6e69eb3788d9a96f19e490f4a947" translate="yes" xml:space="preserve">
          <source>CPU/ABI: Intel Atom (x86)</source>
          <target state="translated">CPUABI:Intel Atom (x86)</target>
        </trans-unit>
        <trans-unit id="e292f0fbdb5ba04955b1fc9a460b635e3fcaf35b" translate="yes" xml:space="preserve">
          <source>Check out the video &lt;em&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&quot;&gt;Google I/O 2011: Android Development Tools&lt;/a&gt;&lt;/em&gt; to see it in action -- jump to about 44 minutes.</source>
          <target state="translated">观看视频&lt;em&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&quot;&gt;Google I / O 2011：Android开发工具&lt;/a&gt;&lt;/em&gt;观看实际操作-跳到大约44分钟。</target>
        </trans-unit>
        <trans-unit id="498ae87b4c93909746e74236b81faacb78a48f97" translate="yes" xml:space="preserve">
          <source>Click on Emulator edit button, then click</source>
          <target state="translated">点击仿真器编辑按钮,然后点击</target>
        </trans-unit>
        <trans-unit id="6b5bd0e563b75c4590439bca6aad7853bed300c7" translate="yes" xml:space="preserve">
          <source>Configuring VM Acceleration on Linux</source>
          <target state="translated">在 Linux 上配置 VM 加速</target>
        </trans-unit>
        <trans-unit id="be9e8df5464fdd78ff2b6b08c454deded50a0661" translate="yes" xml:space="preserve">
          <source>Configuring VM Acceleration on Mac</source>
          <target state="translated">在 Mac 上配置 VM 加速</target>
        </trans-unit>
        <trans-unit id="bb24d100c2f6b1ba4894e998f7b6610815e21d3d" translate="yes" xml:space="preserve">
          <source>Configuring VM Acceleration on Windows</source>
          <target state="translated">在 Windows 上配置 VM 加速</target>
        </trans-unit>
        <trans-unit id="a3b65c425fd115604a5d32c7382cae1aa63c87c9" translate="yes" xml:space="preserve">
          <source>Create a &lt;em&gt;new&lt;/em&gt; x86 AVD: Follow the image below:</source>
          <target state="translated">创建一个&lt;em&gt;新的&lt;/em&gt; x86 AVD：如下图所示：</target>
        </trans-unit>
        <trans-unit id="e3f11507691272e6293234b3386baf4e19b02378" translate="yes" xml:space="preserve">
          <source>Create a new AVD using Intel Atom x86</source>
          <target state="translated">使用Intel Atom x86创建一个新的AVD</target>
        </trans-unit>
        <trans-unit id="11f7c57868ebab0e47fe9dc57822c6e7863844ba" translate="yes" xml:space="preserve">
          <source>Create a virtual machine as Linux 2.6/Other Linux, 512&amp;nbsp;MB RAM, HD 2&amp;nbsp;GB. Network: PCnet-Fast III, attached to &lt;a href=&quot;http://en.wikipedia.org/wiki/Network_address_translation&quot;&gt;NAT&lt;/a&gt;. You can also use a bridged adapter, but you need a &lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&quot;&gt;DHCP&lt;/a&gt; server in your environment.</source>
          <target state="translated">创建一个虚拟机，如Linux 2.6 / Other Linux，512 MB RAM，HD 2 GB。 网络：连接到&lt;a href=&quot;http://en.wikipedia.org/wiki/Network_address_translation&quot;&gt;NAT的&lt;/a&gt; PCnet-Fast III。 您也可以使用桥接适配器，但是您的环境中需要&lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&quot;&gt;DHCP&lt;/a&gt;服务器。</target>
        </trans-unit>
        <trans-unit id="4ed81d5fc2e70282995df9b157ec0ddb3e5d0214" translate="yes" xml:space="preserve">
          <source>Creating a new AVD with the save snapshot feature.</source>
          <target state="translated">使用保存快照功能创建一个新的AVD。</target>
        </trans-unit>
        <trans-unit id="e2fc9d5ba332ca1735999dc441e1ab6f6fd58066" translate="yes" xml:space="preserve">
          <source>Currently, it supports only Intel&amp;reg; VT (Intel Virtualization Technology).</source>
          <target state="translated">当前，它仅支持英特尔&amp;reg;VT（英特尔虚拟化技术）。</target>
        </trans-unit>
        <trans-unit id="f9cbb0b542b802a805d4ef565991e9780c978858" translate="yes" xml:space="preserve">
          <source>Don't forget to install the appropriate driver for your operating system:</source>
          <target state="translated">不要忘记安装适合你的操作系统的驱动程序。</target>
        </trans-unit>
        <trans-unit id="91b556cbc805a1e0d1260463f356e895986e4888" translate="yes" xml:space="preserve">
          <source>Download the &lt;a href=&quot;http://www.android-x86.org/download&quot;&gt;ISO file&lt;/a&gt; that you need.</source>
          <target state="translated">下载所需的&lt;a href=&quot;http://www.android-x86.org/download&quot;&gt;ISO文件&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa7dc8f71d26d47ed826c2de19028ba0d6530ee9" translate="yes" xml:space="preserve">
          <source>Download the &lt;strong&gt;x86 Atom System Images&lt;/strong&gt; and the &lt;strong&gt;Intel Hardware Accelerated Execution Manager Driver&lt;/strong&gt;. Follow the image below:</source>
          <target state="translated">下载&lt;strong&gt;x86 Atom系统映像&lt;/strong&gt;和&lt;strong&gt;Intel硬件加速执行管理器驱动程序&lt;/strong&gt; 。 跟随下图：</target>
        </trans-unit>
        <trans-unit id="d4432b061c4c9288d08a2111951e0577bc4bb3b5" translate="yes" xml:space="preserve">
          <source>EDIT:
Try &lt;a href=&quot;https://www.visualstudio.com/vs/msft-android-emulator/&quot;&gt;https://www.visualstudio.com/vs/msft-android-emulator/&lt;/a&gt;</source>
          <target state="translated">编辑：尝试&lt;a href=&quot;https://www.visualstudio.com/vs/msft-android-emulator/&quot;&gt;https://www.visualstudio.com/vs/msft-android-emulator/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0aa20b2ea7e686967eaf0d5d24501fd74b86cd2f" translate="yes" xml:space="preserve">
          <source>Emulators are slow. There's really nothing you can do about it, but there are alternatives to the emulator.</source>
          <target state="translated">仿真器的速度很慢。你真的没有办法,但是仿真器也有替代品。</target>
        </trans-unit>
        <trans-unit id="a6b3249bf7d5020378533e88f1e0d18d4d23c225" translate="yes" xml:space="preserve">
          <source>Even if it starts and loads the home screen, it is very sluggish. I have tried the &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse IDE&lt;/a&gt; in &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;version 3.5&lt;/a&gt; (Galileo) and &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;3.4&lt;/a&gt; (Ganymede).</source>
          <target state="translated">即使启动并加载主屏幕，它也非常缓慢。 我已经尝试了&lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;3.5版&lt;/a&gt; （Galileo）和&lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;3.4版&lt;/a&gt; （Ganymede）的&lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse IDE&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="88bfad9cfffeafd299a44d4daf979d57419a2621" translate="yes" xml:space="preserve">
          <source>F1</source>
          <target state="translated">F1</target>
        </trans-unit>
        <trans-unit id="e262aa4c560f1ae35fd6e5cf5ac45462ea46ecc8" translate="yes" xml:space="preserve">
          <source>F12</source>
          <target state="translated">F12</target>
        </trans-unit>
        <trans-unit id="d7b4d9b4412bb9ed347dbdc20fb00d440fd9ad87" translate="yes" xml:space="preserve">
          <source>F7</source>
          <target state="translated">F7</target>
        </trans-unit>
        <trans-unit id="1d7c564189fa8822a9fbe38ab442564373b6d52c" translate="yes" xml:space="preserve">
          <source>Failed to open the hax module</source>
          <target state="translated">无法打开hax模块</target>
        </trans-unit>
        <trans-unit id="ef7c42a143eb712a4c65899ed502c293b35ed22e" translate="yes" xml:space="preserve">
          <source>First, install the Intel x86 Emulator Accelerator (HAXM). This can be downloaded directly from Intel or using Android SDK Manager.  In the SDK Manager, it's located under Extras.</source>
          <target state="translated">首先,安装英特尔x86模拟器加速器(HAXM)。这可以直接从Intel下载,也可以使用Android SDK Manager。在SDK管理器中,它位于Extras下面。</target>
        </trans-unit>
        <trans-unit id="c07ed1ad545962a2b51a6d8645695a2c4fffe680" translate="yes" xml:space="preserve">
          <source>For enabling &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphics_processing_unit&quot;&gt;GPU&lt;/a&gt; aceleration, run the emulator from the command line or add &quot;-gpu on&quot; to the additional emulator command line options in the AVD configuration.</source>
          <target state="translated">要启用&lt;a href=&quot;https://en.wikipedia.org/wiki/Graphics_processing_unit&quot;&gt;GPU&lt;/a&gt;加速，请从命令行运行仿真器，或者在AVD配置中的其他仿真器命令行选项中添加&amp;ldquo; -gpu on&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="5de14154ebde59825d5672789153e43a3175c109" translate="yes" xml:space="preserve">
          <source>For those still interested:
Try using &lt;a href=&quot;http://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt;.  You can download a version for Windows/Mac OS X/Linux after registering.  A plugin for Eclipse is also available:</source>
          <target state="translated">对于仍然感兴趣的人：尝试使用&lt;a href=&quot;http://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt; 。 注册后，您可以下载Windows / Mac OS X / Linux的版本。 Eclipse的插件也可用：</target>
        </trans-unit>
        <trans-unit id="de4c725f1c79e60e448de00c90300643fa6444fd" translate="yes" xml:space="preserve">
          <source>For using the CPU machine extensions, you have to install the driver (caution because it can conflict with existing &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/VMware&quot;&gt;VMware&lt;/a&gt; drivers). Once it's installed it will be used automatically whenever you use an x86-based AVD.</source>
          <target state="translated">要使用CPU机器扩展，必须安装驱动程序（警告，因为它可能与现有的&lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt;或&lt;a href=&quot;http://en.wikipedia.org/wiki/VMware&quot;&gt;VMware&lt;/a&gt;驱动程序冲突）。 一旦安装，只要您使用基于x86的AVD，它就会自动使用。</target>
        </trans-unit>
        <trans-unit id="3cbc51ff0287acb2835ade64373a3a787248ea60" translate="yes" xml:space="preserve">
          <source>GenyMotion allows you to control various sensors of your device including the battery level, signal strength, and GPS. The latest version now also contains camera tools.</source>
          <target state="translated">GenyMotion允许你控制设备的各种传感器,包括电池电量、信号强度和GPS。最新版本还包含了摄像头工具。</target>
        </trans-unit>
        <trans-unit id="e3550ea99de01e9c42a41f79a749f2e6038d24fc" translate="yes" xml:space="preserve">
          <source>Good way to speed up Android Emulator and app testing is Install or Upgrade your Android Studio to &lt;a href=&quot;http://tools.android.com/download/studio/builds/2-0-preview&quot;&gt;Android Studio 2.0&lt;/a&gt; version and then go to app open Settings/Preferences, the go to Build, Execution, Deployment &amp;rarr; Instant Run. Click on Enable Instant Run. And After That This will ensure you have the correct gradle plugin for your project to work with Instant Run.</source>
          <target state="translated">加快Android Emulator和应用程序测试速度的好方法是将Android Studio安装或升级到&lt;a href=&quot;http://tools.android.com/download/studio/builds/2-0-preview&quot;&gt;Android Studio 2.0&lt;/a&gt;版本，然后转到应用程序打开的设置/首选项，依次转到构建，执行，部署&amp;rarr;即时运行。 单击启用即时运行。 之后，这将确保您具有正确的gradle插件，以便项目可以与Instant Run一起使用。</target>
        </trans-unit>
        <trans-unit id="30706c10cbea3e00204a5234eee7f56ff9f4a975" translate="yes" xml:space="preserve">
          <source>HAX is not working and the emulator runs in emulation mode emulator:</source>
          <target state="translated">HAX无法工作,仿真器在仿真模式下运行仿真器。</target>
        </trans-unit>
        <trans-unit id="b8cbec5446f00ce5b9f5d29426a994a747bbb78e" translate="yes" xml:space="preserve">
          <source>HAX is working and emulator runs in fast virtual mode</source>
          <target state="translated">HAX可以工作,模拟器在快速虚拟模式下运行。</target>
        </trans-unit>
        <trans-unit id="ad495a99d7c02a796b897f096f496ed40009c472" translate="yes" xml:space="preserve">
          <source>HAXM Speeds Up the Slow Android Emulator</source>
          <target state="translated">HAXM加快了慢速安卓模拟器的速度</target>
        </trans-unit>
        <trans-unit id="5d35e51514240075741e7282bda8844164ed3076" translate="yes" xml:space="preserve">
          <source>HAXM works with Intel devices, so created a new Emulator with Intel CPU.</source>
          <target state="translated">HAXM可以与英特尔设备一起工作,所以创建了一个新的英特尔CPU模拟器。</target>
        </trans-unit>
        <trans-unit id="b81074d662ad58c62de9e32444e31ebcc8ac813f" translate="yes" xml:space="preserve">
          <source>Here are some tips to speed up the Android emulator: &lt;em&gt;&lt;a href=&quot;http://www.nuxeo.com/blog/speeding-up-the-android-emulator/&quot;&gt;How to speed up the Android Emulator by up to 400%&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">以下是一些加快Android模拟器速度的技巧： &lt;em&gt;&lt;a href=&quot;http://www.nuxeo.com/blog/speeding-up-the-android-emulator/&quot;&gt;如何&lt;/a&gt;&lt;/em&gt;将Android模拟器&lt;em&gt;速度提高400％&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="f286df6c2e19af97903fd2129740fb6f8346fc6b" translate="yes" xml:space="preserve">
          <source>Here's what I noticed nobody mentioned it at all.</source>
          <target state="translated">这是我注意到的,根本就没人提过。</target>
        </trans-unit>
        <trans-unit id="e0ffc14f200531df8dc6e1073a6695805683f74e" translate="yes" xml:space="preserve">
          <source>Here's what you can try. It does speed up the emulator for me, especially during loading time. I noticed the emulator is only using a single core of the available CPU. I set it to use all available processors.</source>
          <target state="translated">这是你可以试试的。它确实为我提高了模拟器的速度,尤其是在加载时间内。我注意到模拟器只使用了一个可用CPU的单核。我把它设置为使用所有可用的处理器。</target>
        </trans-unit>
        <trans-unit id="643e5b127965e7a98c4feb9db73fa152feccf1f5" translate="yes" xml:space="preserve">
          <source>However Android Studio is right now in Preview you can try it now.</source>
          <target state="translated">不过Android Studio现在正在预览中,你现在就可以试试了。</target>
        </trans-unit>
        <trans-unit id="1c7c6550098b6296392b2f8e7bce4744f6201c03" translate="yes" xml:space="preserve">
          <source>I had intermittent slow emulator (SDK v8.0) load times, up to three minutes on Intel Core i7 920 2.67&amp;nbsp;GHz CPU running on Xubuntu 10.04 &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; 3.2.12 guest with Eclipse (3.6.1) loaded. I changed the VirtualBox guest memory from 1024&amp;nbsp;MB to 2048&amp;nbsp;MB and from that point on, I never experienced the slowness again (load times consistent at 33 seconds, CPU load consistent at 20%). Both Eclipse and the emulator are memory hogs.</source>
          <target state="translated">我有间歇性的慢速模拟器（SDK v8.0）加载时间，在装有Xubuntu 10.04 &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; 3.2.12 guest 虚拟机 （已加载Eclipse（3.6.1））上运行的Intel Core i7 920 2.67 GHz CPU上，长达三分钟。 我将VirtualBox来宾内存从1024 MB更改为2048 MB，从那时起，我再也没有遇到这种速度慢（加载时间一致为33秒，CPU载荷一致为20％）。 Eclipse和仿真器都是内存猪。</target>
        </trans-unit>
        <trans-unit id="bd66b65ee88546052629dfeb7dcc767271d4b880" translate="yes" xml:space="preserve">
          <source>I have got a &lt;strong&gt;2.67&lt;/strong&gt;&amp;nbsp; GHz Celeron processor, and &lt;strong&gt;1.21&lt;/strong&gt;&amp;nbsp; GB of RAM on a &lt;strong&gt;x86&lt;/strong&gt; Windows &lt;strong&gt;XP&lt;/strong&gt; Professional machine.</source>
          <target state="translated">我在&lt;strong&gt;x86&lt;/strong&gt; Windows &lt;strong&gt;XP&lt;/strong&gt; Professional计算机上安装了&lt;strong&gt;2.67&lt;/strong&gt; GHz赛扬处理器和&lt;strong&gt;1.21&lt;/strong&gt; GB RAM。</target>
        </trans-unit>
        <trans-unit id="e5aa21de101bfb056cd450df1cbf09f288bec02f" translate="yes" xml:space="preserve">
          <source>I have recently upgraded my Ubuntu installation to &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_10.04_LTS_.28Lucid_Lynx.29&quot;&gt;Ubuntu&amp;nbsp;10.04&lt;/a&gt; LTS (Lucid Lynx) which in turn updated my Java version to:</source>
          <target state="translated">我最近将我的Ubuntu安装升级到&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_10.04_LTS_.28Lucid_Lynx.29&quot;&gt;Ubuntu 10.04&lt;/a&gt; LTS（Lucid Lynx），这反过来又将我的Java版本更新为：</target>
        </trans-unit>
        <trans-unit id="34249b6a29a650217ab9a93fda5a9367e1be7d90" translate="yes" xml:space="preserve">
          <source>I noticed that the my emulator (&lt;a href=&quot;http://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse&lt;/a&gt; plugin) was significantly slowed by my &lt;a href=&quot;http://en.wikipedia.org/wiki/Nvidia&quot;&gt;Nvidia&lt;/a&gt; graphics card anti-aliasing settings. Removing 2x anti aliasing from the graphics menu and changing it to application controlled made it more responsive. It is still slow, but better than it used to be.</source>
          <target state="translated">我注意到&lt;a href=&quot;http://en.wikipedia.org/wiki/Nvidia&quot;&gt;Nvidia&lt;/a&gt;显卡的抗锯齿设置大大降低了我的模拟器（ &lt;a href=&quot;http://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse&lt;/a&gt;插件）的速度。 从图形菜单中删除2倍抗锯齿并将其更改为应用程序控制，使其响应速度更快。 它仍然很慢，但是比以前更好。</target>
        </trans-unit>
        <trans-unit id="810c8fff0c746db2510814e8e2d244d97d74661d" translate="yes" xml:space="preserve">
          <source>I'm using Windows 7.</source>
          <target state="translated">我使用的是Windows 7系统。</target>
        </trans-unit>
        <trans-unit id="e0d4a27638588784c8a27cff0e0d4657cd7c6553" translate="yes" xml:space="preserve">
          <source>I've noticed that the emulator starts much faster if there's no Dalvik Debug Monitor Server (DDMS) connected. So if you start the emulator from Virtual Device Manager &quot;SDK Setup.exe&quot; and Eclipse is not started, the emulator works faster.</source>
          <target state="translated">我注意到,如果没有连接Dalvik调试监控服务器(DDMS),模拟器的启动速度会快很多。因此,如果你从虚拟设备管理器 &quot;SDK Setup.exe &quot;启动仿真器,而Eclipse没有启动,仿真器的工作速度会更快。</target>
        </trans-unit>
        <trans-unit id="3860aca6473a6884e18459a816d022a4c215ab78" translate="yes" xml:space="preserve">
          <source>If HAXM is working properly, you may see this message when launching the emulator:</source>
          <target state="translated">如果HAXM工作正常,在启动模拟器时可能会看到此消息。</target>
        </trans-unit>
        <trans-unit id="fb5e846f550f85c527507e96b8dc21d2b9ac21a0" translate="yes" xml:space="preserve">
          <source>If in case you don't know, you do not need to close the emulator every-time you run/debug your app. If you click run/debug when it's already open, your APK file will get uploaded to the emulator and start pretty much immediately. Emulator takes annoyingly long time only when it started the first time.</source>
          <target state="translated">如果你不知道的话,你不需要每次rundebug你的应用时都要关闭模拟器。如果你点击rundebug时,它已经打开了,你的APK文件将被上传到模拟器,并立即启动。仿真器在第一次启动的时候才会花很长时间,这让人讨厌。</target>
        </trans-unit>
        <trans-unit id="c97e4417cc66fd960a92ceeb3a1f287cc3a0295a" translate="yes" xml:space="preserve">
          <source>If the installer fails with the message that Intel VT must be turned on, you need to enable this in the &lt;a href=&quot;http://en.wikipedia.org/wiki/BIOS&quot;&gt;BIOS&lt;/a&gt;. See the description for how to do this in &lt;em&gt;&lt;a href=&quot;http://forums.lenovo.com/t5/T400-T500-and-newer-T-series/Enabling-Intel-VT-Virtualization-Technology/ta-p/388479&quot;&gt;Enabling Intel VT (Virtualization Technology) &lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">如果安装程序失败，并提示必须打开Intel VT，则需要在&lt;a href=&quot;http://en.wikipedia.org/wiki/BIOS&quot;&gt;BIOS中&lt;/a&gt;启用它。 请参阅&amp;ldquo; &lt;em&gt;&lt;a href=&quot;http://forums.lenovo.com/t5/T400-T500-and-newer-T-series/Enabling-Intel-VT-Virtualization-Technology/ta-p/388479&quot;&gt;启用英特尔VT（虚拟化技术）&amp;rdquo;中&lt;/a&gt;&lt;/em&gt;有关如何执行此操作的说明。</target>
        </trans-unit>
        <trans-unit id="5e50a0f8a7f00621adc746bd81fb34fab1eb3889" translate="yes" xml:space="preserve">
          <source>If you start the emulator from Eclipse: DDMS is there, so sometimes the emulator is extremely slow, but sometimes it's faster.</source>
          <target state="translated">如果你从Eclipse中启动仿真器。DDMS就在那里,所以有时候模拟器的速度极慢,但有时候会比较快。</target>
        </trans-unit>
        <trans-unit id="43f4648dcf49f5b906f97bc04948904f562d5f5d" translate="yes" xml:space="preserve">
          <source>In the version of Android Studio I used (0.8.9), Android SDK Manager downloads HAXM but doesn't actually run the installer (I assume this will be fixed in later releases). To run the installer I had to go to C:\Program Files (x86)\Android\android-studio\sdk\extras\intel\Hardware_Accelerated_Execution_Manager and manually launch intelhaxm.exe.</source>
          <target state="translated">在我使用的Android Studio版本(0.8.9)中,Android SDK管理器下载了HAXM,但实际上并没有运行安装程序(我想这将在以后的版本中得到修复)。为了运行安装程序,我不得不去C:\\程序文件(x86)\Android\android-studio\sk\extras\intel\Hardware_Accelerated_Execution_Manager,然后手动启动intelhaxm.exe。</target>
        </trans-unit>
        <trans-unit id="bf9d1693d6a7842b5433b57d8c332d0b22848f4e" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;http://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt;.</source>
          <target state="translated">安装&lt;a href=&quot;http://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="800bc668e38f6f9c690362435fefab4071b466bc" translate="yes" xml:space="preserve">
          <source>Install Android x86 on the emulator, run it.</source>
          <target state="translated">在模拟器上安装Android x86,运行它。</target>
        </trans-unit>
        <trans-unit id="10fc6463f3d202b4b108e7ae0d85c0fd9ea3de12" translate="yes" xml:space="preserve">
          <source>Install Intel Hardware Accelerated Execution Manager (HAXM)</source>
          <target state="translated">安装英特尔硬件加速执行管理器 (HAXM)</target>
        </trans-unit>
        <trans-unit id="ee9f8bdaaee53fc90bbfd312eef3efe5fb9bada2" translate="yes" xml:space="preserve">
          <source>Install the HAXM Driver by running &quot;IntelHaxm.exe&quot;. It will be located in one of the following locations:</source>
          <target state="translated">通过运行 &quot;IntelHaxm.exe &quot;安装HAXM驱动程序。它将位于以下位置之一。</target>
        </trans-unit>
        <trans-unit id="fd10b98c581664a757ba605f11f0e7f444d64501" translate="yes" xml:space="preserve">
          <source>Intel released &lt;a href=&quot;http://software.intel.com/en-us/articles/intel-atom-x86-image-for-android-ice-cream-sandwich-installation-instructions-recommended/&quot;&gt;recommended installation instructions for the ICS emulator&lt;/a&gt; on May 15, 2012.  This worked for me. The emulator is now fast and the UI is smooth.</source>
          <target state="translated">英特尔于2012年5月15日发布了&lt;a href=&quot;http://software.intel.com/en-us/articles/intel-atom-x86-image-for-android-ice-cream-sandwich-installation-instructions-recommended/&quot;&gt;针对ICS仿真器的推荐安装说明&lt;/a&gt; 。这对我有用。 现在，仿真器运行很快，UI变得流畅。</target>
        </trans-unit>
        <trans-unit id="1a76244279000e4b704d93c035a3ae1cc1ada633" translate="yes" xml:space="preserve">
          <source>It might be worth people upgrading their JVM.</source>
          <target state="translated">这或许值得人们升级他们的JVM。</target>
        </trans-unit>
        <trans-unit id="ec4fc42da645e1d3b51cd44ae7fa0f471e1fb95d" translate="yes" xml:space="preserve">
          <source>Jar of Beans</source>
          <target state="translated">罐装豆子</target>
        </trans-unit>
        <trans-unit id="2a263503e6d9a53f35b04c349064640538240500" translate="yes" xml:space="preserve">
          <source>Launching the emulator from the snapshot.</source>
          <target state="translated">从快照中启动仿真器。</target>
        </trans-unit>
        <trans-unit id="d1a399a3b1c5d4c0aa75b0781fea3b0054332862" translate="yes" xml:space="preserve">
          <source>My understanding is that the &lt;strong&gt;Android Emulator&lt;/strong&gt; should start fairly quickly on such a machine, but for me, it does not. I have followed all the instructions in setting up the IDE, SDKs, JDKs and such and have had some success in starting the emulator quickly, but that is very rare. How can I, if possible, fix this problem?</source>
          <target state="translated">我的理解是， &lt;strong&gt;Android Emulator&lt;/strong&gt;应该可以在这样的机器上快速启动，但对我而言，并不是这样。 我已经按照所有说明设置了IDE，SDK，JDK等，并且在快速启动仿真器方面取得了一些成功，但这很少见。 如果可能的话，我该如何解决？</target>
        </trans-unit>
        <trans-unit id="7b710993f07746ef4e872823c1957bf51765203c" translate="yes" xml:space="preserve">
          <source>Now to ensure that everything else is set up so you can enjoy a highly performing emulator:</source>
          <target state="translated">现在要确保其他一切都设置好了,这样你就可以享受到高性能的仿真器了。</target>
        </trans-unit>
        <trans-unit id="3049e2ec6ecd76d894451bf73340db4d84590b31" translate="yes" xml:space="preserve">
          <source>On Mac OS you will need to hold</source>
          <target state="translated">在Mac OS上,你需要按住</target>
        </trans-unit>
        <trans-unit id="3fed8f8b8ec5f2b53d23a7ea6f98b54b60760240" translate="yes" xml:space="preserve">
          <source>Or as for new SDK,</source>
          <target state="translated">或者说,至于新的SDK。</target>
        </trans-unit>
        <trans-unit id="2f992824b010ac4e8dfbea84d884a8c05cd316cc" translate="yes" xml:space="preserve">
          <source>Or on Unix (Mac or Linux flavors):</source>
          <target state="translated">或在Unix上(Mac或Linux版本)。</target>
        </trans-unit>
        <trans-unit id="b34da484a345eaec070ba26a5454d8d443c490ce" translate="yes" xml:space="preserve">
          <source>Otherwise, you may see this error:</source>
          <target state="translated">否则,你可能会看到这个错误。</target>
        </trans-unit>
        <trans-unit id="ec9cf7e03aa14902c66d5b637073054dfb938758" translate="yes" xml:space="preserve">
          <source>Personally, I use a real phone to do my tests. It is faster and tests are more realistic. But if you want to test your application on a lot of different Android versions and don't want to buy several phones, you will have to use the emulator from time to time.</source>
          <target state="translated">就我个人而言,我用真手机做测试。它的速度比较快,测试也比较真实。但如果你想在很多不同的安卓版本上测试你的应用,又不想买几部手机,那就得时不时的用模拟器来测试。</target>
        </trans-unit>
        <trans-unit id="ea683ad616063b7347bdddeee7203a82e1a3805b" translate="yes" xml:space="preserve">
          <source>Press</source>
          <target state="translated">Press</target>
        </trans-unit>
        <trans-unit id="6657a31d8eda84a072fa7c3741550607aedea2ad" translate="yes" xml:space="preserve">
          <source>Recent emulators are faster than they use to be in 2010. Update your SDK/IDE.</source>
          <target state="translated">最近的仿真器比2010年的时候要快。更新你的SDKIDE。</target>
        </trans-unit>
        <trans-unit id="e2e9e5627d6dd5022d9150c1a9dd34d0efb15836" translate="yes" xml:space="preserve">
          <source>Refer to the given below screenshots for more information.</source>
          <target state="translated">更多信息请看下面的截图。</target>
        </trans-unit>
        <trans-unit id="a32bc5a36966137b13eb04d16ff62fb991a71fee" translate="yes" xml:space="preserve">
          <source>Run cmd on your Windows&amp;nbsp;XP system, change the directory to your Android tools directory, type &lt;code&gt;adb connect &amp;lt;virtual_machine_IP&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在Windows XP系统上运行cmd，将目录更改为Android工具目录，键入 &lt;code&gt;adb connect &amp;lt;virtual_machine_IP&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbeafbbf367b4d1d769f2a8bb1811d77d4cef4b2" translate="yes" xml:space="preserve">
          <source>See the following section in the Android emulator documentation for more details: &lt;a href=&quot;http://developer.android.com/guide/developing/devices/emulator.html#accel-vm&quot;&gt;Configuring Virtual Machine Acceleration&lt;/a&gt;</source>
          <target state="translated">有关更多详细信息，请参见Android模拟器文档中的以下部分： &lt;a href=&quot;http://developer.android.com/guide/developing/devices/emulator.html#accel-vm&quot;&gt;配置虚拟机加速&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="604093c31cb8b731cacc8f7f23958002f8f1856d" translate="yes" xml:space="preserve">
          <source>Show Advanced Setting</source>
          <target state="translated">显示高级设置</target>
        </trans-unit>
        <trans-unit id="fd557ed88afe03c917e4d91e49a2dc5df54a2194" translate="yes" xml:space="preserve">
          <source>Start Eclipse, open the ADT plugin, find the device, and enjoy!</source>
          <target state="translated">启动Eclipse,打开ADT插件,找到设备,享受一下吧!</target>
        </trans-unit>
        <trans-unit id="648e6313fb8963d47e9841e4bc0bd4288eb9754b" translate="yes" xml:space="preserve">
          <source>Steps for Configuring Your Android Development Environment for HAXM</source>
          <target state="translated">为HAXM配置Android开发环境的步骤</target>
        </trans-unit>
        <trans-unit id="e0059792a26167d6cb558c15e2d81b36b5e6c29d" translate="yes" xml:space="preserve">
          <source>Target: Intel Atom x86 System Image - API Level 10</source>
          <target state="translated">目标:Intel Atom x86系统镜像-API Level 10</target>
        </trans-unit>
        <trans-unit id="513d6148d91cffcde62beb6d194d6b61453a6d97" translate="yes" xml:space="preserve">
          <source>The Android emulator is based on &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt;. The interface between QEMU and the HAXM driver on the host system is designed to be vendor-agnostic.</source>
          <target state="translated">Android仿真器基于&lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt; 。 QEMU和主机系统上的HAXM驱动程序之间的接口被设计为与供应商无关。</target>
        </trans-unit>
        <trans-unit id="21f07e097f0e3e5517eb370bbe8895a697686e2c" translate="yes" xml:space="preserve">
          <source>The current (May 2011) version of the emulator is slow particularly with &lt;a href=&quot;http://en.wikipedia.org/wiki/Android_version_history#v3.x_Honeycomb&quot;&gt;Android 3.0 (Honeycomb)&lt;/a&gt; primarily because the emulator does not support hardware GL -- this means that the GL code gets translated into software (ARM software, in fact) which then gets emulated in software in &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt;. This is crazy-slow. They're working on this problem and have it partially solved, but not with any sort of release quality.</source>
          <target state="translated">当前（2011年5月）的仿真器版本特别慢，尤其是在&lt;a href=&quot;http://en.wikipedia.org/wiki/Android_version_history#v3.x_Honeycomb&quot;&gt;Android 3.0（Honeycomb）上，这&lt;/a&gt;是因为仿真器不支持硬件GL-这意味着GL代码已转换为软件（实际上是ARM软件），然后该软件在&lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU的&lt;/a&gt;软件中仿真。 这太慢了。 他们正在解决此问题，并已部分解决，但没有任何发布质量。</target>
        </trans-unit>
        <trans-unit id="351cf97d704699a26881ff341ade6043d6ba2ad1" translate="yes" xml:space="preserve">
          <source>The emulator included in your (old) version of Eclipse is very slow.</source>
          <target state="translated">你的(旧)Eclipse版本中包含的仿真器非常慢。</target>
        </trans-unit>
        <trans-unit id="71a8123cbbe316cf27bbf4df482c67b0973de10b" translate="yes" xml:space="preserve">
          <source>The emulator runs slowly because the complete Android environment is running on emulated hardware and the instructions are executed on an emulated ARM processor as well.</source>
          <target state="translated">仿真器运行缓慢,因为整个Android环境是在仿真硬件上运行,指令也是在仿真的ARM处理器上执行。</target>
        </trans-unit>
        <trans-unit id="e50e6e4ba83d115bbe9d6d5e5ba7952af8c98351" translate="yes" xml:space="preserve">
          <source>The emulator seems to slow itself down when idle. This is made apparent by rapidly mousing over the keys on the side and observing the light-up responses. As a workaround, I pass &lt;code&gt;-icount auto&lt;/code&gt; to &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt; when starting the emulator. You can make a batch file called &lt;code&gt;my_avd.bat&lt;/code&gt; to do it for you:</source>
          <target state="translated">模拟器在空闲时似乎会降低自身速度。 通过快速将鼠标悬停在侧面的按键上并观察点亮响应，可以明显看出这一点。 解决方法是，在启动模拟器时，将 &lt;code&gt;-icount auto&lt;/code&gt; 传递给&lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt; 。 您可以制作一个名为 &lt;code&gt;my_avd.bat&lt;/code&gt; 的批处理文件来为您做：</target>
        </trans-unit>
        <trans-unit id="37c79e6d312fc63a42d2c061e00c98d969389324" translate="yes" xml:space="preserve">
          <source>The first half of the instructions are detailed enough, so I will assume you were able to install the Intel x86 Atom System Image(s) using the Android SDK manager, as well as Intel HAXM.</source>
          <target state="translated">前半部分的说明已经很详细了,所以我将假设你能够使用Android SDK管理器以及Intel HAXM安装Intel x86 Atom系统镜像。</target>
        </trans-unit>
        <trans-unit id="5d59a14fb9489af79a08a25aa1009ddd91d74f15" translate="yes" xml:space="preserve">
          <source>The installation of the plugin can be done by launching Eclipse and going to &quot;Help / Install New Software&quot; menu, then just add a new Update Site with the following URL: &lt;a href=&quot;http://plugins.genymotion.com/eclipse&quot;&gt;http://plugins.genymotion.com/eclipse&lt;/a&gt;. Follow the steps indicated by Eclipse.</source>
          <target state="translated">可以通过启动Eclipse并转到&amp;ldquo;帮助/安装新软件&amp;rdquo;菜单，然后添加具有以下URL的新更新站点来完成插件的安装： &lt;a href=&quot;http://plugins.genymotion.com/eclipse&quot;&gt;http&lt;/a&gt; : //plugins.genymotion.com/eclipse 。 请遵循Eclipse指示的步骤。</target>
        </trans-unit>
        <trans-unit id="746a19d8b2c395274f10684e5bdb5975941da2df" translate="yes" xml:space="preserve">
          <source>The main choking point is rendering since it's not running on any dedicated hardware but it's actually being performed through software rendering. Lowering the screen size will drastically improve emulator performance. Getting more/faster memory isn't going to help.</source>
          <target state="translated">主要的窒息点是渲染,因为它没有在任何专用硬件上运行,但实际上是通过软件渲染来完成的。降低屏幕尺寸会大幅提高模拟器的性能。获得更多的内存也无济于事。</target>
        </trans-unit>
        <trans-unit id="e15101980346bc1241d8a87c25b62c9df919676b" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;-cpu-delay &amp;lt;delay&amp;gt;&lt;/code&gt; described in &lt;em&gt;&lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html&quot;&gt;Emulator Startup Options&lt;/a&gt;&lt;/em&gt; can help.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html&quot;&gt;仿真器启动选项中&lt;/a&gt;&lt;/em&gt;描述的选项 &lt;code&gt;-cpu-delay &amp;lt;delay&amp;gt;&lt;/code&gt; 可以提供帮助。</target>
        </trans-unit>
        <trans-unit id="bae6ac70fcb5a8789e1bb635dbf8249fed323116" translate="yes" xml:space="preserve">
          <source>The startup of the emulator is very slow.  The good thing is that you only need to start the emulator once.  If the emulator is already running and you run your app again, the emulator reinstalls the app relatively quickly.  Of course, if you want to know how fast it will run on a phone, it is best to test it on a real phone.</source>
          <target state="translated">仿真器的启动速度非常慢。好在你只需要启动一次模拟器就可以了。如果模拟器已经运行了,你再运行你的APP,模拟器会相对快速地重新安装APP。当然,如果你想知道它在手机上的运行速度有多快,最好是在真正的手机上测试一下。</target>
        </trans-unit>
        <trans-unit id="1cc623d7933f9ea20fd6d81e748f5832271ef463" translate="yes" xml:space="preserve">
          <source>They've mentioned, at the time, that they're developing an interface that would allow the emulator to pipe certain instructions through the host hardware, so eventually, you'll be able to leverage emulator performances with the raw power of desktop hardware.</source>
          <target state="translated">当时,他们曾提到,他们正在开发一个接口,允许仿真器通过主机硬件来管道某些指令,所以最终,你将能够利用桌面硬件的原始动力来利用仿真器的性能。</target>
        </trans-unit>
        <trans-unit id="435e175b765d8eca795a6493ea57bac9f73483df" translate="yes" xml:space="preserve">
          <source>This emulator is fast and responsive.</source>
          <target state="translated">这个模拟器速度快,反应灵敏。</target>
        </trans-unit>
        <trans-unit id="fef513452d4c4c0524ce23adde43294eb646c095" translate="yes" xml:space="preserve">
          <source>This feature can improve the emulator performance a lot!</source>
          <target state="translated">这个功能可以让仿真器的性能提高很多!</target>
        </trans-unit>
        <trans-unit id="4e87a5737c9b8f0c86da645e518bffe58d80e944" translate="yes" xml:space="preserve">
          <source>This improved things considerably, but the emulator was still feeling a bit sluggish. The final step was selecting Use Host GPU in Android Virtual Device Manager (AVD).</source>
          <target state="translated">这样一来,事情就有了很大的改善,但模拟器还是感觉有点迟钝。最后一步是在Android虚拟设备管理器(AVD)中选择使用主机GPU。</target>
        </trans-unit>
        <trans-unit id="14761a4e9e3a697b137b7adee87b670a477f8f2a" translate="yes" xml:space="preserve">
          <source>This made animations buttery smooth and sped up &lt;code&gt;adb install&lt;/code&gt; tenfold.</source>
          <target state="translated">这使动画效果更加流畅，并加快了 &lt;code&gt;adb install&lt;/code&gt; 速度。</target>
        </trans-unit>
        <trans-unit id="9962374ff220258d4d22b3fb3f7c92b232584589" translate="yes" xml:space="preserve">
          <source>To add further information to this.</source>
          <target state="translated">为了进一步补充这方面的信息。</target>
        </trans-unit>
        <trans-unit id="a338f45b75026b5d7ac15904ade45edb461d16ca" translate="yes" xml:space="preserve">
          <source>To make your emulator faster, you can host a GPU and use a lighter Android version (&lt;a href=&quot;https://en.wikipedia.org/wiki/Android_version_history#Android_2.3.E2.80.932.3.2_Gingerbread_.28API_level_9.29&quot;&gt;Android 2.3&lt;/a&gt; (Gingerbread)).
Developing on a Mac would be better. Why use an emulator, BTW? Using a real phone makes more sense.</source>
          <target state="translated">为了使模拟器更快，您可以托管GPU并使用更轻便的Android版本（ &lt;a href=&quot;https://en.wikipedia.org/wiki/Android_version_history#Android_2.3.E2.80.932.3.2_Gingerbread_.28API_level_9.29&quot;&gt;Android 2.3&lt;/a&gt; （姜饼））。 在Mac上进行开发会更好。 为什么要使用模拟器BTW？ 使用真实的电话更有意义。</target>
        </trans-unit>
        <trans-unit id="f2bb6fcba9591914084e694a8bf30439ed1938f1" translate="yes" xml:space="preserve">
          <source>To reduce your emulator start-up time you need to check the &quot;Disable Boot Animation&quot; before starting the emulator. Refer to &lt;a href=&quot;http://developer.android.com/tools/help/emulator.html&quot;&gt;the Android documentation&lt;/a&gt;.</source>
          <target state="translated">为了减少仿真器的启动时间，您需要在启动仿真器之前检查&amp;ldquo;禁用启动动画&amp;rdquo;。 请参阅&lt;a href=&quot;http://developer.android.com/tools/help/emulator.html&quot;&gt;Android文档&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="3153c2a6beb22ed3b6f18064d63caef109cf3803" translate="yes" xml:space="preserve">
          <source>Try &lt;a href=&quot;http://www.android-x86.org/&quot;&gt;Android x86&lt;/a&gt;. It's much faster than the Google Android emulator. Follow these steps:</source>
          <target state="translated">试试&lt;a href=&quot;http://www.android-x86.org/&quot;&gt;Android x86&lt;/a&gt; 。 它比Google Android模拟器快得多。 跟着这些步骤：</target>
        </trans-unit>
        <trans-unit id="c7aa572875cc7e5d00c60bf1439e9761bb1196a1" translate="yes" xml:space="preserve">
          <source>Try &lt;a href=&quot;https://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt; for Android Studio. Blazing fast! Just needs one time installation. No more AVD pain.</source>
          <target state="translated">尝试针对Android Studio的&lt;a href=&quot;https://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt; 。 快速燃烧！ 只需要一次安装。 没有更多的AVD痛苦。</target>
        </trans-unit>
        <trans-unit id="f7fe4b4c7866d7896c4e4b56e8e31c7654d78d33" translate="yes" xml:space="preserve">
          <source>Try to disable your antivirus. Maybe it will make emulator a little bit faster.</source>
          <target state="translated">试着禁用杀毒软件。也许这将使模拟器的速度更快一点。</target>
        </trans-unit>
        <trans-unit id="342a134be10b8efafc25ef77c64570ae94c2315e" translate="yes" xml:space="preserve">
          <source>Update Eclipse:
Make sure your Eclipse installation and the ADT plug-in are fully up-to-date.</source>
          <target state="translated">更新Eclipse。确保你的Eclipse安装和ADT插件完全更新。</target>
        </trans-unit>
        <trans-unit id="6b1c9a27773c3c0976111bbcfac2432c8ceb0c0c" translate="yes" xml:space="preserve">
          <source>Update your Android Tools:
After each Eclipse plug-in update, it is important to update your Android SDK Tools. To do this, launch the Android SDK Manager and update all the Android SDK components. To take advantage of HAXM, you must be on at least release version 17.</source>
          <target state="translated">更新你的Android工具。每次Eclipse插件更新后,更新你的Android SDK工具是很重要的。要做到这一点,请启动Android SDK管理器,更新所有的Android SDK组件。要利用HAXM的优势,你必须至少在17版本上。</target>
        </trans-unit>
        <trans-unit id="adec47554cf8b33aeb8ab7f303b6fcc4da8478de" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://bluestacks.com/&quot;&gt;Bluestacks Player&lt;/a&gt;. It runs Android 2.3.4 and is very fluid and fast. Sometimes it is even faster than a normal device. The only downside is, that you can just test apps on the API Level 10 and just on one screen size, but it's perfect just for testing if it's working or not. Just connect the Player with the &lt;code&gt;adb&lt;/code&gt; by running</source>
          <target state="translated">使用&lt;a href=&quot;http://bluestacks.com/&quot;&gt;Bluestacks Player&lt;/a&gt; 。 它运行Android 2.3.4，非常流畅和快速。 有时它甚至比普通设备快。 唯一的缺点是，您可以仅在API级别10上且仅在一个屏幕尺寸上测试应用程序，但这非常适合于测试其是否正常工作。 只需通过运行将播放器与 &lt;code&gt;adb&lt;/code&gt; 连接</target>
        </trans-unit>
        <trans-unit id="21670662f8fbd2bbf98918a005840c8d86a25791" translate="yes" xml:space="preserve">
          <source>Use the Intel x86 Emulator Accelerator</source>
          <target state="translated">使用英特尔x86仿真器加速器</target>
        </trans-unit>
        <trans-unit id="cb837c2918c14957ebf249f5eb0de4adb9ee6f1c" translate="yes" xml:space="preserve">
          <source>VirtualBox</source>
          <target state="translated">VirtualBox</target>
        </trans-unit>
        <trans-unit id="abbeb7b45a3a2ae8c6a6064011c0808bff630951" translate="yes" xml:space="preserve">
          <source>Visual Studio Emulator for Android</source>
          <target state="translated">Visual Studio Emulator for Android</target>
        </trans-unit>
        <trans-unit id="6351a1e3770f405e3b8ff78687c3bee8ff1a3bb7" translate="yes" xml:space="preserve">
          <source>Well, since somebody suggested Android x86 as an alternative testing emulator, I'll also present my favorite. This might not be an alternative for everyone, but for me it's perfect!</source>
          <target state="translated">好吧,既然有人推荐了Android x86作为替代测试模拟器,我也来介绍一下我的最爱。这可能不是每个人都可以选择的,但对我来说,它是完美的!</target>
        </trans-unit>
        <trans-unit id="6122c6801d809e69033d105c486f65a887068165" translate="yes" xml:space="preserve">
          <source>When the Android emulator is starting, open up the Task Manager, look under the Process tab, look for &quot;emulator-arm.exe&quot; or &quot;emulator-arm.exe *32&quot;... Right click on it, select Processor Affinity and assign as much processor as you like to the emulator.</source>
          <target state="translated">当安卓模拟器启动后,打开任务管理器,在 &quot;进程 &quot;选项卡下寻找 &quot;emulator-arm.exe &quot;或 &quot;emulator-arm.exe *32&quot;.....右键点击它,选择 &quot;Processor Affinity&quot;,然后根据自己的喜好给模拟器分配处理器。</target>
        </trans-unit>
        <trans-unit id="df1e140179979dff9293ee2488236e283e6ab91a" translate="yes" xml:space="preserve">
          <source>Why is the Android emulator so slow? How can we speed up the Android emulator</source>
          <target state="translated">为什么安卓模拟器的运行速度这么慢?怎样才能加快安卓模拟器的运行速度?</target>
        </trans-unit>
        <trans-unit id="c28010e4d4115065a4a023f60e72e38024ce9ed6" translate="yes" xml:space="preserve">
          <source>Windows Android Emulator</source>
          <target state="translated">Windows Android 仿真器</target>
        </trans-unit>
        <trans-unit id="dc6e16b446e26a3e5ba1c0bab519499b642abd5d" translate="yes" xml:space="preserve">
          <source>With these settings the software keyboard no longer appears, nor do the on-screen back, menu, and recent keys. This appears to be a limitation of the current ICS Intel x86 system image. You will need to use &lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html#KeyMapping&quot;&gt;the keyboard shortcuts&lt;/a&gt;.</source>
          <target state="translated">通过这些设置，软件键盘将不再显示，屏幕上的后退，菜单和最新按键也将不再显示。 这似乎是当前ICS Intel x86系统映像的限制。 您将需要使用&lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html#KeyMapping&quot;&gt;键盘快捷键&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0a7854f9c12d6ac85514528a0581f75a59d9dab" translate="yes" xml:space="preserve">
          <source>You can create emulator.bat with following command to start the emulator. It will start faster.</source>
          <target state="translated">你可以用以下命令创建emulator.bat来启动仿真器。它的启动速度会更快。</target>
        </trans-unit>
        <trans-unit id="1640cc625a6407b39a75741d5be89573245f87a4" translate="yes" xml:space="preserve">
          <source>You can now enable the Quick Boot option for Android Emulator. That will save emulator state, and it will start the emulator quickly on the next boot.</source>
          <target state="translated">现在你可以开启安卓模拟器的快速启动选项。这将保存模拟器的状态,并在下次启动时快速启动模拟器。</target>
        </trans-unit>
        <trans-unit id="ea63e15bbd4edcad5049ebaa941733197d570597" translate="yes" xml:space="preserve">
          <source>You can review the emulator issues on the &lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&amp;amp;feature=player_embedded#!&quot;&gt;Google I/O 2011: Android Development Tools&lt;/a&gt; talk, starting a 0:40:20.</source>
          <target state="translated">您可以在&lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&amp;amp;feature=player_embedded#!&quot;&gt;Google I / O 2011：Android开发工具&lt;/a&gt;讲座中（从0:40:20开始）查看模拟器问题。</target>
        </trans-unit>
        <trans-unit id="b1c3d720c90b682411fdbd1586a388328764c194" translate="yes" xml:space="preserve">
          <source>YouWave</source>
          <target state="translated">YouWave</target>
        </trans-unit>
        <trans-unit id="2aeede80be6f6dfc0aa4d1cbd6487e24e27a81be" translate="yes" xml:space="preserve">
          <source>control</source>
          <target state="translated">control</target>
        </trans-unit>
        <trans-unit id="47fdd9283ded80c62bb5e40ce65b0e49a48675b3" translate="yes" xml:space="preserve">
          <source>fn</source>
          <target state="translated">fn</target>
        </trans-unit>
        <trans-unit id="da71a42485d0ce5d505be9bf3aeea8c0157f3672" translate="yes" xml:space="preserve">
          <source>for the</source>
          <target state="translated">为</target>
        </trans-unit>
        <trans-unit id="3173cc1062d32bf1a8526e1fc8738c9f940f0fb2" translate="yes" xml:space="preserve">
          <source>keys to work. Page up/down/left/right can be performed using control + arrow keys.</source>
          <target state="translated">按键工作。可以使用控制键+方向键来进行页面的上下浮动。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
