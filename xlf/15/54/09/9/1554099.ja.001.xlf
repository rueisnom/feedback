<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1554099">
    <body>
      <group id="1554099">
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="5b427777b61b3a1ada0ce78e091f56463d1bee6d" translate="yes" xml:space="preserve">
          <source>, type &lt;code&gt;netcfg&lt;/code&gt;, remember the IP address, press</source>
          <target state="translated">、 &lt;code&gt;netcfg&lt;/code&gt; と入力し、IPアドレスを覚えて、</target>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="f66ca0fed6569ba5e1581434fd8002fbb8a13e62" translate="yes" xml:space="preserve">
          <source>. Then enable &lt;code&gt;Quick Boot&lt;/code&gt; like below screenshot.</source>
          <target state="translated">。 次に、スクリーンショットのように &lt;code&gt;Quick Boot&lt;/code&gt; 有効にします。</target>
        </trans-unit>
        <trans-unit id="f83d7b56575dbf09c2b7674c9efeeb0c4a9285d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://developer.android.com/sdk/eclipse-adt.html&quot;&gt;Android Development Tools (ADT) 9.0.0&lt;/a&gt; (or later) has a feature that allows you to save state of the AVD (emulator), and you can start your emulator instantly. You have to enable this feature while creating a new AVD or you can just create it later by editing the AVD.</source>
          <target state="translated">&lt;a href=&quot;http://developer.android.com/sdk/eclipse-adt.html&quot;&gt;Android Development Tools（ADT）9.0.0&lt;/a&gt; （またはそれ以降）には、AVD（エミュレーター）の状態を保存できる機能があり、エミュレーターを即座に起動できます。 新しいAVDを作成するときにこの機能を有効にする必要があります。または、AVDを編集して後で作成することもできます。</target>
        </trans-unit>
        <trans-unit id="b342d18a8334f5c091e987d13fa877f76b64b888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-icount [N|auto]&lt;/code&gt; -- enable virtual instruction counter with 2^N clock ticks per instruction</source>
          <target state="translated">&lt;code&gt;-icount [N|auto]&lt;/code&gt; -命令ごとに2 ^ Nクロックティックの仮想命令カウンターを有効にします</target>
        </trans-unit>
        <trans-unit id="54c25bbf1383e1c95d1ce3e4ff847b605a509b4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-no-boot-anim&lt;/code&gt; -- disable animation for faster boot</source>
          <target state="translated">&lt;code&gt;-no-boot-anim&lt;/code&gt; -アニメーションを無効にしてブートを高速化</target>
        </trans-unit>
        <trans-unit id="245d1b531be79dd771d7402beb05601a66068a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-qemu args...&lt;/code&gt; -- pass arguments to qemu</source>
          <target state="translated">&lt;code&gt;-qemu args...&lt;/code&gt; 引数をqemuに渡します</target>
        </trans-unit>
        <trans-unit id="9d71a43f4b66e562efb938c2a478e90469bfc9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@my_avd&lt;/code&gt; -- launch a virtual device named 'my_avd'</source>
          <target state="translated">&lt;code&gt;@my_avd&lt;/code&gt; - 「my_avd」という名前の仮想デバイスを起動します</target>
        </trans-unit>
        <trans-unit id="3df0a7f0d6e7a722d148e3ab7c8b4899db161fc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Genymotion - Preferred&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Genymotion-優先&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ebd827c5e70cf7b5addfa49a346b4218feff08c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always double-check the settings after saving!&lt;/strong&gt;  The emulator is very picky about what it allows you to set, and it will revert configurations without telling you.</source>
          <target state="translated">&lt;strong&gt;保存後は必ず設定を再確認してください！&lt;/strong&gt; エミュレータは、何を設定できるかについて非常にうるさいので、ユーザーに通知せずに構成を元に戻します。</target>
        </trans-unit>
        <trans-unit id="fb6d2cbca9db8d84583598a334de2106f639c1cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assign all available processors to the emulator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;利用可能なすべてのプロセッサをエミュレータに割り当てます&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2471740fa087de7f03d1d17e0b6844813bd5a9cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HAXM&lt;/strong&gt; stands for - &lt;strong&gt;&quot;Intel Hardware Accelerated Execution Manager&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HAXM&lt;/strong&gt;は&lt;strong&gt;「Intel Hardware Accelerated Execution Manager」の&lt;/strong&gt;略です&lt;strong&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="014555d5bf48a4ecbc835b2d4fa8645a9f125c6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT NOTE&lt;/strong&gt;: Please &lt;strong&gt;first&lt;/strong&gt; refer to &lt;a href=&quot;http://web.archive.org/web/20160102075218/http://ark.intel.com/Products/VirtualizationTechnology&quot;&gt;the Intel list about VT&lt;/a&gt; to make sure your CPU supports Intel VT.</source>
          <target state="translated">&lt;strong&gt;重要な注意&lt;/strong&gt; ：CPUがIntel VTをサポートしていることを確認するに&lt;a href=&quot;http://web.archive.org/web/20160102075218/http://ark.intel.com/Products/VirtualizationTechnology&quot;&gt;は、&lt;/a&gt; &lt;strong&gt;まず&lt;/strong&gt; VTに関するIntelリストを参照してください。</target>
        </trans-unit>
        <trans-unit id="f45d87f406a965d1d12dad3466a365ee86d42698" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Set the device memory to 1024&amp;nbsp; MB or more&lt;/strong&gt;, but not more than the Intel HAXM setting. I use 1024&amp;nbsp; MB per device and 2048 for HAXM.</source>
          <target state="translated">&lt;strong&gt;デバイスのメモリを1024 MB以上&lt;/strong&gt; 、Intel HAXM設定以下に設定します。 デバイスごとに1024 MBを使用し、HAXM​​には2048を使用します。</target>
        </trans-unit>
        <trans-unit id="d0683dbf080f1ba2f1f74a4af9d94ce334d84b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE:&lt;/strong&gt; The latest version of Android studio (2.x) made major improvements to the bundled emulator.  It's responsive and has a whole bunch of features.</source>
          <target state="translated">&lt;strong&gt;更新：&lt;/strong&gt; Android Studio（2.x）の最新バージョンは、バンドルされたエミュレーターに大きな改良を加えました。 応答性が高く、多くの機能を備えています。</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="641a99032b1654281c4179479c83ca2b230f920c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use GPU emulation.&lt;/strong&gt;  You cannot use the Snapshot option when using GPU emulation as of this writing.  Ensure that GPU emulation is set to &quot;yes&quot;.</source>
          <target state="translated">&lt;strong&gt;GPUエミュレーションを使用します。&lt;/strong&gt; この記事の執筆時点では、GPUエミュレーションを使用している場合は、スナップショットオプションを使用できません。 GPUエミュレーションが「はい」に設定されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="54a843f274d429f1ce47a152bb0a3c370fbcb440" translate="yes" xml:space="preserve">
          <source>A new option is the &lt;a href=&quot;http://blogs.msdn.com/b/visualstudioalm/archive/2014/11/12/introducing-visual-studio-s-emulator-for-android.aspx&quot;&gt;Visual Studio Emulator for Android&lt;/a&gt;--it's fast, &lt;a href=&quot;http://en.wikipedia.org/wiki/Hyper-V&quot;&gt;Hyper-V&lt;/a&gt;, x86, and &lt;a href=&quot;http://aka.ms/vsemu&quot;&gt;free to download even without VS&lt;/a&gt;.</source>
          <target state="translated">新しいオプションは、 &lt;a href=&quot;http://blogs.msdn.com/b/visualstudioalm/archive/2014/11/12/introducing-visual-studio-s-emulator-for-android.aspx&quot;&gt;Android用のVisual Studio Emulatorです。これ&lt;/a&gt;は、高速、 &lt;a href=&quot;http://en.wikipedia.org/wiki/Hyper-V&quot;&gt;Hyper-V&lt;/a&gt; 、x86で、 &lt;a href=&quot;http://aka.ms/vsemu&quot;&gt;VSがなくても無料でダウンロードできます&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="a86c7088144b8bfd5ea5b781432b107bf2edfb98" translate="yes" xml:space="preserve">
          <source>After compiling, it installs instantly. It is very impressive, considering I have rather an average computer hardware (dual core with 4&amp;nbsp; GB of RAM).</source>
          <target state="translated">コンパイル後、すぐにインストールされます。 かなり平均的なコンピューターハードウェア（4 GBのRAMを搭載したデュアルコア）を持っていることを考えると、それは非常に印象的です。</target>
        </trans-unit>
        <trans-unit id="b9efc989d1c2e22b3053905be079bfa53516d4eb" translate="yes" xml:space="preserve">
          <source>After developing for a while, my emulator became brutally slow. I chose &lt;strong&gt;wipe user data&lt;/strong&gt;, and it was much much better. I am guessing that it takes time to load up each &lt;a href=&quot;http://en.wikipedia.org/wiki/APK_%28file_format%29&quot;&gt;APK&lt;/a&gt; file you've deployed.</source>
          <target state="translated">しばらく開発した後、私のエミュレータは残酷に遅くなりました。 &lt;strong&gt;ユーザーデータのワイプ&lt;/strong&gt;を選択しましたが、はるかに優れていました。 デプロイした各&lt;a href=&quot;http://en.wikipedia.org/wiki/APK_%28file_format%29&quot;&gt;APK&lt;/a&gt;ファイルの読み込みには時間がかかると思います。</target>
        </trans-unit>
        <trans-unit id="0781cb034bf29924bdf40e8035c3764bbd98224e" translate="yes" xml:space="preserve">
          <source>After these changes, Android Emulator was launching in 5-10 seconds and running without any noticeable lag.
Be aware that these features are hardware dependent (CPU/GPU) and may not work on some systems.</source>
          <target state="translated">これらの変更後、Androidエミュレータは5~10秒で起動し、目立ったラグもなく動作していました。なお、これらの機能はハードウェア(CPUGPU)に依存しているため、システムによっては動作しない場合があります。</target>
        </trans-unit>
        <trans-unit id="0effc9719dc125f777a2560dbbecff91f07b88c1" translate="yes" xml:space="preserve">
          <source>After you have installed the drivers and downloaded an Android X86 system image (as described in the documentation) you should be able to create a new AVD using the x86 image:</source>
          <target state="translated">ドライバをインストールし、Android X86システムイメージをダウンロードしたら(ドキュメントに記載されているように)、x86イメージを使って新しいAVDを作成することができるはずです。</target>
        </trans-unit>
        <trans-unit id="59e04a212fa14359ad02d1c085748250318eb2ad" translate="yes" xml:space="preserve">
          <source>Also I have increased the &lt;code&gt;Device RAM Size&lt;/code&gt; to &lt;code&gt;1024&lt;/code&gt; which results in a very fast emulator.</source>
          <target state="translated">また、 &lt;code&gt;Device RAM Size&lt;/code&gt; を &lt;code&gt;1024&lt;/code&gt; に増やしました。これにより、エミュレータが非常に高速になります。</target>
        </trans-unit>
        <trans-unit id="e30eff925100b7c3e119ed678e39009e962455b0" translate="yes" xml:space="preserve">
          <source>Alt</source>
          <target state="translated">Alt</target>
        </trans-unit>
        <trans-unit id="4569354a7d35cf871ff20be6401348397a115647" translate="yes" xml:space="preserve">
          <source>And Instant run will look like this</source>
          <target state="translated">そして、Instant runは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="76b8594931b91429654ccb8da12ce46a95cf045f" translate="yes" xml:space="preserve">
          <source>And for speeding up your emulator you can refer to &lt;em&gt;&lt;a href=&quot;http://jolicode.com/blog/speed-up-your-android-emulator&quot;&gt;Speed up your Android Emulator!&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">エミュレータを高速化するには&lt;em&gt;&lt;a href=&quot;http://jolicode.com/blog/speed-up-your-android-emulator&quot;&gt;、Androidエミュレータの高速&lt;/a&gt;&lt;/em&gt;化を参照し&lt;em&gt;てください。&lt;/em&gt; ：</target>
        </trans-unit>
        <trans-unit id="23254b249bd8dfaa4d4fbbc9d8a076aafaf07e3f" translate="yes" xml:space="preserve">
          <source>And now the emulator (although takes a while to start) seems to be running faster than previously.</source>
          <target state="translated">そして、今では(起動に時間はかかりますが)エミュレータが以前よりも速く動くようになったようです。</target>
        </trans-unit>
        <trans-unit id="d4b5338ebfbb43483effff954af9704a3139798e" translate="yes" xml:space="preserve">
          <source>And start it:</source>
          <target state="translated">そして、それを開始します。</target>
        </trans-unit>
        <trans-unit id="37a3808106f12fa1adab3ba07adff4a7fbf9ef19" translate="yes" xml:space="preserve">
          <source>Android SDK rev. 17 supports Virtual Machine Acceleration using AMD and Intel virtualization technologies.</source>
          <target state="translated">Android SDK rev.17は、AMDとIntelの仮想化技術を使用したVirtual Machine Accelerationをサポートしています。</target>
        </trans-unit>
        <trans-unit id="5e3d54d9b1180255e9e6718d243603888c570969" translate="yes" xml:space="preserve">
          <source>Android emulator is dead slow. It takes 800MB memory while running.
If you are on Windows, You can use Microsoft Android Emulator. It is superb, provides you functionalities more than Android Studio Emulator. And most important it is fast ( consumes 13MB only).
It comes with Visual Studio 2015 Technical Preview. I am using it and happy with it. I downloaded and installed entire VS pack, I need to look how we can install VS Emulator only.</source>
          <target state="translated">Androidエミュレータは致命的に遅い。実行中に800MBのメモリを消費します。Windowsの場合は、MicrosoftのAndroidエミュレータを使うことができます。Android Studio Emulator以上の機能を提供してくれます。そして、最も重要なのは、それが高速であることです(13MBのみを消費します)。それはVisual Studio 2015 Technical Previewが付属しています。私はそれを使用しており、それに満足しています。私は全体のVSパックをダウンロードしてインストールし、私は我々が唯一のVSエミュレータをインストールすることができますどのように見る必要があります。</target>
        </trans-unit>
        <trans-unit id="396f0eb47225b0f34d48e5a7ea6c9c50c72d4abf" translate="yes" xml:space="preserve">
          <source>Android emulator release 9 has a new &quot;snapshot&quot; feature. You can &lt;a href=&quot;http://good-android-dev.blogspot.com/2011/02/slow-android-emulator-speed-up-it.html&quot;&gt;save the state of the emulator&lt;/a&gt; (make an image of the emulator) and avoid booting when you start the emulator.</source>
          <target state="translated">Androidエミュレータリリース9には、新しい「スナップショット」機能があります。 &lt;a href=&quot;http://good-android-dev.blogspot.com/2011/02/slow-android-emulator-speed-up-it.html&quot;&gt;エミュレーターの状態を保存&lt;/a&gt; （ エミュレーターのイメージを作成）して、エミュレーターの開始時にブートを回避できます。</target>
        </trans-unit>
        <trans-unit id="ab5a000e88b5d9d0fa2575f5c6263eb93452405d" translate="yes" xml:space="preserve">
          <source>Andy</source>
          <target state="translated">Andy</target>
        </trans-unit>
        <trans-unit id="adf69dfabba37f2c1bdb58e97df0eb9462da16aa" translate="yes" xml:space="preserve">
          <source>As of Revision 17 of Android SDK Tools, the emulator can use graphic acceleration and CPU-provided extensions for better efficiency. The prerequisites and full configuration and user notes are at:</source>
          <target state="translated">Android SDK ToolsのRevision 17では、エミュレータはグラフィックアクセラレーションとCPUが提供する拡張機能を使用して効率を向上させることができます。前提条件と完全な設定とユーザーノートはこちらです。</target>
        </trans-unit>
        <trans-unit id="b73369d2929a79e8036c37968223888678d73a20" translate="yes" xml:space="preserve">
          <source>BlueStacks</source>
          <target state="translated">BlueStacks</target>
        </trans-unit>
        <trans-unit id="609a5349f61c6e69eb3788d9a96f19e490f4a947" translate="yes" xml:space="preserve">
          <source>CPU/ABI: Intel Atom (x86)</source>
          <target state="translated">CPUABI:Intel Atom (x86)</target>
        </trans-unit>
        <trans-unit id="e292f0fbdb5ba04955b1fc9a460b635e3fcaf35b" translate="yes" xml:space="preserve">
          <source>Check out the video &lt;em&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&quot;&gt;Google I/O 2011: Android Development Tools&lt;/a&gt;&lt;/em&gt; to see it in action -- jump to about 44 minutes.</source>
          <target state="translated">動画「 &lt;em&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&quot;&gt;Google I / O 2011：Android開発ツール」&lt;/a&gt;&lt;/em&gt;で実際の動作を確認してください。約44分です。</target>
        </trans-unit>
        <trans-unit id="498ae87b4c93909746e74236b81faacb78a48f97" translate="yes" xml:space="preserve">
          <source>Click on Emulator edit button, then click</source>
          <target state="translated">エミュレータ編集ボタンをクリックして</target>
        </trans-unit>
        <trans-unit id="6b5bd0e563b75c4590439bca6aad7853bed300c7" translate="yes" xml:space="preserve">
          <source>Configuring VM Acceleration on Linux</source>
          <target state="translated">LinuxでのVMアクセラレーションの設定</target>
        </trans-unit>
        <trans-unit id="be9e8df5464fdd78ff2b6b08c454deded50a0661" translate="yes" xml:space="preserve">
          <source>Configuring VM Acceleration on Mac</source>
          <target state="translated">MacでVMアクセラレーションを設定する</target>
        </trans-unit>
        <trans-unit id="bb24d100c2f6b1ba4894e998f7b6610815e21d3d" translate="yes" xml:space="preserve">
          <source>Configuring VM Acceleration on Windows</source>
          <target state="translated">WindowsでのVMアクセラレーションの設定</target>
        </trans-unit>
        <trans-unit id="a3b65c425fd115604a5d32c7382cae1aa63c87c9" translate="yes" xml:space="preserve">
          <source>Create a &lt;em&gt;new&lt;/em&gt; x86 AVD: Follow the image below:</source>
          <target state="translated">&lt;em&gt;新しい&lt;/em&gt; x86 AVDを作成します。以下の画像に従ってください：</target>
        </trans-unit>
        <trans-unit id="e3f11507691272e6293234b3386baf4e19b02378" translate="yes" xml:space="preserve">
          <source>Create a new AVD using Intel Atom x86</source>
          <target state="translated">Intel Atom x86を使用して新しいAVDを作成する</target>
        </trans-unit>
        <trans-unit id="11f7c57868ebab0e47fe9dc57822c6e7863844ba" translate="yes" xml:space="preserve">
          <source>Create a virtual machine as Linux 2.6/Other Linux, 512&amp;nbsp;MB RAM, HD 2&amp;nbsp;GB. Network: PCnet-Fast III, attached to &lt;a href=&quot;http://en.wikipedia.org/wiki/Network_address_translation&quot;&gt;NAT&lt;/a&gt;. You can also use a bridged adapter, but you need a &lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&quot;&gt;DHCP&lt;/a&gt; server in your environment.</source>
          <target state="translated">Linux 2.6 /その他のLinux、512 MB RAM、HD 2 GBとして仮想マシンを作成します。 ネットワーク：PCnet-Fast III、 &lt;a href=&quot;http://en.wikipedia.org/wiki/Network_address_translation&quot;&gt;NATに接続&lt;/a&gt; 。 ブリッジアダプタを使用することもできますが、環境には&lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&quot;&gt;DHCP&lt;/a&gt;サーバーが必要です。</target>
        </trans-unit>
        <trans-unit id="4ed81d5fc2e70282995df9b157ec0ddb3e5d0214" translate="yes" xml:space="preserve">
          <source>Creating a new AVD with the save snapshot feature.</source>
          <target state="translated">スナップショットの保存機能を使って新しいAVDを作成します。</target>
        </trans-unit>
        <trans-unit id="e2fc9d5ba332ca1735999dc441e1ab6f6fd58066" translate="yes" xml:space="preserve">
          <source>Currently, it supports only Intel&amp;reg; VT (Intel Virtualization Technology).</source>
          <target state="translated">現在、Intel&amp;reg;VT（Intel Virtualization Technology）のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="f9cbb0b542b802a805d4ef565991e9780c978858" translate="yes" xml:space="preserve">
          <source>Don't forget to install the appropriate driver for your operating system:</source>
          <target state="translated">お使いのオペレーティングシステムに適切なドライバをインストールすることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="91b556cbc805a1e0d1260463f356e895986e4888" translate="yes" xml:space="preserve">
          <source>Download the &lt;a href=&quot;http://www.android-x86.org/download&quot;&gt;ISO file&lt;/a&gt; that you need.</source>
          <target state="translated">必要な&lt;a href=&quot;http://www.android-x86.org/download&quot;&gt;ISOファイル&lt;/a&gt;をダウンロードします。</target>
        </trans-unit>
        <trans-unit id="aa7dc8f71d26d47ed826c2de19028ba0d6530ee9" translate="yes" xml:space="preserve">
          <source>Download the &lt;strong&gt;x86 Atom System Images&lt;/strong&gt; and the &lt;strong&gt;Intel Hardware Accelerated Execution Manager Driver&lt;/strong&gt;. Follow the image below:</source>
          <target state="translated">&lt;strong&gt;x86 Atomシステムイメージ&lt;/strong&gt;と&lt;strong&gt;Intel Hardware Accelerated Execution Manager Driverを&lt;/strong&gt;ダウンロードします。 以下の画像に従ってください：</target>
        </trans-unit>
        <trans-unit id="d4432b061c4c9288d08a2111951e0577bc4bb3b5" translate="yes" xml:space="preserve">
          <source>EDIT:
Try &lt;a href=&quot;https://www.visualstudio.com/vs/msft-android-emulator/&quot;&gt;https://www.visualstudio.com/vs/msft-android-emulator/&lt;/a&gt;</source>
          <target state="translated">編集： &lt;a href=&quot;https://www.visualstudio.com/vs/msft-android-emulator/&quot;&gt;https&lt;/a&gt; ://www.visualstudio.com/vs/msft-android-emulator/を試してください</target>
        </trans-unit>
        <trans-unit id="0aa20b2ea7e686967eaf0d5d24501fd74b86cd2f" translate="yes" xml:space="preserve">
          <source>Emulators are slow. There's really nothing you can do about it, but there are alternatives to the emulator.</source>
          <target state="translated">エミュレータは遅いです。本当にどうすることもできませんが、エミュレータの代わりになるものがあります。</target>
        </trans-unit>
        <trans-unit id="a6b3249bf7d5020378533e88f1e0d18d4d23c225" translate="yes" xml:space="preserve">
          <source>Even if it starts and loads the home screen, it is very sluggish. I have tried the &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse IDE&lt;/a&gt; in &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;version 3.5&lt;/a&gt; (Galileo) and &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;3.4&lt;/a&gt; (Ganymede).</source>
          <target state="translated">起動してホーム画面を読み込んでも、非常に遅い。 &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;バージョン3.5&lt;/a&gt; （Galileo）および&lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;3.4&lt;/a&gt; （Ganymede）で&lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse IDE&lt;/a&gt;を試しました。</target>
        </trans-unit>
        <trans-unit id="88bfad9cfffeafd299a44d4daf979d57419a2621" translate="yes" xml:space="preserve">
          <source>F1</source>
          <target state="translated">F1</target>
        </trans-unit>
        <trans-unit id="e262aa4c560f1ae35fd6e5cf5ac45462ea46ecc8" translate="yes" xml:space="preserve">
          <source>F12</source>
          <target state="translated">F12</target>
        </trans-unit>
        <trans-unit id="d7b4d9b4412bb9ed347dbdc20fb00d440fd9ad87" translate="yes" xml:space="preserve">
          <source>F7</source>
          <target state="translated">F7</target>
        </trans-unit>
        <trans-unit id="1d7c564189fa8822a9fbe38ab442564373b6d52c" translate="yes" xml:space="preserve">
          <source>Failed to open the hax module</source>
          <target state="translated">hax モジュールのオープンに失敗しました。</target>
        </trans-unit>
        <trans-unit id="ef7c42a143eb712a4c65899ed502c293b35ed22e" translate="yes" xml:space="preserve">
          <source>First, install the Intel x86 Emulator Accelerator (HAXM). This can be downloaded directly from Intel or using Android SDK Manager.  In the SDK Manager, it's located under Extras.</source>
          <target state="translated">まず、Intel x86 Emulator Accelerator(HAXM)をインストールします。これはIntelから直接ダウンロードするか、Android SDK Managerを使ってインストールします。SDK Managerでは、Extrasの下にあります。</target>
        </trans-unit>
        <trans-unit id="c07ed1ad545962a2b51a6d8645695a2c4fffe680" translate="yes" xml:space="preserve">
          <source>For enabling &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphics_processing_unit&quot;&gt;GPU&lt;/a&gt; aceleration, run the emulator from the command line or add &quot;-gpu on&quot; to the additional emulator command line options in the AVD configuration.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Graphics_processing_unit&quot;&gt;GPU&lt;/a&gt;アクセラレーションを有効にするには、コマンドラインからエミュレーターを実行するか、AVD構成の追加のエミュレーターコマンドラインオプションに「-gpu on」を追加します。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="5de14154ebde59825d5672789153e43a3175c109" translate="yes" xml:space="preserve">
          <source>For those still interested:
Try using &lt;a href=&quot;http://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt;.  You can download a version for Windows/Mac OS X/Linux after registering.  A plugin for Eclipse is also available:</source>
          <target state="translated">まだ興味がある方は、 &lt;a href=&quot;http://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt;をお試しください。 登録後、Windows / Mac OS X / Linuxのバージョンをダウンロードできます。 Eclipseのプラグインも利用できます。</target>
        </trans-unit>
        <trans-unit id="de4c725f1c79e60e448de00c90300643fa6444fd" translate="yes" xml:space="preserve">
          <source>For using the CPU machine extensions, you have to install the driver (caution because it can conflict with existing &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/VMware&quot;&gt;VMware&lt;/a&gt; drivers). Once it's installed it will be used automatically whenever you use an x86-based AVD.</source>
          <target state="translated">CPUマシン拡張機能を使用するには、ドライバーをインストールする必要があります（既存の&lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt;または&lt;a href=&quot;http://en.wikipedia.org/wiki/VMware&quot;&gt;VMware&lt;/a&gt;ドライバーと競合する可能性があるので注意してください）。 インストールすると、x86ベースのAVDを使用するときに自動的に使用されます。</target>
        </trans-unit>
        <trans-unit id="3cbc51ff0287acb2835ade64373a3a787248ea60" translate="yes" xml:space="preserve">
          <source>GenyMotion allows you to control various sensors of your device including the battery level, signal strength, and GPS. The latest version now also contains camera tools.</source>
          <target state="translated">GenyMotionでは、バッテリー残量、信号強度、GPSなど、お使いのデバイスの様々なセンサーをコントロールすることができます。最新バージョンではカメラツールも搭載されました。</target>
        </trans-unit>
        <trans-unit id="e3550ea99de01e9c42a41f79a749f2e6038d24fc" translate="yes" xml:space="preserve">
          <source>Good way to speed up Android Emulator and app testing is Install or Upgrade your Android Studio to &lt;a href=&quot;http://tools.android.com/download/studio/builds/2-0-preview&quot;&gt;Android Studio 2.0&lt;/a&gt; version and then go to app open Settings/Preferences, the go to Build, Execution, Deployment &amp;rarr; Instant Run. Click on Enable Instant Run. And After That This will ensure you have the correct gradle plugin for your project to work with Instant Run.</source>
          <target state="translated">Android Emulatorとアプリのテストをスピードアップする良い方法は、Android Studioを&lt;a href=&quot;http://tools.android.com/download/studio/builds/2-0-preview&quot;&gt;Android Studio 2.0&lt;/a&gt;バージョンにインストールまたはアップグレードしてから、アプリを開いて[設定] / [設定]を開き、[ビルド、実行、デプロイ]&amp;rarr;[インスタントラン]に移動します。 [インスタントランを有効にする]をクリックします。 その後、これにより、プロジェクトがInstant Runで動作するための正しいGradleプラグインが確実に得られます。</target>
        </trans-unit>
        <trans-unit id="30706c10cbea3e00204a5234eee7f56ff9f4a975" translate="yes" xml:space="preserve">
          <source>HAX is not working and the emulator runs in emulation mode emulator:</source>
          <target state="translated">HAXが動かず、エミュレータはエミュレーションモードのエミュレータで動作します。</target>
        </trans-unit>
        <trans-unit id="b8cbec5446f00ce5b9f5d29426a994a747bbb78e" translate="yes" xml:space="preserve">
          <source>HAX is working and emulator runs in fast virtual mode</source>
          <target state="translated">HAXは動作しており、エミュレータは高速仮想モードで動作します。</target>
        </trans-unit>
        <trans-unit id="ad495a99d7c02a796b897f096f496ed40009c472" translate="yes" xml:space="preserve">
          <source>HAXM Speeds Up the Slow Android Emulator</source>
          <target state="translated">HAXMは遅いAndroidエミュレータを高速化する</target>
        </trans-unit>
        <trans-unit id="5d35e51514240075741e7282bda8844164ed3076" translate="yes" xml:space="preserve">
          <source>HAXM works with Intel devices, so created a new Emulator with Intel CPU.</source>
          <target state="translated">HAXMはIntelデバイスで動作するので、Intel CPUを搭載したエミュレータを新たに作成しました。</target>
        </trans-unit>
        <trans-unit id="b81074d662ad58c62de9e32444e31ebcc8ac813f" translate="yes" xml:space="preserve">
          <source>Here are some tips to speed up the Android emulator: &lt;em&gt;&lt;a href=&quot;http://www.nuxeo.com/blog/speeding-up-the-android-emulator/&quot;&gt;How to speed up the Android Emulator by up to 400%&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Androidエミュレータを高速化するためのヒントをいくつか紹介します&lt;em&gt;&lt;a href=&quot;http://www.nuxeo.com/blog/speeding-up-the-android-emulator/&quot;&gt;。Androidエミュレータを最大400％高速化する方法&lt;/a&gt;&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="f286df6c2e19af97903fd2129740fb6f8346fc6b" translate="yes" xml:space="preserve">
          <source>Here's what I noticed nobody mentioned it at all.</source>
          <target state="translated">ここで気付いたのですが、誰も全く触れていませんでした。</target>
        </trans-unit>
        <trans-unit id="e0ffc14f200531df8dc6e1073a6695805683f74e" translate="yes" xml:space="preserve">
          <source>Here's what you can try. It does speed up the emulator for me, especially during loading time. I noticed the emulator is only using a single core of the available CPU. I set it to use all available processors.</source>
          <target state="translated">これを試してみてください。エミュレータを高速化してくれます。エミュレータは利用可能なCPUのシングルコアしか使っていないことに気づきました。利用可能なすべてのプロセッサを使うように設定しました。</target>
        </trans-unit>
        <trans-unit id="643e5b127965e7a98c4feb9db73fa152feccf1f5" translate="yes" xml:space="preserve">
          <source>However Android Studio is right now in Preview you can try it now.</source>
          <target state="translated">しかし、Android Studioは現在プレビュー中で、今すぐ試すことができます。</target>
        </trans-unit>
        <trans-unit id="1c7c6550098b6296392b2f8e7bce4744f6201c03" translate="yes" xml:space="preserve">
          <source>I had intermittent slow emulator (SDK v8.0) load times, up to three minutes on Intel Core i7 920 2.67&amp;nbsp;GHz CPU running on Xubuntu 10.04 &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; 3.2.12 guest with Eclipse (3.6.1) loaded. I changed the VirtualBox guest memory from 1024&amp;nbsp;MB to 2048&amp;nbsp;MB and from that point on, I never experienced the slowness again (load times consistent at 33 seconds, CPU load consistent at 20%). Both Eclipse and the emulator are memory hogs.</source>
          <target state="translated">Eclipse（3.6.1）がロードされたXubuntu 10.04 &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; 3.2.12ゲストで実行されているIntel Core i7 920 2.67 GHz CPUで、断続的に遅いエミュレーター（SDK v8.0）のロード時間が最大3分ありました。 VirtualBoxゲストメモリを1024 MBから2048 MBに変更しましたが、それ以降、速度が低下することはありません（ロード時間は33秒で一定、CPUロードは20％で一定）。 Eclipseとエミュレーターはどちらもメモリを大量に消費します。</target>
        </trans-unit>
        <trans-unit id="bd66b65ee88546052629dfeb7dcc767271d4b880" translate="yes" xml:space="preserve">
          <source>I have got a &lt;strong&gt;2.67&lt;/strong&gt;&amp;nbsp; GHz Celeron processor, and &lt;strong&gt;1.21&lt;/strong&gt;&amp;nbsp; GB of RAM on a &lt;strong&gt;x86&lt;/strong&gt; Windows &lt;strong&gt;XP&lt;/strong&gt; Professional machine.</source>
          <target state="translated">&lt;strong&gt;x86&lt;/strong&gt; Windows &lt;strong&gt;XP&lt;/strong&gt; Professionalマシンには&lt;strong&gt;2.67&lt;/strong&gt; GHzのCeleronプロセッサと&lt;strong&gt;1.21&lt;/strong&gt; GBのRAMを搭載しています。</target>
        </trans-unit>
        <trans-unit id="e5aa21de101bfb056cd450df1cbf09f288bec02f" translate="yes" xml:space="preserve">
          <source>I have recently upgraded my Ubuntu installation to &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_10.04_LTS_.28Lucid_Lynx.29&quot;&gt;Ubuntu&amp;nbsp;10.04&lt;/a&gt; LTS (Lucid Lynx) which in turn updated my Java version to:</source>
          <target state="translated">最近、Ubuntuインストールを&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_10.04_LTS_.28Lucid_Lynx.29&quot;&gt;Ubuntu 10.04&lt;/a&gt; LTS（Lucid Lynx）にアップグレードしました。これにより、Javaバージョンが次のように更新されました。</target>
        </trans-unit>
        <trans-unit id="34249b6a29a650217ab9a93fda5a9367e1be7d90" translate="yes" xml:space="preserve">
          <source>I noticed that the my emulator (&lt;a href=&quot;http://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse&lt;/a&gt; plugin) was significantly slowed by my &lt;a href=&quot;http://en.wikipedia.org/wiki/Nvidia&quot;&gt;Nvidia&lt;/a&gt; graphics card anti-aliasing settings. Removing 2x anti aliasing from the graphics menu and changing it to application controlled made it more responsive. It is still slow, but better than it used to be.</source>
          <target state="translated">私のエミュレーター（ &lt;a href=&quot;http://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse&lt;/a&gt;プラグイン）が、 &lt;a href=&quot;http://en.wikipedia.org/wiki/Nvidia&quot;&gt;Nvidia&lt;/a&gt;グラフィックカードのアンチエイリアス設定によって大幅に遅くなっていることに気付きました。 グラフィックスメニューから2xアンチエイリアスを削除し、アプリケーション制御に変更すると、応答性が向上しました。 それはまだ遅いですが、以前よりも優れています。</target>
        </trans-unit>
        <trans-unit id="810c8fff0c746db2510814e8e2d244d97d74661d" translate="yes" xml:space="preserve">
          <source>I'm using Windows 7.</source>
          <target state="translated">Windows7を使っています。</target>
        </trans-unit>
        <trans-unit id="e0d4a27638588784c8a27cff0e0d4657cd7c6553" translate="yes" xml:space="preserve">
          <source>I've noticed that the emulator starts much faster if there's no Dalvik Debug Monitor Server (DDMS) connected. So if you start the emulator from Virtual Device Manager &quot;SDK Setup.exe&quot; and Eclipse is not started, the emulator works faster.</source>
          <target state="translated">Dalvik Debug Monitor Server(DDMS)が接続されていないとエミュレータの起動がかなり速くなることに気がつきました。なので、Virtual Device Managerの「SDK Setup.exe」からエミュレータを起動して、Eclipseを起動していない状態でエミュレータを起動すると、エミュレータの動作が速くなります。</target>
        </trans-unit>
        <trans-unit id="3860aca6473a6884e18459a816d022a4c215ab78" translate="yes" xml:space="preserve">
          <source>If HAXM is working properly, you may see this message when launching the emulator:</source>
          <target state="translated">HAXMが正常に動作している場合、エミュレータの起動時にこのメッセージが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="fb5e846f550f85c527507e96b8dc21d2b9ac21a0" translate="yes" xml:space="preserve">
          <source>If in case you don't know, you do not need to close the emulator every-time you run/debug your app. If you click run/debug when it's already open, your APK file will get uploaded to the emulator and start pretty much immediately. Emulator takes annoyingly long time only when it started the first time.</source>
          <target state="translated">あなたが知らない場合には、あなたのアプリをrundebugするたびにエミュレータを閉じる必要はありません。あなたはそれがすでに開いているときにrundebugをクリックした場合、あなたのAPKファイルは、エミュレータにアップロードされ、かなりすぐに開始されます。エミュレータは最初に起動した時だけ迷惑なほど長い時間がかかります。</target>
        </trans-unit>
        <trans-unit id="c97e4417cc66fd960a92ceeb3a1f287cc3a0295a" translate="yes" xml:space="preserve">
          <source>If the installer fails with the message that Intel VT must be turned on, you need to enable this in the &lt;a href=&quot;http://en.wikipedia.org/wiki/BIOS&quot;&gt;BIOS&lt;/a&gt;. See the description for how to do this in &lt;em&gt;&lt;a href=&quot;http://forums.lenovo.com/t5/T400-T500-and-newer-T-series/Enabling-Intel-VT-Virtualization-Technology/ta-p/388479&quot;&gt;Enabling Intel VT (Virtualization Technology) &lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Intel VTをオンにする必要があるというメッセージが表示されてインストーラーが失敗する場合は、 &lt;a href=&quot;http://en.wikipedia.org/wiki/BIOS&quot;&gt;BIOSで&lt;/a&gt;これを有効にする必要があります 。 これを行う方法については、「 &lt;em&gt;&lt;a href=&quot;http://forums.lenovo.com/t5/T400-T500-and-newer-T-series/Enabling-Intel-VT-Virtualization-Technology/ta-p/388479&quot;&gt;Intel VT（Virtualization Technology）を有効に&lt;/a&gt;&lt;/em&gt;する」の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="5e50a0f8a7f00621adc746bd81fb34fab1eb3889" translate="yes" xml:space="preserve">
          <source>If you start the emulator from Eclipse: DDMS is there, so sometimes the emulator is extremely slow, but sometimes it's faster.</source>
          <target state="translated">Eclipseからエミュレータを起動すると DDMSがあるので、エミュレータが極端に遅い時もありますが、たまに速い時もあります。</target>
        </trans-unit>
        <trans-unit id="43f4648dcf49f5b906f97bc04948904f562d5f5d" translate="yes" xml:space="preserve">
          <source>In the version of Android Studio I used (0.8.9), Android SDK Manager downloads HAXM but doesn't actually run the installer (I assume this will be fixed in later releases). To run the installer I had to go to C:\Program Files (x86)\Android\android-studio\sdk\extras\intel\Hardware_Accelerated_Execution_Manager and manually launch intelhaxm.exe.</source>
          <target state="translated">私が使っていたAndroid Studioのバージョン(0.8.9)では、Android SDK ManagerがHAXMをダウンロードしても、インストーラーを実行してくれませんでした(後のリリースで修正されると思います)。インストーラーを実行するには、C:Grogram Files (x86)に移動しなければならなかった。</target>
        </trans-unit>
        <trans-unit id="bf9d1693d6a7842b5433b57d8c332d0b22848f4e" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;http://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt;をインストールします。</target>
        </trans-unit>
        <trans-unit id="800bc668e38f6f9c690362435fefab4071b466bc" translate="yes" xml:space="preserve">
          <source>Install Android x86 on the emulator, run it.</source>
          <target state="translated">エミュレータにAndroid x86をインストールして実行します。</target>
        </trans-unit>
        <trans-unit id="10fc6463f3d202b4b108e7ae0d85c0fd9ea3de12" translate="yes" xml:space="preserve">
          <source>Install Intel Hardware Accelerated Execution Manager (HAXM)</source>
          <target state="translated">Intel Hardware Accelerated Execution Manager (HAXM)のインストール</target>
        </trans-unit>
        <trans-unit id="ee9f8bdaaee53fc90bbfd312eef3efe5fb9bada2" translate="yes" xml:space="preserve">
          <source>Install the HAXM Driver by running &quot;IntelHaxm.exe&quot;. It will be located in one of the following locations:</source>
          <target state="translated">IntelHaxm.exe」を実行して、HAXM ドライバをインストールします。以下のいずれかの場所にあります。</target>
        </trans-unit>
        <trans-unit id="fd10b98c581664a757ba605f11f0e7f444d64501" translate="yes" xml:space="preserve">
          <source>Intel released &lt;a href=&quot;http://software.intel.com/en-us/articles/intel-atom-x86-image-for-android-ice-cream-sandwich-installation-instructions-recommended/&quot;&gt;recommended installation instructions for the ICS emulator&lt;/a&gt; on May 15, 2012.  This worked for me. The emulator is now fast and the UI is smooth.</source>
          <target state="translated">インテルは、2012年5月15日に&lt;a href=&quot;http://software.intel.com/en-us/articles/intel-atom-x86-image-for-android-ice-cream-sandwich-installation-instructions-recommended/&quot;&gt;ICSエミュレーターの推奨インストール手順を&lt;/a&gt;リリースしました。 エミュレータが高速になり、UIがスムーズになりました。</target>
        </trans-unit>
        <trans-unit id="1a76244279000e4b704d93c035a3ae1cc1ada633" translate="yes" xml:space="preserve">
          <source>It might be worth people upgrading their JVM.</source>
          <target state="translated">JVMをアップグレードする価値があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="ec4fc42da645e1d3b51cd44ae7fa0f471e1fb95d" translate="yes" xml:space="preserve">
          <source>Jar of Beans</source>
          <target state="translated">豆の瓶</target>
        </trans-unit>
        <trans-unit id="2a263503e6d9a53f35b04c349064640538240500" translate="yes" xml:space="preserve">
          <source>Launching the emulator from the snapshot.</source>
          <target state="translated">スナップショットからエミュレータを起動します。</target>
        </trans-unit>
        <trans-unit id="d1a399a3b1c5d4c0aa75b0781fea3b0054332862" translate="yes" xml:space="preserve">
          <source>My understanding is that the &lt;strong&gt;Android Emulator&lt;/strong&gt; should start fairly quickly on such a machine, but for me, it does not. I have followed all the instructions in setting up the IDE, SDKs, JDKs and such and have had some success in starting the emulator quickly, but that is very rare. How can I, if possible, fix this problem?</source>
          <target state="translated">私の理解では、 &lt;strong&gt;Androidエミュレータ&lt;/strong&gt;はそのようなマシンでかなり迅速に起動するはずですが、私にとってはそうではありません。 私はIDE、SDK、JDKなどの設定に関するすべての指示に従い、エミュレータをすばやく起動することにある程度成功していますが、それは非常にまれです。 可能であれば、この問題をどのように修正できますか？</target>
        </trans-unit>
        <trans-unit id="7b710993f07746ef4e872823c1957bf51765203c" translate="yes" xml:space="preserve">
          <source>Now to ensure that everything else is set up so you can enjoy a highly performing emulator:</source>
          <target state="translated">これで全ての設定が完了し、高性能なエミュレータを楽しむことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="3049e2ec6ecd76d894451bf73340db4d84590b31" translate="yes" xml:space="preserve">
          <source>On Mac OS you will need to hold</source>
          <target state="translated">Mac OSでは</target>
        </trans-unit>
        <trans-unit id="3fed8f8b8ec5f2b53d23a7ea6f98b54b60760240" translate="yes" xml:space="preserve">
          <source>Or as for new SDK,</source>
          <target state="translated">または新しいSDKについて。</target>
        </trans-unit>
        <trans-unit id="2f992824b010ac4e8dfbea84d884a8c05cd316cc" translate="yes" xml:space="preserve">
          <source>Or on Unix (Mac or Linux flavors):</source>
          <target state="translated">または、Unix (Mac または Linux のフレーバー)で。</target>
        </trans-unit>
        <trans-unit id="b34da484a345eaec070ba26a5454d8d443c490ce" translate="yes" xml:space="preserve">
          <source>Otherwise, you may see this error:</source>
          <target state="translated">そうでない場合は、このエラーが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="ec9cf7e03aa14902c66d5b637073054dfb938758" translate="yes" xml:space="preserve">
          <source>Personally, I use a real phone to do my tests. It is faster and tests are more realistic. But if you want to test your application on a lot of different Android versions and don't want to buy several phones, you will have to use the emulator from time to time.</source>
          <target state="translated">個人的には、私はテストを行うために本物の携帯電話を使用しています。それはより速く、テストはより現実的です。しかし、多くの異なるAndroidのバージョンでアプリをテストしたい場合や、複数の電話を購入したくない場合は、時々エミュレータを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ea683ad616063b7347bdddeee7203a82e1a3805b" translate="yes" xml:space="preserve">
          <source>Press</source>
          <target state="translated">Press</target>
        </trans-unit>
        <trans-unit id="6657a31d8eda84a072fa7c3741550607aedea2ad" translate="yes" xml:space="preserve">
          <source>Recent emulators are faster than they use to be in 2010. Update your SDK/IDE.</source>
          <target state="translated">最近のエミュレータは2010年のものよりも高速です。SDKIDEをアップデートしてください。</target>
        </trans-unit>
        <trans-unit id="e2e9e5627d6dd5022d9150c1a9dd34d0efb15836" translate="yes" xml:space="preserve">
          <source>Refer to the given below screenshots for more information.</source>
          <target state="translated">詳細については、以下のスクリーンショットを参照してください。</target>
        </trans-unit>
        <trans-unit id="a32bc5a36966137b13eb04d16ff62fb991a71fee" translate="yes" xml:space="preserve">
          <source>Run cmd on your Windows&amp;nbsp;XP system, change the directory to your Android tools directory, type &lt;code&gt;adb connect &amp;lt;virtual_machine_IP&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Windows XPシステムでcmdを実行し、ディレクトリをAndroid toolsディレクトリに変更して、 &lt;code&gt;adb connect &amp;lt;virtual_machine_IP&amp;gt;&lt;/code&gt; と入力します。</target>
        </trans-unit>
        <trans-unit id="fbeafbbf367b4d1d769f2a8bb1811d77d4cef4b2" translate="yes" xml:space="preserve">
          <source>See the following section in the Android emulator documentation for more details: &lt;a href=&quot;http://developer.android.com/guide/developing/devices/emulator.html#accel-vm&quot;&gt;Configuring Virtual Machine Acceleration&lt;/a&gt;</source>
          <target state="translated">詳細については、Androidエミュレーターのドキュメントの次のセクションを参照してください。 &lt;a href=&quot;http://developer.android.com/guide/developing/devices/emulator.html#accel-vm&quot;&gt;仮想マシンアクセラレーションの構成&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="604093c31cb8b731cacc8f7f23958002f8f1856d" translate="yes" xml:space="preserve">
          <source>Show Advanced Setting</source>
          <target state="translated">高度な設定を表示</target>
        </trans-unit>
        <trans-unit id="fd557ed88afe03c917e4d91e49a2dc5df54a2194" translate="yes" xml:space="preserve">
          <source>Start Eclipse, open the ADT plugin, find the device, and enjoy!</source>
          <target state="translated">Eclipseを起動して、ADTプラグインを開き、デバイスを見つけて、お楽しみください。</target>
        </trans-unit>
        <trans-unit id="648e6313fb8963d47e9841e4bc0bd4288eb9754b" translate="yes" xml:space="preserve">
          <source>Steps for Configuring Your Android Development Environment for HAXM</source>
          <target state="translated">HAXM用のAndroid開発環境を設定する手順</target>
        </trans-unit>
        <trans-unit id="e0059792a26167d6cb558c15e2d81b36b5e6c29d" translate="yes" xml:space="preserve">
          <source>Target: Intel Atom x86 System Image - API Level 10</source>
          <target state="translated">対象:Intel Atom x86 システムイメージ-API レベル 10</target>
        </trans-unit>
        <trans-unit id="513d6148d91cffcde62beb6d194d6b61453a6d97" translate="yes" xml:space="preserve">
          <source>The Android emulator is based on &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt;. The interface between QEMU and the HAXM driver on the host system is designed to be vendor-agnostic.</source>
          <target state="translated">Androidエミュレーターは&lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMUに&lt;/a&gt;基づいています。 QEMUとホストシステム上のHAXMドライバー間のインターフェイスは、ベンダーに依存しないように設計されています。</target>
        </trans-unit>
        <trans-unit id="21f07e097f0e3e5517eb370bbe8895a697686e2c" translate="yes" xml:space="preserve">
          <source>The current (May 2011) version of the emulator is slow particularly with &lt;a href=&quot;http://en.wikipedia.org/wiki/Android_version_history#v3.x_Honeycomb&quot;&gt;Android 3.0 (Honeycomb)&lt;/a&gt; primarily because the emulator does not support hardware GL -- this means that the GL code gets translated into software (ARM software, in fact) which then gets emulated in software in &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt;. This is crazy-slow. They're working on this problem and have it partially solved, but not with any sort of release quality.</source>
          <target state="translated">エミュレーターの現在の（2011年5月）バージョンは、特に&lt;a href=&quot;http://en.wikipedia.org/wiki/Android_version_history#v3.x_Honeycomb&quot;&gt;Android 3.0（Honeycomb）では&lt;/a&gt;遅くなります。これは、主にエミュレーターがハードウェアGLをサポートしていないためです。これは、GLコードがソフトウェア（実際にはARMソフトウェア）に変換され、その後、 &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMUの&lt;/a&gt;ソフトウェアでエミュレートされます。 これはすごく遅いです。 彼らはこの問題に取り組んでおり、部分的に解決していますが、リリースの品質についてはそうではありません。</target>
        </trans-unit>
        <trans-unit id="351cf97d704699a26881ff341ade6043d6ba2ad1" translate="yes" xml:space="preserve">
          <source>The emulator included in your (old) version of Eclipse is very slow.</source>
          <target state="translated">あなたの(古い)バージョンのEclipseに含まれているエミュレータは非常に遅いです。</target>
        </trans-unit>
        <trans-unit id="71a8123cbbe316cf27bbf4df482c67b0973de10b" translate="yes" xml:space="preserve">
          <source>The emulator runs slowly because the complete Android environment is running on emulated hardware and the instructions are executed on an emulated ARM processor as well.</source>
          <target state="translated">完全なAndroid環境がエミュレートされたハードウェア上で実行されており、エミュレートされたARMプロセッサ上でも命令が実行されるため、エミュレータの動作が遅くなります。</target>
        </trans-unit>
        <trans-unit id="e50e6e4ba83d115bbe9d6d5e5ba7952af8c98351" translate="yes" xml:space="preserve">
          <source>The emulator seems to slow itself down when idle. This is made apparent by rapidly mousing over the keys on the side and observing the light-up responses. As a workaround, I pass &lt;code&gt;-icount auto&lt;/code&gt; to &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt; when starting the emulator. You can make a batch file called &lt;code&gt;my_avd.bat&lt;/code&gt; to do it for you:</source>
          <target state="translated">エミュレーターはアイドル状態のときに速度が低下するようです。 これは、側面のキーにすばやくマウスを合わせて、ライトアップ応答を観察することで明らかになります。 回避策として、エミュレータを起動するときに &lt;code&gt;-icount auto&lt;/code&gt; を&lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt;に渡します。 &lt;code&gt;my_avd.bat&lt;/code&gt; という名前のバッチファイルを作成して、次のことを実行できます。</target>
        </trans-unit>
        <trans-unit id="37c79e6d312fc63a42d2c061e00c98d969389324" translate="yes" xml:space="preserve">
          <source>The first half of the instructions are detailed enough, so I will assume you were able to install the Intel x86 Atom System Image(s) using the Android SDK manager, as well as Intel HAXM.</source>
          <target state="translated">説明書の前半で十分詳細に説明されているので、Intel HAXMだけでなく、Android SDKマネージャを使ってIntel x86 Atom System Image(s)をインストールできたと仮定して説明します。</target>
        </trans-unit>
        <trans-unit id="5d59a14fb9489af79a08a25aa1009ddd91d74f15" translate="yes" xml:space="preserve">
          <source>The installation of the plugin can be done by launching Eclipse and going to &quot;Help / Install New Software&quot; menu, then just add a new Update Site with the following URL: &lt;a href=&quot;http://plugins.genymotion.com/eclipse&quot;&gt;http://plugins.genymotion.com/eclipse&lt;/a&gt;. Follow the steps indicated by Eclipse.</source>
          <target state="translated">プラグインのインストールは、Eclipseを起動して[ヘルプ/新しいソフトウェアをインストール]メニューに移動し、次のURLを使用して新しい更新サイトを追加するだけで実行できます： &lt;a href=&quot;http://plugins.genymotion.com/eclipse&quot;&gt;http&lt;/a&gt; : //plugins.genymotion.com/eclipse 。 Eclipseによって示されるステップに従います。</target>
        </trans-unit>
        <trans-unit id="746a19d8b2c395274f10684e5bdb5975941da2df" translate="yes" xml:space="preserve">
          <source>The main choking point is rendering since it's not running on any dedicated hardware but it's actually being performed through software rendering. Lowering the screen size will drastically improve emulator performance. Getting more/faster memory isn't going to help.</source>
          <target state="translated">専用のハードウェアで動いているわけではなく、実際にはソフトウェアでレンダリングを行っているので、一番のネックはレンダリングです。画面サイズを小さくすれば、エミュレータのパフォーマンスは劇的に向上します。メモリをもっと速くしても意味がありません。</target>
        </trans-unit>
        <trans-unit id="e15101980346bc1241d8a87c25b62c9df919676b" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;-cpu-delay &amp;lt;delay&amp;gt;&lt;/code&gt; described in &lt;em&gt;&lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html&quot;&gt;Emulator Startup Options&lt;/a&gt;&lt;/em&gt; can help.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html&quot;&gt;エミュレータの起動オプションで&lt;/a&gt;&lt;/em&gt;説明されているオプション &lt;code&gt;-cpu-delay &amp;lt;delay&amp;gt;&lt;/code&gt; が役立ちます。</target>
        </trans-unit>
        <trans-unit id="bae6ac70fcb5a8789e1bb635dbf8249fed323116" translate="yes" xml:space="preserve">
          <source>The startup of the emulator is very slow.  The good thing is that you only need to start the emulator once.  If the emulator is already running and you run your app again, the emulator reinstalls the app relatively quickly.  Of course, if you want to know how fast it will run on a phone, it is best to test it on a real phone.</source>
          <target state="translated">エミュレータの起動が非常に遅いです。良い点は、エミュレータの起動が一度で済むことです。エミュレータがすでに起動していて、再度アプリを実行すると、エミュレータは比較的早くアプリを再インストールしてくれます。もちろん、あなたはそれが電話で実行される速度を知りたい場合は、実際の携帯電話でそれをテストするのが最善です。</target>
        </trans-unit>
        <trans-unit id="1cc623d7933f9ea20fd6d81e748f5832271ef463" translate="yes" xml:space="preserve">
          <source>They've mentioned, at the time, that they're developing an interface that would allow the emulator to pipe certain instructions through the host hardware, so eventually, you'll be able to leverage emulator performances with the raw power of desktop hardware.</source>
          <target state="translated">当時、エミュレータが特定の命令をホストハードウェアにパイプするインターフェースを開発していると言っていましたので、最終的にはデスクトップハードウェアの生のパワーでエミュレータの性能を活用できるようになるでしょう。</target>
        </trans-unit>
        <trans-unit id="435e175b765d8eca795a6493ea57bac9f73483df" translate="yes" xml:space="preserve">
          <source>This emulator is fast and responsive.</source>
          <target state="translated">このエミュレータは高速で反応が良いです。</target>
        </trans-unit>
        <trans-unit id="fef513452d4c4c0524ce23adde43294eb646c095" translate="yes" xml:space="preserve">
          <source>This feature can improve the emulator performance a lot!</source>
          <target state="translated">この機能は、エミュレータのパフォーマンスを大幅に向上させることができます</target>
        </trans-unit>
        <trans-unit id="4e87a5737c9b8f0c86da645e518bffe58d80e944" translate="yes" xml:space="preserve">
          <source>This improved things considerably, but the emulator was still feeling a bit sluggish. The final step was selecting Use Host GPU in Android Virtual Device Manager (AVD).</source>
          <target state="translated">これでかなり改善されましたが、エミュレータの動作はまだ少し重く感じました。最後にAndroid Virtual Device Manager (AVD)でUse Host GPUを選択しました。</target>
        </trans-unit>
        <trans-unit id="14761a4e9e3a697b137b7adee87b670a477f8f2a" translate="yes" xml:space="preserve">
          <source>This made animations buttery smooth and sped up &lt;code&gt;adb install&lt;/code&gt; tenfold.</source>
          <target state="translated">これによりアニメーションがスムーズになり、 &lt;code&gt;adb install&lt;/code&gt; 10倍高速になりました。</target>
        </trans-unit>
        <trans-unit id="9962374ff220258d4d22b3fb3f7c92b232584589" translate="yes" xml:space="preserve">
          <source>To add further information to this.</source>
          <target state="translated">これにさらに情報を追加するために</target>
        </trans-unit>
        <trans-unit id="a338f45b75026b5d7ac15904ade45edb461d16ca" translate="yes" xml:space="preserve">
          <source>To make your emulator faster, you can host a GPU and use a lighter Android version (&lt;a href=&quot;https://en.wikipedia.org/wiki/Android_version_history#Android_2.3.E2.80.932.3.2_Gingerbread_.28API_level_9.29&quot;&gt;Android 2.3&lt;/a&gt; (Gingerbread)).
Developing on a Mac would be better. Why use an emulator, BTW? Using a real phone makes more sense.</source>
          <target state="translated">エミュレーターをより高速にするために、GPUをホストし、より軽量のAndroidバージョン（ &lt;a href=&quot;https://en.wikipedia.org/wiki/Android_version_history#Android_2.3.E2.80.932.3.2_Gingerbread_.28API_level_9.29&quot;&gt;Android 2.3&lt;/a&gt; （Gingerbread））を使用できます。 Macで開発した方がいいでしょう。 BTWエミュレータを使用する理由 実際の電話を使用する方が理にかなっています。</target>
        </trans-unit>
        <trans-unit id="f2bb6fcba9591914084e694a8bf30439ed1938f1" translate="yes" xml:space="preserve">
          <source>To reduce your emulator start-up time you need to check the &quot;Disable Boot Animation&quot; before starting the emulator. Refer to &lt;a href=&quot;http://developer.android.com/tools/help/emulator.html&quot;&gt;the Android documentation&lt;/a&gt;.</source>
          <target state="translated">エミュレータの起動時間を短縮するには、エミュレータを起動する前に「Disable Boot Animation」を確認する必要があります。 &lt;a href=&quot;http://developer.android.com/tools/help/emulator.html&quot;&gt;Androidのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3153c2a6beb22ed3b6f18064d63caef109cf3803" translate="yes" xml:space="preserve">
          <source>Try &lt;a href=&quot;http://www.android-x86.org/&quot;&gt;Android x86&lt;/a&gt;. It's much faster than the Google Android emulator. Follow these steps:</source>
          <target state="translated">&lt;a href=&quot;http://www.android-x86.org/&quot;&gt;Android x86をお&lt;/a&gt;試しください。 Google Androidエミュレータよりもはるかに高速です。 次の手順を実行します：</target>
        </trans-unit>
        <trans-unit id="c7aa572875cc7e5d00c60bf1439e9761bb1196a1" translate="yes" xml:space="preserve">
          <source>Try &lt;a href=&quot;https://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt; for Android Studio. Blazing fast! Just needs one time installation. No more AVD pain.</source>
          <target state="translated">Android Studioの&lt;a href=&quot;https://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt;をお試しください。 速く燃える！ 一度だけのインストールが必要です。 AVDの痛みはもうありません。</target>
        </trans-unit>
        <trans-unit id="f7fe4b4c7866d7896c4e4b56e8e31c7654d78d33" translate="yes" xml:space="preserve">
          <source>Try to disable your antivirus. Maybe it will make emulator a little bit faster.</source>
          <target state="translated">アンチウイルスを無効にしてみてください。そうすることでエミュレータの動作が少しは速くなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="342a134be10b8efafc25ef77c64570ae94c2315e" translate="yes" xml:space="preserve">
          <source>Update Eclipse:
Make sure your Eclipse installation and the ADT plug-in are fully up-to-date.</source>
          <target state="translated">Eclipseをアップデートしてください。Eclipse のインストールと ADT プラグインが完全に最新であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="6b1c9a27773c3c0976111bbcfac2432c8ceb0c0c" translate="yes" xml:space="preserve">
          <source>Update your Android Tools:
After each Eclipse plug-in update, it is important to update your Android SDK Tools. To do this, launch the Android SDK Manager and update all the Android SDK components. To take advantage of HAXM, you must be on at least release version 17.</source>
          <target state="translated">Androidツールをアップデートしましょう。Eclipseのプラグインをアップデートするたびに、Android SDK Toolsをアップデートすることが重要です。これを行うには、Android SDK Managerを起動し、すべてのAndroid SDKコンポーネントを更新します。HAXMを利用するには、少なくともリリースバージョン17である必要があります。</target>
        </trans-unit>
        <trans-unit id="adec47554cf8b33aeb8ab7f303b6fcc4da8478de" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://bluestacks.com/&quot;&gt;Bluestacks Player&lt;/a&gt;. It runs Android 2.3.4 and is very fluid and fast. Sometimes it is even faster than a normal device. The only downside is, that you can just test apps on the API Level 10 and just on one screen size, but it's perfect just for testing if it's working or not. Just connect the Player with the &lt;code&gt;adb&lt;/code&gt; by running</source>
          <target state="translated">&lt;a href=&quot;http://bluestacks.com/&quot;&gt;Bluestacks Playerを&lt;/a&gt;使用してください。 Android 2.3.4を実行し、非常に流動的で高速です。 時にはそれは通常のデバイスよりもさらに高速です。 唯一の欠点は、APIレベル10と1つの画面サイズでアプリをテストできることですが、機能しているかどうかをテストするのに最適です。 実行してプレーヤーを &lt;code&gt;adb&lt;/code&gt; に接続するだけです</target>
        </trans-unit>
        <trans-unit id="21670662f8fbd2bbf98918a005840c8d86a25791" translate="yes" xml:space="preserve">
          <source>Use the Intel x86 Emulator Accelerator</source>
          <target state="translated">インテル x86 エミュレータ・アクセラレーターを使用する</target>
        </trans-unit>
        <trans-unit id="cb837c2918c14957ebf249f5eb0de4adb9ee6f1c" translate="yes" xml:space="preserve">
          <source>VirtualBox</source>
          <target state="translated">VirtualBox</target>
        </trans-unit>
        <trans-unit id="abbeb7b45a3a2ae8c6a6064011c0808bff630951" translate="yes" xml:space="preserve">
          <source>Visual Studio Emulator for Android</source>
          <target state="translated">Android用Visual Studioエミュレータ</target>
        </trans-unit>
        <trans-unit id="6351a1e3770f405e3b8ff78687c3bee8ff1a3bb7" translate="yes" xml:space="preserve">
          <source>Well, since somebody suggested Android x86 as an alternative testing emulator, I'll also present my favorite. This might not be an alternative for everyone, but for me it's perfect!</source>
          <target state="translated">さて、誰かがAndroid x86をテスト用エミュレータとして提案してくれたので、私のお気に入りを紹介します。これはすべての人のための代替ではないかもしれませんが、私にとっては完璧です!</target>
        </trans-unit>
        <trans-unit id="6122c6801d809e69033d105c486f65a887068165" translate="yes" xml:space="preserve">
          <source>When the Android emulator is starting, open up the Task Manager, look under the Process tab, look for &quot;emulator-arm.exe&quot; or &quot;emulator-arm.exe *32&quot;... Right click on it, select Processor Affinity and assign as much processor as you like to the emulator.</source>
          <target state="translated">Androidエミュレータが起動したら、タスクマネージャを開き、プロセスタブを開き、&quot;emulator-arm.exe &quot;か &quot;emulator-arm.exe *32 &quot;を探してください。その上で右クリックし、Processor Affinityを選択し、エミュレータに好きなだけプロセッサを割り当てます。</target>
        </trans-unit>
        <trans-unit id="df1e140179979dff9293ee2488236e283e6ab91a" translate="yes" xml:space="preserve">
          <source>Why is the Android emulator so slow? How can we speed up the Android emulator</source>
          <target state="translated">Androidエミュレータが遅いのはなぜですか?Androidエミュレータを高速化するには</target>
        </trans-unit>
        <trans-unit id="c28010e4d4115065a4a023f60e72e38024ce9ed6" translate="yes" xml:space="preserve">
          <source>Windows Android Emulator</source>
          <target state="translated">WindowsのAndroidエミュレータ</target>
        </trans-unit>
        <trans-unit id="dc6e16b446e26a3e5ba1c0bab519499b642abd5d" translate="yes" xml:space="preserve">
          <source>With these settings the software keyboard no longer appears, nor do the on-screen back, menu, and recent keys. This appears to be a limitation of the current ICS Intel x86 system image. You will need to use &lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html#KeyMapping&quot;&gt;the keyboard shortcuts&lt;/a&gt;.</source>
          <target state="translated">これらの設定では、ソフトウェアキーボードは表示されなくなり、画面上の戻る、メニュー、最近のキーも表示されなくなります。 これは、現在のICS Intel x86システムイメージの制限のようです。 &lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html#KeyMapping&quot;&gt;キーボードショートカット&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e0a7854f9c12d6ac85514528a0581f75a59d9dab" translate="yes" xml:space="preserve">
          <source>You can create emulator.bat with following command to start the emulator. It will start faster.</source>
          <target state="translated">以下のコマンドでemulator.batを作成するとエミュレータが起動します。起動が早くなります。</target>
        </trans-unit>
        <trans-unit id="1640cc625a6407b39a75741d5be89573245f87a4" translate="yes" xml:space="preserve">
          <source>You can now enable the Quick Boot option for Android Emulator. That will save emulator state, and it will start the emulator quickly on the next boot.</source>
          <target state="translated">これでAndroidエミュレータのクイックブートオプションが有効になりました。これでエミュレータの状態が保存され、次の起動時にエミュレータが素早く起動するようになります。</target>
        </trans-unit>
        <trans-unit id="ea63e15bbd4edcad5049ebaa941733197d570597" translate="yes" xml:space="preserve">
          <source>You can review the emulator issues on the &lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&amp;amp;feature=player_embedded#!&quot;&gt;Google I/O 2011: Android Development Tools&lt;/a&gt; talk, starting a 0:40:20.</source>
          <target state="translated">エミュレータの問題は、 &lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&amp;amp;feature=player_embedded#!&quot;&gt;Google I / O 2011で&lt;/a&gt;確認できます：Android開発ツールのトーク、 0： 40 ： 20から。</target>
        </trans-unit>
        <trans-unit id="b1c3d720c90b682411fdbd1586a388328764c194" translate="yes" xml:space="preserve">
          <source>YouWave</source>
          <target state="translated">YouWave</target>
        </trans-unit>
        <trans-unit id="2aeede80be6f6dfc0aa4d1cbd6487e24e27a81be" translate="yes" xml:space="preserve">
          <source>control</source>
          <target state="translated">control</target>
        </trans-unit>
        <trans-unit id="47fdd9283ded80c62bb5e40ce65b0e49a48675b3" translate="yes" xml:space="preserve">
          <source>fn</source>
          <target state="translated">fn</target>
        </trans-unit>
        <trans-unit id="da71a42485d0ce5d505be9bf3aeea8c0157f3672" translate="yes" xml:space="preserve">
          <source>for the</source>
          <target state="translated">のために</target>
        </trans-unit>
        <trans-unit id="3173cc1062d32bf1a8526e1fc8738c9f940f0fb2" translate="yes" xml:space="preserve">
          <source>keys to work. Page up/down/left/right can be performed using control + arrow keys.</source>
          <target state="translated">キーを押してください。ページの更新は、control+矢印キーで行うことができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
