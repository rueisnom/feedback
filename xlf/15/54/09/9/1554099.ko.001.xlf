<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/1554099">
    <body>
      <group id="1554099">
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="5b427777b61b3a1ada0ce78e091f56463d1bee6d" translate="yes" xml:space="preserve">
          <source>, type &lt;code&gt;netcfg&lt;/code&gt;, remember the IP address, press</source>
          <target state="translated">&lt;code&gt;netcfg&lt;/code&gt; 를 입력하고 IP 주소를 기억 한 다음</target>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="f66ca0fed6569ba5e1581434fd8002fbb8a13e62" translate="yes" xml:space="preserve">
          <source>. Then enable &lt;code&gt;Quick Boot&lt;/code&gt; like below screenshot.</source>
          <target state="translated">. 그런 다음 아래 스크린 샷과 같이 &lt;code&gt;Quick Boot&lt;/code&gt; 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="f83d7b56575dbf09c2b7674c9efeeb0c4a9285d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://developer.android.com/sdk/eclipse-adt.html&quot;&gt;Android Development Tools (ADT) 9.0.0&lt;/a&gt; (or later) has a feature that allows you to save state of the AVD (emulator), and you can start your emulator instantly. You have to enable this feature while creating a new AVD or you can just create it later by editing the AVD.</source>
          <target state="translated">&lt;a href=&quot;http://developer.android.com/sdk/eclipse-adt.html&quot;&gt;ADT (Android Development Tools) 9.0.0&lt;/a&gt; 이상에는 AVD (에뮬레이터) 상태를 저장하고 에뮬레이터를 즉시 시작할 수있는 기능이 있습니다. 새 AVD를 만드는 동안이 기능을 활성화해야하거나 나중에 AVD를 편집하여 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b342d18a8334f5c091e987d13fa877f76b64b888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-icount [N|auto]&lt;/code&gt; -- enable virtual instruction counter with 2^N clock ticks per instruction</source>
          <target state="translated">&lt;code&gt;-icount [N|auto]&lt;/code&gt; -명령 당 2 ^ N 클럭 틱으로 가상 명령 카운터를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="54c25bbf1383e1c95d1ce3e4ff847b605a509b4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-no-boot-anim&lt;/code&gt; -- disable animation for faster boot</source>
          <target state="translated">&lt;code&gt;-no-boot-anim&lt;/code&gt; - 더 빠른 부팅을 위해 애니메이션 비활성화</target>
        </trans-unit>
        <trans-unit id="245d1b531be79dd771d7402beb05601a66068a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-qemu args...&lt;/code&gt; -- pass arguments to qemu</source>
          <target state="translated">&lt;code&gt;-qemu args...&lt;/code&gt; 인수를 qemu에 전달</target>
        </trans-unit>
        <trans-unit id="9d71a43f4b66e562efb938c2a478e90469bfc9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@my_avd&lt;/code&gt; -- launch a virtual device named 'my_avd'</source>
          <target state="translated">&lt;code&gt;@my_avd&lt;/code&gt; - 'my_avd'라는 가상 장치를 시작합니다</target>
        </trans-unit>
        <trans-unit id="3df0a7f0d6e7a722d148e3ab7c8b4899db161fc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Genymotion - Preferred&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Genymotion-선호&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ebd827c5e70cf7b5addfa49a346b4218feff08c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always double-check the settings after saving!&lt;/strong&gt;  The emulator is very picky about what it allows you to set, and it will revert configurations without telling you.</source>
          <target state="translated">&lt;strong&gt;저장 후 항상 설정을 다시 확인하십시오!&lt;/strong&gt; 에뮬레이터는 사용자가 설정할 수있는 것에 매우 까다 롭고 사용자에게 알리지 않고 구성을 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="fb6d2cbca9db8d84583598a334de2106f639c1cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Assign all available processors to the emulator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사용 가능한 모든 프로세서를 에뮬레이터에 할당&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2471740fa087de7f03d1d17e0b6844813bd5a9cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HAXM&lt;/strong&gt; stands for - &lt;strong&gt;&quot;Intel Hardware Accelerated Execution Manager&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HAXM&lt;/strong&gt; 은 &lt;strong&gt;&quot;Intel Hardware Accelerated Execution Manager&quot;의&lt;/strong&gt; 약자입니다.</target>
        </trans-unit>
        <trans-unit id="014555d5bf48a4ecbc835b2d4fa8645a9f125c6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT NOTE&lt;/strong&gt;: Please &lt;strong&gt;first&lt;/strong&gt; refer to &lt;a href=&quot;http://web.archive.org/web/20160102075218/http://ark.intel.com/Products/VirtualizationTechnology&quot;&gt;the Intel list about VT&lt;/a&gt; to make sure your CPU supports Intel VT.</source>
          <target state="translated">&lt;strong&gt;중요 참고&lt;/strong&gt; : CPU가 Intel VT를 지원하는지 확인하려면 먼저 &lt;a href=&quot;http://web.archive.org/web/20160102075218/http://ark.intel.com/Products/VirtualizationTechnology&quot;&gt;VT&lt;/a&gt; 에 대한 Intel 목록을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f45d87f406a965d1d12dad3466a365ee86d42698" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Set the device memory to 1024&amp;nbsp; MB or more&lt;/strong&gt;, but not more than the Intel HAXM setting. I use 1024&amp;nbsp; MB per device and 2048 for HAXM.</source>
          <target state="translated">&lt;strong&gt;장치 메모리를 1024MB&lt;/strong&gt; 이상으로 설정하고 Intel HAXM 설정을 초과하지 마십시오. 장치 당 1024MB, HAXM에는 2048을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d0683dbf080f1ba2f1f74a4af9d94ce334d84b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE:&lt;/strong&gt; The latest version of Android studio (2.x) made major improvements to the bundled emulator.  It's responsive and has a whole bunch of features.</source>
          <target state="translated">&lt;strong&gt;업데이트 :&lt;/strong&gt; 최신 버전의 Android 스튜디오 (2.x)는 번들 에뮬레이터를 크게 개선했습니다. 반응 형이며 다양한 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="200627b0eb37efd54845f9a6bd7c0133da5e8d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Update&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="641a99032b1654281c4179479c83ca2b230f920c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use GPU emulation.&lt;/strong&gt;  You cannot use the Snapshot option when using GPU emulation as of this writing.  Ensure that GPU emulation is set to &quot;yes&quot;.</source>
          <target state="translated">&lt;strong&gt;GPU 에뮬레이션을 사용하십시오.&lt;/strong&gt; 이 글을 쓰는 시점에서 GPU 에뮬레이션을 사용할 때는 스냅 샷 옵션을 사용할 수 없습니다. GPU 에뮬레이션이 &quot;yes&quot;로 설정되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="54a843f274d429f1ce47a152bb0a3c370fbcb440" translate="yes" xml:space="preserve">
          <source>A new option is the &lt;a href=&quot;http://blogs.msdn.com/b/visualstudioalm/archive/2014/11/12/introducing-visual-studio-s-emulator-for-android.aspx&quot;&gt;Visual Studio Emulator for Android&lt;/a&gt;--it's fast, &lt;a href=&quot;http://en.wikipedia.org/wiki/Hyper-V&quot;&gt;Hyper-V&lt;/a&gt;, x86, and &lt;a href=&quot;http://aka.ms/vsemu&quot;&gt;free to download even without VS&lt;/a&gt;.</source>
          <target state="translated">새로운 옵션은 &lt;a href=&quot;http://blogs.msdn.com/b/visualstudioalm/archive/2014/11/12/introducing-visual-studio-s-emulator-for-android.aspx&quot;&gt;Android 용 Visual Studio Emulator입니다.&lt;/a&gt; 빠르고, &lt;a href=&quot;http://en.wikipedia.org/wiki/Hyper-V&quot;&gt;Hyper-V&lt;/a&gt; , x86이며 &lt;a href=&quot;http://aka.ms/vsemu&quot;&gt;VS 없이도 무료로 다운로드 할 수&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="a86c7088144b8bfd5ea5b781432b107bf2edfb98" translate="yes" xml:space="preserve">
          <source>After compiling, it installs instantly. It is very impressive, considering I have rather an average computer hardware (dual core with 4&amp;nbsp; GB of RAM).</source>
          <target state="translated">컴파일 후 즉시 설치됩니다. 나는 평균적인 컴퓨터 하드웨어 (4 GB RAM의 듀얼 코어)를 가지고 있다는 것을 고려할 때 매우 인상적입니다.</target>
        </trans-unit>
        <trans-unit id="b9efc989d1c2e22b3053905be079bfa53516d4eb" translate="yes" xml:space="preserve">
          <source>After developing for a while, my emulator became brutally slow. I chose &lt;strong&gt;wipe user data&lt;/strong&gt;, and it was much much better. I am guessing that it takes time to load up each &lt;a href=&quot;http://en.wikipedia.org/wiki/APK_%28file_format%29&quot;&gt;APK&lt;/a&gt; file you've deployed.</source>
          <target state="translated">잠시 동안 개발 한 후 에뮬레이터가 잔인하게 느려졌습니다. 나는 &lt;strong&gt;사용자 데이터 지우기를&lt;/strong&gt; 선택했으며 훨씬 나아졌습니다. 배포 한 각 &lt;a href=&quot;http://en.wikipedia.org/wiki/APK_%28file_format%29&quot;&gt;APK&lt;/a&gt; 파일을로드하는 데 시간이 걸리는 것 같습니다.</target>
        </trans-unit>
        <trans-unit id="0781cb034bf29924bdf40e8035c3764bbd98224e" translate="yes" xml:space="preserve">
          <source>After these changes, Android Emulator was launching in 5-10 seconds and running without any noticeable lag.
Be aware that these features are hardware dependent (CPU/GPU) and may not work on some systems.</source>
          <target state="translated">이러한 변경 후 Android Emulator가 5-10 초 안에 시작되어 눈에 띄는 지연없이 실행되었습니다. 이러한 기능은 하드웨어 종속적 (CPU / GPU)이며 일부 시스템에서는 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0effc9719dc125f777a2560dbbecff91f07b88c1" translate="yes" xml:space="preserve">
          <source>After you have installed the drivers and downloaded an Android X86 system image (as described in the documentation) you should be able to create a new AVD using the x86 image:</source>
          <target state="translated">드라이버를 설치하고 문서에 설명 된대로 Android X86 시스템 이미지를 다운로드 한 후 x86 이미지를 사용하여 새 AVD를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59e04a212fa14359ad02d1c085748250318eb2ad" translate="yes" xml:space="preserve">
          <source>Also I have increased the &lt;code&gt;Device RAM Size&lt;/code&gt; to &lt;code&gt;1024&lt;/code&gt; which results in a very fast emulator.</source>
          <target state="translated">또한 &lt;code&gt;Device RAM Size&lt;/code&gt; 를 &lt;code&gt;1024&lt;/code&gt; 로 늘려서 에뮬레이터가 매우 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="e30eff925100b7c3e119ed678e39009e962455b0" translate="yes" xml:space="preserve">
          <source>Alt</source>
          <target state="translated">Alt</target>
        </trans-unit>
        <trans-unit id="4569354a7d35cf871ff20be6401348397a115647" translate="yes" xml:space="preserve">
          <source>And Instant run will look like this</source>
          <target state="translated">그리고 인스턴트 런은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="76b8594931b91429654ccb8da12ce46a95cf045f" translate="yes" xml:space="preserve">
          <source>And for speeding up your emulator you can refer to &lt;em&gt;&lt;a href=&quot;http://jolicode.com/blog/speed-up-your-android-emulator&quot;&gt;Speed up your Android Emulator!&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">에뮬레이터 &lt;em&gt;&lt;a href=&quot;http://jolicode.com/blog/speed-up-your-android-emulator&quot;&gt;속도를 높이려면 Android 에뮬레이터 속도 향상을&lt;/a&gt;&lt;/em&gt; 참조하십시오 &lt;em&gt;!&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="23254b249bd8dfaa4d4fbbc9d8a076aafaf07e3f" translate="yes" xml:space="preserve">
          <source>And now the emulator (although takes a while to start) seems to be running faster than previously.</source>
          <target state="translated">그리고 이제 에뮬레이터 (시작하는 데 시간이 걸리지 만)가 이전보다 빠르게 실행되는 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="d4b5338ebfbb43483effff954af9704a3139798e" translate="yes" xml:space="preserve">
          <source>And start it:</source>
          <target state="translated">그리고 그것을 시작하십시오 :</target>
        </trans-unit>
        <trans-unit id="37a3808106f12fa1adab3ba07adff4a7fbf9ef19" translate="yes" xml:space="preserve">
          <source>Android SDK rev. 17 supports Virtual Machine Acceleration using AMD and Intel virtualization technologies.</source>
          <target state="translated">안드로이드 SDK rev. 17은 AMD 및 Intel 가상화 기술을 사용한 Virtual Machine Acceleration을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5e3d54d9b1180255e9e6718d243603888c570969" translate="yes" xml:space="preserve">
          <source>Android emulator is dead slow. It takes 800MB memory while running.
If you are on Windows, You can use Microsoft Android Emulator. It is superb, provides you functionalities more than Android Studio Emulator. And most important it is fast ( consumes 13MB only).
It comes with Visual Studio 2015 Technical Preview. I am using it and happy with it. I downloaded and installed entire VS pack, I need to look how we can install VS Emulator only.</source>
          <target state="translated">안드로이드 에뮬레이터가 느리게 죽었습니다. 실행하는 동안 800MB의 메모리가 필요합니다. Windows를 사용하는 경우 Microsoft Android 에뮬레이터를 사용할 수 있습니다. Android Studio Emulator 이상의 기능을 제공합니다. 가장 중요한 것은 빠릅니다 (13MB 만 사용). Visual Studio 2015 Technical Preview와 함께 제공됩니다. 나는 그것을 사용하고 행복합니다. 전체 VS 팩을 다운로드하여 설치했습니다. VS Emulator 만 설치하는 방법을 찾아야합니다.</target>
        </trans-unit>
        <trans-unit id="396f0eb47225b0f34d48e5a7ea6c9c50c72d4abf" translate="yes" xml:space="preserve">
          <source>Android emulator release 9 has a new &quot;snapshot&quot; feature. You can &lt;a href=&quot;http://good-android-dev.blogspot.com/2011/02/slow-android-emulator-speed-up-it.html&quot;&gt;save the state of the emulator&lt;/a&gt; (make an image of the emulator) and avoid booting when you start the emulator.</source>
          <target state="translated">Android 에뮬레이터 릴리스 9에는 새로운 &quot;스냅 샷&quot;기능이 있습니다. &lt;a href=&quot;http://good-android-dev.blogspot.com/2011/02/slow-android-emulator-speed-up-it.html&quot;&gt;에뮬레이터의 상태를 저장하고&lt;/a&gt; ( 에뮬레이터 이미지 만들기) 에뮬레이터를 시작할 때 부팅을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab5a000e88b5d9d0fa2575f5c6263eb93452405d" translate="yes" xml:space="preserve">
          <source>Andy</source>
          <target state="translated">Andy</target>
        </trans-unit>
        <trans-unit id="adf69dfabba37f2c1bdb58e97df0eb9462da16aa" translate="yes" xml:space="preserve">
          <source>As of Revision 17 of Android SDK Tools, the emulator can use graphic acceleration and CPU-provided extensions for better efficiency. The prerequisites and full configuration and user notes are at:</source>
          <target state="translated">Android SDK 도구 개정 17부터 에뮬레이터는 그래픽 가속 및 CPU 제공 확장을 사용하여 효율성을 높일 수 있습니다. 전제 조건 및 전체 구성 및 사용자 참고 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b73369d2929a79e8036c37968223888678d73a20" translate="yes" xml:space="preserve">
          <source>BlueStacks</source>
          <target state="translated">BlueStacks</target>
        </trans-unit>
        <trans-unit id="609a5349f61c6e69eb3788d9a96f19e490f4a947" translate="yes" xml:space="preserve">
          <source>CPU/ABI: Intel Atom (x86)</source>
          <target state="translated">CPU / ABI : 인텔 아톰 (x86)</target>
        </trans-unit>
        <trans-unit id="e292f0fbdb5ba04955b1fc9a460b635e3fcaf35b" translate="yes" xml:space="preserve">
          <source>Check out the video &lt;em&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&quot;&gt;Google I/O 2011: Android Development Tools&lt;/a&gt;&lt;/em&gt; to see it in action -- jump to about 44 minutes.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&quot;&gt;Google I / O 2011 : Android 개발 도구&lt;/a&gt;&lt;/em&gt; 비디오를 확인하여 작동 상태를 확인하십시오. 약 44 분으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="498ae87b4c93909746e74236b81faacb78a48f97" translate="yes" xml:space="preserve">
          <source>Click on Emulator edit button, then click</source>
          <target state="translated">에뮬레이터 편집 버튼을 클릭 한 다음</target>
        </trans-unit>
        <trans-unit id="6b5bd0e563b75c4590439bca6aad7853bed300c7" translate="yes" xml:space="preserve">
          <source>Configuring VM Acceleration on Linux</source>
          <target state="translated">Linux에서 VM 가속 구성</target>
        </trans-unit>
        <trans-unit id="be9e8df5464fdd78ff2b6b08c454deded50a0661" translate="yes" xml:space="preserve">
          <source>Configuring VM Acceleration on Mac</source>
          <target state="translated">Mac에서 VM 가속 구성</target>
        </trans-unit>
        <trans-unit id="bb24d100c2f6b1ba4894e998f7b6610815e21d3d" translate="yes" xml:space="preserve">
          <source>Configuring VM Acceleration on Windows</source>
          <target state="translated">Windows에서 VM 가속 구성</target>
        </trans-unit>
        <trans-unit id="a3b65c425fd115604a5d32c7382cae1aa63c87c9" translate="yes" xml:space="preserve">
          <source>Create a &lt;em&gt;new&lt;/em&gt; x86 AVD: Follow the image below:</source>
          <target state="translated">&lt;em&gt;새로운&lt;/em&gt; x86 AVD 만들기 : 아래 이미지를 따르십시오.</target>
        </trans-unit>
        <trans-unit id="e3f11507691272e6293234b3386baf4e19b02378" translate="yes" xml:space="preserve">
          <source>Create a new AVD using Intel Atom x86</source>
          <target state="translated">Intel Atom x86을 사용하여 새로운 AVD 생성</target>
        </trans-unit>
        <trans-unit id="11f7c57868ebab0e47fe9dc57822c6e7863844ba" translate="yes" xml:space="preserve">
          <source>Create a virtual machine as Linux 2.6/Other Linux, 512&amp;nbsp;MB RAM, HD 2&amp;nbsp;GB. Network: PCnet-Fast III, attached to &lt;a href=&quot;http://en.wikipedia.org/wiki/Network_address_translation&quot;&gt;NAT&lt;/a&gt;. You can also use a bridged adapter, but you need a &lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&quot;&gt;DHCP&lt;/a&gt; server in your environment.</source>
          <target state="translated">Linux 2.6 / 기타 Linux, 512MB RAM, HD 2GB로 가상 머신을 작성하십시오. 네트워크 : PCnet-Fast III, &lt;a href=&quot;http://en.wikipedia.org/wiki/Network_address_translation&quot;&gt;NAT에&lt;/a&gt; 연결됨 브리지 된 어댑터를 사용할 수도 있지만 환경에 &lt;a href=&quot;http://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol&quot;&gt;DHCP&lt;/a&gt; 서버가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4ed81d5fc2e70282995df9b157ec0ddb3e5d0214" translate="yes" xml:space="preserve">
          <source>Creating a new AVD with the save snapshot feature.</source>
          <target state="translated">스냅 샷 저장 기능을 사용하여 새 AVD를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e2fc9d5ba332ca1735999dc441e1ab6f6fd58066" translate="yes" xml:space="preserve">
          <source>Currently, it supports only Intel&amp;reg; VT (Intel Virtualization Technology).</source>
          <target state="translated">현재는 인텔 &amp;reg; VT (Intel Virtualization Technology) 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f9cbb0b542b802a805d4ef565991e9780c978858" translate="yes" xml:space="preserve">
          <source>Don't forget to install the appropriate driver for your operating system:</source>
          <target state="translated">운영 체제에 적합한 드라이버를 설치하는 것을 잊지 마십시오 :</target>
        </trans-unit>
        <trans-unit id="91b556cbc805a1e0d1260463f356e895986e4888" translate="yes" xml:space="preserve">
          <source>Download the &lt;a href=&quot;http://www.android-x86.org/download&quot;&gt;ISO file&lt;/a&gt; that you need.</source>
          <target state="translated">필요한 &lt;a href=&quot;http://www.android-x86.org/download&quot;&gt;ISO 파일&lt;/a&gt; 을 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="aa7dc8f71d26d47ed826c2de19028ba0d6530ee9" translate="yes" xml:space="preserve">
          <source>Download the &lt;strong&gt;x86 Atom System Images&lt;/strong&gt; and the &lt;strong&gt;Intel Hardware Accelerated Execution Manager Driver&lt;/strong&gt;. Follow the image below:</source>
          <target state="translated">&lt;strong&gt;x86 Atom 시스템 이미지&lt;/strong&gt; 및 &lt;strong&gt;Intel Hardware Accelerated Execution Manager 드라이버를&lt;/strong&gt; 다운로드하십시오. 아래 이미지를 따르십시오 :</target>
        </trans-unit>
        <trans-unit id="d4432b061c4c9288d08a2111951e0577bc4bb3b5" translate="yes" xml:space="preserve">
          <source>EDIT:
Try &lt;a href=&quot;https://www.visualstudio.com/vs/msft-android-emulator/&quot;&gt;https://www.visualstudio.com/vs/msft-android-emulator/&lt;/a&gt;</source>
          <target state="translated">편집 : 시도 &lt;a href=&quot;https://www.visualstudio.com/vs/msft-android-emulator/&quot;&gt;https://www.visualstudio.com/vs/msft-android-emulator/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0aa20b2ea7e686967eaf0d5d24501fd74b86cd2f" translate="yes" xml:space="preserve">
          <source>Emulators are slow. There's really nothing you can do about it, but there are alternatives to the emulator.</source>
          <target state="translated">에뮬레이터가 느립니다. 실제로 할 수있는 일은 없지만 에뮬레이터에 대한 대안이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6b3249bf7d5020378533e88f1e0d18d4d23c225" translate="yes" xml:space="preserve">
          <source>Even if it starts and loads the home screen, it is very sluggish. I have tried the &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse IDE&lt;/a&gt; in &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;version 3.5&lt;/a&gt; (Galileo) and &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;3.4&lt;/a&gt; (Ganymede).</source>
          <target state="translated">홈 화면이 시작되고로드 되더라도 매우 느립니다. &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;버전 3.5&lt;/a&gt; (Galileo) 및 &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29#Releases&quot;&gt;3.4&lt;/a&gt; (Ganymede)의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse IDE&lt;/a&gt; 를 사용해 보았습니다.</target>
        </trans-unit>
        <trans-unit id="88bfad9cfffeafd299a44d4daf979d57419a2621" translate="yes" xml:space="preserve">
          <source>F1</source>
          <target state="translated">F1</target>
        </trans-unit>
        <trans-unit id="e262aa4c560f1ae35fd6e5cf5ac45462ea46ecc8" translate="yes" xml:space="preserve">
          <source>F12</source>
          <target state="translated">F12</target>
        </trans-unit>
        <trans-unit id="d7b4d9b4412bb9ed347dbdc20fb00d440fd9ad87" translate="yes" xml:space="preserve">
          <source>F7</source>
          <target state="translated">F7</target>
        </trans-unit>
        <trans-unit id="1d7c564189fa8822a9fbe38ab442564373b6d52c" translate="yes" xml:space="preserve">
          <source>Failed to open the hax module</source>
          <target state="translated">hax 모듈을 열지 못했습니다</target>
        </trans-unit>
        <trans-unit id="ef7c42a143eb712a4c65899ed502c293b35ed22e" translate="yes" xml:space="preserve">
          <source>First, install the Intel x86 Emulator Accelerator (HAXM). This can be downloaded directly from Intel or using Android SDK Manager.  In the SDK Manager, it's located under Extras.</source>
          <target state="translated">먼저 Intel x86 Emulator Accelerator (HAXM)를 설치하십시오. 이것은 Intel에서 직접 다운로드하거나 Android SDK Manager를 사용하여 다운로드 할 수 있습니다. SDK 관리자에서 Extras 아래에 있습니다.</target>
        </trans-unit>
        <trans-unit id="c07ed1ad545962a2b51a6d8645695a2c4fffe680" translate="yes" xml:space="preserve">
          <source>For enabling &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphics_processing_unit&quot;&gt;GPU&lt;/a&gt; aceleration, run the emulator from the command line or add &quot;-gpu on&quot; to the additional emulator command line options in the AVD configuration.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Graphics_processing_unit&quot;&gt;GPU&lt;/a&gt; 가속을 활성화하려면 명령 줄에서 에뮬레이터를 실행하거나 AVD 구성의 추가 에뮬레이터 명령 줄 옵션에 &quot;-gpu on&quot;을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5de14154ebde59825d5672789153e43a3175c109" translate="yes" xml:space="preserve">
          <source>For those still interested:
Try using &lt;a href=&quot;http://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt;.  You can download a version for Windows/Mac OS X/Linux after registering.  A plugin for Eclipse is also available:</source>
          <target state="translated">여전히 관심있는 사람들을 위해 : &lt;a href=&quot;http://www.genymotion.com/&quot;&gt;Genymotion을&lt;/a&gt; 사용해보십시오. 등록 후 Windows / Mac OS X / Linux 버전을 다운로드 할 수 있습니다. Eclipse 용 플러그인도 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="de4c725f1c79e60e448de00c90300643fa6444fd" translate="yes" xml:space="preserve">
          <source>For using the CPU machine extensions, you have to install the driver (caution because it can conflict with existing &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/VMware&quot;&gt;VMware&lt;/a&gt; drivers). Once it's installed it will be used automatically whenever you use an x86-based AVD.</source>
          <target state="translated">CPU 시스템 확장을 사용하려면 드라이버를 설치해야합니다 (기존 &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; 또는 &lt;a href=&quot;http://en.wikipedia.org/wiki/VMware&quot;&gt;VMware&lt;/a&gt; 드라이버와 충돌 할 수 있으므로주의). 설치되면 x86 기반 AVD를 사용할 때마다 자동으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3cbc51ff0287acb2835ade64373a3a787248ea60" translate="yes" xml:space="preserve">
          <source>GenyMotion allows you to control various sensors of your device including the battery level, signal strength, and GPS. The latest version now also contains camera tools.</source>
          <target state="translated">GenyMotion을 사용하면 배터리 수준, 신호 강도 및 GPS를 포함하여 장치의 다양한 센서를 제어 할 수 있습니다. 최신 버전에는 카메라 도구도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3550ea99de01e9c42a41f79a749f2e6038d24fc" translate="yes" xml:space="preserve">
          <source>Good way to speed up Android Emulator and app testing is Install or Upgrade your Android Studio to &lt;a href=&quot;http://tools.android.com/download/studio/builds/2-0-preview&quot;&gt;Android Studio 2.0&lt;/a&gt; version and then go to app open Settings/Preferences, the go to Build, Execution, Deployment &amp;rarr; Instant Run. Click on Enable Instant Run. And After That This will ensure you have the correct gradle plugin for your project to work with Instant Run.</source>
          <target state="translated">Android 에뮬레이터 및 앱 테스트 속도를 높이는 좋은 방법은 Android Studio를 &lt;a href=&quot;http://tools.android.com/download/studio/builds/2-0-preview&quot;&gt;Android Studio 2.0&lt;/a&gt; 버전으로 설치 또는 업그레이드 한 다음 앱 열기 설정 / 환경 설정으로 이동하여 빌드, 실행, 배포 &amp;rarr; 즉시 실행으로 이동하십시오. 인스턴트 실행 사용을 클릭하십시오. 그리고 그 후에는 프로젝트가 Instant Run과 작동하도록 올바른 gradle 플러그인이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="30706c10cbea3e00204a5234eee7f56ff9f4a975" translate="yes" xml:space="preserve">
          <source>HAX is not working and the emulator runs in emulation mode emulator:</source>
          <target state="translated">HAX가 작동하지 않고 에뮬레이터가 에뮬레이션 모드 에뮬레이터에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="b8cbec5446f00ce5b9f5d29426a994a747bbb78e" translate="yes" xml:space="preserve">
          <source>HAX is working and emulator runs in fast virtual mode</source>
          <target state="translated">HAX가 작동하고 에뮬레이터가 빠른 가상 모드에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="ad495a99d7c02a796b897f096f496ed40009c472" translate="yes" xml:space="preserve">
          <source>HAXM Speeds Up the Slow Android Emulator</source>
          <target state="translated">HAXM, 느린 안드로이드 에뮬레이터 속도 향상</target>
        </trans-unit>
        <trans-unit id="5d35e51514240075741e7282bda8844164ed3076" translate="yes" xml:space="preserve">
          <source>HAXM works with Intel devices, so created a new Emulator with Intel CPU.</source>
          <target state="translated">HAXM은 Intel 장치와 함께 작동하므로 Intel CPU로 새 에뮬레이터를 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="b81074d662ad58c62de9e32444e31ebcc8ac813f" translate="yes" xml:space="preserve">
          <source>Here are some tips to speed up the Android emulator: &lt;em&gt;&lt;a href=&quot;http://www.nuxeo.com/blog/speeding-up-the-android-emulator/&quot;&gt;How to speed up the Android Emulator by up to 400%&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Android 에뮬레이터의 속도를 높이는 방법은 다음과 같습니다. Android 에뮬레이터의 &lt;em&gt;&lt;a href=&quot;http://www.nuxeo.com/blog/speeding-up-the-android-emulator/&quot;&gt;속도를 최대 400 % 향상시키는 방법&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f286df6c2e19af97903fd2129740fb6f8346fc6b" translate="yes" xml:space="preserve">
          <source>Here's what I noticed nobody mentioned it at all.</source>
          <target state="translated">여기 아무도 언급하지 않은 것을 보았습니다.</target>
        </trans-unit>
        <trans-unit id="e0ffc14f200531df8dc6e1073a6695805683f74e" translate="yes" xml:space="preserve">
          <source>Here's what you can try. It does speed up the emulator for me, especially during loading time. I noticed the emulator is only using a single core of the available CPU. I set it to use all available processors.</source>
          <target state="translated">시도해 볼 수있는 것이 있습니다. 특히 로딩 시간 동안 에뮬레이터의 속도를 높입니다. 에뮬레이터가 사용 가능한 CPU의 단일 코어 만 사용하고 있음을 알았습니다. 사용 가능한 모든 프로세서를 사용하도록 설정했습니다.</target>
        </trans-unit>
        <trans-unit id="643e5b127965e7a98c4feb9db73fa152feccf1f5" translate="yes" xml:space="preserve">
          <source>However Android Studio is right now in Preview you can try it now.</source>
          <target state="translated">그러나 Android Studio는 현재 미리보기에 있으며 지금 시도해 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c7c6550098b6296392b2f8e7bce4744f6201c03" translate="yes" xml:space="preserve">
          <source>I had intermittent slow emulator (SDK v8.0) load times, up to three minutes on Intel Core i7 920 2.67&amp;nbsp;GHz CPU running on Xubuntu 10.04 &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; 3.2.12 guest with Eclipse (3.6.1) loaded. I changed the VirtualBox guest memory from 1024&amp;nbsp;MB to 2048&amp;nbsp;MB and from that point on, I never experienced the slowness again (load times consistent at 33 seconds, CPU load consistent at 20%). Both Eclipse and the emulator are memory hogs.</source>
          <target state="translated">Eclipse (3.6.1)가로드 된 Xubuntu 10.04 &lt;a href=&quot;http://en.wikipedia.org/wiki/VirtualBox&quot;&gt;VirtualBox&lt;/a&gt; 3.2.12 게스트에서 실행되는 Intel Core i7 920 2.67 GHz CPU에서 최대 3 분의 간헐적 인 느린 에뮬레이터 (SDK v8.0)로드 시간이있었습니다. VirtualBox 게스트 메모리를 1024MB에서 2048MB로 변경했으며 그 시점부터는 다시 느려진 경험이 없었습니다 (로드 시간은 33 초, CPU로드는 20 %로 유지). Eclipse와 에뮬레이터는 모두 메모리 호그입니다.</target>
        </trans-unit>
        <trans-unit id="bd66b65ee88546052629dfeb7dcc767271d4b880" translate="yes" xml:space="preserve">
          <source>I have got a &lt;strong&gt;2.67&lt;/strong&gt;&amp;nbsp; GHz Celeron processor, and &lt;strong&gt;1.21&lt;/strong&gt;&amp;nbsp; GB of RAM on a &lt;strong&gt;x86&lt;/strong&gt; Windows &lt;strong&gt;XP&lt;/strong&gt; Professional machine.</source>
          <target state="translated">&lt;strong&gt;x86&lt;/strong&gt; Windows &lt;strong&gt;XP&lt;/strong&gt; Professional 컴퓨터에 &lt;strong&gt;2.67GHz&lt;/strong&gt; Celeron 프로세서와 &lt;strong&gt;1.21GB&lt;/strong&gt; 의 RAM이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5aa21de101bfb056cd450df1cbf09f288bec02f" translate="yes" xml:space="preserve">
          <source>I have recently upgraded my Ubuntu installation to &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_10.04_LTS_.28Lucid_Lynx.29&quot;&gt;Ubuntu&amp;nbsp;10.04&lt;/a&gt; LTS (Lucid Lynx) which in turn updated my Java version to:</source>
          <target state="translated">최근 Ubuntu 설치를 &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_10.04_LTS_.28Lucid_Lynx.29&quot;&gt;Ubuntu 10.04&lt;/a&gt; LTS (Lucid Lynx)로 업그레이드하여 Java 버전을 다음과 같이 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="34249b6a29a650217ab9a93fda5a9367e1be7d90" translate="yes" xml:space="preserve">
          <source>I noticed that the my emulator (&lt;a href=&quot;http://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse&lt;/a&gt; plugin) was significantly slowed by my &lt;a href=&quot;http://en.wikipedia.org/wiki/Nvidia&quot;&gt;Nvidia&lt;/a&gt; graphics card anti-aliasing settings. Removing 2x anti aliasing from the graphics menu and changing it to application controlled made it more responsive. It is still slow, but better than it used to be.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Nvidia&quot;&gt;Nvidia&lt;/a&gt; 그래픽 카드 앤티 앨리어싱 설정으로 인해 에뮬레이터 ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Eclipse_%28software%29&quot;&gt;Eclipse&lt;/a&gt; 플러그인)가 상당히 느려졌습니다. 그래픽 메뉴에서 2x 안티 앨리어싱을 제거하고 응용 프로그램 제어로 변경하면 반응이 빨라졌습니다. 여전히 느리지 만 예전보다 낫습니다.</target>
        </trans-unit>
        <trans-unit id="810c8fff0c746db2510814e8e2d244d97d74661d" translate="yes" xml:space="preserve">
          <source>I'm using Windows 7.</source>
          <target state="translated">Windows 7을 사용하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0d4a27638588784c8a27cff0e0d4657cd7c6553" translate="yes" xml:space="preserve">
          <source>I've noticed that the emulator starts much faster if there's no Dalvik Debug Monitor Server (DDMS) connected. So if you start the emulator from Virtual Device Manager &quot;SDK Setup.exe&quot; and Eclipse is not started, the emulator works faster.</source>
          <target state="translated">DDMS (Dalvik Debug Monitor Server)가 연결되어 있지 않으면 에뮬레이터가 훨씬 빨리 시작됩니다. 따라서 Virtual Device Manager &quot;SDK Setup.exe&quot;에서 에뮬레이터를 시작하고 Eclipse가 시작되지 않으면 에뮬레이터가 더 빨리 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3860aca6473a6884e18459a816d022a4c215ab78" translate="yes" xml:space="preserve">
          <source>If HAXM is working properly, you may see this message when launching the emulator:</source>
          <target state="translated">HAXM이 제대로 작동하면 에뮬레이터를 시작할 때 다음 메시지가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb5e846f550f85c527507e96b8dc21d2b9ac21a0" translate="yes" xml:space="preserve">
          <source>If in case you don't know, you do not need to close the emulator every-time you run/debug your app. If you click run/debug when it's already open, your APK file will get uploaded to the emulator and start pretty much immediately. Emulator takes annoyingly long time only when it started the first time.</source>
          <target state="translated">모르는 경우 앱을 실행 / 디버그 할 때마다 에뮬레이터를 닫을 필요가 없습니다. 이미 열려있을 때 실행 / 디버그를 클릭하면 APK 파일이 에뮬레이터에 업로드되고 거의 즉시 시작됩니다. 에뮬레이터는 처음 시작했을 때만 귀찮게 오랜 시간이 걸립니다.</target>
        </trans-unit>
        <trans-unit id="c97e4417cc66fd960a92ceeb3a1f287cc3a0295a" translate="yes" xml:space="preserve">
          <source>If the installer fails with the message that Intel VT must be turned on, you need to enable this in the &lt;a href=&quot;http://en.wikipedia.org/wiki/BIOS&quot;&gt;BIOS&lt;/a&gt;. See the description for how to do this in &lt;em&gt;&lt;a href=&quot;http://forums.lenovo.com/t5/T400-T500-and-newer-T-series/Enabling-Intel-VT-Virtualization-Technology/ta-p/388479&quot;&gt;Enabling Intel VT (Virtualization Technology) &lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">Intel VT를 켜야한다는 메시지와 함께 설치 프로그램이 실패하면 &lt;a href=&quot;http://en.wikipedia.org/wiki/BIOS&quot;&gt;BIOS&lt;/a&gt; 에서이를 활성화해야합니다. &lt;em&gt;&lt;a href=&quot;http://forums.lenovo.com/t5/T400-T500-and-newer-T-series/Enabling-Intel-VT-Virtualization-Technology/ta-p/388479&quot;&gt;Intel VT 활성화 (가상화 기술)&lt;/a&gt;&lt;/em&gt; 에서이를 수행하는 방법에 대한 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5e50a0f8a7f00621adc746bd81fb34fab1eb3889" translate="yes" xml:space="preserve">
          <source>If you start the emulator from Eclipse: DDMS is there, so sometimes the emulator is extremely slow, but sometimes it's faster.</source>
          <target state="translated">Eclipse에서 에뮬레이터를 시작하면 DDMS가 있으므로 때로는 에뮬레이터가 매우 느리지 만 때로는 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="43f4648dcf49f5b906f97bc04948904f562d5f5d" translate="yes" xml:space="preserve">
          <source>In the version of Android Studio I used (0.8.9), Android SDK Manager downloads HAXM but doesn't actually run the installer (I assume this will be fixed in later releases). To run the installer I had to go to C:\Program Files (x86)\Android\android-studio\sdk\extras\intel\Hardware_Accelerated_Execution_Manager and manually launch intelhaxm.exe.</source>
          <target state="translated">내가 사용한 Android Studio 버전 (0.8.9)에서 Android SDK Manager는 HAXM을 다운로드하지만 실제로 설치 프로그램을 실행하지는 않습니다 (이는 이후 릴리스에서 수정 될 것이라고 가정합니다). 설치 프로그램을 실행하려면 C : \ Program Files (x86) \ Android \ android-studio \ sdk \ extras \ intel \ Hardware_Accelerated_Execution_Manager로 이동하여 intelhaxm.exe를 수동으로 시작해야했습니다.</target>
        </trans-unit>
        <trans-unit id="bf9d1693d6a7842b5433b57d8c332d0b22848f4e" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;http://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.virtualbox.org/&quot;&gt;VirtualBox를&lt;/a&gt; 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="800bc668e38f6f9c690362435fefab4071b466bc" translate="yes" xml:space="preserve">
          <source>Install Android x86 on the emulator, run it.</source>
          <target state="translated">에뮬레이터에 Android x86을 설치하고 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="10fc6463f3d202b4b108e7ae0d85c0fd9ea3de12" translate="yes" xml:space="preserve">
          <source>Install Intel Hardware Accelerated Execution Manager (HAXM)</source>
          <target state="translated">Intel HAXM (Hardware Accelerated Execution Manager) 설치</target>
        </trans-unit>
        <trans-unit id="ee9f8bdaaee53fc90bbfd312eef3efe5fb9bada2" translate="yes" xml:space="preserve">
          <source>Install the HAXM Driver by running &quot;IntelHaxm.exe&quot;. It will be located in one of the following locations:</source>
          <target state="translated">&quot;IntelHaxm.exe&quot;를 실행하여 HAXM 드라이버를 설치하십시오. 다음 위치 중 하나에 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd10b98c581664a757ba605f11f0e7f444d64501" translate="yes" xml:space="preserve">
          <source>Intel released &lt;a href=&quot;http://software.intel.com/en-us/articles/intel-atom-x86-image-for-android-ice-cream-sandwich-installation-instructions-recommended/&quot;&gt;recommended installation instructions for the ICS emulator&lt;/a&gt; on May 15, 2012.  This worked for me. The emulator is now fast and the UI is smooth.</source>
          <target state="translated">인텔은 2012 년 5 월 15 일에 &lt;a href=&quot;http://software.intel.com/en-us/articles/intel-atom-x86-image-for-android-ice-cream-sandwich-installation-instructions-recommended/&quot;&gt;ICS 에뮬레이터&lt;/a&gt; 에 권장되는 설치 지침을 발표했습니다. 에뮬레이터가 빨라지고 UI가 매끄 럽습니다.</target>
        </trans-unit>
        <trans-unit id="1a76244279000e4b704d93c035a3ae1cc1ada633" translate="yes" xml:space="preserve">
          <source>It might be worth people upgrading their JVM.</source>
          <target state="translated">사람들이 JVM을 업그레이드하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ec4fc42da645e1d3b51cd44ae7fa0f471e1fb95d" translate="yes" xml:space="preserve">
          <source>Jar of Beans</source>
          <target state="translated">콩의 항아리</target>
        </trans-unit>
        <trans-unit id="2a263503e6d9a53f35b04c349064640538240500" translate="yes" xml:space="preserve">
          <source>Launching the emulator from the snapshot.</source>
          <target state="translated">스냅 샷에서 에뮬레이터를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="d1a399a3b1c5d4c0aa75b0781fea3b0054332862" translate="yes" xml:space="preserve">
          <source>My understanding is that the &lt;strong&gt;Android Emulator&lt;/strong&gt; should start fairly quickly on such a machine, but for me, it does not. I have followed all the instructions in setting up the IDE, SDKs, JDKs and such and have had some success in starting the emulator quickly, but that is very rare. How can I, if possible, fix this problem?</source>
          <target state="translated">내 이해는 &lt;strong&gt;Android 에뮬레이터&lt;/strong&gt; 가 그러한 컴퓨터에서 상당히 빨리 시작해야하지만 나에게는 그렇지 않다는 것입니다. IDE, SDK, JDK 등을 설정하는 데 필요한 모든 지침을 따르고 에뮬레이터를 빠르게 시작하는 데 성공했지만 매우 드 rare니다. 가능하면이 문제를 어떻게 해결할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="7b710993f07746ef4e872823c1957bf51765203c" translate="yes" xml:space="preserve">
          <source>Now to ensure that everything else is set up so you can enjoy a highly performing emulator:</source>
          <target state="translated">이제 다른 모든 것이 설정되어 고성능 에뮬레이터를 즐길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3049e2ec6ecd76d894451bf73340db4d84590b31" translate="yes" xml:space="preserve">
          <source>On Mac OS you will need to hold</source>
          <target state="translated">Mac OS에서는</target>
        </trans-unit>
        <trans-unit id="3fed8f8b8ec5f2b53d23a7ea6f98b54b60760240" translate="yes" xml:space="preserve">
          <source>Or as for new SDK,</source>
          <target state="translated">또는 새로운 SDK는</target>
        </trans-unit>
        <trans-unit id="2f992824b010ac4e8dfbea84d884a8c05cd316cc" translate="yes" xml:space="preserve">
          <source>Or on Unix (Mac or Linux flavors):</source>
          <target state="translated">또는 Unix (Mac 또는 Linux 버전)에서 :</target>
        </trans-unit>
        <trans-unit id="b34da484a345eaec070ba26a5454d8d443c490ce" translate="yes" xml:space="preserve">
          <source>Otherwise, you may see this error:</source>
          <target state="translated">그렇지 않으면이 오류가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec9cf7e03aa14902c66d5b637073054dfb938758" translate="yes" xml:space="preserve">
          <source>Personally, I use a real phone to do my tests. It is faster and tests are more realistic. But if you want to test your application on a lot of different Android versions and don't want to buy several phones, you will have to use the emulator from time to time.</source>
          <target state="translated">개인적으로 실제 전화를 사용하여 테스트를 수행합니다. 더 빠르며 테스트가 더 현실적입니다. 그러나 다양한 Android 버전에서 응용 프로그램을 테스트하고 여러 대의 전화를 사고 싶지 않은 경우 때때로 에뮬레이터를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ea683ad616063b7347bdddeee7203a82e1a3805b" translate="yes" xml:space="preserve">
          <source>Press</source>
          <target state="translated">Press</target>
        </trans-unit>
        <trans-unit id="6657a31d8eda84a072fa7c3741550607aedea2ad" translate="yes" xml:space="preserve">
          <source>Recent emulators are faster than they use to be in 2010. Update your SDK/IDE.</source>
          <target state="translated">최근 에뮬레이터는 2010 년보다 더 빠릅니다. SDK / IDE를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="e2e9e5627d6dd5022d9150c1a9dd34d0efb15836" translate="yes" xml:space="preserve">
          <source>Refer to the given below screenshots for more information.</source>
          <target state="translated">자세한 내용은 아래 주어진 스크린 샷을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a32bc5a36966137b13eb04d16ff62fb991a71fee" translate="yes" xml:space="preserve">
          <source>Run cmd on your Windows&amp;nbsp;XP system, change the directory to your Android tools directory, type &lt;code&gt;adb connect &amp;lt;virtual_machine_IP&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Windows XP 시스템에서 cmd를 실행하고 디렉토리를 Android 도구 디렉토리로 변경하고 &lt;code&gt;adb connect &amp;lt;virtual_machine_IP&amp;gt;&lt;/code&gt; 를 입력하십시오 .</target>
        </trans-unit>
        <trans-unit id="fbeafbbf367b4d1d769f2a8bb1811d77d4cef4b2" translate="yes" xml:space="preserve">
          <source>See the following section in the Android emulator documentation for more details: &lt;a href=&quot;http://developer.android.com/guide/developing/devices/emulator.html#accel-vm&quot;&gt;Configuring Virtual Machine Acceleration&lt;/a&gt;</source>
          <target state="translated">자세한 내용은 Android 에뮬레이터 설명서에서 다음 섹션을 참조하십시오. &lt;a href=&quot;http://developer.android.com/guide/developing/devices/emulator.html#accel-vm&quot;&gt;가상 머신 가속 구성&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="604093c31cb8b731cacc8f7f23958002f8f1856d" translate="yes" xml:space="preserve">
          <source>Show Advanced Setting</source>
          <target state="translated">고급 설정 표시</target>
        </trans-unit>
        <trans-unit id="fd557ed88afe03c917e4d91e49a2dc5df54a2194" translate="yes" xml:space="preserve">
          <source>Start Eclipse, open the ADT plugin, find the device, and enjoy!</source>
          <target state="translated">Eclipse를 시작하고 ADT 플러그인을 열고 장치를 찾고 즐기십시오!</target>
        </trans-unit>
        <trans-unit id="648e6313fb8963d47e9841e4bc0bd4288eb9754b" translate="yes" xml:space="preserve">
          <source>Steps for Configuring Your Android Development Environment for HAXM</source>
          <target state="translated">HAXM을위한 Android 개발 환경 구성 단계</target>
        </trans-unit>
        <trans-unit id="e0059792a26167d6cb558c15e2d81b36b5e6c29d" translate="yes" xml:space="preserve">
          <source>Target: Intel Atom x86 System Image - API Level 10</source>
          <target state="translated">대상 : Intel Atom x86 시스템 이미지-API 레벨 10</target>
        </trans-unit>
        <trans-unit id="513d6148d91cffcde62beb6d194d6b61453a6d97" translate="yes" xml:space="preserve">
          <source>The Android emulator is based on &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt;. The interface between QEMU and the HAXM driver on the host system is designed to be vendor-agnostic.</source>
          <target state="translated">Android 에뮬레이터는 &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU를&lt;/a&gt; 기반으로합니다. 호스트 시스템에서 QEMU와 HAXM 드라이버 간의 인터페이스는 공급 업체에 구애받지 않도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="21f07e097f0e3e5517eb370bbe8895a697686e2c" translate="yes" xml:space="preserve">
          <source>The current (May 2011) version of the emulator is slow particularly with &lt;a href=&quot;http://en.wikipedia.org/wiki/Android_version_history#v3.x_Honeycomb&quot;&gt;Android 3.0 (Honeycomb)&lt;/a&gt; primarily because the emulator does not support hardware GL -- this means that the GL code gets translated into software (ARM software, in fact) which then gets emulated in software in &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt;. This is crazy-slow. They're working on this problem and have it partially solved, but not with any sort of release quality.</source>
          <target state="translated">에뮬레이터의 현재 (2011 년 5 월) 버전은 특히 &lt;a href=&quot;http://en.wikipedia.org/wiki/Android_version_history#v3.x_Honeycomb&quot;&gt;Android 3.0 (Honeycomb)에서&lt;/a&gt; 느립니다. 에뮬레이터는 하드웨어 GL을 지원하지 않기 때문에 주로 GL 코드가 소프트웨어 (사실 ARM 소프트웨어)로 변환되어 소프트웨어를 가져옵니다. &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU의&lt;/a&gt; 소프트웨어에서 에뮬레이트됩니다. 이건 정말 느려. 그들은이 문제에 대해 연구하고 있으며 부분적으로 해결되었지만 어떤 종류의 릴리스 품질로는 해결하지 못했습니다.</target>
        </trans-unit>
        <trans-unit id="351cf97d704699a26881ff341ade6043d6ba2ad1" translate="yes" xml:space="preserve">
          <source>The emulator included in your (old) version of Eclipse is very slow.</source>
          <target state="translated">(이전) 버전의 Eclipse에 포함 된 에뮬레이터는 매우 느립니다.</target>
        </trans-unit>
        <trans-unit id="71a8123cbbe316cf27bbf4df482c67b0973de10b" translate="yes" xml:space="preserve">
          <source>The emulator runs slowly because the complete Android environment is running on emulated hardware and the instructions are executed on an emulated ARM processor as well.</source>
          <target state="translated">전체 Android 환경이 에뮬레이트 된 하드웨어에서 실행 중이고 에뮬레이션 된 ARM 프로세서에서도 명령이 실행되므로 에뮬레이터가 느리게 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e50e6e4ba83d115bbe9d6d5e5ba7952af8c98351" translate="yes" xml:space="preserve">
          <source>The emulator seems to slow itself down when idle. This is made apparent by rapidly mousing over the keys on the side and observing the light-up responses. As a workaround, I pass &lt;code&gt;-icount auto&lt;/code&gt; to &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU&lt;/a&gt; when starting the emulator. You can make a batch file called &lt;code&gt;my_avd.bat&lt;/code&gt; to do it for you:</source>
          <target state="translated">유휴 상태 일 때 에뮬레이터가 느려집니다. 이것은 측면의 건반을 빠르게 마우스로 움직이고 점등 반응을 관찰함으로써 분명해집니다. 해결 방법으로 에뮬레이터를 시작할 때 &lt;code&gt;-icount auto&lt;/code&gt; 를 &lt;a href=&quot;http://en.wikipedia.org/wiki/QEMU&quot;&gt;QEMU에&lt;/a&gt; 전달합니다. &lt;code&gt;my_avd.bat&lt;/code&gt; 라는 배치 파일을 만들어서 이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37c79e6d312fc63a42d2c061e00c98d969389324" translate="yes" xml:space="preserve">
          <source>The first half of the instructions are detailed enough, so I will assume you were able to install the Intel x86 Atom System Image(s) using the Android SDK manager, as well as Intel HAXM.</source>
          <target state="translated">지침의 전반부는 충분히 자세하므로 Intel HAXM뿐만 아니라 Android SDK 관리자를 사용하여 Intel x86 Atom 시스템 이미지를 설치할 수 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="5d59a14fb9489af79a08a25aa1009ddd91d74f15" translate="yes" xml:space="preserve">
          <source>The installation of the plugin can be done by launching Eclipse and going to &quot;Help / Install New Software&quot; menu, then just add a new Update Site with the following URL: &lt;a href=&quot;http://plugins.genymotion.com/eclipse&quot;&gt;http://plugins.genymotion.com/eclipse&lt;/a&gt;. Follow the steps indicated by Eclipse.</source>
          <target state="translated">플러그인 설치는 Eclipse를 시작하고 &quot;도움말 / 새 소프트웨어 설치&quot;메뉴로 이동 한 다음 &lt;a href=&quot;http://plugins.genymotion.com/eclipse&quot;&gt;http://plugins.genymotion.com/eclipse&lt;/a&gt; URL을 사용하여 새 업데이트 사이트를 추가하면됩니다. Eclipse로 표시된 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="746a19d8b2c395274f10684e5bdb5975941da2df" translate="yes" xml:space="preserve">
          <source>The main choking point is rendering since it's not running on any dedicated hardware but it's actually being performed through software rendering. Lowering the screen size will drastically improve emulator performance. Getting more/faster memory isn't going to help.</source>
          <target state="translated">주요 초킹 포인트는 전용 하드웨어에서 실행되지 않지만 실제로 소프트웨어 렌더링을 통해 수행되므로 렌더링입니다. 화면 크기를 줄이면 에뮬레이터 성능이 크게 향상됩니다. 더 빠른 메모리를 얻는 것은 도움이되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e15101980346bc1241d8a87c25b62c9df919676b" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;-cpu-delay &amp;lt;delay&amp;gt;&lt;/code&gt; described in &lt;em&gt;&lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html&quot;&gt;Emulator Startup Options&lt;/a&gt;&lt;/em&gt; can help.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html&quot;&gt;에뮬레이터 시작 옵션에&lt;/a&gt;&lt;/em&gt; 설명 된 &lt;code&gt;-cpu-delay &amp;lt;delay&amp;gt;&lt;/code&gt; &lt;em&gt;옵션&lt;/em&gt; 이 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bae6ac70fcb5a8789e1bb635dbf8249fed323116" translate="yes" xml:space="preserve">
          <source>The startup of the emulator is very slow.  The good thing is that you only need to start the emulator once.  If the emulator is already running and you run your app again, the emulator reinstalls the app relatively quickly.  Of course, if you want to know how fast it will run on a phone, it is best to test it on a real phone.</source>
          <target state="translated">에뮬레이터의 시작이 매우 느립니다. 좋은 점은 에뮬레이터를 한 번만 시작하면된다는 것입니다. 에뮬레이터가 이미 실행 중이고 앱을 다시 실행하면 에뮬레이터가 앱을 비교적 빠르게 다시 설치합니다. 물론 휴대 전화에서 얼마나 빨리 실행되는지 알고 싶다면 실제 휴대 전화에서 테스트하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1cc623d7933f9ea20fd6d81e748f5832271ef463" translate="yes" xml:space="preserve">
          <source>They've mentioned, at the time, that they're developing an interface that would allow the emulator to pipe certain instructions through the host hardware, so eventually, you'll be able to leverage emulator performances with the raw power of desktop hardware.</source>
          <target state="translated">그들은 에뮬레이터가 호스트 하드웨어를 통해 특정 명령을 파이프 할 수있는 인터페이스를 개발 중이라고 말하면서 결국 데스크톱 하드웨어의 강력한 성능으로 에뮬레이터 성능을 활용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="435e175b765d8eca795a6493ea57bac9f73483df" translate="yes" xml:space="preserve">
          <source>This emulator is fast and responsive.</source>
          <target state="translated">이 에뮬레이터는 빠르고 반응이 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="fef513452d4c4c0524ce23adde43294eb646c095" translate="yes" xml:space="preserve">
          <source>This feature can improve the emulator performance a lot!</source>
          <target state="translated">이 기능은 에뮬레이터 성능을 크게 향상시킬 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="4e87a5737c9b8f0c86da645e518bffe58d80e944" translate="yes" xml:space="preserve">
          <source>This improved things considerably, but the emulator was still feeling a bit sluggish. The final step was selecting Use Host GPU in Android Virtual Device Manager (AVD).</source>
          <target state="translated">이것은 상당히 개선되었지만 에뮬레이터는 여전히 약간 느려졌습니다. 마지막 단계는 Android 가상 장치 관리자 (AVD)에서 호스트 GPU 사용을 선택하는 것이 었습니다.</target>
        </trans-unit>
        <trans-unit id="14761a4e9e3a697b137b7adee87b670a477f8f2a" translate="yes" xml:space="preserve">
          <source>This made animations buttery smooth and sped up &lt;code&gt;adb install&lt;/code&gt; tenfold.</source>
          <target state="translated">이로 인해 애니메이션이 부드럽고 매끄럽고 &lt;code&gt;adb install&lt;/code&gt; 속도가 10 배 빨라졌습니다.</target>
        </trans-unit>
        <trans-unit id="9962374ff220258d4d22b3fb3f7c92b232584589" translate="yes" xml:space="preserve">
          <source>To add further information to this.</source>
          <target state="translated">이에 대한 추가 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a338f45b75026b5d7ac15904ade45edb461d16ca" translate="yes" xml:space="preserve">
          <source>To make your emulator faster, you can host a GPU and use a lighter Android version (&lt;a href=&quot;https://en.wikipedia.org/wiki/Android_version_history#Android_2.3.E2.80.932.3.2_Gingerbread_.28API_level_9.29&quot;&gt;Android 2.3&lt;/a&gt; (Gingerbread)).
Developing on a Mac would be better. Why use an emulator, BTW? Using a real phone makes more sense.</source>
          <target state="translated">에뮬레이터를 더 빠르게 만들기 위해 GPU를 호스팅하고 더 가벼운 Android 버전 ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Android_version_history#Android_2.3.E2.80.932.3.2_Gingerbread_.28API_level_9.29&quot;&gt;Android 2.3&lt;/a&gt; (Gingerbread))을 사용할 수 있습니다. Mac에서 개발하는 것이 좋습니다. 에뮬레이터, BTW를 사용하는 이유는 무엇입니까? 실제 전화를 사용하는 것이 더 합리적입니다.</target>
        </trans-unit>
        <trans-unit id="f2bb6fcba9591914084e694a8bf30439ed1938f1" translate="yes" xml:space="preserve">
          <source>To reduce your emulator start-up time you need to check the &quot;Disable Boot Animation&quot; before starting the emulator. Refer to &lt;a href=&quot;http://developer.android.com/tools/help/emulator.html&quot;&gt;the Android documentation&lt;/a&gt;.</source>
          <target state="translated">에뮬레이터 시작 시간을 줄이려면 에뮬레이터를 시작하기 전에 &quot;부팅 애니메이션 비활성화&quot;를 확인해야합니다. &lt;a href=&quot;http://developer.android.com/tools/help/emulator.html&quot;&gt;안드로이드 문서를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3153c2a6beb22ed3b6f18064d63caef109cf3803" translate="yes" xml:space="preserve">
          <source>Try &lt;a href=&quot;http://www.android-x86.org/&quot;&gt;Android x86&lt;/a&gt;. It's much faster than the Google Android emulator. Follow these steps:</source>
          <target state="translated">&lt;a href=&quot;http://www.android-x86.org/&quot;&gt;Android x86&lt;/a&gt; 사용해보십시오. Google Android 에뮬레이터보다 훨씬 빠릅니다. 이 단계를 따르세요:</target>
        </trans-unit>
        <trans-unit id="c7aa572875cc7e5d00c60bf1439e9761bb1196a1" translate="yes" xml:space="preserve">
          <source>Try &lt;a href=&quot;https://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt; for Android Studio. Blazing fast! Just needs one time installation. No more AVD pain.</source>
          <target state="translated">Android Studio 용 &lt;a href=&quot;https://www.genymotion.com/&quot;&gt;Genymotion&lt;/a&gt; 을 사용해보십시오. 타오르는 것! 한 번만 설치하면됩니다. 더 이상 AVD 통증이 없습니다.</target>
        </trans-unit>
        <trans-unit id="f7fe4b4c7866d7896c4e4b56e8e31c7654d78d33" translate="yes" xml:space="preserve">
          <source>Try to disable your antivirus. Maybe it will make emulator a little bit faster.</source>
          <target state="translated">안티 바이러스를 비활성화하십시오. 어쩌면 에뮬레이터를 조금 더 빠르게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="342a134be10b8efafc25ef77c64570ae94c2315e" translate="yes" xml:space="preserve">
          <source>Update Eclipse:
Make sure your Eclipse installation and the ADT plug-in are fully up-to-date.</source>
          <target state="translated">Eclipse 업데이트 : Eclipse 설치 및 ADT 플러그인이 최신 상태인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6b1c9a27773c3c0976111bbcfac2432c8ceb0c0c" translate="yes" xml:space="preserve">
          <source>Update your Android Tools:
After each Eclipse plug-in update, it is important to update your Android SDK Tools. To do this, launch the Android SDK Manager and update all the Android SDK components. To take advantage of HAXM, you must be on at least release version 17.</source>
          <target state="translated">Android 도구 업데이트 : 각 Eclipse 플러그인 업데이트 후에 Android SDK 도구를 업데이트해야합니다. 이렇게하려면 Android SDK Manager를 시작하고 모든 Android SDK 구성 요소를 업데이트하십시오. HAXM을 이용하려면 최소한 릴리스 버전 17 이상이어야합니다.</target>
        </trans-unit>
        <trans-unit id="adec47554cf8b33aeb8ab7f303b6fcc4da8478de" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://bluestacks.com/&quot;&gt;Bluestacks Player&lt;/a&gt;. It runs Android 2.3.4 and is very fluid and fast. Sometimes it is even faster than a normal device. The only downside is, that you can just test apps on the API Level 10 and just on one screen size, but it's perfect just for testing if it's working or not. Just connect the Player with the &lt;code&gt;adb&lt;/code&gt; by running</source>
          <target state="translated">&lt;a href=&quot;http://bluestacks.com/&quot;&gt;BlueStacks Player를&lt;/a&gt; 사용하십시오. Android 2.3.4를 실행하며 매우 유동적이고 빠릅니다. 때로는 일반 장치보다 훨씬 빠릅니다. 유일한 단점은 API 레벨 10과 하나의 화면 크기에서만 앱을 테스트 할 수 있다는 것입니다.하지만 작동하는지 여부를 테스트하기에 완벽합니다. 다음을 실행하여 플레이어를 &lt;code&gt;adb&lt;/code&gt; 와 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="21670662f8fbd2bbf98918a005840c8d86a25791" translate="yes" xml:space="preserve">
          <source>Use the Intel x86 Emulator Accelerator</source>
          <target state="translated">Intel x86 에뮬레이터 가속기 사용</target>
        </trans-unit>
        <trans-unit id="cb837c2918c14957ebf249f5eb0de4adb9ee6f1c" translate="yes" xml:space="preserve">
          <source>VirtualBox</source>
          <target state="translated">VirtualBox</target>
        </trans-unit>
        <trans-unit id="abbeb7b45a3a2ae8c6a6064011c0808bff630951" translate="yes" xml:space="preserve">
          <source>Visual Studio Emulator for Android</source>
          <target state="translated">Android 용 Visual Studio 에뮬레이터</target>
        </trans-unit>
        <trans-unit id="6351a1e3770f405e3b8ff78687c3bee8ff1a3bb7" translate="yes" xml:space="preserve">
          <source>Well, since somebody suggested Android x86 as an alternative testing emulator, I'll also present my favorite. This might not be an alternative for everyone, but for me it's perfect!</source>
          <target state="translated">글쎄, 누군가가 대체 테스트 에뮬레이터로 Android x86을 제안했기 때문에 내가 좋아하는 것을 제시합니다. 이것은 모든 사람의 대안이 아닐 수도 있지만 나에게는 완벽합니다!</target>
        </trans-unit>
        <trans-unit id="6122c6801d809e69033d105c486f65a887068165" translate="yes" xml:space="preserve">
          <source>When the Android emulator is starting, open up the Task Manager, look under the Process tab, look for &quot;emulator-arm.exe&quot; or &quot;emulator-arm.exe *32&quot;... Right click on it, select Processor Affinity and assign as much processor as you like to the emulator.</source>
          <target state="translated">Android 에뮬레이터가 시작되면 작업 관리자를 열고 프로세스 탭에서 &quot;emulator-arm.exe&quot;또는 &quot;emulator-arm.exe * 32&quot;를 찾으십시오. 마우스 오른쪽 단추로 클릭하고 프로세서 선호도를 선택한 후 에뮬레이터에 원하는만큼 프로세서를 할당하십시오.</target>
        </trans-unit>
        <trans-unit id="df1e140179979dff9293ee2488236e283e6ab91a" translate="yes" xml:space="preserve">
          <source>Why is the Android emulator so slow? How can we speed up the Android emulator</source>
          <target state="translated">Android 에뮬레이터가 왜 그렇게 느린가요? Android 에뮬레이터의 속도를 높이는 방법</target>
        </trans-unit>
        <trans-unit id="c28010e4d4115065a4a023f60e72e38024ce9ed6" translate="yes" xml:space="preserve">
          <source>Windows Android Emulator</source>
          <target state="translated">윈도우 안드로이드 에뮬레이터</target>
        </trans-unit>
        <trans-unit id="dc6e16b446e26a3e5ba1c0bab519499b642abd5d" translate="yes" xml:space="preserve">
          <source>With these settings the software keyboard no longer appears, nor do the on-screen back, menu, and recent keys. This appears to be a limitation of the current ICS Intel x86 system image. You will need to use &lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html#KeyMapping&quot;&gt;the keyboard shortcuts&lt;/a&gt;.</source>
          <target state="translated">이 설정을 사용하면 소프트웨어 키보드가 더 이상 나타나지 않으며 화면 뒷면, 메뉴 및 최근 키도 표시되지 않습니다. 이것은 현재 ICS Intel x86 시스템 이미지의 제한으로 보입니다. &lt;a href=&quot;http://developer.android.com/guide/developing/tools/emulator.html#KeyMapping&quot;&gt;바로 가기 키&lt;/a&gt; 를 사용해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="e0a7854f9c12d6ac85514528a0581f75a59d9dab" translate="yes" xml:space="preserve">
          <source>You can create emulator.bat with following command to start the emulator. It will start faster.</source>
          <target state="translated">다음 명령으로 emulator.bat를 만들어 에뮬레이터를 시작할 수 있습니다. 더 빨리 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="1640cc625a6407b39a75741d5be89573245f87a4" translate="yes" xml:space="preserve">
          <source>You can now enable the Quick Boot option for Android Emulator. That will save emulator state, and it will start the emulator quickly on the next boot.</source>
          <target state="translated">이제 Android 에뮬레이터에 빠른 부팅 옵션을 사용할 수 있습니다. 그러면 에뮬레이터 상태가 저장되고 다음 부팅시 에뮬레이터가 빠르게 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="ea63e15bbd4edcad5049ebaa941733197d570597" translate="yes" xml:space="preserve">
          <source>You can review the emulator issues on the &lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&amp;amp;feature=player_embedded#!&quot;&gt;Google I/O 2011: Android Development Tools&lt;/a&gt; talk, starting a 0:40:20.</source>
          <target state="translated">0:40:20부터 &lt;a href=&quot;http://www.youtube.com/watch?v=Oq05KqjXTvs&amp;amp;feature=player_embedded#!&quot;&gt;Google I / O 2011 : Android 개발 도구&lt;/a&gt; 토크에서 에뮬레이터 문제를 검토 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1c3d720c90b682411fdbd1586a388328764c194" translate="yes" xml:space="preserve">
          <source>YouWave</source>
          <target state="translated">YouWave</target>
        </trans-unit>
        <trans-unit id="2aeede80be6f6dfc0aa4d1cbd6487e24e27a81be" translate="yes" xml:space="preserve">
          <source>control</source>
          <target state="translated">control</target>
        </trans-unit>
        <trans-unit id="47fdd9283ded80c62bb5e40ce65b0e49a48675b3" translate="yes" xml:space="preserve">
          <source>fn</source>
          <target state="translated">fn</target>
        </trans-unit>
        <trans-unit id="da71a42485d0ce5d505be9bf3aeea8c0157f3672" translate="yes" xml:space="preserve">
          <source>for the</source>
          <target state="translated">를 위해</target>
        </trans-unit>
        <trans-unit id="3173cc1062d32bf1a8526e1fc8738c9f940f0fb2" translate="yes" xml:space="preserve">
          <source>keys to work. Page up/down/left/right can be performed using control + arrow keys.</source>
          <target state="translated">작동하는 키. Ctrl + 화살표 키를 사용하여 페이지 위 / 아래 / 왼쪽 / 오른쪽을 수행 할 수 있습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
