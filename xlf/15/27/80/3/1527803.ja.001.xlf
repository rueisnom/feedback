<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1527803">
    <body>
      <group id="1527803">
        <trans-unit id="fcf43b7b93ed8d47de35d7c004a635766a476d38" translate="yes" xml:space="preserve">
          <source>(bottom is lower number, top is greater number)</source>
          <target state="translated">下が下、上が大</target>
        </trans-unit>
        <trans-unit id="6f7fc2e7ffa574665878af12921a4f601c748795" translate="yes" xml:space="preserve">
          <source>** And always nice to be reminded (Mozilla):</source>
          <target state="translated">**と、いつも気づかせてくれるのが嬉しい(Mozilla)。</target>
        </trans-unit>
        <trans-unit id="b2e1e237c8335d1d7f01870b57a02a12c28f681a" translate="yes" xml:space="preserve">
          <source>/*
 Write a function called &lt;code&gt;randBetween&lt;/code&gt; that accepts two numbers 
 representing a range and returns a random whole number between those two 
 numbers.
*/</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ * &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;範囲を表す2つの数値を受け入れ、それら2つの数値の間のランダムな整数を返す&lt;/font&gt;&lt;/font&gt; &lt;code&gt;randBetween&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* /&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b76d98218a413953fc12b77086352e4871ff83e7" translate="yes" xml:space="preserve">
          <source>/*
 Write a function called &lt;code&gt;randFromTill&lt;/code&gt; that accepts two numbers 
 representing a range and returns a random number between min (inclusive) 
 and max (exclusive).
*/</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ * &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;範囲を表す2つの数値を受け入れ、min（両端を含む）とmax（両端を含まない）の間の乱数を返す&lt;/font&gt;&lt;/font&gt; &lt;code&gt;randFromTill&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* /&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb37c93b3356df067f44a0d5b48ecbc6d75e723f" translate="yes" xml:space="preserve">
          <source>/*
 Write a function called &lt;code&gt;randFromTo&lt;/code&gt; that accepts two numbers 
 representing a range and returns a random integer between min (inclusive) 
 and max (inclusive)
*/</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ * &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;範囲を表す2つの数値を受け入れ、min（両端を含む）とmax（両端を含む）の間のランダムな整数を返す&lt;/font&gt;&lt;/font&gt; &lt;code&gt;randFromTo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します* /&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2a5fd8b827979a9ca804fd2465546720b6711e4" translate="yes" xml:space="preserve">
          <source>/*
 Write a function called &lt;code&gt;randUpTo&lt;/code&gt; that accepts a number and returns a 
 random whole number between 0 and that number?
*/</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ * &lt;/font&gt;&lt;/font&gt; &lt;code&gt;randUpTo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を受け入れ、0とその数値の間のランダムな整数を返す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;randUpTo&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;という&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しますか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* /&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6497afd4b8183d88a67c8081482d7486c443559" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/users/58808/ionu%C8%9B-g-stan&quot;&gt;Ionuț G. Stan&lt;/a&gt; wrote a great answer but it was a bit too complex for me to grasp. So, I found an even simpler explanation of the same concepts at &lt;a href=&quot;https://teamtreehouse.com/community/mathfloor-mathrandom-max-min-1-min-explanation&quot;&gt;https://teamtreehouse.com/community/mathfloor-mathrandom-max-min-1-min-explanation&lt;/a&gt; by Jason Anello.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/users/58808/ionu%C8%9B-g-stan&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ionuț G. Stan&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は素晴らしい答えを書きましたが、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理解&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するには少し複雑すぎました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Jason Anelloによる&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://teamtreehouse.com/community/mathfloor-mathrandom-max-min-1-min-explanation&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://teamtreehouse.com/community/mathfloor-mathrandom-max-min-1-min-explanation&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で、同じ概念のさらに簡単な説明を見つけました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="88ff929da18f4f10b5c601c2c4a6630ccb3e309a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.floor&lt;/code&gt; rounds the number down to the nearest integer. So we now have all the integers between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;top-bottom&lt;/code&gt;. The 1 looks confusing, but it needs to be there because we are always rounding down, so the top number will never actually be reached without it. The random decimal we generate needs to be in the range &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;(1+top-bottom)&lt;/code&gt; so we can round down and get an int in the range &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;top-bottom&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Math.floor&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、数値を最も近い整数に切り捨てます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;top-bottom&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;までのすべての整数が得られました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1は紛らわしいように見えますが、常に切り捨てられるため、そこにある必要があります。そのため、実際に1がないと、トップの数値に到達することはありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成するランダムな小数は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1+top-bottom)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の範囲にある必要があるため、切り捨てて&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt; &lt;code&gt;top-bottom&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;範囲のintを取得できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c33a330b0a282144ca30de05a28741032d291030" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.random()&lt;/code&gt; is fast and suitable for many purposes, but it's not appropriate if you need cryptographically-secure values (it's not secure), or if you need integers from a completely uniform unbiased distribution (the multiplication approach used in others answers produces certain values slightly more often than others).</source>
          <target state="translated">&lt;code&gt;Math.random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は高速で多くの目的に適していますが、暗号で保護された値が必要な場合（安全ではない）、または完全に均一な不偏分布から整数が必要な場合（他の回答で使用されている乗算アプローチでは、特定の値が他の値よりもわずかに多い場合があります）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e61b806ac7a8fa8c73476b82639c1d888f28c39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.random()&lt;/code&gt; returns a &lt;code&gt;Number&lt;/code&gt; between 0 (inclusive) and 1 (exclusive). So we have an interval like this:</source>
          <target state="translated">&lt;code&gt;Math.random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0（包括的）から1（排他的）の間&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、次のような間隔があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f8fa6f3417f7a4951e361520380c0bb95b5e7e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.random()&lt;/code&gt; returns a random double between 0 and 1, and if we multiply it by one plus the difference between &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt;, we'll get a double somewhere between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1+b-a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Math.random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、0と1の間のランダムなdoubleを返します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。1に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;top&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bottom&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;差を加えたものを乗算する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1+b-a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間のどこかでdoubleが得られます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9fa39fa921f9fd33198cc4c222cf3c3a8e28972a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;random(7,3)&lt;/code&gt; could return &lt;code&gt;3,4,5,6, or 7&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;random(7,3)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt; &lt;code&gt;3,4,5,6, or 7&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;返す可能性があります&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0a7da3326faa58d49dbeaf9f6abe2a0bf8287f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hope that helps.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;お役に立てば幸いです。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9263aa83a573a741835571627b2dd74157c29615" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d668f73d2b64d3bd2a8fcaa43d0e8b2c217076c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; The only important thing you should know before reading Jason's explanation is a definition of &quot;truncate&quot;. He uses that term when describing &lt;code&gt;Math.floor()&lt;/code&gt;. Oxford dictionary defines &quot;truncate&quot; as:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Jasonの説明を読む前に知っておくべき重要なことは、「切り捨て」の定義です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Math.floor()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を説明するときにその用語を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オックスフォード辞書は「切り捨て」を次のように定義しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="566c97d85b2d392153154af423da49bb73f7b29e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use this function to get random numbers between given range&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この関数を使用して、指定された範囲内の乱数を取得します&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2eff6819a4350f78b2747a2aad7eabf25432d658" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Use:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89ca6bbfe03383e58a7bc1c40f7f0e0fcad9ed4e" translate="yes" xml:space="preserve">
          <source>After generating a random number using a computer program, it is still consider as a random number if the picked number is a part or the full one of the initial one. But if it was changed, then &lt;strong&gt;mathematicians are not accept it as a random number and they can call it a biased number.&lt;/strong&gt; But if you are developing a program for a simple task, this will not be a case to consider. &lt;strong&gt;But if you are developing a program to generate a random number for a valuable stuff such as lottery program, or gambling game, then your program will be rejected by the management if you are not consider about the above case.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンピュータプログラムを使用して乱数を生成した後も、選択した番号が最初の番号の一部または完全な番号である場合は、乱数と見なされます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、それが変更された場合、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数学者はそれを乱数として受け入れず、偏った数と呼ぶことができます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、単純なタスク用のプログラムを開発している場合、これは考慮すべきケースではありません。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、宝くじプログラムやギャンブルゲームなどの貴重なものの乱数を生成するプログラムを開発している場合、上記のケースを考慮しないと、プログラムは管理者によって拒否されます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7a0a7cd1645ad7652c070e9a34251365794bc6e" translate="yes" xml:space="preserve">
          <source>Alternative if you are using &lt;strong&gt;&lt;a href=&quot;http://underscorejs.org/#random&quot;&gt;Underscore.js&lt;/a&gt;&lt;/strong&gt; you can use</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたが使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できる&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;http://underscorejs.org/#random&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore.js&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用している場合の代替&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c0bccfb27a50728da45553e45cda1ab6d398986" translate="yes" xml:space="preserve">
          <source>Don't forget to add &lt;code&gt;min&lt;/code&gt; back, so that we get a number in the [min, max) interval:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[min、max）の間隔で数値を取得できるように、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;戻す&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを忘れないでください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="82b69371435e2e0444d907cc6f181e1c9d114266" translate="yes" xml:space="preserve">
          <source>For a random integer with a range, try:</source>
          <target state="translated">範囲のある乱数の整数については、試してみてください。</target>
        </trans-unit>
        <trans-unit id="5f0265206d80d92ab40e91fcfba263f59ca6e165" translate="yes" xml:space="preserve">
          <source>Generate a random number using &lt;code&gt;Math.random()&lt;/code&gt;.(say this &lt;code&gt;n&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Math.random()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して乱数を生成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます（これを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と言います&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c20f77069a853d16887ed660981c11024ce6f404" translate="yes" xml:space="preserve">
          <source>Generating random whole numbers in JavaScript in a specific range</source>
          <target state="translated">JavaScriptで特定の範囲のランダムな整数を生成する</target>
        </trans-unit>
        <trans-unit id="7a98df3c6fcad29f601c1cdee33a2e6cffa227ed" translate="yes" xml:space="preserve">
          <source>Gist: &lt;a href=&quot;https://gist.github.com/madprops/757deb000bdec25776d5036dae58ee6e&quot;&gt;https://gist.github.com/madprops/757deb000bdec25776d5036dae58ee6e&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要旨：&lt;/font&gt;&lt;a href=&quot;https://gist.github.com/madprops/757deb000bdec25776d5036dae58ee6e&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//gist.github.com/madprops/757deb000bdec25776d5036dae58ee6e&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cac83d6993c26f7d4129372f23d05441d27cb1b" translate="yes" xml:space="preserve">
          <source>Here is an example of a javascript function that can generate a random number of any specified length &lt;strong&gt;without using Math.random():&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Math.random（）を使用せず&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に、指定された長さの乱数を生成できるJavaScript関数の例です&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4dddf719328c3960ad96502c949be35fd78db7bc" translate="yes" xml:space="preserve">
          <source>Here is the MS DotNet Implementation of Random class in javascript-</source>
          <target state="translated">ここでは、javascript-でのランダムクラスのMS DotNetの実装を紹介します。</target>
        </trans-unit>
        <trans-unit id="b7d2c688d6e341d5723613bd40042cd3e2bb2642" translate="yes" xml:space="preserve">
          <source>Here's the logic behind it. It's a simple rule of three:</source>
          <target state="translated">ここにロジックがあります。シンプルな3つのルールです。</target>
        </trans-unit>
        <trans-unit id="c8cc80aefa513442f1938dec43000a8fcaeb8800" translate="yes" xml:space="preserve">
          <source>Here's what I use to generate random numbers.</source>
          <target state="translated">私が乱数の生成に使っているものはこんな感じです。</target>
        </trans-unit>
        <trans-unit id="ed0fb4d0539a286abcbeab260805051028a62ec2" translate="yes" xml:space="preserve">
          <source>Hope this would help someone.</source>
          <target state="translated">これが誰かの助けになることを願っています。</target>
        </trans-unit>
        <trans-unit id="43d1e2d6cb838f55aa66ac9529b085177b0c15fb" translate="yes" xml:space="preserve">
          <source>How can I generate random whole numbers between two specified variables in JavaScript, e.g. &lt;code&gt;x = 4&lt;/code&gt; and &lt;code&gt;y = 8&lt;/code&gt; would output any of &lt;code&gt;4, 5, 6, 7, 8&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どのように私はJavaScriptで指定された2つの変数間のランダムな整数を生成することができ、例えば&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x = 4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;y = 8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のいずれかだろう出力&lt;/font&gt;&lt;/font&gt; &lt;code&gt;4, 5, 6, 7, 8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef4cd3b78448dffa6beb3a9aea80cff105e9077d" translate="yes" xml:space="preserve">
          <source>I found this simple method on W3Schools:</source>
          <target state="translated">W3Schoolsでこんな簡単な方法を見つけました。</target>
        </trans-unit>
        <trans-unit id="2763c59402a834b1afe580a83baa590d21f93624" translate="yes" xml:space="preserve">
          <source>I know this question is already answered but my answer could help someone.</source>
          <target state="translated">この質問はすでに答えられていると思いますが、私の答えは誰かの助けになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="9dc91dac23dd201dba0574cf8442f3de0123e146" translate="yes" xml:space="preserve">
          <source>I made this function which takes into account options like min, max, exclude (a list of ints to exclude), and seed (in case you want a seeded random generator).</source>
          <target state="translated">min,max,exclude (除外するイントのリスト)、seed (シード付きのランダムジェネレータが必要な場合)などのオプションを考慮した関数を作ってみました。</target>
        </trans-unit>
        <trans-unit id="3452d8b4f61c05b00f267ef3c4454acfaa1aee37" translate="yes" xml:space="preserve">
          <source>If you know how to read random number table to pick a random number, you know above process(multiplying by 1, 10, 100 and so on) is not violates the one that I was mentioned at the beginning.( Because it changes only the place of the decimal point.)</source>
          <target state="translated">乱数表を読んで乱数を選ぶ方法を知っている人は、上記の処理(1,10,100などの掛け算)が、冒頭で述べた処理に違反しないことを知っていると思います(小数点以下の位置が変わるだけなので)。</target>
        </trans-unit>
        <trans-unit id="8c1167fef4e07b45d8e83227896c493ff5b32971" translate="yes" xml:space="preserve">
          <source>If you need a sample [0,9] then floor of n*10 is your answer and if need [0,99] then floor of n*100 is your answer and so on.</source>
          <target state="translated">0,9]のサンプルが必要な場合は、n*10の階が答えとなり、[0,99]のサンプルが必要な場合は、n*100の階が答えとなります。</target>
        </trans-unit>
        <trans-unit id="f686d14a2da7ff3ea015919a03e4f376b7ad2b96" translate="yes" xml:space="preserve">
          <source>If you need variable between 0 and max you can use:</source>
          <target state="translated">0から最大値までの変数が必要な場合は、これを使用することができます。</target>
        </trans-unit>
        <trans-unit id="e51f8f748a4294bc41cfd5066823a95b3bb2994b" translate="yes" xml:space="preserve">
          <source>In both methods, your console will show the result.(Press f12 in Chrome to open the console)</source>
          <target state="translated">どちらの方法でも、コンソールに結果が表示されます(Chromeでf12を押すとコンソールが開きます)</target>
        </trans-unit>
        <trans-unit id="aa0c556c1d08558364906e22d0966dddbfc95e3d" translate="yes" xml:space="preserve">
          <source>In general the code for doing this using variables is:</source>
          <target state="translated">一般的には、変数を使ってこれを行うためのコードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="5538aeefe3b0e41765a40fc8b1f7aa5ef47e63f4" translate="yes" xml:space="preserve">
          <source>In such cases, we can use &lt;code&gt;crypto.getRandomValues()&lt;/code&gt; to generate secure integers, and reject any generated values that we can't map uniformly into the target range. This will be slower, but it shouldn't be significant unless you're generating extremely large numbers of values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このような場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;crypto.getRandomValues()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して安全な整数を生成し、ターゲット範囲に均一にマッピングできない生成された値を拒否できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは遅くなりますが、非常に多数の値を生成する場合を除いて、重要ではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5dc18015c9aa67c97886d8833317468e54a1a844" translate="yes" xml:space="preserve">
          <source>It can be used like:</source>
          <target state="translated">みたいな使い方ができます。</target>
        </trans-unit>
        <trans-unit id="20b05786deb049ffdfeaaf20378e8528160e3d60" translate="yes" xml:space="preserve">
          <source>JsFiddle</source>
          <target state="translated">JsFiddle</target>
        </trans-unit>
        <trans-unit id="2297e46c386deaaf9b0062bd410f54e66bb7fb21" translate="yes" xml:space="preserve">
          <source>Math.floor rounds a number down to the nearest integer</source>
          <target state="translated">Math.floorは、数値を最も近い整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="0ab0041a8e6aee90eced0ae6e90d6f2b7fef1562" translate="yes" xml:space="preserve">
          <source>Math.random()</source>
          <target state="translated">Math.random()</target>
        </trans-unit>
        <trans-unit id="2ae21cff84262ae7b264c8c47139f04c9121bee5" translate="yes" xml:space="preserve">
          <source>Math.random() does not provide cryptographically secure random
  numbers. Do not use them for anything related to security. Use the Web
  Crypto API instead, and more precisely the
  window.crypto.getRandomValues() method.</source>
          <target state="translated">Math.random()は暗号的に安全な乱数を提供しません。セキュリティに関連するものには使用しないでください。代わりに Web Crypto API、より正確には window.crypto.getRandomValues()メソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="1e392cd11d72421a3dd9170ab256fd5edc466b44" translate="yes" xml:space="preserve">
          <source>My method of generating random number between 0 and n, where n &amp;lt;= 10 (n excluded):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0からnまでの乱数を生成する私の方法（n &amp;lt;= 10（nは除外））：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4286cd99ce8be816daa1e9ae54b36eec20d3a6c" translate="yes" xml:space="preserve">
          <source>NOTE: If you pass in a non-integer value or the greater number first you'll get undesirable behavior, but unless anyone requests it I am not going to delve into the argument checking code as its rather far from the intent of the original question.</source>
          <target state="translated">注意:最初に整数以外の値やそれ以上の数を渡すと望ましくない動作をしますが、誰かがそれを要求しない限り、私は引数チェックのコードを掘り下げるつもりはありません、それはむしろ元の質問の意図とはかけ離れています。</target>
        </trans-unit>
        <trans-unit id="37a4c5cb2d6d8959d54285dd2c017ffddb704c6f" translate="yes" xml:space="preserve">
          <source>Not the most elegant solution.. but something quick.</source>
          <target state="translated">最もエレガントな解決策ではないが...手っ取り早いものを。</target>
        </trans-unit>
        <trans-unit id="91bfe5b37bc6ab1ad990dca79284e606d1ee17a5" translate="yes" xml:space="preserve">
          <source>Note: In method one, first I created an array which contains numbers that you need and then randomly put them into another array.
In method two, generate numbers randomly and check those are in the range that you need. Then put it into an array. Here I generated two random numbers and used total of them to maximize the speed of the program by minimizing the failure rate that obtaining a useful number. However adding generated numbers will also give some biassness. So I would recommend my first method to generate random numbers within a specific range.</source>
          <target state="translated">注:方法1では、まず、必要な数字を含む配列を作成し、それをランダムに別の配列に入れます。方法2では、ランダムに数字を生成し、それらが必要な範囲にあることを確認します。そして、それを配列に入れます。ここでは、2つの乱数を生成し、それらの合計を使用して、有用な数字を得るという失敗率を最小限に抑えることで、プログラムの速度を最大化しています。しかし、生成された数値を足していくと、多少の偏りも出てきます。そこで私は、特定の範囲内で乱数を生成する私の最初の方法をお勧めします。</target>
        </trans-unit>
        <trans-unit id="cb08130eded5810e76083347b45678faa927fa4b" translate="yes" xml:space="preserve">
          <source>Now for getting integers, you could use &lt;code&gt;round&lt;/code&gt;, &lt;code&gt;ceil&lt;/code&gt; or &lt;code&gt;floor&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数を取得するために、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;round&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ceil&lt;/code&gt; 、&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;floor&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a548b5c25c8c634abf1486762bcb88eb3ff8520" translate="yes" xml:space="preserve">
          <source>Now let enter into your role:</source>
          <target state="translated">では、あなたの役割に入りましょう。</target>
        </trans-unit>
        <trans-unit id="a70ce40cc80b9b41ca59b97c3398d256b83aa4f8" translate="yes" xml:space="preserve">
          <source>Now, we'd like a number between &lt;code&gt;min&lt;/code&gt; (inclusive) and &lt;code&gt;max&lt;/code&gt; (exclusive):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（包括的）と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（排他的）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間の数値が必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53f127ba26b8272bcd4e1ded817b47bb0a7f8840" translate="yes" xml:space="preserve">
          <source>Or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_number_between_two_values&quot;&gt;any random number&lt;/a&gt; between min (&lt;strong&gt;included&lt;/strong&gt;) and max (&lt;strong&gt;not included&lt;/strong&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_number_between_two_values&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最小（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含まれる&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）と最大（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含まれない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任意の乱数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad6b416d6d1d34e596436f4525173bcf2306945f" translate="yes" xml:space="preserve">
          <source>Or more simply:</source>
          <target state="translated">というか、もっと簡単に言うと</target>
        </trans-unit>
        <trans-unit id="d38e27fc2220139d6dbf4deab9c01199fc284464" translate="yes" xml:space="preserve">
          <source>Or to make it more understandable do this:</source>
          <target state="translated">あるいは、より分かりやすくするために、これを行う。</target>
        </trans-unit>
        <trans-unit id="9844787386b95cee5e89351cfa06e46aac347c85" translate="yes" xml:space="preserve">
          <source>Random whole number between lowest and highest:</source>
          <target state="translated">最下位と最上位の間のランダムな整数。</target>
        </trans-unit>
        <trans-unit id="7a7b329435a12e1060c05cc8d1dbd3ce7d4747ea" translate="yes" xml:space="preserve">
          <source>Return a random number between 1 and 100:</source>
          <target state="translated">1から100までの乱数を返します。</target>
        </trans-unit>
        <trans-unit id="e6f537fde68f8659c8e40a3edc1f461d8ca326ff" translate="yes" xml:space="preserve">
          <source>Return a random number between 1 and 10:</source>
          <target state="translated">1から10までの乱数を返します。</target>
        </trans-unit>
        <trans-unit id="2aa3c1674d9607b8dfa14f917dbc47722e834911" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_integer_between_two_values_inclusive&quot;&gt;integer random number&lt;/a&gt; between min (&lt;strong&gt;included&lt;/strong&gt;) and max (&lt;strong&gt;included&lt;/strong&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;min（&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含まれる&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）とmax（&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;含ま&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れる&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_integer_between_two_values_inclusive&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;整数の乱数を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02f83f4d497839536c41bf7a7dd685190e6d6633" translate="yes" xml:space="preserve">
          <source>Shorten (something) by cutting off the top or end.</source>
          <target state="translated">上や端を切り落として短くすること。</target>
        </trans-unit>
        <trans-unit id="7467d8b898f18814ff675117cbd2598db974218d" translate="yes" xml:space="preserve">
          <source>So consider your range ==&amp;gt; [78, 247]
number of elements of the range = 247 - 78 + 1 = 170; (since both the boundaries are inclusive.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、範囲を考慮してください==&amp;gt; [78、247]範囲の要素数= 247-78 + 1 = 170; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（両方の境界が含まれているためです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6abc7bc70dca192eb312dde2e5e00b035acf11d" translate="yes" xml:space="preserve">
          <source>So for those kind of people, here is my suggestion:</source>
          <target state="translated">そこで、そういう人のために、私が提案するのがこちらです。</target>
        </trans-unit>
        <trans-unit id="a824a7d346fd65894a4a9e36c4ffb5f921a245ed" translate="yes" xml:space="preserve">
          <source>So to generate a random integer between 4 and 8 inclusive, call the above function with the following arguments:</source>
          <target state="translated">そこで、4から8までの範囲の乱数整数を生成するために、以下の引数を指定して上記の関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5ed43ef836201ae3bd7649cf9f0fcecf64a783ca" translate="yes" xml:space="preserve">
          <source>So, in order to find &lt;code&gt;x&lt;/code&gt;, we would do:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を見つけるには、次のようにします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f5283f92529d3c94b076cb76044546ac98b1b241" translate="yes" xml:space="preserve">
          <source>Study the following example and develop it to your needs.</source>
          <target state="translated">次の例を勉強して、自分のニーズに合わせて展開していきましょう。</target>
        </trans-unit>
        <trans-unit id="6417f3d1d08701aebf4122cc8e9fd690f2e0b1ce" translate="yes" xml:space="preserve">
          <source>That was the first function from MDN. The second one, returns an integer between &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt;, both inclusive.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはMDNの最初の機能でした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つ目は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間の整数を返します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="579439c5bed431e0c20059342e009c2fb0aea4e1" translate="yes" xml:space="preserve">
          <source>The code in the previous example gave us an integer in the range &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;top-bottom&lt;/code&gt;, so all we need to do now is add &lt;code&gt;bottom&lt;/code&gt; to that result to get an integer in the range &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; inclusive. :D</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前の例のコードは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;top-bottom&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;範囲の整数を提供した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、これから行う必要が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あるのは、&lt;/font&gt; &lt;code&gt;bottom&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt; &lt;code&gt;top&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;範囲の整数を取得するためにその結果に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bottom&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することだけ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：D&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83cd231e8e5d72c5f2432b9d104e74a3bb28798f" translate="yes" xml:space="preserve">
          <source>The following code uses similar logic, but generates a 32-bit integer instead, because that's the largest common integer size that can be represented by JavaScript's standard &lt;code&gt;number&lt;/code&gt; type. (This could be modified to use &lt;code&gt;BigInt&lt;/code&gt;s if you need a larger range.) Regardless of the chosen range, the fraction of generated values that are rejected will always be less than 0.5, so the expected number of rejections will always be less than 1.0 and usually close to 0.0; you don't need to worry about it looping forever.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のコードは同様のロジックを使用しますが、代わりに32ビット整数を生成します。これは、JavaScriptの標準の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;number&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で表すことができる最大の一般的な整数サイズだから&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、より大きな範囲が必要な場合に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;BigInt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用するように変更できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。）選択した範囲に関係なく、拒否される生成値の割合は常に0.5未満になるため、予想される拒否の数は常に1.0未満になります。通常は0.0に近い。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;永久にループすることを心配する必要はありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="72e438a705548b86132c9ee14f9e2f258119a44c" translate="yes" xml:space="preserve">
          <source>The other answers don't account for the perfectly reasonable parameters of &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. Instead you should use the &lt;code&gt;round&lt;/code&gt;&lt;strong&gt;instead&lt;/strong&gt; of &lt;code&gt;ceil&lt;/code&gt; or &lt;code&gt;floor&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の回答では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完全に妥当なパラメーターは考慮されていません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わり&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;ceil&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt; &lt;code&gt;floor&lt;/code&gt; の&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わり&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;round&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="376a6185fdc94824e5ec0388ede2060682fd1748" translate="yes" xml:space="preserve">
          <source>The reason for taking away 0.5 from the minimum value is because using the minimum value alone would allow you to get an integer that was one more than your maximum value. By taking away 0.5 from the minimum value you are essentially preventing the maximum value from being rounded up.</source>
          <target state="translated">最小値から 0.5 を取り除く理由は、最小値だけを使用すると最大値よりも 1 つ多い整数が得られるからです。最小値から 0.5 を取り除くことで、最大値が切り上げられるのを実質的に防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="eeae1384b2f94311d0148155d4105806167ce513" translate="yes" xml:space="preserve">
          <source>Then you can do:</source>
          <target state="translated">ならば、あなたはできるのです。</target>
        </trans-unit>
        <trans-unit id="b56ba87f17dce9893042f37a77bc1d1de7866b84" translate="yes" xml:space="preserve">
          <source>There are some examples on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random&quot;&gt;Mozilla Developer Network&lt;/a&gt; page:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mozilla Developer Network&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ページに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いくつかの例があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="178ddc426d1866137bcaa6302209e7f6bbb346af" translate="yes" xml:space="preserve">
          <source>This can handle generating upto 20 digit UNIQUE random number</source>
          <target state="translated">これは、20桁の一意の乱数までの生成を処理することができます。</target>
        </trans-unit>
        <trans-unit id="4936ed4237c54e8c291494e9cf986c1a4e043ffa" translate="yes" xml:space="preserve">
          <source>This gives:</source>
          <target state="translated">これが与えてくれます。</target>
        </trans-unit>
        <trans-unit id="2bd76137380368250f8f5e36c7573745c0eef658" translate="yes" xml:space="preserve">
          <source>This multiplies a random number by 6 and then adds 0.5 to it. Next round the number to a positive integer by doing:</source>
          <target state="translated">これは乱数に6を掛けて0.5を足したものです。次に、その数値を正の整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="58f0eb75ef9d67de3d741962d8e88f4a0a364283" translate="yes" xml:space="preserve">
          <source>This round the number to the nearest whole number.</source>
          <target state="translated">これは、最も近い整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="e28d799248c17aa2429b195d2aa50dc6a886d47c" translate="yes" xml:space="preserve">
          <source>To clarify the biased distribution concern, consider the case where we want to generate a value between 1 and 5, but we have a random number generator that produces values between 1 and 16 (a 4-bit value). We want to have the same number of generated values mapping to each output value, but 16 does not evenly divide by 5: it leaves a remainder of 1. So we need to reject 1 of the possible generated values, and only continue when we get one of the 15 lesser values that can be uniformly mapped into our target range. Our behaviour could look like this pseudocode:</source>
          <target state="translated">偏った分布の懸念を明確にするために、1から5の間の値を生成したいが、1から16の間の値(4ビットの値)を生成する乱数発生器がある場合を考えてみましょう。各出力値にマッピングされる生成値の数を同じにしたいのですが、16は5で均等に割られません。 そこで、生成される可能性のある値のうち1つを拒否し、目標範囲に一様にマッピングできる15個の小さい値のうちの1つを得たときにのみ続行する必要があります。私たちの動作は次のような擬似コードのようになります。</target>
        </trans-unit>
        <trans-unit id="f87dc0178678b82ef6b3b2a36805a2317e1e4967" translate="yes" xml:space="preserve">
          <source>To get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues&quot;&gt;crypto-strong&lt;/a&gt; random integer number in ragne [x,y] try</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ragne [x、y]で&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;暗号強度の高い&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;乱数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を取得するには&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="782f3fecc2905c67d821ea55f3ab3fa3c34741c2" translate="yes" xml:space="preserve">
          <source>To get a random number say between 1 and 6, first do:</source>
          <target state="translated">乱数を取得するには、1と6の間に言う、最初に行う。</target>
        </trans-unit>
        <trans-unit id="88166555230f8a727f25cbe7cdfff39beb288192" translate="yes" xml:space="preserve">
          <source>To test this function, and variations of this function, save the below HTML/JavaScript to a file and open with a browser.  The code will produce a &lt;em&gt;graph&lt;/em&gt; showing the distribution of one million function calls.  The code will also record the edge cases, so if the the function produces a value greater than the max, or less than the min, you.will.know.about.it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この関数およびこの関数のバリエーションをテストするには、以下のHTML / JavaScriptをファイルに保存し、ブラウザーで開きます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このコードは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;100万回の関数呼び出しの分布を示す&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グラフ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このコードはエッジケースも記録するため、関数が最大値より大きい、または最小値より小さい値を生成する場合は、you.will.know.about.itになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef6742818769fdd821af6afaacfd030420d29942" translate="yes" xml:space="preserve">
          <source>Uint8Array create a array filled with a number up to 3 digits which would be a maximum of 999. This code is very short.</source>
          <target state="translated">Uint8Arrayは、最大999までの3桁の数字で満たされた配列を作成します。このコードは非常に短いです。</target>
        </trans-unit>
        <trans-unit id="24efecb1591e8702a19a110c5c957b534b5d5541" translate="yes" xml:space="preserve">
          <source>Useful examples (integers):</source>
          <target state="translated">便利な例(整数)。</target>
        </trans-unit>
        <trans-unit id="a9bb3ec8f53520cb9271d0aa62ac967f8e15ad26" translate="yes" xml:space="preserve">
          <source>Using following code you can generate array of random numbers, without repeating, in a given range.</source>
          <target state="translated">以下のコードを使用すると、与えられた範囲内で、繰り返しのない乱数の配列を生成することができます。</target>
        </trans-unit>
        <trans-unit id="d277513f75bf9f6eb65f55ecb05230ebd7d86f1a" translate="yes" xml:space="preserve">
          <source>We are returning a function (borrowing from functional programming) that when called, will return a random integer between the the values &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt;, inclusive. We say 'inclusive' because we want to include both bottom and top in the range of numbers that can be returned. This way, &lt;code&gt;getRandomizer( 1, 6 )&lt;/code&gt; will return either 1, 2, 3, 4, 5, or 6.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数（関数型プログラミングから借用）を返します。呼び出されると、値&lt;/font&gt;&lt;/font&gt; &lt;code&gt;bottom&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;top&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間のランダムな整数を返します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返される数値の範囲に最下部と最上位の両方を含めるため、「包括的」と言います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このように、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;getRandomizer( 1, 6 )&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1、2、3、4、5&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、または6のいずれかを返します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="232d8338931cfa100f6acec33c0e8a155f8039f7" translate="yes" xml:space="preserve">
          <source>We can use the &lt;code&gt;Math.random&lt;/code&gt; to get the correspondent in the [min, max) interval. But, first we should factor a little bit the problem by subtracting &lt;code&gt;min&lt;/code&gt; from the second interval:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Math.random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、[min、max）間隔&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コレスポンデント&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を取得&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、最初に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2番目の間隔から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引くことで問題を少し因数分解する必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3d45f87d7fd41196bed9c85de3bbecc2b6480ce" translate="yes" xml:space="preserve">
          <source>We do execute &lt;code&gt;high++&lt;/code&gt; because&lt;code&gt;Math.random()&lt;/code&gt; generates a random number between 0, (inclusive), and 1(exclusive) The one being excluded, means we must increase the high by one before executing any math. We then subtract low from high, giving us the highest number to generate - low, then +low, bringing high back to normal, and making the lowest number atleast low. then we return the resulting number</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちは、実行します&lt;/font&gt;&lt;/font&gt; &lt;code&gt;high++&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Math.random()&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;手段は、我々はすべての数学を実行する前に1による高を増やす必要があり、一つは除外される（包括的）0の間の乱数を生成し、1（排他的）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、highからlowを差し引いて、生成する最も高い数-low、次に+ lowを与え、highを通常に戻し、最も低い数を少なくともlowにします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、結果の数値を返します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0ef5f5d0529223bfe7f363afadeb11626e4f0871" translate="yes" xml:space="preserve">
          <source>We may now apply &lt;code&gt;Math.random&lt;/code&gt; and then calculate the correspondent. Let's choose a random number:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Math.random&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;適用してから、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コレスポンデント&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を計算します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;乱数を選択しましょう：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94d782ea968d0d44c9c21051deaee50541a8be9f" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Math.floor(Math.random() * (max - min +1)) + min&lt;/code&gt; you have a perfectly even distribution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Math.floor(Math.random() * (max - min +1)) + min&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、あなたは完全に均一な分布を持っています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e38dd9c04fc2f1e63f64e1350d0d43df5c42bc3" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;max&lt;/code&gt; excluded from the interval, it has an even less chance to roll than &lt;code&gt;min&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;max&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間隔から除外し、それがよりロールにさえ少ないチャンスがある&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d95ce43e8234f21b5bed17bc3cdd8bf4234652e4" translate="yes" xml:space="preserve">
          <source>You can you this code snippet,</source>
          <target state="translated">あなたはこのコードスニペットを使用することができます。</target>
        </trans-unit>
        <trans-unit id="e69a2dcd03771204b61fbc7e72c6e0920275b4bf" translate="yes" xml:space="preserve">
          <source>You can't use &lt;code&gt;ceil()&lt;/code&gt; and &lt;code&gt;-1&lt;/code&gt; in that equation because &lt;code&gt;max&lt;/code&gt; now had a slightly less chance to roll, but you can roll the (unwanted) &lt;code&gt;min-1&lt;/code&gt; result too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;max&lt;/code&gt; がローリングする&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機会が少し少なくなった&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、その方程式で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ceil()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;-1&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用することはできませ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;んが、（不要な）&lt;/font&gt; &lt;code&gt;min-1&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果もローリングできます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90bf8b58c8b635832d6203aa81538158af164ab0" translate="yes" xml:space="preserve">
          <source>You could use &lt;code&gt;Math.round(Math.random() * (max - min)) + min&lt;/code&gt;, this however gives a non-even distribution. Both, &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; only have approximately half the chance to roll:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Math.round(Math.random() * (max - min)) + min&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用できますが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、これは不均一な分布になります。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;min&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;max&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がロールする機会のおよそ半&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;分&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかありません：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="154aa6ff55294e465f4674791cb7ca84fb23cbff" translate="yes" xml:space="preserve">
          <source>You've asked numbers among specific range. (In this case you are biased among that range. - By taking a number from [1,6] by roll a die, then you are biased into [1,6] but still it is a random if and only if die is unbiased.)</source>
          <target state="translated">あなたは特定の範囲の数字を聞いています。(この場合、その範囲に偏っています。-1,6]の中からダイスを振って数字を取ると、[1,6]に偏ってしまいますが、ダイスが偏っていなければランダムです)。</target>
        </trans-unit>
        <trans-unit id="e3b8c15b8a563c2dc9d9bb31a1686593e12965a8" translate="yes" xml:space="preserve">
          <source>breakdown:</source>
          <target state="translated">breakdown:</target>
        </trans-unit>
        <trans-unit id="b0372aba9f2fd57ed9ce97e259a48d786eacdc57" translate="yes" xml:space="preserve">
          <source>if it helps use it, here it is:</source>
          <target state="translated">それを使うのに役立つならば、ここにあります。</target>
        </trans-unit>
        <trans-unit id="3aefc01c5a206648cccd1546ca2d852f31067ba8" translate="yes" xml:space="preserve">
          <source>random(min,max) generates a random number between min (inclusive) and max (exclusive)</source>
          <target state="translated">random(min,max)は、min (含む)と max (含む)の間の乱数を生成します。</target>
        </trans-unit>
        <trans-unit id="3c3cc46cb2cc808d3c351671a3f11024026bd7c6" translate="yes" xml:space="preserve">
          <source>this is my take on a random number in a range, as in I wanted to get a random number within a range of base to exponent.  e.g. base = 10, exponent = 2, gives a random number from 0 to 100, ideally, and so on.</source>
          <target state="translated">これは、範囲内の乱数についての私のテイクです、私はベースから指数の範囲内の乱数を取得したかったように。</target>
        </trans-unit>
        <trans-unit id="d99f66b852fef055214f1f6c4e0864afe932b13e" translate="yes" xml:space="preserve">
          <source>usage:</source>
          <target state="translated">usage:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
