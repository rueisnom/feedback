<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/156503">
    <body>
      <group id="156503">
        <trans-unit id="ac4f0a7323985e5b1b34d8b5009e82994b2f3ce8" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://blog.michael.gr/2014/09/assertions-and-testing.html&quot;&gt;taken from my blog&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.michael.gr/2014/09/assertions-and-testing.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;взято из моего блога&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="290a64fb9953b1c0198244a5ec98e0ad73ba504f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://guide.agilealliance.org/guide/gwt.html&quot;&gt;BDD&lt;/a&gt; Style Solution: &lt;a href=&quot;http://junit.org/&quot;&gt;JUnit 4&lt;/a&gt; + &lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;Catch Exception&lt;/a&gt; + &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://guide.agilealliance.org/guide/gwt.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Решение в стиле &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BDD&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; + &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Catch Exception&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; + &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5754759f6882a2dd3f1ed436fcc48c49f176cddc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/junit-team/junit4/pull/1519&quot;&gt;Pull request #1519&lt;/a&gt;: Deprecate ExpectedException</source>
          <target state="translated">&lt;a href=&quot;https://github.com/junit-team/junit4/pull/1519&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Запрос на извлечение № 1519&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : устареть ExpectedException&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0f40592619890fd725bb6ead232e4b9cd569490" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Disclosure: I am the author of the blog and the project.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Раскрытие: я являюсь автором блога и проекта.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b253bf5235ae0bb6f4fdbb005994951698b95bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Regardless of Junit 4 or JUnit 5.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Независимо от Junit 4 или JUnit 5.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59f9677a94d544d476e1640278adb3fce10336a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This answer has been copied from &lt;a href=&quot;https://stackoverflow.com/a/17428439/48136&quot;&gt;another question&lt;/a&gt; that don't have the same visibility, I am the same author.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот ответ был скопирован с &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/17428439/48136&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;другого вопроса,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который не имеет такой же видимости, я тот же автор.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="623ed34c81e1004fd240eefb41008364ffd6d47e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt; Now that JUnit 5 and JUnit 4.13 have been released, the best option would be to use &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;code&gt;Assertions.assertThrows()&lt;/code&gt;&lt;/a&gt;  (for JUnit 5) and &lt;code&gt;Assert.assertThrows()&lt;/code&gt; (for JUnit 4.13). See &lt;a href=&quot;https://stackoverflow.com/a/46514550/95725&quot;&gt;my other answer&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Изменить:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Теперь, когда JUnit 5 и JUnit 4.13 были выпущены, лучший вариант будет использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt; &lt;code&gt;Assertions.assertThrows()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (для JUnit 5) и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (для JUnit 4.13). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/46514550/95725&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;мой другой ответ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для деталей.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8880e6bdfd765c7b3296460eef38ff4c60b09481" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original answer using JUnit 4.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Оригинальный ответ с использованием JUnit 4.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="868de85256632769009d40f6cfc65f108023cb9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Taking all into account if you don't want to use the catch-exception tool, I will recommend the old good way of the &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block, at least up to the JDK7. And for JDK 8 users you might prefer to use AssertJ as it offers may more than just asserting exceptions.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Принимая все во внимание , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если вы не хотите использовать инструмент всеобъемлющей исключение, я буду рекомендовать старый добрый путь &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; блок, по крайней мере , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;до JDK7. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;А для пользователей JDK 8 вы можете предпочесть использовать AssertJ, поскольку он предлагает больше, чем просто утверждение исключений.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2805dde21a92f446dad6c1cc18026e4ff4c619e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; JUnit5 has an improvement for exceptions testing: &lt;code&gt;assertThrows&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обновление:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; улучшено тестирование исключений в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;assertThrows&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a7e27fb366ac377812f56dcfb421d99fc7e46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;the long story&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;длинная история&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f79426c0e9f0d9b0c56f8d20a3f95a295aa85e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;tl;dr&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2238c39467a97fdf461abd1aa062f8f00e68f8b6" translate="yes" xml:space="preserve">
          <source>A rapid example taken from the home page :</source>
          <target state="translated">Быстрый пример,взятый с главной страницы :</target>
        </trans-unit>
        <trans-unit id="a78a385843db0c0e9545953cb015985c862f4535" translate="yes" xml:space="preserve">
          <source>A similar method will be added to &lt;code&gt;org.junit Assert&lt;/code&gt; in JUnit 4.13.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Аналогичный метод будет добавлен в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;org.junit Assert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в JUnit 4.13.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39a42edfd18f9dd21aa16f671f8f69d40b35284f" translate="yes" xml:space="preserve">
          <source>Additionally to what &lt;a href=&quot;https://stackoverflow.com/users/95725/namshubwriter&quot;&gt;NamShubWriter&lt;/a&gt; has said, make sure that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В дополнение к тому, что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сказал &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/95725/namshubwriter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NamShubWriter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , убедитесь, что:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a106ef91e7d0bdb2874cb470ed5142532c53159" translate="yes" xml:space="preserve">
          <source>Allows you to check for multiple exceptions within a single test method</source>
          <target state="translated">Позволяет проверять на наличие нескольких исключений в рамках одного метода тестирования</target>
        </trans-unit>
        <trans-unit id="3ee667c80ec0e8d2618521d68eef1704227c70bc" translate="yes" xml:space="preserve">
          <source>Allows your tests to follow Arrange-Act-Assert</source>
          <target state="translated">Позволяет вашим тестам следовать Arrange-Act-Assert</target>
        </trans-unit>
        <trans-unit id="9f42937728e8ffb93aa836de3c186f493581ac3e" translate="yes" xml:space="preserve">
          <source>Also as the expectation is placed around in the method, depending on how the tested code is written then the wrong part of the test code can throw the exception, leading to false-positive test and I'm not sure that &lt;em&gt;PMD&lt;/em&gt;, &lt;em&gt;findbugs&lt;/em&gt; or &lt;em&gt;Sonar&lt;/em&gt; will give hints on such code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, поскольку в методе &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;заложено&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ожидание, в зависимости от того, как написан проверенный код, неправильная часть тестового кода может вызвать исключение, что приведет к ложноположительному тесту, и я не уверен, что &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PMD&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;findbugs&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sonar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; даст подсказки по такому коду.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61ded298c5ae4e58509f5a15e9ea95197e670406" translate="yes" xml:space="preserve">
          <source>Also if you remember name clash with &lt;code&gt;Matcher&lt;/code&gt; or &lt;code&gt;Assert&lt;/code&gt;, be prepared to meet the same clash with &lt;code&gt;Assertions&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Также, если вы помните столкновение имен с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , будьте готовы встретить такое же столкновение с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assertions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b4ef4920ec8f7979bf4c3b35600408b4d5ab39f" translate="yes" xml:space="preserve">
          <source>Also, see this &lt;a href=&quot;https://github.com/junit-team/junit4/issues/706#issuecomment-21385116&quot;&gt;comment&lt;/a&gt; issue on JUnit of the author of &lt;code&gt;ExpectedException&lt;/code&gt;. &lt;a href=&quot;https://github.com/junit-team/junit4/wiki/4.13-Release-Notes&quot;&gt;JUnit 4.13-beta-2&lt;/a&gt; even deprecates this mechanism:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, смотрите этот &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вопрос &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/issues/706#issuecomment-21385116&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;комментария&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на JUnit автора &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/wiki/4.13-Release-Notes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4.13-beta-2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; даже не поддерживает этот механизм:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ca5a3f48182f45b55ef86708c840c2962847e8f" translate="yes" xml:space="preserve">
          <source>And a sample test with &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И пример теста с &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c91f2901b306dda9da2eb00073392db603faa2ef" translate="yes" xml:space="preserve">
          <source>Apply judgement.</source>
          <target state="translated">Применить суждение.</target>
        </trans-unit>
        <trans-unit id="22e6b61dd37bb9bc47b545c6548ca6a137afdd51" translate="yes" xml:space="preserve">
          <source>As answered before, there are many ways of dealing with exceptions in JUnit. But with Java 8 there is another one: using Lambda Expressions. With Lambda Expressions we can achieve a syntax like this:</source>
          <target state="translated">Как уже было сказано,существует множество способов работы с исключениями в JUnit.Но с Java 8 есть еще один:использование Lambda Expressions.С помощью Lambda Expressions мы можем достичь такого синтаксиса:</target>
        </trans-unit>
        <trans-unit id="77132385aa3216bd055914838183a41144b302bc" translate="yes" xml:space="preserve">
          <source>As the description of the project says, it let a coder write in a fluent line of code catching the exception and offer this exception for the latter assertion. And you can use any assertion library like &lt;a href=&quot;https://github.com/hamcrest/JavaHamcrest&quot;&gt;Hamcrest&lt;/a&gt; or &lt;a href=&quot;https://github.com/joel-costigliola/assertj-core&quot;&gt;AssertJ&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как говорится в описании проекта, он позволяет кодировщику писать в беглой строке кода, перехватывающей исключение, и предлагает это исключение для последнего утверждения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И вы можете использовать любую библиотеку утверждений, такую ​​как &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/hamcrest/JavaHamcrest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hamcrest&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/joel-costigliola/assertj-core&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b365421cacb55208468677b2581f5f5d42a3a77" translate="yes" xml:space="preserve">
          <source>As you can see the code is really straightforward, you catch the exception on a specific line, the &lt;code&gt;then&lt;/code&gt; API is an alias that will use AssertJ APIs (similar to using &lt;code&gt;assertThat(ex).hasNoCause()...&lt;/code&gt;). &lt;em&gt;At some point the project relied on FEST-Assert the ancestor of AssertJ&lt;/em&gt;. &lt;strong&gt;EDIT:&lt;/strong&gt; It seems the project is brewing a Java 8 Lambdas support.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как видите, код действительно прост, вы ловите исключение в определенной строке, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;then&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; API-интерфейс - это псевдоним, который будет использовать API-интерфейсы AssertJ (аналогично использованию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThat(ex).hasNoCause()...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В какой-то момент проект опирался на FEST-Assert, предка AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;РЕДАКТИРОВАТЬ:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Похоже, что проект готовит поддержку Java 8 Lambdas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17eb62c1e2363b2484160950dd18ffdf3fe6932c" translate="yes" xml:space="preserve">
          <source>As you noticed &lt;code&gt;assertEquals&lt;/code&gt; is still returning &lt;code&gt;void&lt;/code&gt;, and as such doesn't allow chaining assertions like AssertJ.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как вы заметили, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertEquals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по-прежнему возвращает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;void&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и поэтому не позволяет объединять утверждения типа AssertJ.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5893237671855e1d51aa3743002c83c8e311c572" translate="yes" xml:space="preserve">
          <source>At the time of this writing, it is noteworthy to say this library is based on Mockito 1.x as it creates a mock of the tested object behind the scene. As Mockito is still not updated &lt;strong&gt;this library cannot work with final classes or final methods&lt;/strong&gt;. And even if it was based on Mockito 2 in the current version, this would require to declare a global mock maker (&lt;code&gt;inline-mock-maker&lt;/code&gt;), something that may not what you want, as this mock maker has different drawbacks that the regular mock maker.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;На момент написания этой статьи стоит отметить, что эта библиотека основана на Mockito 1.x, поскольку она создает макет тестируемого объекта за сценой. Поскольку Mockito все еще не обновлен, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;эта библиотека не может работать с финальными классами или финальными методами&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . И даже если бы он был основан на Mockito 2 в текущей версии, для этого потребовалось бы объявить глобального создателя макетов ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;inline-mock-maker&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), что может не соответствовать вашему желанию, поскольку у этого создателя макетов есть другие недостатки, чем у обычного макета мейкера.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae53af5734737911244e91d3faf912aa179e5bb5" translate="yes" xml:space="preserve">
          <source>Be careful using expected exception, because it only asserts that the &lt;strong&gt;method&lt;/strong&gt; threw that exception, not a &lt;strong&gt;particular line of code&lt;/strong&gt; in the test.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Будьте осторожны, используя ожидаемое исключение, поскольку оно только утверждает, что &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вызвал это исключение, а не &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;конкретную строку кода&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в тесте.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="159af34715c3b25e86401bbd9bf13ed264fe0b88" translate="yes" xml:space="preserve">
          <source>Benefits:</source>
          <target state="translated">Benefits:</target>
        </trans-unit>
        <trans-unit id="a53d89f9e528ba9d9abec0dd33db18c2bf0e46c3" translate="yes" xml:space="preserve">
          <source>Built into JUnit</source>
          <target state="translated">Встроенный в JUnit</target>
        </trans-unit>
        <trans-unit id="cf837c922431bdae0f5c5706ff72c2eb45a17c9c" translate="yes" xml:space="preserve">
          <source>But these ways are not so elegant and don't mix well &lt;em&gt;readability wise&lt;/em&gt; with other tools. Moreover, JUnit tooling does have some pitfalls.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но эти способы не так элегантно и не хорошо перемешать &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;читаемость мудрого&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с другими инструментами. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, инструменты JUnit имеют некоторые подводные камни.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="476168995c5223b4afbfab0c0fbaa18d09ec7729" translate="yes" xml:space="preserve">
          <source>Checks for an exception being thrown by a specific set of lines within your test method instead of any unknown line in the entire test method</source>
          <target state="translated">Проверяет,что исключение выбрасывается определенным набором строк в вашем методе тестирования,а не неизвестной строкой во всем методе тестирования.</target>
        </trans-unit>
        <trans-unit id="87c3324dc481b98228acd94f1e69c063b010597a" translate="yes" xml:space="preserve">
          <source>Concise</source>
          <target state="translated">Concise</target>
        </trans-unit>
        <trans-unit id="1aeb822597cb413281743302035230681748156e" translate="yes" xml:space="preserve">
          <source>Currently, this library has two shortcomings :</source>
          <target state="translated">В настоящее время эта библиотека имеет два недостатка:</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="f5dcba5584f96d0ae65ccf7c2c5dc2cde091a646" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;not&lt;/strong&gt; do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; делать этого:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7f53cad4206ad9a3a7195adc40f347208ee8a8c" translate="yes" xml:space="preserve">
          <source>Does &lt;em&gt;not&lt;/em&gt; depend on any JUnit magic</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Разве &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; зависит ни от какой JUnit магии&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b92a3bf38a7f45b652216a09a601e6f90354c462" translate="yes" xml:space="preserve">
          <source>Even the expected exception is placed before the test statement, it breaks your reading flow if the tests follow BDD or AAA.</source>
          <target state="translated">Даже ожидаемое исключение помещается перед тестовым заявлением,оно прерывает ваш поток чтения,если тесты следуют за BDD или AAA.</target>
        </trans-unit>
        <trans-unit id="05d179f3167c5215f134c6f00b91c9d96ceba30b" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;http://jakegoulding.com/blog/2012/09/26/be-careful-when-using-junit-expected-exceptions/&quot;&gt;this&lt;/a&gt; blog post clearly illustrates how to assert that a certain exception is thrown.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Наконец, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jakegoulding.com/blog/2012/09/26/be-careful-when-using-junit-expected-exceptions/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;этот&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; блог ясно иллюстрирует, как утверждать, что выбрасывается определенное исключение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fd5b2df2f6110de30a10de9243155d07b8bc650" translate="yes" xml:space="preserve">
          <source>For JUnit5 and 4.13 see answer &lt;a href=&quot;https://stackoverflow.com/a/2935935/2986984&quot;&gt;https://stackoverflow.com/a/2935935/2986984&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для JUnit5 и 4.13 см. Ответ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/2935935/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/2935935/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d86fbb6b66eb965b5c6ba6b4fa8074a5722ecae5" translate="yes" xml:space="preserve">
          <source>Have a look at this blog post describing this technique: &lt;a href=&quot;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&quot;&gt;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Взгляните на этот пост в блоге, описывающий эту технику: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4663e026aeb4a4a6ff5a2439baf3af5f71df8761" translate="yes" xml:space="preserve">
          <source>Here is a utility function that I wrote:</source>
          <target state="translated">Вот утилита,которую я написал:</target>
        </trans-unit>
        <trans-unit id="566f06d4144450c109542ea6f372a33d3fcabbae" translate="yes" xml:space="preserve">
          <source>Here is an example that  verifies an exception is thrown, and uses &lt;a href=&quot;http://google.github.io/truth/&quot;&gt;Truth&lt;/a&gt; to  make assertions on the exception message:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот пример, который проверяет, что исключение выдается, и использует &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://google.github.io/truth/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Truth,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы сделать утверждения в сообщении об исключении:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c20948611fb107b9082c98838db42932ee31705" translate="yes" xml:space="preserve">
          <source>Here is another way to check method thrown correct exception or not.</source>
          <target state="translated">Вот еще один способ проверить,правильно ли выбрасывается исключение или нет.</target>
        </trans-unit>
        <trans-unit id="d1fb5110d4389a44c06e3d0b3a6e083a5ca00645" translate="yes" xml:space="preserve">
          <source>How about this:  Catch a very general exception, make sure it makes it out of the catch block, then assert that the class of the exception is what you expect it to be.  This assert will fail if a) the exception is of the wrong type (eg. if you got a Null Pointer instead) and b) the exception wasn't ever thrown.</source>
          <target state="translated">Как насчет этого:Поймать очень общее исключение,убедиться,что оно выходит из блока catch,затем утверждать,что класс исключения-это то,чего вы ожидаете.Это утверждение будет неудачным,если a)исключение не того типа (например,если вместо него вы получили Null Pointer)и b)исключение никогда не было брошено.</target>
        </trans-unit>
        <trans-unit id="9262c633c91a4bd03ad15de46995d2a642ff8ae5" translate="yes" xml:space="preserve">
          <source>How can I use JUnit4 idiomatically to test that some code throws an exception?</source>
          <target state="translated">Как я могу идиоматически использовать JUnit4 для проверки того,что какой-то код бросает исключение?</target>
        </trans-unit>
        <trans-unit id="863a65c205c7cc8fb151288cede87bfdd635aabb" translate="yes" xml:space="preserve">
          <source>How do you assert that a certain exception is thrown in JUnit 4 tests</source>
          <target state="translated">Как вы утверждаете,что определенное исключение выбрасывается в тесты JUnit 4.</target>
        </trans-unit>
        <trans-unit id="d5c540da041f46b389b3afbcb42a7c109b42dcca" translate="yes" xml:space="preserve">
          <source>I recall that there is an annotation or an Assert.xyz or &lt;em&gt;something&lt;/em&gt; that is far less kludgy and far more in-the-spirit of JUnit for these sorts of situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я вспоминаю, что есть аннотация или Assert.xyz или &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что-&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; то гораздо менее хитрое и гораздо более в духе JUnit для подобных ситуаций.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a226ca101285f0ffe5659e5a8cfd9c466764dda" translate="yes" xml:space="preserve">
          <source>I recomend library &lt;code&gt;assertj-core&lt;/code&gt; to handle exception in junit test</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я рекомендую библиотеку &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertj-core&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для обработки исключений в тесте junit&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c6df674e157d6f6b7a9f13f3c2d5e695d4561ad" translate="yes" xml:space="preserve">
          <source>I tend to use this for testing parameter validation, because such methods are usually very simple, but more complex tests might better be served with:</source>
          <target state="translated">Я склонен использовать это для проверки параметров,потому что такие методы,как правило,очень простые,но более сложные тесты,возможно,лучше обслуживать:</target>
        </trans-unit>
        <trans-unit id="0f7cb26e6a9e00852055f7614f50b20c7d36d39b" translate="yes" xml:space="preserve">
          <source>I tried many of the methods here, but they were either complicated or didn't quite meet my requirements.  In fact, one can write a helper method quite simply:</source>
          <target state="translated">Здесь я перепробовал многие методы,но они либо были сложными,либо не совсем соответствовали моим требованиям.На самом деле,написать помощник можно довольно просто:</target>
        </trans-unit>
        <trans-unit id="ae55a497d0cbb8c4dd9cc20fd9835e8787fde7a4" translate="yes" xml:space="preserve">
          <source>I'd like to conclude that today (2017-03-03) &lt;strong&gt;AssertJ&lt;/strong&gt;'s ease of use, discoverable API, the rapid pace of development and as a &lt;em&gt;de facto&lt;/em&gt; test dependency is the best solution with JDK8 regardless of the test framework (JUnit or not), prior JDKs should instead rely on &lt;strong&gt;&lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt;&lt;/strong&gt; blocks even if they feel clunky.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я хотел бы сделать вывод, что сегодня (2017-03-03) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;простота использования &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , обнаруживаемый API, быстрые темпы разработки и &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;фактическая&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; зависимость от тестирования - лучшее решение с JDK8 независимо от среды тестирования (JUnit или нет), предыдущие JDK вместо этого должны полагаться на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;блоки &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; ,&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; даже если они чувствуют себя неуклюже.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de5a5ee34f8bec606757a8c0af6f407f5b874d1f" translate="yes" xml:space="preserve">
          <source>IMHO, the best way to check for exceptions in JUnit is the try/catch/fail/assert pattern:</source>
          <target state="translated">IMHO,лучший способ проверки исключений в JUnit-это шаблон trycatchfailassert:</target>
        </trans-unit>
        <trans-unit id="11704c26d135105fc7d451f44d50b983156f0c24" translate="yes" xml:space="preserve">
          <source>If the test needs to check additional things on the exception like the cause or the message (good exception messages are really important, having a precise exception type may not be enough).</source>
          <target state="translated">Если тесту нужно проверить дополнительные вещи на исключении,такие как причина или сообщение (хорошие сообщения об исключениях действительно важны,иметь точный тип исключения может быть недостаточно).</target>
        </trans-unit>
        <trans-unit id="7687b060e4223314a18b9f9327703a1008129be9" translate="yes" xml:space="preserve">
          <source>If you haven't migrated to JUnit 5, but can use JUnit 4.7, you can use the &lt;a href=&quot;http://junit.org/javadoc/latest/org/junit/rules/ExpectedException.html&quot;&gt;&lt;code&gt;ExpectedException&lt;/code&gt;&lt;/a&gt; Rule:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы не мигрировали в JUnit 5, но можете использовать JUnit 4.7, вы можете использовать &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;правило &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/javadoc/latest/org/junit/rules/ExpectedException.html&quot;&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d2b9bcd34c3748f1d8928a45a07e53fe8edb59c" translate="yes" xml:space="preserve">
          <source>If you see the below example I am testing 3 things on the exception.</source>
          <target state="translated">Если вы видите нижеприведенный пример,то я тестирую 3 вещи на исключение.</target>
        </trans-unit>
        <trans-unit id="46ea585a583802be1e276665cc9d50e4de00655f" translate="yes" xml:space="preserve">
          <source>If you use assertJ or google-truth, see answer  &lt;a href=&quot;https://stackoverflow.com/a/41019785/2986984&quot;&gt;https://stackoverflow.com/a/41019785/2986984&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы используете assertJ или google-true, см. Ответ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/41019785/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/41019785/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00367e4b722b6ccedf9944b521ce2685fa5c9ab4" translate="yes" xml:space="preserve">
          <source>If you would like a solution which:</source>
          <target state="translated">Если вам нужно решение,которое:</target>
        </trans-unit>
        <trans-unit id="302b45d2449bdddbeebd957fa070e2e732789402" translate="yes" xml:space="preserve">
          <source>In JUnit 4 or later you can test the exceptions as follows</source>
          <target state="translated">В JUnit 4 или более поздней версии вы можете протестировать исключения следующим образом.</target>
        </trans-unit>
        <trans-unit id="b5efd7acfb583a66693b9c80bf1eea0d4690b82d" translate="yes" xml:space="preserve">
          <source>In java 8, like this:</source>
          <target state="translated">На яве 8,вот так:</target>
        </trans-unit>
        <trans-unit id="b08b3778cd534f6d51e3183c88e98f296ad3e40e" translate="yes" xml:space="preserve">
          <source>In my case I always get RuntimeException from db, but messages differ. And exception need to be handled respectively. Here is how I tested it:</source>
          <target state="translated">В моем случае я всегда получаю RuntimeException из db,но сообщения отличаются.И исключение должно быть обработано соответственно.Вот как я это тестировал:</target>
        </trans-unit>
        <trans-unit id="96c2d16d18910393fa34dad4ce434a930253bd9f" translate="yes" xml:space="preserve">
          <source>It depends on the JUnit version and what assert libraries you use.</source>
          <target state="translated">Это зависит от версии JUnit и от того,какие библиотеки вы используете.</target>
        </trans-unit>
        <trans-unit id="130a6315b3a2b4c3e8e4014766f40a41a9e00f0b" translate="yes" xml:space="preserve">
          <source>It is possible to write yourself a &lt;em&gt;do it yourself&lt;/em&gt;&lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block or use the JUnit tools (&lt;code&gt;@Test(expected = ...)&lt;/code&gt; or the &lt;code&gt;@Rule ExpectedException&lt;/code&gt; JUnit rule feature).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Можно написать сам, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сделай сам, &lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; блок или используй инструменты JUnit ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Rule ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; правила JUnit &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Rule ExpectedException&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d669d60063d11892348f1302cf5a67ba91e277d" translate="yes" xml:space="preserve">
          <source>It requires yet another test dependency.</source>
          <target state="translated">Требуется еще одна тестовая зависимость.</target>
        </trans-unit>
        <trans-unit id="6e07a2abf8b6da35e5ed56b005678e231eb0ddbd" translate="yes" xml:space="preserve">
          <source>It's better than &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; because it guarantees the expected line in the test threw the exception and lets you check more details about the exception, such as message, easier:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это лучше, чем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что он гарантирует, что ожидаемая строка в тесте вызвала исключение, и позволяет вам проще проверить более подробную информацию об исключении, например, сообщение:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fedd70fe83bd74c52bbf7830f12d3cce2a1b714" translate="yes" xml:space="preserve">
          <source>JUnit 5 Solution</source>
          <target state="translated">JUnit 5 Решение</target>
        </trans-unit>
        <trans-unit id="ea78bb209975d1b4a8ebd3cf2176f308609e1119" translate="yes" xml:space="preserve">
          <source>JUnit Test-FAQ</source>
          <target state="translated">Тест-FAQ JUnit</target>
        </trans-unit>
        <trans-unit id="f4abca0c4e0ac83f6394860d23d90531a6c3df49" translate="yes" xml:space="preserve">
          <source>JUnit has built-in support for this, with an &lt;a href=&quot;http://junit.sourceforge.net/doc/faq/faq.htm#tests_7&quot;&gt;&quot;expected&quot; attribute&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit имеет встроенную поддержку для этого с &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.sourceforge.net/doc/faq/faq.htm#tests_7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;атрибутом &amp;laquo;ожидаемый&amp;raquo;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c8e2f571b72489f4d21848f50ae8c6d743aeaac" translate="yes" xml:space="preserve">
          <source>Java 8 solution</source>
          <target state="translated">решение Java 8</target>
        </trans-unit>
        <trans-unit id="d1716c83a4e87e5736184ef1d8f87f6bf9dadf13" translate="yes" xml:space="preserve">
          <source>Junit4 solution with Java8 is to use this function:</source>
          <target state="translated">Решение Junit4 с Java8 должно использовать эту функцию:</target>
        </trans-unit>
        <trans-unit id="d4c968683e3014c4712c42df2532ce3db614d0e1" translate="yes" xml:space="preserve">
          <source>Just make a Matcher that can be turned off and on, like this:</source>
          <target state="translated">Просто сделай Мэтчер,который можно выключить и включить,вот так:</target>
        </trans-unit>
        <trans-unit id="5c128b2812dee7ad7e93fcd6778fc2625e37df03" translate="yes" xml:space="preserve">
          <source>Maven/Gradle instructions here.</source>
          <target state="translated">Здесь инструкции MavenGradle.</target>
        </trans-unit>
        <trans-unit id="16f8a33046e5c11f07939264e9c73b83af105d79" translate="yes" xml:space="preserve">
          <source>More Infos about JUnit 5 on &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Больше информации о JUnit 5 на &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89b690e38cd9f0169d24872b81a24c39ad2d7b13" translate="yes" xml:space="preserve">
          <source>My solution using Java 8 lambdas:</source>
          <target state="translated">Мое решение с использованием Java 8 lambdas:</target>
        </trans-unit>
        <trans-unit id="fe6c8a91491b2b81e7f47278f66011c22bb146e8" translate="yes" xml:space="preserve">
          <source>Note that the only limitation is to use a &lt;code&gt;final&lt;/code&gt; object reference in lambda expression.
This solution allows to continue test assertions instead of expecting thowable at method level using &lt;code&gt;@Test(expected = IndexOutOfBoundsException.class)&lt;/code&gt; solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что единственным ограничением является использование &lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ссылки на объект в лямбда-выражении. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это решение позволяет продолжить тестовые утверждения вместо ожидания thowable на уровне метода, используя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2c350143bda17ca6a735ac4858157df1e936ed9" translate="yes" xml:space="preserve">
          <source>Now that JUnit 5 and JUnit 4.13 have been released, the best option would be to use &lt;code&gt;Assertions.assertThrows()&lt;/code&gt;  (for JUnit 5) and &lt;code&gt;Assert.assertThrows()&lt;/code&gt; (for JUnit 4.13). See
the &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;Junit 5 User Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь, когда JUnit 5 и JUnit 4.13 были выпущены, лучшим вариантом будет использование &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assertions.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (для JUnit 5) и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (для JUnit 4.13). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;руководство пользователя Junit 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64aa4d557cc62d15e8de600185aa21dbf6018da0" translate="yes" xml:space="preserve">
          <source>Reference :</source>
          <target state="translated">Ссылка :</target>
        </trans-unit>
        <trans-unit id="7b56f61887000c5b1368e687dc53dc5dbe745cdc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.infoq.com/news/2009/07/junit-4.7-rules&quot;&gt;this article&lt;/a&gt; for details</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.infoq.com/news/2009/07/junit-4.7-rules&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;эту статью&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для деталей&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3141ae0b8b1e342d56b99bf22862873fadd178c5" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;expected&lt;/code&gt; parameter &lt;code&gt;@Test(expected = FileNotFoundException.class)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Установите &lt;/font&gt;&lt;/font&gt; &lt;code&gt;expected&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; параметр &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = FileNotFoundException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cd8fb51f0a9d9f03dedbb680b4afe34a4ae3390" translate="yes" xml:space="preserve">
          <source>So these above options have all their load of caveats, and clearly not immune to coder errors.</source>
          <target state="translated">Так что эти вышеперечисленные варианты имеют всю свою нагрузку предостережений,и явно не застрахованы от ошибок кодирования.</target>
        </trans-unit>
        <trans-unit id="af947e6a3220597f322432a58e5deca53f00439d" translate="yes" xml:space="preserve">
          <source>Take for example, you want to write Junit for below mentioned code fragment</source>
          <target state="translated">Возьмем,к примеру,Junit для приведенного ниже фрагмента кода.</target>
        </trans-unit>
        <trans-unit id="6edff877500826a43d850c04791222f623f46be5" translate="yes" xml:space="preserve">
          <source>Testing with &lt;code&gt;ExpectedException&lt;/code&gt; Rule.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тестирование с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;правилом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a58af248f174de3f093e17daa310e93b3f1eff6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Test(expected = ...)&lt;/code&gt; feature is interesting as you can write less code and then writing this test is supposedly less prone to coding errors. &lt;strong&gt;But&lt;/strong&gt; this approach is lacking in some areas.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; интересна тем, что вы можете написать меньше кода, а затем написание этого теста предположительно менее подвержено ошибкам кодирования. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; этот подход отсутствует в некоторых областях.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1dc06b7f9b6634170586dbb763c2e124921ceae7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExpectedException&lt;/code&gt; rule is also an attempt to fix the previous caveats, but it feels a bit awkward to use as it uses an expectation style, &lt;em&gt;EasyMock&lt;/em&gt; users know very well this style. It might be convenient for some, but if you follow &lt;em&gt;Behaviour Driven Development&lt;/em&gt; (BDD) or &lt;em&gt;Arrange Act Assert&lt;/em&gt; (AAA) principles the &lt;code&gt;ExpectedException&lt;/code&gt; rule won't fit in those writing style. Aside from that it may suffer from the same issue as the &lt;code&gt;@Test&lt;/code&gt; way, depending on where you place the expectation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; правило также попытка исправить предыдущие предостережений, но он чувствует себя немного неудобно использовать , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как он использует стиль ожидания, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EasyMock&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; пользователи очень хорошо знают этот стиль. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для некоторых это может быть удобно, но если вы следуете &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;принципам &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Behavior Driven Development&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (BDD) или &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Arrange Act Assert&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (AAA), &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;правило &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не будет соответствовать этому стилю написания. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Помимо этого он может страдать от той же проблемы, что и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;способ &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , в зависимости от того, где вы разместили ожидание.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8882bb1440410843bcf2f7d885b6e543a3a39f0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertTrue&lt;/code&gt; might be a bit strong for some people, so &lt;code&gt;assertThat(e.getMessage(), containsString(&quot;the message&quot;);&lt;/code&gt; might be preferable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;assertTrue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может быть немного сильным для некоторых людей, так &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThat(e.getMessage(), containsString(&quot;the message&quot;);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может быть предпочтительным.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b5fe0e067468bc52dc3b961ada14185449ea0a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block you have to write the block around the tested behavior and write the assertion in the catch block, that may be fine but many find that this style interrupts the reading flow of a test. Also, you need to write an &lt;code&gt;Assert.fail&lt;/code&gt; at the end of the &lt;code&gt;try&lt;/code&gt; block. Otherwise, the test may miss one side of the assertions; &lt;em&gt;PMD&lt;/em&gt;, &lt;em&gt;findbugs&lt;/em&gt; or &lt;em&gt;Sonar&lt;/em&gt; will spot such issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Блок &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Вы должны написать блок вокруг тестируемого поведения и записать утверждение в блоке catch, что может быть хорошо, но многие считают, что этот стиль прерывает поток чтения теста. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, вам нужно написать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.fail&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в конце &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;блока &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В противном случае проверка может пропустить одну сторону утверждений; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PMD&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;findbugs&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sonar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; определят такие проблемы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caed1fc0e3d12619a6aa724230b2dd26dd50cfc4" translate="yes" xml:space="preserve">
          <source>The ExpectedException &lt;strong&gt;isn't&lt;/strong&gt; instantiated in say, the @Before method. This &lt;a href=&quot;https://garygregory.wordpress.com/2011/09/25/understaning-junit-method-order-execution/&quot;&gt;post&lt;/a&gt; clearly explains all the intricacies of JUnit's order of execution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExpectedException &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; создается, например, в методе @Before. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://garygregory.wordpress.com/2011/09/25/understaning-junit-method-order-execution/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пост&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ясно объясняет все тонкости порядка исполнения JUnit.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b37e19cc945561b886bf68221fb886444bc07c2" translate="yes" xml:space="preserve">
          <source>The ExpectedException instance is &lt;strong&gt;public&lt;/strong&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/14335558/why-rule-annotated-fields-in-junit-has-to-be-public&quot;&gt;Related Question&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Экземпляр ExpectedException является &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;открытым&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14335558/why-rule-annotated-fields-in-junit-has-to-be-public&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;связанный вопрос&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3074035afc638460cf2901b6b68c3b8ee656dc30" translate="yes" xml:space="preserve">
          <source>The Type of exception thrown</source>
          <target state="translated">Тип выброшенного исключения</target>
        </trans-unit>
        <trans-unit id="78f928bff9f9e6e2e57a2a0c91f11c5bdcb49692" translate="yes" xml:space="preserve">
          <source>The above code is to test for some unknown exception that may occur and the below one is to assert some exception with custom message.</source>
          <target state="translated">Приведенный выше код предназначен для проверки на наличие какого-то неизвестного исключения,которое может произойти,а ниже-для утверждения какого-то исключения пользовательским сообщением.</target>
        </trans-unit>
        <trans-unit id="6a4324df2c099f248984dde029daf34b01c998db" translate="yes" xml:space="preserve">
          <source>The advantages over the approaches in the other answers are:</source>
          <target state="translated">Преимущества по сравнению с подходами в других ответах:</target>
        </trans-unit>
        <trans-unit id="2268eda9d0ada1f061e52863d136ad9231b85269" translate="yes" xml:space="preserve">
          <source>The cause of the exception</source>
          <target state="translated">Причина исключения</target>
        </trans-unit>
        <trans-unit id="f97cdfc1fa335d0bfd7fed08ac67afd4766a56d5" translate="yes" xml:space="preserve">
          <source>The exception Message</source>
          <target state="translated">Исключение Сообщение</target>
        </trans-unit>
        <trans-unit id="fdc6b9c021049f324138b37ee49a748bdb227b07" translate="yes" xml:space="preserve">
          <source>The method Assert.assertThrows provides a nicer way for verifying exceptions. In addition, the use of ExpectedException is error-prone when used with other rules like TestWatcher because the order of rules is important in that case.</source>
          <target state="translated">Метод Assert.assertThrows предоставляет более удобный способ проверки исключений.Кроме того,использование ExpectedException предрасположено к ошибкам при использовании с другими правилами,такими как TestWatcher,так как порядок правил в этом случае важен.</target>
        </trans-unit>
        <trans-unit id="b5cd4a85334237fb6c60808ffb2af13f868db206" translate="yes" xml:space="preserve">
          <source>The method can be used as follows:</source>
          <target state="translated">Метод может быть использован следующим образом:</target>
        </trans-unit>
        <trans-unit id="dfaa325ea886745a38081f22bdce45ba7cb127cb" translate="yes" xml:space="preserve">
          <source>The most flexible and elegant answer for Junit 4 I found in the &lt;a href=&quot;https://www.mkyong.com/unittest/junit-4-tutorial-2-expected-exception-test/&quot;&gt;Mkyong blog&lt;/a&gt;. It has the flexibility of the &lt;code&gt;try/catch&lt;/code&gt; using the &lt;code&gt;@Rule&lt;/code&gt; annotation. I like this approach because you can read specific attributes of a customized exception.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Самый гибкий и элегантный ответ для Junit 4 я нашел в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.mkyong.com/unittest/junit-4-tutorial-2-expected-exception-test/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;блоге Mkyong&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он имеет гибкость &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try/catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с использованием &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;аннотации &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Rule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мне нравится этот подход, потому что вы можете прочитать определенные атрибуты настроенного исключения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46e0244d3eb6cdc5798eabe539b0cca2a8a88b5b" translate="yes" xml:space="preserve">
          <source>The original answer for &lt;code&gt;JUnit &amp;lt;= 4.12&lt;/code&gt; was:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Исходный ответ для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JUnit &amp;lt;= 4.12&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; был:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ae69ac8105e58c93b9dcd313ba1ca3e28404ec7" translate="yes" xml:space="preserve">
          <source>The source code can be found here: &lt;a href=&quot;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&quot;&gt;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Исходный код можно найти здесь: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebe1c9878afc051e8a73f368928dd2ba3067ef79" translate="yes" xml:space="preserve">
          <source>There are several ways to test that an exception is thrown. I have also discussed the below options in my post &lt;a href=&quot;https://javacodehouse.com/junit-tutorial&quot;&gt;How to write great unit tests with JUnit&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Есть несколько способов проверить, что выброшено исключение. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я также обсудил ниже варианты в моем посте &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javacodehouse.com/junit-tutorial&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как написать отличные модульные тесты с JUnit&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ef8759bbc8655889fdf149f8f0d1652331a2850" translate="yes" xml:space="preserve">
          <source>There's a project I became aware of after creating this answer that looks promising, it's &lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;strong&gt;catch-exception&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Есть проект, о котором я узнал после создания этого ответа, который выглядит многообещающим, это &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ловушка-исключение&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7337fa2a40e867b41c17936dab2d72dbdbf7bfa" translate="yes" xml:space="preserve">
          <source>These issues won't apply once the library supports lambdas. However, the functionality will be duplicated by the AssertJ toolset.</source>
          <target state="translated">Эти вопросы не будут применены,если библиотека поддерживает lambdas.Однако,функциональность будет дублироваться набором инструментов AssertJ.</target>
        </trans-unit>
        <trans-unit id="564efdb9cd77d2f99e1b34d1a69bd1220dbf1065" translate="yes" xml:space="preserve">
          <source>This is less verbose than the ExpectedException rule of JUnit 4.7.
In comparison to the solution provided by skaffman, you can specify in which line of code you expect the exception. I hope this helps.</source>
          <target state="translated">Это менее многословно,чем правило ExpectedException в JUnit 4.7.По сравнению с решением,предоставленным skaffman,вы можете указать в какой строке кода вы ожидаете исключения.Надеюсь,это поможет.</target>
        </trans-unit>
        <trans-unit id="324c84ef9155e6a126aaf49dbf7312e078220cad" translate="yes" xml:space="preserve">
          <source>This is much better than &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; because the test will fail if &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown before &lt;code&gt;foo.doStuff()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это намного лучше, чем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что тест завершится ошибкой, если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;foo.doStuff()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; до &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foo.doStuff ()&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="534d4a4a20f9c5b41db2e42f736689e570ad0cfd" translate="yes" xml:space="preserve">
          <source>This is relatively simple yet powerful technique.</source>
          <target state="translated">Это относительно простая,но мощная техника.</target>
        </trans-unit>
        <trans-unit id="54f748ecac5174aa8df346c990ed67769458c916" translate="yes" xml:space="preserve">
          <source>Though answer &lt;a href=&quot;https://stackoverflow.com/a/31826781/2986984&quot;&gt;https://stackoverflow.com/a/31826781/2986984&lt;/a&gt; has more options for JUnit &amp;lt;= 4.12.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хотя ответ &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/31826781/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/31826781/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет больше возможностей для JUnit &amp;lt;= 4.12.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2aae38a3a24150999bd438b927b885c8e4f207e" translate="yes" xml:space="preserve">
          <source>To solve the same problem I did set up a small project: 
&lt;a href=&quot;http://code.google.com/p/catch-exception/&quot;&gt;http://code.google.com/p/catch-exception/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы решить ту же проблему, я создал небольшой проект: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/catch-exception/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://code.google.com/p/catch-exception/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec17d2b0393d701bb378fb92b5f34cc43ec1456a" translate="yes" xml:space="preserve">
          <source>To use it:</source>
          <target state="translated">Чтобы использовать его:</target>
        </trans-unit>
        <trans-unit id="bd0dee6662b34ef748e9f0f88c1bd2f03ad006c0" translate="yes" xml:space="preserve">
          <source>Usage is then:</source>
          <target state="translated">Значит,использование:</target>
        </trans-unit>
        <trans-unit id="4a2d0c065aebe88058e7899fe2b03390f5fd9ac8" translate="yes" xml:space="preserve">
          <source>Use it as follows:</source>
          <target state="translated">Используйте его следующим образом:</target>
        </trans-unit>
        <trans-unit id="c25719584b0c55f883ce167c1e0c5621ac28771d" translate="yes" xml:space="preserve">
          <source>Use it like this:</source>
          <target state="translated">Используй вот так:</target>
        </trans-unit>
        <trans-unit id="625616de528e3608d2c8ef1894b30123766bb565" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;try&lt;/code&gt;&lt;code&gt;catch&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;code&gt;catch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4515c25bb10d55d959785b6806f9814b2b2cfa4" translate="yes" xml:space="preserve">
          <source>Using an &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt; assertion, which can be used alongside JUnit:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используя &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;утверждение &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , которое можно использовать вместе с JUnit:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a2597f3d43e9d70b7869692b34a7ef5cfed3628" translate="yes" xml:space="preserve">
          <source>Using this little helper you would write</source>
          <target state="translated">Используя этого маленького помощника,вы бы написали</target>
        </trans-unit>
        <trans-unit id="35a0b03728b2690fab142e842a49b227b3f9e87f" translate="yes" xml:space="preserve">
          <source>Utilizes Java 8 lambdas</source>
          <target state="translated">Использует Java 8 барашек</target>
        </trans-unit>
        <trans-unit id="e2d7b5f51e15c23a10c5462769b73146c79ee156" translate="yes" xml:space="preserve">
          <source>We can use an assertion fail after the method that must return an exception:</source>
          <target state="translated">Мы можем использовать неудачное утверждение после метода,который должен возвращать исключение:</target>
        </trans-unit>
        <trans-unit id="17aa817903f06fe24b510714c601224f6834c2e8" translate="yes" xml:space="preserve">
          <source>While I can certainly do something like this:</source>
          <target state="translated">В то время как я определенно могу сделать что-то подобное:</target>
        </trans-unit>
        <trans-unit id="fc768109741ad8c044487170515a885dc32b560d" translate="yes" xml:space="preserve">
          <source>With Java 8 you can create a method taking a code to check and expected exception as parameters:</source>
          <target state="translated">С помощью Java 8 можно создать метод,взяв в качестве параметров код для проверки и ожидаемое исключение:</target>
        </trans-unit>
        <trans-unit id="4202238021c3d3d344294052b908f52279bf824d" translate="yes" xml:space="preserve">
          <source>With a near-complete rewrite of JUnit 5, assertions have been &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;improved&lt;/a&gt; a bit, they may prove interesting as an out of the box way to assert properly exception. But really the assertion API is still a bit poor, there's nothing outside &lt;a href=&quot;http://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code&gt;assertThrows&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С почти полным переписыванием JUnit 5 утверждения были &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;немного &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;улучшены&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , они могут оказаться интересными как готовый способ утверждать должным образом исключение. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но на самом деле API утверждений все еще немного беден, кроме &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; нет ничего &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92c083c04b131ed116c4c9639125d245a3e6d5d0" translate="yes" xml:space="preserve">
          <source>With the JDK8, lambdas enter the test scene, and they have proved to be an interesting way to assert exceptional behaviour. AssertJ has been updated to provide a nice fluent API to assert exceptional behaviour.</source>
          <target state="translated">С JDK8 ягнята выходят на тестовую сцену,и они оказались интересным способом заявить об исключительном поведении.AssertJ был обновлен для обеспечения приятного беглого API для утверждения исключительного поведения.</target>
        </trans-unit>
        <trans-unit id="b4aa81c029ce8fcf3e21332a9dcad45e422f4f33" translate="yes" xml:space="preserve">
          <source>Yields the actual exception object that was thrown so that you can further examine it</source>
          <target state="translated">Показывает реальный объект исключения,который был брошен,чтобы вы могли его дополнительно изучить.</target>
        </trans-unit>
        <trans-unit id="417c1213af1b3ef366e06d7bf5bf317413cee5c8" translate="yes" xml:space="preserve">
          <source>You can also do this:</source>
          <target state="translated">Ты тоже можешь это сделать:</target>
        </trans-unit>
        <trans-unit id="f8c20a5c086e5288f75f38e976c17b7ff84a8519" translate="yes" xml:space="preserve">
          <source>You can precisely indicate what code you are expecting to throw the exception</source>
          <target state="translated">Вы можете точно указать,какой код вы ожидаете выбросить исключение.</target>
        </trans-unit>
        <trans-unit id="92335825aae19b52e0cdaae712a6b98bc0671750" translate="yes" xml:space="preserve">
          <source>You can use the assertion framework of your choice to make assertions about the caught exception</source>
          <target state="translated">Вы можете использовать фреймворк утверждений по вашему выбору,чтобы сделать утверждения о пойманном исключении.</target>
        </trans-unit>
        <trans-unit id="8af58a8874116d40253ecf326d2c95109ad24fda" translate="yes" xml:space="preserve">
          <source>You could read more about exceptions testing in &lt;a href=&quot;https://github.com/junit-team/junit4/wiki/Exception-testing&quot;&gt;JUnit4 wiki for Exception testing&lt;/a&gt; and &lt;a href=&quot;http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/index.html&quot;&gt;bad.robot - Expecting Exceptions JUnit Rule&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете прочитать больше о тестировании исключений в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/wiki/Exception-testing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вики JUnit4 для тестирования исключений&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/index.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bad.robot - Правило исключения JUnit для исключений&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d51e7955f4b27fa8954ee0896044996be487854f" translate="yes" xml:space="preserve">
          <source>You don't need to list the expected exception in the &lt;code&gt;throws&lt;/code&gt; clause</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вам не нужно перечислять ожидаемое исключение в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;предложении &lt;/font&gt;&lt;/font&gt; &lt;code&gt;throws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82ba5b4d4b044734ddd7e2166cc6c8039e72c59e" translate="yes" xml:space="preserve">
          <source>You get a useful exception message if the code in the lambda doesn't throw an exception, and a stacktrace if it throws a different exception</source>
          <target state="translated">Вы получаете полезное сообщение об исключении,если код в лямбде не бросает исключение,и стековую трассировку,если он бросает другое исключение.</target>
        </trans-unit>
        <trans-unit id="c3c19751ea40fc805ff2ca53fa356cc5cea9d8df" translate="yes" xml:space="preserve">
          <source>You have to define a FunctionalInterface, because &lt;code&gt;Runnable&lt;/code&gt; doesn't declare the required &lt;code&gt;throws&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы должны определить FunctionalInterface, потому что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не объявляет необходимые &lt;/font&gt;&lt;/font&gt; &lt;code&gt;throws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c74ec5165195e2729611a56f6d525f0f4a2b84ea" translate="yes" xml:space="preserve">
          <source>Zero dependencies: no need for mockito, no need powermock; and works just fine with final classes.</source>
          <target state="translated">Нулевая зависимость:нет необходимости в насмешках,нет необходимости в порошке,и отлично работает с заключительными классами.</target>
        </trans-unit>
        <trans-unit id="4c696d387c4633a3aa19a8e45cb96e14df4e8a68" translate="yes" xml:space="preserve">
          <source>add &lt;code&gt;public ExpectedException exception = ExpectedException.none();&lt;/code&gt;,
then:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;добавить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;public ExpectedException exception = ExpectedException.none();&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, затем:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1bf09c26600f613f8e3c657ad97a7da3bdc6f8c7" translate="yes" xml:space="preserve">
          <source>and then inside your test:</source>
          <target state="translated">а затем внутри твоего теста:</target>
        </trans-unit>
        <trans-unit id="5640631cb2453aab6080517c0bd17d9c54c08f20" translate="yes" xml:space="preserve">
          <source>assertThrown accepts a functional interface, whose instances can be created with lambda expressions, method references, or constructor references. assertThrown accepting that interface will expect and be ready to handle an exception.</source>
          <target state="translated">assertThrown принимает функциональный интерфейс,экземпляры которого могут быть созданы с помощью лямбда-выражений,ссылок на методы или конструкторов.assertThrown принимает этот интерфейс,который будет ожидать и готов к работе с исключением.</target>
        </trans-unit>
        <trans-unit id="c2e24c2f55e4b51a6f9babf340481090ad63fc6d" translate="yes" xml:space="preserve">
          <source>easy to use</source>
          <target state="translated">простота использования</target>
        </trans-unit>
        <trans-unit id="04dfe86bf9228e63e2bdc6db55d8a67549be3fb6" translate="yes" xml:space="preserve">
          <source>following example is from: &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;Junit 5 User Guide&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующий пример из: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Руководство пользователя Junit 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c2948b2d534d8e584f39ea8f99846535e1813c4" translate="yes" xml:space="preserve">
          <source>for junit4.x, use the ExpectedException rule</source>
          <target state="translated">для junit4.x,используйте правило ExpectedException</target>
        </trans-unit>
        <trans-unit id="f3aadd91f4d24b2f4cba552b24bcf9f30f30db6a" translate="yes" xml:space="preserve">
          <source>for junit4.x, use the optional 'expected' attribute of Test annonation</source>
          <target state="translated">для junit4.x,используйте опциональный &quot;ожидаемый&quot; атрибут Test annonation</target>
        </trans-unit>
        <trans-unit id="d126a6ddec041a6ba6a4de08844c2af5904d944c" translate="yes" xml:space="preserve">
          <source>for junit5.x, you can use &lt;code&gt;assertThrows&lt;/code&gt; as following</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;для junit5.x вы можете использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; следующим образом&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5196ca5f5eb790bd10ea01412ffe93a4347dff99" translate="yes" xml:space="preserve">
          <source>for more info, you can read &lt;a href=&quot;https://github.com/junit-team/junit/wiki/Exception-testing&quot;&gt;this document&lt;/a&gt; and &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;junit5 user guide&lt;/a&gt; for details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;для получения дополнительной информации, вы можете прочитать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit/wiki/Exception-testing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;этот документ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;руководство пользователя junit5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для деталей.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c66af54c551dae837c8d2383011ab7116a14bee" translate="yes" xml:space="preserve">
          <source>if you like junit 5, then you should like the 1st one</source>
          <target state="translated">если тебе нравится джунит 5,то тебе должен понравиться 1-й.</target>
        </trans-unit>
        <trans-unit id="13bb2ed66e12c6c0863b3b1b741990a6ab45c03c" translate="yes" xml:space="preserve">
          <source>if you use junit 3, then the 4th one is preferred</source>
          <target state="translated">если вы используете джунит 3,то предпочтительнее 4-й.</target>
        </trans-unit>
        <trans-unit id="c6b820baece793e740542dc7e0dd82f430609afc" translate="yes" xml:space="preserve">
          <source>in junit, there are four ways to test exception.</source>
          <target state="translated">в июне,есть четыре способа проверить исключение.</target>
        </trans-unit>
        <trans-unit id="37134f3ebb10bb0ed06d4659cbaef5a61cfb1e14" translate="yes" xml:space="preserve">
          <source>junit4.x</source>
          <target state="translated">junit4.x</target>
        </trans-unit>
        <trans-unit id="feb264e37f5f68a42dd3c8cd55f462f3d14f5b15" translate="yes" xml:space="preserve">
          <source>junit5.x</source>
          <target state="translated">junit5.x</target>
        </trans-unit>
        <trans-unit id="0b32085deb680ecdcf517c2137f7c9b4f700a936" translate="yes" xml:space="preserve">
          <source>localised check - more precise and allows to have multiple assertions like this within one test if needed</source>
          <target state="translated">локализованная проверка-более точная и позволяет при необходимости иметь несколько таких утверждений в рамках одного теста.</target>
        </trans-unit>
        <trans-unit id="292b28b56b39ba618ab26bca4b57dc0af2d6018a" translate="yes" xml:space="preserve">
          <source>not relying on any library</source>
          <target state="translated">не полагаясь ни на какую библиотеку</target>
        </trans-unit>
        <trans-unit id="bcf345da8bd34dbc5eede3873ee9187403a892fa" translate="yes" xml:space="preserve">
          <source>post-JDK8 : Use &lt;strong&gt;AssertJ&lt;/strong&gt; or custom lambdas to assert &lt;em&gt;exceptional&lt;/em&gt; behaviour.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;post-JDK8: используйте &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или пользовательские лямбды, чтобы утверждать &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;исключительное&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; поведение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cc7658de547acba2d68d8ec390ce29d3bf5a261" translate="yes" xml:space="preserve">
          <source>pre-JDK8 : I will recommend the old good &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block. (&lt;em&gt;Don't forget to add a &lt;code&gt;fail()&lt;/code&gt; assertion before the &lt;code&gt;catch&lt;/code&gt; block&lt;/em&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pre-JDK8: Я буду рекомендовать старый хороший &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;блок &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Не забудьте добавить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;утверждение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fail()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; перед &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;блоком &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd1b646ebd1f6844c60dd91951c6867e43857114" translate="yes" xml:space="preserve">
          <source>so</source>
          <target state="translated">so</target>
        </trans-unit>
        <trans-unit id="9ffa41c067b1a56940d23a52b09058d6105cbdd8" translate="yes" xml:space="preserve">
          <source>the 2nd way is used when you only want test the type of exception</source>
          <target state="translated">2-й способ используется,когда вы хотите проверить только тип исключения.</target>
        </trans-unit>
        <trans-unit id="805d24321cb30b35873ba13b61645086e4e73fb0" translate="yes" xml:space="preserve">
          <source>the first and last two are used when you want test exception message further</source>
          <target state="translated">первые и последние два используются,когда вы хотите проверить сообщение об исключении дальше.</target>
        </trans-unit>
        <trans-unit id="5b8c8d03a1c7a94624bdd4d926f5654337b71cdb" translate="yes" xml:space="preserve">
          <source>this provides a lot of features which can be used to improve our JUnit tests.</source>
          <target state="translated">это обеспечивает множество функций,которые могут быть использованы для улучшения наших тестов JUnit.</target>
        </trans-unit>
        <trans-unit id="8d889a63184d70aa9a29900d5ede59a0361e031b" translate="yes" xml:space="preserve">
          <source>you also can use the classic try/catch way widely used under junit 3 framework</source>
          <target state="translated">вы также можете использовать классический способ трикотажа,широко используемый в junit 3 рамки</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
