<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/156503">
    <body>
      <group id="156503">
        <trans-unit id="ac4f0a7323985e5b1b34d8b5009e82994b2f3ce8" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://blog.michael.gr/2014/09/assertions-and-testing.html&quot;&gt;taken from my blog&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.michael.gr/2014/09/assertions-and-testing.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 블로그에서 가져온&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="290a64fb9953b1c0198244a5ec98e0ad73ba504f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://guide.agilealliance.org/guide/gwt.html&quot;&gt;BDD&lt;/a&gt; Style Solution: &lt;a href=&quot;http://junit.org/&quot;&gt;JUnit 4&lt;/a&gt; + &lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;Catch Exception&lt;/a&gt; + &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://guide.agilealliance.org/guide/gwt.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BDD&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 스타일 솔루션 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; + &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Catch Exception&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; + &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5754759f6882a2dd3f1ed436fcc48c49f176cddc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/junit-team/junit4/pull/1519&quot;&gt;Pull request #1519&lt;/a&gt;: Deprecate ExpectedException</source>
          <target state="translated">&lt;a href=&quot;https://github.com/junit-team/junit4/pull/1519&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;풀 요청 # 1519&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : ExpectedException 사용 중단&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0f40592619890fd725bb6ead232e4b9cd569490" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Disclosure: I am the author of the blog and the project.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공개 : 저는 블로그와 프로젝트의 저자입니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b253bf5235ae0bb6f4fdbb005994951698b95bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Regardless of Junit 4 or JUnit 5.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Junit 4 또는 JUnit 5에 상관없이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59f9677a94d544d476e1640278adb3fce10336a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This answer has been copied from &lt;a href=&quot;https://stackoverflow.com/a/17428439/48136&quot;&gt;another question&lt;/a&gt; that don't have the same visibility, I am the same author.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 답변은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 가시성을 가지고 있지 않은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/17428439/48136&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 질문&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 복사되었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 저는 같은 저자입니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="623ed34c81e1004fd240eefb41008364ffd6d47e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt; Now that JUnit 5 and JUnit 4.13 have been released, the best option would be to use &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;code&gt;Assertions.assertThrows()&lt;/code&gt;&lt;/a&gt;  (for JUnit 5) and &lt;code&gt;Assert.assertThrows()&lt;/code&gt; (for JUnit 4.13). See &lt;a href=&quot;https://stackoverflow.com/a/46514550/95725&quot;&gt;my other answer&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JUnit 5 및 JUnit 4.13이 릴리스되었으므로 가장 좋은 옵션은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt; &lt;code&gt;Assertions.assertThrows()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (JUnit 5의 경우) 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (JUnit 4.13의 경우)를 사용하는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/46514550/95725&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 답변&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8880e6bdfd765c7b3296460eef38ff4c60b09481" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original answer using JUnit 4.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4를 사용한 원래 답변&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="868de85256632769009d40f6cfc65f108023cb9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Taking all into account if you don't want to use the catch-exception tool, I will recommend the old good way of the &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block, at least up to the JDK7. And for JDK 8 users you might prefer to use AssertJ as it offers may more than just asserting exceptions.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;catch-exception 도구를 사용하지 않으려면 모든 것을 고려 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 적어도 JDK7까지 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블록 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 오래된 좋은 방법을 권장합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JDK 8 사용자의 경우 AssertJ를 사용하는 것이 예외를 주장하는 것 이상을 제공하기 때문에 선호합니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2805dde21a92f446dad6c1cc18026e4ff4c619e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; JUnit5 has an improvement for exceptions testing: &lt;code&gt;assertThrows&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;업데이트 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : JUnit5이 테스트 예외에 대한 개선이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThrows&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a7e27fb366ac377812f56dcfb421d99fc7e46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;the long story&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;긴 이야기&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f79426c0e9f0d9b0c56f8d20a3f95a295aa85e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;tl;dr&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2238c39467a97fdf461abd1aa062f8f00e68f8b6" translate="yes" xml:space="preserve">
          <source>A rapid example taken from the home page :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;홈페이지에서 가져온 빠른 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a78a385843db0c0e9545953cb015985c862f4535" translate="yes" xml:space="preserve">
          <source>A similar method will be added to &lt;code&gt;org.junit Assert&lt;/code&gt; in JUnit 4.13.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4.13의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;org.junit Assert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비슷한 방법이 추가 될 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39a42edfd18f9dd21aa16f671f8f69d40b35284f" translate="yes" xml:space="preserve">
          <source>Additionally to what &lt;a href=&quot;https://stackoverflow.com/users/95725/namshubwriter&quot;&gt;NamShubWriter&lt;/a&gt; has said, make sure that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/95725/namshubwriter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NamShubWriter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 말한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;외에도 다음&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a106ef91e7d0bdb2874cb470ed5142532c53159" translate="yes" xml:space="preserve">
          <source>Allows you to check for multiple exceptions within a single test method</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단일 테스트 방법 내에서 여러 예외를 확인할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ee667c80ec0e8d2618521d68eef1704227c70bc" translate="yes" xml:space="preserve">
          <source>Allows your tests to follow Arrange-Act-Assert</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트가 Arrange-Act-Assert를 따르도록 허용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f42937728e8ffb93aa836de3c186f493581ac3e" translate="yes" xml:space="preserve">
          <source>Also as the expectation is placed around in the method, depending on how the tested code is written then the wrong part of the test code can throw the exception, leading to false-positive test and I'm not sure that &lt;em&gt;PMD&lt;/em&gt;, &lt;em&gt;findbugs&lt;/em&gt; or &lt;em&gt;Sonar&lt;/em&gt; will give hints on such code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 테스트 코드 작성 방법에 따라 테스트 코드의 잘못된 부분에서 예외가 발생하여 거짓 양성 테스트가 발생할 수 있으며 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PMD&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;findbugs&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sonar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 확신하지 못합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러한 코드에 대한 힌트를 줄 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61ded298c5ae4e58509f5a15e9ea95197e670406" translate="yes" xml:space="preserve">
          <source>Also if you remember name clash with &lt;code&gt;Matcher&lt;/code&gt; or &lt;code&gt;Assert&lt;/code&gt;, be prepared to meet the same clash with &lt;code&gt;Assertions&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 이름 충돌을 기억하는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assertions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 동일한 충돌을 만날 준비를하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b4ef4920ec8f7979bf4c3b35600408b4d5ab39f" translate="yes" xml:space="preserve">
          <source>Also, see this &lt;a href=&quot;https://github.com/junit-team/junit4/issues/706#issuecomment-21385116&quot;&gt;comment&lt;/a&gt; issue on JUnit of the author of &lt;code&gt;ExpectedException&lt;/code&gt;. &lt;a href=&quot;https://github.com/junit-team/junit4/wiki/4.13-Release-Notes&quot;&gt;JUnit 4.13-beta-2&lt;/a&gt; even deprecates this mechanism:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작성자의 JUnit에 대한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/issues/706#issuecomment-21385116&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주석&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문제를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/wiki/4.13-Release-Notes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4.13-beta-2&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는이 메커니즘을 더 이상 사용하지 않습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ca5a3f48182f45b55ef86708c840c2962847e8f" translate="yes" xml:space="preserve">
          <source>And a sample test with &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용한 샘플 테스트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c91f2901b306dda9da2eb00073392db603faa2ef" translate="yes" xml:space="preserve">
          <source>Apply judgement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;판단을 적용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22e6b61dd37bb9bc47b545c6548ca6a137afdd51" translate="yes" xml:space="preserve">
          <source>As answered before, there are many ways of dealing with exceptions in JUnit. But with Java 8 there is another one: using Lambda Expressions. With Lambda Expressions we can achieve a syntax like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전에 대답했듯이 JUnit에는 예외를 처리하는 여러 가지 방법이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 Java 8에는 Lambda Expressions 사용이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lambda Expressions를 사용하면 다음과 같은 구문을 얻을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77132385aa3216bd055914838183a41144b302bc" translate="yes" xml:space="preserve">
          <source>As the description of the project says, it let a coder write in a fluent line of code catching the exception and offer this exception for the latter assertion. And you can use any assertion library like &lt;a href=&quot;https://github.com/hamcrest/JavaHamcrest&quot;&gt;Hamcrest&lt;/a&gt; or &lt;a href=&quot;https://github.com/joel-costigliola/assertj-core&quot;&gt;AssertJ&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로젝트에 대한 설명에서 알 수 있듯이 코더는 유창한 코드 줄을 작성하여 예외를 포착하고 후자의 주장에 대해이 예외를 제공 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/hamcrest/JavaHamcrest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hamcrest&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/joel-costigliola/assertj-core&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 어설 션 라이브러리를 사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b365421cacb55208468677b2581f5f5d42a3a77" translate="yes" xml:space="preserve">
          <source>As you can see the code is really straightforward, you catch the exception on a specific line, the &lt;code&gt;then&lt;/code&gt; API is an alias that will use AssertJ APIs (similar to using &lt;code&gt;assertThat(ex).hasNoCause()...&lt;/code&gt;). &lt;em&gt;At some point the project relied on FEST-Assert the ancestor of AssertJ&lt;/em&gt;. &lt;strong&gt;EDIT:&lt;/strong&gt; It seems the project is brewing a Java 8 Lambdas support.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 코드는 정말 간단하다 볼 수 있듯이, 특정 라인에서 예외를 catch는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;then&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; API는 (사용하는 것과 비슷 AssertJ API를 사용하는 별칭입니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThat(ex).hasNoCause()...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어느 시점에서 프로젝트는 AssertJ의 조상 FEST-Assert에 의존했습니다&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 프로젝트가 Java 8 Lambdas 지원을 양조하고있는 것 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17eb62c1e2363b2484160950dd18ffdf3fe6932c" translate="yes" xml:space="preserve">
          <source>As you noticed &lt;code&gt;assertEquals&lt;/code&gt; is still returning &lt;code&gt;void&lt;/code&gt;, and as such doesn't allow chaining assertions like AssertJ.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;assertEquals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 여전히 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;void&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다는 것을 알았 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;으므로 AssertJ와 같은 체인 어설 션을 허용하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5893237671855e1d51aa3743002c83c8e311c572" translate="yes" xml:space="preserve">
          <source>At the time of this writing, it is noteworthy to say this library is based on Mockito 1.x as it creates a mock of the tested object behind the scene. As Mockito is still not updated &lt;strong&gt;this library cannot work with final classes or final methods&lt;/strong&gt;. And even if it was based on Mockito 2 in the current version, this would require to declare a global mock maker (&lt;code&gt;inline-mock-maker&lt;/code&gt;), something that may not what you want, as this mock maker has different drawbacks that the regular mock maker.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 글을 쓰는 시점에서이 라이브러리는 Mockito 1.x를 기반으로하며, 테스트 된 객체 뒤에 장면을 모방 한 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mockito가 여전히 업데이트되지 않았으므로이 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라이브러리는 최종 클래스 또는 최종 메소드와 함께 작동 할 수 없습니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 현재 버전의 Mockito 2를 기반으로 했더라도 글로벌 모의 메이커 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;inline-mock-maker&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 모의 메이커)를 선언해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 모의 메이커는 일반 모의와 다른 단점이 있기 때문에 원하지 않는 것입니다. 만드는 사람.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae53af5734737911244e91d3faf912aa179e5bb5" translate="yes" xml:space="preserve">
          <source>Be careful using expected exception, because it only asserts that the &lt;strong&gt;method&lt;/strong&gt; threw that exception, not a &lt;strong&gt;particular line of code&lt;/strong&gt; in the test.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;메소드&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트에서 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특정 코드 줄이&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 아니라 해당 예외를 발생 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시켰다고 주장하기 때문에 예상되는 예외를 사용하는 데주의하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="159af34715c3b25e86401bbd9bf13ed264fe0b88" translate="yes" xml:space="preserve">
          <source>Benefits:</source>
          <target state="translated">Benefits:</target>
        </trans-unit>
        <trans-unit id="a53d89f9e528ba9d9abec0dd33db18c2bf0e46c3" translate="yes" xml:space="preserve">
          <source>Built into JUnit</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit에 내장&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf837c922431bdae0f5c5706ff72c2eb45a17c9c" translate="yes" xml:space="preserve">
          <source>But these ways are not so elegant and don't mix well &lt;em&gt;readability wise&lt;/em&gt; with other tools. Moreover, JUnit tooling does have some pitfalls.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이러한 방법은 그다지 우아하지 않으며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 도구와 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;잘 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가독성&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 좋지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 JUnit 툴링에는 몇 가지 함정이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="476168995c5223b4afbfab0c0fbaa18d09ec7729" translate="yes" xml:space="preserve">
          <source>Checks for an exception being thrown by a specific set of lines within your test method instead of any unknown line in the entire test method</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전체 테스트 방법에서 알 수없는 줄 대신 테스트 방법 내의 특정 줄 집합에서 예외가 발생했는지 확인합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87c3324dc481b98228acd94f1e69c063b010597a" translate="yes" xml:space="preserve">
          <source>Concise</source>
          <target state="translated">Concise</target>
        </trans-unit>
        <trans-unit id="1aeb822597cb413281743302035230681748156e" translate="yes" xml:space="preserve">
          <source>Currently, this library has two shortcomings :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재이 라이브러리에는 두 가지 단점이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="f5dcba5584f96d0ae65ccf7c2c5dc2cde091a646" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;not&lt;/strong&gt; do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작업 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 마십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7f53cad4206ad9a3a7195adc40f347208ee8a8c" translate="yes" xml:space="preserve">
          <source>Does &lt;em&gt;not&lt;/em&gt; depend on any JUnit magic</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않습니다 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어떤 JUnit을 마법에 따라 달라집니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b92a3bf38a7f45b652216a09a601e6f90354c462" translate="yes" xml:space="preserve">
          <source>Even the expected exception is placed before the test statement, it breaks your reading flow if the tests follow BDD or AAA.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상되는 예외도 테스트 문 앞에 놓여지며 테스트가 BDD 또는 AAA를 따르는 경우 읽기 흐름이 중단됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="05d179f3167c5215f134c6f00b91c9d96ceba30b" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;http://jakegoulding.com/blog/2012/09/26/be-careful-when-using-junit-expected-exceptions/&quot;&gt;this&lt;/a&gt; blog post clearly illustrates how to assert that a certain exception is thrown.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막으로, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jakegoulding.com/blog/2012/09/26/be-careful-when-using-junit-expected-exceptions/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블로그 게시물은 특정 예외가 발생했다고 주장하는 방법을 명확하게 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fd5b2df2f6110de30a10de9243155d07b8bc650" translate="yes" xml:space="preserve">
          <source>For JUnit5 and 4.13 see answer &lt;a href=&quot;https://stackoverflow.com/a/2935935/2986984&quot;&gt;https://stackoverflow.com/a/2935935/2986984&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit5 및 4.13의 경우 답변 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/2935935/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/2935935/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d86fbb6b66eb965b5c6ba6b4fa8074a5722ecae5" translate="yes" xml:space="preserve">
          <source>Have a look at this blog post describing this technique: &lt;a href=&quot;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&quot;&gt;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기술을 설명하는이 블로그 게시물을 살펴보십시오. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4663e026aeb4a4a6ff5a2439baf3af5f71df8761" translate="yes" xml:space="preserve">
          <source>Here is a utility function that I wrote:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 작성한 유틸리티 함수는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="566f06d4144450c109542ea6f372a33d3fcabbae" translate="yes" xml:space="preserve">
          <source>Here is an example that  verifies an exception is thrown, and uses &lt;a href=&quot;http://google.github.io/truth/&quot;&gt;Truth&lt;/a&gt; to  make assertions on the exception message:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 예외가 발생했는지 확인하고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://google.github.io/truth/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Truth&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 예외 메시지에 대한 어설 션을 만드는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c20948611fb107b9082c98838db42932ee31705" translate="yes" xml:space="preserve">
          <source>Here is another way to check method thrown correct exception or not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;올바른 예외가 발생했는지 여부를 확인하는 다른 방법이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1fb5110d4389a44c06e3d0b3a6e083a5ca00645" translate="yes" xml:space="preserve">
          <source>How about this:  Catch a very general exception, make sure it makes it out of the catch block, then assert that the class of the exception is what you expect it to be.  This assert will fail if a) the exception is of the wrong type (eg. if you got a Null Pointer instead) and b) the exception wasn't ever thrown.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떻습니까 : 매우 일반적인 예외를 잡아서 catch 블록에서 벗어나게 한 다음 예외 클래스가 예상 한 것임을 주장하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a) 예외 유형이 잘못된 경우 (예 : 대신 널 포인터가있는 경우) b) 예외가 발생하지 않은 경우이 어설 션이 실패합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9262c633c91a4bd03ad15de46995d2a642ff8ae5" translate="yes" xml:space="preserve">
          <source>How can I use JUnit4 idiomatically to test that some code throws an exception?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit4를 관용적으로 사용하여 일부 코드에서 예외가 발생하는지 테스트하려면 어떻게해야합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="863a65c205c7cc8fb151288cede87bfdd635aabb" translate="yes" xml:space="preserve">
          <source>How do you assert that a certain exception is thrown in JUnit 4 tests</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4 테스트에서 특정 예외가 발생했다고 주장하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5c540da041f46b389b3afbcb42a7c109b42dcca" translate="yes" xml:space="preserve">
          <source>I recall that there is an annotation or an Assert.xyz or &lt;em&gt;something&lt;/em&gt; that is far less kludgy and far more in-the-spirit of JUnit for these sorts of situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 종류의 상황에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대해 주석이나 Assert.xyz 또는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit의 훨씬 덜 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;혼란스럽고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;훨씬 더 정신적 인 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것이&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있다는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것을 기억합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a226ca101285f0ffe5659e5a8cfd9c466764dda" translate="yes" xml:space="preserve">
          <source>I recomend library &lt;code&gt;assertj-core&lt;/code&gt; to handle exception in junit test</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;junit 테스트에서 예외를 처리하기 위해 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라이브러리 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertj-core&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;권장합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c6df674e157d6f6b7a9f13f3c2d5e695d4561ad" translate="yes" xml:space="preserve">
          <source>I tend to use this for testing parameter validation, because such methods are usually very simple, but more complex tests might better be served with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 방법은 일반적으로 매우 간단하지만 더 복잡한 테스트가 더 잘 제공 될 수 있기 때문에 매개 변수 유효성 검사를 테스트하는 데 사용하는 경향이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f7cb26e6a9e00852055f7614f50b20c7d36d39b" translate="yes" xml:space="preserve">
          <source>I tried many of the methods here, but they were either complicated or didn't quite meet my requirements.  In fact, one can write a helper method quite simply:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에서 많은 방법을 시도했지만 복잡하거나 내 요구 사항을 충족하지 못했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 도우미 메서드를 매우 간단하게 작성할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae55a497d0cbb8c4dd9cc20fd9835e8787fde7a4" translate="yes" xml:space="preserve">
          <source>I'd like to conclude that today (2017-03-03) &lt;strong&gt;AssertJ&lt;/strong&gt;'s ease of use, discoverable API, the rapid pace of development and as a &lt;em&gt;de facto&lt;/em&gt; test dependency is the best solution with JDK8 regardless of the test framework (JUnit or not), prior JDKs should instead rely on &lt;strong&gt;&lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt;&lt;/strong&gt; blocks even if they feel clunky.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오늘 (2017-03-03) &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 사용 용이성, 검색 가능한 API, 빠른 개발 속도 및 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사실상&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 테스트 종속성은 테스트 프레임 워크 (JUnit)에 관계없이 JDK8을 사용하는 가장 좋은 솔루션이라고 결론 내리고 싶습니다 그렇지 않다면), 이전의 JDK는 대신에 시끄러운 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;느낌이 들더라도 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블록 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 의존해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de5a5ee34f8bec606757a8c0af6f407f5b874d1f" translate="yes" xml:space="preserve">
          <source>IMHO, the best way to check for exceptions in JUnit is the try/catch/fail/assert pattern:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit에서 예외를 확인하는 가장 좋은 방법은 IMHO, try / catch / fail / assert 패턴입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11704c26d135105fc7d451f44d50b983156f0c24" translate="yes" xml:space="preserve">
          <source>If the test needs to check additional things on the exception like the cause or the message (good exception messages are really important, having a precise exception type may not be enough).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트에서 원인 또는 메시지와 같은 예외에 대한 추가 사항을 확인해야하는 경우 (예외가 좋은 예외 메시지는 중요하므로 정확한 예외 유형을 갖는 것으로 충분하지 않을 수 있음)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7687b060e4223314a18b9f9327703a1008129be9" translate="yes" xml:space="preserve">
          <source>If you haven't migrated to JUnit 5, but can use JUnit 4.7, you can use the &lt;a href=&quot;http://junit.org/javadoc/latest/org/junit/rules/ExpectedException.html&quot;&gt;&lt;code&gt;ExpectedException&lt;/code&gt;&lt;/a&gt; Rule:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 5로 마이그레이션하지 않았지만 JUnit 4.7을 사용할 수있는 경우 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/javadoc/latest/org/junit/rules/ExpectedException.html&quot;&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Rule을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d2b9bcd34c3748f1d8928a45a07e53fe8edb59c" translate="yes" xml:space="preserve">
          <source>If you see the below example I am testing 3 things on the exception.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 예제를 보면 예외에 대해 3 가지를 테스트하고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46ea585a583802be1e276665cc9d50e4de00655f" translate="yes" xml:space="preserve">
          <source>If you use assertJ or google-truth, see answer  &lt;a href=&quot;https://stackoverflow.com/a/41019785/2986984&quot;&gt;https://stackoverflow.com/a/41019785/2986984&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;assertJ 또는 google-truth를 사용하는 경우 답변 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/41019785/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/41019785/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00367e4b722b6ccedf9944b521ce2685fa5c9ab4" translate="yes" xml:space="preserve">
          <source>If you would like a solution which:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 솔루션을 원할 경우 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="302b45d2449bdddbeebd957fa070e2e732789402" translate="yes" xml:space="preserve">
          <source>In JUnit 4 or later you can test the exceptions as follows</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4 이상에서 다음과 같이 예외를 테스트 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5efd7acfb583a66693b9c80bf1eea0d4690b82d" translate="yes" xml:space="preserve">
          <source>In java 8, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8에서는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b08b3778cd534f6d51e3183c88e98f296ad3e40e" translate="yes" xml:space="preserve">
          <source>In my case I always get RuntimeException from db, but messages differ. And exception need to be handled respectively. Here is how I tested it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필자의 경우 항상 db에서 RuntimeException이 발생하지만 메시지는 다릅니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외는 각각 처리해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 한 방법은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96c2d16d18910393fa34dad4ce434a930253bd9f" translate="yes" xml:space="preserve">
          <source>It depends on the JUnit version and what assert libraries you use.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 버전과 사용하는 어설 션 라이브러리에 따라 다릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="130a6315b3a2b4c3e8e4014766f40a41a9e00f0b" translate="yes" xml:space="preserve">
          <source>It is possible to write yourself a &lt;em&gt;do it yourself&lt;/em&gt;&lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block or use the JUnit tools (&lt;code&gt;@Test(expected = ...)&lt;/code&gt; or the &lt;code&gt;@Rule ExpectedException&lt;/code&gt; JUnit rule feature).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자신에게 쓸 수있는 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것을 할 자신이 &lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블록 또는 JUnit을 도구 (사용 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Rule ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 JUnit 규칙 기능).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d669d60063d11892348f1302cf5a67ba91e277d" translate="yes" xml:space="preserve">
          <source>It requires yet another test dependency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 테스트 종속성이 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e07a2abf8b6da35e5ed56b005678e231eb0ddbd" translate="yes" xml:space="preserve">
          <source>It's better than &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; because it guarantees the expected line in the test threw the exception and lets you check more details about the exception, such as message, easier:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 낫습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 테스트에서 예상 줄이 예외를 던 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;졌음&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 보장하고 예외와 같은 예외에 대한 자세한 내용을 쉽게 확인할 수 있기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fedd70fe83bd74c52bbf7830f12d3cce2a1b714" translate="yes" xml:space="preserve">
          <source>JUnit 5 Solution</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 5 솔루션&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea78bb209975d1b4a8ebd3cf2176f308609e1119" translate="yes" xml:space="preserve">
          <source>JUnit Test-FAQ</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 테스트 -FAQ&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4abca0c4e0ac83f6394860d23d90531a6c3df49" translate="yes" xml:space="preserve">
          <source>JUnit has built-in support for this, with an &lt;a href=&quot;http://junit.sourceforge.net/doc/faq/faq.htm#tests_7&quot;&gt;&quot;expected&quot; attribute&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit은 &lt;/font&gt;&lt;a href=&quot;http://junit.sourceforge.net/doc/faq/faq.htm#tests_7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;예상 된&quot;속성으로&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이를 지원 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c8e2f571b72489f4d21848f50ae8c6d743aeaac" translate="yes" xml:space="preserve">
          <source>Java 8 solution</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바 8 솔루션&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1716c83a4e87e5736184ef1d8f87f6bf9dadf13" translate="yes" xml:space="preserve">
          <source>Junit4 solution with Java8 is to use this function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java8이 포함 된 Junit4 솔루션은 다음 기능을 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4c968683e3014c4712c42df2532ce3db614d0e1" translate="yes" xml:space="preserve">
          <source>Just make a Matcher that can be turned off and on, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 켜거나 끌 수있는 Matcher를 만드십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c128b2812dee7ad7e93fcd6778fc2625e37df03" translate="yes" xml:space="preserve">
          <source>Maven/Gradle instructions here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Maven / Gradle 지침은 여기입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="16f8a33046e5c11f07939264e9c73b83af105d79" translate="yes" xml:space="preserve">
          <source>More Infos about JUnit 5 on &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions에서&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JUnit 5에 대한 추가 정보&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89b690e38cd9f0169d24872b81a24c39ad2d7b13" translate="yes" xml:space="preserve">
          <source>My solution using Java 8 lambdas:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8 람다를 사용하는 솔루션 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe6c8a91491b2b81e7f47278f66011c22bb146e8" translate="yes" xml:space="preserve">
          <source>Note that the only limitation is to use a &lt;code&gt;final&lt;/code&gt; object reference in lambda expression.
This solution allows to continue test assertions instead of expecting thowable at method level using &lt;code&gt;@Test(expected = IndexOutOfBoundsException.class)&lt;/code&gt; solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유일한 제한은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;람다 식에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체 참조 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 사용하는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 솔루션을 사용하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 솔루션을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 메소드 수준에서 문제를 예상하는 대신 테스트 어설 션을 계속할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2c350143bda17ca6a735ac4858157df1e936ed9" translate="yes" xml:space="preserve">
          <source>Now that JUnit 5 and JUnit 4.13 have been released, the best option would be to use &lt;code&gt;Assertions.assertThrows()&lt;/code&gt;  (for JUnit 5) and &lt;code&gt;Assert.assertThrows()&lt;/code&gt; (for JUnit 4.13). See
the &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;Junit 5 User Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 5 및 JUnit 4.13이 릴리스되었으므로 가장 좋은 옵션은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assertions.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (JUnit 5의 경우) 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (JUnit 4.13의 경우)를 사용하는 것입니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Junit 5 사용자 안내서를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64aa4d557cc62d15e8de600185aa21dbf6018da0" translate="yes" xml:space="preserve">
          <source>Reference :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b56f61887000c5b1368e687dc53dc5dbe745cdc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.infoq.com/news/2009/07/junit-4.7-rules&quot;&gt;this article&lt;/a&gt; for details</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.infoq.com/news/2009/07/junit-4.7-rules&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기사&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 참조하십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3141ae0b8b1e342d56b99bf22862873fadd178c5" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;expected&lt;/code&gt; parameter &lt;code&gt;@Test(expected = FileNotFoundException.class)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설정 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;expected&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 매개 변수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = FileNotFoundException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cd8fb51f0a9d9f03dedbb680b4afe34a4ae3390" translate="yes" xml:space="preserve">
          <source>So these above options have all their load of caveats, and clearly not immune to coder errors.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 위의 옵션에는 모든주의 사항이 있으며 코더 오류에 영향을 미치지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af947e6a3220597f322432a58e5deca53f00439d" translate="yes" xml:space="preserve">
          <source>Take for example, you want to write Junit for below mentioned code fragment</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 아래 언급 된 코드 조각에 대해 Junit을 작성하려고합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6edff877500826a43d850c04791222f623f46be5" translate="yes" xml:space="preserve">
          <source>Testing with &lt;code&gt;ExpectedException&lt;/code&gt; Rule.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 규칙을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용한 테스트&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a58af248f174de3f093e17daa310e93b3f1eff6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Test(expected = ...)&lt;/code&gt; feature is interesting as you can write less code and then writing this test is supposedly less prone to coding errors. &lt;strong&gt;But&lt;/strong&gt; this approach is lacking in some areas.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 적은 코드를 작성하고이 테스트를 작성하는 것은 아마도 덜 발생하기 쉬운 오류를 코딩하는 것입니다 수있는 기능은 흥미 롭다. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 일부 지역에서는 이러한 접근 방식이 부족합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1dc06b7f9b6634170586dbb763c2e124921ceae7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExpectedException&lt;/code&gt; rule is also an attempt to fix the previous caveats, but it feels a bit awkward to use as it uses an expectation style, &lt;em&gt;EasyMock&lt;/em&gt; users know very well this style. It might be convenient for some, but if you follow &lt;em&gt;Behaviour Driven Development&lt;/em&gt; (BDD) or &lt;em&gt;Arrange Act Assert&lt;/em&gt; (AAA) principles the &lt;code&gt;ExpectedException&lt;/code&gt; rule won't fit in those writing style. Aside from that it may suffer from the same issue as the &lt;code&gt;@Test&lt;/code&gt; way, depending on where you place the expectation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 규칙은 또한 이전의주의 사항을 해결하기 위해 시도하지만, 그것은 그것을 기대 스타일을 사용하기 때문에 사용하기 불편 비트 느낌, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EasyMock에의&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용자는 아주 잘이 스타일을 알고있다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부에게는 편리 할 수 ​​있지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BDD ( &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;behavior Driven Development&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 또는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AAA ( &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Action Act Assert&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 원칙을 따르는 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 규칙이 해당 쓰기 스타일에 맞지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 외에도 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상 위치에 따라 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 방식 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;과 동일한 문제가 발생할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8882bb1440410843bcf2f7d885b6e543a3a39f0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertTrue&lt;/code&gt; might be a bit strong for some people, so &lt;code&gt;assertThat(e.getMessage(), containsString(&quot;the message&quot;);&lt;/code&gt; might be preferable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;assertTrue&lt;/code&gt; 은&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그래서 어떤 사람들을 위해 조금 강한 수 있습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThat(e.getMessage(), containsString(&quot;the message&quot;);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 바람직 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b5fe0e067468bc52dc3b961ada14185449ea0a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block you have to write the block around the tested behavior and write the assertion in the catch block, that may be fine but many find that this style interrupts the reading flow of a test. Also, you need to write an &lt;code&gt;Assert.fail&lt;/code&gt; at the end of the &lt;code&gt;try&lt;/code&gt; block. Otherwise, the test may miss one side of the assertions; &lt;em&gt;PMD&lt;/em&gt;, &lt;em&gt;findbugs&lt;/em&gt; or &lt;em&gt;Sonar&lt;/em&gt; will spot such issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신이 테스트 문제를 해결 블록을 작성하고 catch 블록의 주장을 작성해야 블록, 즉 미세하지만 많은 발견 할 수있다이 스타일은 인터럽트 테스트의 읽기 흐름을 그. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블록 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 끝에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.fail&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 작성해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않으면 테스트에서 어설 션의 한쪽이 누락 될 수 있습니다. &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PMD&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;findbugs&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sonar&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 이러한 문제를 발견합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caed1fc0e3d12619a6aa724230b2dd26dd50cfc4" translate="yes" xml:space="preserve">
          <source>The ExpectedException &lt;strong&gt;isn't&lt;/strong&gt; instantiated in say, the @Before method. This &lt;a href=&quot;https://garygregory.wordpress.com/2011/09/25/understaning-junit-method-order-execution/&quot;&gt;post&lt;/a&gt; clearly explains all the intricacies of JUnit's order of execution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Before 메소드에서는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExpectedException &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인스턴스화 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되지 않습니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://garygregory.wordpress.com/2011/09/25/understaning-junit-method-order-execution/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포스트&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 JUnit의 실행 순서에 대한 모든 복잡성을 명확하게 설명합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b37e19cc945561b886bf68221fb886444bc07c2" translate="yes" xml:space="preserve">
          <source>The ExpectedException instance is &lt;strong&gt;public&lt;/strong&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/14335558/why-rule-annotated-fields-in-junit-has-to-be-public&quot;&gt;Related Question&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExpectedException 인스턴스가 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공개입니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14335558/why-rule-annotated-fields-in-junit-has-to-be-public&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;관련 질문&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3074035afc638460cf2901b6b68c3b8ee656dc30" translate="yes" xml:space="preserve">
          <source>The Type of exception thrown</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;발생 된 예외 유형&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78f928bff9f9e6e2e57a2a0c91f11c5bdcb49692" translate="yes" xml:space="preserve">
          <source>The above code is to test for some unknown exception that may occur and the below one is to assert some exception with custom message.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 코드는 발생할 수있는 알려지지 않은 예외를 테스트하기위한 것이며, 아래의 코드는 사용자 정의 메시지로 일부 예외를 발생시키는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a4324df2c099f248984dde029daf34b01c998db" translate="yes" xml:space="preserve">
          <source>The advantages over the approaches in the other answers are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 답변의 접근법보다 장점은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2268eda9d0ada1f061e52863d136ad9231b85269" translate="yes" xml:space="preserve">
          <source>The cause of the exception</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외의 원인&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f97cdfc1fa335d0bfd7fed08ac67afd4766a56d5" translate="yes" xml:space="preserve">
          <source>The exception Message</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 메시지&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdc6b9c021049f324138b37ee49a748bdb227b07" translate="yes" xml:space="preserve">
          <source>The method Assert.assertThrows provides a nicer way for verifying exceptions. In addition, the use of ExpectedException is error-prone when used with other rules like TestWatcher because the order of rules is important in that case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Assert.assertThrows 메소드는 예외를 확인하는 더 좋은 방법을 제공합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 규칙의 순서가 중요하기 때문에 TestWatcher와 같은 다른 규칙과 함께 사용하면 ExpectedException을 사용하는 것이 오류가 발생하기 쉽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5cd4a85334237fb6c60808ffb2af13f868db206" translate="yes" xml:space="preserve">
          <source>The method can be used as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법은 다음과 같이 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dfaa325ea886745a38081f22bdce45ba7cb127cb" translate="yes" xml:space="preserve">
          <source>The most flexible and elegant answer for Junit 4 I found in the &lt;a href=&quot;https://www.mkyong.com/unittest/junit-4-tutorial-2-expected-exception-test/&quot;&gt;Mkyong blog&lt;/a&gt;. It has the flexibility of the &lt;code&gt;try/catch&lt;/code&gt; using the &lt;code&gt;@Rule&lt;/code&gt; annotation. I like this approach because you can read specific attributes of a customized exception.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://www.mkyong.com/unittest/junit-4-tutorial-2-expected-exception-test/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mkyong 블로그&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 찾은 Junit 4에 대한 가장 유연하고 우아한 답변입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt; &lt;code&gt;@Rule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 주석을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try/catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 유연성을 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;갖습니다&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자 정의 예외의 특정 속성을 읽을 수 있기 때문에이 방법이 마음에 듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46e0244d3eb6cdc5798eabe539b0cca2a8a88b5b" translate="yes" xml:space="preserve">
          <source>The original answer for &lt;code&gt;JUnit &amp;lt;= 4.12&lt;/code&gt; was:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;JUnit &amp;lt;= 4.12&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 원래 답변 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ae69ac8105e58c93b9dcd313ba1ca3e28404ec7" translate="yes" xml:space="preserve">
          <source>The source code can be found here: &lt;a href=&quot;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&quot;&gt;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스 코드는 &lt;/font&gt;&lt;a href=&quot;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 찾을 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebe1c9878afc051e8a73f368928dd2ba3067ef79" translate="yes" xml:space="preserve">
          <source>There are several ways to test that an exception is thrown. I have also discussed the below options in my post &lt;a href=&quot;https://javacodehouse.com/junit-tutorial&quot;&gt;How to write great unit tests with JUnit&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외가 발생했는지 테스트하는 방법에는 여러 가지가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 또한 내 게시물에서 아래 옵션에 대해 논의했습니다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javacodehouse.com/junit-tutorial&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.JUnit으로 훌륭한 단위 테스트를 작성하는 방법&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ef8759bbc8655889fdf149f8f0d1652331a2850" translate="yes" xml:space="preserve">
          <source>There's a project I became aware of after creating this answer that looks promising, it's &lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;strong&gt;catch-exception&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;유망한 것으로 보이는이 답변을 만든 후에 내가 알게 된 프로젝트가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7337fa2a40e867b41c17936dab2d72dbdbf7bfa" translate="yes" xml:space="preserve">
          <source>These issues won't apply once the library supports lambdas. However, the functionality will be duplicated by the AssertJ toolset.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라이브러리가 람다를 지원하면 이러한 문제는 적용되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 기능은 AssertJ 툴셋에 의해 복제됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="564efdb9cd77d2f99e1b34d1a69bd1220dbf1065" translate="yes" xml:space="preserve">
          <source>This is less verbose than the ExpectedException rule of JUnit 4.7.
In comparison to the solution provided by skaffman, you can specify in which line of code you expect the exception. I hope this helps.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 JUnit 4.7의 ExpectedException 규칙보다 덜 장황합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;skaffman이 제공하는 솔루션과 비교하여 예외를 예상 할 코드를 지정할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이게 도움이 되길 바란다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="324c84ef9155e6a126aaf49dbf7312e078220cad" translate="yes" xml:space="preserve">
          <source>This is much better than &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; because the test will fail if &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown before &lt;code&gt;foo.doStuff()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;foo.doStuff()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전에 &lt;/font&gt; &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 발생 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 테스트가 실패하기 때문에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 보다 훨씬 낫습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="534d4a4a20f9c5b41db2e42f736689e570ad0cfd" translate="yes" xml:space="preserve">
          <source>This is relatively simple yet powerful technique.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 비교적 간단하지만 강력한 기술입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="54f748ecac5174aa8df346c990ed67769458c916" translate="yes" xml:space="preserve">
          <source>Though answer &lt;a href=&quot;https://stackoverflow.com/a/31826781/2986984&quot;&gt;https://stackoverflow.com/a/31826781/2986984&lt;/a&gt; has more options for JUnit &amp;lt;= 4.12.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;답변 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/31826781/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/31826781/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 JUnit &amp;lt;= 4.12에 대한 추가 옵션이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2aae38a3a24150999bd438b927b885c8e4f207e" translate="yes" xml:space="preserve">
          <source>To solve the same problem I did set up a small project: 
&lt;a href=&quot;http://code.google.com/p/catch-exception/&quot;&gt;http://code.google.com/p/catch-exception/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 문제를 해결하기 위해 작은 프로젝트를 설정했습니다 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/catch-exception/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://code.google.com/p/catch-exception/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec17d2b0393d701bb378fb92b5f34cc43ec1456a" translate="yes" xml:space="preserve">
          <source>To use it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것을 사용하려면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd0dee6662b34ef748e9f0f88c1bd2f03ad006c0" translate="yes" xml:space="preserve">
          <source>Usage is then:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러면 사용법은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a2d0c065aebe88058e7899fe2b03390f5fd9ac8" translate="yes" xml:space="preserve">
          <source>Use it as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c25719584b0c55f883ce167c1e0c5621ac28771d" translate="yes" xml:space="preserve">
          <source>Use it like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="625616de528e3608d2c8ef1894b30123766bb565" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;try&lt;/code&gt;&lt;code&gt;catch&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e4515c25bb10d55d959785b6806f9814b2b2cfa4" translate="yes" xml:space="preserve">
          <source>Using an &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt; assertion, which can be used alongside JUnit:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit과 함께 사용할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어설 션 사용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a2597f3d43e9d70b7869692b34a7ef5cfed3628" translate="yes" xml:space="preserve">
          <source>Using this little helper you would write</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작은 도우미를 사용하면&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35a0b03728b2690fab142e842a49b227b3f9e87f" translate="yes" xml:space="preserve">
          <source>Utilizes Java 8 lambdas</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8 람다 활용&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2d7b5f51e15c23a10c5462769b73146c79ee156" translate="yes" xml:space="preserve">
          <source>We can use an assertion fail after the method that must return an exception:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외를 반환해야하는 메소드 후에 어설 션 실패를 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17aa817903f06fe24b510714c601224f6834c2e8" translate="yes" xml:space="preserve">
          <source>While I can certainly do something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 확실히 이와 같은 것을 할 수 있지만 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc768109741ad8c044487170515a885dc32b560d" translate="yes" xml:space="preserve">
          <source>With Java 8 you can create a method taking a code to check and expected exception as parameters:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Java 8을 사용하면 코드를 사용하여 예외를 매개 변수로 확인하는 메소드를 작성할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4202238021c3d3d344294052b908f52279bf824d" translate="yes" xml:space="preserve">
          <source>With a near-complete rewrite of JUnit 5, assertions have been &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;improved&lt;/a&gt; a bit, they may prove interesting as an out of the box way to assert properly exception. But really the assertion API is still a bit poor, there's nothing outside &lt;a href=&quot;http://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code&gt;assertThrows&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 5를 거의 완전히 다시 작성하면 어설 션이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약간 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개선&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외를 올바르게 선언하는 즉시 사용 가능한 방법으로 흥미로울 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 실제로 어설 션 API는 여전히 약간 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;assertThrows&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 외부에는 아무것도 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92c083c04b131ed116c4c9639125d245a3e6d5d0" translate="yes" xml:space="preserve">
          <source>With the JDK8, lambdas enter the test scene, and they have proved to be an interesting way to assert exceptional behaviour. AssertJ has been updated to provide a nice fluent API to assert exceptional behaviour.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JDK8을 사용하면 람다는 테스트 현장에 들어가고 뛰어난 행동을 나타내는 흥미로운 방법으로 판명되었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ는 유창한 유창한 API를 제공하여 예외적 인 행동을하도록 업데이트되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4aa81c029ce8fcf3e21332a9dcad45e422f4f33" translate="yes" xml:space="preserve">
          <source>Yields the actual exception object that was thrown so that you can further examine it</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제 예외 개체를 생성하여 추가로 검사 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="417c1213af1b3ef366e06d7bf5bf317413cee5c8" translate="yes" xml:space="preserve">
          <source>You can also do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 또한 이것을 할 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f8c20a5c086e5288f75f38e976c17b7ff84a8519" translate="yes" xml:space="preserve">
          <source>You can precisely indicate what code you are expecting to throw the exception</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외를 던질 것으로 예상되는 코드를 정확하게 나타낼 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92335825aae19b52e0cdaae712a6b98bc0671750" translate="yes" xml:space="preserve">
          <source>You can use the assertion framework of your choice to make assertions about the caught exception</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선택한 어설 션 프레임 워크를 사용하여 포착 된 예외에 대한 어설 션을 만들 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8af58a8874116d40253ecf326d2c95109ad24fda" translate="yes" xml:space="preserve">
          <source>You could read more about exceptions testing in &lt;a href=&quot;https://github.com/junit-team/junit4/wiki/Exception-testing&quot;&gt;JUnit4 wiki for Exception testing&lt;/a&gt; and &lt;a href=&quot;http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/index.html&quot;&gt;bad.robot - Expecting Exceptions JUnit Rule&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/wiki/Exception-testing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 테스트&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/index.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bad.robot-예상 예외 JUnit 규칙&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대해서는 JUnit4 위키&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 예외 테스트에 대해 자세히 읽을 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d51e7955f4b27fa8954ee0896044996be487854f" translate="yes" xml:space="preserve">
          <source>You don't need to list the expected exception in the &lt;code&gt;throws&lt;/code&gt; clause</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;throws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 절에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상 예외를 나열 할 필요는 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82ba5b4d4b044734ddd7e2166cc6c8039e72c59e" translate="yes" xml:space="preserve">
          <source>You get a useful exception message if the code in the lambda doesn't throw an exception, and a stacktrace if it throws a different exception</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;람다의 코드에서 예외가 발생하지 않으면 유용한 예외 메시지가 표시되고 다른 예외가 발생하면 스택 추적&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c3c19751ea40fc805ff2ca53fa356cc5cea9d8df" translate="yes" xml:space="preserve">
          <source>You have to define a FunctionalInterface, because &lt;code&gt;Runnable&lt;/code&gt; doesn't declare the required &lt;code&gt;throws&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 필수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;throws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선언하지 않기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때문에 FunctionalInterface를 정의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c74ec5165195e2729611a56f6d525f0f4a2b84ea" translate="yes" xml:space="preserve">
          <source>Zero dependencies: no need for mockito, no need powermock; and works just fine with final classes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;종속성 없음 : mockito 필요 없음, powermock 필요 없음; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최종 수업에서 잘 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4c696d387c4633a3aa19a8e45cb96e14df4e8a68" translate="yes" xml:space="preserve">
          <source>add &lt;code&gt;public ExpectedException exception = ExpectedException.none();&lt;/code&gt;,
then:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;public ExpectedException exception = ExpectedException.none();&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 추가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예외 = ExpectedException.none (); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1bf09c26600f613f8e3c657ad97a7da3bdc6f8c7" translate="yes" xml:space="preserve">
          <source>and then inside your test:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 테스트 내부에서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5640631cb2453aab6080517c0bd17d9c54c08f20" translate="yes" xml:space="preserve">
          <source>assertThrown accepts a functional interface, whose instances can be created with lambda expressions, method references, or constructor references. assertThrown accepting that interface will expect and be ready to handle an exception.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;assertThrown은 람다 식, 메서드 참조 또는 생성자 참조로 인스턴스를 만들 수있는 기능적 인터페이스를 허용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 인터페이스를 수락하면 예외를 처리하고 처리 할 준비가됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2e24c2f55e4b51a6f9babf340481090ad63fc6d" translate="yes" xml:space="preserve">
          <source>easy to use</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하기 쉬운&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="04dfe86bf9228e63e2bdc6db55d8a67549be3fb6" translate="yes" xml:space="preserve">
          <source>following example is from: &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;Junit 5 User Guide&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 예제는 다음과 같습니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Junit 5 사용자 안내서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c2948b2d534d8e584f39ea8f99846535e1813c4" translate="yes" xml:space="preserve">
          <source>for junit4.x, use the ExpectedException rule</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;junit4.x의 경우 ExpectedException 규칙을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3aadd91f4d24b2f4cba552b24bcf9f30f30db6a" translate="yes" xml:space="preserve">
          <source>for junit4.x, use the optional 'expected' attribute of Test annonation</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;junit4.x의 경우, 선택 테스트 테스트의 '예상'속성을 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d126a6ddec041a6ba6a4de08844c2af5904d944c" translate="yes" xml:space="preserve">
          <source>for junit5.x, you can use &lt;code&gt;assertThrows&lt;/code&gt; as following</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 경우 다음과 같이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;assertThrows&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5196ca5f5eb790bd10ea01412ffe93a4347dff99" translate="yes" xml:space="preserve">
          <source>for more info, you can read &lt;a href=&quot;https://github.com/junit-team/junit/wiki/Exception-testing&quot;&gt;this document&lt;/a&gt; and &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;junit5 user guide&lt;/a&gt; for details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit/wiki/Exception-testing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;junit5 사용 설명서&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c66af54c551dae837c8d2383011ab7116a14bee" translate="yes" xml:space="preserve">
          <source>if you like junit 5, then you should like the 1st one</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;junit 5를 좋아한다면 첫 번째 것을 좋아해야합니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="13bb2ed66e12c6c0863b3b1b741990a6ab45c03c" translate="yes" xml:space="preserve">
          <source>if you use junit 3, then the 4th one is preferred</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;junit 3을 사용하면 네 번째 것이 선호됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6b820baece793e740542dc7e0dd82f430609afc" translate="yes" xml:space="preserve">
          <source>in junit, there are four ways to test exception.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;junit에는 예외를 테스트하는 네 가지 방법이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37134f3ebb10bb0ed06d4659cbaef5a61cfb1e14" translate="yes" xml:space="preserve">
          <source>junit4.x</source>
          <target state="translated">junit4.x</target>
        </trans-unit>
        <trans-unit id="feb264e37f5f68a42dd3c8cd55f462f3d14f5b15" translate="yes" xml:space="preserve">
          <source>junit5.x</source>
          <target state="translated">junit5.x</target>
        </trans-unit>
        <trans-unit id="0b32085deb680ecdcf517c2137f7c9b4f700a936" translate="yes" xml:space="preserve">
          <source>localised check - more precise and allows to have multiple assertions like this within one test if needed</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현지화 된 검사-보다 정확하고 필요한 경우 하나의 테스트 내에서 이와 같은 여러 가지 주장을 할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="292b28b56b39ba618ab26bca4b57dc0af2d6018a" translate="yes" xml:space="preserve">
          <source>not relying on any library</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떤 라이브러리에도 의존하지 않습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bcf345da8bd34dbc5eede3873ee9187403a892fa" translate="yes" xml:space="preserve">
          <source>post-JDK8 : Use &lt;strong&gt;AssertJ&lt;/strong&gt; or custom lambdas to assert &lt;em&gt;exceptional&lt;/em&gt; behaviour.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;post-JDK8 : &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 커스텀 람다를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;뛰어난&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 동작을 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cc7658de547acba2d68d8ec390ce29d3bf5a261" translate="yes" xml:space="preserve">
          <source>pre-JDK8 : I will recommend the old good &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block. (&lt;em&gt;Don't forget to add a &lt;code&gt;fail()&lt;/code&gt; assertion before the &lt;code&gt;catch&lt;/code&gt; block&lt;/em&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pre-JDK8 : 오래된 좋은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블록을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추천합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;em&gt; &lt;code&gt;catch&lt;/code&gt; &lt;/em&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블록 &lt;/font&gt;&lt;/em&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;앞에 &lt;/font&gt;&lt;/em&gt;&lt;em&gt; &lt;code&gt;fail()&lt;/code&gt; &lt;/em&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 어설 션 &lt;/font&gt;&lt;/em&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 추가하는 것을 잊지 마십시오&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd1b646ebd1f6844c60dd91951c6867e43857114" translate="yes" xml:space="preserve">
          <source>so</source>
          <target state="translated">so</target>
        </trans-unit>
        <trans-unit id="9ffa41c067b1a56940d23a52b09058d6105cbdd8" translate="yes" xml:space="preserve">
          <source>the 2nd way is used when you only want test the type of exception</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 방법은 예외 유형 만 테스트하려는 경우에 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="805d24321cb30b35873ba13b61645086e4e73fb0" translate="yes" xml:space="preserve">
          <source>the first and last two are used when you want test exception message further</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째와 마지막 두 개는 테스트 예외 메시지를 추가로 원할 때 사용됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5b8c8d03a1c7a94624bdd4d926f5654337b71cdb" translate="yes" xml:space="preserve">
          <source>this provides a lot of features which can be used to improve our JUnit tests.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 JUnit 테스트를 개선하는 데 사용할 수있는 많은 기능을 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d889a63184d70aa9a29900d5ede59a0361e031b" translate="yes" xml:space="preserve">
          <source>you also can use the classic try/catch way widely used under junit 3 framework</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;junit 3 프레임 워크에서 널리 사용되는 클래식 try / catch 방식을 사용할 수도 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
