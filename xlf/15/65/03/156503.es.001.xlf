<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/156503">
    <body>
      <group id="156503">
        <trans-unit id="ac4f0a7323985e5b1b34d8b5009e82994b2f3ce8" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://blog.michael.gr/2014/09/assertions-and-testing.html&quot;&gt;taken from my blog&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.michael.gr/2014/09/assertions-and-testing.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tomado de mi blog&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="290a64fb9953b1c0198244a5ec98e0ad73ba504f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://guide.agilealliance.org/guide/gwt.html&quot;&gt;BDD&lt;/a&gt; Style Solution: &lt;a href=&quot;http://junit.org/&quot;&gt;JUnit 4&lt;/a&gt; + &lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;Catch Exception&lt;/a&gt; + &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://guide.agilealliance.org/guide/gwt.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Soluci&amp;oacute;n de estilo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BDD&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; + &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Catch Exception&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; + &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5754759f6882a2dd3f1ed436fcc48c49f176cddc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/junit-team/junit4/pull/1519&quot;&gt;Pull request #1519&lt;/a&gt;: Deprecate ExpectedException</source>
          <target state="translated">&lt;a href=&quot;https://github.com/junit-team/junit4/pull/1519&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solicitud de extracci&amp;oacute;n n. &amp;deg; 1519&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : desaprobar excepci&amp;oacute;n esperada&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0f40592619890fd725bb6ead232e4b9cd569490" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Disclosure: I am the author of the blog and the project.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Divulgaci&amp;oacute;n: soy el autor del blog y del proyecto.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b253bf5235ae0bb6f4fdbb005994951698b95bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Regardless of Junit 4 or JUnit 5.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Independientemente de Junit 4 o JUnit 5.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59f9677a94d544d476e1640278adb3fce10336a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This answer has been copied from &lt;a href=&quot;https://stackoverflow.com/a/17428439/48136&quot;&gt;another question&lt;/a&gt; that don't have the same visibility, I am the same author.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta respuesta ha sido copiada de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/17428439/48136&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;otra pregunta&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que no tiene la misma visibilidad, yo soy el mismo autor.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="623ed34c81e1004fd240eefb41008364ffd6d47e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt; Now that JUnit 5 and JUnit 4.13 have been released, the best option would be to use &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;code&gt;Assertions.assertThrows()&lt;/code&gt;&lt;/a&gt;  (for JUnit 5) and &lt;code&gt;Assert.assertThrows()&lt;/code&gt; (for JUnit 4.13). See &lt;a href=&quot;https://stackoverflow.com/a/46514550/95725&quot;&gt;my other answer&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Editar:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ahora que se han lanzado JUnit 5 y JUnit 4.13, la mejor opci&amp;oacute;n ser&amp;iacute;a usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt; &lt;code&gt;Assertions.assertThrows()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (para JUnit 5) y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (para JUnit 4.13). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/46514550/95725&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mi otra respuesta&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para m&amp;aacute;s detalles.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8880e6bdfd765c7b3296460eef38ff4c60b09481" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original answer using JUnit 4.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Respuesta original usando JUnit 4.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="868de85256632769009d40f6cfc65f108023cb9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Taking all into account if you don't want to use the catch-exception tool, I will recommend the old good way of the &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block, at least up to the JDK7. And for JDK 8 users you might prefer to use AssertJ as it offers may more than just asserting exceptions.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Teniendo todo en cuenta si no desea utilizar la herramienta de excepci&amp;oacute;n de captura, recomendar&amp;eacute; la buena forma del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bloque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , al menos hasta el JDK7. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y para los usuarios de JDK 8, es posible que prefiera usar AssertJ, ya que ofrece m&amp;aacute;s que solo afirmar excepciones.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2805dde21a92f446dad6c1cc18026e4ff4c619e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; JUnit5 has an improvement for exceptions testing: &lt;code&gt;assertThrows&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Actualizaci&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JUnit5 tiene una mejora para las pruebas de excepciones: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a7e27fb366ac377812f56dcfb421d99fc7e46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;the long story&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la larga historia&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f79426c0e9f0d9b0c56f8d20a3f95a295aa85e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;tl;dr&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2238c39467a97fdf461abd1aa062f8f00e68f8b6" translate="yes" xml:space="preserve">
          <source>A rapid example taken from the home page :</source>
          <target state="translated">Un ejemplo rápido tomado de la página principal:</target>
        </trans-unit>
        <trans-unit id="a78a385843db0c0e9545953cb015985c862f4535" translate="yes" xml:space="preserve">
          <source>A similar method will be added to &lt;code&gt;org.junit Assert&lt;/code&gt; in JUnit 4.13.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se agregar&amp;aacute; un m&amp;eacute;todo similar a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;org.junit Assert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en JUnit 4.13.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39a42edfd18f9dd21aa16f671f8f69d40b35284f" translate="yes" xml:space="preserve">
          <source>Additionally to what &lt;a href=&quot;https://stackoverflow.com/users/95725/namshubwriter&quot;&gt;NamShubWriter&lt;/a&gt; has said, make sure that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s de lo que &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/95725/namshubwriter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NamShubWriter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ha dicho, aseg&amp;uacute;rese de que:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a106ef91e7d0bdb2874cb470ed5142532c53159" translate="yes" xml:space="preserve">
          <source>Allows you to check for multiple exceptions within a single test method</source>
          <target state="translated">Permite comprobar si hay múltiples excepciones en un solo método de prueba</target>
        </trans-unit>
        <trans-unit id="3ee667c80ec0e8d2618521d68eef1704227c70bc" translate="yes" xml:space="preserve">
          <source>Allows your tests to follow Arrange-Act-Assert</source>
          <target state="translated">Permite que sus pruebas sigan Arreglar-actuar-afirmar</target>
        </trans-unit>
        <trans-unit id="9f42937728e8ffb93aa836de3c186f493581ac3e" translate="yes" xml:space="preserve">
          <source>Also as the expectation is placed around in the method, depending on how the tested code is written then the wrong part of the test code can throw the exception, leading to false-positive test and I'm not sure that &lt;em&gt;PMD&lt;/em&gt;, &lt;em&gt;findbugs&lt;/em&gt; or &lt;em&gt;Sonar&lt;/em&gt; will give hints on such code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, como la expectativa se coloca en el m&amp;eacute;todo, dependiendo de c&amp;oacute;mo se escriba el c&amp;oacute;digo probado, la parte incorrecta del c&amp;oacute;digo de prueba puede arrojar la excepci&amp;oacute;n, lo que lleva a una prueba de falso positivo y no estoy seguro de que &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PMD&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;findbugs&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sonar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dar&amp;aacute; pistas sobre dicho c&amp;oacute;digo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61ded298c5ae4e58509f5a15e9ea95197e670406" translate="yes" xml:space="preserve">
          <source>Also if you remember name clash with &lt;code&gt;Matcher&lt;/code&gt; or &lt;code&gt;Assert&lt;/code&gt;, be prepared to meet the same clash with &lt;code&gt;Assertions&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, si recuerda el choque de nombres con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , prep&amp;aacute;rese para enfrentar el mismo choque con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assertions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b4ef4920ec8f7979bf4c3b35600408b4d5ab39f" translate="yes" xml:space="preserve">
          <source>Also, see this &lt;a href=&quot;https://github.com/junit-team/junit4/issues/706#issuecomment-21385116&quot;&gt;comment&lt;/a&gt; issue on JUnit of the author of &lt;code&gt;ExpectedException&lt;/code&gt;. &lt;a href=&quot;https://github.com/junit-team/junit4/wiki/4.13-Release-Notes&quot;&gt;JUnit 4.13-beta-2&lt;/a&gt; even deprecates this mechanism:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, vea este &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;problema de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/issues/706#issuecomment-21385116&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;comentario&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en JUnit del autor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/wiki/4.13-Release-Notes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4.13-beta-2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; incluso desprecia este mecanismo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ca5a3f48182f45b55ef86708c840c2962847e8f" translate="yes" xml:space="preserve">
          <source>And a sample test with &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y una prueba de muestra con &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c91f2901b306dda9da2eb00073392db603faa2ef" translate="yes" xml:space="preserve">
          <source>Apply judgement.</source>
          <target state="translated">Aplicar el juicio.</target>
        </trans-unit>
        <trans-unit id="22e6b61dd37bb9bc47b545c6548ca6a137afdd51" translate="yes" xml:space="preserve">
          <source>As answered before, there are many ways of dealing with exceptions in JUnit. But with Java 8 there is another one: using Lambda Expressions. With Lambda Expressions we can achieve a syntax like this:</source>
          <target state="translated">Como ya se ha dicho,hay muchas maneras de tratar las excepciones en JUnit.Pero con Java 8 hay otra:usando expresiones Lambda.Con las expresiones Lambda podemos lograr una sintaxis como esta:</target>
        </trans-unit>
        <trans-unit id="77132385aa3216bd055914838183a41144b302bc" translate="yes" xml:space="preserve">
          <source>As the description of the project says, it let a coder write in a fluent line of code catching the exception and offer this exception for the latter assertion. And you can use any assertion library like &lt;a href=&quot;https://github.com/hamcrest/JavaHamcrest&quot;&gt;Hamcrest&lt;/a&gt; or &lt;a href=&quot;https://github.com/joel-costigliola/assertj-core&quot;&gt;AssertJ&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como dice la descripci&amp;oacute;n del proyecto, permiti&amp;oacute; que un codificador escribiera en una l&amp;iacute;nea de c&amp;oacute;digo fluida para detectar la excepci&amp;oacute;n y ofrecer esta excepci&amp;oacute;n para la &amp;uacute;ltima afirmaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y puede usar cualquier biblioteca de aserciones como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/hamcrest/JavaHamcrest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hamcrest&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/joel-costigliola/assertj-core&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b365421cacb55208468677b2581f5f5d42a3a77" translate="yes" xml:space="preserve">
          <source>As you can see the code is really straightforward, you catch the exception on a specific line, the &lt;code&gt;then&lt;/code&gt; API is an alias that will use AssertJ APIs (similar to using &lt;code&gt;assertThat(ex).hasNoCause()...&lt;/code&gt;). &lt;em&gt;At some point the project relied on FEST-Assert the ancestor of AssertJ&lt;/em&gt;. &lt;strong&gt;EDIT:&lt;/strong&gt; It seems the project is brewing a Java 8 Lambdas support.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como puede ver, el c&amp;oacute;digo es realmente sencillo, detecta la excepci&amp;oacute;n en una l&amp;iacute;nea espec&amp;iacute;fica, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;then&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; API es un alias que usar&amp;aacute; API AssertJ (similar al uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThat(ex).hasNoCause()...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En alg&amp;uacute;n momento, el proyecto se bas&amp;oacute; en FEST-Assert, el antepasado de AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EDITAR:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Parece que el proyecto est&amp;aacute; gestando un soporte para Java 8 Lambdas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17eb62c1e2363b2484160950dd18ffdf3fe6932c" translate="yes" xml:space="preserve">
          <source>As you noticed &lt;code&gt;assertEquals&lt;/code&gt; is still returning &lt;code&gt;void&lt;/code&gt;, and as such doesn't allow chaining assertions like AssertJ.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como not&amp;oacute;, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertEquals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Equals&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sigue devolviendo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;void&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y como tal no permite encadenar afirmaciones como AssertJ.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5893237671855e1d51aa3743002c83c8e311c572" translate="yes" xml:space="preserve">
          <source>At the time of this writing, it is noteworthy to say this library is based on Mockito 1.x as it creates a mock of the tested object behind the scene. As Mockito is still not updated &lt;strong&gt;this library cannot work with final classes or final methods&lt;/strong&gt;. And even if it was based on Mockito 2 in the current version, this would require to declare a global mock maker (&lt;code&gt;inline-mock-maker&lt;/code&gt;), something that may not what you want, as this mock maker has different drawbacks that the regular mock maker.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al momento de escribir esto, es digno de menci&amp;oacute;n decir que esta biblioteca est&amp;aacute; basada en Mockito 1.x ya que crea una simulaci&amp;oacute;n del objeto probado detr&amp;aacute;s de la escena. Como Mockito todav&amp;iacute;a no est&amp;aacute; actualizado, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esta biblioteca no puede funcionar con clases finales o m&amp;eacute;todos finales&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . E incluso si se basara en Mockito 2 en la versi&amp;oacute;n actual, esto requerir&amp;iacute;a declarar un creador de simulacros global (creador de simulacros en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;inline-mock-maker&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), algo que puede no ser lo que desea, ya que este simulador tiene diferentes inconvenientes que el simulacro regular fabricante.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae53af5734737911244e91d3faf912aa179e5bb5" translate="yes" xml:space="preserve">
          <source>Be careful using expected exception, because it only asserts that the &lt;strong&gt;method&lt;/strong&gt; threw that exception, not a &lt;strong&gt;particular line of code&lt;/strong&gt; in the test.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga cuidado al usar la excepci&amp;oacute;n esperada, porque solo afirma que el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; arroj&amp;oacute; esa excepci&amp;oacute;n, no una &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;l&amp;iacute;nea de c&amp;oacute;digo particular&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la prueba.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="159af34715c3b25e86401bbd9bf13ed264fe0b88" translate="yes" xml:space="preserve">
          <source>Benefits:</source>
          <target state="translated">Benefits:</target>
        </trans-unit>
        <trans-unit id="a53d89f9e528ba9d9abec0dd33db18c2bf0e46c3" translate="yes" xml:space="preserve">
          <source>Built into JUnit</source>
          <target state="translated">Construido en JUnit</target>
        </trans-unit>
        <trans-unit id="cf837c922431bdae0f5c5706ff72c2eb45a17c9c" translate="yes" xml:space="preserve">
          <source>But these ways are not so elegant and don't mix well &lt;em&gt;readability wise&lt;/em&gt; with other tools. Moreover, JUnit tooling does have some pitfalls.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero estas formas no son tan elegantes y no combinan bien la &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;legibilidad&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con otras herramientas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, las herramientas JUnit tienen algunas dificultades.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="476168995c5223b4afbfab0c0fbaa18d09ec7729" translate="yes" xml:space="preserve">
          <source>Checks for an exception being thrown by a specific set of lines within your test method instead of any unknown line in the entire test method</source>
          <target state="translated">Comprueba si una excepción es lanzada por un conjunto específico de líneas dentro de su método de prueba en lugar de cualquier línea desconocida en todo el método de prueba</target>
        </trans-unit>
        <trans-unit id="87c3324dc481b98228acd94f1e69c063b010597a" translate="yes" xml:space="preserve">
          <source>Concise</source>
          <target state="translated">Concise</target>
        </trans-unit>
        <trans-unit id="1aeb822597cb413281743302035230681748156e" translate="yes" xml:space="preserve">
          <source>Currently, this library has two shortcomings :</source>
          <target state="translated">Actualmente,esta biblioteca tiene dos defectos:</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="f5dcba5584f96d0ae65ccf7c2c5dc2cde091a646" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;not&lt;/strong&gt; do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hacer esto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7f53cad4206ad9a3a7195adc40f347208ee8a8c" translate="yes" xml:space="preserve">
          <source>Does &lt;em&gt;not&lt;/em&gt; depend on any JUnit magic</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, no&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; depende de ninguna magia JUnit&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b92a3bf38a7f45b652216a09a601e6f90354c462" translate="yes" xml:space="preserve">
          <source>Even the expected exception is placed before the test statement, it breaks your reading flow if the tests follow BDD or AAA.</source>
          <target state="translated">Incluso la excepción esperada se coloca antes de la declaración de la prueba,se rompe el flujo de lectura si las pruebas siguen BDD o AAA.</target>
        </trans-unit>
        <trans-unit id="05d179f3167c5215f134c6f00b91c9d96ceba30b" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;http://jakegoulding.com/blog/2012/09/26/be-careful-when-using-junit-expected-exceptions/&quot;&gt;this&lt;/a&gt; blog post clearly illustrates how to assert that a certain exception is thrown.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Finalmente, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jakegoulding.com/blog/2012/09/26/be-careful-when-using-junit-expected-exceptions/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;esta&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; publicaci&amp;oacute;n de blog ilustra claramente c&amp;oacute;mo afirmar que se produce una cierta excepci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fd5b2df2f6110de30a10de9243155d07b8bc650" translate="yes" xml:space="preserve">
          <source>For JUnit5 and 4.13 see answer &lt;a href=&quot;https://stackoverflow.com/a/2935935/2986984&quot;&gt;https://stackoverflow.com/a/2935935/2986984&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para JUnit5 y 4.13, consulte la respuesta &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/2935935/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/2935935/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d86fbb6b66eb965b5c6ba6b4fa8074a5722ecae5" translate="yes" xml:space="preserve">
          <source>Have a look at this blog post describing this technique: &lt;a href=&quot;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&quot;&gt;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eche un vistazo a esta publicaci&amp;oacute;n de blog que describe esta t&amp;eacute;cnica: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4663e026aeb4a4a6ff5a2439baf3af5f71df8761" translate="yes" xml:space="preserve">
          <source>Here is a utility function that I wrote:</source>
          <target state="translated">Aquí hay una función de utilidad que escribí:</target>
        </trans-unit>
        <trans-unit id="566f06d4144450c109542ea6f372a33d3fcabbae" translate="yes" xml:space="preserve">
          <source>Here is an example that  verifies an exception is thrown, and uses &lt;a href=&quot;http://google.github.io/truth/&quot;&gt;Truth&lt;/a&gt; to  make assertions on the exception message:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un ejemplo que verifica que se produce una excepci&amp;oacute;n y usa &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://google.github.io/truth/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Verdad&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para hacer afirmaciones en el mensaje de excepci&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c20948611fb107b9082c98838db42932ee31705" translate="yes" xml:space="preserve">
          <source>Here is another way to check method thrown correct exception or not.</source>
          <target state="translated">Aquí hay otra forma de comprobar el método tirado excepción correcta o no.</target>
        </trans-unit>
        <trans-unit id="d1fb5110d4389a44c06e3d0b3a6e083a5ca00645" translate="yes" xml:space="preserve">
          <source>How about this:  Catch a very general exception, make sure it makes it out of the catch block, then assert that the class of the exception is what you expect it to be.  This assert will fail if a) the exception is of the wrong type (eg. if you got a Null Pointer instead) and b) the exception wasn't ever thrown.</source>
          <target state="translated">Qué tal esto:Coge una excepción muy general,asegúrate de que salga del bloque de captura,luego afirma que la clase de la excepción es la que esperas que sea.Esta afirmación fallará si a)la excepción es del tipo equivocado (por ejemplo,si tienes un puntero nulo en su lugar)y b)la excepción nunca fue lanzada.</target>
        </trans-unit>
        <trans-unit id="9262c633c91a4bd03ad15de46995d2a642ff8ae5" translate="yes" xml:space="preserve">
          <source>How can I use JUnit4 idiomatically to test that some code throws an exception?</source>
          <target state="translated">¿Cómo puedo usar JUnit4 idiomáticamente para probar que algún código lanza una excepción?</target>
        </trans-unit>
        <trans-unit id="863a65c205c7cc8fb151288cede87bfdd635aabb" translate="yes" xml:space="preserve">
          <source>How do you assert that a certain exception is thrown in JUnit 4 tests</source>
          <target state="translated">¿Cómo afirmas que una cierta excepción es lanzada en las pruebas de la Unidad 4</target>
        </trans-unit>
        <trans-unit id="d5c540da041f46b389b3afbcb42a7c109b42dcca" translate="yes" xml:space="preserve">
          <source>I recall that there is an annotation or an Assert.xyz or &lt;em&gt;something&lt;/em&gt; that is far less kludgy and far more in-the-spirit of JUnit for these sorts of situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Recuerdo que hay una anotaci&amp;oacute;n o un Assert.xyz o &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;algo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que es mucho menos grosero y mucho m&amp;aacute;s en el esp&amp;iacute;ritu de JUnit para este tipo de situaciones.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a226ca101285f0ffe5659e5a8cfd9c466764dda" translate="yes" xml:space="preserve">
          <source>I recomend library &lt;code&gt;assertj-core&lt;/code&gt; to handle exception in junit test</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Recomiendo la biblioteca &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertj-core&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para manejar la excepci&amp;oacute;n en la prueba junit&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c6df674e157d6f6b7a9f13f3c2d5e695d4561ad" translate="yes" xml:space="preserve">
          <source>I tend to use this for testing parameter validation, because such methods are usually very simple, but more complex tests might better be served with:</source>
          <target state="translated">Tiendo a usar esto para la validación de los parámetros de prueba,porque esos métodos suelen ser muy simples,pero las pruebas más complejas podrían ser mejor servidas:</target>
        </trans-unit>
        <trans-unit id="0f7cb26e6a9e00852055f7614f50b20c7d36d39b" translate="yes" xml:space="preserve">
          <source>I tried many of the methods here, but they were either complicated or didn't quite meet my requirements.  In fact, one can write a helper method quite simply:</source>
          <target state="translated">Probé muchos de los métodos de aquí,pero eran complicados o no cumplían con mis requisitos.De hecho,uno puede escribir un método de ayuda de forma bastante simple:</target>
        </trans-unit>
        <trans-unit id="ae55a497d0cbb8c4dd9cc20fd9835e8787fde7a4" translate="yes" xml:space="preserve">
          <source>I'd like to conclude that today (2017-03-03) &lt;strong&gt;AssertJ&lt;/strong&gt;'s ease of use, discoverable API, the rapid pace of development and as a &lt;em&gt;de facto&lt;/em&gt; test dependency is the best solution with JDK8 regardless of the test framework (JUnit or not), prior JDKs should instead rely on &lt;strong&gt;&lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt;&lt;/strong&gt; blocks even if they feel clunky.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Me gustar&amp;iacute;a concluir que hoy (2017-03-03) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la facilidad de uso de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , la API &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;reconocible&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el r&amp;aacute;pido ritmo de desarrollo y, como una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dependencia de prueba &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de facto&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , es la mejor soluci&amp;oacute;n con JDK8 independientemente del marco de prueba (JUnit o no), los JDK anteriores deber&amp;iacute;an confiar en &lt;/font&gt;&lt;strong&gt; &lt;code&gt;catch&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bloques &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;catch&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; incluso si se sienten torpes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de5a5ee34f8bec606757a8c0af6f407f5b874d1f" translate="yes" xml:space="preserve">
          <source>IMHO, the best way to check for exceptions in JUnit is the try/catch/fail/assert pattern:</source>
          <target state="translated">IMHO,la mejor manera de comprobar si hay excepciones en JUnit es el patrón de trycatchfailassert:</target>
        </trans-unit>
        <trans-unit id="11704c26d135105fc7d451f44d50b983156f0c24" translate="yes" xml:space="preserve">
          <source>If the test needs to check additional things on the exception like the cause or the message (good exception messages are really important, having a precise exception type may not be enough).</source>
          <target state="translated">Si la prueba necesita comprobar cosas adicionales sobre la excepción como la causa o el mensaje (los buenos mensajes de excepción son realmente importantes,tener un tipo de excepción preciso puede no ser suficiente).</target>
        </trans-unit>
        <trans-unit id="7687b060e4223314a18b9f9327703a1008129be9" translate="yes" xml:space="preserve">
          <source>If you haven't migrated to JUnit 5, but can use JUnit 4.7, you can use the &lt;a href=&quot;http://junit.org/javadoc/latest/org/junit/rules/ExpectedException.html&quot;&gt;&lt;code&gt;ExpectedException&lt;/code&gt;&lt;/a&gt; Rule:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no ha migrado a JUnit 5, pero puede usar JUnit 4.7, puede usar la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;regla &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/javadoc/latest/org/junit/rules/ExpectedException.html&quot;&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d2b9bcd34c3748f1d8928a45a07e53fe8edb59c" translate="yes" xml:space="preserve">
          <source>If you see the below example I am testing 3 things on the exception.</source>
          <target state="translated">Si ven el ejemplo de abajo,estoy probando 3 cosas en la excepción.</target>
        </trans-unit>
        <trans-unit id="46ea585a583802be1e276665cc9d50e4de00655f" translate="yes" xml:space="preserve">
          <source>If you use assertJ or google-truth, see answer  &lt;a href=&quot;https://stackoverflow.com/a/41019785/2986984&quot;&gt;https://stackoverflow.com/a/41019785/2986984&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si usa afirmar J o verdad de Google, vea la respuesta &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/41019785/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/41019785/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00367e4b722b6ccedf9944b521ce2685fa5c9ab4" translate="yes" xml:space="preserve">
          <source>If you would like a solution which:</source>
          <target state="translated">Si desea una solución que:</target>
        </trans-unit>
        <trans-unit id="302b45d2449bdddbeebd957fa070e2e732789402" translate="yes" xml:space="preserve">
          <source>In JUnit 4 or later you can test the exceptions as follows</source>
          <target state="translated">En la Unidad 4 o posterior se pueden probar las excepciones de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="b5efd7acfb583a66693b9c80bf1eea0d4690b82d" translate="yes" xml:space="preserve">
          <source>In java 8, like this:</source>
          <target state="translated">En Java 8,así:</target>
        </trans-unit>
        <trans-unit id="b08b3778cd534f6d51e3183c88e98f296ad3e40e" translate="yes" xml:space="preserve">
          <source>In my case I always get RuntimeException from db, but messages differ. And exception need to be handled respectively. Here is how I tested it:</source>
          <target state="translated">En mi caso siempre recibo RuntimeException de la DB,pero los mensajes son diferentes.Y las excepciones deben ser manejadas respectivamente.Así es como lo probé:</target>
        </trans-unit>
        <trans-unit id="96c2d16d18910393fa34dad4ce434a930253bd9f" translate="yes" xml:space="preserve">
          <source>It depends on the JUnit version and what assert libraries you use.</source>
          <target state="translated">Depende de la versión de JUnit y de las bibliotecas de afirmación que uses.</target>
        </trans-unit>
        <trans-unit id="130a6315b3a2b4c3e8e4014766f40a41a9e00f0b" translate="yes" xml:space="preserve">
          <source>It is possible to write yourself a &lt;em&gt;do it yourself&lt;/em&gt;&lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block or use the JUnit tools (&lt;code&gt;@Test(expected = ...)&lt;/code&gt; or the &lt;code&gt;@Rule ExpectedException&lt;/code&gt; JUnit rule feature).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es posible escribir usted mismo un &lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hacerlo usted mismo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bloque de &lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; o use las herramientas JUnit ( &lt;/font&gt; &lt;code&gt;@Test(expected = ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; o la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;funci&amp;oacute;n de regla JUnit de &lt;/font&gt; &lt;code&gt;@Rule ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d669d60063d11892348f1302cf5a67ba91e277d" translate="yes" xml:space="preserve">
          <source>It requires yet another test dependency.</source>
          <target state="translated">Requiere otra dependencia de la prueba.</target>
        </trans-unit>
        <trans-unit id="6e07a2abf8b6da35e5ed56b005678e231eb0ddbd" translate="yes" xml:space="preserve">
          <source>It's better than &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; because it guarantees the expected line in the test threw the exception and lets you check more details about the exception, such as message, easier:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es mejor que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; porque garantiza que la l&amp;iacute;nea esperada en la prueba arroj&amp;oacute; la excepci&amp;oacute;n y le permite verificar m&amp;aacute;s detalles sobre la excepci&amp;oacute;n, como el mensaje, m&amp;aacute;s f&amp;aacute;cil:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fedd70fe83bd74c52bbf7830f12d3cce2a1b714" translate="yes" xml:space="preserve">
          <source>JUnit 5 Solution</source>
          <target state="translated">Solución de la Unidad 5</target>
        </trans-unit>
        <trans-unit id="ea78bb209975d1b4a8ebd3cf2176f308609e1119" translate="yes" xml:space="preserve">
          <source>JUnit Test-FAQ</source>
          <target state="translated">JUnit Test-FAQ</target>
        </trans-unit>
        <trans-unit id="f4abca0c4e0ac83f6394860d23d90531a6c3df49" translate="yes" xml:space="preserve">
          <source>JUnit has built-in support for this, with an &lt;a href=&quot;http://junit.sourceforge.net/doc/faq/faq.htm#tests_7&quot;&gt;&quot;expected&quot; attribute&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit tiene soporte incorporado para esto, con un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.sourceforge.net/doc/faq/faq.htm#tests_7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;atributo &quot;esperado&quot;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c8e2f571b72489f4d21848f50ae8c6d743aeaac" translate="yes" xml:space="preserve">
          <source>Java 8 solution</source>
          <target state="translated">La solución de Java 8</target>
        </trans-unit>
        <trans-unit id="d1716c83a4e87e5736184ef1d8f87f6bf9dadf13" translate="yes" xml:space="preserve">
          <source>Junit4 solution with Java8 is to use this function:</source>
          <target state="translated">La solución de Junit4 con Java8 es usar esta función:</target>
        </trans-unit>
        <trans-unit id="d4c968683e3014c4712c42df2532ce3db614d0e1" translate="yes" xml:space="preserve">
          <source>Just make a Matcher that can be turned off and on, like this:</source>
          <target state="translated">Sólo haz una cerilla que se pueda apagar y encender,así:</target>
        </trans-unit>
        <trans-unit id="5c128b2812dee7ad7e93fcd6778fc2625e37df03" translate="yes" xml:space="preserve">
          <source>Maven/Gradle instructions here.</source>
          <target state="translated">Instrucciones de MavenGradle aquí.</target>
        </trans-unit>
        <trans-unit id="16f8a33046e5c11f07939264e9c73b83af105d79" translate="yes" xml:space="preserve">
          <source>More Infos about JUnit 5 on &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;aacute;s informaci&amp;oacute;n sobre JUnit 5 en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89b690e38cd9f0169d24872b81a24c39ad2d7b13" translate="yes" xml:space="preserve">
          <source>My solution using Java 8 lambdas:</source>
          <target state="translated">Mi solución usando Java 8 lambdas:</target>
        </trans-unit>
        <trans-unit id="fe6c8a91491b2b81e7f47278f66011c22bb146e8" translate="yes" xml:space="preserve">
          <source>Note that the only limitation is to use a &lt;code&gt;final&lt;/code&gt; object reference in lambda expression.
This solution allows to continue test assertions instead of expecting thowable at method level using &lt;code&gt;@Test(expected = IndexOutOfBoundsException.class)&lt;/code&gt; solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que la &amp;uacute;nica limitaci&amp;oacute;n es utilizar una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;referencia de objeto &lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la expresi&amp;oacute;n lambda. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta soluci&amp;oacute;n permite continuar con las aserciones de prueba en lugar de esperar que sea posible a nivel de m&amp;eacute;todo utilizando la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2c350143bda17ca6a735ac4858157df1e936ed9" translate="yes" xml:space="preserve">
          <source>Now that JUnit 5 and JUnit 4.13 have been released, the best option would be to use &lt;code&gt;Assertions.assertThrows()&lt;/code&gt;  (for JUnit 5) and &lt;code&gt;Assert.assertThrows()&lt;/code&gt; (for JUnit 4.13). See
the &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;Junit 5 User Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora que se han lanzado JUnit 5 y JUnit 4.13, la mejor opci&amp;oacute;n ser&amp;iacute;a usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assertions.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (para JUnit 5) y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (para JUnit 4.13). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Gu&amp;iacute;a del usuario de Junit 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64aa4d557cc62d15e8de600185aa21dbf6018da0" translate="yes" xml:space="preserve">
          <source>Reference :</source>
          <target state="translated">Referencia :</target>
        </trans-unit>
        <trans-unit id="7b56f61887000c5b1368e687dc53dc5dbe745cdc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.infoq.com/news/2009/07/junit-4.7-rules&quot;&gt;this article&lt;/a&gt; for details</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.infoq.com/news/2009/07/junit-4.7-rules&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;este art&amp;iacute;culo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para m&amp;aacute;s detalles.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3141ae0b8b1e342d56b99bf22862873fadd178c5" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;expected&lt;/code&gt; parameter &lt;code&gt;@Test(expected = FileNotFoundException.class)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Establezca el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;par&amp;aacute;metro &lt;/font&gt;&lt;/font&gt; &lt;code&gt;expected&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = FileNotFoundException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cd8fb51f0a9d9f03dedbb680b4afe34a4ae3390" translate="yes" xml:space="preserve">
          <source>So these above options have all their load of caveats, and clearly not immune to coder errors.</source>
          <target state="translated">Así que las opciones anteriores tienen todas sus advertencias,y claramente no son inmunes a los errores de los codificadores.</target>
        </trans-unit>
        <trans-unit id="af947e6a3220597f322432a58e5deca53f00439d" translate="yes" xml:space="preserve">
          <source>Take for example, you want to write Junit for below mentioned code fragment</source>
          <target state="translated">Por ejemplo,quieres escribir Junit para el fragmento de código mencionado abajo</target>
        </trans-unit>
        <trans-unit id="6edff877500826a43d850c04791222f623f46be5" translate="yes" xml:space="preserve">
          <source>Testing with &lt;code&gt;ExpectedException&lt;/code&gt; Rule.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Prueba con la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;regla de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a58af248f174de3f093e17daa310e93b3f1eff6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Test(expected = ...)&lt;/code&gt; feature is interesting as you can write less code and then writing this test is supposedly less prone to coding errors. &lt;strong&gt;But&lt;/strong&gt; this approach is lacking in some areas.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es interesante ya que puede escribir menos c&amp;oacute;digo y luego escribir esta prueba es supuestamente menos propensa a errores de codificaci&amp;oacute;n. &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; este enfoque es deficiente en algunas &amp;aacute;reas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1dc06b7f9b6634170586dbb763c2e124921ceae7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExpectedException&lt;/code&gt; rule is also an attempt to fix the previous caveats, but it feels a bit awkward to use as it uses an expectation style, &lt;em&gt;EasyMock&lt;/em&gt; users know very well this style. It might be convenient for some, but if you follow &lt;em&gt;Behaviour Driven Development&lt;/em&gt; (BDD) or &lt;em&gt;Arrange Act Assert&lt;/em&gt; (AAA) principles the &lt;code&gt;ExpectedException&lt;/code&gt; rule won't fit in those writing style. Aside from that it may suffer from the same issue as the &lt;code&gt;@Test&lt;/code&gt; way, depending on where you place the expectation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;regla &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n es un intento de corregir las advertencias anteriores, pero se siente un poco inc&amp;oacute;modo de usar ya que usa un estilo de expectativa, los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;usuarios de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EasyMock&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; conocen muy bien este estilo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede ser conveniente para algunos, pero si sigue los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;principios de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desarrollo Conducido por el Comportamiento&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (BDD) o &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Arrange Act Assert&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (AAA), la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;regla &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no encajar&amp;aacute; en esos estilos de escritura. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aparte de eso, puede sufrir el mismo problema que la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;forma &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , dependiendo de d&amp;oacute;nde coloque la expectativa.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8882bb1440410843bcf2f7d885b6e543a3a39f0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertTrue&lt;/code&gt; might be a bit strong for some people, so &lt;code&gt;assertThat(e.getMessage(), containsString(&quot;the message&quot;);&lt;/code&gt; might be preferable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertTrue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; podr&amp;iacute;a ser un poco fuerte para algunas personas, por lo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThat(e.getMessage(), containsString(&quot;the message&quot;);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; podr&amp;iacute;a ser preferible.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b5fe0e067468bc52dc3b961ada14185449ea0a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block you have to write the block around the tested behavior and write the assertion in the catch block, that may be fine but many find that this style interrupts the reading flow of a test. Also, you need to write an &lt;code&gt;Assert.fail&lt;/code&gt; at the end of the &lt;code&gt;try&lt;/code&gt; block. Otherwise, the test may miss one side of the assertions; &lt;em&gt;PMD&lt;/em&gt;, &lt;em&gt;findbugs&lt;/em&gt; or &lt;em&gt;Sonar&lt;/em&gt; will spot such issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bloque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene que escribir el bloque alrededor del comportamiento probado y escribir la afirmaci&amp;oacute;n en el bloque catch, eso puede estar bien, pero muchos encuentran que este estilo interrumpe el flujo de lectura de una prueba. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, debe escribir un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.fail&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; al final del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bloque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De lo contrario, la prueba puede perder un lado de las afirmaciones; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PMD&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;findbugs&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sonar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; detectar&amp;aacute;n tales problemas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caed1fc0e3d12619a6aa724230b2dd26dd50cfc4" translate="yes" xml:space="preserve">
          <source>The ExpectedException &lt;strong&gt;isn't&lt;/strong&gt; instantiated in say, the @Before method. This &lt;a href=&quot;https://garygregory.wordpress.com/2011/09/25/understaning-junit-method-order-execution/&quot;&gt;post&lt;/a&gt; clearly explains all the intricacies of JUnit's order of execution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La ExpectedException &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no se&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; instancia en, por ejemplo, el m&amp;eacute;todo @Before. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://garygregory.wordpress.com/2011/09/25/understaning-junit-method-order-execution/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;publicaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; explica claramente todas las complejidades de la orden de ejecuci&amp;oacute;n de JUnit.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b37e19cc945561b886bf68221fb886444bc07c2" translate="yes" xml:space="preserve">
          <source>The ExpectedException instance is &lt;strong&gt;public&lt;/strong&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/14335558/why-rule-annotated-fields-in-junit-has-to-be-public&quot;&gt;Related Question&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La instancia de ExpectedException es &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p&amp;uacute;blica&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14335558/why-rule-annotated-fields-in-junit-has-to-be-public&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pregunta relacionada&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3074035afc638460cf2901b6b68c3b8ee656dc30" translate="yes" xml:space="preserve">
          <source>The Type of exception thrown</source>
          <target state="translated">El tipo de excepción lanzada</target>
        </trans-unit>
        <trans-unit id="78f928bff9f9e6e2e57a2a0c91f11c5bdcb49692" translate="yes" xml:space="preserve">
          <source>The above code is to test for some unknown exception that may occur and the below one is to assert some exception with custom message.</source>
          <target state="translated">El código anterior es para probar alguna excepción desconocida que pueda ocurrir y el siguiente es para afirmar alguna excepción con un mensaje personalizado.</target>
        </trans-unit>
        <trans-unit id="6a4324df2c099f248984dde029daf34b01c998db" translate="yes" xml:space="preserve">
          <source>The advantages over the approaches in the other answers are:</source>
          <target state="translated">Las ventajas sobre los enfoques de las otras respuestas son:</target>
        </trans-unit>
        <trans-unit id="2268eda9d0ada1f061e52863d136ad9231b85269" translate="yes" xml:space="preserve">
          <source>The cause of the exception</source>
          <target state="translated">La causa de la excepción</target>
        </trans-unit>
        <trans-unit id="f97cdfc1fa335d0bfd7fed08ac67afd4766a56d5" translate="yes" xml:space="preserve">
          <source>The exception Message</source>
          <target state="translated">El mensaje de excepción</target>
        </trans-unit>
        <trans-unit id="fdc6b9c021049f324138b37ee49a748bdb227b07" translate="yes" xml:space="preserve">
          <source>The method Assert.assertThrows provides a nicer way for verifying exceptions. In addition, the use of ExpectedException is error-prone when used with other rules like TestWatcher because the order of rules is important in that case.</source>
          <target state="translated">El método Assert.assertThrows ofrece una forma más agradable de verificar las excepciones.Además,el uso de ExpectedException es propenso a errores cuando se utiliza con otras reglas como TestWatcher porque el orden de las reglas es importante en ese caso.</target>
        </trans-unit>
        <trans-unit id="b5cd4a85334237fb6c60808ffb2af13f868db206" translate="yes" xml:space="preserve">
          <source>The method can be used as follows:</source>
          <target state="translated">El método puede utilizarse de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="dfaa325ea886745a38081f22bdce45ba7cb127cb" translate="yes" xml:space="preserve">
          <source>The most flexible and elegant answer for Junit 4 I found in the &lt;a href=&quot;https://www.mkyong.com/unittest/junit-4-tutorial-2-expected-exception-test/&quot;&gt;Mkyong blog&lt;/a&gt;. It has the flexibility of the &lt;code&gt;try/catch&lt;/code&gt; using the &lt;code&gt;@Rule&lt;/code&gt; annotation. I like this approach because you can read specific attributes of a customized exception.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La respuesta m&amp;aacute;s flexible y elegante para Junit 4 la encontr&amp;eacute; en el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.mkyong.com/unittest/junit-4-tutorial-2-expected-exception-test/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;blog de Mkyong&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tiene la flexibilidad de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try/catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usando la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;anotaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Rule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Me gusta este enfoque porque puedes leer atributos espec&amp;iacute;ficos de una excepci&amp;oacute;n personalizada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46e0244d3eb6cdc5798eabe539b0cca2a8a88b5b" translate="yes" xml:space="preserve">
          <source>The original answer for &lt;code&gt;JUnit &amp;lt;= 4.12&lt;/code&gt; was:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La respuesta original para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JUnit &amp;lt;= 4.12&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; fue:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ae69ac8105e58c93b9dcd313ba1ca3e28404ec7" translate="yes" xml:space="preserve">
          <source>The source code can be found here: &lt;a href=&quot;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&quot;&gt;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El c&amp;oacute;digo fuente se puede encontrar aqu&amp;iacute;: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebe1c9878afc051e8a73f368928dd2ba3067ef79" translate="yes" xml:space="preserve">
          <source>There are several ways to test that an exception is thrown. I have also discussed the below options in my post &lt;a href=&quot;https://javacodehouse.com/junit-tutorial&quot;&gt;How to write great unit tests with JUnit&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay varias formas de probar que se produce una excepci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n he discutido las siguientes opciones en mi publicaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javacodehouse.com/junit-tutorial&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;mo escribir excelentes pruebas unitarias con JUnit&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ef8759bbc8655889fdf149f8f0d1652331a2850" translate="yes" xml:space="preserve">
          <source>There's a project I became aware of after creating this answer that looks promising, it's &lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;strong&gt;catch-exception&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay un proyecto que conoc&amp;iacute; despu&amp;eacute;s de crear esta respuesta que parece prometedor, es &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una excepci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7337fa2a40e867b41c17936dab2d72dbdbf7bfa" translate="yes" xml:space="preserve">
          <source>These issues won't apply once the library supports lambdas. However, the functionality will be duplicated by the AssertJ toolset.</source>
          <target state="translated">Estos temas no se aplicarán una vez que la biblioteca apoye a las lambdas.Sin embargo,la funcionalidad será duplicada por el conjunto de herramientas de AssertJ.</target>
        </trans-unit>
        <trans-unit id="564efdb9cd77d2f99e1b34d1a69bd1220dbf1065" translate="yes" xml:space="preserve">
          <source>This is less verbose than the ExpectedException rule of JUnit 4.7.
In comparison to the solution provided by skaffman, you can specify in which line of code you expect the exception. I hope this helps.</source>
          <target state="translated">Esto es menos verborreico que la regla de la ExpectedException de la Unidad 4.7.En comparación con la solución proporcionada por skaffman,puedes especificar en qué línea de código esperas la excepción.Espero que esto ayude.</target>
        </trans-unit>
        <trans-unit id="324c84ef9155e6a126aaf49dbf7312e078220cad" translate="yes" xml:space="preserve">
          <source>This is much better than &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; because the test will fail if &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown before &lt;code&gt;foo.doStuff()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es mucho mejor que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debido a que la prueba fallar&amp;aacute; si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es lanzado antes de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foo.doStuff()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="534d4a4a20f9c5b41db2e42f736689e570ad0cfd" translate="yes" xml:space="preserve">
          <source>This is relatively simple yet powerful technique.</source>
          <target state="translated">Esta es una técnica relativamente simple pero poderosa.</target>
        </trans-unit>
        <trans-unit id="54f748ecac5174aa8df346c990ed67769458c916" translate="yes" xml:space="preserve">
          <source>Though answer &lt;a href=&quot;https://stackoverflow.com/a/31826781/2986984&quot;&gt;https://stackoverflow.com/a/31826781/2986984&lt;/a&gt; has more options for JUnit &amp;lt;= 4.12.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aunque la respuesta &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/31826781/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/31826781/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene m&amp;aacute;s opciones para JUnit &amp;lt;= 4.12.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2aae38a3a24150999bd438b927b885c8e4f207e" translate="yes" xml:space="preserve">
          <source>To solve the same problem I did set up a small project: 
&lt;a href=&quot;http://code.google.com/p/catch-exception/&quot;&gt;http://code.google.com/p/catch-exception/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para resolver el mismo problema, configur&amp;eacute; un peque&amp;ntilde;o proyecto: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/catch-exception/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://code.google.com/p/catch-exception/&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec17d2b0393d701bb378fb92b5f34cc43ec1456a" translate="yes" xml:space="preserve">
          <source>To use it:</source>
          <target state="translated">Para usarla:</target>
        </trans-unit>
        <trans-unit id="bd0dee6662b34ef748e9f0f88c1bd2f03ad006c0" translate="yes" xml:space="preserve">
          <source>Usage is then:</source>
          <target state="translated">El uso es entonces:</target>
        </trans-unit>
        <trans-unit id="4a2d0c065aebe88058e7899fe2b03390f5fd9ac8" translate="yes" xml:space="preserve">
          <source>Use it as follows:</source>
          <target state="translated">Úsalo de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="c25719584b0c55f883ce167c1e0c5621ac28771d" translate="yes" xml:space="preserve">
          <source>Use it like this:</source>
          <target state="translated">Úsalo así:</target>
        </trans-unit>
        <trans-unit id="625616de528e3608d2c8ef1894b30123766bb565" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;try&lt;/code&gt;&lt;code&gt;catch&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;code&gt;catch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4515c25bb10d55d959785b6806f9814b2b2cfa4" translate="yes" xml:space="preserve">
          <source>Using an &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt; assertion, which can be used alongside JUnit:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usando una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aserci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que se puede usar junto con JUnit:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a2597f3d43e9d70b7869692b34a7ef5cfed3628" translate="yes" xml:space="preserve">
          <source>Using this little helper you would write</source>
          <target state="translated">Usando este pequeño ayudante escribirías</target>
        </trans-unit>
        <trans-unit id="35a0b03728b2690fab142e842a49b227b3f9e87f" translate="yes" xml:space="preserve">
          <source>Utilizes Java 8 lambdas</source>
          <target state="translated">Utiliza Java 8 lambdas</target>
        </trans-unit>
        <trans-unit id="e2d7b5f51e15c23a10c5462769b73146c79ee156" translate="yes" xml:space="preserve">
          <source>We can use an assertion fail after the method that must return an exception:</source>
          <target state="translated">Podemos usar una afirmación fallida después del método que debe devolver una excepción:</target>
        </trans-unit>
        <trans-unit id="17aa817903f06fe24b510714c601224f6834c2e8" translate="yes" xml:space="preserve">
          <source>While I can certainly do something like this:</source>
          <target state="translated">Aunque ciertamente puedo hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="fc768109741ad8c044487170515a885dc32b560d" translate="yes" xml:space="preserve">
          <source>With Java 8 you can create a method taking a code to check and expected exception as parameters:</source>
          <target state="translated">Con Java 8 se puede crear un método tomando como parámetros un código de comprobación y una excepción esperada:</target>
        </trans-unit>
        <trans-unit id="4202238021c3d3d344294052b908f52279bf824d" translate="yes" xml:space="preserve">
          <source>With a near-complete rewrite of JUnit 5, assertions have been &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;improved&lt;/a&gt; a bit, they may prove interesting as an out of the box way to assert properly exception. But really the assertion API is still a bit poor, there's nothing outside &lt;a href=&quot;http://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code&gt;assertThrows&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con una reescritura casi completa de JUnit 5, las afirmaciones se han &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mejorado&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un poco, pueden resultar interesantes como una forma inmediata de afirmar correctamente la excepci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero realmente la API de afirmaci&amp;oacute;n sigue siendo un poco pobre, no hay nada fuera de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92c083c04b131ed116c4c9639125d245a3e6d5d0" translate="yes" xml:space="preserve">
          <source>With the JDK8, lambdas enter the test scene, and they have proved to be an interesting way to assert exceptional behaviour. AssertJ has been updated to provide a nice fluent API to assert exceptional behaviour.</source>
          <target state="translated">Con el JDK8,los lambdas entran en la escena de la prueba,y han demostrado ser una forma interesante de afirmar un comportamiento excepcional.AssertJ ha sido actualizado para proporcionar una API fluida y agradable para afirmar un comportamiento excepcional.</target>
        </trans-unit>
        <trans-unit id="b4aa81c029ce8fcf3e21332a9dcad45e422f4f33" translate="yes" xml:space="preserve">
          <source>Yields the actual exception object that was thrown so that you can further examine it</source>
          <target state="translated">Da el objeto de excepción real que fue arrojado para que puedas examinarlo más a fondo</target>
        </trans-unit>
        <trans-unit id="417c1213af1b3ef366e06d7bf5bf317413cee5c8" translate="yes" xml:space="preserve">
          <source>You can also do this:</source>
          <target state="translated">También puedes hacer esto:</target>
        </trans-unit>
        <trans-unit id="f8c20a5c086e5288f75f38e976c17b7ff84a8519" translate="yes" xml:space="preserve">
          <source>You can precisely indicate what code you are expecting to throw the exception</source>
          <target state="translated">Puede indicar con precisión qué código espera lanzar la excepción</target>
        </trans-unit>
        <trans-unit id="92335825aae19b52e0cdaae712a6b98bc0671750" translate="yes" xml:space="preserve">
          <source>You can use the assertion framework of your choice to make assertions about the caught exception</source>
          <target state="translated">Puede usar el marco de aserción de su elección para hacer afirmaciones sobre la excepción atrapada</target>
        </trans-unit>
        <trans-unit id="8af58a8874116d40253ecf326d2c95109ad24fda" translate="yes" xml:space="preserve">
          <source>You could read more about exceptions testing in &lt;a href=&quot;https://github.com/junit-team/junit4/wiki/Exception-testing&quot;&gt;JUnit4 wiki for Exception testing&lt;/a&gt; and &lt;a href=&quot;http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/index.html&quot;&gt;bad.robot - Expecting Exceptions JUnit Rule&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede leer m&amp;aacute;s sobre las pruebas de excepciones en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/wiki/Exception-testing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit4 wiki para pruebas de excepciones&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/index.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bad.robot - Regla de JUnit de excepciones de espera&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d51e7955f4b27fa8954ee0896044996be487854f" translate="yes" xml:space="preserve">
          <source>You don't need to list the expected exception in the &lt;code&gt;throws&lt;/code&gt; clause</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No necesita enumerar la excepci&amp;oacute;n esperada en la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cl&amp;aacute;usula &lt;/font&gt;&lt;/font&gt; &lt;code&gt;throws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82ba5b4d4b044734ddd7e2166cc6c8039e72c59e" translate="yes" xml:space="preserve">
          <source>You get a useful exception message if the code in the lambda doesn't throw an exception, and a stacktrace if it throws a different exception</source>
          <target state="translated">Obtienes un mensaje de excepción útil si el código en el lambda no lanza una excepción,y un stacktrace si lanza una excepción diferente</target>
        </trans-unit>
        <trans-unit id="c3c19751ea40fc805ff2ca53fa356cc5cea9d8df" translate="yes" xml:space="preserve">
          <source>You have to define a FunctionalInterface, because &lt;code&gt;Runnable&lt;/code&gt; doesn't declare the required &lt;code&gt;throws&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; definir una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;interfaz&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcional, porque &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Runnable&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no declara los &lt;/font&gt;&lt;/font&gt; &lt;code&gt;throws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; necesarios &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c74ec5165195e2729611a56f6d525f0f4a2b84ea" translate="yes" xml:space="preserve">
          <source>Zero dependencies: no need for mockito, no need powermock; and works just fine with final classes.</source>
          <target state="translated">Cero dependencias:no hay necesidad de mockito,no hay necesidad de powermock;y funciona muy bien con las clases finales.</target>
        </trans-unit>
        <trans-unit id="4c696d387c4633a3aa19a8e45cb96e14df4e8a68" translate="yes" xml:space="preserve">
          <source>add &lt;code&gt;public ExpectedException exception = ExpectedException.none();&lt;/code&gt;,
then:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;agregar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;public ExpectedException exception = ExpectedException.none();&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, entonces:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1bf09c26600f613f8e3c657ad97a7da3bdc6f8c7" translate="yes" xml:space="preserve">
          <source>and then inside your test:</source>
          <target state="translated">y luego dentro de tu prueba:</target>
        </trans-unit>
        <trans-unit id="5640631cb2453aab6080517c0bd17d9c54c08f20" translate="yes" xml:space="preserve">
          <source>assertThrown accepts a functional interface, whose instances can be created with lambda expressions, method references, or constructor references. assertThrown accepting that interface will expect and be ready to handle an exception.</source>
          <target state="translated">assertThrown acepta una interfaz funcional,cuyas instancias pueden ser creadas con expresiones lambda,referencias de métodos o referencias de constructores.assertThrown aceptando esa interfaz esperará y estará listo para manejar una excepción.</target>
        </trans-unit>
        <trans-unit id="c2e24c2f55e4b51a6f9babf340481090ad63fc6d" translate="yes" xml:space="preserve">
          <source>easy to use</source>
          <target state="translated">fácil de usar</target>
        </trans-unit>
        <trans-unit id="04dfe86bf9228e63e2bdc6db55d8a67549be3fb6" translate="yes" xml:space="preserve">
          <source>following example is from: &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;Junit 5 User Guide&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el siguiente ejemplo es de: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Junit 5 Gu&amp;iacute;a del usuario&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c2948b2d534d8e584f39ea8f99846535e1813c4" translate="yes" xml:space="preserve">
          <source>for junit4.x, use the ExpectedException rule</source>
          <target state="translated">para junit4.x,use la regla de la Excepción Esperada</target>
        </trans-unit>
        <trans-unit id="f3aadd91f4d24b2f4cba552b24bcf9f30f30db6a" translate="yes" xml:space="preserve">
          <source>for junit4.x, use the optional 'expected' attribute of Test annonation</source>
          <target state="translated">para junit4.x,use el atributo opcional &quot;esperado&quot; de Test annonation</target>
        </trans-unit>
        <trans-unit id="d126a6ddec041a6ba6a4de08844c2af5904d944c" translate="yes" xml:space="preserve">
          <source>for junit5.x, you can use &lt;code&gt;assertThrows&lt;/code&gt; as following</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para junit5.x, puede usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; siguiente manera&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5196ca5f5eb790bd10ea01412ffe93a4347dff99" translate="yes" xml:space="preserve">
          <source>for more info, you can read &lt;a href=&quot;https://github.com/junit-team/junit/wiki/Exception-testing&quot;&gt;this document&lt;/a&gt; and &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;junit5 user guide&lt;/a&gt; for details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener m&amp;aacute;s informaci&amp;oacute;n, puede leer &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit/wiki/Exception-testing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;este documento&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la gu&amp;iacute;a del usuario de junit5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c66af54c551dae837c8d2383011ab7116a14bee" translate="yes" xml:space="preserve">
          <source>if you like junit 5, then you should like the 1st one</source>
          <target state="translated">si te gusta el 5 de junio,entonces te gustará el primero.</target>
        </trans-unit>
        <trans-unit id="13bb2ed66e12c6c0863b3b1b741990a6ab45c03c" translate="yes" xml:space="preserve">
          <source>if you use junit 3, then the 4th one is preferred</source>
          <target state="translated">si se usa el 3 de junio,entonces se prefiere el 4º.</target>
        </trans-unit>
        <trans-unit id="c6b820baece793e740542dc7e0dd82f430609afc" translate="yes" xml:space="preserve">
          <source>in junit, there are four ways to test exception.</source>
          <target state="translated">En Junit,hay cuatro maneras de probar la excepción.</target>
        </trans-unit>
        <trans-unit id="37134f3ebb10bb0ed06d4659cbaef5a61cfb1e14" translate="yes" xml:space="preserve">
          <source>junit4.x</source>
          <target state="translated">junit4.x</target>
        </trans-unit>
        <trans-unit id="feb264e37f5f68a42dd3c8cd55f462f3d14f5b15" translate="yes" xml:space="preserve">
          <source>junit5.x</source>
          <target state="translated">junit5.x</target>
        </trans-unit>
        <trans-unit id="0b32085deb680ecdcf517c2137f7c9b4f700a936" translate="yes" xml:space="preserve">
          <source>localised check - more precise and allows to have multiple assertions like this within one test if needed</source>
          <target state="translated">comprobación localizada-más precisa y permite tener múltiples afirmaciones como esta en una sola prueba si es necesario</target>
        </trans-unit>
        <trans-unit id="292b28b56b39ba618ab26bca4b57dc0af2d6018a" translate="yes" xml:space="preserve">
          <source>not relying on any library</source>
          <target state="translated">no depender de ninguna biblioteca</target>
        </trans-unit>
        <trans-unit id="bcf345da8bd34dbc5eede3873ee9187403a892fa" translate="yes" xml:space="preserve">
          <source>post-JDK8 : Use &lt;strong&gt;AssertJ&lt;/strong&gt; or custom lambdas to assert &lt;em&gt;exceptional&lt;/em&gt; behaviour.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;post-JDK8: use &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o lambdas personalizadas para afirmar &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;un&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; comportamiento &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;excepcional&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cc7658de547acba2d68d8ec390ce29d3bf5a261" translate="yes" xml:space="preserve">
          <source>pre-JDK8 : I will recommend the old good &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block. (&lt;em&gt;Don't forget to add a &lt;code&gt;fail()&lt;/code&gt; assertion before the &lt;code&gt;catch&lt;/code&gt; block&lt;/em&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pre-JDK8: recomendar&amp;eacute; el viejo buen &lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bloque. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No olvide agregar una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aserci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fail()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; antes del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bloque &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd1b646ebd1f6844c60dd91951c6867e43857114" translate="yes" xml:space="preserve">
          <source>so</source>
          <target state="translated">so</target>
        </trans-unit>
        <trans-unit id="9ffa41c067b1a56940d23a52b09058d6105cbdd8" translate="yes" xml:space="preserve">
          <source>the 2nd way is used when you only want test the type of exception</source>
          <target state="translated">la 2ª vía se utiliza cuando sólo se quiere probar el tipo de excepción</target>
        </trans-unit>
        <trans-unit id="805d24321cb30b35873ba13b61645086e4e73fb0" translate="yes" xml:space="preserve">
          <source>the first and last two are used when you want test exception message further</source>
          <target state="translated">el primero y los dos últimos se utilizan cuando se desea el mensaje de excepción de la prueba más adelante</target>
        </trans-unit>
        <trans-unit id="5b8c8d03a1c7a94624bdd4d926f5654337b71cdb" translate="yes" xml:space="preserve">
          <source>this provides a lot of features which can be used to improve our JUnit tests.</source>
          <target state="translated">esto proporciona un montón de características que pueden ser utilizadas para mejorar nuestras pruebas de JUnit.</target>
        </trans-unit>
        <trans-unit id="8d889a63184d70aa9a29900d5ede59a0361e031b" translate="yes" xml:space="preserve">
          <source>you also can use the classic try/catch way widely used under junit 3 framework</source>
          <target state="translated">también se puede utilizar la forma clásica de captura de trucos ampliamente utilizada en el marco de Junit 3</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
