<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/156503">
    <body>
      <group id="156503">
        <trans-unit id="ac4f0a7323985e5b1b34d8b5009e82994b2f3ce8" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;http://blog.michael.gr/2014/09/assertions-and-testing.html&quot;&gt;taken from my blog&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.michael.gr/2014/09/assertions-and-testing.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;摘自我的博客&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="290a64fb9953b1c0198244a5ec98e0ad73ba504f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://guide.agilealliance.org/guide/gwt.html&quot;&gt;BDD&lt;/a&gt; Style Solution: &lt;a href=&quot;http://junit.org/&quot;&gt;JUnit 4&lt;/a&gt; + &lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;Catch Exception&lt;/a&gt; + &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://guide.agilealliance.org/guide/gwt.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BDD&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;样式解决方案：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; + &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;捕获异常&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; + &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5754759f6882a2dd3f1ed436fcc48c49f176cddc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/junit-team/junit4/pull/1519&quot;&gt;Pull request #1519&lt;/a&gt;: Deprecate ExpectedException</source>
          <target state="translated">&lt;a href=&quot;https://github.com/junit-team/junit4/pull/1519&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拉取请求＃1519&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：弃用ExpectedException&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0f40592619890fd725bb6ead232e4b9cd569490" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Disclosure: I am the author of the blog and the project.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;披露：我是博客和项目的作者。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b253bf5235ae0bb6f4fdbb005994951698b95bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Regardless of Junit 4 or JUnit 5.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无论是Junit 4还是JUnit 5。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59f9677a94d544d476e1640278adb3fce10336a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This answer has been copied from &lt;a href=&quot;https://stackoverflow.com/a/17428439/48136&quot;&gt;another question&lt;/a&gt; that don't have the same visibility, I am the same author.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这个答案是从&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/17428439/48136&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另一个问题获得的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，该&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的知名度不一样，我是同一位作者。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="623ed34c81e1004fd240eefb41008364ffd6d47e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edit:&lt;/strong&gt; Now that JUnit 5 and JUnit 4.13 have been released, the best option would be to use &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;code&gt;Assertions.assertThrows()&lt;/code&gt;&lt;/a&gt;  (for JUnit 5) and &lt;code&gt;Assert.assertThrows()&lt;/code&gt; (for JUnit 4.13). See &lt;a href=&quot;https://stackoverflow.com/a/46514550/95725&quot;&gt;my other answer&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编辑：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在已经发布了JUnit 5和JUnit 4.13，最好的选择是使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt; &lt;code&gt;Assertions.assertThrows()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; （对于JUnit 5）和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（对于JUnit 4.13）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/46514550/95725&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我的其他答案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以获取详细信息。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8880e6bdfd765c7b3296460eef38ff4c60b09481" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Original answer using JUnit 4.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用JUnit 4的原始答案。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="868de85256632769009d40f6cfc65f108023cb9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Taking all into account if you don't want to use the catch-exception tool, I will recommend the old good way of the &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block, at least up to the JDK7. And for JDK 8 users you might prefer to use AssertJ as it offers may more than just asserting exceptions.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不想使用catch-exception工具，请考虑所有因素，我将推荐使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;块&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的旧方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，至少可以使用JDK7。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于JDK 8用户，您可能更喜欢使用AssertJ，因为它提供的不仅仅是断言异常。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2805dde21a92f446dad6c1cc18026e4ff4c619e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update:&lt;/strong&gt; JUnit5 has an improvement for exceptions testing: &lt;code&gt;assertThrows&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JUnit5对异常测试进行了改进：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a7e27fb366ac377812f56dcfb421d99fc7e46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;the long story&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;长话&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f79426c0e9f0d9b0c56f8d20a3f95a295aa85e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tl;dr&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;tl;dr&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2238c39467a97fdf461abd1aa062f8f00e68f8b6" translate="yes" xml:space="preserve">
          <source>A rapid example taken from the home page :</source>
          <target state="translated">一个快速的例子,取自首页。</target>
        </trans-unit>
        <trans-unit id="a78a385843db0c0e9545953cb015985c862f4535" translate="yes" xml:space="preserve">
          <source>A similar method will be added to &lt;code&gt;org.junit Assert&lt;/code&gt; in JUnit 4.13.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类似的方法将添加到&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4.13中的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;org.junit Assert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39a42edfd18f9dd21aa16f671f8f69d40b35284f" translate="yes" xml:space="preserve">
          <source>Additionally to what &lt;a href=&quot;https://stackoverflow.com/users/95725/namshubwriter&quot;&gt;NamShubWriter&lt;/a&gt; has said, make sure that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除了&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/95725/namshubwriter&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NamShubWriter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所说的以外，请确保：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4a106ef91e7d0bdb2874cb470ed5142532c53159" translate="yes" xml:space="preserve">
          <source>Allows you to check for multiple exceptions within a single test method</source>
          <target state="translated">允许你在一个测试方法中检查多个异常。</target>
        </trans-unit>
        <trans-unit id="3ee667c80ec0e8d2618521d68eef1704227c70bc" translate="yes" xml:space="preserve">
          <source>Allows your tests to follow Arrange-Act-Assert</source>
          <target state="translated">允许您的测试按照排列-行为-断言的方式进行测试</target>
        </trans-unit>
        <trans-unit id="9f42937728e8ffb93aa836de3c186f493581ac3e" translate="yes" xml:space="preserve">
          <source>Also as the expectation is placed around in the method, depending on how the tested code is written then the wrong part of the test code can throw the exception, leading to false-positive test and I'm not sure that &lt;em&gt;PMD&lt;/em&gt;, &lt;em&gt;findbugs&lt;/em&gt; or &lt;em&gt;Sonar&lt;/em&gt; will give hints on such code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，由于方法中的期望值很高，这取决于测试代码的编写方式，然后测试代码的错误部分会引发异常，从而导致测试结果为假阳性，并且我不确定&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PMD&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;findbugs&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;还是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sonar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将提供有关此类代码的提示。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61ded298c5ae4e58509f5a15e9ea95197e670406" translate="yes" xml:space="preserve">
          <source>Also if you remember name clash with &lt;code&gt;Matcher&lt;/code&gt; or &lt;code&gt;Assert&lt;/code&gt;, be prepared to meet the same clash with &lt;code&gt;Assertions&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另外，如果您还记得与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发生的名称冲突&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，请准备好与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assertions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;发生相同的冲突&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b4ef4920ec8f7979bf4c3b35600408b4d5ab39f" translate="yes" xml:space="preserve">
          <source>Also, see this &lt;a href=&quot;https://github.com/junit-team/junit4/issues/706#issuecomment-21385116&quot;&gt;comment&lt;/a&gt; issue on JUnit of the author of &lt;code&gt;ExpectedException&lt;/code&gt;. &lt;a href=&quot;https://github.com/junit-team/junit4/wiki/4.13-Release-Notes&quot;&gt;JUnit 4.13-beta-2&lt;/a&gt; even deprecates this mechanism:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另外，请参见&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;作者的有关JUnit的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/issues/706#issuecomment-21385116&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/wiki/4.13-Release-Notes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit 4.13-beta-2&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;甚至不赞成使用此机制：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4ca5a3f48182f45b55ef86708c840c2962847e8f" translate="yes" xml:space="preserve">
          <source>And a sample test with &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt; :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以及使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行的示例测试&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c91f2901b306dda9da2eb00073392db603faa2ef" translate="yes" xml:space="preserve">
          <source>Apply judgement.</source>
          <target state="translated">适用判断。</target>
        </trans-unit>
        <trans-unit id="22e6b61dd37bb9bc47b545c6548ca6a137afdd51" translate="yes" xml:space="preserve">
          <source>As answered before, there are many ways of dealing with exceptions in JUnit. But with Java 8 there is another one: using Lambda Expressions. With Lambda Expressions we can achieve a syntax like this:</source>
          <target state="translated">正如前面回答的那样,在JUnit中,有很多处理异常的方法。但在Java 8中,还有一种方法:使用Lambda表达式。使用Lambda表达式,我们可以实现这样的语法。</target>
        </trans-unit>
        <trans-unit id="77132385aa3216bd055914838183a41144b302bc" translate="yes" xml:space="preserve">
          <source>As the description of the project says, it let a coder write in a fluent line of code catching the exception and offer this exception for the latter assertion. And you can use any assertion library like &lt;a href=&quot;https://github.com/hamcrest/JavaHamcrest&quot;&gt;Hamcrest&lt;/a&gt; or &lt;a href=&quot;https://github.com/joel-costigliola/assertj-core&quot;&gt;AssertJ&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正如该项目的描述所言，它使编码器可以流畅地编写一行代码来捕获异常，并为后者的断言提供此异常。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用任何断言库，例如&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/hamcrest/JavaHamcrest&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hamcrest&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/joel-costigliola/assertj-core&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4b365421cacb55208468677b2581f5f5d42a3a77" translate="yes" xml:space="preserve">
          <source>As you can see the code is really straightforward, you catch the exception on a specific line, the &lt;code&gt;then&lt;/code&gt; API is an alias that will use AssertJ APIs (similar to using &lt;code&gt;assertThat(ex).hasNoCause()...&lt;/code&gt;). &lt;em&gt;At some point the project relied on FEST-Assert the ancestor of AssertJ&lt;/em&gt;. &lt;strong&gt;EDIT:&lt;/strong&gt; It seems the project is brewing a Java 8 Lambdas support.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如您所见，代码确实非常简单，您在特定行上捕获了异常，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;then&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; API是将使用AssertJ API的别名（类似于使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThat(ex).hasNoCause()...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在某些时候，该项目依赖于FEST-声明AssertJ的祖先&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编辑：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;似乎该项目正在酝酿对Java 8 Lambdas的支持。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17eb62c1e2363b2484160950dd18ffdf3fe6932c" translate="yes" xml:space="preserve">
          <source>As you noticed &lt;code&gt;assertEquals&lt;/code&gt; is still returning &lt;code&gt;void&lt;/code&gt;, and as such doesn't allow chaining assertions like AssertJ.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所见，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertEquals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仍返回&lt;/font&gt;&lt;/font&gt; &lt;code&gt;void&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此不允许像AssertJ这样的链式断言。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5893237671855e1d51aa3743002c83c8e311c572" translate="yes" xml:space="preserve">
          <source>At the time of this writing, it is noteworthy to say this library is based on Mockito 1.x as it creates a mock of the tested object behind the scene. As Mockito is still not updated &lt;strong&gt;this library cannot work with final classes or final methods&lt;/strong&gt;. And even if it was based on Mockito 2 in the current version, this would require to declare a global mock maker (&lt;code&gt;inline-mock-maker&lt;/code&gt;), something that may not what you want, as this mock maker has different drawbacks that the regular mock maker.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在撰写本文时，值得注意的是，该库基于Mockito 1.x，因为它创建了幕后被测对象的模拟。由于Mockito仍未更新，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此该库无法使用最终类或最终方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。即使它基于当前版本的Mockito 2，这也需要声明一个全局模拟制作器（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;inline-mock-maker&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），这可能不是您想要的，因为此模拟制作器具有与常规模拟制作器不同的缺点制作者。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae53af5734737911244e91d3faf912aa179e5bb5" translate="yes" xml:space="preserve">
          <source>Be careful using expected exception, because it only asserts that the &lt;strong&gt;method&lt;/strong&gt; threw that exception, not a &lt;strong&gt;particular line of code&lt;/strong&gt; in the test.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请小心使用预期的异常，因为它仅断言该&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引发了该异常，而不是测试中的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特定代码行&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="159af34715c3b25e86401bbd9bf13ed264fe0b88" translate="yes" xml:space="preserve">
          <source>Benefits:</source>
          <target state="translated">Benefits:</target>
        </trans-unit>
        <trans-unit id="a53d89f9e528ba9d9abec0dd33db18c2bf0e46c3" translate="yes" xml:space="preserve">
          <source>Built into JUnit</source>
          <target state="translated">内置到JUnit中</target>
        </trans-unit>
        <trans-unit id="cf837c922431bdae0f5c5706ff72c2eb45a17c9c" translate="yes" xml:space="preserve">
          <source>But these ways are not so elegant and don't mix well &lt;em&gt;readability wise&lt;/em&gt; with other tools. Moreover, JUnit tooling does have some pitfalls.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是这些方法并不那么优雅，并且在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其他工具上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并没有很好地结合&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可读性&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而且，JUnit工具确实存在一些陷阱。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="476168995c5223b4afbfab0c0fbaa18d09ec7729" translate="yes" xml:space="preserve">
          <source>Checks for an exception being thrown by a specific set of lines within your test method instead of any unknown line in the entire test method</source>
          <target state="translated">检查你的测试方法中的某个特定的线段是否有异常,而不是整个测试方法中的任何未知线段。</target>
        </trans-unit>
        <trans-unit id="87c3324dc481b98228acd94f1e69c063b010597a" translate="yes" xml:space="preserve">
          <source>Concise</source>
          <target state="translated">Concise</target>
        </trans-unit>
        <trans-unit id="1aeb822597cb413281743302035230681748156e" translate="yes" xml:space="preserve">
          <source>Currently, this library has two shortcomings :</source>
          <target state="translated">目前,这个图书馆有两个不足之处。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="f5dcba5584f96d0ae65ccf7c2c5dc2cde091a646" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;not&lt;/strong&gt; do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;难道&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样做：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7f53cad4206ad9a3a7195adc40f347208ee8a8c" translate="yes" xml:space="preserve">
          <source>Does &lt;em&gt;not&lt;/em&gt; depend on any JUnit magic</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;难道&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;依赖于任何JUnit的魔法&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b92a3bf38a7f45b652216a09a601e6f90354c462" translate="yes" xml:space="preserve">
          <source>Even the expected exception is placed before the test statement, it breaks your reading flow if the tests follow BDD or AAA.</source>
          <target state="translated">即使是预期的异常放在测试语句之前,如果测试遵循BDD或AAA,也会破坏你的读取流程。</target>
        </trans-unit>
        <trans-unit id="05d179f3167c5215f134c6f00b91c9d96ceba30b" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;http://jakegoulding.com/blog/2012/09/26/be-careful-when-using-junit-expected-exceptions/&quot;&gt;this&lt;/a&gt; blog post clearly illustrates how to assert that a certain exception is thrown.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最后，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jakegoulding.com/blog/2012/09/26/be-careful-when-using-junit-expected-exceptions/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这篇&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;博客清楚地说明了如何断言某个异常被抛出。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5fd5b2df2f6110de30a10de9243155d07b8bc650" translate="yes" xml:space="preserve">
          <source>For JUnit5 and 4.13 see answer &lt;a href=&quot;https://stackoverflow.com/a/2935935/2986984&quot;&gt;https://stackoverflow.com/a/2935935/2986984&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于JUnit5和4.13，请参见答案&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/2935935/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/2935935/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d86fbb6b66eb965b5c6ba6b4fa8074a5722ecae5" translate="yes" xml:space="preserve">
          <source>Have a look at this blog post describing this technique: &lt;a href=&quot;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&quot;&gt;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;看看描述此技术的博客文章：&lt;/font&gt;&lt;a href=&quot;http://blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//blog.codeleak.pl/2014/07/junit-testing-exception-with-java-8-and-lambda-expressions.html&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4663e026aeb4a4a6ff5a2439baf3af5f71df8761" translate="yes" xml:space="preserve">
          <source>Here is a utility function that I wrote:</source>
          <target state="translated">下面是我写的一个实用函数。</target>
        </trans-unit>
        <trans-unit id="566f06d4144450c109542ea6f372a33d3fcabbae" translate="yes" xml:space="preserve">
          <source>Here is an example that  verifies an exception is thrown, and uses &lt;a href=&quot;http://google.github.io/truth/&quot;&gt;Truth&lt;/a&gt; to  make assertions on the exception message:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是一个验证抛出异常并使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://google.github.io/truth/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Truth&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对异常消息进行断言&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的示例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c20948611fb107b9082c98838db42932ee31705" translate="yes" xml:space="preserve">
          <source>Here is another way to check method thrown correct exception or not.</source>
          <target state="translated">下面是另一种检查方法抛出正确与否的异常的方法。</target>
        </trans-unit>
        <trans-unit id="d1fb5110d4389a44c06e3d0b3a6e083a5ca00645" translate="yes" xml:space="preserve">
          <source>How about this:  Catch a very general exception, make sure it makes it out of the catch block, then assert that the class of the exception is what you expect it to be.  This assert will fail if a) the exception is of the wrong type (eg. if you got a Null Pointer instead) and b) the exception wasn't ever thrown.</source>
          <target state="translated">这个怎么样。捕获一个非常一般的异常,确保它从捕获块中出来,然后断言异常的类是你所期望的。如果a)异常的类型不对(例如,如果你得到的是一个Null Pointer)和b)异常没有被抛出,那么这个断言就会失败。</target>
        </trans-unit>
        <trans-unit id="9262c633c91a4bd03ad15de46995d2a642ff8ae5" translate="yes" xml:space="preserve">
          <source>How can I use JUnit4 idiomatically to test that some code throws an exception?</source>
          <target state="translated">如何使用JUnit4习惯性地测试某些代码会抛出异常?</target>
        </trans-unit>
        <trans-unit id="863a65c205c7cc8fb151288cede87bfdd635aabb" translate="yes" xml:space="preserve">
          <source>How do you assert that a certain exception is thrown in JUnit 4 tests</source>
          <target state="translated">如何断言在JUnit 4测试中会抛出某个异常?</target>
        </trans-unit>
        <trans-unit id="d5c540da041f46b389b3afbcb42a7c109b42dcca" translate="yes" xml:space="preserve">
          <source>I recall that there is an annotation or an Assert.xyz or &lt;em&gt;something&lt;/em&gt; that is far less kludgy and far more in-the-spirit of JUnit for these sorts of situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我记得在这种情况下，有一个批注或一个Assert.xyz或&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一些&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不太&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;灵活&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的JUnit东西。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a226ca101285f0ffe5659e5a8cfd9c466764dda" translate="yes" xml:space="preserve">
          <source>I recomend library &lt;code&gt;assertj-core&lt;/code&gt; to handle exception in junit test</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我推荐库&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertj-core&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;处理junit测试中的异常&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c6df674e157d6f6b7a9f13f3c2d5e695d4561ad" translate="yes" xml:space="preserve">
          <source>I tend to use this for testing parameter validation, because such methods are usually very simple, but more complex tests might better be served with:</source>
          <target state="translated">我倾向于用这种方法进行参数验证测试,因为这种方法通常非常简单,但更复杂的测试可能用这种方法更好。</target>
        </trans-unit>
        <trans-unit id="0f7cb26e6a9e00852055f7614f50b20c7d36d39b" translate="yes" xml:space="preserve">
          <source>I tried many of the methods here, but they were either complicated or didn't quite meet my requirements.  In fact, one can write a helper method quite simply:</source>
          <target state="translated">我试过这里的很多方法,但不是很复杂,就是不太符合我的要求。其实,一个人写一个辅助方法很简单。</target>
        </trans-unit>
        <trans-unit id="ae55a497d0cbb8c4dd9cc20fd9835e8787fde7a4" translate="yes" xml:space="preserve">
          <source>I'd like to conclude that today (2017-03-03) &lt;strong&gt;AssertJ&lt;/strong&gt;'s ease of use, discoverable API, the rapid pace of development and as a &lt;em&gt;de facto&lt;/em&gt; test dependency is the best solution with JDK8 regardless of the test framework (JUnit or not), prior JDKs should instead rely on &lt;strong&gt;&lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt;&lt;/strong&gt; blocks even if they feel clunky.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我想得出结论，今天（2017年3月3日）&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的易用性，可发现API，快速发展的步伐，作为一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;事实上的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试依赖是JDK8最好的解决方案，无论测试框架（JUnit的不论是否），以前的JDK都应该依靠&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;块，即使它们感到笨重。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="de5a5ee34f8bec606757a8c0af6f407f5b874d1f" translate="yes" xml:space="preserve">
          <source>IMHO, the best way to check for exceptions in JUnit is the try/catch/fail/assert pattern:</source>
          <target state="translated">IMHO,在JUnit中检查异常的最好方法是trycatchfailassert模式。</target>
        </trans-unit>
        <trans-unit id="11704c26d135105fc7d451f44d50b983156f0c24" translate="yes" xml:space="preserve">
          <source>If the test needs to check additional things on the exception like the cause or the message (good exception messages are really important, having a precise exception type may not be enough).</source>
          <target state="translated">如果测试需要对异常的原因或消息等额外的东西进行检查(好的异常消息真的很重要,有一个准确的异常类型可能还不够)。</target>
        </trans-unit>
        <trans-unit id="7687b060e4223314a18b9f9327703a1008129be9" translate="yes" xml:space="preserve">
          <source>If you haven't migrated to JUnit 5, but can use JUnit 4.7, you can use the &lt;a href=&quot;http://junit.org/javadoc/latest/org/junit/rules/ExpectedException.html&quot;&gt;&lt;code&gt;ExpectedException&lt;/code&gt;&lt;/a&gt; Rule:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您尚未迁移到JUnit 5，但可以使用JUnit 4.7，则可以使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/javadoc/latest/org/junit/rules/ExpectedException.html&quot;&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;规则：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d2b9bcd34c3748f1d8928a45a07e53fe8edb59c" translate="yes" xml:space="preserve">
          <source>If you see the below example I am testing 3 things on the exception.</source>
          <target state="translated">如果你看到下面的例子,我在测试3件事情的例外。</target>
        </trans-unit>
        <trans-unit id="46ea585a583802be1e276665cc9d50e4de00655f" translate="yes" xml:space="preserve">
          <source>If you use assertJ or google-truth, see answer  &lt;a href=&quot;https://stackoverflow.com/a/41019785/2986984&quot;&gt;https://stackoverflow.com/a/41019785/2986984&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您使用assertJ或google-truth，请参见答案 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/41019785/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/41019785/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00367e4b722b6ccedf9944b521ce2685fa5c9ab4" translate="yes" xml:space="preserve">
          <source>If you would like a solution which:</source>
          <target state="translated">如果你想要的解决方案是:</target>
        </trans-unit>
        <trans-unit id="302b45d2449bdddbeebd957fa070e2e732789402" translate="yes" xml:space="preserve">
          <source>In JUnit 4 or later you can test the exceptions as follows</source>
          <target state="translated">在JUnit 4或更高的版本中,你可以按以下方式测试异常情况</target>
        </trans-unit>
        <trans-unit id="b5efd7acfb583a66693b9c80bf1eea0d4690b82d" translate="yes" xml:space="preserve">
          <source>In java 8, like this:</source>
          <target state="translated">在java 8中,像这样。</target>
        </trans-unit>
        <trans-unit id="b08b3778cd534f6d51e3183c88e98f296ad3e40e" translate="yes" xml:space="preserve">
          <source>In my case I always get RuntimeException from db, but messages differ. And exception need to be handled respectively. Here is how I tested it:</source>
          <target state="translated">在我的情况下,我总是从db得到RuntimeException,但消息不同。和异常需要分别处理。下面是我的测试方法。</target>
        </trans-unit>
        <trans-unit id="96c2d16d18910393fa34dad4ce434a930253bd9f" translate="yes" xml:space="preserve">
          <source>It depends on the JUnit version and what assert libraries you use.</source>
          <target state="translated">这取决于JUnit的版本和你使用的assert库。</target>
        </trans-unit>
        <trans-unit id="130a6315b3a2b4c3e8e4014766f40a41a9e00f0b" translate="yes" xml:space="preserve">
          <source>It is possible to write yourself a &lt;em&gt;do it yourself&lt;/em&gt;&lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block or use the JUnit tools (&lt;code&gt;@Test(expected = ...)&lt;/code&gt; or the &lt;code&gt;@Rule ExpectedException&lt;/code&gt; JUnit rule feature).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是可能自己写一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自己动手&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;块或使用JUnit工具（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Rule ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JUnit的规则功能）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d669d60063d11892348f1302cf5a67ba91e277d" translate="yes" xml:space="preserve">
          <source>It requires yet another test dependency.</source>
          <target state="translated">它需要另一个测试依赖关系。</target>
        </trans-unit>
        <trans-unit id="6e07a2abf8b6da35e5ed56b005678e231eb0ddbd" translate="yes" xml:space="preserve">
          <source>It's better than &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; because it guarantees the expected line in the test threw the exception and lets you check more details about the exception, such as message, easier:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它比&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更好，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为它可以保证测试中的预期行引发异常，并使您可以更轻松地检查有关异常的更多详细信息，例如消息：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0fedd70fe83bd74c52bbf7830f12d3cce2a1b714" translate="yes" xml:space="preserve">
          <source>JUnit 5 Solution</source>
          <target state="translated">JUnit 5解决方案</target>
        </trans-unit>
        <trans-unit id="ea78bb209975d1b4a8ebd3cf2176f308609e1119" translate="yes" xml:space="preserve">
          <source>JUnit Test-FAQ</source>
          <target state="translated">JUnit Test-FAQ</target>
        </trans-unit>
        <trans-unit id="f4abca0c4e0ac83f6394860d23d90531a6c3df49" translate="yes" xml:space="preserve">
          <source>JUnit has built-in support for this, with an &lt;a href=&quot;http://junit.sourceforge.net/doc/faq/faq.htm#tests_7&quot;&gt;&quot;expected&quot; attribute&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit对此具有内置支持，并带有&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.sourceforge.net/doc/faq/faq.htm#tests_7&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo; expected&amp;rdquo;属性&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c8e2f571b72489f4d21848f50ae8c6d743aeaac" translate="yes" xml:space="preserve">
          <source>Java 8 solution</source>
          <target state="translated">Java 8解决方案</target>
        </trans-unit>
        <trans-unit id="d1716c83a4e87e5736184ef1d8f87f6bf9dadf13" translate="yes" xml:space="preserve">
          <source>Junit4 solution with Java8 is to use this function:</source>
          <target state="translated">Junit4与Java8的解决方案是使用这个函数。</target>
        </trans-unit>
        <trans-unit id="d4c968683e3014c4712c42df2532ce3db614d0e1" translate="yes" xml:space="preserve">
          <source>Just make a Matcher that can be turned off and on, like this:</source>
          <target state="translated">只要做一个可以关闭和打开的匹配器,就像这样。</target>
        </trans-unit>
        <trans-unit id="5c128b2812dee7ad7e93fcd6778fc2625e37df03" translate="yes" xml:space="preserve">
          <source>Maven/Gradle instructions here.</source>
          <target state="translated">MavenGradle的说明在这里。</target>
        </trans-unit>
        <trans-unit id="16f8a33046e5c11f07939264e9c73b83af105d79" translate="yes" xml:space="preserve">
          <source>More Infos about JUnit 5 on &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关JUnit 5的更多信息，请参见&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89b690e38cd9f0169d24872b81a24c39ad2d7b13" translate="yes" xml:space="preserve">
          <source>My solution using Java 8 lambdas:</source>
          <target state="translated">我的解决方案是使用Java 8 lambdas。</target>
        </trans-unit>
        <trans-unit id="fe6c8a91491b2b81e7f47278f66011c22bb146e8" translate="yes" xml:space="preserve">
          <source>Note that the only limitation is to use a &lt;code&gt;final&lt;/code&gt; object reference in lambda expression.
This solution allows to continue test assertions instead of expecting thowable at method level using &lt;code&gt;@Test(expected = IndexOutOfBoundsException.class)&lt;/code&gt; solution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，唯一的限制是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在lambda表达式中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;final&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象引用。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此解决方案允许使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解决方案&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;继续测试断言，而不是期望在方法级别可访问&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a2c350143bda17ca6a735ac4858157df1e936ed9" translate="yes" xml:space="preserve">
          <source>Now that JUnit 5 and JUnit 4.13 have been released, the best option would be to use &lt;code&gt;Assertions.assertThrows()&lt;/code&gt;  (for JUnit 5) and &lt;code&gt;Assert.assertThrows()&lt;/code&gt; (for JUnit 4.13). See
the &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;Junit 5 User Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在已经发布了JUnit 5和JUnit 4.13，最好的选择是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assertions.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; （对于JUnit 5）和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.assertThrows()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（对于JUnit 4.13）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅《&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Junit 5用户指南》&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64aa4d557cc62d15e8de600185aa21dbf6018da0" translate="yes" xml:space="preserve">
          <source>Reference :</source>
          <target state="translated">参考资料:</target>
        </trans-unit>
        <trans-unit id="7b56f61887000c5b1368e687dc53dc5dbe745cdc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.infoq.com/news/2009/07/junit-4.7-rules&quot;&gt;this article&lt;/a&gt; for details</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参见&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.infoq.com/news/2009/07/junit-4.7-rules&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本文&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的详细信息&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3141ae0b8b1e342d56b99bf22862873fadd178c5" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;expected&lt;/code&gt; parameter &lt;code&gt;@Test(expected = FileNotFoundException.class)&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;设置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;expected&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = FileNotFoundException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cd8fb51f0a9d9f03dedbb680b4afe34a4ae3390" translate="yes" xml:space="preserve">
          <source>So these above options have all their load of caveats, and clearly not immune to coder errors.</source>
          <target state="translated">所以,以上这些选项都有它们的注意事项,显然也不能幸免于编码员的错误。</target>
        </trans-unit>
        <trans-unit id="af947e6a3220597f322432a58e5deca53f00439d" translate="yes" xml:space="preserve">
          <source>Take for example, you want to write Junit for below mentioned code fragment</source>
          <target state="translated">举例来说,你想为下面提到的代码片段编写Junit</target>
        </trans-unit>
        <trans-unit id="6edff877500826a43d850c04791222f623f46be5" translate="yes" xml:space="preserve">
          <source>Testing with &lt;code&gt;ExpectedException&lt;/code&gt; Rule.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;规则进行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a58af248f174de3f093e17daa310e93b3f1eff6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Test(expected = ...)&lt;/code&gt; feature is interesting as you can write less code and then writing this test is supposedly less prone to coding errors. &lt;strong&gt;But&lt;/strong&gt; this approach is lacking in some areas.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected = ...)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的特点是有趣的，因为你可以写更少的代码，然后写这个测试是假想不易编码错误。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在某些领域缺少这种方法。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1dc06b7f9b6634170586dbb763c2e124921ceae7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExpectedException&lt;/code&gt; rule is also an attempt to fix the previous caveats, but it feels a bit awkward to use as it uses an expectation style, &lt;em&gt;EasyMock&lt;/em&gt; users know very well this style. It might be convenient for some, but if you follow &lt;em&gt;Behaviour Driven Development&lt;/em&gt; (BDD) or &lt;em&gt;Arrange Act Assert&lt;/em&gt; (AAA) principles the &lt;code&gt;ExpectedException&lt;/code&gt; rule won't fit in those writing style. Aside from that it may suffer from the same issue as the &lt;code&gt;@Test&lt;/code&gt; way, depending on where you place the expectation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;规则也是解决以前的警告，企图，但感觉有点尴尬，因为它使用的期望风格来使用，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EasyMock的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用户非常清楚地知道这种风格。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于某些人来说可能很方便，但是如果您遵循&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行为驱动开发&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（BDD）或组织&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行为声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（AAA）的原则，则&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ExpectedException&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;规则将不适用于那些写作风格。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除此之外，它可能会遇到与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相同的问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，具体取决于放置期望的位置。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8882bb1440410843bcf2f7d885b6e543a3a39f0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertTrue&lt;/code&gt; might be a bit strong for some people, so &lt;code&gt;assertThat(e.getMessage(), containsString(&quot;the message&quot;);&lt;/code&gt; might be preferable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertTrue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能会有点强对某些人来说，这样&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThat(e.getMessage(), containsString(&quot;the message&quot;);&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能是可取的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b5fe0e067468bc52dc3b961ada14185449ea0a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block you have to write the block around the tested behavior and write the assertion in the catch block, that may be fine but many find that this style interrupts the reading flow of a test. Also, you need to write an &lt;code&gt;Assert.fail&lt;/code&gt; at the end of the &lt;code&gt;try&lt;/code&gt; block. Otherwise, the test may miss one side of the assertions; &lt;em&gt;PMD&lt;/em&gt;, &lt;em&gt;findbugs&lt;/em&gt; or &lt;em&gt;Sonar&lt;/em&gt; will spot such issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;你必须写周围的测试行为块，写在catch块断言块，这可能是罚款，但很多人觉得这种风格中断测试的阅读流程。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;另外，您需要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;块&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的末尾&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编写一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Assert.fail&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;否则，测试可能会遗漏断言的某一方面；&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PMD&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;findbugs&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sonar&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会发现此类问题。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caed1fc0e3d12619a6aa724230b2dd26dd50cfc4" translate="yes" xml:space="preserve">
          <source>The ExpectedException &lt;strong&gt;isn't&lt;/strong&gt; instantiated in say, the @Before method. This &lt;a href=&quot;https://garygregory.wordpress.com/2011/09/25/understaning-junit-method-order-execution/&quot;&gt;post&lt;/a&gt; clearly explains all the intricacies of JUnit's order of execution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该的ExpectedException &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在说实例化，@Before方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这篇&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://garygregory.wordpress.com/2011/09/25/understaning-junit-method-order-execution/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文章&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;清楚地解释了JUnit执行顺序的所有复杂性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b37e19cc945561b886bf68221fb886444bc07c2" translate="yes" xml:space="preserve">
          <source>The ExpectedException instance is &lt;strong&gt;public&lt;/strong&gt; (&lt;a href=&quot;https://stackoverflow.com/questions/14335558/why-rule-annotated-fields-in-junit-has-to-be-public&quot;&gt;Related Question&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ExpectedException实例是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;公共的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/14335558/why-rule-annotated-fields-in-junit-has-to-be-public&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相关问题&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3074035afc638460cf2901b6b68c3b8ee656dc30" translate="yes" xml:space="preserve">
          <source>The Type of exception thrown</source>
          <target state="translated">抛出的异常类型</target>
        </trans-unit>
        <trans-unit id="78f928bff9f9e6e2e57a2a0c91f11c5bdcb49692" translate="yes" xml:space="preserve">
          <source>The above code is to test for some unknown exception that may occur and the below one is to assert some exception with custom message.</source>
          <target state="translated">上面的代码是测试可能出现的一些未知的异常,下面的代码是用自定义消息断言一些异常。</target>
        </trans-unit>
        <trans-unit id="6a4324df2c099f248984dde029daf34b01c998db" translate="yes" xml:space="preserve">
          <source>The advantages over the approaches in the other answers are:</source>
          <target state="translated">与其他答案中的方法相比,其优势在于。</target>
        </trans-unit>
        <trans-unit id="2268eda9d0ada1f061e52863d136ad9231b85269" translate="yes" xml:space="preserve">
          <source>The cause of the exception</source>
          <target state="translated">异常情况的原因</target>
        </trans-unit>
        <trans-unit id="f97cdfc1fa335d0bfd7fed08ac67afd4766a56d5" translate="yes" xml:space="preserve">
          <source>The exception Message</source>
          <target state="translated">异常信息</target>
        </trans-unit>
        <trans-unit id="fdc6b9c021049f324138b37ee49a748bdb227b07" translate="yes" xml:space="preserve">
          <source>The method Assert.assertThrows provides a nicer way for verifying exceptions. In addition, the use of ExpectedException is error-prone when used with other rules like TestWatcher because the order of rules is important in that case.</source>
          <target state="translated">Assert.assertThrows方法为验证异常提供了一个更好的方法。此外,当使用ExpectedException与其他规则(如TestWatcher)一起使用时容易出错,因为在这种情况下,规则的顺序很重要。</target>
        </trans-unit>
        <trans-unit id="b5cd4a85334237fb6c60808ffb2af13f868db206" translate="yes" xml:space="preserve">
          <source>The method can be used as follows:</source>
          <target state="translated">该方法可采用以下方法:</target>
        </trans-unit>
        <trans-unit id="dfaa325ea886745a38081f22bdce45ba7cb127cb" translate="yes" xml:space="preserve">
          <source>The most flexible and elegant answer for Junit 4 I found in the &lt;a href=&quot;https://www.mkyong.com/unittest/junit-4-tutorial-2-expected-exception-test/&quot;&gt;Mkyong blog&lt;/a&gt;. It has the flexibility of the &lt;code&gt;try/catch&lt;/code&gt; using the &lt;code&gt;@Rule&lt;/code&gt; annotation. I like this approach because you can read specific attributes of a customized exception.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.mkyong.com/unittest/junit-4-tutorial-2-expected-exception-test/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mkyong博客中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;找到了Junit 4的最灵活，最优雅的答案&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它具有&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt; &lt;code&gt;@Rule&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;注释&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;try/catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的灵活性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我喜欢这种方法，因为您可以读取自定义异常的特定属性。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46e0244d3eb6cdc5798eabe539b0cca2a8a88b5b" translate="yes" xml:space="preserve">
          <source>The original answer for &lt;code&gt;JUnit &amp;lt;= 4.12&lt;/code&gt; was:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;JUnit &amp;lt;= 4.12&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的原始答案&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ae69ac8105e58c93b9dcd313ba1ca3e28404ec7" translate="yes" xml:space="preserve">
          <source>The source code can be found here: &lt;a href=&quot;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&quot;&gt;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以在这里找到源代码：&lt;/font&gt;&lt;a href=&quot;https://github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//github.com/kolorobot/unit-testing-demo/tree/master/src/test/java/com/github/kolorobot/exceptions/java8&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ebe1c9878afc051e8a73f368928dd2ba3067ef79" translate="yes" xml:space="preserve">
          <source>There are several ways to test that an exception is thrown. I have also discussed the below options in my post &lt;a href=&quot;https://javacodehouse.com/junit-tutorial&quot;&gt;How to write great unit tests with JUnit&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有几种方法可以测试是否引发了异常。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我的帖子中还讨论了以下选项：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://javacodehouse.com/junit-tutorial&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何使用JUnit编写出色的单元测试&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ef8759bbc8655889fdf149f8f0d1652331a2850" translate="yes" xml:space="preserve">
          <source>There's a project I became aware of after creating this answer that looks promising, it's &lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;strong&gt;catch-exception&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;创建这个答案后，我意识到一个项目看起来很有希望，那就是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Codearte/catch-exception&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;catch-exception&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7337fa2a40e867b41c17936dab2d72dbdbf7bfa" translate="yes" xml:space="preserve">
          <source>These issues won't apply once the library supports lambdas. However, the functionality will be duplicated by the AssertJ toolset.</source>
          <target state="translated">一旦库支持lambdas,这些问题将不适用。但是,这些功能将被AssertJ工具集所重复。</target>
        </trans-unit>
        <trans-unit id="564efdb9cd77d2f99e1b34d1a69bd1220dbf1065" translate="yes" xml:space="preserve">
          <source>This is less verbose than the ExpectedException rule of JUnit 4.7.
In comparison to the solution provided by skaffman, you can specify in which line of code you expect the exception. I hope this helps.</source>
          <target state="translated">这比JUnit 4.7中的ExpectedException规则要简单明了。与skaffman提供的解决方案相比,你可以指定在哪一行代码中期待异常。希望这对你有帮助。</target>
        </trans-unit>
        <trans-unit id="324c84ef9155e6a126aaf49dbf7312e078220cad" translate="yes" xml:space="preserve">
          <source>This is much better than &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; because the test will fail if &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown before &lt;code&gt;foo.doStuff()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这比&lt;/font&gt;&lt;/font&gt; &lt;code&gt;@Test(expected=IndexOutOfBoundsException.class)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;好得多，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为如果&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;foo.doStuff()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;之前抛出&lt;/font&gt;&lt;/font&gt; &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试将失败。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="534d4a4a20f9c5b41db2e42f736689e570ad0cfd" translate="yes" xml:space="preserve">
          <source>This is relatively simple yet powerful technique.</source>
          <target state="translated">这是一个相对简单而又强大的技巧。</target>
        </trans-unit>
        <trans-unit id="54f748ecac5174aa8df346c990ed67769458c916" translate="yes" xml:space="preserve">
          <source>Though answer &lt;a href=&quot;https://stackoverflow.com/a/31826781/2986984&quot;&gt;https://stackoverflow.com/a/31826781/2986984&lt;/a&gt; has more options for JUnit &amp;lt;= 4.12.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;虽然回答&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/31826781/2986984&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://stackoverflow.com/a/31826781/2986984&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于JUnit &amp;lt;= 4.12有更多选项。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2aae38a3a24150999bd438b927b885c8e4f207e" translate="yes" xml:space="preserve">
          <source>To solve the same problem I did set up a small project: 
&lt;a href=&quot;http://code.google.com/p/catch-exception/&quot;&gt;http://code.google.com/p/catch-exception/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了解决相同的问题，我确实设置了一个小项目：&lt;/font&gt;&lt;a href=&quot;http://code.google.com/p/catch-exception/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//code.google.com/p/catch-exception/&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec17d2b0393d701bb378fb92b5f34cc43ec1456a" translate="yes" xml:space="preserve">
          <source>To use it:</source>
          <target state="translated">要使用它。</target>
        </trans-unit>
        <trans-unit id="bd0dee6662b34ef748e9f0f88c1bd2f03ad006c0" translate="yes" xml:space="preserve">
          <source>Usage is then:</source>
          <target state="translated">用法是那么。</target>
        </trans-unit>
        <trans-unit id="4a2d0c065aebe88058e7899fe2b03390f5fd9ac8" translate="yes" xml:space="preserve">
          <source>Use it as follows:</source>
          <target state="translated">使用方法如下:</target>
        </trans-unit>
        <trans-unit id="c25719584b0c55f883ce167c1e0c5621ac28771d" translate="yes" xml:space="preserve">
          <source>Use it like this:</source>
          <target state="translated">就这样使用它。</target>
        </trans-unit>
        <trans-unit id="625616de528e3608d2c8ef1894b30123766bb565" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;try&lt;/code&gt;&lt;code&gt;catch&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;code&gt;catch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4515c25bb10d55d959785b6806f9814b2b2cfa4" translate="yes" xml:space="preserve">
          <source>Using an &lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt; assertion, which can be used alongside JUnit:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;断言，可以与JUnit一起使用：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a2597f3d43e9d70b7869692b34a7ef5cfed3628" translate="yes" xml:space="preserve">
          <source>Using this little helper you would write</source>
          <target state="translated">使用这个小助手,你可以写</target>
        </trans-unit>
        <trans-unit id="35a0b03728b2690fab142e842a49b227b3f9e87f" translate="yes" xml:space="preserve">
          <source>Utilizes Java 8 lambdas</source>
          <target state="translated">使用Java 8 lambdas</target>
        </trans-unit>
        <trans-unit id="e2d7b5f51e15c23a10c5462769b73146c79ee156" translate="yes" xml:space="preserve">
          <source>We can use an assertion fail after the method that must return an exception:</source>
          <target state="translated">我们可以在必须返回异常的方法之后使用断言失败。</target>
        </trans-unit>
        <trans-unit id="17aa817903f06fe24b510714c601224f6834c2e8" translate="yes" xml:space="preserve">
          <source>While I can certainly do something like this:</source>
          <target state="translated">虽然我当然可以做这样的事情。</target>
        </trans-unit>
        <trans-unit id="fc768109741ad8c044487170515a885dc32b560d" translate="yes" xml:space="preserve">
          <source>With Java 8 you can create a method taking a code to check and expected exception as parameters:</source>
          <target state="translated">在Java 8中,你可以创建一个方法,取一个代码来检查和预期的异常作为参数。</target>
        </trans-unit>
        <trans-unit id="4202238021c3d3d344294052b908f52279bf824d" translate="yes" xml:space="preserve">
          <source>With a near-complete rewrite of JUnit 5, assertions have been &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;improved&lt;/a&gt; a bit, they may prove interesting as an out of the box way to assert properly exception. But really the assertion API is still a bit poor, there's nothing outside &lt;a href=&quot;http://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt;&lt;code&gt;assertThrows&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过对JUnit 5的近乎完全的重写，断言得到了一些&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#writing-tests-assertions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;改进&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它们可以作为一种断言适当地断言异常的方式而引起人们的兴趣。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但实际上断言API仍然有点差，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/api/org/junit/jupiter/api/Assertions.html#assertThrows-java.lang.Class-org.junit.jupiter.api.function.Executable-&quot;&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之外没有任何东西&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92c083c04b131ed116c4c9639125d245a3e6d5d0" translate="yes" xml:space="preserve">
          <source>With the JDK8, lambdas enter the test scene, and they have proved to be an interesting way to assert exceptional behaviour. AssertJ has been updated to provide a nice fluent API to assert exceptional behaviour.</source>
          <target state="translated">随着JDK8的发布,lambdas进入了测试场景,事实证明它们是一种有趣的断言特殊行为的方式。AssertJ已经更新了,提供了一个不错的流畅的API来断言特殊行为。</target>
        </trans-unit>
        <trans-unit id="b4aa81c029ce8fcf3e21332a9dcad45e422f4f33" translate="yes" xml:space="preserve">
          <source>Yields the actual exception object that was thrown so that you can further examine it</source>
          <target state="translated">产生实际被抛出的异常对象,这样你就可以进一步检查它。</target>
        </trans-unit>
        <trans-unit id="417c1213af1b3ef366e06d7bf5bf317413cee5c8" translate="yes" xml:space="preserve">
          <source>You can also do this:</source>
          <target state="translated">你也可以这样做。</target>
        </trans-unit>
        <trans-unit id="f8c20a5c086e5288f75f38e976c17b7ff84a8519" translate="yes" xml:space="preserve">
          <source>You can precisely indicate what code you are expecting to throw the exception</source>
          <target state="translated">你可以精确地指出你期望抛出的异常代码是什么代码</target>
        </trans-unit>
        <trans-unit id="92335825aae19b52e0cdaae712a6b98bc0671750" translate="yes" xml:space="preserve">
          <source>You can use the assertion framework of your choice to make assertions about the caught exception</source>
          <target state="translated">你可以使用你所选择的断言框架来对捕获的异常进行断言。</target>
        </trans-unit>
        <trans-unit id="8af58a8874116d40253ecf326d2c95109ad24fda" translate="yes" xml:space="preserve">
          <source>You could read more about exceptions testing in &lt;a href=&quot;https://github.com/junit-team/junit4/wiki/Exception-testing&quot;&gt;JUnit4 wiki for Exception testing&lt;/a&gt; and &lt;a href=&quot;http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/index.html&quot;&gt;bad.robot - Expecting Exceptions JUnit Rule&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit4/wiki/Exception-testing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JUnit4 Wiki中了解有关异常测试&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://baddotrobot.com/blog/2012/03/27/expecting-exception-with-junit-rule/index.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bad.robot-预期异常JUnit规则的更多信息&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d51e7955f4b27fa8954ee0896044996be487854f" translate="yes" xml:space="preserve">
          <source>You don't need to list the expected exception in the &lt;code&gt;throws&lt;/code&gt; clause</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您无需在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;throws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子句中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;列出预期的异常&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="82ba5b4d4b044734ddd7e2166cc6c8039e72c59e" translate="yes" xml:space="preserve">
          <source>You get a useful exception message if the code in the lambda doesn't throw an exception, and a stacktrace if it throws a different exception</source>
          <target state="translated">如果lambda中的代码没有抛出异常,你会得到一个有用的异常信息,如果它抛出了不同的异常,你会得到一个堆栈跟踪信息</target>
        </trans-unit>
        <trans-unit id="c3c19751ea40fc805ff2ca53fa356cc5cea9d8df" translate="yes" xml:space="preserve">
          <source>You have to define a FunctionalInterface, because &lt;code&gt;Runnable&lt;/code&gt; doesn't declare the required &lt;code&gt;throws&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您必须定义一个FunctionalInterface，因为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有声明所需的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;throws&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c74ec5165195e2729611a56f6d525f0f4a2b84ea" translate="yes" xml:space="preserve">
          <source>Zero dependencies: no need for mockito, no need powermock; and works just fine with final classes.</source>
          <target state="translated">零依赖性:不需要mockito,不需要powermock;并且与final类一起工作也很好。</target>
        </trans-unit>
        <trans-unit id="4c696d387c4633a3aa19a8e45cb96e14df4e8a68" translate="yes" xml:space="preserve">
          <source>add &lt;code&gt;public ExpectedException exception = ExpectedException.none();&lt;/code&gt;,
then:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;/font&gt; &lt;code&gt;public ExpectedException exception = ExpectedException.none();&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;， 然后：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1bf09c26600f613f8e3c657ad97a7da3bdc6f8c7" translate="yes" xml:space="preserve">
          <source>and then inside your test:</source>
          <target state="translated">然后在你的测试里面。</target>
        </trans-unit>
        <trans-unit id="5640631cb2453aab6080517c0bd17d9c54c08f20" translate="yes" xml:space="preserve">
          <source>assertThrown accepts a functional interface, whose instances can be created with lambda expressions, method references, or constructor references. assertThrown accepting that interface will expect and be ready to handle an exception.</source>
          <target state="translated">assertThrown接受一个功能接口,其实例可以用lambda表达式、方法引用或构造函数引用来创建。</target>
        </trans-unit>
        <trans-unit id="c2e24c2f55e4b51a6f9babf340481090ad63fc6d" translate="yes" xml:space="preserve">
          <source>easy to use</source>
          <target state="translated">好用</target>
        </trans-unit>
        <trans-unit id="04dfe86bf9228e63e2bdc6db55d8a67549be3fb6" translate="yes" xml:space="preserve">
          <source>following example is from: &lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;Junit 5 User Guide&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下示例来自：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://junit.org/junit5/docs/current/user-guide/#extensions-exception-handling&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Junit 5用户指南&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c2948b2d534d8e584f39ea8f99846535e1813c4" translate="yes" xml:space="preserve">
          <source>for junit4.x, use the ExpectedException rule</source>
          <target state="translated">对于junit4.x,使用ExpectedException规则。</target>
        </trans-unit>
        <trans-unit id="f3aadd91f4d24b2f4cba552b24bcf9f30f30db6a" translate="yes" xml:space="preserve">
          <source>for junit4.x, use the optional 'expected' attribute of Test annonation</source>
          <target state="translated">对于junit4.x,使用Test annonation的可选的 &quot;预期 &quot;属性。</target>
        </trans-unit>
        <trans-unit id="d126a6ddec041a6ba6a4de08844c2af5904d944c" translate="yes" xml:space="preserve">
          <source>for junit5.x, you can use &lt;code&gt;assertThrows&lt;/code&gt; as following</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于junit5.x，可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按以下&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方式使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;assertThrows&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5196ca5f5eb790bd10ea01412ffe93a4347dff99" translate="yes" xml:space="preserve">
          <source>for more info, you can read &lt;a href=&quot;https://github.com/junit-team/junit/wiki/Exception-testing&quot;&gt;this document&lt;/a&gt; and &lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;junit5 user guide&lt;/a&gt; for details.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关更多信息，您可以阅读&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/junit-team/junit/wiki/Exception-testing&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此文档&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://junit.org/junit5/docs/current/user-guide/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;junit5用户指南&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以了解详细信息。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c66af54c551dae837c8d2383011ab7116a14bee" translate="yes" xml:space="preserve">
          <source>if you like junit 5, then you should like the 1st one</source>
          <target state="translated">如果你喜欢JUNIT 5,那么你应该会喜欢第一款</target>
        </trans-unit>
        <trans-unit id="13bb2ed66e12c6c0863b3b1b741990a6ab45c03c" translate="yes" xml:space="preserve">
          <source>if you use junit 3, then the 4th one is preferred</source>
          <target state="translated">如果你使用JUNIT 3,那么第四个是首选</target>
        </trans-unit>
        <trans-unit id="c6b820baece793e740542dc7e0dd82f430609afc" translate="yes" xml:space="preserve">
          <source>in junit, there are four ways to test exception.</source>
          <target state="translated">在JUNIT中,有四种方法来测试异常。</target>
        </trans-unit>
        <trans-unit id="37134f3ebb10bb0ed06d4659cbaef5a61cfb1e14" translate="yes" xml:space="preserve">
          <source>junit4.x</source>
          <target state="translated">junit4.x</target>
        </trans-unit>
        <trans-unit id="feb264e37f5f68a42dd3c8cd55f462f3d14f5b15" translate="yes" xml:space="preserve">
          <source>junit5.x</source>
          <target state="translated">junit5.x</target>
        </trans-unit>
        <trans-unit id="0b32085deb680ecdcf517c2137f7c9b4f700a936" translate="yes" xml:space="preserve">
          <source>localised check - more precise and allows to have multiple assertions like this within one test if needed</source>
          <target state="translated">局部化检查----更精确,如果需要的话,可以在一个测试中拥有多个像这样的断言。</target>
        </trans-unit>
        <trans-unit id="292b28b56b39ba618ab26bca4b57dc0af2d6018a" translate="yes" xml:space="preserve">
          <source>not relying on any library</source>
          <target state="translated">不靠谱</target>
        </trans-unit>
        <trans-unit id="bcf345da8bd34dbc5eede3873ee9187403a892fa" translate="yes" xml:space="preserve">
          <source>post-JDK8 : Use &lt;strong&gt;AssertJ&lt;/strong&gt; or custom lambdas to assert &lt;em&gt;exceptional&lt;/em&gt; behaviour.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JDK8之后：使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AssertJ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或自定义lambda来声明&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;异常&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行为。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cc7658de547acba2d68d8ec390ce29d3bf5a261" translate="yes" xml:space="preserve">
          <source>pre-JDK8 : I will recommend the old good &lt;code&gt;try&lt;/code&gt;-&lt;code&gt;catch&lt;/code&gt; block. (&lt;em&gt;Don't forget to add a &lt;code&gt;fail()&lt;/code&gt; assertion before the &lt;code&gt;catch&lt;/code&gt; block&lt;/em&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;预JDK8：我会建议老好&lt;/font&gt;&lt;/font&gt; &lt;code&gt;try&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;块。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不要忘记&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt; &lt;code&gt;catch&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;块&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之前&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fail()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;断言&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd1b646ebd1f6844c60dd91951c6867e43857114" translate="yes" xml:space="preserve">
          <source>so</source>
          <target state="translated">so</target>
        </trans-unit>
        <trans-unit id="9ffa41c067b1a56940d23a52b09058d6105cbdd8" translate="yes" xml:space="preserve">
          <source>the 2nd way is used when you only want test the type of exception</source>
          <target state="translated">第二种方法是当你只想测试异常类型时使用的</target>
        </trans-unit>
        <trans-unit id="805d24321cb30b35873ba13b61645086e4e73fb0" translate="yes" xml:space="preserve">
          <source>the first and last two are used when you want test exception message further</source>
          <target state="translated">当你想进一步测试异常消息时,前两个和后两个都是用于</target>
        </trans-unit>
        <trans-unit id="5b8c8d03a1c7a94624bdd4d926f5654337b71cdb" translate="yes" xml:space="preserve">
          <source>this provides a lot of features which can be used to improve our JUnit tests.</source>
          <target state="translated">这提供了很多功能,可以用来改进我们的JUnit测试。</target>
        </trans-unit>
        <trans-unit id="8d889a63184d70aa9a29900d5ede59a0361e031b" translate="yes" xml:space="preserve">
          <source>you also can use the classic try/catch way widely used under junit 3 framework</source>
          <target state="translated">你也可以使用在JUNIT 3框架下广泛使用的经典的trycatch方式。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
