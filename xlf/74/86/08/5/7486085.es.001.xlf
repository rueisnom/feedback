<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/7486085">
    <body>
      <group id="7486085">
        <trans-unit id="d38a2d42e3313721ad04fced38011ce94666ce79" translate="yes" xml:space="preserve">
          <source>1) Looping through the array in a function and return a new array, like this:</source>
          <target state="translated">1)Hacer un bucle a través de la matriz en una función y devolver una nueva matriz,como esta:</target>
        </trans-unit>
        <trans-unit id="dbdf73ed119d84ffe2ad78b859c99704e6e9cf22" translate="yes" xml:space="preserve">
          <source>2) Using slice method, slice is for slicing part of the array, it will slice some part of your array without touching the original, in the slice, if don't specify the start and end of the array, it will slice the whole array and basically make a full copy of the array, so we can easily say:</source>
          <target state="translated">2)Usando el método de rebanada,la rebanada es para rebanar parte de la matriz,rebanará alguna parte de tu matriz sin tocar el original,en la rebanada,si no especificas el comienzo y el final de la matriz,rebanará toda la matriz y básicamente hará una copia completa de la misma,así que podemos decir fácilmente:</target>
        </trans-unit>
        <trans-unit id="2750e58b401e221891942047928ae24f3335f11c" translate="yes" xml:space="preserve">
          <source>3) Also contact method, this is for merging two array, but we can just specify one of arrays and then this basically make a copy of the values in the new contacted array:</source>
          <target state="translated">3)También el método de contacto,esto es para fusionar dos matrices,pero podemos especificar sólo una de las matrices y entonces esto básicamente hace una copia de los valores en la nueva matriz contactada:</target>
        </trans-unit>
        <trans-unit id="05c82909ef2be3b61deeb01690e39ecdf535df82" translate="yes" xml:space="preserve">
          <source>4) Also stringify and parse method, it's not recommended, but can be an easy way to copy Array and Objects:</source>
          <target state="translated">4)También el método de stringify y parse,no es recomendado,pero puede ser una forma fácil de copiar Array y Objetos:</target>
        </trans-unit>
        <trans-unit id="aec102b101411633d75f567017c24e023f39c272" translate="yes" xml:space="preserve">
          <source>5) Array.from method, this is not widely supported, before use check the support in different browsers:</source>
          <target state="translated">5)El método Array.from,no está ampliamente soportado,antes de usarlo compruebe el soporte en diferentes navegadores:</target>
        </trans-unit>
        <trans-unit id="e549e4228b75a93426a56ec28362029621173e99" translate="yes" xml:space="preserve">
          <source>6) ECMA6 way, also not fully supported, but babelJs can help you if you want to transpile:</source>
          <target state="translated">6)La forma ECMA6,tampoco está totalmente soportada,pero las babelJs pueden ayudarte si quieres transpirar:</target>
        </trans-unit>
        <trans-unit id="5abbe3be541fbf45a084a6f0c94a62046b7a66d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let clonedArray = _.clone(array)&lt;/code&gt;&lt;a href=&quot;https://lodash.com/docs/4.17.10#clone&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;let clonedArray = _.clone(array)&lt;/code&gt; &lt;a href=&quot;https://lodash.com/docs/4.17.10#clone&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a80d7950639910f53ad9db729a668c9c8d8176a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let clonedArray = _.cloneDeep(array)&lt;/code&gt;&lt;a href=&quot;https://lodash.com/docs/4.17.10#cloneDeep&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;let clonedArray = _.cloneDeep(array)&lt;/code&gt; &lt;a href=&quot;https://lodash.com/docs/4.17.10#cloneDeep&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c5e1c9149ebe28395b9109ac89bbdd124095044" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All arrays (type1, type2, type3)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todas las matrices (tipo1, tipo2, tipo3)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="432f3d4ef18867a1ee3c381d881c8576c7b849c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Answer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d9a26ddf25bf57e5c8d8b6a72ac4577bb8ef99d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array of literal-values (type1) and literal-structures (type2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Matriz de valores literales (tipo1) y estructuras literales (tipo2)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e046b909d9f8cc4b19cea6369b86a13d109723b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array of literal-values (type1)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Matriz de valores literales (tipo1)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b63522409d3e43c2a2da34fddfb52d6f9d92b2b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BUT&lt;/strong&gt; if your array contains &lt;strong&gt;complex elements&lt;/strong&gt; such as objects(or arrays) or more &lt;strong&gt;nested objects&lt;/strong&gt;, then, you will have to make sure that you are making a copy of all the elements from the top level to the last level else reference of the inner objects will be used and that means changing values in object_elements in new_array will still affect the old_array. You can call this method of copying at each level as making a &lt;strong&gt;DEEP COPY&lt;/strong&gt;
of the old_array.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PERO&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; si su matriz contiene &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;elementos complejos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como objetos (o matrices) u m&amp;aacute;s &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos anidados&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , entonces deber&amp;aacute; asegurarse de que est&amp;aacute; haciendo una copia de todos los elementos desde el nivel superior hasta el &amp;uacute;ltimo nivel de referencia del interior se usar&amp;aacute;n objetos y eso significa que el cambio de valores en object_elements en new_array seguir&amp;aacute; afectando al old_array. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede llamar a este m&amp;eacute;todo de copia en cada nivel como hacer una &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;COPIA PROFUNDA&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de old_array.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ceb25a581954b5c8aa302f42c85bc107b2e60b4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But i think, in all the methods above&lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Array.from&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;is better and made mainly to copy an array.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero creo que, en todos los m&amp;eacute;todos anteriores, &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array.from&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es mejor y est&amp;aacute; hecho principalmente para copiar una matriz.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5997047d2052d17a1164204a0161005ef9218a4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For lodash users:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para usuarios lodash:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1292ac6fa9258aadd163972c77cad6e9b76394d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Important!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="616f933b5eab86b7a3f1c50c76038ce8baa1920c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Question&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fbb28786e4c9c0b2941adf70307daf74f281718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Quick Examples:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplos r&amp;aacute;pidos:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a45c6c16684e6b19ee66c0028b32a207dccfed0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution for 2&lt;/strong&gt;: Deep Copy by element by element</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Soluci&amp;oacute;n para 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : Copia profunda por elemento por elemento&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f1790f14eab6f8bfab42bb0a4ee53a0b78cb9a6" translate="yes" xml:space="preserve">
          <source>Add the following code in your JavaScript file:</source>
          <target state="translated">Añade el siguiente código en tu archivo JavaScript:</target>
        </trans-unit>
        <trans-unit id="3e827ad35355067d1f45e21cb2262e62fbe30b54" translate="yes" xml:space="preserve">
          <source>Adding to the solution of &lt;strong&gt;array.slice();&lt;/strong&gt; be aware that if you have &lt;strong&gt;multidimensional array&lt;/strong&gt; sub-arrays will be copied by references.
What you can do is to loop and slice() each sub-array individually</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Agregando a la soluci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;array.slice (); &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que si tiene una &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;matriz multidimensional, las matrices&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; secundarias se copiar&amp;aacute;n por referencias. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que puede hacer es hacer un bucle y cortar () cada sub-matriz individualmente&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="381708f8617ffc6a0f1414a3c77a67eae1ea356a" translate="yes" xml:space="preserve">
          <source>After that the &lt;code&gt;.slice()&lt;/code&gt; method also has decent performance and is also less verbose and easier for the programmer to implement. I suggest to use &lt;code&gt;.slice()&lt;/code&gt; for your everyday copying of arrays which aren't very CPU intensive. Also avoid using the &lt;code&gt;JSON.parse(JSON.stringify(arr))&lt;/code&gt; (lots of overhead) if no deep clone is required and performance is an issue.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Despu&amp;eacute;s de eso, el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.slice()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n tiene un rendimiento decente y tambi&amp;eacute;n es menos detallado y m&amp;aacute;s f&amp;aacute;cil de implementar para el programador. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sugiero usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.slice()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para su copia diaria de arreglos que no requieren mucha CPU. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n evite usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse(JSON.stringify(arr))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (mucha sobrecarga) si no se requiere un clon profundo y el rendimiento es un problema.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fa4e67e717cf7b0812a719ec8c944274d42c3cb" translate="yes" xml:space="preserve">
          <source>Also if want to create a new array with the existing one being part of it:</source>
          <target state="translated">También si se quiere crear un nuevo conjunto con el existente siendo parte de él:</target>
        </trans-unit>
        <trans-unit id="0d0223c3f3274398a55ed8725b06675a40efd8ef" translate="yes" xml:space="preserve">
          <source>Also note that:</source>
          <target state="translated">También tenga en cuenta que..:</target>
        </trans-unit>
        <trans-unit id="85fdb1b588fb0ff65383d4a2136c982fcb451d10" translate="yes" xml:space="preserve">
          <source>Also this obviously will not clone events and functions, but the good thing you can do it in one line, and it can be used for any kind of object (arrays, strings, numbers, objects ...)</source>
          <target state="translated">Además esto obviamente no clonará eventos y funciones,pero lo bueno es que se puede hacer en una sola línea,y se puede usar para cualquier tipo de objeto (matrices,cadenas,números,objetos...)</target>
        </trans-unit>
        <trans-unit id="c3f02a69cf13c08d5bf403486e87989b450bdc6e" translate="yes" xml:space="preserve">
          <source>An alternative to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;concat&lt;/code&gt;&lt;/a&gt;, which can be used in 2 ways. The first of these is perhaps more readable as the intended behaviour is very clear:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una alternativa al &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt; &lt;code&gt;slice&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;concat&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que se puede usar de 2 maneras. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El primero de ellos es quiz&amp;aacute;s m&amp;aacute;s legible ya que el comportamiento previsto es muy claro:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aec5cc59489c9b3aa64a29aeec594ab01ecd5780" translate="yes" xml:space="preserve">
          <source>And for those developers that shy away from third-party libraries (like jQuery), you can use the following custom function; which has higher performance than $.extend, and deep-copies all arrays.</source>
          <target state="translated">Y para aquellos desarrolladores que rehúyen de las librerías de terceros (como jQuery),puedes usar la siguiente función personalizada;que tiene un rendimiento superior a $.extend,y copia en profundidad todos los arrays.</target>
        </trans-unit>
        <trans-unit id="931b7a0ca84dd2793448fe021b199eb2eb613883" translate="yes" xml:space="preserve">
          <source>And simply use</source>
          <target state="translated">Y simplemente usa</target>
        </trans-unit>
        <trans-unit id="897ba49541a22ecb77c0412803787754bb4bfb2d" translate="yes" xml:space="preserve">
          <source>Array spreads are now &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator#Browser_compatibility&quot;&gt;supported in all major browsers&lt;/a&gt; but if you need older support use typescript or babel and compile to ES5.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los diferenciales de matriz ahora son &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator#Browser_compatibility&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;compatibles con todos los navegadores principales,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero si necesita soporte anterior, use mecanografiado o babel y comp&amp;iacute;lelo en ES5.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="913fbc77c0eac30b3eb02d0c115073a191f96352" translate="yes" xml:space="preserve">
          <source>As we know in Javascript &lt;strong&gt;arrays&lt;/strong&gt; and &lt;strong&gt;objects&lt;/strong&gt; are by reference, but what ways we can do copy the array without changing the original array later one?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como sabemos en Javascript, las &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;matrices&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y los &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son por referencia, pero &amp;iquest;de qu&amp;eacute; maneras podemos copiar la matriz sin cambiar la matriz original m&amp;aacute;s adelante?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a8545770a396c70cb29a3b316e91768a48ae823" translate="yes" xml:space="preserve">
          <source>Based on the types of elements in the array, we can use various techniques to deep copy.</source>
          <target state="translated">Basándonos en los tipos de elementos del conjunto,podemos usar varias técnicas para copiar en profundidad.</target>
        </trans-unit>
        <trans-unit id="35df21a2161a1c56e4a7a5a8f6a086711c1757ee" translate="yes" xml:space="preserve">
          <source>Basically, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; operation clones the array and returns a reference to a new array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;B&amp;aacute;sicamente, la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; clona la matriz y devuelve una referencia a una nueva matriz.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25cd1b883da20516aba2b42fc79179dc08ff2822" translate="yes" xml:space="preserve">
          <source>Be careful when arrays or objects are nested!:</source>
          <target state="translated">¡Tengan cuidado cuando las matrices o los objetos estén anidados!:</target>
        </trans-unit>
        <trans-unit id="449654022034e47b1e4e7e7a09133da27c7980b4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;arr1&lt;/code&gt; is an array of literal values (boolean, number, or string), you can use any deep copy technique discussed above, where the spread operator &lt;code&gt;...&lt;/code&gt; has the highest performance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debido a que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una matriz de valores literales (booleano, n&amp;uacute;mero o cadena), puede usar cualquier t&amp;eacute;cnica de copia profunda descrita anteriormente, donde el operador de propagaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene el mayor rendimiento.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89b20e543e5e58bd972e9f5ef6d461bb466651b5" translate="yes" xml:space="preserve">
          <source>Cohen (in the comments) pointed out that this latter method &lt;a href=&quot;https://jsperf.com/copy-simple-array&quot;&gt;has better performance&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cohen (en los comentarios) se&amp;ntilde;al&amp;oacute; que este &amp;uacute;ltimo m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsperf.com/copy-simple-array&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tiene un mejor rendimiento&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c709d5805c68db79069f9c985851e4e4cda8256b" translate="yes" xml:space="preserve">
          <source>Copy an Array in ES6</source>
          <target state="translated">Copia una matriz en ES6</target>
        </trans-unit>
        <trans-unit id="a3197b4fe135aa53749addb4c5e2543ef09afd1d" translate="yes" xml:space="preserve">
          <source>Copy array by value</source>
          <target state="translated">Copiar matriz por valor</target>
        </trans-unit>
        <trans-unit id="2336e3cd4f27deabb43770acce38bcc460c8fbd7" translate="yes" xml:space="preserve">
          <source>Copy n Array in ES5</source>
          <target state="translated">Copia n Array en ES5</target>
        </trans-unit>
        <trans-unit id="b7345669ef02152d7f109a056f3af17dbca07cbd" translate="yes" xml:space="preserve">
          <source>Dan, no need to use fancy tricks. All you need to do is make copy of arr1 by doing this.</source>
          <target state="translated">Dan,no hay necesidad de usar trucos elegantes.Todo lo que necesitas hacer es hacer una copia de arr1 haciendo esto.</target>
        </trans-unit>
        <trans-unit id="4ece27c78358ad6d2be0b1f53bda3d64498a93ba" translate="yes" xml:space="preserve">
          <source>Deep copy techniques depend on the three array types</source>
          <target state="translated">Las técnicas de copia profunda dependen de los tres tipos de arreglos</target>
        </trans-unit>
        <trans-unit id="b685ca361a1fd5c400bb43cf44445b72a078a6fa" translate="yes" xml:space="preserve">
          <source>Elements can be: literal values, literal structures, or prototypes.</source>
          <target state="translated">Los elementos pueden ser:valores literales,estructuras literales o prototipos.</target>
        </trans-unit>
        <trans-unit id="50c326cbb07f2b51dcf39fb3c434ba956484537f" translate="yes" xml:space="preserve">
          <source>Exceptions:</source>
          <target state="translated">Exceptions:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="2dfcc07fcb9cd77783ec2b79bc7b9828d586bd38" translate="yes" xml:space="preserve">
          <source>For ES6 array containing objects</source>
          <target state="translated">Para la matriz ES6 que contiene objetos</target>
        </trans-unit>
        <trans-unit id="6320b51104820c5e9d3320ead0400cf4987e63fb" translate="yes" xml:space="preserve">
          <source>For deep copying, you can use the above-mentioned methods for primitive data types at each level depending upon the type of data or you can use this &lt;strong&gt;costly method(mentioned below)&lt;/strong&gt; for making a deep copy without doing much work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para la copia profunda, puede usar los m&amp;eacute;todos mencionados anteriormente para los tipos de datos primitivos en cada nivel dependiendo del tipo de datos o puede usar este &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo costoso (mencionado a continuaci&amp;oacute;n)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para hacer una copia profunda sin hacer mucho trabajo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20c32be979b022cf64df767c6f12953c521db79f" translate="yes" xml:space="preserve">
          <source>For references, strings and numbers (and not the actual object), &lt;strong&gt;&lt;code&gt;slice()&lt;/code&gt; copies object references into the new array.&lt;/strong&gt; Both the original and new array refer to the same object. If a referenced object changes, the changes are visible to both the new and original arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para referencias, cadenas y n&amp;uacute;meros (y no el objeto real), &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; copia referencias de objetos en la nueva matriz. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tanto la matriz original como la nueva se refieren al mismo objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si cambia un objeto al que se hace referencia, los cambios son visibles tanto para las matrices nuevas como para las originales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="effe8ee28b294d0b912b0706f60a20e13227f465" translate="yes" xml:space="preserve">
          <source>From ES2015,</source>
          <target state="translated">Desde ES2015,</target>
        </trans-unit>
        <trans-unit id="d91cedcff34b7c37bc5f91312b51e984bdd2e578" translate="yes" xml:space="preserve">
          <source>From these elements we can create three types of arrays.</source>
          <target state="translated">A partir de estos elementos podemos crear tres tipos de matrices.</target>
        </trans-unit>
        <trans-unit id="279bf69468c5929bffedbdb69e234b918f14f190" translate="yes" xml:space="preserve">
          <source>Here are few more way to copy:</source>
          <target state="translated">Aquí hay algunas formas más de copiar:</target>
        </trans-unit>
        <trans-unit id="60b0e096ab908576006ea612c6a4837c49cc72e7" translate="yes" xml:space="preserve">
          <source>Here are few ways to do it:</source>
          <target state="translated">Aquí hay algunas formas de hacerlo:</target>
        </trans-unit>
        <trans-unit id="767a9b8a1d9274c7d20271817f40b04a6a754acf" translate="yes" xml:space="preserve">
          <source>Here's a variant:</source>
          <target state="translated">Aquí hay una variante:</target>
        </trans-unit>
        <trans-unit id="ec09a2235c43f4d8a34054b2f664bfe5613ef2b3" translate="yes" xml:space="preserve">
          <source>I personally think &lt;a href=&quot;https://developer.mozilla.org/vi/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Array.from&lt;/a&gt; is a more readable solution. By the way, just beware of its browser support.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Personalmente, creo que &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/vi/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array.from&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una soluci&amp;oacute;n m&amp;aacute;s legible. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por cierto, solo ten cuidado con el soporte de su navegador.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e06eddb163209738156c9780e7ef58853361ef53" translate="yes" xml:space="preserve">
          <source>I realized that &lt;code&gt;arr2&lt;/code&gt; refers to the same array as &lt;code&gt;arr1&lt;/code&gt;, rather than a new, independent array. How can I copy the array to get two independent arrays?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Me di cuenta de que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr2&lt;/code&gt; se&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refiere a la misma matriz que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en lugar de una nueva matriz independiente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo puedo copiar la matriz para obtener dos matrices independientes?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53a0ab2989d070a3b3fbf7977fb2f8994dfa3414" translate="yes" xml:space="preserve">
          <source>I realized that arr2 refers to the same array as arr1, rather than a
  new, independent array. How can I copy the array to get two
  independent arrays?</source>
          <target state="translated">Me di cuenta de que arr2 se refiere al mismo conjunto que arr1,en lugar de un nuevo conjunto independiente.¿Cómo puedo copiar la matriz para obtener dos matrices independientes?</target>
        </trans-unit>
        <trans-unit id="fd17ec19e566d85d3c3fd1cde088b692870887f8" translate="yes" xml:space="preserve">
          <source>I would personally prefer this way:</source>
          <target state="translated">Personalmente preferiría esta forma:</target>
        </trans-unit>
        <trans-unit id="d5035eaee12cbcc2891834fe03f6c9671b982951" translate="yes" xml:space="preserve">
          <source>If elements in the array are &lt;strong&gt;object literals, another array ({}, [])&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si los elementos de la matriz son &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;literales de objeto, otra matriz ({}, [])&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec97cc8bd39e2409ee132c57eb175f826f556561" translate="yes" xml:space="preserve">
          <source>If elements in the array are &lt;strong&gt;primitive types&lt;/strong&gt; (string, number, etc.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si los elementos en la matriz son &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipos primitivos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (cadena, n&amp;uacute;mero, etc.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b5fd3ad5278b8c3d0e9a9206dd2f99f89a52ac5" translate="yes" xml:space="preserve">
          <source>If you are in an environment of &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#Harmony.2C_6th_Edition&quot;&gt;ECMAScript 6&lt;/a&gt;, using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;Spread Operator&lt;/a&gt; you could do it this way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se encuentra en un entorno de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#Harmony.2C_6th_Edition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 6&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , utilizando el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Operador Spread&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede hacerlo de esta manera:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2e37c7bc6af5975db61e86e80345bf4bc63f2b5" translate="yes" xml:space="preserve">
          <source>If you do want to deepclone a javascript array use &lt;code&gt;JSON.parse&lt;/code&gt; in conjunction with &lt;code&gt;JSON.stringify&lt;/code&gt;, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea clonar en profundidad una matriz de JavaScript, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; junto con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , de esta manera:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc0596a29978964214985698889c61aa7be57d85" translate="yes" xml:space="preserve">
          <source>If you don't care about deep/nested objects and props use (&lt;strong&gt;ES6&lt;/strong&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no le interesan los objetos profundos / anidados y el uso de accesorios ( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43834f9ecfa7ec250414b3c2bbcc14f9406a7e3b" translate="yes" xml:space="preserve">
          <source>If you have an array of Reference types, say of type &lt;code&gt;Object&lt;/code&gt;.  The array &lt;strong&gt;will&lt;/strong&gt; be copied, but both of the arrays will contain references to the same &lt;code&gt;Object&lt;/code&gt;'s.  So in this case it would seem like the array is copied by reference even though the array &lt;strong&gt;is actually copied.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si tiene una matriz de tipos de referencia, digamos de tipo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La matriz &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; copiar&amp;aacute;, pero ambas matrices contendr&amp;aacute;n referencias a los mismos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, en este caso, parecer&amp;iacute;a que la matriz se copia por referencia aunque la matriz &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se copie realmente.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24416d693254570a9dfb2ba5adb03222d251ee08" translate="yes" xml:space="preserve">
          <source>If you want to make a new copy of an object or array, you must explicitly copy the properties of the object or the elements of the array, for example:</source>
          <target state="translated">Si se quiere hacer una nueva copia de un objeto o de una matriz,hay que copiar explícitamente las propiedades del objeto o los elementos de la matriz,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d5dcd12b82a6e6787ca31b95edadf1e9050f4a50" translate="yes" xml:space="preserve">
          <source>If your array contains elements of the &lt;strong&gt;primitive data type&lt;/strong&gt; such as &lt;strong&gt;int, char, or string etc&lt;/strong&gt; then you can user one of those methods which returns a copy of the original array such as .slice() or .map() or spread operator(thanks to ES6).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si su matriz contiene elementos del &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo de datos primitivos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , como &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;int, char o string, etc.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede usar uno de esos m&amp;eacute;todos que devuelve una copia de la matriz original, como .slice () o .map () u operador de propagaci&amp;oacute;n ( gracias a ES6).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32832afe073f7f222fe062d9ffb39d05452d9fc6" translate="yes" xml:space="preserve">
          <source>Imagine we have this array in your code:</source>
          <target state="translated">Imagina que tenemos esta matriz en tu código:</target>
        </trans-unit>
        <trans-unit id="dbfaf167f24a5d24776e1bf23368bd2d7491bb8f" translate="yes" xml:space="preserve">
          <source>In Javascript, deep-copy techniques depend on the elements in an array. Let's start there.</source>
          <target state="translated">En Javascript,las técnicas de copia profunda dependen de los elementos de un conjunto.Empecemos por ahí.</target>
        </trans-unit>
        <trans-unit id="6d0226286399bcbb086356e089c3ecb1f872c280" translate="yes" xml:space="preserve">
          <source>In my particular case I needed to ensure the array remained intact so this worked for me:</source>
          <target state="translated">En mi caso particular necesitaba asegurarme de que la matriz permaneciera intacta,así que esto funcionó para mí:</target>
        </trans-unit>
        <trans-unit id="57b9fb121420afad8742bf9061b6df58a392da53" translate="yes" xml:space="preserve">
          <source>It is important to note that it will work as expected for primitive types (string, number, etc.), and to also explain the expected behavior for reference types...</source>
          <target state="translated">Es importante señalar que funcionará como se espera para los tipos primitivos (cadena,número,etc.),y también explicar el comportamiento esperado para los tipos de referencia...</target>
        </trans-unit>
        <trans-unit id="3641b2d18d7de11bb5d4b0aa4eb9d373af112ef9" translate="yes" xml:space="preserve">
          <source>It will work.</source>
          <target state="translated">Funcionará.</target>
        </trans-unit>
        <trans-unit id="f1888ac75abafa9d8540fd8c41d2297e9666bf5d" translate="yes" xml:space="preserve">
          <source>Lee Penkman, also in the comments, points out that if there's a chance &lt;code&gt;array1&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, you can return an empty array as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lee Penkman, tambi&amp;eacute;n en los comentarios, se&amp;ntilde;ala que si existe una posibilidad de que la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;eacute; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;definida&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede devolver una matriz vac&amp;iacute;a de la siguiente manera:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c66683dd7fc052a25bac24f5229090ea7c4f7e6c" translate="yes" xml:space="preserve">
          <source>Make copy of multidimensional array/object:</source>
          <target state="translated">Haga una copia del objeto de la matriz multidimensional:</target>
        </trans-unit>
        <trans-unit id="c37cddd055ced6b4b7c8dbca74732e1abdfdcf96" translate="yes" xml:space="preserve">
          <source>More info on spreads</source>
          <target state="translated">Más información sobre los diferenciales</target>
        </trans-unit>
        <trans-unit id="d2bdb14970507a17170eb5bb65bedd009bf54439" translate="yes" xml:space="preserve">
          <source>Most of answers here works for &lt;strong&gt;&lt;em&gt;particular cases&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La mayor&amp;iacute;a de las respuestas aqu&amp;iacute; funcionan para &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;casos particulares&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bed20c7288c8f9234416c5eae11ad3f9531f9025" translate="yes" xml:space="preserve">
          <source>No jQuery needed...  &lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/KBYvL/1/&quot;&gt;Working Example&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No se necesita jQuery ... &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/KBYvL/1/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplo de trabajo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07d6f97e234865f8c546988c6102037180e914e7" translate="yes" xml:space="preserve">
          <source>Note that you can also do this with &lt;code&gt;slice&lt;/code&gt;: &lt;code&gt;var array2 = (array1 || []).slice();&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que tambi&amp;eacute;n puede hacer esto con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;slice&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var array2 = (array1 || []).slice();&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbbd5ed5b2dd36af8a9b3e829f487615a888bb90" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;arr1&lt;/code&gt; and &lt;code&gt;arr2&lt;/code&gt; are two different array variables stored in separate stacks.
&lt;a href=&quot;https://jsfiddle.net/wm67wuzo/&quot;&gt;Check this out on jsfiddle&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son dos variables de matriz diferentes almacenadas en pilas separadas. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/wm67wuzo/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mira esto en jsfiddle&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6ea9e66af03ebf079e90339c98f32cb424d5e57" translate="yes" xml:space="preserve">
          <source>Now you can do any one of the following to make a copy of an array.</source>
          <target state="translated">Ahora puedes hacer cualquiera de lo siguiente para hacer una copia de una matriz.</target>
        </trans-unit>
        <trans-unit id="a4ca5c46105ffdda5974ecec43d2369ffb6013bf" translate="yes" xml:space="preserve">
          <source>Now, if i change a,</source>
          <target state="translated">Ahora,si cambio a,</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="ec7d8c5fc80169117f52a38b3e9e291385330333" translate="yes" xml:space="preserve">
          <source>Often when we transform data we want to keep our initial datastructure (e.g. Array) intact. We do this by making a exact copy of our array so this one can be transformed while the initial one stays intact.</source>
          <target state="translated">A menudo cuando transformamos los datos queremos mantener nuestra estructura de datos inicial (por ejemplo,el Array)intacta.Lo hacemos haciendo una copia exacta de nuestra matriz para que ésta pueda ser transformada mientras la inicial permanece intacta.</target>
        </trans-unit>
        <trans-unit id="3cdc224880f160153162ef8dca820a08d21be3ca" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;Array.prototype.map&lt;/code&gt; may be used with an identity function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;O &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.prototype.map&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; puede usarse con una funci&amp;oacute;n de identidad:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc72f1096498b7bc397d103e186cc369694b004c" translate="yes" xml:space="preserve">
          <source>Or, for the second method:</source>
          <target state="translated">O,para el segundo método:</target>
        </trans-unit>
        <trans-unit id="0c1fad2448524d139b20d8c687780af7f58c6ee7" translate="yes" xml:space="preserve">
          <source>Passing one varible to another on Compound values such as Object/Array behave difrently. Using asign operator on copand values we pass reference to an object. This is why the value of both arrays are changing when removing/adding arr elements.</source>
          <target state="translated">Pasar una varible a otra en valores compuestos como ObjectArray se comporta de manera diferente.Usando el operador de asignación en valores copandados pasamos la referencia a un objeto.Es por eso que el valor de ambos arrays cambian al eliminar los elementos de los arrays.</target>
        </trans-unit>
        <trans-unit id="4e771311afaee543211598c5a27b9471d55cabee" translate="yes" xml:space="preserve">
          <source>Performance of copying:</source>
          <target state="translated">La realización de la copia:</target>
        </trans-unit>
        <trans-unit id="b13b0eff9d12c2597bee5a93fe1e1147b86dbcab" translate="yes" xml:space="preserve">
          <source>Primitive values are always pass by its value (copied). Compound values however are passed by reference.</source>
          <target state="translated">Los valores primitivos siempre pasan por su valor (copiado).Los valores compuestos,sin embargo,se pasan por referencia.</target>
        </trans-unit>
        <trans-unit id="045b7aa7e9b5e6031be5a378543e0a451df74e95" translate="yes" xml:space="preserve">
          <source>Primitives such as strings and numbers are immutable, so changes to the string or number are impossible.</source>
          <target state="translated">Los primitivos como las cuerdas y los números son inmutables,por lo que los cambios en la cuerda o el número son imposibles.</target>
        </trans-unit>
        <trans-unit id="09cfd9f36c74626c471a6ed13890f0ee9dee7a8d" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Referencia: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf59c5173fd7c554ce1bd0a5f2fe575160302e21" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;Here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Referencia: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b04a03c2830c8506c5a51afbeb3df1bc89708b80" translate="yes" xml:space="preserve">
          <source>So don't use these methods when there are objects or arrays inside your array you want to copy. i.e. Use these methods on arrays of primitives only.</source>
          <target state="translated">Así que no uses estos métodos cuando haya objetos o matrices dentro de tu matriz que quieras copiar.Es decir,usa estos métodos sólo en matrices de primitivas.</target>
        </trans-unit>
        <trans-unit id="a0cfd7b410ebbf0aed53f77eb3219f8cf756ec1f" translate="yes" xml:space="preserve">
          <source>So how do we copy this arr?</source>
          <target state="translated">Entonces,¿cómo copiamos este arresto?</target>
        </trans-unit>
        <trans-unit id="06771cf9bcbd3a26233bcf61057580ab23dab6be" translate="yes" xml:space="preserve">
          <source>So to answer the question...</source>
          <target state="translated">Así que para responder a la pregunta...</target>
        </trans-unit>
        <trans-unit id="2286bc98922d17852dfaa9f08908883dc165470f" translate="yes" xml:space="preserve">
          <source>So which one do we choose for optimal performance. It turns out that the most verbose method, the &lt;code&gt;for&lt;/code&gt; loop has the highest performance. Use the &lt;code&gt;for&lt;/code&gt; loop for really CPU intensive copying (large/many arrays).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, &amp;iquest;cu&amp;aacute;l elegimos para un rendimiento &amp;oacute;ptimo? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Resulta que el m&amp;eacute;todo m&amp;aacute;s detallado, el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bucle &lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene el rendimiento m&amp;aacute;s alto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilice el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lazo para realmente CPU copia intensiva (grandes / muchos arrays).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5008b43a8899c37dd1b5ff186c31b522b6ae0090" translate="yes" xml:space="preserve">
          <source>Some of mentioned methods work well when working with simple data types like number or string, but when the array contains other objects these methods fail. When we try to pass any object from one array to another it is passed as a reference, not the object.</source>
          <target state="translated">Algunos de los métodos mencionados funcionan bien cuando se trabaja con tipos de datos sencillos como el número o la cadena,pero cuando la matriz contiene otros objetos estos métodos fallan.Cuando intentamos pasar cualquier objeto de un array a otro se pasa como referencia,no el objeto.</target>
        </trans-unit>
        <trans-unit id="ea4006e5721d9886e3f252258dfc511f3486fe6b" translate="yes" xml:space="preserve">
          <source>Source performance test</source>
          <target state="translated">Prueba de rendimiento de la fuente</target>
        </trans-unit>
        <trans-unit id="603cb74d50c1cbd801dca7fc0eb132947d170797" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://james.padolsey.com/javascript/deep-copying-of-objects-and-arrays/&quot;&gt;Here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Fuente: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://james.padolsey.com/javascript/deep-copying-of-objects-and-arrays/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b38f29d731f9dfa5ca6702144928e077890cfbd6" translate="yes" xml:space="preserve">
          <source>Thanks to James Padolsey for this function.</source>
          <target state="translated">Gracias a James Padolsey por esta función.</target>
        </trans-unit>
        <trans-unit id="689b57da72d1c22ba48ab72bbec6c2318e4c47c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; technique can be used to deep copy literal values (boolean, number, string) and literal structures (array, object), but not prototype objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede usar para copiar en profundidad valores literales (booleano, n&amp;uacute;mero, cadena) y estructuras literales (matriz, objeto), pero no prototipos de objetos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6705f4a12d8757fa69823326e0bf631fc819f413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[...myArray]&lt;/code&gt;, &lt;code&gt;myArray.splice(0)&lt;/code&gt;, &lt;code&gt;myArray.slice()&lt;/code&gt;, and &lt;code&gt;myArray.concat()&lt;/code&gt; techniques can be used to deep copy arrays with literal values (boolean, number, and string) only; where the Spread operator &lt;code&gt;[...myArray]&lt;/code&gt; has the best performance (&lt;a href=&quot;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&quot;&gt;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[...myArray]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myArray.splice(0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myArray.slice()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;myArray.concat()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se pueden usar para copiar matrices en profundidad con valores literales (booleano, n&amp;uacute;mero y cadena) solamente; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;donde el operador Spread &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[...myArray]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene el mejor rendimiento ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9383c7c87c05f57c69e2f333f40711dd244ced6a" translate="yes" xml:space="preserve">
          <source>The jQuery &lt;code&gt;$.extend(myArray)&lt;/code&gt; technique can be used to deep-copy all array-types. Libraries like &lt;a href=&quot;http://underscorejs.org&quot;&gt;Underscore&lt;/a&gt; and &lt;a href=&quot;https://lodash.com&quot;&gt;Lo-dash&lt;/a&gt; offer similar deep-copy functions to &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;&lt;code&gt;$.extend()&lt;/code&gt;, yet have lower performance. More surprisingly, &lt;code&gt;$.extend()&lt;/code&gt; has higher performance than the &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; technique &lt;a href=&quot;http://jsperf.com/js-deep-copy/15&quot;&gt;http://jsperf.com/js-deep-copy/15&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;t&amp;eacute;cnica &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.extend(myArray)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede utilizar para copiar en profundidad todos los tipos de matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las bibliotecas como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo-dash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ofrecen funciones de copia profunda similares a &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jquery.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;$.extend()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero tienen un rendimiento m&amp;aacute;s bajo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;aacute;s sorprendentemente, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.extend()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene un rendimiento m&amp;aacute;s alto que el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; t&amp;eacute;cnica &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/js-deep-copy/15&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsperf.com/js-deep-copy/15&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8d6dc11c2b8ff8bf8e2bd754b36e98c46f81132" translate="yes" xml:space="preserve">
          <source>The second method is:</source>
          <target state="translated">El segundo método es:</target>
        </trans-unit>
        <trans-unit id="a5049c7e28b22a10705794f68236c7230c22865b" translate="yes" xml:space="preserve">
          <source>The way this works is that the &lt;code&gt;concat&lt;/code&gt; method creates a new array consisting of the elements in the object on which it is called followed by the elements of any arrays passed to it as arguments. So when no arguments are passed, it simply copies the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La forma en que esto funciona es que el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;concat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; crea una nueva matriz que consta de los elementos en el objeto sobre el que se llama, seguido de los elementos de cualquier matriz que se le pase como argumento. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, cuando no se pasan argumentos, simplemente copia la matriz.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="075eb7249f96fe916120b4889af607790e23590a" translate="yes" xml:space="preserve">
          <source>Then, a is [1,2,3,5] but b is still [1,2,3] as it has different reference.</source>
          <target state="translated">Entonces,a es [1,2,3,5]pero b sigue siendo [1,2,3]ya que tiene una referencia diferente.</target>
        </trans-unit>
        <trans-unit id="710c353f63705c3bde80c27220c0e51493d2827d" translate="yes" xml:space="preserve">
          <source>There are a lot of other methods out there which you can use depending on your requirements. I have mentioned only some of those for giving a general idea of what happens when we try to copy an array into the other &lt;strong&gt;by value&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Existen muchos otros m&amp;eacute;todos que puede usar seg&amp;uacute;n sus requisitos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo he mencionado algunos de ellos para dar una idea general de lo que sucede cuando intentamos copiar una matriz en la otra &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;por valor&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2be42dd7273f2ad4a618403541a1f0116978daf8" translate="yes" xml:space="preserve">
          <source>There are limitations..check  docs &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;Spread syntax @ mozilla&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay limitaciones ... verifique los documentos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sintaxis de propagaci&amp;oacute;n @ mozilla&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a12406982cba9fbd604005acb16615bb60feda2" translate="yes" xml:space="preserve">
          <source>There's the newly introduced &lt;code&gt;Array.from&lt;/code&gt;, but unfortunately, as of the time of this writing it's only supported on recent Firefox versions (32 and higher). It can be simply used as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Existe el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.from&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; recientemente presentado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, pero desafortunadamente, a la fecha de este escrito solo es compatible con las versiones recientes de Firefox (32 y superiores). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede usar simplemente de la siguiente manera:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e7409b58374d98598b260d88e054c6e42868fe1" translate="yes" xml:space="preserve">
          <source>This copys the array from the starting position &lt;code&gt;0&lt;/code&gt; through the end of the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto copia la matriz desde la posici&amp;oacute;n inicial &lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hasta el final de la matriz.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2f373bc7618697a70967233aab0c7160db64e93" translate="yes" xml:space="preserve">
          <source>This is how I've done it after trying many approaches:</source>
          <target state="translated">Así es como lo he hecho después de probar muchos enfoques:</target>
        </trans-unit>
        <trans-unit id="ff9864d43b82aab4b2aecc60e550bc5de819cf95" translate="yes" xml:space="preserve">
          <source>This will create a new deep copy not related to the first one (not a shallow copy).</source>
          <target state="translated">Esto creará una nueva copia profunda no relacionada con la primera (no una copia superficial).</target>
        </trans-unit>
        <trans-unit id="ed2d23afd0de444c17f6cda6df74e2a71e696ca2" translate="yes" xml:space="preserve">
          <source>Three types of elements</source>
          <target state="translated">Tres tipos de elementos</target>
        </trans-unit>
        <trans-unit id="b543720e8daabc3733964f244cca2d14e58df202" translate="yes" xml:space="preserve">
          <source>Use this:</source>
          <target state="translated">Usa esto:</target>
        </trans-unit>
        <trans-unit id="046e842c8cd76e1ce334590d060a40b48c531552" translate="yes" xml:space="preserve">
          <source>Using jQuery deep copy could be made as following:</source>
          <target state="translated">Usando jQuery deep copy se podría hacer lo siguiente:</target>
        </trans-unit>
        <trans-unit id="7fabb8d7e42c438ba95fed17c9c798cc28407d7c" translate="yes" xml:space="preserve">
          <source>Ways of copying an array:</source>
          <target state="translated">Formas de copiar una matriz:</target>
        </trans-unit>
        <trans-unit id="c063f502c09f2fd72ed8fcf4f6d37dfa831954bf" translate="yes" xml:space="preserve">
          <source>When arrays are nested the values are copied by reference. Here is an example of how this could lead to issues:</source>
          <target state="translated">Cuando las matrices se anidan,los valores se copian por referencia.Aquí hay un ejemplo de cómo esto podría llevar a problemas:</target>
        </trans-unit>
        <trans-unit id="f173344b599b1a43753194f2d3adca0894e86556" translate="yes" xml:space="preserve">
          <source>When copying an array in JavaScript to another array:</source>
          <target state="translated">Cuando se copia una matriz en JavaScript a otra matriz:</target>
        </trans-unit>
        <trans-unit id="1a8c28404935bcf86e33ee852e0ab89574079761" translate="yes" xml:space="preserve">
          <source>When we want to copy an array using the assignment operator ( &lt;code&gt;=&lt;/code&gt; ) it doesn't create a copy it merely copies the pointer/reference to the array. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando queremos copiar una matriz usando el operador de asignaci&amp;oacute;n ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) no crea una copia, simplemente copia el puntero / referencia a la matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371f093a51da60220f7d2cc0cd8008cfb1ca57fe" translate="yes" xml:space="preserve">
          <source>When you assign a new value to the variable, you are changing the reference itself and it doesn&amp;rsquo;t affect the original Object/Array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando asigna un nuevo valor a la variable, est&amp;aacute; cambiando la referencia misma y no afecta el objeto / matriz original.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39b2d01523555b4141da40b7f0532313be885fba" translate="yes" xml:space="preserve">
          <source>Why `let arrCopy = arr` is not passing by value?</source>
          <target state="translated">¿Por qué &quot;let arrCopy=arr&quot; no pasa de valor?</target>
        </trans-unit>
        <trans-unit id="ebe8456b3b7749385be4eade455761e49b7ef495" translate="yes" xml:space="preserve">
          <source>You can also use ES6 spread operator to copy Array</source>
          <target state="translated">También puedes usar el operador de propagación ES6 para copiar el Array</target>
        </trans-unit>
        <trans-unit id="774308c5ddc9d898bf019c5bc9b81cc79f4ccb12" translate="yes" xml:space="preserve">
          <source>You can search for more information on Google about immutable primitive values and mutable object references.</source>
          <target state="translated">Puede buscar más información en Google sobre valores primitivos inmutables y referencias de objetos mutables.</target>
        </trans-unit>
        <trans-unit id="7d654668e1c71bcb21cdbbfb6c4af3ad819c9a18" translate="yes" xml:space="preserve">
          <source>You can use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede usar spreads de matriz &lt;/font&gt;&lt;/font&gt; &lt;code&gt;...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para copiar matrices.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0aee23dd71431c3e3b82ec87f120ffec98574c4" translate="yes" xml:space="preserve">
          <source>You could use ES6 with spread Opeartor, its simpler.</source>
          <target state="translated">Podrías usar el ES6 con la extensión de Opeartor,es más simple.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="82057bb8f6ffd6f01b76bb87f9a1b8acd44af0c5" translate="yes" xml:space="preserve">
          <source>but if you want to do deep clone use this instead:</source>
          <target state="translated">pero si quieres hacer un clon profundo usa esto en su lugar:</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="59a5c610074c286a10825ef707f885904486b0d0" translate="yes" xml:space="preserve">
          <source>read more</source>
          <target state="translated">leer más</target>
        </trans-unit>
        <trans-unit id="9e0578da76ac6233d63fcc6ff696a0a77aea8e95" translate="yes" xml:space="preserve">
          <source>same things goes to array of objects, they will be copied by reference, you have to copy them manually</source>
          <target state="translated">las mismas cosas van a un conjunto de objetos,serán copiados por referencia,tienes que copiarlos manualmente</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
