<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/7486085">
    <body>
      <group id="7486085">
        <trans-unit id="d38a2d42e3313721ad04fced38011ce94666ce79" translate="yes" xml:space="preserve">
          <source>1) Looping through the array in a function and return a new array, like this:</source>
          <target state="translated">1)在一个函数中循环遍历数组,返回一个新的数组,像这样。</target>
        </trans-unit>
        <trans-unit id="dbdf73ed119d84ffe2ad78b859c99704e6e9cf22" translate="yes" xml:space="preserve">
          <source>2) Using slice method, slice is for slicing part of the array, it will slice some part of your array without touching the original, in the slice, if don't specify the start and end of the array, it will slice the whole array and basically make a full copy of the array, so we can easily say:</source>
          <target state="translated">2)使用slice方法,slice是对数组的一部分进行切片,它将对你的数组的一部分进行切片,而不触及原数组,在切片中,如果不指定数组的开始和结束,它将对整个数组进行切片,基本上是对数组进行完整的复制,所以我们可以很容易的说。</target>
        </trans-unit>
        <trans-unit id="2750e58b401e221891942047928ae24f3335f11c" translate="yes" xml:space="preserve">
          <source>3) Also contact method, this is for merging two array, but we can just specify one of arrays and then this basically make a copy of the values in the new contacted array:</source>
          <target state="translated">3)同样是联系方法,这个是用于合并两个数组,但我们可以只指定其中一个数组,然后这样基本上就可以在新的联系数组中复制一个值。</target>
        </trans-unit>
        <trans-unit id="05c82909ef2be3b61deeb01690e39ecdf535df82" translate="yes" xml:space="preserve">
          <source>4) Also stringify and parse method, it's not recommended, but can be an easy way to copy Array and Objects:</source>
          <target state="translated">4)同样是字符串化和解析的方法,不推荐使用,但可以简单的复制Array和Objects。</target>
        </trans-unit>
        <trans-unit id="aec102b101411633d75f567017c24e023f39c272" translate="yes" xml:space="preserve">
          <source>5) Array.from method, this is not widely supported, before use check the support in different browsers:</source>
          <target state="translated">5)Array.from方法,这个并不广泛支持,在使用前请检查不同浏览器的支持情况。</target>
        </trans-unit>
        <trans-unit id="e549e4228b75a93426a56ec28362029621173e99" translate="yes" xml:space="preserve">
          <source>6) ECMA6 way, also not fully supported, but babelJs can help you if you want to transpile:</source>
          <target state="translated">6)ECMA6的方式,也不完全支持,但babelJs可以帮助你,如果你想移植的话。</target>
        </trans-unit>
        <trans-unit id="5abbe3be541fbf45a084a6f0c94a62046b7a66d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let clonedArray = _.clone(array)&lt;/code&gt;&lt;a href=&quot;https://lodash.com/docs/4.17.10#clone&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;let clonedArray = _.clone(array)&lt;/code&gt; &lt;a href=&quot;https://lodash.com/docs/4.17.10#clone&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文档&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a80d7950639910f53ad9db729a668c9c8d8176a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let clonedArray = _.cloneDeep(array)&lt;/code&gt;&lt;a href=&quot;https://lodash.com/docs/4.17.10#cloneDeep&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;let clonedArray = _.cloneDeep(array)&lt;/code&gt; &lt;a href=&quot;https://lodash.com/docs/4.17.10#cloneDeep&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文档&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c5e1c9149ebe28395b9109ac89bbdd124095044" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All arrays (type1, type2, type3)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有数组（type1，type2，type3）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="432f3d4ef18867a1ee3c381d881c8576c7b849c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Answer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d9a26ddf25bf57e5c8d8b6a72ac4577bb8ef99d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array of literal-values (type1) and literal-structures (type2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字值（类型1）和文字结构（类型2）的数组&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e046b909d9f8cc4b19cea6369b86a13d109723b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array of literal-values (type1)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字值数组（类型1）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b63522409d3e43c2a2da34fddfb52d6f9d92b2b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BUT&lt;/strong&gt; if your array contains &lt;strong&gt;complex elements&lt;/strong&gt; such as objects(or arrays) or more &lt;strong&gt;nested objects&lt;/strong&gt;, then, you will have to make sure that you are making a copy of all the elements from the top level to the last level else reference of the inner objects will be used and that means changing values in object_elements in new_array will still affect the old_array. You can call this method of copying at each level as making a &lt;strong&gt;DEEP COPY&lt;/strong&gt;
of the old_array.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您的数组包含&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;复杂的元素（&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如对象（或数组）或更多&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;嵌套对象）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则必须确保要复制从顶层到最后一层的所有元素，否则要复制内部元素将使用对象，这意味着更改new_array中的object_elements中的值仍会影响old_array。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以像&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 对old_array &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DEEP COPY&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一样在每个级别调用这种复制方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ceb25a581954b5c8aa302f42c85bc107b2e60b4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But i think, in all the methods above&lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Array.from&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;is better and made mainly to copy an array.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是我认为，在&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array.from&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上面的所有方法中，&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都是更好&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的方法，&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主要用于复制数组。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5997047d2052d17a1164204a0161005ef9218a4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For lodash users:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于lodash用户：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1292ac6fa9258aadd163972c77cad6e9b76394d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Important!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="616f933b5eab86b7a3f1c50c76038ce8baa1920c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Question&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fbb28786e4c9c0b2941adf70307daf74f281718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Quick Examples:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;快速示例：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a45c6c16684e6b19ee66c0028b32a207dccfed0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution for 2&lt;/strong&gt;: Deep Copy by element by element</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2的解决方案&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：逐元素深度复制&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f1790f14eab6f8bfab42bb0a4ee53a0b78cb9a6" translate="yes" xml:space="preserve">
          <source>Add the following code in your JavaScript file:</source>
          <target state="translated">在你的JavaScript文件中添加以下代码。</target>
        </trans-unit>
        <trans-unit id="3e827ad35355067d1f45e21cb2262e62fbe30b54" translate="yes" xml:space="preserve">
          <source>Adding to the solution of &lt;strong&gt;array.slice();&lt;/strong&gt; be aware that if you have &lt;strong&gt;multidimensional array&lt;/strong&gt; sub-arrays will be copied by references.
What you can do is to loop and slice() each sub-array individually</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加到&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;array.slice（）;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的解决方案中 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，如果您有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多维数组，则&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子数组将通过引用复制。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以做的是分别循环和切片每个子数组&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="381708f8617ffc6a0f1414a3c77a67eae1ea356a" translate="yes" xml:space="preserve">
          <source>After that the &lt;code&gt;.slice()&lt;/code&gt; method also has decent performance and is also less verbose and easier for the programmer to implement. I suggest to use &lt;code&gt;.slice()&lt;/code&gt; for your everyday copying of arrays which aren't very CPU intensive. Also avoid using the &lt;code&gt;JSON.parse(JSON.stringify(arr))&lt;/code&gt; (lots of overhead) if no deep clone is required and performance is an issue.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之后，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.slice()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法也具有不错的性能，并且不那么冗长且易于程序员实现。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我建议您使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.slice()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每天复制&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不太占用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; CPU的阵列。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果不需要深度克隆并且性能是一个问题，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也请避免使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse(JSON.stringify(arr))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（很多开销）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fa4e67e717cf7b0812a719ec8c944274d42c3cb" translate="yes" xml:space="preserve">
          <source>Also if want to create a new array with the existing one being part of it:</source>
          <target state="translated">此外,如果要创建一个新的数组,并将现有的数组作为其中的一部分。</target>
        </trans-unit>
        <trans-unit id="0d0223c3f3274398a55ed8725b06675a40efd8ef" translate="yes" xml:space="preserve">
          <source>Also note that:</source>
          <target state="translated">还注意到:</target>
        </trans-unit>
        <trans-unit id="85fdb1b588fb0ff65383d4a2136c982fcb451d10" translate="yes" xml:space="preserve">
          <source>Also this obviously will not clone events and functions, but the good thing you can do it in one line, and it can be used for any kind of object (arrays, strings, numbers, objects ...)</source>
          <target state="translated">此外,这显然不会克隆事件和函数,但好在你可以在一行中完成,它可以用于任何类型的对象(数组、字符串、数字、对象.........)。</target>
        </trans-unit>
        <trans-unit id="c3f02a69cf13c08d5bf403486e87989b450bdc6e" translate="yes" xml:space="preserve">
          <source>An alternative to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;concat&lt;/code&gt;&lt;/a&gt;, which can be used in 2 ways. The first of these is perhaps more readable as the intended behaviour is very clear:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt; &lt;code&gt;slice&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的替代方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;concat&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，可以有两种使用方式。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于预期的行为非常明确，因此第一个可能更易读：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aec5cc59489c9b3aa64a29aeec594ab01ecd5780" translate="yes" xml:space="preserve">
          <source>And for those developers that shy away from third-party libraries (like jQuery), you can use the following custom function; which has higher performance than $.extend, and deep-copies all arrays.</source>
          <target state="translated">而对于那些避开第三方库(如jQuery)的开发者,你可以使用下面的自定义函数;它的性能比$.extend更高,并且可以深度复制所有数组。</target>
        </trans-unit>
        <trans-unit id="931b7a0ca84dd2793448fe021b199eb2eb613883" translate="yes" xml:space="preserve">
          <source>And simply use</source>
          <target state="translated">并简单地使用</target>
        </trans-unit>
        <trans-unit id="897ba49541a22ecb77c0412803787754bb4bfb2d" translate="yes" xml:space="preserve">
          <source>Array spreads are now &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator#Browser_compatibility&quot;&gt;supported in all major browsers&lt;/a&gt; but if you need older support use typescript or babel and compile to ES5.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator#Browser_compatibility&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，所有主要浏览器&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;支持&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数组传播，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是如果您需要较早的支持，请使用打字稿或babel并编译为ES5。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="913fbc77c0eac30b3eb02d0c115073a191f96352" translate="yes" xml:space="preserve">
          <source>As we know in Javascript &lt;strong&gt;arrays&lt;/strong&gt; and &lt;strong&gt;objects&lt;/strong&gt; are by reference, but what ways we can do copy the array without changing the original array later one?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正如我们在Javascript中所知道的那样，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数组&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是按引用进行的，但是我们有什么方法可以在不更改原始数组的情况下复制数组呢？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a8545770a396c70cb29a3b316e91768a48ae823" translate="yes" xml:space="preserve">
          <source>Based on the types of elements in the array, we can use various techniques to deep copy.</source>
          <target state="translated">根据数组中元素的类型,我们可以利用各种技巧进行深度复制。</target>
        </trans-unit>
        <trans-unit id="35df21a2161a1c56e4a7a5a8f6a086711c1757ee" translate="yes" xml:space="preserve">
          <source>Basically, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; operation clones the array and returns a reference to a new array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本上，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;操作将克隆该数组并返回对新数组的引用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25cd1b883da20516aba2b42fc79179dc08ff2822" translate="yes" xml:space="preserve">
          <source>Be careful when arrays or objects are nested!:</source>
          <target state="translated">当数组或对象被嵌套的时候要小心!</target>
        </trans-unit>
        <trans-unit id="449654022034e47b1e4e7e7a09133da27c7980b4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;arr1&lt;/code&gt; is an array of literal values (boolean, number, or string), you can use any deep copy technique discussed above, where the spread operator &lt;code&gt;...&lt;/code&gt; has the highest performance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是文字值（布尔值，数字或字符串）的数组，所以您可以使用上面讨论的任何深度复制技术，其中散布运算符&lt;/font&gt;&lt;/font&gt; &lt;code&gt;...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有最高的性能。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89b20e543e5e58bd972e9f5ef6d461bb466651b5" translate="yes" xml:space="preserve">
          <source>Cohen (in the comments) pointed out that this latter method &lt;a href=&quot;https://jsperf.com/copy-simple-array&quot;&gt;has better performance&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;科恩（在评论中）指出，后一种方法&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsperf.com/copy-simple-array&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有更好的性能&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c709d5805c68db79069f9c985851e4e4cda8256b" translate="yes" xml:space="preserve">
          <source>Copy an Array in ES6</source>
          <target state="translated">在ES6中复制一个阵列</target>
        </trans-unit>
        <trans-unit id="a3197b4fe135aa53749addb4c5e2543ef09afd1d" translate="yes" xml:space="preserve">
          <source>Copy array by value</source>
          <target state="translated">按值复制数组</target>
        </trans-unit>
        <trans-unit id="2336e3cd4f27deabb43770acce38bcc460c8fbd7" translate="yes" xml:space="preserve">
          <source>Copy n Array in ES5</source>
          <target state="translated">ES5中的复制阵列</target>
        </trans-unit>
        <trans-unit id="b7345669ef02152d7f109a056f3af17dbca07cbd" translate="yes" xml:space="preserve">
          <source>Dan, no need to use fancy tricks. All you need to do is make copy of arr1 by doing this.</source>
          <target state="translated">Dan,不需要使用花哨的技巧。你需要做的就是通过这样做,复制arr1。</target>
        </trans-unit>
        <trans-unit id="4ece27c78358ad6d2be0b1f53bda3d64498a93ba" translate="yes" xml:space="preserve">
          <source>Deep copy techniques depend on the three array types</source>
          <target state="translated">深度复制技术取决于三种阵列类型</target>
        </trans-unit>
        <trans-unit id="b685ca361a1fd5c400bb43cf44445b72a078a6fa" translate="yes" xml:space="preserve">
          <source>Elements can be: literal values, literal structures, or prototypes.</source>
          <target state="translated">元素可以是:字面值、字面结构或原型。</target>
        </trans-unit>
        <trans-unit id="50c326cbb07f2b51dcf39fb3c434ba956484537f" translate="yes" xml:space="preserve">
          <source>Exceptions:</source>
          <target state="translated">Exceptions:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="2dfcc07fcb9cd77783ec2b79bc7b9828d586bd38" translate="yes" xml:space="preserve">
          <source>For ES6 array containing objects</source>
          <target state="translated">对于包含对象的ES6数组</target>
        </trans-unit>
        <trans-unit id="6320b51104820c5e9d3320ead0400cf4987e63fb" translate="yes" xml:space="preserve">
          <source>For deep copying, you can use the above-mentioned methods for primitive data types at each level depending upon the type of data or you can use this &lt;strong&gt;costly method(mentioned below)&lt;/strong&gt; for making a deep copy without doing much work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于深度复制，您可以根据数据类型在每个级别上对原始数据类型使用上述方法，也可以使用这种&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;昂贵的方法（如下所述）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行深度复制而无需做很多工作。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20c32be979b022cf64df767c6f12953c521db79f" translate="yes" xml:space="preserve">
          <source>For references, strings and numbers (and not the actual object), &lt;strong&gt;&lt;code&gt;slice()&lt;/code&gt; copies object references into the new array.&lt;/strong&gt; Both the original and new array refer to the same object. If a referenced object changes, the changes are visible to both the new and original arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于引用，字符串和数字（​​而不是实际对象），&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;slice()&lt;/code&gt; 将&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象引用复制到新数组中。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原始数组和新数组都引用同一对象。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果引用的对象发生更改，则更改对新数组和原始数组均可见。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="effe8ee28b294d0b912b0706f60a20e13227f465" translate="yes" xml:space="preserve">
          <source>From ES2015,</source>
          <target state="translated">来自ES2015。</target>
        </trans-unit>
        <trans-unit id="d91cedcff34b7c37bc5f91312b51e984bdd2e578" translate="yes" xml:space="preserve">
          <source>From these elements we can create three types of arrays.</source>
          <target state="translated">从这些元素中,我们可以创建三种类型的数组。</target>
        </trans-unit>
        <trans-unit id="279bf69468c5929bffedbdb69e234b918f14f190" translate="yes" xml:space="preserve">
          <source>Here are few more way to copy:</source>
          <target state="translated">下面再给大家介绍几种复制的方法。</target>
        </trans-unit>
        <trans-unit id="60b0e096ab908576006ea612c6a4837c49cc72e7" translate="yes" xml:space="preserve">
          <source>Here are few ways to do it:</source>
          <target state="translated">以下是几个方法。</target>
        </trans-unit>
        <trans-unit id="767a9b8a1d9274c7d20271817f40b04a6a754acf" translate="yes" xml:space="preserve">
          <source>Here's a variant:</source>
          <target state="translated">这里有一个变体。</target>
        </trans-unit>
        <trans-unit id="ec09a2235c43f4d8a34054b2f664bfe5613ef2b3" translate="yes" xml:space="preserve">
          <source>I personally think &lt;a href=&quot;https://developer.mozilla.org/vi/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Array.from&lt;/a&gt; is a more readable solution. By the way, just beware of its browser support.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我个人认为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/vi/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array.from&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个更具可读性的解决方案。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;顺便提一下，请注意它的浏览器支持。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e06eddb163209738156c9780e7ef58853361ef53" translate="yes" xml:space="preserve">
          <source>I realized that &lt;code&gt;arr2&lt;/code&gt; refers to the same array as &lt;code&gt;arr1&lt;/code&gt;, rather than a new, independent array. How can I copy the array to get two independent arrays?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我意识到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指向与&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相同的数组&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而不是新的独立数组。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何复制数组以获取两个独立的数组？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53a0ab2989d070a3b3fbf7977fb2f8994dfa3414" translate="yes" xml:space="preserve">
          <source>I realized that arr2 refers to the same array as arr1, rather than a
  new, independent array. How can I copy the array to get two
  independent arrays?</source>
          <target state="translated">我发现arr2指的是和arr1一样的数组,而不是一个独立的新数组。如何才能复制数组,得到两个独立的数组?</target>
        </trans-unit>
        <trans-unit id="fd17ec19e566d85d3c3fd1cde088b692870887f8" translate="yes" xml:space="preserve">
          <source>I would personally prefer this way:</source>
          <target state="translated">我个人更喜欢这种方式。</target>
        </trans-unit>
        <trans-unit id="d5035eaee12cbcc2891834fe03f6c9671b982951" translate="yes" xml:space="preserve">
          <source>If elements in the array are &lt;strong&gt;object literals, another array ({}, [])&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果数组中的元素是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对象文字，则另一个数组（{}，[]）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec97cc8bd39e2409ee132c57eb175f826f556561" translate="yes" xml:space="preserve">
          <source>If elements in the array are &lt;strong&gt;primitive types&lt;/strong&gt; (string, number, etc.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果数组中的元素是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本类型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（字符串，数字等）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b5fd3ad5278b8c3d0e9a9206dd2f99f89a52ac5" translate="yes" xml:space="preserve">
          <source>If you are in an environment of &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#Harmony.2C_6th_Edition&quot;&gt;ECMAScript 6&lt;/a&gt;, using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;Spread Operator&lt;/a&gt; you could do it this way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#Harmony.2C_6th_Edition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 6&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的环境中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则可以使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spread运算符&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过以下方式进行操作：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2e37c7bc6af5975db61e86e80345bf4bc63f2b5" translate="yes" xml:space="preserve">
          <source>If you do want to deepclone a javascript array use &lt;code&gt;JSON.parse&lt;/code&gt; in conjunction with &lt;code&gt;JSON.stringify&lt;/code&gt;, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您确实想深度克隆JavaScript数组&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，请结合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，如下所示：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc0596a29978964214985698889c61aa7be57d85" translate="yes" xml:space="preserve">
          <source>If you don't care about deep/nested objects and props use (&lt;strong&gt;ES6&lt;/strong&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不关心深层/嵌套对象和道具，请使用（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43834f9ecfa7ec250414b3c2bbcc14f9406a7e3b" translate="yes" xml:space="preserve">
          <source>If you have an array of Reference types, say of type &lt;code&gt;Object&lt;/code&gt;.  The array &lt;strong&gt;will&lt;/strong&gt; be copied, but both of the arrays will contain references to the same &lt;code&gt;Object&lt;/code&gt;'s.  So in this case it would seem like the array is copied by reference even though the array &lt;strong&gt;is actually copied.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您具有引用类型的数组，请说类型为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该数组&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;被复制，但是两个数组都将包含对相同&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，在这种情况下，即使&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际复制&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了数组，也似乎是通过引用复制了该数组&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24416d693254570a9dfb2ba5adb03222d251ee08" translate="yes" xml:space="preserve">
          <source>If you want to make a new copy of an object or array, you must explicitly copy the properties of the object or the elements of the array, for example:</source>
          <target state="translated">如果要对一个对象或数组进行新的复制,必须明确复制对象的属性或数组的元素,例如。</target>
        </trans-unit>
        <trans-unit id="d5dcd12b82a6e6787ca31b95edadf1e9050f4a50" translate="yes" xml:space="preserve">
          <source>If your array contains elements of the &lt;strong&gt;primitive data type&lt;/strong&gt; such as &lt;strong&gt;int, char, or string etc&lt;/strong&gt; then you can user one of those methods which returns a copy of the original array such as .slice() or .map() or spread operator(thanks to ES6).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您的数组包含&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原始数据类型的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元素（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;int，char或string等），&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则可以使用这些方法之一，这些方法返回原始数组的副本，例如.slice（）或.map（）或散布运算符（感谢ES6）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32832afe073f7f222fe062d9ffb39d05452d9fc6" translate="yes" xml:space="preserve">
          <source>Imagine we have this array in your code:</source>
          <target state="translated">想象一下,我们在你的代码里有这样的数组。</target>
        </trans-unit>
        <trans-unit id="dbfaf167f24a5d24776e1bf23368bd2d7491bb8f" translate="yes" xml:space="preserve">
          <source>In Javascript, deep-copy techniques depend on the elements in an array. Let's start there.</source>
          <target state="translated">在Javascript中,深度复制技术依赖于数组中的元素。让我们从这里开始吧。</target>
        </trans-unit>
        <trans-unit id="6d0226286399bcbb086356e089c3ecb1f872c280" translate="yes" xml:space="preserve">
          <source>In my particular case I needed to ensure the array remained intact so this worked for me:</source>
          <target state="translated">在我的特殊情况下,我需要确保阵列保持完好无损,所以这对我来说很有效。</target>
        </trans-unit>
        <trans-unit id="57b9fb121420afad8742bf9061b6df58a392da53" translate="yes" xml:space="preserve">
          <source>It is important to note that it will work as expected for primitive types (string, number, etc.), and to also explain the expected behavior for reference types...</source>
          <target state="translated">需要注意的是,对于基元类型(string、number等),它的工作原理与预期的一样,同时也要解释一下对于引用类型的预期行为.....</target>
        </trans-unit>
        <trans-unit id="3641b2d18d7de11bb5d4b0aa4eb9d373af112ef9" translate="yes" xml:space="preserve">
          <source>It will work.</source>
          <target state="translated">会有效果的。</target>
        </trans-unit>
        <trans-unit id="f1888ac75abafa9d8540fd8c41d2297e9666bf5d" translate="yes" xml:space="preserve">
          <source>Lee Penkman, also in the comments, points out that if there's a chance &lt;code&gt;array1&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, you can return an empty array as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;李Penkman，也是在评论中指出，如果有一个机会&lt;/font&gt;&lt;/font&gt; &lt;code&gt;array1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，你可以按如下返回一个空数组：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c66683dd7fc052a25bac24f5229090ea7c4f7e6c" translate="yes" xml:space="preserve">
          <source>Make copy of multidimensional array/object:</source>
          <target state="translated">制作多维数组对象的副本。</target>
        </trans-unit>
        <trans-unit id="c37cddd055ced6b4b7c8dbca74732e1abdfdcf96" translate="yes" xml:space="preserve">
          <source>More info on spreads</source>
          <target state="translated">更多关于价差的信息</target>
        </trans-unit>
        <trans-unit id="d2bdb14970507a17170eb5bb65bedd009bf54439" translate="yes" xml:space="preserve">
          <source>Most of answers here works for &lt;strong&gt;&lt;em&gt;particular cases&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里的大多数答案适用于&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特定情况&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bed20c7288c8f9234416c5eae11ad3f9531f9025" translate="yes" xml:space="preserve">
          <source>No jQuery needed...  &lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/KBYvL/1/&quot;&gt;Working Example&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不需要jQuery ... &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/KBYvL/1/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;工作示例&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07d6f97e234865f8c546988c6102037180e914e7" translate="yes" xml:space="preserve">
          <source>Note that you can also do this with &lt;code&gt;slice&lt;/code&gt;: &lt;code&gt;var array2 = (array1 || []).slice();&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，您也可以使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;slice&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来执行此操作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var array2 = (array1 || []).slice();&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbbd5ed5b2dd36af8a9b3e829f487615a888bb90" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;arr1&lt;/code&gt; and &lt;code&gt;arr2&lt;/code&gt; are two different array variables stored in separate stacks.
&lt;a href=&quot;https://jsfiddle.net/wm67wuzo/&quot;&gt;Check this out on jsfiddle&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是存储在单独堆栈中的两个不同的数组变量。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/wm67wuzo/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在jsfiddle上检查一下&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6ea9e66af03ebf079e90339c98f32cb424d5e57" translate="yes" xml:space="preserve">
          <source>Now you can do any one of the following to make a copy of an array.</source>
          <target state="translated">现在,你可以做以下任何一项来复制一个数组。</target>
        </trans-unit>
        <trans-unit id="a4ca5c46105ffdda5974ecec43d2369ffb6013bf" translate="yes" xml:space="preserve">
          <source>Now, if i change a,</source>
          <target state="translated">现在,如果我换一个。</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="ec7d8c5fc80169117f52a38b3e9e291385330333" translate="yes" xml:space="preserve">
          <source>Often when we transform data we want to keep our initial datastructure (e.g. Array) intact. We do this by making a exact copy of our array so this one can be transformed while the initial one stays intact.</source>
          <target state="translated">通常情况下,当我们转换数据时,我们希望保持初始数据结构(例如Array)不变。我们通过对数组做一个精确的拷贝来实现这个目的,这样这个数组就可以被转换,而初始数组保持不变。</target>
        </trans-unit>
        <trans-unit id="3cdc224880f160153162ef8dca820a08d21be3ca" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;Array.prototype.map&lt;/code&gt; may be used with an identity function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.prototype.map&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以与身份函数一起使用：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc72f1096498b7bc397d103e186cc369694b004c" translate="yes" xml:space="preserve">
          <source>Or, for the second method:</source>
          <target state="translated">或者说,对于第二种方法。</target>
        </trans-unit>
        <trans-unit id="0c1fad2448524d139b20d8c687780af7f58c6ee7" translate="yes" xml:space="preserve">
          <source>Passing one varible to another on Compound values such as Object/Array behave difrently. Using asign operator on copand values we pass reference to an object. This is why the value of both arrays are changing when removing/adding arr elements.</source>
          <target state="translated">在ObjectArray这样的Compleound值上传递一个varible到另一个varible的行为是不同的。在 copand 值上使用 asign 操作符,我们将引用传递给一个对象。这就是为什么在删除添加Arr元素时,两个数组的值都会发生变化。</target>
        </trans-unit>
        <trans-unit id="4e771311afaee543211598c5a27b9471d55cabee" translate="yes" xml:space="preserve">
          <source>Performance of copying:</source>
          <target state="translated">复制的表现。</target>
        </trans-unit>
        <trans-unit id="b13b0eff9d12c2597bee5a93fe1e1147b86dbcab" translate="yes" xml:space="preserve">
          <source>Primitive values are always pass by its value (copied). Compound values however are passed by reference.</source>
          <target state="translated">原始值总是通过它的值来传递(复制)。但是复合值是通过引用传递的。</target>
        </trans-unit>
        <trans-unit id="045b7aa7e9b5e6031be5a378543e0a451df74e95" translate="yes" xml:space="preserve">
          <source>Primitives such as strings and numbers are immutable, so changes to the string or number are impossible.</source>
          <target state="translated">像字符串和数字这样的基元是不可更改的,所以不可能对字符串或数字进行更改。</target>
        </trans-unit>
        <trans-unit id="09cfd9f36c74626c471a6ed13890f0ee9dee7a8d" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参考：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf59c5173fd7c554ce1bd0a5f2fe575160302e21" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;Here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参考：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b04a03c2830c8506c5a51afbeb3df1bc89708b80" translate="yes" xml:space="preserve">
          <source>So don't use these methods when there are objects or arrays inside your array you want to copy. i.e. Use these methods on arrays of primitives only.</source>
          <target state="translated">所以当数组内有对象或数组要复制时,不要使用这些方法,即只在基元数组上使用这些方法。</target>
        </trans-unit>
        <trans-unit id="a0cfd7b410ebbf0aed53f77eb3219f8cf756ec1f" translate="yes" xml:space="preserve">
          <source>So how do we copy this arr?</source>
          <target state="translated">那么,我们该如何复制这个arr呢?</target>
        </trans-unit>
        <trans-unit id="06771cf9bcbd3a26233bcf61057580ab23dab6be" translate="yes" xml:space="preserve">
          <source>So to answer the question...</source>
          <target state="translated">所以要回答这个问题.....</target>
        </trans-unit>
        <trans-unit id="2286bc98922d17852dfaa9f08908883dc165470f" translate="yes" xml:space="preserve">
          <source>So which one do we choose for optimal performance. It turns out that the most verbose method, the &lt;code&gt;for&lt;/code&gt; loop has the highest performance. Use the &lt;code&gt;for&lt;/code&gt; loop for really CPU intensive copying (large/many arrays).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，我们选择哪种以获得最佳性能。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;事实证明，最冗长的方法&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循环具有最高的性能。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循环进行真正的CPU密集型复制（大型/多个阵列）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5008b43a8899c37dd1b5ff186c31b522b6ae0090" translate="yes" xml:space="preserve">
          <source>Some of mentioned methods work well when working with simple data types like number or string, but when the array contains other objects these methods fail. When we try to pass any object from one array to another it is passed as a reference, not the object.</source>
          <target state="translated">上述的一些方法在处理简单的数据类型(如数字或字符串)时工作得很好,但当数组中包含其他对象时,这些方法就会失败。当我们尝试将任何对象从一个数组传递到另一个数组时,它是作为一个引用传递的,而不是对象。</target>
        </trans-unit>
        <trans-unit id="ea4006e5721d9886e3f252258dfc511f3486fe6b" translate="yes" xml:space="preserve">
          <source>Source performance test</source>
          <target state="translated">来源性能测试</target>
        </trans-unit>
        <trans-unit id="603cb74d50c1cbd801dca7fc0eb132947d170797" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://james.padolsey.com/javascript/deep-copying-of-objects-and-arrays/&quot;&gt;Here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;资料来源：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://james.padolsey.com/javascript/deep-copying-of-objects-and-arrays/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这里&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b38f29d731f9dfa5ca6702144928e077890cfbd6" translate="yes" xml:space="preserve">
          <source>Thanks to James Padolsey for this function.</source>
          <target state="translated">感谢詹姆斯-帕多西的这个功能。</target>
        </trans-unit>
        <trans-unit id="689b57da72d1c22ba48ab72bbec6c2318e4c47c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; technique can be used to deep copy literal values (boolean, number, string) and literal structures (array, object), but not prototype objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以使用的技术，以深复制文字值（布尔值，数字，字符串）和文字结构（数组，对象），而不是原型对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6705f4a12d8757fa69823326e0bf631fc819f413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[...myArray]&lt;/code&gt;, &lt;code&gt;myArray.splice(0)&lt;/code&gt;, &lt;code&gt;myArray.slice()&lt;/code&gt;, and &lt;code&gt;myArray.concat()&lt;/code&gt; techniques can be used to deep copy arrays with literal values (boolean, number, and string) only; where the Spread operator &lt;code&gt;[...myArray]&lt;/code&gt; has the best performance (&lt;a href=&quot;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&quot;&gt;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[...myArray]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myArray.splice(0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myArray.slice()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myArray.concat()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;技术可以被用于与文字值（布尔，数字和字符串）仅深拷贝阵列; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spread运算符&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[...myArray]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的性能最佳（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9383c7c87c05f57c69e2f333f40711dd244ced6a" translate="yes" xml:space="preserve">
          <source>The jQuery &lt;code&gt;$.extend(myArray)&lt;/code&gt; technique can be used to deep-copy all array-types. Libraries like &lt;a href=&quot;http://underscorejs.org&quot;&gt;Underscore&lt;/a&gt; and &lt;a href=&quot;https://lodash.com&quot;&gt;Lo-dash&lt;/a&gt; offer similar deep-copy functions to &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;&lt;code&gt;$.extend()&lt;/code&gt;, yet have lower performance. More surprisingly, &lt;code&gt;$.extend()&lt;/code&gt; has higher performance than the &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; technique &lt;a href=&quot;http://jsperf.com/js-deep-copy/15&quot;&gt;http://jsperf.com/js-deep-copy/15&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.extend(myArray)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;技术可用于深度复制所有数组类型。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo-dash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样的库&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供与&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jquery.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;$.extend()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类似的深层复制功能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但性能较低。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更令人惊讶的是，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.extend()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;性能比&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;技术&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/js-deep-copy/15&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsperf.com/js-deep-copy/15&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更高&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8d6dc11c2b8ff8bf8e2bd754b36e98c46f81132" translate="yes" xml:space="preserve">
          <source>The second method is:</source>
          <target state="translated">第二种方法是:</target>
        </trans-unit>
        <trans-unit id="a5049c7e28b22a10705794f68236c7230c22865b" translate="yes" xml:space="preserve">
          <source>The way this works is that the &lt;code&gt;concat&lt;/code&gt; method creates a new array consisting of the elements in the object on which it is called followed by the elements of any arrays passed to it as arguments. So when no arguments are passed, it simply copies the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这种工作方式是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;concat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法创建一个新数组，该数组由调用它的对象中的元素组成，然后是作为参数传递给它的任何数组的元素。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，当不传递任何参数时，它仅复制数组。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="075eb7249f96fe916120b4889af607790e23590a" translate="yes" xml:space="preserve">
          <source>Then, a is [1,2,3,5] but b is still [1,2,3] as it has different reference.</source>
          <target state="translated">那么,a是[1,2,3,5],但b仍然是[1,2,3],因为它有不同的参照物。</target>
        </trans-unit>
        <trans-unit id="710c353f63705c3bde80c27220c0e51493d2827d" translate="yes" xml:space="preserve">
          <source>There are a lot of other methods out there which you can use depending on your requirements. I have mentioned only some of those for giving a general idea of what happens when we try to copy an array into the other &lt;strong&gt;by value&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您还可以根据需要使用许多其他方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我只提到了其中的一些，以便大致了解当我们尝试&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;按值&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将数组复制到另一个数组时会发生什么&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2be42dd7273f2ad4a618403541a1f0116978daf8" translate="yes" xml:space="preserve">
          <source>There are limitations..check  docs &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;Spread syntax @ mozilla&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有限制..check docs @mozilla &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;传播语法&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a12406982cba9fbd604005acb16615bb60feda2" translate="yes" xml:space="preserve">
          <source>There's the newly introduced &lt;code&gt;Array.from&lt;/code&gt;, but unfortunately, as of the time of this writing it's only supported on recent Firefox versions (32 and higher). It can be simply used as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有一个新引入的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.from&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是不幸的是，在撰写本文时，它仅在最新的Firefox版本（32和更高版本）上受支持。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它可以简单地如下使用：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e7409b58374d98598b260d88e054c6e42868fe1" translate="yes" xml:space="preserve">
          <source>This copys the array from the starting position &lt;code&gt;0&lt;/code&gt; through the end of the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这会将数组从起始位置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;复制到数组&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;末尾。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2f373bc7618697a70967233aab0c7160db64e93" translate="yes" xml:space="preserve">
          <source>This is how I've done it after trying many approaches:</source>
          <target state="translated">这是我在尝试了很多方法之后的做法。</target>
        </trans-unit>
        <trans-unit id="ff9864d43b82aab4b2aecc60e550bc5de819cf95" translate="yes" xml:space="preserve">
          <source>This will create a new deep copy not related to the first one (not a shallow copy).</source>
          <target state="translated">这将创建一个新的深度副本,与第一个副本无关(不是浅层副本)。</target>
        </trans-unit>
        <trans-unit id="ed2d23afd0de444c17f6cda6df74e2a71e696ca2" translate="yes" xml:space="preserve">
          <source>Three types of elements</source>
          <target state="translated">三类要素</target>
        </trans-unit>
        <trans-unit id="b543720e8daabc3733964f244cca2d14e58df202" translate="yes" xml:space="preserve">
          <source>Use this:</source>
          <target state="translated">用这个。</target>
        </trans-unit>
        <trans-unit id="046e842c8cd76e1ce334590d060a40b48c531552" translate="yes" xml:space="preserve">
          <source>Using jQuery deep copy could be made as following:</source>
          <target state="translated">使用jQuery进行深度复制,可以做到以下几点。</target>
        </trans-unit>
        <trans-unit id="7fabb8d7e42c438ba95fed17c9c798cc28407d7c" translate="yes" xml:space="preserve">
          <source>Ways of copying an array:</source>
          <target state="translated">复制数组的方法。</target>
        </trans-unit>
        <trans-unit id="c063f502c09f2fd72ed8fcf4f6d37dfa831954bf" translate="yes" xml:space="preserve">
          <source>When arrays are nested the values are copied by reference. Here is an example of how this could lead to issues:</source>
          <target state="translated">当数组被嵌套时,值会通过引用复制。下面是一个例子,说明这可能导致的问题。</target>
        </trans-unit>
        <trans-unit id="f173344b599b1a43753194f2d3adca0894e86556" translate="yes" xml:space="preserve">
          <source>When copying an array in JavaScript to another array:</source>
          <target state="translated">当将JavaScript中的数组复制到另一个数组时。</target>
        </trans-unit>
        <trans-unit id="1a8c28404935bcf86e33ee852e0ab89574079761" translate="yes" xml:space="preserve">
          <source>When we want to copy an array using the assignment operator ( &lt;code&gt;=&lt;/code&gt; ) it doesn't create a copy it merely copies the pointer/reference to the array. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当我们要使用赋值运算符（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;复制数组时，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它不会创建副本，而只是将指针/引用复制到数组中。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371f093a51da60220f7d2cc0cd8008cfb1ca57fe" translate="yes" xml:space="preserve">
          <source>When you assign a new value to the variable, you are changing the reference itself and it doesn&amp;rsquo;t affect the original Object/Array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为变量分配新值时，您正在更改引用本身，并且不会影响原始的对象/数组。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39b2d01523555b4141da40b7f0532313be885fba" translate="yes" xml:space="preserve">
          <source>Why `let arrCopy = arr` is not passing by value?</source>
          <target state="translated">为什么`let arrCopy=arr`不通过值传递?</target>
        </trans-unit>
        <trans-unit id="ebe8456b3b7749385be4eade455761e49b7ef495" translate="yes" xml:space="preserve">
          <source>You can also use ES6 spread operator to copy Array</source>
          <target state="translated">你也可以使用ES6 spread操作符来复制Array</target>
        </trans-unit>
        <trans-unit id="774308c5ddc9d898bf019c5bc9b81cc79f4ccb12" translate="yes" xml:space="preserve">
          <source>You can search for more information on Google about immutable primitive values and mutable object references.</source>
          <target state="translated">你可以在Google上搜索更多关于不可变的基元值和可变对象引用的信息。</target>
        </trans-unit>
        <trans-unit id="7d654668e1c71bcb21cdbbfb6c4af3ad819c9a18" translate="yes" xml:space="preserve">
          <source>You can use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以使用数组传播&lt;/font&gt;&lt;/font&gt; &lt;code&gt;...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;复制数组。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0aee23dd71431c3e3b82ec87f120ffec98574c4" translate="yes" xml:space="preserve">
          <source>You could use ES6 with spread Opeartor, its simpler.</source>
          <target state="translated">你可以使用ES6与传播Opeartor,它更简单。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="82057bb8f6ffd6f01b76bb87f9a1b8acd44af0c5" translate="yes" xml:space="preserve">
          <source>but if you want to do deep clone use this instead:</source>
          <target state="translated">但如果你想做深度克隆,用这个来代替。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="59a5c610074c286a10825ef707f885904486b0d0" translate="yes" xml:space="preserve">
          <source>read more</source>
          <target state="translated">阅读更多</target>
        </trans-unit>
        <trans-unit id="9e0578da76ac6233d63fcc6ff696a0a77aea8e95" translate="yes" xml:space="preserve">
          <source>same things goes to array of objects, they will be copied by reference, you have to copy them manually</source>
          <target state="translated">同样的事情也适用于数组对象,它们将通过引用复制,你必须手动复制它们</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
