<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/7486085">
    <body>
      <group id="7486085">
        <trans-unit id="d38a2d42e3313721ad04fced38011ce94666ce79" translate="yes" xml:space="preserve">
          <source>1) Looping through the array in a function and return a new array, like this:</source>
          <target state="translated">1)関数で配列をループして、こんな感じで新しい配列を返します。</target>
        </trans-unit>
        <trans-unit id="dbdf73ed119d84ffe2ad78b859c99704e6e9cf22" translate="yes" xml:space="preserve">
          <source>2) Using slice method, slice is for slicing part of the array, it will slice some part of your array without touching the original, in the slice, if don't specify the start and end of the array, it will slice the whole array and basically make a full copy of the array, so we can easily say:</source>
          <target state="translated">2)slice メソッドを使うと、slice は配列の一部をスライスするためのもので、元の配列に触れることなく配列の一部をスライスします。</target>
        </trans-unit>
        <trans-unit id="2750e58b401e221891942047928ae24f3335f11c" translate="yes" xml:space="preserve">
          <source>3) Also contact method, this is for merging two array, but we can just specify one of arrays and then this basically make a copy of the values in the new contacted array:</source>
          <target state="translated">3)contactメソッドは、2つの配列をマージするためのメソッドですが、どちらかの配列を指定するだけで、基本的には新しいcontactされた配列の値のコピーを作ることができます。</target>
        </trans-unit>
        <trans-unit id="05c82909ef2be3b61deeb01690e39ecdf535df82" translate="yes" xml:space="preserve">
          <source>4) Also stringify and parse method, it's not recommended, but can be an easy way to copy Array and Objects:</source>
          <target state="translated">4)また、文字列化してパースするメソッドは推奨されていませんが、ArrayやObjectをコピーする簡単な方法になります。</target>
        </trans-unit>
        <trans-unit id="aec102b101411633d75f567017c24e023f39c272" translate="yes" xml:space="preserve">
          <source>5) Array.from method, this is not widely supported, before use check the support in different browsers:</source>
          <target state="translated">5)Array.fromメソッド、これは広くサポートされていません、使用する前に異なるブラウザのサポートを確認してください。</target>
        </trans-unit>
        <trans-unit id="e549e4228b75a93426a56ec28362029621173e99" translate="yes" xml:space="preserve">
          <source>6) ECMA6 way, also not fully supported, but babelJs can help you if you want to transpile:</source>
          <target state="translated">6)ECMA6の方法、これも完全にはサポートされていませんが、babelJsはあなたがtranspileしたい場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="5abbe3be541fbf45a084a6f0c94a62046b7a66d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let clonedArray = _.clone(array)&lt;/code&gt;&lt;a href=&quot;https://lodash.com/docs/4.17.10#clone&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;let clonedArray = _.clone(array)&lt;/code&gt; &lt;a href=&quot;https://lodash.com/docs/4.17.10#clone&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントを作成します&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a80d7950639910f53ad9db729a668c9c8d8176a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let clonedArray = _.cloneDeep(array)&lt;/code&gt;&lt;a href=&quot;https://lodash.com/docs/4.17.10#cloneDeep&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;let clonedArray = _.cloneDeep(array)&lt;/code&gt; &lt;a href=&quot;https://lodash.com/docs/4.17.10#cloneDeep&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントを作成します&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c5e1c9149ebe28395b9109ac89bbdd124095044" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All arrays (type1, type2, type3)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての配列（type1、type2、type3）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="432f3d4ef18867a1ee3c381d881c8576c7b849c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Answer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Answer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d9a26ddf25bf57e5c8d8b6a72ac4577bb8ef99d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array of literal-values (type1) and literal-structures (type2)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リテラル値（type1）とリテラル構造（type2）の配列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e046b909d9f8cc4b19cea6369b86a13d109723b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array of literal-values (type1)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リテラル値の配列（type1）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b63522409d3e43c2a2da34fddfb52d6f9d92b2b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BUT&lt;/strong&gt; if your array contains &lt;strong&gt;complex elements&lt;/strong&gt; such as objects(or arrays) or more &lt;strong&gt;nested objects&lt;/strong&gt;, then, you will have to make sure that you are making a copy of all the elements from the top level to the last level else reference of the inner objects will be used and that means changing values in object_elements in new_array will still affect the old_array. You can call this method of copying at each level as making a &lt;strong&gt;DEEP COPY&lt;/strong&gt;
of the old_array.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、あなたの配列が含まれている場合は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、複雑な要素&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などのオブジェクト（または配列）以上のように&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネストされたオブジェクトを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、そして、あなたは、内側の最後のレベル、他の参照に、トップレベルからのすべての要素のコピーを作成していることを確認する必要がありますオブジェクトが使用されます。つまり、new_arrayのobject_elementsの値を変更しても、old_arrayに影響します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; old_arrayの&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DEEP COPY&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成するときに、このレベルのコピー方法を呼び出すことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ceb25a581954b5c8aa302f42c85bc107b2e60b4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But i think, in all the methods above&lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Array.from&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;is better and made mainly to copy an array.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、私は、上記のすべてのメソッドで&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array.fromの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方が優れていて、主に配列をコピーするために作成されていると&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;思います&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5997047d2052d17a1164204a0161005ef9218a4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For lodash users:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodashユーザーの場合：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1292ac6fa9258aadd163972c77cad6e9b76394d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Important!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="616f933b5eab86b7a3f1c50c76038ce8baa1920c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Question&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fbb28786e4c9c0b2941adf70307daf74f281718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Quick Examples:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;簡単な例：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a45c6c16684e6b19ee66c0028b32a207dccfed0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution for 2&lt;/strong&gt;: Deep Copy by element by element</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2の解決策&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：要素ごとのディープコピー&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f1790f14eab6f8bfab42bb0a4ee53a0b78cb9a6" translate="yes" xml:space="preserve">
          <source>Add the following code in your JavaScript file:</source>
          <target state="translated">JavaScriptファイルに以下のコードを追加します。</target>
        </trans-unit>
        <trans-unit id="3e827ad35355067d1f45e21cb2262e62fbe30b54" translate="yes" xml:space="preserve">
          <source>Adding to the solution of &lt;strong&gt;array.slice();&lt;/strong&gt; be aware that if you have &lt;strong&gt;multidimensional array&lt;/strong&gt; sub-arrays will be copied by references.
What you can do is to loop and slice() each sub-array individually</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;array.slice（）;の&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソリューションへの追加 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多次元配列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がある場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サブ配列は参照によってコピーされることに注意してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたができることは、各サブ配列を個別にループしてslice（）することです&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="381708f8617ffc6a0f1414a3c77a67eae1ea356a" translate="yes" xml:space="preserve">
          <source>After that the &lt;code&gt;.slice()&lt;/code&gt; method also has decent performance and is also less verbose and easier for the programmer to implement. I suggest to use &lt;code&gt;.slice()&lt;/code&gt; for your everyday copying of arrays which aren't very CPU intensive. Also avoid using the &lt;code&gt;JSON.parse(JSON.stringify(arr))&lt;/code&gt; (lots of overhead) if no deep clone is required and performance is an issue.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その後、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.slice()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドもまともなパフォーマンスを発揮し、プログラマーが実装するのに冗長性が少なくなり、簡単になります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CPUにあまり負荷をかけない、毎日の配列のコピーには&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.slice()&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用をお勧めします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ディープクローンが不要でパフォーマンスに問題がある場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse(JSON.stringify(arr))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（大量のオーバーヘッド）の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用を避け&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8fa4e67e717cf7b0812a719ec8c944274d42c3cb" translate="yes" xml:space="preserve">
          <source>Also if want to create a new array with the existing one being part of it:</source>
          <target state="translated">また、既存の配列を一部にして新しい配列を作成したい場合。</target>
        </trans-unit>
        <trans-unit id="0d0223c3f3274398a55ed8725b06675a40efd8ef" translate="yes" xml:space="preserve">
          <source>Also note that:</source>
          <target state="translated">また、そのことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="85fdb1b588fb0ff65383d4a2136c982fcb451d10" translate="yes" xml:space="preserve">
          <source>Also this obviously will not clone events and functions, but the good thing you can do it in one line, and it can be used for any kind of object (arrays, strings, numbers, objects ...)</source>
          <target state="translated">また、これは明らかにイベントや関数をクローンすることはありませんが、あなたは1行でそれを行うことができ、それはオブジェクト(配列、文字列、数字、オブジェクト...)の任意の種類のために使用することができます良いこと。</target>
        </trans-unit>
        <trans-unit id="c3f02a69cf13c08d5bf403486e87989b450bdc6e" translate="yes" xml:space="preserve">
          <source>An alternative to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;code&gt;concat&lt;/code&gt;&lt;/a&gt;, which can be used in 2 ways. The first of these is perhaps more readable as the intended behaviour is very clear:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わる&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt; &lt;code&gt;slice&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt; &lt;code&gt;concat&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 2つの方法で使用することができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意図された動作が非常に明確であるため、これらの最初のものはおそらくもっと読みやすいです：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aec5cc59489c9b3aa64a29aeec594ab01ecd5780" translate="yes" xml:space="preserve">
          <source>And for those developers that shy away from third-party libraries (like jQuery), you can use the following custom function; which has higher performance than $.extend, and deep-copies all arrays.</source>
          <target state="translated">また、サードパーティ製のライブラリ (jQuery など)を敬遠している開発者のために、以下のカスタム関数を使用することができます;$.extend よりもパフォーマンスが高く、すべての配列を深くコピーします。</target>
        </trans-unit>
        <trans-unit id="931b7a0ca84dd2793448fe021b199eb2eb613883" translate="yes" xml:space="preserve">
          <source>And simply use</source>
          <target state="translated">そして、単純に</target>
        </trans-unit>
        <trans-unit id="897ba49541a22ecb77c0412803787754bb4bfb2d" translate="yes" xml:space="preserve">
          <source>Array spreads are now &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator#Browser_compatibility&quot;&gt;supported in all major browsers&lt;/a&gt; but if you need older support use typescript or babel and compile to ES5.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列スプレッドは&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator#Browser_compatibility&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての主要なブラウザーでサポートされる&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ようになりましたが、古いサポートが必要な場合は、typescriptまたはbabelを使用して、ES5にコンパイルしてください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="913fbc77c0eac30b3eb02d0c115073a191f96352" translate="yes" xml:space="preserve">
          <source>As we know in Javascript &lt;strong&gt;arrays&lt;/strong&gt; and &lt;strong&gt;objects&lt;/strong&gt; are by reference, but what ways we can do copy the array without changing the original array later one?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascriptで知っているように、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は参照による&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ものです&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、後で元の配列を変更せずに配列をコピーするにはどうすればよいですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a8545770a396c70cb29a3b316e91768a48ae823" translate="yes" xml:space="preserve">
          <source>Based on the types of elements in the array, we can use various techniques to deep copy.</source>
          <target state="translated">配列の要素の種類に基づいて、様々なテクニックを使ってディープコピーを行うことができます。</target>
        </trans-unit>
        <trans-unit id="35df21a2161a1c56e4a7a5a8f6a086711c1757ee" translate="yes" xml:space="preserve">
          <source>Basically, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; operation clones the array and returns a reference to a new array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本的に、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;操作は配列を複製し、新しい配列への参照を返します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25cd1b883da20516aba2b42fc79179dc08ff2822" translate="yes" xml:space="preserve">
          <source>Be careful when arrays or objects are nested!:</source>
          <target state="translated">配列やオブジェクトが入れ子になっている場合は注意してください!</target>
        </trans-unit>
        <trans-unit id="449654022034e47b1e4e7e7a09133da27c7980b4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;arr1&lt;/code&gt; is an array of literal values (boolean, number, or string), you can use any deep copy technique discussed above, where the spread operator &lt;code&gt;...&lt;/code&gt; has the highest performance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リテラル値（ブール値、数、または文字列）の配列である、あなたは、拡散オペレータは、上述の任意のディープコピー技術、使用することができます&lt;/font&gt;&lt;/font&gt; &lt;code&gt;...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最高の性能を持っています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="89b20e543e5e58bd972e9f5ef6d461bb466651b5" translate="yes" xml:space="preserve">
          <source>Cohen (in the comments) pointed out that this latter method &lt;a href=&quot;https://jsperf.com/copy-simple-array&quot;&gt;has better performance&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コーエンは（コメントで）この後者の方法の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsperf.com/copy-simple-array&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方がパフォーマンスが優れ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ていると指摘し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c709d5805c68db79069f9c985851e4e4cda8256b" translate="yes" xml:space="preserve">
          <source>Copy an Array in ES6</source>
          <target state="translated">ES6で配列をコピーする</target>
        </trans-unit>
        <trans-unit id="a3197b4fe135aa53749addb4c5e2543ef09afd1d" translate="yes" xml:space="preserve">
          <source>Copy array by value</source>
          <target state="translated">配列を値でコピー</target>
        </trans-unit>
        <trans-unit id="2336e3cd4f27deabb43770acce38bcc460c8fbd7" translate="yes" xml:space="preserve">
          <source>Copy n Array in ES5</source>
          <target state="translated">ES5でのコピーn配列</target>
        </trans-unit>
        <trans-unit id="b7345669ef02152d7f109a056f3af17dbca07cbd" translate="yes" xml:space="preserve">
          <source>Dan, no need to use fancy tricks. All you need to do is make copy of arr1 by doing this.</source>
          <target state="translated">Dan,奇抜なトリックを使う必要はありません。このようにして arr1 のコピーを作るだけでいいのです。</target>
        </trans-unit>
        <trans-unit id="4ece27c78358ad6d2be0b1f53bda3d64498a93ba" translate="yes" xml:space="preserve">
          <source>Deep copy techniques depend on the three array types</source>
          <target state="translated">ディープコピー技術は3つの配列タイプに依存します</target>
        </trans-unit>
        <trans-unit id="b685ca361a1fd5c400bb43cf44445b72a078a6fa" translate="yes" xml:space="preserve">
          <source>Elements can be: literal values, literal structures, or prototypes.</source>
          <target state="translated">要素には、リテラル値、リテラル構造、またはプロトタイプがあります。</target>
        </trans-unit>
        <trans-unit id="50c326cbb07f2b51dcf39fb3c434ba956484537f" translate="yes" xml:space="preserve">
          <source>Exceptions:</source>
          <target state="translated">Exceptions:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="2dfcc07fcb9cd77783ec2b79bc7b9828d586bd38" translate="yes" xml:space="preserve">
          <source>For ES6 array containing objects</source>
          <target state="translated">オブジェクトを含むES6配列の場合</target>
        </trans-unit>
        <trans-unit id="6320b51104820c5e9d3320ead0400cf4987e63fb" translate="yes" xml:space="preserve">
          <source>For deep copying, you can use the above-mentioned methods for primitive data types at each level depending upon the type of data or you can use this &lt;strong&gt;costly method(mentioned below)&lt;/strong&gt; for making a deep copy without doing much work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディープコピーの場合、データのタイプに応じて各レベルのプリミティブデータタイプに対して上記の方法を使用できます。または、この&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コストのかかる方法（以下に説明）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して、多くの作業を行わずにディープコピーを作成できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20c32be979b022cf64df767c6f12953c521db79f" translate="yes" xml:space="preserve">
          <source>For references, strings and numbers (and not the actual object), &lt;strong&gt;&lt;code&gt;slice()&lt;/code&gt; copies object references into the new array.&lt;/strong&gt; Both the original and new array refer to the same object. If a referenced object changes, the changes are visible to both the new and original arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照、文字列、数値（実際のオブジェクトではない）の場合、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;slice()&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト参照を新しい配列にコピーします。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元の配列と新しい配列の両方が同じオブジェクトを参照しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照オブジェクトが変更された場合、変更は新しい配列と元の配列の両方に表示されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="effe8ee28b294d0b912b0706f60a20e13227f465" translate="yes" xml:space="preserve">
          <source>From ES2015,</source>
          <target state="translated">ES2015より。</target>
        </trans-unit>
        <trans-unit id="d91cedcff34b7c37bc5f91312b51e984bdd2e578" translate="yes" xml:space="preserve">
          <source>From these elements we can create three types of arrays.</source>
          <target state="translated">これらの要素から、3種類の配列を作成することができます。</target>
        </trans-unit>
        <trans-unit id="279bf69468c5929bffedbdb69e234b918f14f190" translate="yes" xml:space="preserve">
          <source>Here are few more way to copy:</source>
          <target state="translated">ここでは、もう少しコピーする方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="60b0e096ab908576006ea612c6a4837c49cc72e7" translate="yes" xml:space="preserve">
          <source>Here are few ways to do it:</source>
          <target state="translated">その方法をいくつかご紹介します。</target>
        </trans-unit>
        <trans-unit id="767a9b8a1d9274c7d20271817f40b04a6a754acf" translate="yes" xml:space="preserve">
          <source>Here's a variant:</source>
          <target state="translated">ここにバリエーションがあります。</target>
        </trans-unit>
        <trans-unit id="ec09a2235c43f4d8a34054b2f664bfe5613ef2b3" translate="yes" xml:space="preserve">
          <source>I personally think &lt;a href=&quot;https://developer.mozilla.org/vi/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Array.from&lt;/a&gt; is a more readable solution. By the way, just beware of its browser support.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;個人的に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/vi/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array.from&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の方が読みやすいソリューション&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だと思います&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ところで、ブラウザのサポートに注意してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e06eddb163209738156c9780e7ef58853361ef53" translate="yes" xml:space="preserve">
          <source>I realized that &lt;code&gt;arr2&lt;/code&gt; refers to the same array as &lt;code&gt;arr1&lt;/code&gt;, rather than a new, independent array. How can I copy the array to get two independent arrays?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はそれを実現&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じ配列を指す&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はなく、新たな、独立したアレイ。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列をコピーして2つの独立した配列を取得するにはどうすればよいですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="53a0ab2989d070a3b3fbf7977fb2f8994dfa3414" translate="yes" xml:space="preserve">
          <source>I realized that arr2 refers to the same array as arr1, rather than a
  new, independent array. How can I copy the array to get two
  independent arrays?</source>
          <target state="translated">arr2は新しい独立した配列ではなく、arr1と同じ配列を指していることに気づきました。2つの独立した配列を得るために配列をコピーするにはどうすればいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="fd17ec19e566d85d3c3fd1cde088b692870887f8" translate="yes" xml:space="preserve">
          <source>I would personally prefer this way:</source>
          <target state="translated">個人的にはこちらの方が好きです。</target>
        </trans-unit>
        <trans-unit id="d5035eaee12cbcc2891834fe03f6c9671b982951" translate="yes" xml:space="preserve">
          <source>If elements in the array are &lt;strong&gt;object literals, another array ({}, [])&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列の要素が&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトリテラルの場合、別の配列（{}、[]）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec97cc8bd39e2409ee132c57eb175f826f556561" translate="yes" xml:space="preserve">
          <source>If elements in the array are &lt;strong&gt;primitive types&lt;/strong&gt; (string, number, etc.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列の要素が&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プリミティブ型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（文字列、数値など）の場合&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b5fd3ad5278b8c3d0e9a9206dd2f99f89a52ac5" translate="yes" xml:space="preserve">
          <source>If you are in an environment of &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#Harmony.2C_6th_Edition&quot;&gt;ECMAScript 6&lt;/a&gt;, using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;Spread Operator&lt;/a&gt; you could do it this way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#Harmony.2C_6th_Edition&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 6の&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;環境にいる場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Spread Operator&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、次のように実行できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f2e37c7bc6af5975db61e86e80345bf4bc63f2b5" translate="yes" xml:space="preserve">
          <source>If you do want to deepclone a javascript array use &lt;code&gt;JSON.parse&lt;/code&gt; in conjunction with &lt;code&gt;JSON.stringify&lt;/code&gt;, like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたはjavascript配列の使用deepcloneしたくない場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と一緒に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このように、：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc0596a29978964214985698889c61aa7be57d85" translate="yes" xml:space="preserve">
          <source>If you don't care about deep/nested objects and props use (&lt;strong&gt;ES6&lt;/strong&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;深いオブジェクトやネストされたオブジェクトや小道具を気にしない場合（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43834f9ecfa7ec250414b3c2bbcc14f9406a7e3b" translate="yes" xml:space="preserve">
          <source>If you have an array of Reference types, say of type &lt;code&gt;Object&lt;/code&gt;.  The array &lt;strong&gt;will&lt;/strong&gt; be copied, but both of the arrays will contain references to the same &lt;code&gt;Object&lt;/code&gt;'s.  So in this case it would seem like the array is copied by reference even though the array &lt;strong&gt;is actually copied.&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照型の配列がある場合は、例えば&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型のようにし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーされますが、両方の配列には同じ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;への参照が含まれます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、この場合、配列&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は実際にコピーされます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、参照によって配列がコピーされているように見え&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24416d693254570a9dfb2ba5adb03222d251ee08" translate="yes" xml:space="preserve">
          <source>If you want to make a new copy of an object or array, you must explicitly copy the properties of the object or the elements of the array, for example:</source>
          <target state="translated">オブジェクトや配列の新しいコピーを作成したい場合は、オブジェクトのプロパティや配列の要素を明示的にコピーしなければなりません。</target>
        </trans-unit>
        <trans-unit id="d5dcd12b82a6e6787ca31b95edadf1e9050f4a50" translate="yes" xml:space="preserve">
          <source>If your array contains elements of the &lt;strong&gt;primitive data type&lt;/strong&gt; such as &lt;strong&gt;int, char, or string etc&lt;/strong&gt; then you can user one of those methods which returns a copy of the original array such as .slice() or .map() or spread operator(thanks to ES6).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたの配列は、の要素が含まれている場合&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、プリミティブデータ型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などint型、char型、または文字列を&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その後することができますもの、例えば.slice（）または.MAP（と、元の配列のコピーを返すメソッド）や拡散オペレータのユーザー1（ ES6に感謝）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32832afe073f7f222fe062d9ffb39d05452d9fc6" translate="yes" xml:space="preserve">
          <source>Imagine we have this array in your code:</source>
          <target state="translated">あなたのコードにこの配列があると想像してみてください。</target>
        </trans-unit>
        <trans-unit id="dbfaf167f24a5d24776e1bf23368bd2d7491bb8f" translate="yes" xml:space="preserve">
          <source>In Javascript, deep-copy techniques depend on the elements in an array. Let's start there.</source>
          <target state="translated">Javascriptでは、ディープコピー技術は配列の要素に依存します。そこから始めてみましょう。</target>
        </trans-unit>
        <trans-unit id="6d0226286399bcbb086356e089c3ecb1f872c280" translate="yes" xml:space="preserve">
          <source>In my particular case I needed to ensure the array remained intact so this worked for me:</source>
          <target state="translated">私の場合は、アレイが無傷のままであることを確認する必要があったので、これは私のために機能しました。</target>
        </trans-unit>
        <trans-unit id="57b9fb121420afad8742bf9061b6df58a392da53" translate="yes" xml:space="preserve">
          <source>It is important to note that it will work as expected for primitive types (string, number, etc.), and to also explain the expected behavior for reference types...</source>
          <target state="translated">プリミティブ型(文字列や数字など)では期待通りの動作をすることに注意し、参照型では期待通りの動作をすることも説明しておく必要があります...</target>
        </trans-unit>
        <trans-unit id="3641b2d18d7de11bb5d4b0aa4eb9d373af112ef9" translate="yes" xml:space="preserve">
          <source>It will work.</source>
          <target state="translated">上手くいくでしょう。</target>
        </trans-unit>
        <trans-unit id="f1888ac75abafa9d8540fd8c41d2297e9666bf5d" translate="yes" xml:space="preserve">
          <source>Lee Penkman, also in the comments, points out that if there's a chance &lt;code&gt;array1&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, you can return an empty array as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lee Penkmanもコメントで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;array1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある可能性がある場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、次のように空の配列を返すことができる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と指摘して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c66683dd7fc052a25bac24f5229090ea7c4f7e6c" translate="yes" xml:space="preserve">
          <source>Make copy of multidimensional array/object:</source>
          <target state="translated">多次元配列オブジェクトのコピーを作成します。</target>
        </trans-unit>
        <trans-unit id="c37cddd055ced6b4b7c8dbca74732e1abdfdcf96" translate="yes" xml:space="preserve">
          <source>More info on spreads</source>
          <target state="translated">スプレッドの詳細情報</target>
        </trans-unit>
        <trans-unit id="d2bdb14970507a17170eb5bb65bedd009bf54439" translate="yes" xml:space="preserve">
          <source>Most of answers here works for &lt;strong&gt;&lt;em&gt;particular cases&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでの回答のほとんどは、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特定のケースで機能し&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bed20c7288c8f9234416c5eae11ad3f9531f9025" translate="yes" xml:space="preserve">
          <source>No jQuery needed...  &lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/KBYvL/1/&quot;&gt;Working Example&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQueryは必要ありません... &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;http://jsfiddle.net/KBYvL/1/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実例&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07d6f97e234865f8c546988c6102037180e914e7" translate="yes" xml:space="preserve">
          <source>Note that you can also do this with &lt;code&gt;slice&lt;/code&gt;: &lt;code&gt;var array2 = (array1 || []).slice();&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;slice&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行うこともでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var array2 = (array1 || []).slice();&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bbbd5ed5b2dd36af8a9b3e829f487615a888bb90" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;arr1&lt;/code&gt; and &lt;code&gt;arr2&lt;/code&gt; are two different array variables stored in separate stacks.
&lt;a href=&quot;https://jsfiddle.net/wm67wuzo/&quot;&gt;Check this out on jsfiddle&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arr2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、別々のスタックに格納されている2つの異なる配列変数です。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/wm67wuzo/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これをjsfiddleで確認してください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6ea9e66af03ebf079e90339c98f32cb424d5e57" translate="yes" xml:space="preserve">
          <source>Now you can do any one of the following to make a copy of an array.</source>
          <target state="translated">これで、以下のいずれかを実行して配列のコピーを作成することができます。</target>
        </trans-unit>
        <trans-unit id="a4ca5c46105ffdda5974ecec43d2369ffb6013bf" translate="yes" xml:space="preserve">
          <source>Now, if i change a,</source>
          <target state="translated">今、私がaを変更した場合</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="ec7d8c5fc80169117f52a38b3e9e291385330333" translate="yes" xml:space="preserve">
          <source>Often when we transform data we want to keep our initial datastructure (e.g. Array) intact. We do this by making a exact copy of our array so this one can be transformed while the initial one stays intact.</source>
          <target state="translated">データを変換するときには、初期のデータ構造(配列など)をそのままにしておきたいことがよくあります。これを行うには、配列の正確なコピーを作成することで、最初の配列をそのままにしたまま、この配列を変換できるようにします。</target>
        </trans-unit>
        <trans-unit id="3cdc224880f160153162ef8dca820a08d21be3ca" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;Array.prototype.map&lt;/code&gt; may be used with an identity function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.prototype.map&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;恒等関数で使用することもできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bc72f1096498b7bc397d103e186cc369694b004c" translate="yes" xml:space="preserve">
          <source>Or, for the second method:</source>
          <target state="translated">あるいは、2つ目の方法について。</target>
        </trans-unit>
        <trans-unit id="0c1fad2448524d139b20d8c687780af7f58c6ee7" translate="yes" xml:space="preserve">
          <source>Passing one varible to another on Compound values such as Object/Array behave difrently. Using asign operator on copand values we pass reference to an object. This is why the value of both arrays are changing when removing/adding arr elements.</source>
          <target state="translated">ObjectArray のような複合値の場合、ある変数を別の変数に渡すと挙動が異なります。このような複合値の場合は、asign演算子を使ってオブジェクトへの参照を渡しています。これが、配列の要素を追加したときに、両方の配列の値が変化する理由です。</target>
        </trans-unit>
        <trans-unit id="4e771311afaee543211598c5a27b9471d55cabee" translate="yes" xml:space="preserve">
          <source>Performance of copying:</source>
          <target state="translated">コピーのパフォーマンス。</target>
        </trans-unit>
        <trans-unit id="b13b0eff9d12c2597bee5a93fe1e1147b86dbcab" translate="yes" xml:space="preserve">
          <source>Primitive values are always pass by its value (copied). Compound values however are passed by reference.</source>
          <target state="translated">プリミティブ値は常にその値によって渡されます(コピーされます)。しかし、複合値は参照によって渡されます。</target>
        </trans-unit>
        <trans-unit id="045b7aa7e9b5e6031be5a378543e0a451df74e95" translate="yes" xml:space="preserve">
          <source>Primitives such as strings and numbers are immutable, so changes to the string or number are impossible.</source>
          <target state="translated">文字列や数値などのプリミティブは不変なので、文字列や数値の変更は不可能です。</target>
        </trans-unit>
        <trans-unit id="09cfd9f36c74626c471a6ed13890f0ee9dee7a8d" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf59c5173fd7c554ce1bd0a5f2fe575160302e21" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;Here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b04a03c2830c8506c5a51afbeb3df1bc89708b80" translate="yes" xml:space="preserve">
          <source>So don't use these methods when there are objects or arrays inside your array you want to copy. i.e. Use these methods on arrays of primitives only.</source>
          <target state="translated">ですから、コピーしたい配列の中にオブジェクトや配列がある場合は、これらのメソッドを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="a0cfd7b410ebbf0aed53f77eb3219f8cf756ec1f" translate="yes" xml:space="preserve">
          <source>So how do we copy this arr?</source>
          <target state="translated">どうやってこのARRをコピーするの?</target>
        </trans-unit>
        <trans-unit id="06771cf9bcbd3a26233bcf61057580ab23dab6be" translate="yes" xml:space="preserve">
          <source>So to answer the question...</source>
          <target state="translated">質問に答えるためには</target>
        </trans-unit>
        <trans-unit id="2286bc98922d17852dfaa9f08908883dc165470f" translate="yes" xml:space="preserve">
          <source>So which one do we choose for optimal performance. It turns out that the most verbose method, the &lt;code&gt;for&lt;/code&gt; loop has the highest performance. Use the &lt;code&gt;for&lt;/code&gt; loop for really CPU intensive copying (large/many arrays).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、最適なパフォーマンスを得るためにどちらを選択するか。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も冗長なメソッドである&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループのパフォーマンスが最も高いことがわかります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本当にCPUを集中的に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピー（大規模/多数の配列）に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5008b43a8899c37dd1b5ff186c31b522b6ae0090" translate="yes" xml:space="preserve">
          <source>Some of mentioned methods work well when working with simple data types like number or string, but when the array contains other objects these methods fail. When we try to pass any object from one array to another it is passed as a reference, not the object.</source>
          <target state="translated">上述のメソッドのいくつかは、数値や文字列のような単純なデータ型を扱う場合にはうまく動作しますが、配列に他のオブジェクトが含まれている場合には、これらのメソッドは失敗します。ある配列から別の配列にオブジェクトを渡そうとすると、オブジェクトではなく参照として渡されます。</target>
        </trans-unit>
        <trans-unit id="ea4006e5721d9886e3f252258dfc511f3486fe6b" translate="yes" xml:space="preserve">
          <source>Source performance test</source>
          <target state="translated">ソース性能テスト</target>
        </trans-unit>
        <trans-unit id="603cb74d50c1cbd801dca7fc0eb132947d170797" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://james.padolsey.com/javascript/deep-copying-of-objects-and-arrays/&quot;&gt;Here&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出典：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://james.padolsey.com/javascript/deep-copying-of-objects-and-arrays/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こちら&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b38f29d731f9dfa5ca6702144928e077890cfbd6" translate="yes" xml:space="preserve">
          <source>Thanks to James Padolsey for this function.</source>
          <target state="translated">この機能を提供してくれたJames Padolsey氏に感謝します。</target>
        </trans-unit>
        <trans-unit id="689b57da72d1c22ba48ab72bbec6c2318e4c47c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; technique can be used to deep copy literal values (boolean, number, string) and literal structures (array, object), but not prototype objects.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;技術は、ディープコピーリテラル値（ブール値、数値、文字列）とリテラル構造（配列、オブジェクト）に使用されるが、オブジェクトのプロトタイプを作成しないことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6705f4a12d8757fa69823326e0bf631fc819f413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[...myArray]&lt;/code&gt;, &lt;code&gt;myArray.splice(0)&lt;/code&gt;, &lt;code&gt;myArray.slice()&lt;/code&gt;, and &lt;code&gt;myArray.concat()&lt;/code&gt; techniques can be used to deep copy arrays with literal values (boolean, number, and string) only; where the Spread operator &lt;code&gt;[...myArray]&lt;/code&gt; has the best performance (&lt;a href=&quot;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&quot;&gt;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;[...myArray]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myArray.splice(0)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myArray.slice()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;及び&lt;/font&gt;&lt;/font&gt; &lt;code&gt;myArray.concat()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;技術は、リテラル値（ブール値、数値、文字列）だけでディープコピーアレイに使用することができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、Spreadオペレーター&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[...myArray]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が最高のパフォーマンスを発揮します（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://measurethat.net/Benchmarks/Show/4281/0/spread-array-performance-vs-slice-splice-concat&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9383c7c87c05f57c69e2f333f40711dd244ced6a" translate="yes" xml:space="preserve">
          <source>The jQuery &lt;code&gt;$.extend(myArray)&lt;/code&gt; technique can be used to deep-copy all array-types. Libraries like &lt;a href=&quot;http://underscorejs.org&quot;&gt;Underscore&lt;/a&gt; and &lt;a href=&quot;https://lodash.com&quot;&gt;Lo-dash&lt;/a&gt; offer similar deep-copy functions to &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;&lt;code&gt;$.extend()&lt;/code&gt;, yet have lower performance. More surprisingly, &lt;code&gt;$.extend()&lt;/code&gt; has higher performance than the &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; technique &lt;a href=&quot;http://jsperf.com/js-deep-copy/15&quot;&gt;http://jsperf.com/js-deep-copy/15&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQueryの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.extend(myArray)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テクニックを使用して、すべての配列型をディープコピーできます。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Underscore&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo-dash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライブラリは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jquery.com&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jQuery &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;code&gt;$.extend()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と同様のディープコピー関数を提供しますが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、パフォーマンスは低下します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに驚くべきことに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$.extend()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JSON.parse(JSON.stringify(myArray))&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テクニック&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsperf.com/js-deep-copy/15&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://jsperf.com/js-deep-copy/15&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりも高いパフォーマンスを発揮し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8d6dc11c2b8ff8bf8e2bd754b36e98c46f81132" translate="yes" xml:space="preserve">
          <source>The second method is:</source>
          <target state="translated">2つ目の方法は</target>
        </trans-unit>
        <trans-unit id="a5049c7e28b22a10705794f68236c7230c22865b" translate="yes" xml:space="preserve">
          <source>The way this works is that the &lt;code&gt;concat&lt;/code&gt; method creates a new array consisting of the elements in the object on which it is called followed by the elements of any arrays passed to it as arguments. So when no arguments are passed, it simply copies the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが機能する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;concat&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドが、それが呼び出されたオブジェクトの要素と、それに引き続いて引数として渡された配列の要素で構成される新しい配列を作成することです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、引数が渡されない場合は、単に配列をコピーします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="075eb7249f96fe916120b4889af607790e23590a" translate="yes" xml:space="preserve">
          <source>Then, a is [1,2,3,5] but b is still [1,2,3] as it has different reference.</source>
          <target state="translated">そうすると、aは[1,2,3,5]ですが、bは参照が違うのでまだ[1,2,3]です。</target>
        </trans-unit>
        <trans-unit id="710c353f63705c3bde80c27220c0e51493d2827d" translate="yes" xml:space="preserve">
          <source>There are a lot of other methods out there which you can use depending on your requirements. I have mentioned only some of those for giving a general idea of what happens when we try to copy an array into the other &lt;strong&gt;by value&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要件に応じて使用できる方法は他にもたくさんあります。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値によって&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列を他の配列にコピーしようとしたときに何が起こるかをおおまかに説明するために、それらの一部のみを説明しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2be42dd7273f2ad4a618403541a1f0116978daf8" translate="yes" xml:space="preserve">
          <source>There are limitations..check  docs &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;Spread syntax @ mozilla&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;制限があります。ドキュメントを&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェックしてください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a12406982cba9fbd604005acb16615bb60feda2" translate="yes" xml:space="preserve">
          <source>There's the newly introduced &lt;code&gt;Array.from&lt;/code&gt;, but unfortunately, as of the time of this writing it's only supported on recent Firefox versions (32 and higher). It can be simply used as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しく導入された&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.from&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、残念ながら、この記事の執筆時点では、最新のFirefoxバージョン（32以降）でのみサポートされています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のように簡単に使用できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e7409b58374d98598b260d88e054c6e42868fe1" translate="yes" xml:space="preserve">
          <source>This copys the array from the starting position &lt;code&gt;0&lt;/code&gt; through the end of the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、配列を開始位置&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から配列の終わりまで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2f373bc7618697a70967233aab0c7160db64e93" translate="yes" xml:space="preserve">
          <source>This is how I've done it after trying many approaches:</source>
          <target state="translated">いろいろなアプローチを試した結果、このようになりました。</target>
        </trans-unit>
        <trans-unit id="ff9864d43b82aab4b2aecc60e550bc5de819cf95" translate="yes" xml:space="preserve">
          <source>This will create a new deep copy not related to the first one (not a shallow copy).</source>
          <target state="translated">これにより、最初のものとは関係のない(浅いコピーではない)新しい深いコピーが作成されます。</target>
        </trans-unit>
        <trans-unit id="ed2d23afd0de444c17f6cda6df74e2a71e696ca2" translate="yes" xml:space="preserve">
          <source>Three types of elements</source>
          <target state="translated">3種類の要素</target>
        </trans-unit>
        <trans-unit id="b543720e8daabc3733964f244cca2d14e58df202" translate="yes" xml:space="preserve">
          <source>Use this:</source>
          <target state="translated">これを使って</target>
        </trans-unit>
        <trans-unit id="046e842c8cd76e1ce334590d060a40b48c531552" translate="yes" xml:space="preserve">
          <source>Using jQuery deep copy could be made as following:</source>
          <target state="translated">jQueryのディープコピーを使うと以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7fabb8d7e42c438ba95fed17c9c798cc28407d7c" translate="yes" xml:space="preserve">
          <source>Ways of copying an array:</source>
          <target state="translated">配列をコピーする方法。</target>
        </trans-unit>
        <trans-unit id="c063f502c09f2fd72ed8fcf4f6d37dfa831954bf" translate="yes" xml:space="preserve">
          <source>When arrays are nested the values are copied by reference. Here is an example of how this could lead to issues:</source>
          <target state="translated">配列が入れ子になっている場合、値は参照によってコピーされます。これがどのように問題を引き起こすかの例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="f173344b599b1a43753194f2d3adca0894e86556" translate="yes" xml:space="preserve">
          <source>When copying an array in JavaScript to another array:</source>
          <target state="translated">JavaScriptで配列を別の配列にコピーする場合。</target>
        </trans-unit>
        <trans-unit id="1a8c28404935bcf86e33ee852e0ab89574079761" translate="yes" xml:space="preserve">
          <source>When we want to copy an array using the assignment operator ( &lt;code&gt;=&lt;/code&gt; ) it doesn't create a copy it merely copies the pointer/reference to the array. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代入演算子（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;=&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して配列をコピーする場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コピーを作成せず、配列へのポインター/参照をコピーするだけです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例えば：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371f093a51da60220f7d2cc0cd8008cfb1ca57fe" translate="yes" xml:space="preserve">
          <source>When you assign a new value to the variable, you are changing the reference itself and it doesn&amp;rsquo;t affect the original Object/Array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数に新しい値を割り当てると、参照自体が変更され、元のオブジェクト/配列には影響しません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39b2d01523555b4141da40b7f0532313be885fba" translate="yes" xml:space="preserve">
          <source>Why `let arrCopy = arr` is not passing by value?</source>
          <target state="translated">なぜ `let arrCopy=arr` は値を渡さないのですか?</target>
        </trans-unit>
        <trans-unit id="ebe8456b3b7749385be4eade455761e49b7ef495" translate="yes" xml:space="preserve">
          <source>You can also use ES6 spread operator to copy Array</source>
          <target state="translated">ES6のスプレッド演算子を使ってArrayをコピーすることもできます。</target>
        </trans-unit>
        <trans-unit id="774308c5ddc9d898bf019c5bc9b81cc79f4ccb12" translate="yes" xml:space="preserve">
          <source>You can search for more information on Google about immutable primitive values and mutable object references.</source>
          <target state="translated">不変プリミティブ値やミュータブルオブジェクト参照については、Googleで検索してみると詳しい情報が出てきます。</target>
        </trans-unit>
        <trans-unit id="7d654668e1c71bcb21cdbbfb6c4af3ad819c9a18" translate="yes" xml:space="preserve">
          <source>You can use array spreads &lt;code&gt;...&lt;/code&gt; to copy arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列スプレッド&lt;/font&gt;&lt;/font&gt; &lt;code&gt;...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をコピーできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a0aee23dd71431c3e3b82ec87f120ffec98574c4" translate="yes" xml:space="preserve">
          <source>You could use ES6 with spread Opeartor, its simpler.</source>
          <target state="translated">あなたは、そのシンプルなスプレッドOpeartorでES6を使用することができます。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="82057bb8f6ffd6f01b76bb87f9a1b8acd44af0c5" translate="yes" xml:space="preserve">
          <source>but if you want to do deep clone use this instead:</source>
          <target state="translated">が、ディープクローンをしたい場合はこれを使います。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="59a5c610074c286a10825ef707f885904486b0d0" translate="yes" xml:space="preserve">
          <source>read more</source>
          <target state="translated">読み上げる</target>
        </trans-unit>
        <trans-unit id="9e0578da76ac6233d63fcc6ff696a0a77aea8e95" translate="yes" xml:space="preserve">
          <source>same things goes to array of objects, they will be copied by reference, you have to copy them manually</source>
          <target state="translated">同じことがオブジェクトの配列にも当てはまるので、参照によってコピーされるので、手動でコピーしなければなりません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
