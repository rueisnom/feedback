<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/4216745">
    <body>
      <group id="4216745">
        <trans-unit id="dab66bdba80da6677dfaeb2b75d8cdc5ff39d540" translate="yes" xml:space="preserve">
          <source>&quot;2&quot; is the short day-of-month, so use the &lt;code&gt;d&lt;/code&gt; pattern for it.</source>
          <target state="translated">&quot;2&quot;는 짧은 기간이므로 &lt;code&gt;d&lt;/code&gt; 패턴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5edc68ad1cfd3d559f627ff14ced165573534bfc" translate="yes" xml:space="preserve">
          <source>&quot;2010&quot; is the 4-digit year, so use the &lt;code&gt;yyyy&lt;/code&gt; pattern for it.</source>
          <target state="translated">&quot;2010&quot;은 4 자리 연도이므로 &lt;code&gt;yyyy&lt;/code&gt; 패턴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1dce05f639097f752425e281c94feecec5388d71" translate="yes" xml:space="preserve">
          <source>&quot;January&quot; is the full text month, so use the &lt;code&gt;MMMM&lt;/code&gt; pattern for it</source>
          <target state="translated">&quot;1 월&quot;은 전체 텍스트 달이므로 &lt;code&gt;MMMM&lt;/code&gt; 패턴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="023ff8e13946953f5bd4a58135d7f57931fd607e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; is the standard Java 8 class for representing a date (without time). If you want to parse values that contain date and time information you should use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;. For values with timezones use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;. Both provide a &lt;code&gt;parse()&lt;/code&gt; method similar to &lt;code&gt;LocalDate&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; 는 날짜없이 시간을 나타내는 표준 Java 8 클래스입니다. 날짜 및 시간 정보가 포함 된 값을 구문 분석하려면 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt; 을 사용해야합니다. 시간대가있는 값의 경우 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime을&lt;/a&gt; 사용 하십시오 . 둘 다 &lt;code&gt;LocalDate&lt;/code&gt; 와 유사한 &lt;code&gt;parse()&lt;/code&gt; 메소드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="70c12590553c940b2273c656c666ede5af34bc96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://download.java.net/jdk8/docs/api/java/time/package-summary.html&quot;&gt;java.time.* package&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://download.java.net/jdk8/docs/api/java/time/package-summary.html&quot;&gt;java.time. * 패키지&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3daf61fe2121f59af3d5b5b49cf46101a928e05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87b86ef20b4ac74a5830521938c3a1c522662a53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Calendar.getInstance().getTime()&lt;/strong&gt; gives</source>
          <target state="translated">&lt;strong&gt;Calendar.getInstance (). getTime ()&lt;/strong&gt; 은</target>
        </trans-unit>
        <trans-unit id="e37a0bf9fd554e87ade5206d2f5ecf0df8454551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Locale&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Locale&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9b2bea561dc43fadd8a99387b3a262e97765232" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;My test program:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;내 테스트 프로그램 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3373d13aa96ca364df85c97b0a663105f1534768" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source &lt;a href=&quot;https://www.freakyjolly.com/android-useful-methods-and-functions/&quot;&gt;Link&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;소스 &lt;a href=&quot;https://www.freakyjolly.com/android-useful-methods-and-functions/&quot;&gt;링크&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="983cedc0760c02eef69af87937ac701a932115b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test results:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;시험 결과:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5a61a00ab6a8fc602faf2affb50fc0da791fefc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time Zone&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;시간대&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="effb132f6c5a1ffaeaa1c7cea18050a9caaf63c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time of Day&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;시간&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73f885f9827cc777108e88d9050ca43ca5a35435" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Use&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4feff05b7ffc0ea521817713c1906354dddcdcc0" translate="yes" xml:space="preserve">
          <source>A few notes about Joda-Time follow.</source>
          <target state="translated">Joda-Time에 대한 몇 가지 메모가 이어집니다.</target>
        </trans-unit>
        <trans-unit id="68626e5cb6687215e4fff108d6d61928e0eb5fa9" translate="yes" xml:space="preserve">
          <source>Ah yes the Java Date discussion, again.  To deal with date manipulation we use &lt;a href=&quot;http://download.oracle.com/javase/1.4.2/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt;, &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;, &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/util/GregorianCalendar.html&quot;&gt;GregorianCalendar&lt;/a&gt;, and &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat&lt;/a&gt;.  For example using your January date as input:</source>
          <target state="translated">아, 다시 Java Date 토론입니다. 날짜 조작을 처리하기 위해 &lt;a href=&quot;http://download.oracle.com/javase/1.4.2/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt; , &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt; , &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/util/GregorianCalendar.html&quot;&gt;GregorianCalendar&lt;/a&gt; 및 &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat을 사용&lt;/a&gt; 합니다. 예를 들어 1 월 날짜를 입력으로 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="726a92c777d27f317b0a4083dab85f4971ef38bf" translate="yes" xml:space="preserve">
          <source>Also there is big difference between &quot;m&quot; and &quot;M&quot; where small case is used for minutes and capital case is used for month. The same with &quot;d&quot; and &quot;D&quot;. This can cause subtle bugs which often get overlooked. See &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;Javadoc&lt;/a&gt; or &lt;em&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2011/09/step-by-step-guide-to-convert-string-to.html&quot;&gt;Guide to Convert String to Date in Java&lt;/a&gt;&lt;/em&gt; for more details.</source>
          <target state="translated">또한 작은 문자를 몇 분 동안 사용하고 대문자를 사용하는 경우 &quot;m&quot;과 &quot;M&quot;사이에는 큰 차이가 있습니다. &quot;d&quot;및 &quot;D&quot;와 동일합니다. 이로 인해 종종 간과되는 미묘한 버그가 발생할 수 있습니다. 자세한 내용은 &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;Javadoc&lt;/a&gt; 또는 &lt;em&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2011/09/step-by-step-guide-to-convert-string-to.html&quot;&gt;Java에서 문자열을 날짜로 변환하는 안내서를&lt;/a&gt;&lt;/em&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="86325648ac6394f6faa8fe7140a9dd0a2a13e11b" translate="yes" xml:space="preserve">
          <source>Also, SimpleDateFormat is not available with some of the client-side technologies, like &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Web_Toolkit&quot;&gt;GWT&lt;/a&gt;.</source>
          <target state="translated">또한 SimpleDateFormat은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Web_Toolkit&quot;&gt;GWT&lt;/a&gt; 와 같은 일부 클라이언트 측 기술에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b5f6e4a7b38e599e25999d28d85271afa97e22cc" translate="yes" xml:space="preserve">
          <source>An important note is that &lt;code&gt;SimpleDateFormat&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; thread safe. In other words, you should never declare and assign it as a static or instance variable and then reuse it from different methods/threads. You should always create it brand new within the method local scope.</source>
          <target state="translated">중요한 점은 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 이 스레드로부터 안전 &lt;strong&gt;하지 않다는 것&lt;/strong&gt; 입니다. 즉, 정적 또는 인스턴스 변수로 선언하고 할당 한 다음 다른 메소드 / 스레드에서 재사용해서는 안됩니다. 항상 메소드 로컬 범위 내에서 새 것으로 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="ae5beb2cf4752a3f0e7181bd3a8722bf78609f64" translate="yes" xml:space="preserve">
          <source>As Kristopher Johnson correctly noted in his comment on the question, the other answers ignore vital issues of:</source>
          <target state="translated">Kristopher Johnson이 질문에 대한 그의 의견에서 올바르게 언급했듯이 다른 답변은 다음과 같은 중요한 문제를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="9151f8433f795cb0f0b5b6743aeb7de77ec49f00" translate="yes" xml:space="preserve">
          <source>Conversion</source>
          <target state="translated">Conversion</target>
        </trans-unit>
        <trans-unit id="6e1f6388eb4d57feb64aaaf5876ed172e760244d" translate="yes" xml:space="preserve">
          <source>Date has both a date portion and a time-of-day portion)</source>
          <target state="translated">날짜에는 날짜 부분과 시간 부분이 모두 있습니다)</target>
        </trans-unit>
        <trans-unit id="0afecb489a5bf60260409db90bc92d8bf022238c" translate="yes" xml:space="preserve">
          <source>Do note that it has several &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#predefined&quot;&gt;predefined formatters&lt;/a&gt; for the more popular patterns. So instead of e.g. &lt;code&gt;DateTimeFormatter.ofPattern(&quot;EEE, d MMM yyyy HH:mm:ss Z&quot;, Locale.ENGLISH);&lt;/code&gt;, you could use &lt;code&gt;DateTimeFormatter.RFC_1123_DATE_TIME&lt;/code&gt;. This is possible because they are, on the contrary to &lt;code&gt;SimpleDateFormat&lt;/code&gt;, thread safe. You could thus also define your own, if necessary.</source>
          <target state="translated">더 일반적인 패턴을 위해 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#predefined&quot;&gt;미리 정의 된 포맷터&lt;/a&gt; 가 여러 개 있다는 점에 유의하십시오. 따라서 대신 &lt;code&gt;DateTimeFormatter.ofPattern(&quot;EEE, d MMM yyyy HH:mm:ss Z&quot;, Locale.ENGLISH);&lt;/code&gt; , &lt;code&gt;DateTimeFormatter.RFC_1123_DATE_TIME&lt;/code&gt; 을 사용할 수 있습니다. 이는 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 과 달리 스레드로부터 안전하기 때문에 가능합니다. 따라서 필요한 경우 자신을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="bc548a6e9fdf90340582b47b57fa27965ac195a8" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;Android&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;안드로이드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7229bcc4811d307031f614a12921c733fd9b25b5" translate="yes" xml:space="preserve">
          <source>For a particular input string format, you don't need to use an explicit &lt;code&gt;DateTimeFormatter&lt;/code&gt;: a standard &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; date, like 2016-09-26T17:44:57Z, can be parsed directly with &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;LocalDateTime#parse(text)&lt;/code&gt;&lt;/a&gt; as it already uses the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt; formatter. Similarly, &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;LocalDate#parse(text)&lt;/code&gt;&lt;/a&gt; parses an ISO date without the time component (see &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;), and &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;ZonedDateTime#parse(text)&lt;/code&gt;&lt;/a&gt; parses an ISO date with an offset and time zone added (see &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_ZONED_DATE_TIME&quot;&gt;&lt;code&gt;ISO_ZONED_DATE_TIME&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">특정 입력 문자열 형식의 경우 명시 적 &lt;code&gt;DateTimeFormatter&lt;/code&gt; 를 사용할 필요가 없습니다. 2016-09-26T17 : 44 : 57Z와 같은 표준 &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; 날짜는 이미 사용중인 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-&quot;&gt; &lt;code&gt;LocalDateTime#parse(text)&lt;/code&gt; &lt;/a&gt; 를 사용하여 직접 구문 분석 할 수 있습니다. &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt; 포맷터 마찬가지로 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-&quot;&gt; &lt;code&gt;LocalDate#parse(text)&lt;/code&gt; &lt;/a&gt; 는 시간 구성 요소가없는 ISO 날짜를 구문 분석하고 ( &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt; 참조) &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-&quot;&gt; &lt;code&gt;ZonedDateTime#parse(text)&lt;/code&gt; &lt;/a&gt; 는 오프셋과 시간대를 추가하여 ISO 날짜를 구문 분석합니다 ( &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_ZONED_DATE_TIME&quot;&gt; &lt;code&gt;ISO_ZONED_DATE_TIME&lt;/code&gt; &lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="6dd4840361451f47027b6fada3b0b535a58b8bc0" translate="yes" xml:space="preserve">
          <source>Formatter Pattern</source>
          <target state="translated">포맷터 패턴</target>
        </trans-unit>
        <trans-unit id="fc993b81b48babe32df0261ab0bd7be6e8326be9" translate="yes" xml:space="preserve">
          <source>Going from a java.util.Date object (here named &lt;code&gt;date&lt;/code&gt;) to Joda-Time DateTime&amp;hellip;</source>
          <target state="translated">java.util.Date 오브젝트 (여기서는 &lt;code&gt;date&lt;/code&gt; )에서 Joda-Time DateTime으로 이동 중&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="11fdd41dcc84cce966222bc28ebaea7ef0abc1fa" translate="yes" xml:space="preserve">
          <source>Going the other direction from Joda-Time to a java.util.Date object&amp;hellip;</source>
          <target state="translated">Joda-Time에서 java.util.Date 객체로 다른 방향으로 이동 중&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="10284d93ec8a2bf0441c48b45a07d07b24130ef5" translate="yes" xml:space="preserve">
          <source>Here are some examples of valid &lt;code&gt;SimpleDateFormat&lt;/code&gt; patterns to parse a given string to date:</source>
          <target state="translated">주어진 문자열을 날짜로 구문 분석하는 유효한 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 패턴의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="81a242e48572e0d3e63c457128a89938b03baeda" translate="yes" xml:space="preserve">
          <source>Here's an extract of relevance from &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;the javadoc&lt;/a&gt;, listing all available format patterns:</source>
          <target state="translated">다음은 사용 가능한 모든 형식 패턴을 나열 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;하는 javadoc&lt;/a&gt; 의 관련성에 대한 추출입니다.</target>
        </trans-unit>
        <trans-unit id="85acc66ee5014d2e0e283fdb70aa745e31d1978a" translate="yes" xml:space="preserve">
          <source>Here's an extract of relevance from &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;the javadoc&lt;/a&gt;, listing all available format patterns:</source>
          <target state="translated">다음은 사용 가능한 모든 형식 패턴을 나열 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;하는 javadoc&lt;/a&gt; 의 관련성에 대한 추출입니다.</target>
        </trans-unit>
        <trans-unit id="a666e4d50eb58047d2aa3decddda21b52a134875" translate="yes" xml:space="preserve">
          <source>If you happen to be on Java 8 or newer, then use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt; (also here, click the link to see all predefined formatters and available format patterns; &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/datetime/iso/format.html&quot;&gt;the tutorial is available here&lt;/a&gt;). This new API is inspired by &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;JodaTime&lt;/a&gt;.</source>
          <target state="translated">Java 8 이상을 사용하는 경우 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 (여기서 링크를 클릭하여 사전 정의 된 모든 포맷터 및 사용 가능한 형식 패턴을보십시오. &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/datetime/iso/format.html&quot;&gt;학습서는 여기에서 사용 가능함&lt;/a&gt; ). 이 새로운 API는 &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;JodaTime에서&lt;/a&gt; 영감을 받았습니다.</target>
        </trans-unit>
        <trans-unit id="70af22099196223b8485c95684bbf8824a9afa2b" translate="yes" xml:space="preserve">
          <source>Immutability</source>
          <target state="translated">Immutability</target>
        </trans-unit>
        <trans-unit id="0ffe1841e29fee613f1bd7b5f3875bf1a3446452" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt;, a &lt;a href=&quot;http://www.joda.org/joda-time/apidocs/org/joda/time/DateTime.html&quot;&gt;DateTime&lt;/a&gt; object truly knows its own assigned time zone. This contrasts the java.util.Date class which &lt;em&gt;seems&lt;/em&gt; to have a time zone but does not.</source>
          <target state="translated">&lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt; 에서 &lt;a href=&quot;http://www.joda.org/joda-time/apidocs/org/joda/time/DateTime.html&quot;&gt;DateTime&lt;/a&gt; 객체는 자체적으로 지정된 시간대를 알고 있습니다. 표준 시간대는 있지만 보이지 않는 java.util.Date 클래스와 대조됩니다.</target>
        </trans-unit>
        <trans-unit id="41a9fc6018e0ad750f098aa54a9ef6a4fa1ded86" translate="yes" xml:space="preserve">
          <source>In your specific case of &quot;January 2, 2010&quot; as the input string:</source>
          <target state="translated">&quot;2010 년 1 월 2 일&quot;의 특정 경우 입력 문자열 :</target>
        </trans-unit>
        <trans-unit id="4525fda1a552afc581c2739fe850d271a9b82f5d" translate="yes" xml:space="preserve">
          <source>It works fine for me.</source>
          <target state="translated">그것은 나를 위해 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="90bc2b02c8dee9e5f91eff194f37d542b594f566" translate="yes" xml:space="preserve">
          <source>It's a good idea to go for Calendar.getInstance(), and your requirement is to compare two dates; go for long date.</source>
          <target state="translated">Calendar.getInstance ()를 사용하는 것이 좋으며 두 날짜를 비교해야합니다. 데이트를 오래 가십시오.</target>
        </trans-unit>
        <trans-unit id="5d2e216958844c0a3d86beebc514d523cb04c9cf" translate="yes" xml:space="preserve">
          <source>Java 8 update</source>
          <target state="translated">자바 8 업데이트</target>
        </trans-unit>
        <trans-unit id="11cd95b2aba3fab55c8b880dfc73fd9c94c31555" translate="yes" xml:space="preserve">
          <source>Java string to date conversion</source>
          <target state="translated">Java 문자열을 날짜로 변환</target>
        </trans-unit>
        <trans-unit id="c2cad5d50f5d6565e199b995a5061410e31b0a82" translate="yes" xml:space="preserve">
          <source>Joda-Time</source>
          <target state="translated">Joda-Time</target>
        </trans-unit>
        <trans-unit id="c5dc49b4701a6eaeb3252e729978fa425925ccdb" translate="yes" xml:space="preserve">
          <source>My humble test program. I use it to play around with the formatter and look-up long dates that I find in log-files (but who has put them there...).</source>
          <target state="translated">나의 겸손한 시험 프로그램. 나는 그것을 사용하여 포맷터로 놀고 로그 파일에서 찾은 긴 날짜를 찾습니다 (그러나 누가 거기에 넣었는지 ...).</target>
        </trans-unit>
        <trans-unit id="82ba7d4a9b3738f8f754405c3f51b19c39a8fd6a" translate="yes" xml:space="preserve">
          <source>Note in the example code below how we pass a time zone object to the formatter which parses the string. That time zone is used to interpret that date-time as having occurred in that time zone. So you need to think about and determine the time zone represented by that string input.</source>
          <target state="translated">아래 예제 코드에서 표준 시간대 객체를 문자열을 구문 분석하는 포맷터에 전달하는 방법에 유의하십시오. 해당 시간대는 해당 시간대에서 발생한 날짜-시간을 해석하는 데 사용됩니다. 따라서 해당 문자열 입력으로 표시되는 시간대를 생각하고 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="40719020d7ab6cb15909e2126dc683eb9aa41a01" translate="yes" xml:space="preserve">
          <source>Note that the patterns are case sensitive and that text based patterns of four characters or more represent the full form; otherwise a short or abbreviated form is used if available. So e.g. &lt;code&gt;MMMMM&lt;/code&gt; or more is unnecessary.</source>
          <target state="translated">패턴은 대소 문자를 구분하며 4 자 이상의 텍스트 기반 패턴은 전체 형식을 나타냅니다. 그렇지 않으면 사용 가능한 경우 짧거나 축약 된 양식이 사용됩니다. 따라서 &lt;code&gt;MMMMM&lt;/code&gt; 이상은 불필요합니다.</target>
        </trans-unit>
        <trans-unit id="202da22641426fe9bedd8a6190dfb2100fc3ba1e" translate="yes" xml:space="preserve">
          <source>Note the importance of the explicit &lt;code&gt;Locale&lt;/code&gt; argument. If you omit it, then it will use the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#getDefault--&quot;&gt;default locale&lt;/a&gt; which is not necessarily English as used in the month name of the input string. If the locale doesn't match with the input string, then you would confusingly get a &lt;code&gt;java.text.ParseException&lt;/code&gt; even though when the format pattern seems valid.</source>
          <target state="translated">명시 적 &lt;code&gt;Locale&lt;/code&gt; 인수의 중요성에 유의하십시오. 생략하면 입력 문자열의 월 이름에 사용되는 영어가 아닌 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#getDefault--&quot;&gt;기본 로케일&lt;/a&gt; 이 사용됩니다. 로케일이 입력 문자열과 일치하지 않으면 형식 패턴이 유효 해 보일지라도 혼란스럽게 &lt;code&gt;java.text.ParseException&lt;/code&gt; 을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="fccc801a2d7e6794078b906a7e0d769284fb178b" translate="yes" xml:space="preserve">
          <source>Note: if your format pattern happens to contain the time part as well, then use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt;&lt;code&gt;LocalDateTime#parse(text, formatter)&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt;&lt;code&gt;LocalDate#parse(text, formatter)&lt;/code&gt;&lt;/a&gt;. And, if your format pattern happens to contain the time zone as well, then use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt;&lt;code&gt;ZonedDateTime#parse(text, formatter)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">참고 : 형식 패턴에 시간 부분도 포함 된 경우 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt; &lt;code&gt;LocalDateTime#parse(text, formatter)&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt; &lt;code&gt;LocalDate#parse(text, formatter)&lt;/code&gt; &lt;/a&gt; . 또한 형식 패턴에 시간대가 포함되어 있으면 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt; &lt;code&gt;ZonedDateTime#parse(text, formatter)&lt;/code&gt; &lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="db412b35391491a23074f474e3dd7ab6ca4b7fa3" translate="yes" xml:space="preserve">
          <source>Sample Code</source>
          <target state="translated">샘플 코드</target>
        </trans-unit>
        <trans-unit id="6da19a21ac22bc5479c741893f4947e8d791f058" translate="yes" xml:space="preserve">
          <source>Simple two formatters we have used:</source>
          <target state="translated">우리가 사용한 간단한 두 가지 포맷터 :</target>
        </trans-unit>
        <trans-unit id="365f58f72764be087665672e8a0ea613e75d0948" translate="yes" xml:space="preserve">
          <source>Since you have no time portion in your input string, Joda-Time assigns the first moment of the day of the specified time zone as the time-of-day. Usually this means &lt;code&gt;00:00:00&lt;/code&gt; but not always, because of &lt;a href=&quot;https://en.wikipedia.org/wiki/Daylight_saving_time&quot;&gt;Daylight Saving Time (DST)&lt;/a&gt; or other anomalies. By the way, you can do the same to any DateTime instance by calling &lt;code&gt;withTimeAtStartOfDay&lt;/code&gt;.</source>
          <target state="translated">입력 문자열에 시간 부분이 없으므로 Joda-Time은 지정된 시간대의 첫 번째 순간을 시간으로 지정합니다. 일반적으로 &lt;code&gt;00:00:00&lt;/code&gt; 을 의미하지만 &lt;a href=&quot;https://en.wikipedia.org/wiki/Daylight_saving_time&quot;&gt;일광 절약 시간제 (DST)&lt;/a&gt; 또는 기타 이상으로 인해 항상 그런 것은 아닙니다. 그건 그렇고, &lt;code&gt;withTimeAtStartOfDay&lt;/code&gt; 를 호출하여 모든 DateTime 인스턴스와 동일하게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdcad792a4daebc0237897c89be9b7018b3ecdf1" translate="yes" xml:space="preserve">
          <source>String to Date conversion:</source>
          <target state="translated">문자열을 날짜로 변환 :</target>
        </trans-unit>
        <trans-unit id="4da414debb1ea62918cfd9f5077eb2c2e28ab17f" translate="yes" xml:space="preserve">
          <source>That's the hard way, and those &lt;code&gt;java.util.Date&lt;/code&gt; setter methods have been deprecated since Java 1.1 (1997). &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;Simply format the date using &lt;code&gt;SimpleDateFormat&lt;/code&gt; using a format pattern matching the input string&lt;/a&gt;.</source>
          <target state="translated">그것은 어려운 방법이며, &lt;code&gt;java.util.Date&lt;/code&gt; setter 메소드는 Java 1.1 (1997)부터 더 이상 사용되지 않습니다. &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;입력 문자열과 일치하는 형식 패턴을 사용하여 &lt;code&gt;SimpleDateFormat&lt;/code&gt; 을 사용하여 날짜 형식을 지정하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb565a7ccefe2e2b5952f4eb77f69c13a042016d" translate="yes" xml:space="preserve">
          <source>The Locale's language specifies how to interpret the words (name of month and of day) encountered during parsing. (The &lt;a href=&quot;https://stackoverflow.com/a/4216767/642706&quot;&gt;answer by BalusC&lt;/a&gt; handles this properly.) Also, the Locale affects the output of some formatters when generating a string representation of your date-time.</source>
          <target state="translated">로케일의 언어는 구문 분석 중 발생하는 단어 (월 및 일 이름)를 해석하는 방법을 지정합니다. &lt;a href=&quot;https://stackoverflow.com/a/4216767/642706&quot;&gt;BalusC&lt;/a&gt; 의 답변 이이를 올바르게 처리합니다. 또한 로캘은 날짜-시간의 문자열 표현을 생성 할 때 일부 포맷터의 출력에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="1d7dd34c3bae178b07711d80af58be5cfc36d4f9" translate="yes" xml:space="preserve">
          <source>The beginning of a day depends on the time zone. If you fail to specify a time zone, the JVM's default time zone is applied. That means the behavior of your code may change when run on other computers or with a modified time zone setting. Probably not what you want.</source>
          <target state="translated">하루의 시작은 시간대에 따라 다릅니다. 시간대를 지정하지 않으면 JVM의 기본 시간대가 적용됩니다. 즉, 다른 컴퓨터에서 실행하거나 표준 시간대 설정을 수정하면 코드 동작이 변경 될 수 있습니다. 아마 당신이 원하는 것이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="11910cd62352b9b26352f858bca29d3b965cce0e" translate="yes" xml:space="preserve">
          <source>The characters used in a formatter's pattern are similar in Joda-Time to those in java.util.Date/Calendar but not exactly the same. Carefully read the doc.</source>
          <target state="translated">포맷터의 패턴에 사용 된 문자는 Joda-Time에서 java.util.Date/Calendar의 문자와 유사하지만 정확히 동일하지는 않습니다. 문서를주의 깊게 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="d656b0e55a32bf8012d1a4ee23852471240134f6" translate="yes" xml:space="preserve">
          <source>The following way can be used to parse the date in Java 8 without relying on &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt; 에 의존하지 않고 Java 8에서 날짜를 구문 분석하는 데 다음 방법을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6709217757d36f19b4dceef00ca3c623d96b231a" translate="yes" xml:space="preserve">
          <source>The java.util.Date &amp;amp; Calendar classes are notoriously troublesome. Because of flaws in design and implementation, avoid them. Fortunately we have our choice of two other excellent date-time libraries:</source>
          <target state="translated">java.util.Date &amp;amp; Calendar 클래스는 매우 귀찮습니다. 설계 및 구현상의 결함으로 인해이를 피하십시오. 다행히도 우리는 두 가지 훌륭한 날짜-시간 라이브러리를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c88afcb7fb3200e1285d902ae9e88396f1a9f58b" translate="yes" xml:space="preserve">
          <source>The list formatting characters from &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;DateTimeFormatter Javadoc&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;DateTimeFormatter Javadoc&lt;/a&gt; 의 목록 형식 문자 :</target>
        </trans-unit>
        <trans-unit id="49c3e76628c6b37a2817d9bb5945db5c60a89b7d" translate="yes" xml:space="preserve">
          <source>Then you can manipulate that with something like:</source>
          <target state="translated">그런 다음 다음과 같이 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a4690e1090c2bc7c8eafa97adb55db6c42ab7a1" translate="yes" xml:space="preserve">
          <source>This new set of classes are inspired by Joda-Time and defined by JSR 310. These classes are built into Java 8. A project is underway to backport these classes to Java 7, but that backporting is not backed by Oracle.</source>
          <target state="translated">이 새로운 클래스 세트는 Joda-Time에서 영감을 얻어 JSR 310에 의해 정의되었습니다.이 클래스는 Java 8에 내장되어 있습니다. 이러한 클래스를 Java 7로 백 포트하는 프로젝트가 진행 중이지만이 백 포트는 Oracle에서 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d31c0cf43374a78e2cd4567f5b5d2125acaf1fae" translate="yes" xml:space="preserve">
          <source>This popular open-source free-of-cost library can be used across several versions of Java. Many examples of its usage may be found on StackOverflow. Reading some of these will help get you up to speed quickly.</source>
          <target state="translated">이 인기있는 오픈 소스 무료 라이브러리는 여러 버전의 Java에서 사용할 수 있습니다. 사용법의 많은 예는 StackOverflow에서 찾을 수 있습니다. 이 중 일부를 읽으면 빠르게 속도를 높일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a30e720c3707c35385efeadff935bc53075c3fdb" translate="yes" xml:space="preserve">
          <source>Time Zone</source>
          <target state="translated">시간대</target>
        </trans-unit>
        <trans-unit id="3d82a9f15156c36519fc72f9af221c32d7422e29" translate="yes" xml:space="preserve">
          <source>Try this</source>
          <target state="translated">이 시도</target>
        </trans-unit>
        <trans-unit id="1b7bb5c40bd9e2e67ea18ca7c8ad6854d618a66a" translate="yes" xml:space="preserve">
          <source>Ultimately, I want to break out the month, the day, and the year as integers so that I can use</source>
          <target state="translated">궁극적으로 월, 일 및 연도를 정수로 나누고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="586901334ac8417eacdaab18b5bfe01c68b6109a" translate="yes" xml:space="preserve">
          <source>We parse the full date to time format:</source>
          <target state="translated">전체 날짜를 시간 형식으로 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="c050afc4cb956ac36d38e620a7c57054adbd29f2" translate="yes" xml:space="preserve">
          <source>We usually use the immutable classes in Joda-Time. Rather than modify an existing Date-Time object, we call methods that create a new fresh instance based on the other object with most aspects copied except where alterations were desired. An example is the call to &lt;code&gt;withZone&lt;/code&gt; in last line below. &lt;a href=&quot;https://en.wikipedia.org/wiki/Immutable_object&quot;&gt;Immutability&lt;/a&gt; helps to make Joda-Time very thread-safe, and can also make some work more clear.</source>
          <target state="translated">우리는 일반적으로 Joda-Time에서 불변 클래스를 사용합니다. 기존 Date-Time 객체를 수정하는 대신 변경이 필요한 경우를 제외하고 대부분의 측면이 복사 된 다른 객체를 기반으로 새 인스턴스를 새로 만드는 메서드를 호출합니다. 아래 마지막 줄에서 &lt;code&gt;withZone&lt;/code&gt; 을 호출하는 것이 그 예입니다. &lt;a href=&quot;https://en.wikipedia.org/wiki/Immutable_object&quot;&gt;불변성&lt;/a&gt; 은 Joda-Time을 스레드로부터 안전하게 만들고 일부 작업을 더 명확하게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24aa5e0821492bb82bc85236d172fcc454301a36" translate="yes" xml:space="preserve">
          <source>What is the best way to convert a &lt;code&gt;String&lt;/code&gt; in the format 'January 2, 2010' to a &lt;code&gt;Date&lt;/code&gt; in Java?</source>
          <target state="translated">'2010 년 1 월 2 일'형식의 &lt;code&gt;String&lt;/code&gt; 을 Java의 &lt;code&gt;Date&lt;/code&gt; 로 변환하는 가장 좋은 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="e95a45263a9a393cf80f14801c8d30901efb57ff" translate="yes" xml:space="preserve">
          <source>When run&amp;hellip;</source>
          <target state="translated">달릴 때&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="4002cc180b1e05c556d8a3525f52dfb436c6a719" translate="yes" xml:space="preserve">
          <source>Which format date do we want?</source>
          <target state="translated">어떤 형식 날짜를 원하십니까?</target>
        </trans-unit>
        <trans-unit id="18fa5dbd0aaff55e1945e904133661b8ada9c042" translate="yes" xml:space="preserve">
          <source>Which format date is actually present?</source>
          <target state="translated">실제로 어떤 형식 날짜가 있습니까?</target>
        </trans-unit>
        <trans-unit id="71d649272a20274b22ace054f628b0a4344e8fd6" translate="yes" xml:space="preserve">
          <source>While on dealing with the SimpleDateFormat class, it's important to remember that Date is not thread-safe and you can not share a single Date object with multiple threads.</source>
          <target state="translated">SimpleDateFormat 클래스를 처리하는 동안 Date는 스레드로부터 안전하지 않으며 단일 Date 객체를 여러 스레드와 공유 할 수 없다는 점을 기억해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f586c39e9f3f30344539c64b83873e25d7b52dc" translate="yes" xml:space="preserve">
          <source>While some of the answers are technically correct, they are not advisable.</source>
          <target state="translated">답변 중 일부는 기술적으로 정확하지만 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3d0a3998f0d8c9bb6c0a3621b68a8e077c4f1d5a" translate="yes" xml:space="preserve">
          <source>With Java 8 we get a new Date / Time API (&lt;a href=&quot;https://jcp.org/en/jsr/detail?id=310&quot;&gt;JSR 310&lt;/a&gt;).</source>
          <target state="translated">Java 8에서는 새로운 날짜 / 시간 API ( &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=310&quot;&gt;JSR 310&lt;/a&gt; )가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="cec89fdf9ea3374006f0a4fe73e40bf69fcfca94" translate="yes" xml:space="preserve">
          <source>You can use SimpleDateformat for  change string to date</source>
          <target state="translated">문자열을 날짜로 변경하기 위해 SimpleDateformat을 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="5893c0dc45e5eeb333b19edcfaba62567492e29b" translate="yes" xml:space="preserve">
          <source>You will need java.util.Date objects for use with other classes/framework that do not know about Joda-Time objects. Fortunately, it is very easy to move back and forth.</source>
          <target state="translated">Joda-Time 객체에 대해 모르는 다른 클래스 / 프레임 워크와 함께 사용하려면 java.util.Date 객체가 필요합니다. 다행히도 앞뒤로 이동하는 것이 매우 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="0143563b09609bfaee8fc5d2e01448d5b8471509" translate="yes" xml:space="preserve">
          <source>to convert the date into time.</source>
          <target state="translated">날짜를 시간으로 변환합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
