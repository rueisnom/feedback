<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/4216745">
    <body>
      <group id="4216745">
        <trans-unit id="dab66bdba80da6677dfaeb2b75d8cdc5ff39d540" translate="yes" xml:space="preserve">
          <source>&quot;2&quot; is the short day-of-month, so use the &lt;code&gt;d&lt;/code&gt; pattern for it.</source>
          <target state="translated">「2」は短い月なので、 &lt;code&gt;d&lt;/code&gt; パターンを使用します。</target>
        </trans-unit>
        <trans-unit id="5edc68ad1cfd3d559f627ff14ced165573534bfc" translate="yes" xml:space="preserve">
          <source>&quot;2010&quot; is the 4-digit year, so use the &lt;code&gt;yyyy&lt;/code&gt; pattern for it.</source>
          <target state="translated">「2010」は4桁の年なので、 &lt;code&gt;yyyy&lt;/code&gt; パターンを使用します。</target>
        </trans-unit>
        <trans-unit id="1dce05f639097f752425e281c94feecec5388d71" translate="yes" xml:space="preserve">
          <source>&quot;January&quot; is the full text month, so use the &lt;code&gt;MMMM&lt;/code&gt; pattern for it</source>
          <target state="translated">「January」はフルテキストの月なので、 &lt;code&gt;MMMM&lt;/code&gt; パターンを使用します</target>
        </trans-unit>
        <trans-unit id="023ff8e13946953f5bd4a58135d7f57931fd607e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt; is the standard Java 8 class for representing a date (without time). If you want to parse values that contain date and time information you should use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;. For values with timezones use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTime&lt;/a&gt;. Both provide a &lt;code&gt;parse()&lt;/code&gt; method similar to &lt;code&gt;LocalDate&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html&quot;&gt;LocalDate&lt;/a&gt;は、日付（時間なし）を表すための標準のJava 8クラスです。 日付と時刻の情報を含む値を解析する場合は、 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html&quot;&gt;LocalDateTime&lt;/a&gt;を使用する必要があります。 タイムゾーンのある値には&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html&quot;&gt;ZonedDateTimeを&lt;/a&gt;使用します 。 どちらも &lt;code&gt;LocalDate&lt;/code&gt; と同様の &lt;code&gt;parse()&lt;/code&gt; メソッドを提供します 。</target>
        </trans-unit>
        <trans-unit id="70c12590553c940b2273c656c666ede5af34bc96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://download.java.net/jdk8/docs/api/java/time/package-summary.html&quot;&gt;java.time.* package&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://download.java.net/jdk8/docs/api/java/time/package-summary.html&quot;&gt;java.time。*パッケージ&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3daf61fe2121f59af3d5b5b49cf46101a928e05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87b86ef20b4ac74a5830521938c3a1c522662a53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Calendar.getInstance().getTime()&lt;/strong&gt; gives</source>
          <target state="translated">&lt;strong&gt;Calendar.getInstance（）。getTime（）&lt;/strong&gt;は</target>
        </trans-unit>
        <trans-unit id="e37a0bf9fd554e87ade5206d2f5ecf0df8454551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Locale&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Locale&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9b2bea561dc43fadd8a99387b3a262e97765232" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;My test program:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;私のテストプログラム：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3373d13aa96ca364df85c97b0a663105f1534768" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source &lt;a href=&quot;https://www.freakyjolly.com/android-useful-methods-and-functions/&quot;&gt;Link&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ソース&lt;a href=&quot;https://www.freakyjolly.com/android-useful-methods-and-functions/&quot;&gt;リンク&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="983cedc0760c02eef69af87937ac701a932115b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test results:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;試験結果：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5a61a00ab6a8fc602faf2affb50fc0da791fefc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time Zone&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;タイムゾーン&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="effb132f6c5a1ffaeaa1c7cea18050a9caaf63c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time of Day&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;時刻&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73f885f9827cc777108e88d9050ca43ca5a35435" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Use&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4feff05b7ffc0ea521817713c1906354dddcdcc0" translate="yes" xml:space="preserve">
          <source>A few notes about Joda-Time follow.</source>
          <target state="translated">ジョダタイムについてのいくつかの注意事項があります。</target>
        </trans-unit>
        <trans-unit id="68626e5cb6687215e4fff108d6d61928e0eb5fa9" translate="yes" xml:space="preserve">
          <source>Ah yes the Java Date discussion, again.  To deal with date manipulation we use &lt;a href=&quot;http://download.oracle.com/javase/1.4.2/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt;, &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt;, &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/util/GregorianCalendar.html&quot;&gt;GregorianCalendar&lt;/a&gt;, and &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat&lt;/a&gt;.  For example using your January date as input:</source>
          <target state="translated">ああ、Java Dateのディスカッションです。 日付操作を処理するには、 &lt;a href=&quot;http://download.oracle.com/javase/1.4.2/docs/api/java/util/Date.html&quot;&gt;Date&lt;/a&gt; 、 &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/util/Calendar.html&quot;&gt;Calendar&lt;/a&gt; 、 &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/util/GregorianCalendar.html&quot;&gt;GregorianCalendar&lt;/a&gt; 、および&lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;SimpleDateFormat&lt;/a&gt;を使用します。 たとえば、1月の日付を入力として使用します。</target>
        </trans-unit>
        <trans-unit id="726a92c777d27f317b0a4083dab85f4971ef38bf" translate="yes" xml:space="preserve">
          <source>Also there is big difference between &quot;m&quot; and &quot;M&quot; where small case is used for minutes and capital case is used for month. The same with &quot;d&quot; and &quot;D&quot;. This can cause subtle bugs which often get overlooked. See &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;Javadoc&lt;/a&gt; or &lt;em&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2011/09/step-by-step-guide-to-convert-string-to.html&quot;&gt;Guide to Convert String to Date in Java&lt;/a&gt;&lt;/em&gt; for more details.</source>
          <target state="translated">また、「m」と「M」の間には大きな違いがあり、分には小文字が使用され、月には大文字が使用されます。 「d」と「D」についても同様です。 これは、しばしば見落とされる微妙なバグを引き起こす可能性があります。 詳細については、 &lt;a href=&quot;http://download.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot;&gt;Javadoc&lt;/a&gt;または&lt;em&gt;&lt;a href=&quot;http://javarevisited.blogspot.com/2011/09/step-by-step-guide-to-convert-string-to.html&quot;&gt;Java&lt;/a&gt;&lt;/em&gt;で&lt;em&gt;文字列を日付に変換するためのガイドを&lt;/em&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="86325648ac6394f6faa8fe7140a9dd0a2a13e11b" translate="yes" xml:space="preserve">
          <source>Also, SimpleDateFormat is not available with some of the client-side technologies, like &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Web_Toolkit&quot;&gt;GWT&lt;/a&gt;.</source>
          <target state="translated">また、SimpleDateFormatは、 &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Web_Toolkit&quot;&gt;GWT&lt;/a&gt;などの一部のクライアント側テクノロジーでは使用できません。</target>
        </trans-unit>
        <trans-unit id="b5f6e4a7b38e599e25999d28d85271afa97e22cc" translate="yes" xml:space="preserve">
          <source>An important note is that &lt;code&gt;SimpleDateFormat&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; thread safe. In other words, you should never declare and assign it as a static or instance variable and then reuse it from different methods/threads. You should always create it brand new within the method local scope.</source>
          <target state="translated">重要な注意点は、 &lt;code&gt;SimpleDateFormat&lt;/code&gt; はスレッドセーフでは&lt;strong&gt;ない&lt;/strong&gt;ということです。 つまり、それを静的変数またはインスタンス変数として宣言して割り当ててから、別のメソッド/スレッドから再利用しないでください。 常にメソッドローカルスコープ内で新しいものを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="ae5beb2cf4752a3f0e7181bd3a8722bf78609f64" translate="yes" xml:space="preserve">
          <source>As Kristopher Johnson correctly noted in his comment on the question, the other answers ignore vital issues of:</source>
          <target state="translated">クリストファー・ジョンソン氏が質問に対するコメントで正しく指摘したように、他の回答では重要な問題を無視しています。</target>
        </trans-unit>
        <trans-unit id="9151f8433f795cb0f0b5b6743aeb7de77ec49f00" translate="yes" xml:space="preserve">
          <source>Conversion</source>
          <target state="translated">Conversion</target>
        </trans-unit>
        <trans-unit id="6e1f6388eb4d57feb64aaaf5876ed172e760244d" translate="yes" xml:space="preserve">
          <source>Date has both a date portion and a time-of-day portion)</source>
          <target state="translated">日付は日付部分と時刻部分の両方があります。)</target>
        </trans-unit>
        <trans-unit id="0afecb489a5bf60260409db90bc92d8bf022238c" translate="yes" xml:space="preserve">
          <source>Do note that it has several &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#predefined&quot;&gt;predefined formatters&lt;/a&gt; for the more popular patterns. So instead of e.g. &lt;code&gt;DateTimeFormatter.ofPattern(&quot;EEE, d MMM yyyy HH:mm:ss Z&quot;, Locale.ENGLISH);&lt;/code&gt;, you could use &lt;code&gt;DateTimeFormatter.RFC_1123_DATE_TIME&lt;/code&gt;. This is possible because they are, on the contrary to &lt;code&gt;SimpleDateFormat&lt;/code&gt;, thread safe. You could thus also define your own, if necessary.</source>
          <target state="translated">より一般的なパターン用にいくつかの&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#predefined&quot;&gt;事前定義さ&lt;/a&gt;れたフォーマッターがあることに注意してください。 したがって、たとえば &lt;code&gt;DateTimeFormatter.ofPattern(&quot;EEE, d MMM yyyy HH:mm:ss Z&quot;, Locale.ENGLISH);&lt;/code&gt; 、 &lt;code&gt;DateTimeFormatter.RFC_1123_DATE_TIME&lt;/code&gt; を使用できます。 これは、 &lt;code&gt;SimpleDateFormat&lt;/code&gt; とは対照的に、スレッドセーフであるために可能です。 したがって、必要に応じて独自に定義することもできます。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="bc548a6e9fdf90340582b47b57fa27965ac195a8" translate="yes" xml:space="preserve">
          <source>For &lt;strong&gt;Android&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Androidの場合&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7229bcc4811d307031f614a12921c733fd9b25b5" translate="yes" xml:space="preserve">
          <source>For a particular input string format, you don't need to use an explicit &lt;code&gt;DateTimeFormatter&lt;/code&gt;: a standard &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; date, like 2016-09-26T17:44:57Z, can be parsed directly with &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;LocalDateTime#parse(text)&lt;/code&gt;&lt;/a&gt; as it already uses the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt; formatter. Similarly, &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;LocalDate#parse(text)&lt;/code&gt;&lt;/a&gt; parses an ISO date without the time component (see &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;), and &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;ZonedDateTime#parse(text)&lt;/code&gt;&lt;/a&gt; parses an ISO date with an offset and time zone added (see &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_ZONED_DATE_TIME&quot;&gt;&lt;code&gt;ISO_ZONED_DATE_TIME&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">特定の入力文字列形式では、明示的な &lt;code&gt;DateTimeFormatter&lt;/code&gt; を使用する必要はありません。2016-09-26T17：44：57Zのような標準の&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt;日付は、 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-&quot;&gt; &lt;code&gt;LocalDateTime#parse(text)&lt;/code&gt; で&lt;/a&gt;直接解析できます。 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;フォーマッタ。 同様に、 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-&quot;&gt; &lt;code&gt;LocalDate#parse(text)&lt;/code&gt; &lt;/a&gt;は時間コンポーネントなしでISO日付を&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-&quot;&gt; &lt;code&gt;ZonedDateTime#parse(text)&lt;/code&gt; &lt;/a&gt; ）、 ZonedDateTime＃parse（text）はオフセットとタイムゾーンを追加してISO日付を解析します （ &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_ZONED_DATE_TIME&quot;&gt; &lt;code&gt;ISO_ZONED_DATE_TIME&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="6dd4840361451f47027b6fada3b0b535a58b8bc0" translate="yes" xml:space="preserve">
          <source>Formatter Pattern</source>
          <target state="translated">フォーマッタパターン</target>
        </trans-unit>
        <trans-unit id="fc993b81b48babe32df0261ab0bd7be6e8326be9" translate="yes" xml:space="preserve">
          <source>Going from a java.util.Date object (here named &lt;code&gt;date&lt;/code&gt;) to Joda-Time DateTime&amp;hellip;</source>
          <target state="translated">java.util.Dateオブジェクト（ここでは &lt;code&gt;date&lt;/code&gt; という名前）からJoda-Time DateTime&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="11fdd41dcc84cce966222bc28ebaea7ef0abc1fa" translate="yes" xml:space="preserve">
          <source>Going the other direction from Joda-Time to a java.util.Date object&amp;hellip;</source>
          <target state="translated">Joda-Timeからjava.util.Dateオブジェクトへと別の方向へ&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="10284d93ec8a2bf0441c48b45a07d07b24130ef5" translate="yes" xml:space="preserve">
          <source>Here are some examples of valid &lt;code&gt;SimpleDateFormat&lt;/code&gt; patterns to parse a given string to date:</source>
          <target state="translated">以下は、特定の文字列を日付まで解析する有効な &lt;code&gt;SimpleDateFormat&lt;/code&gt; パターンの例です。</target>
        </trans-unit>
        <trans-unit id="81a242e48572e0d3e63c457128a89938b03baeda" translate="yes" xml:space="preserve">
          <source>Here's an extract of relevance from &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;the javadoc&lt;/a&gt;, listing all available format patterns:</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;javadoc&lt;/a&gt;からの関連性の抜粋を以下に示します。使用可能なすべてのフォーマットパターンがリストされています。</target>
        </trans-unit>
        <trans-unit id="85acc66ee5014d2e0e283fdb70aa745e31d1978a" translate="yes" xml:space="preserve">
          <source>Here's an extract of relevance from &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;the javadoc&lt;/a&gt;, listing all available format patterns:</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;javadoc&lt;/a&gt;からの関連性の抜粋を以下に示します。使用可能なすべてのフォーマットパターンがリストされています。</target>
        </trans-unit>
        <trans-unit id="a666e4d50eb58047d2aa3decddda21b52a134875" translate="yes" xml:space="preserve">
          <source>If you happen to be on Java 8 or newer, then use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt; (also here, click the link to see all predefined formatters and available format patterns; &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/datetime/iso/format.html&quot;&gt;the tutorial is available here&lt;/a&gt;). This new API is inspired by &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;JodaTime&lt;/a&gt;.</source>
          <target state="translated">Java 8以降を使用している場合は、 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; &lt;/a&gt;を使用してください（ここでも、リンクをクリックして、事前定義されたすべてのフォーマッターと使用可能なフォーマットパターンを確認してください。 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/datetime/iso/format.html&quot;&gt;チュートリアルは、こちらから入手できます&lt;/a&gt; ）。 この新しいAPIは&lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;JodaTimeに&lt;/a&gt;触発されました 。</target>
        </trans-unit>
        <trans-unit id="70af22099196223b8485c95684bbf8824a9afa2b" translate="yes" xml:space="preserve">
          <source>Immutability</source>
          <target state="translated">Immutability</target>
        </trans-unit>
        <trans-unit id="0ffe1841e29fee613f1bd7b5f3875bf1a3446452" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt;, a &lt;a href=&quot;http://www.joda.org/joda-time/apidocs/org/joda/time/DateTime.html&quot;&gt;DateTime&lt;/a&gt; object truly knows its own assigned time zone. This contrasts the java.util.Date class which &lt;em&gt;seems&lt;/em&gt; to have a time zone but does not.</source>
          <target state="translated">&lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt;では、 &lt;a href=&quot;http://www.joda.org/joda-time/apidocs/org/joda/time/DateTime.html&quot;&gt;DateTime&lt;/a&gt;オブジェクトは独自に割り当てられたタイムゾーンを正確に認識しています。 これは、タイムゾーンを持っている&lt;em&gt;ように見え&lt;/em&gt;ても持っていないjava.util.Dateクラスと&lt;em&gt;は&lt;/em&gt;対照的です。</target>
        </trans-unit>
        <trans-unit id="41a9fc6018e0ad750f098aa54a9ef6a4fa1ded86" translate="yes" xml:space="preserve">
          <source>In your specific case of &quot;January 2, 2010&quot; as the input string:</source>
          <target state="translated">入力文字列として「2010年1月2日」という具体的なケースでは</target>
        </trans-unit>
        <trans-unit id="4525fda1a552afc581c2739fe850d271a9b82f5d" translate="yes" xml:space="preserve">
          <source>It works fine for me.</source>
          <target state="translated">私には問題なく動作します。</target>
        </trans-unit>
        <trans-unit id="90bc2b02c8dee9e5f91eff194f37d542b594f566" translate="yes" xml:space="preserve">
          <source>It's a good idea to go for Calendar.getInstance(), and your requirement is to compare two dates; go for long date.</source>
          <target state="translated">Calendar.getInstance()を使用するのが良いでしょう。</target>
        </trans-unit>
        <trans-unit id="5d2e216958844c0a3d86beebc514d523cb04c9cf" translate="yes" xml:space="preserve">
          <source>Java 8 update</source>
          <target state="translated">ジャバ8アップデート</target>
        </trans-unit>
        <trans-unit id="11cd95b2aba3fab55c8b880dfc73fd9c94c31555" translate="yes" xml:space="preserve">
          <source>Java string to date conversion</source>
          <target state="translated">Javaの文字列から日付への変換</target>
        </trans-unit>
        <trans-unit id="c2cad5d50f5d6565e199b995a5061410e31b0a82" translate="yes" xml:space="preserve">
          <source>Joda-Time</source>
          <target state="translated">Joda-Time</target>
        </trans-unit>
        <trans-unit id="c5dc49b4701a6eaeb3252e729978fa425925ccdb" translate="yes" xml:space="preserve">
          <source>My humble test program. I use it to play around with the formatter and look-up long dates that I find in log-files (but who has put them there...).</source>
          <target state="translated">私の謙虚なテストプログラム。これを使ってフォーマッタをいじったり、ログファイルにある長い日付を調べたりしています(誰がそこに書いたのかはわかりませんが...)。</target>
        </trans-unit>
        <trans-unit id="82ba7d4a9b3738f8f754405c3f51b19c39a8fd6a" translate="yes" xml:space="preserve">
          <source>Note in the example code below how we pass a time zone object to the formatter which parses the string. That time zone is used to interpret that date-time as having occurred in that time zone. So you need to think about and determine the time zone represented by that string input.</source>
          <target state="translated">以下のコード例では、文字列を解析するフォーマッタにタイムゾーンオブジェクトを渡す方法に注目してください。このタイムゾーンは、そのタイムゾーンで発生した日付と時刻を解釈するために使われます。ですから、入力された文字列が表すタイムゾーンについて考え、決定する必要があります。</target>
        </trans-unit>
        <trans-unit id="40719020d7ab6cb15909e2126dc683eb9aa41a01" translate="yes" xml:space="preserve">
          <source>Note that the patterns are case sensitive and that text based patterns of four characters or more represent the full form; otherwise a short or abbreviated form is used if available. So e.g. &lt;code&gt;MMMMM&lt;/code&gt; or more is unnecessary.</source>
          <target state="translated">パターンは大文字と小文字が区別され、4文字以上のテキストベースのパターンは完全なフォームを表すことに注意してください。 それ以外の場合は、短い形式または省略された形式が使用可能な場合に使用されます。 したがって、たとえば &lt;code&gt;MMMMM&lt;/code&gt; 以上は不要です。</target>
        </trans-unit>
        <trans-unit id="202da22641426fe9bedd8a6190dfb2100fc3ba1e" translate="yes" xml:space="preserve">
          <source>Note the importance of the explicit &lt;code&gt;Locale&lt;/code&gt; argument. If you omit it, then it will use the &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#getDefault--&quot;&gt;default locale&lt;/a&gt; which is not necessarily English as used in the month name of the input string. If the locale doesn't match with the input string, then you would confusingly get a &lt;code&gt;java.text.ParseException&lt;/code&gt; even though when the format pattern seems valid.</source>
          <target state="translated">明示的な &lt;code&gt;Locale&lt;/code&gt; 引数の重要性に注意してください。 これを省略すると、 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#getDefault--&quot;&gt;デフォルトのロケール&lt;/a&gt;が使用されます。デフォルトのロケールは、入力文字列の月の名前で使用されている英語とは限りません。 ロケールが入力文字列と一致しない場合、フォーマットパターンが有効であるように見えても、 &lt;code&gt;java.text.ParseException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="fccc801a2d7e6794078b906a7e0d769284fb178b" translate="yes" xml:space="preserve">
          <source>Note: if your format pattern happens to contain the time part as well, then use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt;&lt;code&gt;LocalDateTime#parse(text, formatter)&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt;&lt;code&gt;LocalDate#parse(text, formatter)&lt;/code&gt;&lt;/a&gt;. And, if your format pattern happens to contain the time zone as well, then use &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt;&lt;code&gt;ZonedDateTime#parse(text, formatter)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">注：書式パターンに時間の部分も含まれている場合は、 &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt; &lt;code&gt;LocalDateTime#parse(text, formatter)&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt; &lt;code&gt;LocalDate#parse(text, formatter)&lt;/code&gt; &lt;/a&gt; 。 また、フォーマットパターンにタイムゾーンも含まれている場合は、代わりに&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-&quot;&gt; &lt;code&gt;ZonedDateTime#parse(text, formatter)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="db412b35391491a23074f474e3dd7ab6ca4b7fa3" translate="yes" xml:space="preserve">
          <source>Sample Code</source>
          <target state="translated">サンプルコード</target>
        </trans-unit>
        <trans-unit id="6da19a21ac22bc5479c741893f4947e8d791f058" translate="yes" xml:space="preserve">
          <source>Simple two formatters we have used:</source>
          <target state="translated">今まで使ってきたシンプルな2つのフォーマッタ。</target>
        </trans-unit>
        <trans-unit id="365f58f72764be087665672e8a0ea613e75d0948" translate="yes" xml:space="preserve">
          <source>Since you have no time portion in your input string, Joda-Time assigns the first moment of the day of the specified time zone as the time-of-day. Usually this means &lt;code&gt;00:00:00&lt;/code&gt; but not always, because of &lt;a href=&quot;https://en.wikipedia.org/wiki/Daylight_saving_time&quot;&gt;Daylight Saving Time (DST)&lt;/a&gt; or other anomalies. By the way, you can do the same to any DateTime instance by calling &lt;code&gt;withTimeAtStartOfDay&lt;/code&gt;.</source>
          <target state="translated">入力文字列に時間部分がないため、Joda-Timeは指定されたタイムゾーンの1日の最初の瞬間を時刻として割り当てます。 通常、これは &lt;code&gt;00:00:00&lt;/code&gt; を意味しますが、 &lt;a href=&quot;https://en.wikipedia.org/wiki/Daylight_saving_time&quot;&gt;夏時間（DST）&lt;/a&gt;またはその他の異常のため、常にではありません。 ちなみに、 &lt;code&gt;withTimeAtStartOfDay&lt;/code&gt; を呼び出すことで、任意のDateTimeインスタンスに対して同じことができます。</target>
        </trans-unit>
        <trans-unit id="bdcad792a4daebc0237897c89be9b7018b3ecdf1" translate="yes" xml:space="preserve">
          <source>String to Date conversion:</source>
          <target state="translated">文字列から日付への変換。</target>
        </trans-unit>
        <trans-unit id="4da414debb1ea62918cfd9f5077eb2c2e28ab17f" translate="yes" xml:space="preserve">
          <source>That's the hard way, and those &lt;code&gt;java.util.Date&lt;/code&gt; setter methods have been deprecated since Java 1.1 (1997). &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;Simply format the date using &lt;code&gt;SimpleDateFormat&lt;/code&gt; using a format pattern matching the input string&lt;/a&gt;.</source>
          <target state="translated">それは難しい方法であり、それらの &lt;code&gt;java.util.Date&lt;/code&gt; セッターメソッドはJava 1.1（1997）以降非推奨となっています。 &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html&quot;&gt;入力文字列に一致するフォーマットパターンを使用して、 &lt;code&gt;SimpleDateFormat&lt;/code&gt; で日付をフォーマットするだけです&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb565a7ccefe2e2b5952f4eb77f69c13a042016d" translate="yes" xml:space="preserve">
          <source>The Locale's language specifies how to interpret the words (name of month and of day) encountered during parsing. (The &lt;a href=&quot;https://stackoverflow.com/a/4216767/642706&quot;&gt;answer by BalusC&lt;/a&gt; handles this properly.) Also, the Locale affects the output of some formatters when generating a string representation of your date-time.</source>
          <target state="translated">ロケールの言語は、構文解析中に検出された単語（月と日の名前）を解釈する方法を指定します。 （これ&lt;a href=&quot;https://stackoverflow.com/a/4216767/642706&quot;&gt;はBalusC&lt;/a&gt;の回答で適切に処理されます。）また、日付時刻の文字列表現を生成するときに、ロケールは一部のフォーマッターの出力に影響します。</target>
        </trans-unit>
        <trans-unit id="1d7dd34c3bae178b07711d80af58be5cfc36d4f9" translate="yes" xml:space="preserve">
          <source>The beginning of a day depends on the time zone. If you fail to specify a time zone, the JVM's default time zone is applied. That means the behavior of your code may change when run on other computers or with a modified time zone setting. Probably not what you want.</source>
          <target state="translated">1日の始まりはタイムゾーンに依存します。タイムゾーンの指定に失敗した場合、JVMのデフォルトのタイムゾーンが適用されます。つまり、他のコンピュータ上で実行した場合や、変更されたタイムゾーン設定で実行した場合、コードの動作が変更される可能性があるということです。おそらく、あなたが望むものではないでしょう。</target>
        </trans-unit>
        <trans-unit id="11910cd62352b9b26352f858bca29d3b965cce0e" translate="yes" xml:space="preserve">
          <source>The characters used in a formatter's pattern are similar in Joda-Time to those in java.util.Date/Calendar but not exactly the same. Carefully read the doc.</source>
          <target state="translated">フォーマッタのパターンで使われる文字は Joda-Time と java.util.DateCalendar の文字に似ていますが、全く同じではありません。ドキュメントを注意深く読んでください。</target>
        </trans-unit>
        <trans-unit id="d656b0e55a32bf8012d1a4ee23852471240134f6" translate="yes" xml:space="preserve">
          <source>The following way can be used to parse the date in Java 8 without relying on &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Time&lt;/a&gt;:</source>
          <target state="translated">次の方法を使用して、 &lt;a href=&quot;http://www.joda.org/joda-time/&quot;&gt;Joda-Timeに&lt;/a&gt;依存せずにJava 8で日付を解析できます。</target>
        </trans-unit>
        <trans-unit id="6709217757d36f19b4dceef00ca3c623d96b231a" translate="yes" xml:space="preserve">
          <source>The java.util.Date &amp;amp; Calendar classes are notoriously troublesome. Because of flaws in design and implementation, avoid them. Fortunately we have our choice of two other excellent date-time libraries:</source>
          <target state="translated">java.util.Date＆Calendarクラスは、非常に面倒です。 設計と実装の欠陥のため、それらを避けてください。 幸いなことに、他に2つの優れた日時ライブラリがあります。</target>
        </trans-unit>
        <trans-unit id="c88afcb7fb3200e1285d902ae9e88396f1a9f58b" translate="yes" xml:space="preserve">
          <source>The list formatting characters from &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;DateTimeFormatter Javadoc&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html&quot;&gt;DateTimeFormatter Javadocの&lt;/a&gt;フォーマット文字のリスト：</target>
        </trans-unit>
        <trans-unit id="49c3e76628c6b37a2817d9bb5945db5c60a89b7d" translate="yes" xml:space="preserve">
          <source>Then you can manipulate that with something like:</source>
          <target state="translated">それから、それを次のようなもので操作することができます。</target>
        </trans-unit>
        <trans-unit id="0a4690e1090c2bc7c8eafa97adb55db6c42ab7a1" translate="yes" xml:space="preserve">
          <source>This new set of classes are inspired by Joda-Time and defined by JSR 310. These classes are built into Java 8. A project is underway to backport these classes to Java 7, but that backporting is not backed by Oracle.</source>
          <target state="translated">この新しいクラスのセットは Joda-Time にインスパイアされており、JSR 310 で定義されています。これらのクラスはJava 8に組み込まれている。これらのクラスをJava 7にバックポートするプロジェクトが進行中ですが、このバックポートはOracleによってバックアップされていません。</target>
        </trans-unit>
        <trans-unit id="d31c0cf43374a78e2cd4567f5b5d2125acaf1fae" translate="yes" xml:space="preserve">
          <source>This popular open-source free-of-cost library can be used across several versions of Java. Many examples of its usage may be found on StackOverflow. Reading some of these will help get you up to speed quickly.</source>
          <target state="translated">この人気のあるオープンソースの無償ライブラリは、いくつかのバージョンのJavaで使用することができます。このライブラリの使用例は StackOverflow に多数掲載されています。これらのいくつかを読むことで、すぐに使いこなせるようになるでしょう。</target>
        </trans-unit>
        <trans-unit id="a30e720c3707c35385efeadff935bc53075c3fdb" translate="yes" xml:space="preserve">
          <source>Time Zone</source>
          <target state="translated">タイムゾーン</target>
        </trans-unit>
        <trans-unit id="3d82a9f15156c36519fc72f9af221c32d7422e29" translate="yes" xml:space="preserve">
          <source>Try this</source>
          <target state="translated">これを試してみてください</target>
        </trans-unit>
        <trans-unit id="1b7bb5c40bd9e2e67ea18ca7c8ad6854d618a66a" translate="yes" xml:space="preserve">
          <source>Ultimately, I want to break out the month, the day, and the year as integers so that I can use</source>
          <target state="translated">最終的には、月、日、年を整数で区切って</target>
        </trans-unit>
        <trans-unit id="586901334ac8417eacdaab18b5bfe01c68b6109a" translate="yes" xml:space="preserve">
          <source>We parse the full date to time format:</source>
          <target state="translated">完全な日付から時刻までの形式を解析します。</target>
        </trans-unit>
        <trans-unit id="c050afc4cb956ac36d38e620a7c57054adbd29f2" translate="yes" xml:space="preserve">
          <source>We usually use the immutable classes in Joda-Time. Rather than modify an existing Date-Time object, we call methods that create a new fresh instance based on the other object with most aspects copied except where alterations were desired. An example is the call to &lt;code&gt;withZone&lt;/code&gt; in last line below. &lt;a href=&quot;https://en.wikipedia.org/wiki/Immutable_object&quot;&gt;Immutability&lt;/a&gt; helps to make Joda-Time very thread-safe, and can also make some work more clear.</source>
          <target state="translated">通常、Joda-Timeでは不変クラスを使用します。 既存のDate-Timeオブジェクトを変更するのではなく、変更が必要な場合を除いて、ほとんどのアスペクトがコピーされた他のオブジェクトに基づいて新しい新しいインスタンスを作成するメソッドを呼び出します。 例は、下の最後の行の &lt;code&gt;withZone&lt;/code&gt; の呼び出しです。 &lt;a href=&quot;https://en.wikipedia.org/wiki/Immutable_object&quot;&gt;不変性&lt;/a&gt;はJoda -Timeを非常にスレッドセーフにするのに役立ち、一部の作業をより明確にすることもできます。</target>
        </trans-unit>
        <trans-unit id="24aa5e0821492bb82bc85236d172fcc454301a36" translate="yes" xml:space="preserve">
          <source>What is the best way to convert a &lt;code&gt;String&lt;/code&gt; in the format 'January 2, 2010' to a &lt;code&gt;Date&lt;/code&gt; in Java?</source>
          <target state="translated">「2010年1月2日」形式の &lt;code&gt;String&lt;/code&gt; をJavaの &lt;code&gt;Date&lt;/code&gt; に変換する最良の方法は何ですか？</target>
        </trans-unit>
        <trans-unit id="e95a45263a9a393cf80f14801c8d30901efb57ff" translate="yes" xml:space="preserve">
          <source>When run&amp;hellip;</source>
          <target state="translated">実行すると&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="4002cc180b1e05c556d8a3525f52dfb436c6a719" translate="yes" xml:space="preserve">
          <source>Which format date do we want?</source>
          <target state="translated">どのフォーマットの日付にするか?</target>
        </trans-unit>
        <trans-unit id="18fa5dbd0aaff55e1945e904133661b8ada9c042" translate="yes" xml:space="preserve">
          <source>Which format date is actually present?</source>
          <target state="translated">実際にはどのフォーマットの日付が存在するのでしょうか?</target>
        </trans-unit>
        <trans-unit id="71d649272a20274b22ace054f628b0a4344e8fd6" translate="yes" xml:space="preserve">
          <source>While on dealing with the SimpleDateFormat class, it's important to remember that Date is not thread-safe and you can not share a single Date object with multiple threads.</source>
          <target state="translated">SimpleDateFormat クラスを扱う際には、 Date はスレッドセーフではないことを覚えておくことが重要で、一つの Date オブジェクトを複数のスレッドで共有することはできません。</target>
        </trans-unit>
        <trans-unit id="9f586c39e9f3f30344539c64b83873e25d7b52dc" translate="yes" xml:space="preserve">
          <source>While some of the answers are technically correct, they are not advisable.</source>
          <target state="translated">技術的には正しい答えもありますが、お勧めできません。</target>
        </trans-unit>
        <trans-unit id="3d0a3998f0d8c9bb6c0a3621b68a8e077c4f1d5a" translate="yes" xml:space="preserve">
          <source>With Java 8 we get a new Date / Time API (&lt;a href=&quot;https://jcp.org/en/jsr/detail?id=310&quot;&gt;JSR 310&lt;/a&gt;).</source>
          <target state="translated">Java 8では、新しい日付/時刻API（ &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=310&quot;&gt;JSR 310&lt;/a&gt; ）を取得しています。</target>
        </trans-unit>
        <trans-unit id="cec89fdf9ea3374006f0a4fe73e40bf69fcfca94" translate="yes" xml:space="preserve">
          <source>You can use SimpleDateformat for  change string to date</source>
          <target state="translated">SimpleDateformatを使用して文字列を日付に変更することができます。</target>
        </trans-unit>
        <trans-unit id="5893c0dc45e5eeb333b19edcfaba62567492e29b" translate="yes" xml:space="preserve">
          <source>You will need java.util.Date objects for use with other classes/framework that do not know about Joda-Time objects. Fortunately, it is very easy to move back and forth.</source>
          <target state="translated">Joda-Time オブジェクトを知らない他のクラスフレームワークで使用するために java.util.Date オブジェクトが必要になります。幸いなことに、前後に移動するのはとても簡単です。</target>
        </trans-unit>
        <trans-unit id="0143563b09609bfaee8fc5d2e01448d5b8471509" translate="yes" xml:space="preserve">
          <source>to convert the date into time.</source>
          <target state="translated">を使って日付を時間に変換します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
