<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/4261133">
    <body>
      <group id="4261133">
        <trans-unit id="466ac33b41275cd03a3b915c40538a9f92abfcde" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Notice: Undefined variable&amp;rdquo;, &amp;ldquo;Notice: Undefined index&amp;rdquo;, and &amp;ldquo;Notice:
  Undefined offset&amp;rdquo; using PHP</source>
          <target state="translated">PHPを使用した「通知：未定義の変数」、「通知：未定義のインデックス」、および「通知：未定義のオフセット」</target>
        </trans-unit>
        <trans-unit id="5cfc464c056a72aca343cf1a25bf4638c8d81006" translate="yes" xml:space="preserve">
          <source>(.htconf / .htaccess assume you're running as apache. If running command line this won't apply; if running IIS or other webserver then you'll need to check those configs accordingly)</source>
          <target state="translated">(.htconf .htaccess は apache として実行していると仮定しています。コマンドラインで実行している場合、これは適用されません。 IIS や他のウェブサーバを実行している場合は、それに応じて設定をチェックする必要があります)</target>
        </trans-unit>
        <trans-unit id="b035fdcaad988937004af8176e60fb969721188e" translate="yes" xml:space="preserve">
          <source>(I use a custom &lt;code&gt;html()&lt;/code&gt; function to escape characters, your mileage may vary)</source>
          <target state="translated">（私は文字をエスケープするためにカスタム &lt;code&gt;html()&lt;/code&gt; 関数を使用します、あなたの走行距離は異なるかもしれません）</target>
        </trans-unit>
        <trans-unit id="e2d1fb08a8064be74f968a2cab1022d15889e607" translate="yes" xml:space="preserve">
          <source>(additional tip)</source>
          <target state="translated">おまけ</target>
        </trans-unit>
        <trans-unit id="cf40c5795ae8e8844bd28c50747b18fee0d0232a" translate="yes" xml:space="preserve">
          <source>...Think again! A better solution is:</source>
          <target state="translated">...もう一度考えてみてください。もっと良い解決策があります。</target>
        </trans-unit>
        <trans-unit id="f14dd8fe84b7e99eb63debbf029152463832e7ad" translate="yes" xml:space="preserve">
          <source>.htaccess</source>
          <target state="translated">.htaccess</target>
        </trans-unit>
        <trans-unit id="74ce5e1e803097bfa320458e1d53d15b8d78fda3" translate="yes" xml:space="preserve">
          <source>.htconf  (webserver configuration, including vhosts and sub-configurations)*</source>
          <target state="translated">.htconf (vhosts やサブ設定を含むウェブサーバの設定)*.</target>
        </trans-unit>
        <trans-unit id="fcf7ce523a6c143b8ff2e789f0c5d69e4a59d91f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;&lt;code&gt;@&lt;/code&gt;&lt;/a&gt; is mainly acceptable for &lt;code&gt;$_GET&lt;/code&gt;/&lt;code&gt;$_POST&lt;/code&gt; input parameters, specifically &lt;em&gt;if they're optional&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt; &lt;code&gt;@&lt;/code&gt; &lt;/a&gt;は主に &lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_POST&lt;/code&gt; 入力パラメーター、特に&lt;em&gt;オプションの場合&lt;/em&gt;に受け入れられ&lt;em&gt;ます&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="eaa87739e80a180b304c9d68201a9927b9cac2d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_POST&lt;/code&gt; / &lt;code&gt;$_REQUEST&lt;/code&gt; undefined input</source>
          <target state="translated">&lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_POST&lt;/code&gt; / &lt;code&gt;$_REQUEST&lt;/code&gt; 未定義の入力</target>
        </trans-unit>
        <trans-unit id="224876c9972581c6e223299d13bfc15e83e3945f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$_POST&lt;/code&gt; / &lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_SESSION&lt;/code&gt; variable</source>
          <target state="translated">&lt;code&gt;$_POST&lt;/code&gt; / &lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_SESSION&lt;/code&gt; 変数</target>
        </trans-unit>
        <trans-unit id="e44922ac092a2a3a9f4d8904e22f3fb6eb2329bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E_NOTICE&lt;/code&gt; warnings like undefined variables and undefined indexes actually help to make your code cleaner and safer. I can tell you that, years ago, keeping &lt;code&gt;E_NOTICE&lt;/code&gt; enabled forced me to declare my variables. It made it a LOT easier to learn C, were not declaring variables is much bigger of a nuisance.</source>
          <target state="translated">未定義の変数や未定義のインデックスなどの &lt;code&gt;E_NOTICE&lt;/code&gt; 警告は、実際にコードをよりクリーンで安全にするのに役立ちます。 何年も前に、 &lt;code&gt;E_NOTICE&lt;/code&gt; を有効にしておくと、変数を宣言しなければならなくなったことがわかります。 Cを学ぶのがとても簡単になりました。変数を宣言しないと、迷惑なことになります。</target>
        </trans-unit>
        <trans-unit id="41a86e921e3b95be623e7797d114bcce2af2cfeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Undefined index: my_index&lt;/code&gt; - This occurs when you try to access a value in an array and it does not exist. To prevent this error, perform a conditional check.</source>
          <target state="translated">&lt;code&gt;Undefined index: my_index&lt;/code&gt; これは、配列内の値にアクセスしようとしたときに存在しない場合に発生します。 このエラーを回避するには、条件チェックを実行します。</target>
        </trans-unit>
        <trans-unit id="8f07adbb0361c17423b3f304bff1468056c87218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Undefined variable: my_variable_name&lt;/code&gt; - This occurs when a variable has not been defined before use. When the PHP script is executed, it internally just assumes a null value. However, in which scenario would you need to check a variable before it was defined? Ultimately, this is an argument for &quot;sloppy code&quot;. As a developer, I can tell you that I love it when I see an open source project where variables are defined as high up in their scopes as they can be defined. It makes it easier to tell what variables are going to pop up in the future and makes it easier to read/learn the code.</source>
          <target state="translated">&lt;code&gt;Undefined variable: my_variable_name&lt;/code&gt; これは、変数が使用前に定義されていない場合に発生します。 PHPスクリプトが実行されると、内部的にはnull値が想定されます。 ただし、変数が定義される前に変数を確認する必要があるのはどのシナリオですか？ 結局、これは「ずさんなコード」の議論です。 開発者として、変数がそのスコープ内で定義可能な限り高く定義されているオープンソースプロジェクトを見ると、私はそれが好きだと言えるでしょう。 これにより、将来どの変数がポップアップするかがわかりやすくなり、コードの読み取り/学習が容易になります。</target>
        </trans-unit>
        <trans-unit id="a83f81b8319de39469b7a79af80622e450699ac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Pre&lt;/em&gt; PHP 7&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP 7より&lt;em&gt;前&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a050af352438dd03808ab25acd03541840deee29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Both&lt;/strong&gt; will stop the Notices from the OP question, and &lt;strong&gt;both&lt;/strong&gt; are the exact equivalent of:</source>
          <target state="translated">&lt;strong&gt;どちらも&lt;/strong&gt; OP質問からの通知を停止し、 &lt;strong&gt;どちらも次&lt;/strong&gt;とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="e46cdc8e76c9177a72f73a51ba498d0094ff32fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Echo:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Echo:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0361e768baa75d5fd1c5bac0186466ef1b45bbdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example: Element not contained within the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例： &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 内に含まれていない要素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89134d646b39aef1a00bae6415ea1c30d75a204e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example: Element now contained within the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;例： &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 内に含まれる要素&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc964ecafa5d5160146ecb22e84f82e1833222ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Function:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed559f58d1012098e76aa02f5987633940fcf2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02a4ee543f32ff8f09e157f46b28b39bf2f7fa0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In reply to &quot;&quot;Why do they appear all of a sudden? I used to use this script for years and I've never had any problem.&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;「なぜ突然現れたのですか？」&lt;/strong&gt; &lt;strong&gt;私はこのスクリプトを何年も使用しており、問題は一度もありませんでした。」&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b9e05ddc56696be2b804fa68e63086221272548" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It's strongly recommended to implement just point 1.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ポイント1のみを実装することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="b5b8f5891b0a50ba2842ef5a5e2e14c9d3509c89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Or&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="377c9d72697e455f7849360037a606baf2cef481" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP 7+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP 7以降&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0ea0dc97baa1d4c675361104fa844e8cea6bf02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e558f1407de9b18770bd8a983b50232d86e39b2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Recommended:&lt;/strong&gt; Declare your variables, for example when you try to append a string to an undefined variable. Or use &lt;a href=&quot;http://www.php.net/manual/en/function.isset.php&quot;&gt;&lt;code&gt;isset()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;&lt;code&gt;!empty()&lt;/code&gt;&lt;/a&gt;  to check if they are declared before referencing them, as in:</source>
          <target state="translated">&lt;strong&gt;推奨：&lt;/strong&gt;たとえば、未定義の変数に文字列を追加しようとする場合など、変数を宣言します。 または、次のように、 &lt;a href=&quot;http://www.php.net/manual/en/function.isset.php&quot;&gt; &lt;code&gt;isset()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt; &lt;code&gt;!empty()&lt;/code&gt; &lt;/a&gt;を使用して、参照する前に宣言されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="b6daaa940d95310889d636bb10a59cbae549d818" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simple Explanation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;簡単な説明&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2dcd8fc71e05cf69f2f4aedf034ba98a76d6ae8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Summary&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95bd9784667a8a2240f7c0a236b5d24f4d5121c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Suppression:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Suppression:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="411e7b907e67408c8cd39ff90a9ecbe3ae829c42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why have they changed?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;なぜ変わったのですか？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b27d65f9e51981a80b5e69026dc3ecf739096691" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;https://meta.stackexchange.com/questions/62258/what-can-be-done-about-repetitive-questions&quot;&gt;What can be done about repetitive questions?&lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;https://meta.stackexchange.com/questions/62258/what-can-be-done-about-repetitive-questions&quot;&gt;繰り返し質問に対して何ができますか？&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="6a4a05265b46928ecf023d648914b921b0061143" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;https://meta.stackexchange.com/questions/63762/do-reference-questions-make-sense&quot;&gt;Do &amp;ldquo;reference questions&amp;rdquo; make sense?&lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;https://meta.stackexchange.com/questions/63762/do-reference-questions-make-sense&quot;&gt;「参考質問」は意味がありますか？&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="473e5811eb409ba5482f44224c935a8b3d454450" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;strong&gt;This is a General Reference question&lt;/strong&gt; for people to link to as duplicate, instead of having to explain the issue over and over again. I feel this is necessary because most real-world answers on this issue are very specific. &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;strong&gt;これは、&lt;/strong&gt;人々が問題を何度も何度も説明する必要はなく、重複してリンク&lt;strong&gt;する一般的なリファレンスの質問&lt;/strong&gt;です。&lt;/sub&gt; &lt;sub&gt;この問題に関する実際の回答のほとんどは非常に具体的であるため、これは必要だと思います。&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4160be4bec0e85e02ec18f06e95cd08826eba4dd" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Related Meta discussion:&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;関連するメタディスカッション：&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="bdce42b0acd2590483024b193d2f4096dd621199" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;method=POST&lt;/code&gt; form ought to populate &lt;code&gt;$_POST&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;method=POST&lt;/code&gt; フォームは &lt;code&gt;$_POST&lt;/code&gt; に入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="5255286df4e9152bebde89a4bd1c204a3fb41bfc" translate="yes" xml:space="preserve">
          <source>Additionally their validity times out, they could be constraint to subdomains or individual paths, and user and browser can just reject or delete them.</source>
          <target state="translated">さらに、それらの有効性のタイムアウトは、それらがサブドメインまたは個々のパスに制約される可能性があり、ユーザーとブラウザはそれらを拒否するか、または削除することができます。</target>
        </trans-unit>
        <trans-unit id="820d22571a0f0746323fb931aa811211885a712c" translate="yes" xml:space="preserve">
          <source>Additonally you shouldn't habitually use/recommend &lt;code&gt;if (isset($_POST[&quot;shubmit&quot;]))&lt;/code&gt; in your initial code.</source>
          <target state="translated">さらに、初期コードで &lt;code&gt;if (isset($_POST[&quot;shubmit&quot;]))&lt;/code&gt; を習慣的に使用/推奨しないでください。</target>
        </trans-unit>
        <trans-unit id="904c28189d688f020be88972d7cd9a3a79be6c48" translate="yes" xml:space="preserve">
          <source>Also note that all 3 variables are &lt;a href=&quot;http://php.net/manual/en/language.variables.superglobals.php&quot;&gt;superglobals&lt;/a&gt; and are uppercase.</source>
          <target state="translated">また、3つの変数はすべて&lt;a href=&quot;http://php.net/manual/en/language.variables.superglobals.php&quot;&gt;スーパーグローバルで&lt;/a&gt;あり、大文字であることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="fefb592bf66b92a1f8736ecf59ad8e1168fb7453" translate="yes" xml:space="preserve">
          <source>Alternativey or additionally use your &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor#Network_request_details&quot;&gt;&lt;strong&gt;browser devtools&lt;/strong&gt; (&lt;kbd&gt;F12&lt;/kbd&gt;)&lt;/a&gt; and inspect the network tab for requests and parameters:</source>
          <target state="translated">別の方法として、または追加で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor#Network_request_details&quot;&gt;&lt;strong&gt;ブラウザーの開発ツール&lt;/strong&gt; （ &lt;kbd&gt;F12&lt;/kbd&gt; ）&lt;/a&gt;を使用して、ネットワークタブでリクエストとパラメーターを確認します。</target>
        </trans-unit>
        <trans-unit id="4d69d00ac51601f35e8af378baeb34137ca8b8b7" translate="yes" xml:space="preserve">
          <source>Although PHP does not require a variable declaration, it does recommend it in order to avoid some security vulnerabilities or bugs where one would forget to give a value to a variable that will be used later in the script. What PHP does in the case of undeclared variables is issue a very low level error, &lt;code&gt;E_NOTICE&lt;/code&gt;, one that is not even reported by default, but the Manual &lt;a href=&quot;http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;advises to allow&lt;/a&gt; during development.</source>
          <target state="translated">PHPは変数宣言を必要としませんが、スクリプトで後で使用される変数に値を与えるのを忘れるようなセキュリティの脆弱性やバグを回避するために推奨しています。 宣言されていない変数の場合にPHPが行うことは、非常に低レベルのエラー &lt;code&gt;E_NOTICE&lt;/code&gt; を発行することです。このエラーはデフォルトでは報告されませんが、マニュアルで&lt;a href=&quot;http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;は&lt;/a&gt;開発中に許可することをお勧めしています 。</target>
        </trans-unit>
        <trans-unit id="f414d432b850f2f8778826864acb38e1be08c164" translate="yes" xml:space="preserve">
          <source>And fix all the errors.</source>
          <target state="translated">そして、すべてのエラーを修正します。</target>
        </trans-unit>
        <trans-unit id="ffe4f5a526bbd2c97f20e8f1995acb2664200b61" translate="yes" xml:space="preserve">
          <source>And on production, error reporting should be set to off.</source>
          <target state="translated">また、本番ではエラー報告をオフに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1526ce4e87e180d45d86a0a80d9baf403503a027" translate="yes" xml:space="preserve">
          <source>And since this covers the majority of such questions, let's expand on the most common causes:</source>
          <target state="translated">そして、このような質問の大半をカバーしていますので、最も一般的な原因を拡大してみましょう。</target>
        </trans-unit>
        <trans-unit id="84e1e713d8bf5c32e4390c60a1a8fc38c03e6956" translate="yes" xml:space="preserve">
          <source>Another option is to declare an empty array at the top of your function. This is not always possible.</source>
          <target state="translated">もう一つの方法は、関数の先頭に空の配列を宣言することです。これは常に可能というわけではありません。</target>
        </trans-unit>
        <trans-unit id="2fa18ee1eccf26617e922e80c6fcd9ae54602c45" translate="yes" xml:space="preserve">
          <source>Another reason why an undefined index notice will be thrown, would be that a column was omitted from a database query.</source>
          <target state="translated">未定義のインデックス通知がスローされるもう一つの理由は、データベースクエリから列が省略されたことでしょう。</target>
        </trans-unit>
        <trans-unit id="0cd47ae8c31163812dd6c4ee0dbb4ef4d109f5bc" translate="yes" xml:space="preserve">
          <source>Another way to get this out:</source>
          <target state="translated">これを出すための別の方法。</target>
        </trans-unit>
        <trans-unit id="7e8ae0de0dc8a5ace1da5cc16cbf095bda63dd88" translate="yes" xml:space="preserve">
          <source>Are table names in MySQL case sensitive?</source>
          <target state="translated">MySQL のテーブル名は大文字と小文字を区別しますか?</target>
        </trans-unit>
        <trans-unit id="1d338139771c1b18234f9b1d0b185bcb393bc60c" translate="yes" xml:space="preserve">
          <source>As well as &lt;code&gt;method=POST&lt;/code&gt; in your &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; declaration.</source>
          <target state="translated">&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 宣言の &lt;code&gt;method=POST&lt;/code&gt; も同様です。</target>
        </trans-unit>
        <trans-unit id="eb6541d261faeff768ff85a90fc3b2ae3a6fc5b7" translate="yes" xml:space="preserve">
          <source>Assign a variable to the value of another variable if it's set, else assign &lt;code&gt;null&lt;/code&gt; (or whatever &lt;em&gt;default&lt;/em&gt; value you need):</source>
          <target state="translated">変数が設定されている場合は別の変数の値に変数を割り当て、それ以外の場合は &lt;code&gt;null&lt;/code&gt; （または必要な&lt;em&gt;デフォルト&lt;/em&gt;値）を割り当てます 。</target>
        </trans-unit>
        <trans-unit id="8d42f7eaf07837ea1f0cf38276c470d1c2e03bbd" translate="yes" xml:space="preserve">
          <source>Both will reveal if your script was invoked with the right or any parameters at all.</source>
          <target state="translated">どちらも、スクリプトが正しく起動されたかどうか、あるいはパラメータが全くないかどうかを明らかにします。</target>
        </trans-unit>
        <trans-unit id="47a3306b99a1a4ab5268a1769bcbb31bc8b37c82" translate="yes" xml:space="preserve">
          <source>Check &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt; php directives in .htaccess have not changed</source>
          <target state="translated">.htaccessの &lt;code&gt;error_reporting&lt;/code&gt; および &lt;code&gt;display_errors&lt;/code&gt; phpディレクティブが変更されていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="64e8234d2ce8ce34d5df3f9cf2f429eb14939f4a" translate="yes" xml:space="preserve">
          <source>Check &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt; php directives in .htconf (or vhosts etc) have not changed</source>
          <target state="translated">.htconf（またはvhostsなど）の &lt;code&gt;error_reporting&lt;/code&gt; および &lt;code&gt;display_errors&lt;/code&gt; phpディレクティブが変更されていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="031d6873b2127c8f759ef6f6556a0c86ce089e09" translate="yes" xml:space="preserve">
          <source>Check &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt; php directives in php.ini has not changed, or that you're not using a different php.ini from before.</source>
          <target state="translated">php.iniの &lt;code&gt;error_reporting&lt;/code&gt; および &lt;code&gt;display_errors&lt;/code&gt; phpディレクティブが変更されていないこと、または以前とは異なるphp.iniを使用していないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="653234d30ac433418c066cde96a7a349fc70368d" translate="yes" xml:space="preserve">
          <source>Check if the index exists before you access it. For this you can use &lt;a href=&quot;http://php.net/manual/en/function.isset.php&quot;&gt;&lt;code&gt;isset()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/function.array-key-exists.php&quot;&gt;&lt;code&gt;array_key_exists()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">アクセスする前に、インデックスが存在するかどうかを確認してください。 これには、 &lt;a href=&quot;http://php.net/manual/en/function.isset.php&quot;&gt; &lt;code&gt;isset()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;http://php.net/manual/en/function.array-key-exists.php&quot;&gt; &lt;code&gt;array_key_exists()&lt;/code&gt; を&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="0673d9fe56b528211d611729a46f3e009bef2529" translate="yes" xml:space="preserve">
          <source>Consult the followning Q&amp;amp;A's on Stack:</source>
          <target state="translated">Stackに関する次のQ＆Aを参照してください。</target>
        </trans-unit>
        <trans-unit id="adf03b11de88665383c6a83f7daf6fbacc1c1c40" translate="yes" xml:space="preserve">
          <source>Disable E_NOTICE from reporting. A quick way to exclude just &lt;code&gt;E_NOTICE&lt;/code&gt; is:</source>
          <target state="translated">E_NOTICEをレポートから無効にします。 &lt;code&gt;E_NOTICE&lt;/code&gt; だけを除外する簡単な方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="912f5fd59a8d3c74d2ee8da5746e91f2d4b17b1f" translate="yes" xml:space="preserve">
          <source>Ensure each required input has an &lt;code&gt;&amp;lt;input name=FOO&amp;gt;&lt;/code&gt;</source>
          <target state="translated">必要な各入力に &lt;code&gt;&amp;lt;input name=FOO&amp;gt;&lt;/code&gt; があることを確認してください</target>
        </trans-unit>
        <trans-unit id="1108bb2904f86b618906813610916b8155d49aca" translate="yes" xml:space="preserve">
          <source>Equals to:</source>
          <target state="translated">同等です。</target>
        </trans-unit>
        <trans-unit id="d433cfc30c4bef7340148f4742c6657e90433e94" translate="yes" xml:space="preserve">
          <source>Error display &lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;&lt;code&gt;@&lt;/code&gt; operator&lt;/a&gt;</source>
          <target state="translated">エラー表示&lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt; &lt;code&gt;@&lt;/code&gt; 演算子&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="687919597f3097fac25829ed728b8e06fef56383" translate="yes" xml:space="preserve">
          <source>Finally check your &lt;strong&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/strong&gt; declarations, if you expect a parameter but receive none.</source>
          <target state="translated">最後に、 &lt;strong&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; および &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/strong&gt;宣言を確認します。</target>
        </trans-unit>
        <trans-unit id="e316e0566164421c5957bf735755cd24cdfcd077" translate="yes" xml:space="preserve">
          <source>Finally check your code; possibly an unrelated library; to see if &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt; php directives have been set there.</source>
          <target state="translated">最後にコードを確認してください。 おそらく無関係なライブラリ。 そこに &lt;code&gt;error_reporting&lt;/code&gt; および &lt;code&gt;display_errors&lt;/code&gt; phpディレクティブが設定されているかどうかを確認します 。</target>
        </trans-unit>
        <trans-unit id="3e757e4ce33a53ff4218c9a1d3ca6b3f208409b9" translate="yes" xml:space="preserve">
          <source>First thing you do when encountering an undefined index/offset, is check for typos:</source>
          <target state="translated">未定義のインデックスオフセットに遭遇したときに最初に行うことは、タイプミスをチェックすることです。</target>
        </trans-unit>
        <trans-unit id="153c677b94b3ff7b21a50ff4e524bb1bab69e993" translate="yes" xml:space="preserve">
          <source>Fix the cause first. Not the notices.</source>
          <target state="translated">まずは原因を解決しましょう。告知ではなく。</target>
        </trans-unit>
        <trans-unit id="56c84e61a5b32c4d2b9191bedec59c56745fbfc2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;$_GET&lt;/code&gt; parameters you can also peek at the &lt;a href=&quot;http://php.net/reserved.variables.server&quot;&gt;&lt;code&gt;QUERY_STRING&lt;/code&gt;&lt;/a&gt; in</source>
          <target state="translated">&lt;code&gt;$_GET&lt;/code&gt; パラメータについては、 &lt;a href=&quot;http://php.net/reserved.variables.server&quot;&gt; &lt;code&gt;QUERY_STRING&lt;/code&gt; &lt;/a&gt;を確認することもできます</target>
        </trans-unit>
        <trans-unit id="29366bd46ef8e81963bd8066bfd82f552f4a003f" translate="yes" xml:space="preserve">
          <source>For array elements:</source>
          <target state="translated">配列要素の場合。</target>
        </trans-unit>
        <trans-unit id="5e50226e95d8ade6624fe1538f45237faa2dc501" translate="yes" xml:space="preserve">
          <source>For instance, if you thought this was clever, shorthand code:</source>
          <target state="translated">例えば、これが賢いと思ったら、速記コード。</target>
        </trans-unit>
        <trans-unit id="70ea3327c155cb8cc0ac67c4e9f4395558bb5b87" translate="yes" xml:space="preserve">
          <source>For undesired and redundant notices, one could use the dedicated &lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;&lt;code&gt;@&lt;/code&gt; operator&lt;/a&gt; to &amp;raquo;&lt;strong&gt;hide&lt;/strong&gt;&amp;laquo; undefined variable/index messages.</source>
          <target state="translated">望ましくない冗長な通知については、専用の&lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt; &lt;code&gt;@&lt;/code&gt; 演算子&lt;/a&gt;を使用して&amp;raquo;未定義の変数/インデックスメッセージを&lt;strong&gt;非表示に&lt;/strong&gt;することができます。</target>
        </trans-unit>
        <trans-unit id="6ff4fe4b08255e622e9a324f290b725c7198365d" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;PHP documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;PHPのドキュメント&lt;/a&gt;から：</target>
        </trans-unit>
        <trans-unit id="b109fc60e857896c9ffc7dc9cefe0df767b500b1" translate="yes" xml:space="preserve">
          <source>From the vast wisdom of the &lt;a href=&quot;http://php.net/manual/en/language.variables.basics.php#example-112&quot;&gt;PHP Manual&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/language.variables.basics.php#example-112&quot;&gt;PHPマニュアルの&lt;/a&gt;広大な知識から：</target>
        </trans-unit>
        <trans-unit id="88f707a38e9c72b1fdc7872edf8677cbb18cecd3" translate="yes" xml:space="preserve">
          <source>Furthermore, according to PHP documentation, by default, &lt;code&gt;E_NOTICE&lt;/code&gt; is disabled in php.ini. PHP docs recommend &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php&quot;&gt;turning it on for debugging purposes&lt;/a&gt;. However, when I download PHP from the Ubuntu repository&amp;ndash;and from BitNami's Windows stack&amp;ndash;I see something else.</source>
          <target state="translated">さらに、PHPのドキュメントによれば、デフォルトでは、php.iniで &lt;code&gt;E_NOTICE&lt;/code&gt; が無効になっています。 PHPのドキュメント&lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php&quot;&gt;では、デバッグのために&lt;/a&gt;有効にすることをお勧めしています 。 しかし、Ubuntuリポジトリから、そしてBitNamiのWindowsスタックからPHPをダウンロードすると、別のものが表示されます。</target>
        </trans-unit>
        <trans-unit id="f2dddaae4f92ebdb1dbd48e2f82df522ec46fe3c" translate="yes" xml:space="preserve">
          <source>Generally because of &quot;bad programming&quot;, and a possibility for mistakes now or later.</source>
          <target state="translated">一般的には、「プログラミングが悪い」という理由で、今か今かとミスをする可能性があるからです。</target>
        </trans-unit>
        <trans-unit id="67469a7b0a065668147fb40e4648a80e3afbdbf2" translate="yes" xml:space="preserve">
          <source>How do I fix them?</source>
          <target state="translated">どうやって直せばいいの?</target>
        </trans-unit>
        <trans-unit id="3266330aedefc72dbf6df42c0d0da5aaab0e27cd" translate="yes" xml:space="preserve">
          <source>However it is also possible to override these settings in</source>
          <target state="translated">しかし、これらの設定は</target>
        </trans-unit>
        <trans-unit id="906d0ca784deebdc35a87d0ee1a58fac3784b42b" translate="yes" xml:space="preserve">
          <source>I am sharing my question and solution here:</source>
          <target state="translated">私の疑問と解決策をここで共有しています。</target>
        </trans-unit>
        <trans-unit id="a15ee9107e4905e687b6b88e433f71dd96f8f124" translate="yes" xml:space="preserve">
          <source>I asked a question about this and I was referred to this post with the message:</source>
          <target state="translated">この件について質問したところ、メッセージと共にこの投稿を参考にさせていただきました。</target>
        </trans-unit>
        <trans-unit id="3aeb16a0eb97ce78a1969a6a98f32b3eefc44b6c" translate="yes" xml:space="preserve">
          <source>I didn't want to disable notice because it's helpful, but wanted to avoid too much typing.</source>
          <target state="translated">便利なので通知を無効にしたくなかったのですが、あまり打ち込みすぎないようにしたかったのです。</target>
        </trans-unit>
        <trans-unit id="3cbb3e054481a6256c4a8d0c52f4bef08a03deb9" translate="yes" xml:space="preserve">
          <source>I think the problem is that I am writing if conditions for the variable &lt;code&gt;$city&lt;/code&gt;, which is not the key but the value in &lt;code&gt;$key =&amp;gt; $city&lt;/code&gt;. First, could you confirm if that is the cause of the warning? Second, if that is the problem, why is it that I cannot write a condition based on the value? Does it have to be with the key that I need to write the condition?</source>
          <target state="translated">問題は、変数ではなく、 &lt;code&gt;$key =&amp;gt; $city&lt;/code&gt; 値である変数 &lt;code&gt;$city&lt;/code&gt; 条件を記述していることだと思います。 最初に、それが警告の原因かどうかを確認できますか？ 次に、それが問題である場合、値に基づいて条件を記述できないのはなぜですか？ 条件を記述するために必要なキーを使用する必要がありますか？</target>
        </trans-unit>
        <trans-unit id="357342f3f25e597ef6bdc1aa7da95ee5ff053e01" translate="yes" xml:space="preserve">
          <source>I use all time own useful function &lt;strong&gt;exst()&lt;/strong&gt; which automatically declare variables.</source>
          <target state="translated">私は常に変数を自動的に宣言する独自の便利な関数&lt;strong&gt;exst（）&lt;/strong&gt;を使用しています。</target>
        </trans-unit>
        <trans-unit id="45922e43d319b1f703892ed4edaf26fbcf11b574" translate="yes" xml:space="preserve">
          <source>I used to curse this error, but it can be helpful to remind you to escape user input.</source>
          <target state="translated">私はこのエラーを呪っていましたが、ユーザー入力をエスケープすることを思い出させるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ec3ba3776e0b91e4ed99d91ccdaa6636146651a6" translate="yes" xml:space="preserve">
          <source>I'm running a PHP script and continue to receive errors like:</source>
          <target state="translated">私はPHPスクリプトを実行していますが、次のようなエラーを受け取り続けています。</target>
        </trans-unit>
        <trans-unit id="dc6c3cb6d26cb6f183c56b72e4222e789e6cb27e" translate="yes" xml:space="preserve">
          <source>I.e.:</source>
          <target state="translated">I.e.:</target>
        </trans-unit>
        <trans-unit id="67b0a665e29636ed1eab033c69a44ccb15d2a183" translate="yes" xml:space="preserve">
          <source>If it really is only defined sometimes, test for it:  &lt;code&gt;if (isset($varname))&lt;/code&gt;, before using it</source>
          <target state="translated">それが本当に定義されていることが時々ある場合、それをテストしてください： &lt;code&gt;if (isset($varname))&lt;/code&gt; 、それを使用する前に</target>
        </trans-unit>
        <trans-unit id="b31c31bea3516f28884f8f7a9430713b23967b16" translate="yes" xml:space="preserve">
          <source>If it's a mistake, make a proper assignment to the variable first:  $varname=0;</source>
          <target state="translated">間違っている場合は、最初に変数に適切な代入をしてください:$varname=0.</target>
        </trans-unit>
        <trans-unit id="3996ff01f267381fef1a3bc0428431b4ad170ed8" translate="yes" xml:space="preserve">
          <source>If it's because you spelled it wrong, just correct that</source>
          <target state="translated">綴りが間違っているからだとしたら、それを訂正してください。</target>
        </trans-unit>
        <trans-unit id="932f6b1a937b99faeaa413a7716551d23bcdc355" translate="yes" xml:space="preserve">
          <source>If working with classes you need to make sure you reference member variables using &lt;code&gt;$this&lt;/code&gt;:</source>
          <target state="translated">クラスを操作する場合は、 &lt;code&gt;$this&lt;/code&gt; を使用してメンバー変数を参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="ecd8e349dd1c36a083a95dd96edd0ea24179b9d4" translate="yes" xml:space="preserve">
          <source>If you absolutely want &lt;strong&gt;string&lt;/strong&gt; value, just like:</source>
          <target state="translated">&lt;strong&gt;文字列&lt;/strong&gt;値が絶対に必要な場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="79b04efb6aea3521e109d0b13f53088211263b74" translate="yes" xml:space="preserve">
          <source>If you are employing mod_rewrite, then you should check both the &lt;code&gt;access.log&lt;/code&gt; as well as enable the &lt;a href=&quot;https://stackoverflow.com/questions/9632852/how-to-debug-apache-mod-rewrite&quot;&gt;&lt;code&gt;RewriteLog&lt;/code&gt;&lt;/a&gt; to figure out absent parameters.</source>
          <target state="translated">mod_rewriteを使用している場合は、 &lt;code&gt;access.log&lt;/code&gt; を確認し、 &lt;a href=&quot;https://stackoverflow.com/questions/9632852/how-to-debug-apache-mod-rewrite&quot;&gt; &lt;code&gt;RewriteLog&lt;/code&gt; &lt;/a&gt;を有効にして、存在しないパラメーターを特定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a1080a38215b1e1af03aeed731e9ee9f9c1a257" translate="yes" xml:space="preserve">
          <source>If you don't require setting a new variable then you can directly use the ternary's returned value, such as with &lt;code&gt;echo&lt;/code&gt;, function arguments, etc:</source>
          <target state="translated">新しい変数を設定する必要がない場合は、 &lt;code&gt;echo&lt;/code&gt; や関数の引数などを使用して、3項の戻り値を直接使用できます。</target>
        </trans-unit>
        <trans-unit id="b271286cd0385efc4229e22000cb573f7ce4c7c8" translate="yes" xml:space="preserve">
          <source>If you have directive in .htaccess, check if they are still permitted in the .htconf file</source>
          <target state="translated">.htaccess にディレクティブがある場合は、.htconf ファイルで許可されているかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="7ec07cc14b88ff8eaf3df2786535388406030d2b" translate="yes" xml:space="preserve">
          <source>If you just care about the Notice not being in the error log, then as an option you could simply ignore the error log.</source>
          <target state="translated">エラーログにない通知を気にするだけなら、オプションとして、単にエラーログを無視することができます。</target>
        </trans-unit>
        <trans-unit id="84b425764f5264db59f0574e1d686db8a915df32" translate="yes" xml:space="preserve">
          <source>In PHP 7.0 it's now possible to use Null coalescing operator:</source>
          <target state="translated">PHP 7.0では、Null合体演算子を使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="319d0a4c7f233a98e25172008000d2993fcd5210" translate="yes" xml:space="preserve">
          <source>In PHP you need fist to define the variable after that you can use it.</source>
          <target state="translated">PHPでは、最初に変数を定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="e71591ec405879857b4d314ed15542dd72e4cbff" translate="yes" xml:space="preserve">
          <source>In a very &lt;strong&gt;Simple Language&lt;/strong&gt;.</source>
          <target state="translated">非常に&lt;strong&gt;単純な言語で&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad6be399ca6363a718be6d72ff8740e9b9d78c9a" translate="yes" xml:space="preserve">
          <source>In page if I want to refer to $_REQUEST['name']:</source>
          <target state="translated">ページ内で$_REQUEST['name']を参照したい場合。</target>
        </trans-unit>
        <trans-unit id="29cb15925f9f3f555b3f301015ad5d4291ac0dbd" translate="yes" xml:space="preserve">
          <source>Is this an expected key name and present on &lt;em&gt;each&lt;/em&gt; page request?</source>
          <target state="translated">これは予期されるキー名であり、 &lt;em&gt;各&lt;/em&gt;ページ要求に存在しますか？</target>
        </trans-unit>
        <trans-unit id="2b9cbdd0059b4cdb465b9caf57145491f2685dcb" translate="yes" xml:space="preserve">
          <source>It is possible to suppress the PHP Notices with &lt;code&gt;@&lt;/code&gt; or reduce your error reporting level, but it &lt;strong&gt;does not fix the problem&lt;/strong&gt;, it simply stops it being reported in the error log. This means that your code still tried to use a variable that was not set, which may or may not mean something doesn't work as intended - depending on how crucial the missing value is.</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; を使用してPHP通知を抑制したり、エラー報告レベルを下げたりすること&lt;strong&gt;はできますが、問題は修正&lt;/strong&gt;されず、エラーログへの報告が停止されるだけです。 これは、コードがまだ設定されていない変数を使用しようとしたことを意味します。これは、欠損値がどれほど重要かによって、意図したとおりに機能しないことを意味する場合とそうでない場合があります。</target>
        </trans-unit>
        <trans-unit id="cd594f9ac04a5c9f4246d97dc2c1174f79ffb780" translate="yes" xml:space="preserve">
          <source>It is very common for most sites to operate under the &quot;default&quot; error reporting of &quot;Show all errors, but not 'notices' and 'deprecated'&quot;. This will be set in php.ini and apply to all sites on the server. This means that those &quot;notices&quot; used in the examples will be suppressed (hidden) while other errors, considered more critical, will be shown/recorded.</source>
          <target state="translated">ほとんどのサイトでは、「すべてのエラーを表示するが、'notice' と 'deprecated' は表示しない」という「デフォルト」のエラー報告の下で運用されていることが非常に一般的です。これは php.ini で設定され、サーバー上のすべてのサイトに適用されます。これは、例で使用されている &quot;通知 &quot;は表示されない(非表示)一方で、より重要と考えられるその他のエラーは表示されるということを意味します。</target>
        </trans-unit>
        <trans-unit id="0cf7fbf2bd243f351b2656fc036136240b9188a2" translate="yes" xml:space="preserve">
          <source>It means you are testing, evaluating, or printing a variable that you have not yet assigned anything to.  It means you either have a typo, or you need to check that the variable was initialized to something first.  Check your logic paths, it may be set in one path but not in another.</source>
          <target state="translated">これは、まだ何も代入していない変数をテストしたり、評価したり、印刷したりしていることを意味します。これは、タイプミスがあるか、変数が最初に何かに初期化されていることを確認する必要があることを意味します。ロジックパスをチェックしてみてください。</target>
        </trans-unit>
        <trans-unit id="a8dffec720b7e72cd50f31796cad3fd10c7d0cdd" translate="yes" xml:space="preserve">
          <source>It's also possible for a form to supply &lt;code&gt;action=script.php?get=param&lt;/code&gt; via $_GET and the remaining &lt;code&gt;method=POST&lt;/code&gt; fields in $_POST alongside.</source>
          <target state="translated">フォームが$ _GETを介して &lt;code&gt;action=script.php?get=param&lt;/code&gt; を提供し、$ _ &lt;code&gt;method=POST&lt;/code&gt; の残りのmethod = POSTフィールドを一緒に提供することも可能です。</target>
        </trans-unit>
        <trans-unit id="bab7028986ae39af386124938e902f8e186f9c3a" translate="yes" xml:space="preserve">
          <source>It's very inappropriate for code deep within the application logic (ignoring undeclared variables where you shouldn't), e.g. for function parameters, or in loops.</source>
          <target state="translated">これは、アプリケーションロジックの奥深くにあるコード、例えば関数のパラメータやループの中のコードには非常に不適切です(宣言されていない変数は無視してください)。</target>
        </trans-unit>
        <trans-unit id="74d8b15cab385a97f5b0a2145470ac08a1b7c36a" translate="yes" xml:space="preserve">
          <source>Its because the variable  '$user_location' is not getting defined. If you are using any if loop inside which you are declaring the '$user_location' variable then you must also have an else loop and define the same. For example:</source>
          <target state="translated">これは、変数 '$user_location' が定義されていないためです。if ループの中で変数 '$user_location' を宣言している場合は、 else ループを使用して同じものを定義する必要があります。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="6b9731d542e1febeac9cefa49a4c4e86b70bc82c" translate="yes" xml:space="preserve">
          <source>Line 10 and 11 looks like this:</source>
          <target state="translated">10行目と11行目はこんな感じです。</target>
        </trans-unit>
        <trans-unit id="8d8cc75fec72f5730c2e22841ac92618615b8330" translate="yes" xml:space="preserve">
          <source>Line 154 is the problem. This is what I have in line 154:</source>
          <target state="translated">154行目が問題です。154行目にあるのはこんな感じです。</target>
        </trans-unit>
        <trans-unit id="10f6f80522bf32cd96225cf087c1860d1fcf9bcc" translate="yes" xml:space="preserve">
          <source>Maybe even turn of the warnings in you &lt;strong&gt;PHP-settings&lt;/strong&gt;</source>
          <target state="translated">多分あなたの&lt;strong&gt;PHP設定で&lt;/strong&gt;警告を無効にする</target>
        </trans-unit>
        <trans-unit id="8c25845f4c6aa9be6cc09862cf6d7717525e2d29" translate="yes" xml:space="preserve">
          <source>More obviously look at your browser address bar for &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;&gt;GET parameters&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;&gt;GETパラメータ&lt;/a&gt;については、より明確にブラウザのアドレスバーを確認してください。</target>
        </trans-unit>
        <trans-unit id="632590870b9b8dd5e18c7973c1ff407c4d5e2fd3" translate="yes" xml:space="preserve">
          <source>Moreover check for &lt;code&gt;enctype=multipart/form-data&lt;/code&gt;</source>
          <target state="translated">さらに、 &lt;code&gt;enctype=multipart/form-data&lt;/code&gt; を確認します</target>
        </trans-unit>
        <trans-unit id="dac7abbd89820a548926b77b55025ac61736164f" translate="yes" xml:space="preserve">
          <source>My solution was this function:</source>
          <target state="translated">私の解答はこの機能でした。</target>
        </trans-unit>
        <trans-unit id="ed67bcb142192eaf807c809ca07a4ed08155d152" translate="yes" xml:space="preserve">
          <source>MySql - Case Sensitive issue of tables in different server</source>
          <target state="translated">MySql-異なるサーバのテーブルのケースセンシティブな問題</target>
        </trans-unit>
        <trans-unit id="5b1cbbd895f50c88d0c3eed758d1cc2078210afd" translate="yes" xml:space="preserve">
          <source>Newcomers won't spot such typos. It just deprives you of PHPs Notices for those very cases. Add &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;isset&lt;/code&gt; only &lt;em&gt;after&lt;/em&gt; verifying functionality.</source>
          <target state="translated">初心者はそのようなタイプミスに気づかないでしょう。 それだけで、そのような場合のPHP通知を奪います。 機能&lt;em&gt;を&lt;/em&gt;確認した&lt;em&gt;後で&lt;/em&gt;のみ &lt;code&gt;@&lt;/code&gt; または &lt;code&gt;isset&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="81156c5ae953b273e3902b4d1ef7ed1837bed552" translate="yes" xml:space="preserve">
          <source>No definite answers but here are a some possible explanations of why settings can 'suddenly' change:</source>
          <target state="translated">明確な答えはありませんが、ここでは設定が「突然」変更されることがある理由について、いくつかの可能性のある説明をします。</target>
        </trans-unit>
        <trans-unit id="91635e35f4abac229c06d3c4f56a5e1d2eafe864" translate="yes" xml:space="preserve">
          <source>No warning is generated if the variable does not exist. That means
     &lt;strong&gt;empty()&lt;/strong&gt; is essentially the concise equivalent to &lt;strong&gt;!isset($var) || $var
     == false&lt;/strong&gt;.</source>
          <target state="translated">変数が存在しない場合、警告は生成されません。 つまり、 &lt;strong&gt;empty（）&lt;/strong&gt;は基本的に&lt;strong&gt;！isset（$ var）||&lt;/strong&gt;と同等の簡潔なもの&lt;strong&gt;です。&lt;/strong&gt; &lt;strong&gt;$ var == false&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6b0307c54533e0402191bd9de7207911fff69c5" translate="yes" xml:space="preserve">
          <source>Note about sessions:</source>
          <target state="translated">セッションについての注意点。</target>
        </trans-unit>
        <trans-unit id="a3d9072383e344f74adaa4c26d762293c7f21c51" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;error_reporting&lt;/code&gt; is actually set to the production value by default, not to the &quot;default&quot; value by default. This is somewhat confusing and is not documented outside of php.ini, so I have &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; validated this on other distributions.</source>
          <target state="translated">&lt;code&gt;error_reporting&lt;/code&gt; は、デフォルトでは「デフォルト」値ではなく、実際には本番値に設定されていることに注意してください。 これはやや混乱を招き、php.ini以外ではドキュメント化されて&lt;strong&gt;&lt;em&gt;いない&lt;/em&gt;&lt;/strong&gt;ため、他のディストリビューションで&lt;strong&gt;&lt;em&gt;は&lt;/em&gt;&lt;/strong&gt;検証して&lt;strong&gt;&lt;em&gt;いません&lt;/em&gt;&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a18f636f6790f6023d9ef12a61b44bde49bf39e" translate="yes" xml:space="preserve">
          <source>Notice: Undefined Index</source>
          <target state="translated">通知しています。未定義インデックス</target>
        </trans-unit>
        <trans-unit id="347423f8dee293ba85c3a8fe5cbc503483329b54" translate="yes" xml:space="preserve">
          <source>Notice: Undefined index / Undefined offset</source>
          <target state="translated">通知します。未定義のインデックス 未定義のオフセット</target>
        </trans-unit>
        <trans-unit id="0a848ce61cfd285740f4e65392d48c13c3678cd3" translate="yes" xml:space="preserve">
          <source>Notice: Undefined index: my_index C:\wamp\www\mypath\index.php on line 11</source>
          <target state="translated">予告します。Undefined index:my_index C:\wampwww\mypathindex.php on line 11</target>
        </trans-unit>
        <trans-unit id="c86994fe562550b3ac31a01f8257ffdbe12b7aae" translate="yes" xml:space="preserve">
          <source>Notice: Undefined offset: 1</source>
          <target state="translated">通知します。未定義のオフセット:1</target>
        </trans-unit>
        <trans-unit id="bd3f07ff172a3a6334217eaf8233e4ca3a6fa3e1" translate="yes" xml:space="preserve">
          <source>Notice: Undefined variable</source>
          <target state="translated">通知しています。未定義の変数</target>
        </trans-unit>
        <trans-unit id="dffcdb1bf04232aee9f0f64e9b2d549ee5d8a369" translate="yes" xml:space="preserve">
          <source>Notice: Undefined variable: my_variable_name in C:\wamp\www\mypath\index.php on line 10</source>
          <target state="translated">予告します。Undefined variable:my_variable_name in C:\wamp\wwwmypath\index.php on line 10</target>
        </trans-unit>
        <trans-unit id="7d1f1845e38876b8ac531f9d0bdc7a346c58ce4b" translate="yes" xml:space="preserve">
          <source>On production servers, error reporting is off, therefore, we do not get these errors.</source>
          <target state="translated">本番サーバでは、エラー報告がオフになっているため、これらのエラーは発生しません。</target>
        </trans-unit>
        <trans-unit id="d3ddf5835c8d2eac6017bef1ae7bdf06b3b4f329" translate="yes" xml:space="preserve">
          <source>On the development server, however, we can set error reporting on.</source>
          <target state="translated">しかし、開発サーバーでは、エラー報告をオンに設定することができます。</target>
        </trans-unit>
        <trans-unit id="de9b316c69dc94f684d15ed8c6cd50a97f8ce602" translate="yes" xml:space="preserve">
          <source>One common cause of a variable not existing after an HTML form has been submitted is the form element is not contained within a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">HTMLフォームの送信後に変数が存在しない一般的な原因の1つは、フォーム要素が &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; タグ内に含まれていないことです。</target>
        </trans-unit>
        <trans-unit id="407a80ff65f0071db8f8e8f3bba93ae3b11886c3" translate="yes" xml:space="preserve">
          <source>Or, as a quick and dirty solution:</source>
          <target state="translated">あるいは、手っ取り早くて汚い解決策として</target>
        </trans-unit>
        <trans-unit id="932814706ab285d220c37b15541fae7978275af9" translate="yes" xml:space="preserve">
          <source>Over time, PHP has become a more security-focused language. Settings which used to be turned off by default are now turned on by default. A perfect example of this is &lt;code&gt;E_STRICT&lt;/code&gt;, which became turned on by default as of &lt;a href=&quot;http://php.net/manual/en/migrating5.errorrep.php&quot;&gt;PHP 5.4.0&lt;/a&gt;.</source>
          <target state="translated">時間の経過とともに、PHPはよりセキュリティ重視の言語になりました。 以前はデフォルトでオフになっていた設定が、デフォルトでオンになりました。 これの完璧な例は &lt;code&gt;E_STRICT&lt;/code&gt; で 、 &lt;a href=&quot;http://php.net/manual/en/migrating5.errorrep.php&quot;&gt;PHP 5.4.0&lt;/a&gt;以降、デフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="642bb433911359f33bc9d33217b34329791b4445" translate="yes" xml:space="preserve">
          <source>PHP has some rules to &lt;a href=&quot;http://php.net/language.variables.external#~dots+and+spaces&quot;&gt;coalesce&lt;/a&gt; non-standard parameter names into the superglobals. Apache might do some rewriting as well. 
You can also look at supplied raw &lt;code&gt;$_COOKIES&lt;/code&gt; and other HTTP request headers that way.</source>
          <target state="translated">PHPには、非標準のパラメーター名をスーパーグローバルに&lt;a href=&quot;http://php.net/language.variables.external#~dots+and+spaces&quot;&gt;合体させる&lt;/a&gt;いくつかのルールがあります。 Apacheもいくつかの書き換えを行う可能性があります。 提供された生の &lt;code&gt;$_COOKIES&lt;/code&gt; および他のHTTPリクエストヘッダーをそのように見ることもできます。</target>
        </trans-unit>
        <trans-unit id="468cd22c7bf987777c7ca1c78f72e4a69678ca93" translate="yes" xml:space="preserve">
          <source>PHP manual PHP 7.0</source>
          <target state="translated">PHPマニュアル PHP 7.0</target>
        </trans-unit>
        <trans-unit id="ad6e15c5f8899d3169fc011909abe340f0f1fe8d" translate="yes" xml:space="preserve">
          <source>POST parameters and GET input will be be shown separately.</source>
          <target state="translated">POSTパラメータとGET入力は別々に表示されます。</target>
        </trans-unit>
        <trans-unit id="c2cd1e437917a8832f63ce25e35e8b9def270e98" translate="yes" xml:space="preserve">
          <source>Probably you were using old PHP version until and now upgraded PHP thats the reason it was working without any error till now from years.
until PHP4 there was no error if you are using variable without defining it but as of PHP5 onwards it throws errors for codes like mentioned in question.</source>
          <target state="translated">PHP4までは、それを定義せずに変数を使用している場合はエラーはありませんでしたが、PHP5以降のように、それは問題に記載されているようなコードのためのエラーをスローします。</target>
        </trans-unit>
        <trans-unit id="8c0360b15395ce861552f8bf4f046a6bb7e18407" translate="yes" xml:space="preserve">
          <source>Q1: this notice means $varname is not
  defined at current scope of the
  script.</source>
          <target state="translated">Q1:この通知は、現在のスクリプトのスコープで $varname が定義されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="e028015e925342efa0fbd5702c6b7abae91ac822" translate="yes" xml:space="preserve">
          <source>Q2: Use of isset(), empty() conditions before using any suspicious variable works well.</source>
          <target state="translated">Q2:不審な変数を使用する前に isset(),empty()条件を使用するとうまく動作します。</target>
        </trans-unit>
        <trans-unit id="45c3dc1c7731c6185824876ed514e54f71bacb64" translate="yes" xml:space="preserve">
          <source>Reference:</source>
          <target state="translated">Reference:</target>
        </trans-unit>
        <trans-unit id="87dd0d554d10df7213c45dfb7bd10e2c88c94018" translate="yes" xml:space="preserve">
          <source>Regarding this part of the question:</source>
          <target state="translated">この部分については</target>
        </trans-unit>
        <trans-unit id="39c788876858d9fdd3ed2ab494830cb7baca1db1" translate="yes" xml:space="preserve">
          <source>Related:</source>
          <target state="translated">Related:</target>
        </trans-unit>
        <trans-unit id="d79a11164c53c32c02f9eb2eae1e5feab5283f4d" translate="yes" xml:space="preserve">
          <source>Relying on the default value of an uninitialized variable is problematic in the case of including one file into another which uses the same variable name. It is also a major &lt;a href=&quot;http://www.php.net/manual/en/security.globals.php&quot;&gt;security risk&lt;/a&gt; with &lt;a href=&quot;http://www.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals&lt;/a&gt; turned on. &lt;a href=&quot;http://www.php.net/manual/en/errorfunc.constants.php#errorfunc.constants.errorlevels.e-notice&quot;&gt;E_NOTICE&lt;/a&gt; level error is issued in case of working with uninitialized variables, however not in the case of appending elements to the uninitialized array. &lt;a href=&quot;http://www.php.net/manual/en/function.isset.php&quot;&gt;isset()&lt;/a&gt; language construct can be used to detect if a variable has been already initialized. Additionally and more ideal is the solution of &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;empty()&lt;/a&gt; since it does not generate a warning or error message if the variable is not initialized.</source>
          <target state="translated">初期化されていない変数のデフォルト値に依存すると、同じ変数名を使用する別のファイルに1つのファイルを含める場合に問題が発生します。 また、 &lt;a href=&quot;http://www.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globalsを&lt;/a&gt;オンにした&lt;a href=&quot;http://www.php.net/manual/en/security.globals.php&quot;&gt;場合の&lt;/a&gt;主要なセキュリティリスクでもあります。 &lt;a href=&quot;http://www.php.net/manual/en/errorfunc.constants.php#errorfunc.constants.errorlevels.e-notice&quot;&gt;E_NOTICE&lt;/a&gt;レベルのエラーは、初期化されていない変数を操作する場合に発行されますが、初期化されていない配列に要素を追加する場合には発行されません。 &lt;a href=&quot;http://www.php.net/manual/en/function.isset.php&quot;&gt;isset（）&lt;/a&gt;言語構造を使用して、変数がすでに初期化されているかどうかを検出できます。 さらに、より理想的なのは、変数が初期化されていない場合に警告またはエラーメッセージを生成しないため、 &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;empty（）の&lt;/a&gt;ソリューションです。</target>
        </trans-unit>
        <trans-unit id="43342253ea2fd553b83e2dcc36f3ccef252aefcc" translate="yes" xml:space="preserve">
          <source>Rewrite your code to be cleaner. If you need to do this while moving to a production environment or don't want someone to see your errors, make sure you are disabling any display of errors, and only &lt;strong&gt;logging&lt;/strong&gt; your errors (see &lt;code&gt;display_errors&lt;/code&gt; and &lt;code&gt;log_errors&lt;/code&gt; in php.ini and your server settings).</source>
          <target state="translated">よりクリーンになるようにコードを書き直してください。 本番環境への移行中にこれを行う必要がある場合、または誰かにエラーを表示させたくない場合は、エラーの表示を無効にし、エラーのみを&lt;strong&gt;ログに記録し&lt;/strong&gt;ていることを確認してください（php.iniとサーバーの &lt;code&gt;display_errors&lt;/code&gt; と &lt;code&gt;log_errors&lt;/code&gt; を参照）設定）。</target>
        </trans-unit>
        <trans-unit id="9a92e36176f5db7ee31b20941db9df36f1d45494" translate="yes" xml:space="preserve">
          <source>Secondly, if the notice doesn't have an obvious cause, use  &lt;a href=&quot;http://php.net/var_dump&quot;&gt;&lt;code&gt;var_dump&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/print_r&quot;&gt;&lt;code&gt;print_r&lt;/code&gt;&lt;/a&gt; to verify &lt;strong&gt;all&lt;/strong&gt; input arrays for their curent content:</source>
          <target state="translated">次に、通知に明らかな原因がない場合は、 &lt;a href=&quot;http://php.net/var_dump&quot;&gt; &lt;code&gt;var_dump&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;http://php.net/print_r&quot;&gt; &lt;code&gt;print_r&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;strong&gt;すべての&lt;/strong&gt;入力配列の現在の内容を確認&lt;strong&gt;し&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="104dcb0bb2892b25d57f4ea36672fdececf8a6d9" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://stackoverflow.com/questions/11200843/php-undefined-index-error-files&quot;&gt;PHP Undefined index error $_FILES?&lt;/a&gt;</source>
          <target state="translated">参照： &lt;a href=&quot;https://stackoverflow.com/questions/11200843/php-undefined-index-error-files&quot;&gt;PHP未定義のインデックスエラー$ _FILES？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea1e8440f7ef9d201cff3d6730628da0babbc671" translate="yes" xml:space="preserve">
          <source>Set a &lt;a href=&quot;http://www.php.net/manual/en/function.set-error-handler.php&quot;&gt;custom error handler&lt;/a&gt; for E_NOTICE and redirect the messages away from the standard output (maybe to a log file):</source>
          <target state="translated">E_NOTICEの&lt;a href=&quot;http://www.php.net/manual/en/function.set-error-handler.php&quot;&gt;カスタムエラーハンドラー&lt;/a&gt;を設定し、メッセージを標準出力から（おそらくログファイルに）リダイレクトします。</target>
        </trans-unit>
        <trans-unit id="38c6436bbe37b65fd4cff25daad2075086a89c7d" translate="yes" xml:space="preserve">
          <source>So if I want to reference to $name and echo if exists, I simply write:</source>
          <target state="translated">なので、$nameを参照して、存在するかどうかをエコーしたい場合は、単に書くだけです。</target>
        </trans-unit>
        <trans-unit id="36072e33dcedcd91ed319b8401b07e997a0d16ce" translate="yes" xml:space="preserve">
          <source>So, basically, its always better to set error reporting ON for development.</source>
          <target state="translated">そのため、基本的には開発時にはエラー報告をONにした方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="dd907facc72be388b97bc97f9d4de9e44bdb66aa" translate="yes" xml:space="preserve">
          <source>So, we can modify the code as:</source>
          <target state="translated">というようにコードを修正します。</target>
        </trans-unit>
        <trans-unit id="cf2bd1f0ac3ac90004a4067972d328400ddac0a0" translate="yes" xml:space="preserve">
          <source>Solve the bugs:</source>
          <target state="translated">バグを解決する。</target>
        </trans-unit>
        <trans-unit id="6b419dc38af7fbcf78327fa02d54ae5b28da5e3d" translate="yes" xml:space="preserve">
          <source>Something else that needs to be noted is that on a *NIX OS and Mac OS X, things are case-sensitive.</source>
          <target state="translated">もう一つ注意しなければならないのは、*NIX OSやMac OS Xでは大文字と小文字が区別されるということです。</target>
        </trans-unit>
        <trans-unit id="694d6f01f2fae6b518767de72285500e452c5b00" translate="yes" xml:space="preserve">
          <source>Suppress the error with the &lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;@ operator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;@演算子&lt;/a&gt;を使用してエラーを抑制します。</target>
        </trans-unit>
        <trans-unit id="d6c82f9f3e2c37a512e35fed74133603600a813b" translate="yes" xml:space="preserve">
          <source>Test the above snippet in the &lt;a href=&quot;https://3v4l.org/5Wvgj&quot;&gt;3v4l.org online PHP editor&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://3v4l.org/5Wvgj&quot;&gt;3v4l.orgオンラインPHPエディター&lt;/a&gt;で上記のスニペットをテストします</target>
        </trans-unit>
        <trans-unit id="ecaa6602d829b8f8420a1c0f03fb5203f8df225e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$_COOKIE&lt;/code&gt; array is never populated right after &lt;code&gt;setcookie()&lt;/code&gt;, but only on any followup HTTP request.</source>
          <target state="translated">&lt;code&gt;$_COOKIE&lt;/code&gt; 配列は &lt;code&gt;setcookie()&lt;/code&gt; の直後に入力されることはなく、フォローアップHTTPリクエストでのみ入力されます。</target>
        </trans-unit>
        <trans-unit id="3c56358ec3894d19d1d4eb5fffcd7f449a0224ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id=&lt;/code&gt; or &lt;code&gt;title=&lt;/code&gt; attribute does not suffice.</source>
          <target state="translated">&lt;code&gt;id=&lt;/code&gt; または &lt;code&gt;title=&lt;/code&gt; 属性では不十分です。</target>
        </trans-unit>
        <trans-unit id="5475a2d023a0d2c6629d8227920dd0c2120230f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name=value&lt;/code&gt; pairs after the &lt;code&gt;?&lt;/code&gt; question mark are your query (GET) parameters. Thus this URL could only possibly yield &lt;code&gt;$_GET[&quot;id&quot;]&lt;/code&gt; and &lt;code&gt;$_GET[&quot;sort&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; の後の &lt;code&gt;name=value&lt;/code&gt; ペア 疑問符はクエリ（GET）パラメータです。 したがって、このURLは &lt;code&gt;$_GET[&quot;id&quot;]&lt;/code&gt; および &lt;code&gt;$_GET[&quot;sort&quot;]&lt;/code&gt; しか生成できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="537926253495da54f07300390caa8999eb35d143" translate="yes" xml:space="preserve">
          <source>The above code will create error as The if loop is not satisfied and in the else loop '$user_location' was not defined. Still PHP was asked to echo out the variable. So to modify the code you must do the following:</source>
          <target state="translated">上記のコードでは、 if ループが満たされておらず、 else ループでは '$user_location' が定義されていないため、エラーが発生します。それでもPHPは変数をエコーアウトするように求められました。そのため、コードを修正するには、次のようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="ff2229b18be9c131810bf4ce48302ea9132957ba" translate="yes" xml:space="preserve">
          <source>The above will work just the same with arrays, including sessions etc, replacing the variable being checked with e.g.:</source>
          <target state="translated">上記は、セッションなどを含む配列でも同じように動作します。</target>
        </trans-unit>
        <trans-unit id="b048f95530d7c64aa0abe42c8d504702a81859eb" translate="yes" xml:space="preserve">
          <source>The best way for getting input &lt;strong&gt;string&lt;/strong&gt; is:</source>
          <target state="translated">入力&lt;strong&gt;文字列&lt;/strong&gt;を取得する最良の方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2e7a342aa025b66b97e7d078cc07babad37f5579" translate="yes" xml:space="preserve">
          <source>The best way to deal with these is set error reporting on while development.</source>
          <target state="translated">これらの対処法としては、開発中にエラー報告をオンにしておくことです。</target>
        </trans-unit>
        <trans-unit id="8f202fd6dffea7f55e5915cd84401305b3545108" translate="yes" xml:space="preserve">
          <source>The language construct &lt;a href=&quot;http://php.net/manual/en/function.list.php&quot;&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; may generate this when it attempts to access an array index that does not exist:</source>
          <target state="translated">言語コンストラクト&lt;a href=&quot;http://php.net/manual/en/function.list.php&quot;&gt; &lt;code&gt;list()&lt;/code&gt; &lt;/a&gt;は、存在しない配列インデックスにアクセスしようとすると、これを生成する場合があります。</target>
        </trans-unit>
        <trans-unit id="a0cc344971806481306ad72b408a64497fee5923" translate="yes" xml:space="preserve">
          <source>The manual states the following basic syntax:</source>
          <target state="translated">マニュアルには、以下のような基本的な構文が記載されています。</target>
        </trans-unit>
        <trans-unit id="f41d9148a95ae84740101b0f703243664daa5302" translate="yes" xml:space="preserve">
          <source>The mistake is you are using a variable &lt;code&gt;$user_location&lt;/code&gt; which is not defined by you earlier and it doesn't have any value So I recommend you to please &lt;strong&gt;declare&lt;/strong&gt; this variable &lt;strong&gt;before&lt;/strong&gt;&lt;strong&gt;using&lt;/strong&gt; it, For Example:</source>
          <target state="translated">間違いは、以前に定義していない変数 &lt;code&gt;$user_location&lt;/code&gt; を使用していて、値がないためです。たとえば、次のように、 &lt;strong&gt;使用&lt;/strong&gt;する&lt;strong&gt;前に&lt;/strong&gt;この変数を&lt;strong&gt;宣言する&lt;/strong&gt;ことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="365614d5705739a89a49940148d1c78a6bc39208" translate="yes" xml:space="preserve">
          <source>The notices above appear often when working with &lt;code&gt;$_POST&lt;/code&gt;, &lt;code&gt;$_GET&lt;/code&gt; or &lt;code&gt;$_SESSION&lt;/code&gt;. For &lt;code&gt;$_POST&lt;/code&gt; and &lt;code&gt;$_GET&lt;/code&gt; you just have to check if the index exists or not before you use them. For &lt;code&gt;$_SESSION&lt;/code&gt; you have to make sure you have the session started with &lt;a href=&quot;http://php.net/manual/en/function.session-start.php&quot;&gt;&lt;code&gt;session_start()&lt;/code&gt;&lt;/a&gt; and that the index also exists.</source>
          <target state="translated">上記の通知は、 &lt;code&gt;$_POST&lt;/code&gt; 、 &lt;code&gt;$_GET&lt;/code&gt; または &lt;code&gt;$_SESSION&lt;/code&gt; 使用するときに頻繁に表示されます。 &lt;code&gt;$_POST&lt;/code&gt; および &lt;code&gt;$_GET&lt;/code&gt; 場合、使用する前にインデックスが存在するかどうかを確認する必要があります。 &lt;code&gt;$_SESSION&lt;/code&gt; 場合、セッションが&lt;a href=&quot;http://php.net/manual/en/function.session-start.php&quot;&gt; &lt;code&gt;session_start()&lt;/code&gt; で&lt;/a&gt;開始されていること、およびインデックスが存在することを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="1303d76056f9e379b64dd9d48ae0e0a06e708f16" translate="yes" xml:space="preserve">
          <source>The obvious/simplest answer is that someone adjusted either of these settings in php.ini, or an upgraded version of PHP is now using a different php.ini from before. That's the first place to look.</source>
          <target state="translated">最も簡単な答えは、誰かがphp.iniでこれらの設定のいずれかを調整したか、アップグレードされたバージョンのPHPが以前とは異なるphp.iniを使用しているということです。それが最初に探すべき場所です。</target>
        </trans-unit>
        <trans-unit id="376eadba6f8edb5bd20bcd426796e9bebd194975" translate="yes" xml:space="preserve">
          <source>The other critical setting is the errors can be hidden (i.e. &lt;code&gt;display_errors&lt;/code&gt; set to &quot;off&quot; or &quot;syslog&quot;).</source>
          <target state="translated">その他の重要な設定は、エラーを非表示にできることです（つまり、 &lt;code&gt;display_errors&lt;/code&gt; を「off」または「syslog」に設定）。</target>
        </trans-unit>
        <trans-unit id="a75e2610ffdef28c345b5a4fd3a2c743b87a8b13" translate="yes" xml:space="preserve">
          <source>The same except using &lt;a href=&quot;http://php.net/manual/en/migration70.new-features.php#migration70.new-features.null-coalesce-op&quot;&gt;Null Coalescing Operator&lt;/a&gt;. There's no longer a need to call &lt;code&gt;isset()&lt;/code&gt; as this is built in, and no need to provide the variable to return as it's assumed to return the value of the variable being checked:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/migration70.new-features.php#migration70.new-features.null-coalesce-op&quot;&gt;Null Coalescing Operator&lt;/a&gt;を使用する以外は同じです。 これは組み込みなので、 &lt;code&gt;isset()&lt;/code&gt; を呼び出す必要はなくなりました。また、チェックされる変数の値を返すと想定されているため、返す変数を提供する必要もありません。</target>
        </trans-unit>
        <trans-unit id="e753cdaa9733caa08b0ad78fac8b93c3f850d4e4" translate="yes" xml:space="preserve">
          <source>The same sanity checks apply to file uploads and &lt;code&gt;$_FILES[&quot;formname&quot;]&lt;/code&gt;.</source>
          <target state="translated">ファイルのアップロードと &lt;code&gt;$_FILES[&quot;formname&quot;]&lt;/code&gt; 同じ健全性チェックが適用されます。</target>
        </trans-unit>
        <trans-unit id="42ef8750d67ad52eff9e5e5b10e547c06bfd10a0" translate="yes" xml:space="preserve">
          <source>Then trying to access more columns/rows inside a loop.</source>
          <target state="translated">そして、ループ内でより多くのcolumnrowsにアクセスしようとしています。</target>
        </trans-unit>
        <trans-unit id="fa53eaa4beaf8499274fd1778a100d7fe5d72b04" translate="yes" xml:space="preserve">
          <source>There is also the added complication that the web server configuration can enable/disable .htaccess directives, so if you have directives in .htaccess that suddenly start/stop working then you need to check for that.</source>
          <target state="translated">また、ウェブサーバの設定で .htaccess のディレクティブを有効にすることができるので、もし .htaccess のディレクティブが突然動作を停止してしまう場合は、それをチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="2d4690476a4f0e6d694d6749cbadb3b86233be17" translate="yes" xml:space="preserve">
          <source>There's one upside over the &lt;code&gt;isset?:&lt;/code&gt; or &lt;code&gt;??&lt;/code&gt; super-supression however. Notices still can get logged. And one may resurrect &lt;code&gt;@&lt;/code&gt;-hidden notices with: &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;isset?:&lt;/code&gt; 1つの逆さまがありますか &lt;code&gt;??&lt;/code&gt; ：または?? しかし超抑圧。 通知は引き続きログに記録されます。 また、 &lt;code&gt;@&lt;/code&gt; -hidden通知を次のように復活させることもできます： &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="610f7df0df63664bc16df3ce3be5540b89479d0c" translate="yes" xml:space="preserve">
          <source>These errors occur whenever we are using a variable that is not set.</source>
          <target state="translated">これらのエラーは、設定されていない変数を使用している場合に発生します。</target>
        </trans-unit>
        <trans-unit id="a242e7b9e37860f997ff8ec6dacfbc38200a6a40" translate="yes" xml:space="preserve">
          <source>This has become much cleaner as of PHP 7.0, now you can use the &lt;a href=&quot;https://wiki.php.net/rfc/isset_ternary&quot;&gt;null coalesce operator&lt;/a&gt;:</source>
          <target state="translated">これはPHP 7.0の時点ではるかに明確になりました。これで&lt;a href=&quot;https://wiki.php.net/rfc/isset_ternary&quot;&gt;null合体演算子を&lt;/a&gt;使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="c62d73e2f27e33c2b5cf4dbfaee5abce2ccd0549" translate="yes" xml:space="preserve">
          <source>This is a very common error you can face.So don't worry just declare the variable and &lt;strong&gt;Enjoy Coding&lt;/strong&gt;.</source>
          <target state="translated">これはあなたが直面する可能性のある非常に一般的なエラーです。そのため、変数を宣言して、 &lt;strong&gt;Enjoy Codingを&lt;/strong&gt;心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="546cc1f08cbe64dbb8a79b3b1650c727f7ad1883" translate="yes" xml:space="preserve">
          <source>This is the error:</source>
          <target state="translated">これがエラーです。</target>
        </trans-unit>
        <trans-unit id="7ff966243afce1a7d902755c52d1b1b30ab8fe9d" translate="yes" xml:space="preserve">
          <source>This is usually discouraged. Newcomers tend to way overuse it.</source>
          <target state="translated">これは、通常は推奨されていません。新参者はそれを使いすぎてしまう傾向があります。</target>
        </trans-unit>
        <trans-unit id="36f2f603cf8e92c13666ec1e8a17ad3d38c3e166" translate="yes" xml:space="preserve">
          <source>This means that you could use only &lt;code&gt;empty()&lt;/code&gt; to determine if the variable is set, and in addition it checks the variable against the following, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;0.0&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;&quot;0&quot;&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">つまり、 &lt;code&gt;empty()&lt;/code&gt; のみを使用して変数が設定されているかどうかを判断でき、さらに、 &lt;code&gt;0.0&lt;/code&gt; 、 &lt;code&gt;&quot;&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;0&quot;&lt;/code&gt; 、 &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;false&lt;/code&gt; または &lt;code&gt;[]&lt;/code&gt; に対して変数をチェックします。</target>
        </trans-unit>
        <trans-unit id="b2964725d242f957a205bf9c81be748ed179c898" translate="yes" xml:space="preserve">
          <source>This notice appears when you (or PHP) try to access an undefined index of an array.</source>
          <target state="translated">この通知は、配列の未定義のインデックスにアクセスしようとしたときに表示されます。</target>
        </trans-unit>
        <trans-unit id="2f77747d9f5e582edfa13077c2f58ea6f57ce527" translate="yes" xml:space="preserve">
          <source>This one-liner is almost equivalent to:</source>
          <target state="translated">このワンライナーはほぼ同等です。</target>
        </trans-unit>
        <trans-unit id="529e7d3c2e538b5d52219d1235d17f9c6f3feac3" translate="yes" xml:space="preserve">
          <source>This question already has an answer here:</source>
          <target state="translated">この質問はすでにここに答えがあります。</target>
        </trans-unit>
        <trans-unit id="dae2510804613c4a9f8613363dc92fe4709d144a" translate="yes" xml:space="preserve">
          <source>This will not disturb any program logic and will not produce Notice even if &lt;code&gt;$test&lt;/code&gt; does not have value.</source>
          <target state="translated">これは、 &lt;code&gt;$test&lt;/code&gt; 値がない場合でも、プログラムロジックを妨害せず、通知を生成しません。</target>
        </trans-unit>
        <trans-unit id="7d0ff90ff438f8ccf24aee8c2d3fc219626d14b2" translate="yes" xml:space="preserve">
          <source>Those notices are because you don't have the used variable &lt;code&gt;defined&lt;/code&gt; and &lt;code&gt;my_index&lt;/code&gt; key was not present into &lt;code&gt;$my_array&lt;/code&gt; variable.</source>
          <target state="translated">これらの通知は、使用された変数が &lt;code&gt;defined&lt;/code&gt; れておらず、 &lt;code&gt;my_index&lt;/code&gt; キーが &lt;code&gt;$my_array&lt;/code&gt; 変数に存在しなかったためです。</target>
        </trans-unit>
        <trans-unit id="26dce8f11e609f7f5dc0f8bff4d78aeefc24d0cd" translate="yes" xml:space="preserve">
          <source>Those notices were triggered every time, because your &lt;code&gt;code&lt;/code&gt; is not correct, but probably you didn't have the reporting of notices on.</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; が正しくないため、これらの通知は毎回トリガーされましたが、おそらく通知のレポートがありませんでした。</target>
        </trans-unit>
        <trans-unit id="1f393d7ff7fa821ea12b82653454936d213304bf" translate="yes" xml:space="preserve">
          <source>To answer your question, however, this error pops up now when it did not pop up before because:</source>
          <target state="translated">しかし、あなたの質問に答えるために、このエラーは以前はポップアップしなかったのに、今ではポップアップします。</target>
        </trans-unit>
        <trans-unit id="cdf65b738829366dbcfa0a49c6003855e28f50a8" translate="yes" xml:space="preserve">
          <source>To expand on option 3: This is the ideal. If you can go this route, you should. If you are not going this route initially, consider moving this route eventually by testing your code in a development environment. While you're at it, get rid of &lt;code&gt;~E_STRICT&lt;/code&gt; and &lt;code&gt;~E_DEPRECATED&lt;/code&gt; to see what might go wrong in the future. You're going to see a LOT of unfamiliar errors, but it's going to stop you from having any unpleasant problems when you need to upgrade PHP in the future.</source>
          <target state="translated">オプション3を拡張するには、これが理想的です。 このルートに行けるなら、そうすべきです。 最初にこのルートを使用しない場合は、開発環境でコードをテストして、最終的にこのルートを移動することを検討してください。 その間、 &lt;code&gt;~E_STRICT&lt;/code&gt; および〜E_DEPRECATEDを削除して、将来何が問題になるかを確認します。 見慣れないエラーがたくさん表示されますが、将来的にPHPをアップグレードする必要があるときに、不愉快な問題が発生するのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="094906bab7d44cc6f366e6c60757198980fdd5c4" translate="yes" xml:space="preserve">
          <source>To get rid of this error, we see the following example:</source>
          <target state="translated">このエラーを取り除くには、以下の例を参照してください。</target>
        </trans-unit>
        <trans-unit id="e46e0fd0dc9fc8f9ff712783134beba6ae2a3302" translate="yes" xml:space="preserve">
          <source>To set error reporting on:</source>
          <target state="translated">エラー報告をオンに設定するには</target>
        </trans-unit>
        <trans-unit id="3824c138f15d6133079f7888d6ee7a4cdd5353d0" translate="yes" xml:space="preserve">
          <source>Try these</source>
          <target state="translated">これらを試してみてください。</target>
        </trans-unit>
        <trans-unit id="04c5e65889040cdd256841f71aea99622c36d5db" translate="yes" xml:space="preserve">
          <source>Turn off &lt;code&gt;E_NOTICE&lt;/code&gt; by copying the &quot;Default value&quot; &lt;code&gt;E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; and replacing it with what is currently uncommented after the equals sign in &lt;code&gt;error_reporting =&lt;/code&gt;. Restart Apache, or PHP if using CGI or FPM. Make sure you are editing the &quot;right&quot; php.ini. The correct one will be Apache if you are running PHP with Apache, fpm or php-fpm if running PHP-FPM, cgi if running PHP-CGI, etc. This is not the recommended method, but if you have legacy code that's going to be exceedingly difficult to edit, then it might be your best bet.</source>
          <target state="translated">「デフォルト値」 &lt;code&gt;E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; をコピーしてE_NOTICEをオフにし、 &lt;code&gt;error_reporting =&lt;/code&gt; の等号の後に現在コメントされていないものに置き換えます 。 Apache、またはCGIまたはFPMを使用している場合はPHPを再起動します。 「正しい」php.iniを編集していることを確認してください。 正しい方法は、ApacheでPHPを実行している場合はApache、PHP-FPMを実行している場合はfpmまたはphp-fpm、PHP-CGIを実行している場合はcgiなどです。これは推奨される方法ではありませんが、編集が非常に難しい場合は、最善の策かもしれません。</target>
        </trans-unit>
        <trans-unit id="fad49f8502febfcd91e4aef4ad474815b9e63622" translate="yes" xml:space="preserve">
          <source>Turn off &lt;code&gt;E_NOTICE&lt;/code&gt; on the file or folder level. This might be preferable if you have some legacy code but want to do things the &quot;right&quot; way otherwise. To do this, you should consult Apache2, Nginx, or whatever your server of choice is. In Apache, you would use &lt;code&gt;php_value&lt;/code&gt; inside of &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">ファイルまたはフォルダレベルで &lt;code&gt;E_NOTICE&lt;/code&gt; をオフにします。 これは、レガシーコードがいくつかあるが、そうでない場合は「正しい」方法で処理したい場合に適しています。 これを行うには、Apache2、Nginx、または選択したサーバーが何であれ調べてください。 Apacheでは、 &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; 内で &lt;code&gt;php_value&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="5d5ed957309764841554d8b8cb88350227d87b01" translate="yes" xml:space="preserve">
          <source>Two variables are used to access two array elements, however there is only one array element, index &lt;code&gt;0&lt;/code&gt;, so this will generate:</source>
          <target state="translated">2つの変数を使用して2つの配列要素にアクセスしますが、配列要素は1つしかなく、インデックス &lt;code&gt;0&lt;/code&gt; なので 、次のように生成されます。</target>
        </trans-unit>
        <trans-unit id="e0e5d8fc0ef63edac5e7143fdf3e1855a5dac9d5" translate="yes" xml:space="preserve">
          <source>UPDATE 1: The problem is that when executing &lt;code&gt;$citiesCounterArray[$key]&lt;/code&gt;, sometimes the &lt;code&gt;$key&lt;/code&gt; corresponds to a key that does not exist in the &lt;code&gt;$citiesCounterArray&lt;/code&gt; array, but that is not always the case based on the data of my loop. What I need is to set a condition so that if &lt;code&gt;$key&lt;/code&gt; exists in the array, then run the code, otherwise, skip it.</source>
          <target state="translated">更新1：問題は、 &lt;code&gt;$citiesCounterArray[$key]&lt;/code&gt; 実行すると、 &lt;code&gt;$key&lt;/code&gt; が &lt;code&gt;$citiesCounterArray&lt;/code&gt; 配列に存在しないキーに対応することがありますが、ループのデータに基づいているとは限りません。 &lt;code&gt;$key&lt;/code&gt; が配列に存在する場合はコードを実行するように条件を設定する必要があります。それ以外の場合はスキップしてください。</target>
        </trans-unit>
        <trans-unit id="9ec6c14130d525ead0c2ea871193c581934d54f1" translate="yes" xml:space="preserve">
          <source>UPDATE 2: This is how I fixed it by using &lt;code&gt;array_key_exists()&lt;/code&gt;:</source>
          <target state="translated">更新2：これは、 &lt;code&gt;array_key_exists()&lt;/code&gt; を使用して修正した方法です。</target>
        </trans-unit>
        <trans-unit id="2bf6727023f25222e9c74a2bf96494095dbea5eb" translate="yes" xml:space="preserve">
          <source>Using a &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;ternary&lt;/a&gt; is simple, readable, and clean:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;三項の&lt;/a&gt;使用はシンプルで読みやすく、クリーンです。</target>
        </trans-unit>
        <trans-unit id="86a26ccd5642751a609fef60b7dd337f337a2cc3" translate="yes" xml:space="preserve">
          <source>Usually notices don't get displayed / reported (see &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;PHP manual&lt;/a&gt;)
so it is possible that when setting up the server, the php.ini file could not be loaded for some reason (file permissions??) and you were on the default settings. Later on, the 'bug' has been solved (by accident) and now it CAN load the correct php.ini file with the error_reporting set to show notices.</source>
          <target state="translated">通常、通知は表示/レポートされません（ &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;PHPマニュアルを&lt;/a&gt;参照）ため、サーバーのセットアップ時に、何らかの理由（ファイルのアクセス権？ 。 後で、「バグ」は（偶然に）解決され、error_reportingが設定された正しいphp.iniファイルをロードして、通知を表示できるようになりました。</target>
        </trans-unit>
        <trans-unit id="d24530c166702c7232b213cc8246a8e83fd5322f" translate="yes" xml:space="preserve">
          <source>Variable names &lt;strong&gt;and&lt;/strong&gt; array indicies are case-sensitive in PHP.</source>
          <target state="translated">変数名&lt;strong&gt;と&lt;/strong&gt;配列インデックスは、PHPでは大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="912e179cc09cc88b4ce8f95c30a8269848354e3e" translate="yes" xml:space="preserve">
          <source>WHAT CAN I DO ABOUT IT?</source>
          <target state="translated">どうしたらいいですか?</target>
        </trans-unit>
        <trans-unit id="f116b7027271c72eac0333114826b4935b0862bd" translate="yes" xml:space="preserve">
          <source>WHAT DO THE ERRORS MEAN?</source>
          <target state="translated">エラーの意味は?</target>
        </trans-unit>
        <trans-unit id="01acd73d35339d7dfe2443f4aa5a7d86cf9c0843" translate="yes" xml:space="preserve">
          <source>WHY IS THIS HAPPENING?</source>
          <target state="translated">なぜこんなことになっているのか?</target>
        </trans-unit>
        <trans-unit id="f4b8c27564705b305bacd1f667594409201c48e9" translate="yes" xml:space="preserve">
          <source>Ways to deal with the issue:</source>
          <target state="translated">問題に対処する方法</target>
        </trans-unit>
        <trans-unit id="c5ad5e6704299d9f5c147a65c43665667dece0d2" translate="yes" xml:space="preserve">
          <source>We can check variable is defined or not in very efficient way!.</source>
          <target state="translated">変数が定義されているかどうかを効率よくチェックできます。</target>
        </trans-unit>
        <trans-unit id="338ef7a73886bf3bfc39e571370b27349815667c" translate="yes" xml:space="preserve">
          <source>We can initialize the variables to &lt;code&gt;NULL&lt;/code&gt; before assigning their values or using them.</source>
          <target state="translated">値を割り当てる前、または使用する前に、変数を &lt;code&gt;NULL&lt;/code&gt; に初期化できます。</target>
        </trans-unit>
        <trans-unit id="9ddce272e98389fe0e948221dee276e4cbbec29d" translate="yes" xml:space="preserve">
          <source>What is the meaning of these error messages?</source>
          <target state="translated">これらのエラーメッセージの意味を教えてください。</target>
        </trans-unit>
        <trans-unit id="c6e7ff943dd48acccebc4fe59031f4d94dd3f80d" translate="yes" xml:space="preserve">
          <source>What will have happened in this case is that either the &lt;code&gt;error_reporting&lt;/code&gt; was changed to also show notices (as per examples) and/or that the settings were changed to &lt;code&gt;display_errors&lt;/code&gt; on screen (as opposed to suppressing them/logging them).</source>
          <target state="translated">この場合に発生するのは、 &lt;code&gt;error_reporting&lt;/code&gt; が（例に従って）通知も表示するように変更されたか、設定が画面上で &lt;code&gt;display_errors&lt;/code&gt; に変更された（それらを抑制する/ログに記録するのではなく）ことです。</target>
        </trans-unit>
        <trans-unit id="fc90694c7f9e38f9e4e15e33a7a837dea215728c" translate="yes" xml:space="preserve">
          <source>When I was encountering these and other issues, I used &lt;a href=&quot;https://netbeans.org/&quot;&gt;NetBeans IDE&lt;/a&gt; (free) and it gave me a host of warnings and notices. Some of them offer very helpful tips. This is not a requirement, and I don't use IDEs anymore except for large projects. I'm more of a &lt;code&gt;vim&lt;/code&gt; person these days :).</source>
          <target state="translated">これらの問題やその他の問題に遭遇したとき、私は&lt;a href=&quot;https://netbeans.org/&quot;&gt;NetBeans IDE&lt;/a&gt; （無料）を使用しました。 それらのいくつかは非常に役立つヒントを提供します。 これは必須ではなく、大規模なプロジェクト以外ではIDEを使用しません。 私は最近、 &lt;code&gt;vim&lt;/code&gt; の人になりました:)。</target>
        </trans-unit>
        <trans-unit id="e602b956524c545d1490322fb189dd18dc6a526a" translate="yes" xml:space="preserve">
          <source>When dealing with files, a proper enctype and a POST method are required, which will trigger an undefined index notice if either are not included in the form.</source>
          <target state="translated">ファイルを扱う際には、適切な enctype と POST メソッドが必要となります。</target>
        </trans-unit>
        <trans-unit id="75f1dfbc928b0ef0f4f2433279161b0b99c3534d" translate="yes" xml:space="preserve">
          <source>When using sessions, &lt;code&gt;session_start();&lt;/code&gt; is required to be placed inside all files using sessions.</source>
          <target state="translated">セッションを使用する場合、 &lt;code&gt;session_start();&lt;/code&gt; セッションを使用してすべてのファイル内に配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="6f3141d1c6a51843178f64998c3976cdbb37f35e" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;code&gt;method=GET&lt;/code&gt; (or leaving it out) would yield &lt;code&gt;$_GET&lt;/code&gt; variables.</source>
          <target state="translated">一方、 &lt;code&gt;method=GET&lt;/code&gt; （または &lt;code&gt;$_GET&lt;/code&gt; ）の場合、 $ _ GET変数が生成されます。</target>
        </trans-unit>
        <trans-unit id="f71ba47027addf0c844f9adba2379fa962b8ceac" translate="yes" xml:space="preserve">
          <source>Why do they appear all of a sudden? I used to use this script for years and I've never had any problem.</source>
          <target state="translated">なぜ突然出てくるのでしょうか?何年も前からこのスクリプトを使っていましたが、何の問題もありませんでした。</target>
        </trans-unit>
        <trans-unit id="5f3a0ac29b29bb43640449d84a6af6215f02572f" translate="yes" xml:space="preserve">
          <source>With modern PHP configurations (&amp;ge; 5.6) it has become &lt;a href=&quot;https://stackoverflow.com/questions/2142497/whats-wrong-with-using-request&quot;&gt;feasible&lt;/a&gt; (not fashionable) to use &lt;a href=&quot;http://php.net/reserved.variables.request&quot;&gt;&lt;code&gt;$_REQUEST['vars']&lt;/code&gt;&lt;/a&gt; again, which mashes GET and POST params.</source>
          <target state="translated">最新のPHP構成（ &lt;a href=&quot;http://php.net/reserved.variables.request&quot;&gt; &lt;code&gt;$_REQUEST['vars']&lt;/code&gt; &lt;/a&gt; ）では、GETおよびPOST パラメーターをマッシュする$ _REQUEST ['vars']を再び使用することが&lt;a href=&quot;https://stackoverflow.com/questions/2142497/whats-wrong-with-using-request&quot;&gt;実現可能になりました&lt;/a&gt; （ファッショナブルではなくなりました）。</target>
        </trans-unit>
        <trans-unit id="a1c129010c6b6c6343d2d728ed3f8853160d3aad" translate="yes" xml:space="preserve">
          <source>You changed the webserver configuration (assuming apache here): &lt;code&gt;.htaccess&lt;/code&gt; files and vhost configurations can also manipulate php settings.</source>
          <target state="translated">Webサーバーの構成を変更しました（ここではapacheを想定しています） &lt;code&gt;.htaccess&lt;/code&gt; ファイルとvhostの構成でもphpの設定を操作できます。</target>
        </trans-unit>
        <trans-unit id="3b4fced5e709e30bbfcf4c68990b75c80763f5b0" translate="yes" xml:space="preserve">
          <source>You have removed or introduced some code (possibly in a dependency) that sets relevant settings at runtime using &lt;code&gt;ini_set()&lt;/code&gt; or &lt;code&gt;error_reporting()&lt;/code&gt; (search for these in the code)</source>
          <target state="translated">実行時に &lt;code&gt;ini_set()&lt;/code&gt; または &lt;code&gt;error_reporting()&lt;/code&gt; を使用して関連設定を設定する（おそらく依存関係にある）コードを削除または導入しました（コードでこれらを検索します）</target>
        </trans-unit>
        <trans-unit id="69968b7d6a5a3f2c642fe12286888d9b81786282" translate="yes" xml:space="preserve">
          <source>You have upgraded PHP to a newer version which can have other defaults for error_reporting, display_errors or other relevant settings.</source>
          <target state="translated">PHP を新しいバージョンにアップグレードした場合、error_reporting や display_errors、その他関連する設定のデフォルトを設定することができます。</target>
        </trans-unit>
        <trans-unit id="7984239a557e68cdcc4c9f7fdc82e765dac0c254" translate="yes" xml:space="preserve">
          <source>You installed PHP and the new default settings are somewhat poorly documented but do not exclude &lt;code&gt;E_NOTICE&lt;/code&gt;.</source>
          <target state="translated">PHPをインストールし、新しいデフォルト設定の文書化がやや不十分ですが、 &lt;code&gt;E_NOTICE&lt;/code&gt; を除外していません。</target>
        </trans-unit>
        <trans-unit id="9c6f1e94030aa7bce1aaede4251410298ef8b399" translate="yes" xml:space="preserve">
          <source>You should really be checking for this issue and handling it appropriately, either serving a different message, or even just returning a null value for everything else to identify the precise state.</source>
          <target state="translated">この問題をチェックして適切に処理し、別のメッセージを提供するか、正確な状態を特定するために他のすべてのものにNULL値を返すだけにするべきです。</target>
        </trans-unit>
        <trans-unit id="b66267e9d806cae79e8954617ea907a8c9c827ca" translate="yes" xml:space="preserve">
          <source>Your code will be -</source>
          <target state="translated">あなたのコードは</target>
        </trans-unit>
        <trans-unit id="bdfad304004b547e14b9421e88ba6121b6614ac4" translate="yes" xml:space="preserve">
          <source>and any of these could also have been changed.</source>
          <target state="translated">と、そのどれかが変更された可能性もあります。</target>
        </trans-unit>
        <trans-unit id="9c281092bf1fc0883e8ca51f5a75d6dbbe72083a" translate="yes" xml:space="preserve">
          <source>in php code itself</source>
          <target state="translated">phpのコード自体に</target>
        </trans-unit>
        <trans-unit id="47595c7e0c922439a82930de428693c2485d70bf" translate="yes" xml:space="preserve">
          <source>mysql case sensitive table names in queries</source>
          <target state="translated">クエリ内の mysql の大文字小文字を区別するテーブル名</target>
        </trans-unit>
        <trans-unit id="e14ba9580172b8ff8ef6a03867bfb9736b487d50" translate="yes" xml:space="preserve">
          <source>or however many levels deep you need, e.g.:</source>
          <target state="translated">または、必要なレベルの深さの数だけ、例えば</target>
        </trans-unit>
        <trans-unit id="9b33cbbef3ccb8fdb6cb8aaa76aef3abd8db1e27" translate="yes" xml:space="preserve">
          <source>or in a &lt;code&gt;while&lt;/code&gt; loop:</source>
          <target state="translated">または &lt;code&gt;while&lt;/code&gt; ループで：</target>
        </trans-unit>
        <trans-unit id="3e6c4e3d3890ad675a43319d3a2508da9155b5ae" translate="yes" xml:space="preserve">
          <source>the quick fix is to assign your variable to null at the top of your code</source>
          <target state="translated">簡単な修正方法は、コードの先頭に変数をnullに代入することです。</target>
        </trans-unit>
        <trans-unit id="e654604e10a9c37094bce87c19a7810ec1fb4979" translate="yes" xml:space="preserve">
          <source>undefined index means in an array you requested for unavailable array index for example</source>
          <target state="translated">未定義のインデックスは、あなたが利用できない配列のインデックスを要求した配列の中にあることを意味します。</target>
        </trans-unit>
        <trans-unit id="93aa09c0ee6970627c3187b3637a745bf57b04d1" translate="yes" xml:space="preserve">
          <source>undefined offset means in array you have asked for non existing key. And the 
solution for this is to check before use</source>
          <target state="translated">未定義のオフセットは、配列の中に存在しないキーを要求したことを意味します。これを解決するには、配列の中で</target>
        </trans-unit>
        <trans-unit id="c23b5abf2ff6f143c8acb60d718c8ede77d83594" translate="yes" xml:space="preserve">
          <source>undefined variable means you have used completely not existing variable or which is not defined or initialized by that name for example</source>
          <target state="translated">未定義の変数は、完全に存在しない変数を使用していることを意味します。</target>
        </trans-unit>
        <trans-unit id="0db9d3b0198095f8017c1615ded2c62f36df51d8" translate="yes" xml:space="preserve">
          <source>why not keep things simple?</source>
          <target state="translated">なぜシンプルにしないのですか?</target>
        </trans-unit>
        <trans-unit id="aacd12fae3466e67c1db7d37bb55c38c2d26f64d" translate="yes" xml:space="preserve">
          <source>“Notice: Undefined variable”, “Notice: Undefined index”, and “Notice: Undefined offset” using PHP</source>
          <target state="translated">&quot;お知らせ:未定義の変数 未定義の変数」、「通知:未定義のインデックス」、「通知:未定義のインデックス」。未定義のインデックス」、「通知:未定義のオフセット」を PHP で使用しています。PHP を使用して、「未定義のオフセット」を表示します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
