<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/4261133">
    <body>
      <group id="4261133">
        <trans-unit id="466ac33b41275cd03a3b915c40538a9f92abfcde" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Notice: Undefined variable&amp;rdquo;, &amp;ldquo;Notice: Undefined index&amp;rdquo;, and &amp;ldquo;Notice:
  Undefined offset&amp;rdquo; using PHP</source>
          <target state="translated">PHP를 사용한 &quot;알림 : 정의되지 않은 변수&quot;, &quot;알림 : 정의되지 않은 색인&quot;및 &quot;알림 : 정의되지 않은 오프셋&quot;</target>
        </trans-unit>
        <trans-unit id="5cfc464c056a72aca343cf1a25bf4638c8d81006" translate="yes" xml:space="preserve">
          <source>(.htconf / .htaccess assume you're running as apache. If running command line this won't apply; if running IIS or other webserver then you'll need to check those configs accordingly)</source>
          <target state="translated">(.htconf / .htaccess는 아파치로 실행한다고 가정합니다. 명령 행을 실행하면 적용되지 않습니다 .IIS 또는 다른 웹 서버를 실행하는 경우 해당 구성을 적절히 확인해야합니다)</target>
        </trans-unit>
        <trans-unit id="b035fdcaad988937004af8176e60fb969721188e" translate="yes" xml:space="preserve">
          <source>(I use a custom &lt;code&gt;html()&lt;/code&gt; function to escape characters, your mileage may vary)</source>
          <target state="translated">(사용자 정의 &lt;code&gt;html()&lt;/code&gt; 함수를 사용하여 문자를 이스케이프하면 마일리지가 다를 수 있습니다)</target>
        </trans-unit>
        <trans-unit id="e2d1fb08a8064be74f968a2cab1022d15889e607" translate="yes" xml:space="preserve">
          <source>(additional tip)</source>
          <target state="translated">(추가 팁)</target>
        </trans-unit>
        <trans-unit id="cf40c5795ae8e8844bd28c50747b18fee0d0232a" translate="yes" xml:space="preserve">
          <source>...Think again! A better solution is:</source>
          <target state="translated">...다시 생각 해봐! 더 나은 해결책은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f14dd8fe84b7e99eb63debbf029152463832e7ad" translate="yes" xml:space="preserve">
          <source>.htaccess</source>
          <target state="translated">.htaccess</target>
        </trans-unit>
        <trans-unit id="74ce5e1e803097bfa320458e1d53d15b8d78fda3" translate="yes" xml:space="preserve">
          <source>.htconf  (webserver configuration, including vhosts and sub-configurations)*</source>
          <target state="translated">.htconf (vhost 및 하위 구성을 포함한 웹 서버 구성) *</target>
        </trans-unit>
        <trans-unit id="fcf7ce523a6c143b8ff2e789f0c5d69e4a59d91f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;&lt;code&gt;@&lt;/code&gt;&lt;/a&gt; is mainly acceptable for &lt;code&gt;$_GET&lt;/code&gt;/&lt;code&gt;$_POST&lt;/code&gt; input parameters, specifically &lt;em&gt;if they're optional&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt; &lt;code&gt;@&lt;/code&gt; &lt;/a&gt; 는 주로 &lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_POST&lt;/code&gt; _ POST 입력 매개 변수, 특히 &lt;em&gt;선택적인 경우&lt;/em&gt; 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="eaa87739e80a180b304c9d68201a9927b9cac2d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_POST&lt;/code&gt; / &lt;code&gt;$_REQUEST&lt;/code&gt; undefined input</source>
          <target state="translated">&lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_POST&lt;/code&gt; / &lt;code&gt;$_REQUEST&lt;/code&gt; 정의되지 않은 입력</target>
        </trans-unit>
        <trans-unit id="224876c9972581c6e223299d13bfc15e83e3945f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$_POST&lt;/code&gt; / &lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_SESSION&lt;/code&gt; variable</source>
          <target state="translated">&lt;code&gt;$_POST&lt;/code&gt; / &lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_SESSION&lt;/code&gt; 변수</target>
        </trans-unit>
        <trans-unit id="e44922ac092a2a3a9f4d8904e22f3fb6eb2329bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E_NOTICE&lt;/code&gt; warnings like undefined variables and undefined indexes actually help to make your code cleaner and safer. I can tell you that, years ago, keeping &lt;code&gt;E_NOTICE&lt;/code&gt; enabled forced me to declare my variables. It made it a LOT easier to learn C, were not declaring variables is much bigger of a nuisance.</source>
          <target state="translated">정의되지 않은 변수 및 정의되지 않은 인덱스와 같은 &lt;code&gt;E_NOTICE&lt;/code&gt; 경고는 실제로 코드를 더 깨끗하고 안전하게 만드는 데 도움이됩니다. 몇 년 전에 &lt;code&gt;E_NOTICE&lt;/code&gt; 를 활성화하면 변수를 선언해야한다고 말할 수 있습니다. 그것은 C를 배우기가 훨씬 쉬워졌고 변수를 선언하지 않았기 때문에 귀찮은 것보다 컸습니다.</target>
        </trans-unit>
        <trans-unit id="41a86e921e3b95be623e7797d114bcce2af2cfeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Undefined index: my_index&lt;/code&gt; - This occurs when you try to access a value in an array and it does not exist. To prevent this error, perform a conditional check.</source>
          <target state="translated">&lt;code&gt;Undefined index: my_index&lt;/code&gt; 배열의 값에 액세스하려고하는데 존재하지 않는 경우에 발생합니다. 이 오류를 방지하려면 조건부 검사를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="8f07adbb0361c17423b3f304bff1468056c87218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Undefined variable: my_variable_name&lt;/code&gt; - This occurs when a variable has not been defined before use. When the PHP script is executed, it internally just assumes a null value. However, in which scenario would you need to check a variable before it was defined? Ultimately, this is an argument for &quot;sloppy code&quot;. As a developer, I can tell you that I love it when I see an open source project where variables are defined as high up in their scopes as they can be defined. It makes it easier to tell what variables are going to pop up in the future and makes it easier to read/learn the code.</source>
          <target state="translated">&lt;code&gt;Undefined variable: my_variable_name&lt;/code&gt; 변수는 사용하기 전에 정의되지 않은 경우에 발생합니다. PHP 스크립트가 실행될 때 내부적으로는 널값을 가정합니다. 그러나 어떤 시나리오에서 변수를 정의하기 전에 확인해야합니까? 궁극적으로 이것은 &quot;느슨한 코드&quot;에 대한 논쟁입니다. 개발자로서 변수가 정의 될 수있는 범위 내에서 변수가 높은 것으로 정의 된 오픈 소스 프로젝트를 볼 때 내가 좋아한다고 말할 수 있습니다. 앞으로 어떤 변수가 나타날지 쉽게 알 수 있으며 코드를 쉽게 읽고 배울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a83f81b8319de39469b7a79af80622e450699ac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Pre&lt;/em&gt; PHP 7&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;프리&lt;/em&gt; PHP 7&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a050af352438dd03808ab25acd03541840deee29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Both&lt;/strong&gt; will stop the Notices from the OP question, and &lt;strong&gt;both&lt;/strong&gt; are the exact equivalent of:</source>
          <target state="translated">&lt;strong&gt;둘 다&lt;/strong&gt; OP 질문에서 통지를 중지하며 &lt;strong&gt;둘 다&lt;/strong&gt; 정확히 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e46cdc8e76c9177a72f73a51ba498d0094ff32fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Echo:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Echo:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0361e768baa75d5fd1c5bac0186466ef1b45bbdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example: Element not contained within the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 : &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 에 포함되지 않은 요소&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89134d646b39aef1a00bae6415ea1c30d75a204e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example: Element now contained within the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;예 : 이제 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 내에 포함 된 요소&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc964ecafa5d5160146ecb22e84f82e1833222ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Function:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed559f58d1012098e76aa02f5987633940fcf2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02a4ee543f32ff8f09e157f46b28b39bf2f7fa0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In reply to &quot;&quot;Why do they appear all of a sudden? I used to use this script for years and I've never had any problem.&quot;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&quot;&quot;왜 답장에 갑자기 나타 납니까?&lt;/strong&gt; &lt;strong&gt;이 스크립트를 몇 년 동안 사용해 왔는데 아무런 문제가 없었습니다. &quot;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b9e05ddc56696be2b804fa68e63086221272548" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It's strongly recommended to implement just point 1.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 포인트 1 만 구현하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b5b8f5891b0a50ba2842ef5a5e2e14c9d3509c89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Or&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="377c9d72697e455f7849360037a606baf2cef481" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP 7+&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP 7 이상&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0ea0dc97baa1d4c675361104fa844e8cea6bf02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;PHP&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e558f1407de9b18770bd8a983b50232d86e39b2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Recommended:&lt;/strong&gt; Declare your variables, for example when you try to append a string to an undefined variable. Or use &lt;a href=&quot;http://www.php.net/manual/en/function.isset.php&quot;&gt;&lt;code&gt;isset()&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;&lt;code&gt;!empty()&lt;/code&gt;&lt;/a&gt;  to check if they are declared before referencing them, as in:</source>
          <target state="translated">&lt;strong&gt;권장 사항 :&lt;/strong&gt; 정의되지 않은 변수에 문자열을 추가 할 때와 같이 변수를 선언하십시오. 또는 &lt;a href=&quot;http://www.php.net/manual/en/function.isset.php&quot;&gt; &lt;code&gt;isset()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt; &lt;code&gt;!empty()&lt;/code&gt; &lt;/a&gt; 를 사용하여 참조하기 전에 선언되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b6daaa940d95310889d636bb10a59cbae549d818" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Simple Explanation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;간단한 설명&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2dcd8fc71e05cf69f2f4aedf034ba98a76d6ae8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Summary&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95bd9784667a8a2240f7c0a236b5d24f4d5121c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Suppression:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Suppression:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="411e7b907e67408c8cd39ff90a9ecbe3ae829c42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why have they changed?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;왜 바뀌 었습니까?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b27d65f9e51981a80b5e69026dc3ecf739096691" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;https://meta.stackexchange.com/questions/62258/what-can-be-done-about-repetitive-questions&quot;&gt;What can be done about repetitive questions?&lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;https://meta.stackexchange.com/questions/62258/what-can-be-done-about-repetitive-questions&quot;&gt;반복적 인 질문에 대해 무엇을 할 수 있습니까?&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="6a4a05265b46928ecf023d648914b921b0061143" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;a href=&quot;https://meta.stackexchange.com/questions/63762/do-reference-questions-make-sense&quot;&gt;Do &amp;ldquo;reference questions&amp;rdquo; make sense?&lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;a href=&quot;https://meta.stackexchange.com/questions/63762/do-reference-questions-make-sense&quot;&gt;&amp;ldquo;참조 질문&amp;rdquo;이 의미가 있습니까?&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="473e5811eb409ba5482f44224c935a8b3d454450" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;&lt;strong&gt;This is a General Reference question&lt;/strong&gt; for people to link to as duplicate, instead of having to explain the issue over and over again. I feel this is necessary because most real-world answers on this issue are very specific. &lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;사람들이 반복해서 문제를 설명하는 대신 중복 된 것으로 연결 &lt;strong&gt;하는 일반적인 참조 질문&lt;/strong&gt; 입니다.&lt;/sub&gt; &lt;sub&gt;이 문제에 대한 대부분의 실제 답변이 매우 구체적이기 때문에 이것이 필요하다고 생각합니다.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="4160be4bec0e85e02ec18f06e95cd08826eba4dd" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Related Meta discussion:&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;관련 메타 토론 :&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="bdce42b0acd2590483024b193d2f4096dd621199" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;method=POST&lt;/code&gt; form ought to populate &lt;code&gt;$_POST&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;method=POST&lt;/code&gt; 양식은 &lt;code&gt;$_POST&lt;/code&gt; 를 채워야합니다.</target>
        </trans-unit>
        <trans-unit id="5255286df4e9152bebde89a4bd1c204a3fb41bfc" translate="yes" xml:space="preserve">
          <source>Additionally their validity times out, they could be constraint to subdomains or individual paths, and user and browser can just reject or delete them.</source>
          <target state="translated">또한 유효 시간이 초과되면 하위 도메인이나 개별 경로에 대한 제약이 될 수 있으며 사용자와 브라우저는이를 거부하거나 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="820d22571a0f0746323fb931aa811211885a712c" translate="yes" xml:space="preserve">
          <source>Additonally you shouldn't habitually use/recommend &lt;code&gt;if (isset($_POST[&quot;shubmit&quot;]))&lt;/code&gt; in your initial code.</source>
          <target state="translated">또한 초기 코드에서 &lt;code&gt;if (isset($_POST[&quot;shubmit&quot;]))&lt;/code&gt; 를 습관적으로 사용 / 권장해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="904c28189d688f020be88972d7cd9a3a79be6c48" translate="yes" xml:space="preserve">
          <source>Also note that all 3 variables are &lt;a href=&quot;http://php.net/manual/en/language.variables.superglobals.php&quot;&gt;superglobals&lt;/a&gt; and are uppercase.</source>
          <target state="translated">또한 3 개의 변수는 모두 &lt;a href=&quot;http://php.net/manual/en/language.variables.superglobals.php&quot;&gt;슈퍼 글로벌&lt;/a&gt; 이며 대문자입니다.</target>
        </trans-unit>
        <trans-unit id="fefb592bf66b92a1f8736ecf59ad8e1168fb7453" translate="yes" xml:space="preserve">
          <source>Alternativey or additionally use your &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor#Network_request_details&quot;&gt;&lt;strong&gt;browser devtools&lt;/strong&gt; (&lt;kbd&gt;F12&lt;/kbd&gt;)&lt;/a&gt; and inspect the network tab for requests and parameters:</source>
          <target state="translated">대안으로 또는 추가로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Network_Monitor#Network_request_details&quot;&gt;&lt;strong&gt;브라우저 devtools&lt;/strong&gt; ( &lt;kbd&gt;F12&lt;/kbd&gt; )를 사용&lt;/a&gt; 하고 네트워크 탭에서 요청 및 매개 변수를 검사하십시오.</target>
        </trans-unit>
        <trans-unit id="4d69d00ac51601f35e8af378baeb34137ca8b8b7" translate="yes" xml:space="preserve">
          <source>Although PHP does not require a variable declaration, it does recommend it in order to avoid some security vulnerabilities or bugs where one would forget to give a value to a variable that will be used later in the script. What PHP does in the case of undeclared variables is issue a very low level error, &lt;code&gt;E_NOTICE&lt;/code&gt;, one that is not even reported by default, but the Manual &lt;a href=&quot;http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;advises to allow&lt;/a&gt; during development.</source>
          <target state="translated">PHP는 변수 선언이 필요하지 않지만 나중에 스크립트에서 사용될 변수에 값을 제공하는 것을 잊어 버릴 수있는 일부 보안 취약점이나 버그를 피하기 위해 권장합니다. 선언되지 않은 변수의 경우 PHP &lt;code&gt;E_NOTICE&lt;/code&gt; 일은 기본적으로보고되지 않은 매우 낮은 수준의 E_NOTICE 오류가 발생 하지만 매뉴얼 &lt;a href=&quot;http://www.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;은&lt;/a&gt; 개발 중에 허용하도록 권장합니다 .</target>
        </trans-unit>
        <trans-unit id="f414d432b850f2f8778826864acb38e1be08c164" translate="yes" xml:space="preserve">
          <source>And fix all the errors.</source>
          <target state="translated">그리고 모든 오류를 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="ffe4f5a526bbd2c97f20e8f1995acb2664200b61" translate="yes" xml:space="preserve">
          <source>And on production, error reporting should be set to off.</source>
          <target state="translated">그리고 생산시 오류보고 기능을 해제해야합니다.</target>
        </trans-unit>
        <trans-unit id="1526ce4e87e180d45d86a0a80d9baf403503a027" translate="yes" xml:space="preserve">
          <source>And since this covers the majority of such questions, let's expand on the most common causes:</source>
          <target state="translated">그리고 이것이 그러한 질문의 대부분을 다루므로 가장 일반적인 원인을 확장 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="84e1e713d8bf5c32e4390c60a1a8fc38c03e6956" translate="yes" xml:space="preserve">
          <source>Another option is to declare an empty array at the top of your function. This is not always possible.</source>
          <target state="translated">또 다른 옵션은 함수 맨 위에 빈 배열을 선언하는 것입니다. 항상 가능하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="2fa18ee1eccf26617e922e80c6fcd9ae54602c45" translate="yes" xml:space="preserve">
          <source>Another reason why an undefined index notice will be thrown, would be that a column was omitted from a database query.</source>
          <target state="translated">정의되지 않은 인덱스 알림이 발생하는 또 다른 이유는 데이터베이스 쿼리에서 열이 생략 되었기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="0cd47ae8c31163812dd6c4ee0dbb4ef4d109f5bc" translate="yes" xml:space="preserve">
          <source>Another way to get this out:</source>
          <target state="translated">이것을 얻는 또 다른 방법 :</target>
        </trans-unit>
        <trans-unit id="7e8ae0de0dc8a5ace1da5cc16cbf095bda63dd88" translate="yes" xml:space="preserve">
          <source>Are table names in MySQL case sensitive?</source>
          <target state="translated">MySQL의 테이블 이름은 대소 문자를 구분합니까?</target>
        </trans-unit>
        <trans-unit id="1d338139771c1b18234f9b1d0b185bcb393bc60c" translate="yes" xml:space="preserve">
          <source>As well as &lt;code&gt;method=POST&lt;/code&gt; in your &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; declaration.</source>
          <target state="translated">&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 선언의 &lt;code&gt;method=POST&lt;/code&gt; 뿐만 아니라</target>
        </trans-unit>
        <trans-unit id="eb6541d261faeff768ff85a90fc3b2ae3a6fc5b7" translate="yes" xml:space="preserve">
          <source>Assign a variable to the value of another variable if it's set, else assign &lt;code&gt;null&lt;/code&gt; (or whatever &lt;em&gt;default&lt;/em&gt; value you need):</source>
          <target state="translated">변수가 설정된 경우 다른 변수의 값에 변수를 지정하고 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; (또는 필요한 &lt;em&gt;기본값&lt;/em&gt; )을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="8d42f7eaf07837ea1f0cf38276c470d1c2e03bbd" translate="yes" xml:space="preserve">
          <source>Both will reveal if your script was invoked with the right or any parameters at all.</source>
          <target state="translated">둘 다 스크립트가 올바른 매개 변수 또는 임의의 매개 변수로 호출되었는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="47a3306b99a1a4ab5268a1769bcbb31bc8b37c82" translate="yes" xml:space="preserve">
          <source>Check &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt; php directives in .htaccess have not changed</source>
          <target state="translated">.htaccess의 &lt;code&gt;error_reporting&lt;/code&gt; 및 &lt;code&gt;display_errors&lt;/code&gt; PHP 지시문이 변경되지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="64e8234d2ce8ce34d5df3f9cf2f429eb14939f4a" translate="yes" xml:space="preserve">
          <source>Check &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt; php directives in .htconf (or vhosts etc) have not changed</source>
          <target state="translated">.htconf (또는 vhosts 등)의 &lt;code&gt;error_reporting&lt;/code&gt; 및 &lt;code&gt;display_errors&lt;/code&gt; PHP 지시문이 변경되지 않았는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="031d6873b2127c8f759ef6f6556a0c86ce089e09" translate="yes" xml:space="preserve">
          <source>Check &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt; php directives in php.ini has not changed, or that you're not using a different php.ini from before.</source>
          <target state="translated">php.ini의 &lt;code&gt;error_reporting&lt;/code&gt; 및 &lt;code&gt;display_errors&lt;/code&gt; php 지시문이 변경되지 않았거나 이전과 다른 php.ini를 사용하고 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="653234d30ac433418c066cde96a7a349fc70368d" translate="yes" xml:space="preserve">
          <source>Check if the index exists before you access it. For this you can use &lt;a href=&quot;http://php.net/manual/en/function.isset.php&quot;&gt;&lt;code&gt;isset()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/manual/en/function.array-key-exists.php&quot;&gt;&lt;code&gt;array_key_exists()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">액세스하기 전에 색인이 존재하는지 확인하십시오. 이를 위해 &lt;a href=&quot;http://php.net/manual/en/function.isset.php&quot;&gt; &lt;code&gt;isset()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;http://php.net/manual/en/function.array-key-exists.php&quot;&gt; &lt;code&gt;array_key_exists()&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0673d9fe56b528211d611729a46f3e009bef2529" translate="yes" xml:space="preserve">
          <source>Consult the followning Q&amp;amp;A's on Stack:</source>
          <target state="translated">스택의 다음 Q &amp;amp; A를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="adf03b11de88665383c6a83f7daf6fbacc1c1c40" translate="yes" xml:space="preserve">
          <source>Disable E_NOTICE from reporting. A quick way to exclude just &lt;code&gt;E_NOTICE&lt;/code&gt; is:</source>
          <target state="translated">보고에서 E_NOTICE를 비활성화하십시오. &lt;code&gt;E_NOTICE&lt;/code&gt; 만 제외하는 빠른 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="912f5fd59a8d3c74d2ee8da5746e91f2d4b17b1f" translate="yes" xml:space="preserve">
          <source>Ensure each required input has an &lt;code&gt;&amp;lt;input name=FOO&amp;gt;&lt;/code&gt;</source>
          <target state="translated">각 필수 입력에 &lt;code&gt;&amp;lt;input name=FOO&amp;gt;&lt;/code&gt; 가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1108bb2904f86b618906813610916b8155d49aca" translate="yes" xml:space="preserve">
          <source>Equals to:</source>
          <target state="translated">다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d433cfc30c4bef7340148f4742c6657e90433e94" translate="yes" xml:space="preserve">
          <source>Error display &lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;&lt;code&gt;@&lt;/code&gt; operator&lt;/a&gt;</source>
          <target state="translated">오류 표시 &lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt; &lt;code&gt;@&lt;/code&gt; 연산자&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="687919597f3097fac25829ed728b8e06fef56383" translate="yes" xml:space="preserve">
          <source>Finally check your &lt;strong&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/strong&gt; declarations, if you expect a parameter but receive none.</source>
          <target state="translated">마지막으로 &lt;strong&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 및 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/strong&gt; 선언을 확인하십시오 (매개 변수가 필요하지만받지 않은 경우).</target>
        </trans-unit>
        <trans-unit id="e316e0566164421c5957bf735755cd24cdfcd077" translate="yes" xml:space="preserve">
          <source>Finally check your code; possibly an unrelated library; to see if &lt;code&gt;error_reporting&lt;/code&gt; and &lt;code&gt;display_errors&lt;/code&gt; php directives have been set there.</source>
          <target state="translated">마지막으로 코드를 확인하십시오. 아마도 관련이없는 도서관; &lt;code&gt;error_reporting&lt;/code&gt; 및 &lt;code&gt;display_errors&lt;/code&gt; php 지시문이 설정되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3e757e4ce33a53ff4218c9a1d3ca6b3f208409b9" translate="yes" xml:space="preserve">
          <source>First thing you do when encountering an undefined index/offset, is check for typos:</source>
          <target state="translated">정의되지 않은 인덱스 / 오프셋이 발생할 때 가장 먼저해야 할 일은 오타가 있는지 확인하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="153c677b94b3ff7b21a50ff4e524bb1bab69e993" translate="yes" xml:space="preserve">
          <source>Fix the cause first. Not the notices.</source>
          <target state="translated">먼저 원인을 수정하십시오. 통지가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="56c84e61a5b32c4d2b9191bedec59c56745fbfc2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;$_GET&lt;/code&gt; parameters you can also peek at the &lt;a href=&quot;http://php.net/reserved.variables.server&quot;&gt;&lt;code&gt;QUERY_STRING&lt;/code&gt;&lt;/a&gt; in</source>
          <target state="translated">&lt;code&gt;$_GET&lt;/code&gt; 매개 변수의 경우 &lt;a href=&quot;http://php.net/reserved.variables.server&quot;&gt; &lt;code&gt;QUERY_STRING&lt;/code&gt; &lt;/a&gt; 에서</target>
        </trans-unit>
        <trans-unit id="29366bd46ef8e81963bd8066bfd82f552f4a003f" translate="yes" xml:space="preserve">
          <source>For array elements:</source>
          <target state="translated">배열 요소의 경우 :</target>
        </trans-unit>
        <trans-unit id="5e50226e95d8ade6624fe1538f45237faa2dc501" translate="yes" xml:space="preserve">
          <source>For instance, if you thought this was clever, shorthand code:</source>
          <target state="translated">예를 들어, 이것이 영리하고 속기 인 줄 알았다면 :</target>
        </trans-unit>
        <trans-unit id="70ea3327c155cb8cc0ac67c4e9f4395558bb5b87" translate="yes" xml:space="preserve">
          <source>For undesired and redundant notices, one could use the dedicated &lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;&lt;code&gt;@&lt;/code&gt; operator&lt;/a&gt; to &amp;raquo;&lt;strong&gt;hide&lt;/strong&gt;&amp;laquo; undefined variable/index messages.</source>
          <target state="translated">원하지 않는 중복 통지의 경우 전용 &lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt; &lt;code&gt;@&lt;/code&gt; 연산자&lt;/a&gt; 를 사용하여&amp;laquo;정의되지 않은 변수 / 인덱스 메시지를&amp;raquo; &lt;strong&gt;숨길&lt;/strong&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ff4fe4b08255e622e9a324f290b725c7198365d" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;PHP documentation&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;PHP 문서에서&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b109fc60e857896c9ffc7dc9cefe0df767b500b1" translate="yes" xml:space="preserve">
          <source>From the vast wisdom of the &lt;a href=&quot;http://php.net/manual/en/language.variables.basics.php#example-112&quot;&gt;PHP Manual&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/language.variables.basics.php#example-112&quot;&gt;PHP 매뉴얼&lt;/a&gt; 의 광대 한 지혜에서 :</target>
        </trans-unit>
        <trans-unit id="88f707a38e9c72b1fdc7872edf8677cbb18cecd3" translate="yes" xml:space="preserve">
          <source>Furthermore, according to PHP documentation, by default, &lt;code&gt;E_NOTICE&lt;/code&gt; is disabled in php.ini. PHP docs recommend &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php&quot;&gt;turning it on for debugging purposes&lt;/a&gt;. However, when I download PHP from the Ubuntu repository&amp;ndash;and from BitNami's Windows stack&amp;ndash;I see something else.</source>
          <target state="translated">또한 PHP 문서에 따르면 기본적으로 &lt;code&gt;E_NOTICE&lt;/code&gt; 는 php.ini에서 비활성화되어 있습니다. PHP 문서 &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php&quot;&gt;는 디버깅 목적으로 사용하는&lt;/a&gt; 것이 좋습니다. 그러나 우분투 리포지토리와 BitNami의 Windows 스택에서 PHP를 다운로드하면 다른 것이 보입니다.</target>
        </trans-unit>
        <trans-unit id="f2dddaae4f92ebdb1dbd48e2f82df522ec46fe3c" translate="yes" xml:space="preserve">
          <source>Generally because of &quot;bad programming&quot;, and a possibility for mistakes now or later.</source>
          <target state="translated">일반적으로 &quot;나쁜 프로그래밍&quot;으로 인해 현재 또는 나중에 실수 할 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="67469a7b0a065668147fb40e4648a80e3afbdbf2" translate="yes" xml:space="preserve">
          <source>How do I fix them?</source>
          <target state="translated">어떻게 고치나요?</target>
        </trans-unit>
        <trans-unit id="3266330aedefc72dbf6df42c0d0da5aaab0e27cd" translate="yes" xml:space="preserve">
          <source>However it is also possible to override these settings in</source>
          <target state="translated">그러나이 설정을 무시할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="906d0ca784deebdc35a87d0ee1a58fac3784b42b" translate="yes" xml:space="preserve">
          <source>I am sharing my question and solution here:</source>
          <target state="translated">내 질문과 솔루션을 여기에서 공유하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="a15ee9107e4905e687b6b88e433f71dd96f8f124" translate="yes" xml:space="preserve">
          <source>I asked a question about this and I was referred to this post with the message:</source>
          <target state="translated">나는 이것에 대해 질문을했고 메시지와 함께이 게시물에 언급되었습니다.</target>
        </trans-unit>
        <trans-unit id="3aeb16a0eb97ce78a1969a6a98f32b3eefc44b6c" translate="yes" xml:space="preserve">
          <source>I didn't want to disable notice because it's helpful, but wanted to avoid too much typing.</source>
          <target state="translated">도움이 되었기 때문에 알림을 사용 중지하고 싶지 않지만 너무 많은 입력을 피하고 싶었습니다.</target>
        </trans-unit>
        <trans-unit id="3cbb3e054481a6256c4a8d0c52f4bef08a03deb9" translate="yes" xml:space="preserve">
          <source>I think the problem is that I am writing if conditions for the variable &lt;code&gt;$city&lt;/code&gt;, which is not the key but the value in &lt;code&gt;$key =&amp;gt; $city&lt;/code&gt;. First, could you confirm if that is the cause of the warning? Second, if that is the problem, why is it that I cannot write a condition based on the value? Does it have to be with the key that I need to write the condition?</source>
          <target state="translated">문제는 내가 &lt;code&gt;$key =&amp;gt; $city&lt;/code&gt; 값이 아닌 변수 &lt;code&gt;$city&lt;/code&gt; 대한 조건을 작성하는 것 입니다 . 먼저 이것이 경고의 원인인지 확인할 수 있습니까? 둘째, 이것이 문제라면 왜 값을 기반으로 조건을 작성할 수없는 것입니까? 조건을 작성하는 데 필요한 키가 있어야합니까?</target>
        </trans-unit>
        <trans-unit id="357342f3f25e597ef6bdc1aa7da95ee5ff053e01" translate="yes" xml:space="preserve">
          <source>I use all time own useful function &lt;strong&gt;exst()&lt;/strong&gt; which automatically declare variables.</source>
          <target state="translated">변수를 자동으로 선언하는 모든 시간 고유의 유용한 함수 &lt;strong&gt;exst ()&lt;/strong&gt; 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="45922e43d319b1f703892ed4edaf26fbcf11b574" translate="yes" xml:space="preserve">
          <source>I used to curse this error, but it can be helpful to remind you to escape user input.</source>
          <target state="translated">이 오류를 저주하는 데 사용되었지만 사용자 입력을 피하도록 상기시키는 것이 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec3ba3776e0b91e4ed99d91ccdaa6636146651a6" translate="yes" xml:space="preserve">
          <source>I'm running a PHP script and continue to receive errors like:</source>
          <target state="translated">PHP 스크립트를 실행 중이며 다음과 같은 오류가 계속 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dc6c3cb6d26cb6f183c56b72e4222e789e6cb27e" translate="yes" xml:space="preserve">
          <source>I.e.:</source>
          <target state="translated">I.e.:</target>
        </trans-unit>
        <trans-unit id="67b0a665e29636ed1eab033c69a44ccb15d2a183" translate="yes" xml:space="preserve">
          <source>If it really is only defined sometimes, test for it:  &lt;code&gt;if (isset($varname))&lt;/code&gt;, before using it</source>
          <target state="translated">실제로 가끔 정의되는 &lt;code&gt;if (isset($varname))&lt;/code&gt; 사용하기 전에 if (isset ($ varname)) 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="b31c31bea3516f28884f8f7a9430713b23967b16" translate="yes" xml:space="preserve">
          <source>If it's a mistake, make a proper assignment to the variable first:  $varname=0;</source>
          <target state="translated">실수 인 경우 먼저 변수를 올바르게 지정하십시오. $ varname = 0;</target>
        </trans-unit>
        <trans-unit id="3996ff01f267381fef1a3bc0428431b4ad170ed8" translate="yes" xml:space="preserve">
          <source>If it's because you spelled it wrong, just correct that</source>
          <target state="translated">철자가 틀 렸기 때문에 바로 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="932f6b1a937b99faeaa413a7716551d23bcdc355" translate="yes" xml:space="preserve">
          <source>If working with classes you need to make sure you reference member variables using &lt;code&gt;$this&lt;/code&gt;:</source>
          <target state="translated">클래스로 작업하는 경우 &lt;code&gt;$this&lt;/code&gt; 사용하여 멤버 변수를 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="ecd8e349dd1c36a083a95dd96edd0ea24179b9d4" translate="yes" xml:space="preserve">
          <source>If you absolutely want &lt;strong&gt;string&lt;/strong&gt; value, just like:</source>
          <target state="translated">&lt;strong&gt;문자열&lt;/strong&gt; 값을 절대로 원한다면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="79b04efb6aea3521e109d0b13f53088211263b74" translate="yes" xml:space="preserve">
          <source>If you are employing mod_rewrite, then you should check both the &lt;code&gt;access.log&lt;/code&gt; as well as enable the &lt;a href=&quot;https://stackoverflow.com/questions/9632852/how-to-debug-apache-mod-rewrite&quot;&gt;&lt;code&gt;RewriteLog&lt;/code&gt;&lt;/a&gt; to figure out absent parameters.</source>
          <target state="translated">mod_rewrite를 사용하는 경우 &lt;code&gt;access.log&lt;/code&gt; 를 모두 확인하고 &lt;a href=&quot;https://stackoverflow.com/questions/9632852/how-to-debug-apache-mod-rewrite&quot;&gt; &lt;code&gt;RewriteLog&lt;/code&gt; &lt;/a&gt; 를 활성화하여 누락 된 매개 변수를 파악해야합니다.</target>
        </trans-unit>
        <trans-unit id="1a1080a38215b1e1af03aeed731e9ee9f9c1a257" translate="yes" xml:space="preserve">
          <source>If you don't require setting a new variable then you can directly use the ternary's returned value, such as with &lt;code&gt;echo&lt;/code&gt;, function arguments, etc:</source>
          <target state="translated">새 변수를 설정할 필요가 없으면 &lt;code&gt;echo&lt;/code&gt; , 함수 인수 등과 같이 삼항의 반환 값을 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b271286cd0385efc4229e22000cb573f7ce4c7c8" translate="yes" xml:space="preserve">
          <source>If you have directive in .htaccess, check if they are still permitted in the .htconf file</source>
          <target state="translated">.htaccess에 지시문이 있으면 .htconf 파일에서 지시문이 여전히 허용되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7ec07cc14b88ff8eaf3df2786535388406030d2b" translate="yes" xml:space="preserve">
          <source>If you just care about the Notice not being in the error log, then as an option you could simply ignore the error log.</source>
          <target state="translated">통지가 오류 로그에없는 것을 신경 쓰면 옵션으로 오류 로그를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84b425764f5264db59f0574e1d686db8a915df32" translate="yes" xml:space="preserve">
          <source>In PHP 7.0 it's now possible to use Null coalescing operator:</source>
          <target state="translated">PHP 7.0에서는 이제 Null 통합 연산자를 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="319d0a4c7f233a98e25172008000d2993fcd5210" translate="yes" xml:space="preserve">
          <source>In PHP you need fist to define the variable after that you can use it.</source>
          <target state="translated">PHP에서 변수를 사용하려면 변수를 정의하기 위해 주먹이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e71591ec405879857b4d314ed15542dd72e4cbff" translate="yes" xml:space="preserve">
          <source>In a very &lt;strong&gt;Simple Language&lt;/strong&gt;.</source>
          <target state="translated">매우 &lt;strong&gt;간단한 언어로&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ad6be399ca6363a718be6d72ff8740e9b9d78c9a" translate="yes" xml:space="preserve">
          <source>In page if I want to refer to $_REQUEST['name']:</source>
          <target state="translated">페이지에서 $ _REQUEST [ 'name']을 (를) 참조하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="29cb15925f9f3f555b3f301015ad5d4291ac0dbd" translate="yes" xml:space="preserve">
          <source>Is this an expected key name and present on &lt;em&gt;each&lt;/em&gt; page request?</source>
          <target state="translated">이것은 예상 키 이름이며 &lt;em&gt;각&lt;/em&gt; 페이지 요청에 존재합니까?</target>
        </trans-unit>
        <trans-unit id="2b9cbdd0059b4cdb465b9caf57145491f2685dcb" translate="yes" xml:space="preserve">
          <source>It is possible to suppress the PHP Notices with &lt;code&gt;@&lt;/code&gt; or reduce your error reporting level, but it &lt;strong&gt;does not fix the problem&lt;/strong&gt;, it simply stops it being reported in the error log. This means that your code still tried to use a variable that was not set, which may or may not mean something doesn't work as intended - depending on how crucial the missing value is.</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; 로 PHP 공지를 표시 &lt;strong&gt;하지 않거나&lt;/strong&gt; 오류보고 수준을 줄일 수 있지만 &lt;strong&gt;문제를 해결하지는 않고&lt;/strong&gt; 오류 로그에보고되는 것을 중지합니다. 이것은 코드가 아직 설정되지 않은 변수를 사용하려고 시도했기 때문에 누락 된 값이 얼마나 중요한지에 따라 의도 한대로 작동하지 않을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd594f9ac04a5c9f4246d97dc2c1174f79ffb780" translate="yes" xml:space="preserve">
          <source>It is very common for most sites to operate under the &quot;default&quot; error reporting of &quot;Show all errors, but not 'notices' and 'deprecated'&quot;. This will be set in php.ini and apply to all sites on the server. This means that those &quot;notices&quot; used in the examples will be suppressed (hidden) while other errors, considered more critical, will be shown/recorded.</source>
          <target state="translated">대부분의 사이트는 &quot;모든 오류 표시 ( '알림'및 '더 이상 사용되지 않음'은 표시하지 않음&quot;)의 &quot;기본&quot;오류보고에 따라 작동하는 것이 매우 일반적입니다. 이것은 php.ini에 설정되며 서버의 모든 사이트에 적용됩니다. 이는 예에서 사용 된 &quot;알림&quot;이 억제 (숨겨 짐)되는 반면, 더 중요한 것으로 간주되는 다른 오류는 표시 / 기록됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="0cf7fbf2bd243f351b2656fc036136240b9188a2" translate="yes" xml:space="preserve">
          <source>It means you are testing, evaluating, or printing a variable that you have not yet assigned anything to.  It means you either have a typo, or you need to check that the variable was initialized to something first.  Check your logic paths, it may be set in one path but not in another.</source>
          <target state="translated">아직 할당하지 않은 변수를 테스트, 평가 또는 인쇄하고 있음을 의미합니다. 그것은 오타가 있거나 변수가 먼저 무언가로 초기화되었는지 확인해야 함을 의미합니다. 논리 경로를 확인하십시오. 한 경로에는 설정되어 있지만 다른 경로에는 설정되어 있지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8dffec720b7e72cd50f31796cad3fd10c7d0cdd" translate="yes" xml:space="preserve">
          <source>It's also possible for a form to supply &lt;code&gt;action=script.php?get=param&lt;/code&gt; via $_GET and the remaining &lt;code&gt;method=POST&lt;/code&gt; fields in $_POST alongside.</source>
          <target state="translated">양식이 $ _GET을 통해 &lt;code&gt;action=script.php?get=param&lt;/code&gt; 을 제공하고 $ _POST의 나머지 &lt;code&gt;method=POST&lt;/code&gt; 필드와 함께 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bab7028986ae39af386124938e902f8e186f9c3a" translate="yes" xml:space="preserve">
          <source>It's very inappropriate for code deep within the application logic (ignoring undeclared variables where you shouldn't), e.g. for function parameters, or in loops.</source>
          <target state="translated">함수 매개 변수 또는 루프와 같이 응용 프로그램 논리 내부의 코드 깊이 (선언해서는 안되는 선언되지 않은 변수 무시)에 매우 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74d8b15cab385a97f5b0a2145470ac08a1b7c36a" translate="yes" xml:space="preserve">
          <source>Its because the variable  '$user_location' is not getting defined. If you are using any if loop inside which you are declaring the '$user_location' variable then you must also have an else loop and define the same. For example:</source>
          <target state="translated">변수 '$ user_location'이 정의되지 않았기 때문입니다. 내부에서 '$ user_location'변수를 선언하는 if 루프를 사용하는 경우 else 루프가 있고 동일하게 정의해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6b9731d542e1febeac9cefa49a4c4e86b70bc82c" translate="yes" xml:space="preserve">
          <source>Line 10 and 11 looks like this:</source>
          <target state="translated">10 행과 11 행은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8d8cc75fec72f5730c2e22841ac92618615b8330" translate="yes" xml:space="preserve">
          <source>Line 154 is the problem. This is what I have in line 154:</source>
          <target state="translated">154 행이 문제입니다. 이것이 154 행에있는 것입니다.</target>
        </trans-unit>
        <trans-unit id="10f6f80522bf32cd96225cf087c1860d1fcf9bcc" translate="yes" xml:space="preserve">
          <source>Maybe even turn of the warnings in you &lt;strong&gt;PHP-settings&lt;/strong&gt;</source>
          <target state="translated">어쩌면 &lt;strong&gt;PHP 설정&lt;/strong&gt; 에서 경고를 켤 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c25845f4c6aa9be6cc09862cf6d7717525e2d29" translate="yes" xml:space="preserve">
          <source>More obviously look at your browser address bar for &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;&gt;GET parameters&lt;/a&gt;:</source>
          <target state="translated">더 명확하게 &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;&gt;GET 매개 변수에&lt;/a&gt; 대한 브라우저 주소 표시 줄을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="632590870b9b8dd5e18c7973c1ff407c4d5e2fd3" translate="yes" xml:space="preserve">
          <source>Moreover check for &lt;code&gt;enctype=multipart/form-data&lt;/code&gt;</source>
          <target state="translated">또한 &lt;code&gt;enctype=multipart/form-data&lt;/code&gt; 를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="dac7abbd89820a548926b77b55025ac61736164f" translate="yes" xml:space="preserve">
          <source>My solution was this function:</source>
          <target state="translated">내 해결책은이 기능이었습니다.</target>
        </trans-unit>
        <trans-unit id="ed67bcb142192eaf807c809ca07a4ed08155d152" translate="yes" xml:space="preserve">
          <source>MySql - Case Sensitive issue of tables in different server</source>
          <target state="translated">MySql-다른 서버에있는 테이블의 대소 문자 구분 문제</target>
        </trans-unit>
        <trans-unit id="5b1cbbd895f50c88d0c3eed758d1cc2078210afd" translate="yes" xml:space="preserve">
          <source>Newcomers won't spot such typos. It just deprives you of PHPs Notices for those very cases. Add &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;isset&lt;/code&gt; only &lt;em&gt;after&lt;/em&gt; verifying functionality.</source>
          <target state="translated">새로 온 사람들은 그런 오타를 발견하지 못할 것입니다. 그것은 바로 그 경우에 대한 PHP 통지를 박탈합니다. 기능 &lt;em&gt;을&lt;/em&gt; 확인한 &lt;em&gt;후에&lt;/em&gt; 만 &lt;code&gt;@&lt;/code&gt; 또는 &lt;code&gt;isset&lt;/code&gt; 을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="81156c5ae953b273e3902b4d1ef7ed1837bed552" translate="yes" xml:space="preserve">
          <source>No definite answers but here are a some possible explanations of why settings can 'suddenly' change:</source>
          <target state="translated">명확한 답변은 없지만 설정이 '갑자기'변경 될 수있는 이유에 대한 설명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="91635e35f4abac229c06d3c4f56a5e1d2eafe864" translate="yes" xml:space="preserve">
          <source>No warning is generated if the variable does not exist. That means
     &lt;strong&gt;empty()&lt;/strong&gt; is essentially the concise equivalent to &lt;strong&gt;!isset($var) || $var
     == false&lt;/strong&gt;.</source>
          <target state="translated">변수가 존재하지 않으면 경고가 생성되지 않습니다. 이는 &lt;strong&gt;empty ()&lt;/strong&gt; 가 본질적으로 &lt;strong&gt;! isset ($ var) ||&lt;/strong&gt; &lt;strong&gt;$ var == false&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c6b0307c54533e0402191bd9de7207911fff69c5" translate="yes" xml:space="preserve">
          <source>Note about sessions:</source>
          <target state="translated">세션에 대한 참고 사항 :</target>
        </trans-unit>
        <trans-unit id="a3d9072383e344f74adaa4c26d762293c7f21c51" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;error_reporting&lt;/code&gt; is actually set to the production value by default, not to the &quot;default&quot; value by default. This is somewhat confusing and is not documented outside of php.ini, so I have &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; validated this on other distributions.</source>
          <target state="translated">&lt;code&gt;error_reporting&lt;/code&gt; 은 실제로 기본적으로 &quot;default&quot;값이 아닌 프로덕션 값으로 설정되어 있습니다. 이것은 다소 혼란스럽고 php.ini 외부에서 문서화되지 않았으므로 다른 배포판에서 이것을 검증 &lt;strong&gt;&lt;em&gt;하지 않았습니다&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="0a18f636f6790f6023d9ef12a61b44bde49bf39e" translate="yes" xml:space="preserve">
          <source>Notice: Undefined Index</source>
          <target state="translated">통지 : 정의되지 않은 색인</target>
        </trans-unit>
        <trans-unit id="347423f8dee293ba85c3a8fe5cbc503483329b54" translate="yes" xml:space="preserve">
          <source>Notice: Undefined index / Undefined offset</source>
          <target state="translated">통지 : 정의되지 않은 인덱스 / 정의되지 않은 오프셋</target>
        </trans-unit>
        <trans-unit id="0a848ce61cfd285740f4e65392d48c13c3678cd3" translate="yes" xml:space="preserve">
          <source>Notice: Undefined index: my_index C:\wamp\www\mypath\index.php on line 11</source>
          <target state="translated">통지 : 정의되지 않은 색인 : my_index C : \ wamp \ www \ mypath \ index.php 11 행</target>
        </trans-unit>
        <trans-unit id="c86994fe562550b3ac31a01f8257ffdbe12b7aae" translate="yes" xml:space="preserve">
          <source>Notice: Undefined offset: 1</source>
          <target state="translated">통지 : 정의되지 않은 오프셋 : 1</target>
        </trans-unit>
        <trans-unit id="bd3f07ff172a3a6334217eaf8233e4ca3a6fa3e1" translate="yes" xml:space="preserve">
          <source>Notice: Undefined variable</source>
          <target state="translated">통지 : 정의되지 않은 변수</target>
        </trans-unit>
        <trans-unit id="dffcdb1bf04232aee9f0f64e9b2d549ee5d8a369" translate="yes" xml:space="preserve">
          <source>Notice: Undefined variable: my_variable_name in C:\wamp\www\mypath\index.php on line 10</source>
          <target state="translated">통지 : 정의되지 않은 변수 : my_variable_name in C : \ wamp \ www \ mypath \ index.php 10 행</target>
        </trans-unit>
        <trans-unit id="7d1f1845e38876b8ac531f9d0bdc7a346c58ce4b" translate="yes" xml:space="preserve">
          <source>On production servers, error reporting is off, therefore, we do not get these errors.</source>
          <target state="translated">프로덕션 서버에서는 오류보고가 해제되어 있으므로 이러한 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d3ddf5835c8d2eac6017bef1ae7bdf06b3b4f329" translate="yes" xml:space="preserve">
          <source>On the development server, however, we can set error reporting on.</source>
          <target state="translated">그러나 개발 서버에서는 오류보고를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de9b316c69dc94f684d15ed8c6cd50a97f8ce602" translate="yes" xml:space="preserve">
          <source>One common cause of a variable not existing after an HTML form has been submitted is the form element is not contained within a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">HTML 양식이 제출 된 후 존재하지 않는 변수의 일반적인 원인 중 하나는 양식 요소가 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그 내에 포함되어 있지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="407a80ff65f0071db8f8e8f3bba93ae3b11886c3" translate="yes" xml:space="preserve">
          <source>Or, as a quick and dirty solution:</source>
          <target state="translated">또는 빠르고 더러운 솔루션으로 :</target>
        </trans-unit>
        <trans-unit id="932814706ab285d220c37b15541fae7978275af9" translate="yes" xml:space="preserve">
          <source>Over time, PHP has become a more security-focused language. Settings which used to be turned off by default are now turned on by default. A perfect example of this is &lt;code&gt;E_STRICT&lt;/code&gt;, which became turned on by default as of &lt;a href=&quot;http://php.net/manual/en/migrating5.errorrep.php&quot;&gt;PHP 5.4.0&lt;/a&gt;.</source>
          <target state="translated">시간이 지남에 따라 PHP는 보안에 중점을 둔 언어가되었습니다. 기본적으로 꺼져 있던 설정은 이제 기본적으로 켜져 있습니다. 이것의 완벽한 예는 &lt;code&gt;E_STRICT&lt;/code&gt; 이며, &lt;a href=&quot;http://php.net/manual/en/migrating5.errorrep.php&quot;&gt;PHP 5.4.0부터&lt;/a&gt; 기본적으로 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="642bb433911359f33bc9d33217b34329791b4445" translate="yes" xml:space="preserve">
          <source>PHP has some rules to &lt;a href=&quot;http://php.net/language.variables.external#~dots+and+spaces&quot;&gt;coalesce&lt;/a&gt; non-standard parameter names into the superglobals. Apache might do some rewriting as well. 
You can also look at supplied raw &lt;code&gt;$_COOKIES&lt;/code&gt; and other HTTP request headers that way.</source>
          <target state="translated">PHP는 비표준 매개 변수 이름을 슈퍼 글로벌로 &lt;a href=&quot;http://php.net/language.variables.external#~dots+and+spaces&quot;&gt;통합&lt;/a&gt; 하는 규칙을 가지고 있습니다. 아파치는 재 작성도 할 수있다. 제공된 원시 &lt;code&gt;$_COOKIES&lt;/code&gt; 및 기타 HTTP 요청 헤더를 볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="468cd22c7bf987777c7ca1c78f72e4a69678ca93" translate="yes" xml:space="preserve">
          <source>PHP manual PHP 7.0</source>
          <target state="translated">PHP 매뉴얼 PHP 7.0</target>
        </trans-unit>
        <trans-unit id="ad6e15c5f8899d3169fc011909abe340f0f1fe8d" translate="yes" xml:space="preserve">
          <source>POST parameters and GET input will be be shown separately.</source>
          <target state="translated">POST 매개 변수와 GET 입력은 별도로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c2cd1e437917a8832f63ce25e35e8b9def270e98" translate="yes" xml:space="preserve">
          <source>Probably you were using old PHP version until and now upgraded PHP thats the reason it was working without any error till now from years.
until PHP4 there was no error if you are using variable without defining it but as of PHP5 onwards it throws errors for codes like mentioned in question.</source>
          <target state="translated">아마도 당신은 이전 PHP 버전을 사용하고 있었고 지금은 PHP를 업그레이드했기 때문에 몇 년 전부터 지금까지 아무런 오류없이 작동했습니다. PHP4까지는 변수를 정의하지 않고 변수를 사용하는 경우 오류가 없었지만 PHP5부터는 언급 된 코드에 대해 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8c0360b15395ce861552f8bf4f046a6bb7e18407" translate="yes" xml:space="preserve">
          <source>Q1: this notice means $varname is not
  defined at current scope of the
  script.</source>
          <target state="translated">Q1 :이 통지는 $ varname이 현재 스크립트 범위에 정의되어 있지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="e028015e925342efa0fbd5702c6b7abae91ac822" translate="yes" xml:space="preserve">
          <source>Q2: Use of isset(), empty() conditions before using any suspicious variable works well.</source>
          <target state="translated">Q2 : 의심스러운 변수를 사용하기 전에 isset (), empty () 조건을 사용하면 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="45c3dc1c7731c6185824876ed514e54f71bacb64" translate="yes" xml:space="preserve">
          <source>Reference:</source>
          <target state="translated">Reference:</target>
        </trans-unit>
        <trans-unit id="87dd0d554d10df7213c45dfb7bd10e2c88c94018" translate="yes" xml:space="preserve">
          <source>Regarding this part of the question:</source>
          <target state="translated">질문 의이 부분에 관해서 :</target>
        </trans-unit>
        <trans-unit id="39c788876858d9fdd3ed2ab494830cb7baca1db1" translate="yes" xml:space="preserve">
          <source>Related:</source>
          <target state="translated">Related:</target>
        </trans-unit>
        <trans-unit id="d79a11164c53c32c02f9eb2eae1e5feab5283f4d" translate="yes" xml:space="preserve">
          <source>Relying on the default value of an uninitialized variable is problematic in the case of including one file into another which uses the same variable name. It is also a major &lt;a href=&quot;http://www.php.net/manual/en/security.globals.php&quot;&gt;security risk&lt;/a&gt; with &lt;a href=&quot;http://www.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals&lt;/a&gt; turned on. &lt;a href=&quot;http://www.php.net/manual/en/errorfunc.constants.php#errorfunc.constants.errorlevels.e-notice&quot;&gt;E_NOTICE&lt;/a&gt; level error is issued in case of working with uninitialized variables, however not in the case of appending elements to the uninitialized array. &lt;a href=&quot;http://www.php.net/manual/en/function.isset.php&quot;&gt;isset()&lt;/a&gt; language construct can be used to detect if a variable has been already initialized. Additionally and more ideal is the solution of &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;empty()&lt;/a&gt; since it does not generate a warning or error message if the variable is not initialized.</source>
          <target state="translated">초기화되지 않은 변수의 기본값에 의존하는 것은 하나의 파일을 같은 변수 이름을 사용하는 다른 파일에 포함시키는 경우 문제가됩니다. 또한 &lt;a href=&quot;http://www.php.net/manual/en/ini.core.php#ini.register-globals&quot;&gt;register_globals를&lt;/a&gt; 켜면 주요 &lt;a href=&quot;http://www.php.net/manual/en/security.globals.php&quot;&gt;보안 위험&lt;/a&gt; 이됩니다. 초기화되지 않은 변수로 작업하는 경우 &lt;a href=&quot;http://www.php.net/manual/en/errorfunc.constants.php#errorfunc.constants.errorlevels.e-notice&quot;&gt;E_NOTICE&lt;/a&gt; 레벨 오류가 발생하지만 초기화되지 않은 배열에 요소를 추가하는 경우에는 발생하지 않습니다. 변수가 이미 초기화되었는지 여부를 감지하기 위해 &lt;a href=&quot;http://www.php.net/manual/en/function.isset.php&quot;&gt;isset ()&lt;/a&gt; 언어 구문을 사용할 수 있습니다. 또한 변수가 초기화되지 않은 경우 경고 또는 오류 메시지를 생성하지 않으므로 &lt;a href=&quot;http://php.net/manual/en/function.empty.php&quot;&gt;empty ()&lt;/a&gt; 솔루션이 더 이상적입니다.</target>
        </trans-unit>
        <trans-unit id="43342253ea2fd553b83e2dcc36f3ccef252aefcc" translate="yes" xml:space="preserve">
          <source>Rewrite your code to be cleaner. If you need to do this while moving to a production environment or don't want someone to see your errors, make sure you are disabling any display of errors, and only &lt;strong&gt;logging&lt;/strong&gt; your errors (see &lt;code&gt;display_errors&lt;/code&gt; and &lt;code&gt;log_errors&lt;/code&gt; in php.ini and your server settings).</source>
          <target state="translated">깔끔하게 코드를 다시 작성하십시오. 프로덕션 환경으로 이동하는 동안이 작업을 수행해야하거나 다른 사람이 오류를 보지 못하게하려면 오류 표시를 비활성화하고 오류 만 &lt;strong&gt;기록&lt;/strong&gt; 하십시오 (php.ini 및 서버의 &lt;code&gt;display_errors&lt;/code&gt; 및 &lt;code&gt;log_errors&lt;/code&gt; 참조) 설정).</target>
        </trans-unit>
        <trans-unit id="9a92e36176f5db7ee31b20941db9df36f1d45494" translate="yes" xml:space="preserve">
          <source>Secondly, if the notice doesn't have an obvious cause, use  &lt;a href=&quot;http://php.net/var_dump&quot;&gt;&lt;code&gt;var_dump&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://php.net/print_r&quot;&gt;&lt;code&gt;print_r&lt;/code&gt;&lt;/a&gt; to verify &lt;strong&gt;all&lt;/strong&gt; input arrays for their curent content:</source>
          <target state="translated">둘째, 통지에 명백한 원인이없는 경우 &lt;a href=&quot;http://php.net/var_dump&quot;&gt; &lt;code&gt;var_dump&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;http://php.net/print_r&quot;&gt; &lt;code&gt;print_r&lt;/code&gt; &lt;/a&gt; 을 사용하여 현재 입력 내용에 대한 &lt;strong&gt;모든&lt;/strong&gt; 입력 배열을 확인 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="104dcb0bb2892b25d57f4ea36672fdececf8a6d9" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://stackoverflow.com/questions/11200843/php-undefined-index-error-files&quot;&gt;PHP Undefined index error $_FILES?&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/11200843/php-undefined-index-error-files&quot;&gt;PHP Undefined index error $ _FILES?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea1e8440f7ef9d201cff3d6730628da0babbc671" translate="yes" xml:space="preserve">
          <source>Set a &lt;a href=&quot;http://www.php.net/manual/en/function.set-error-handler.php&quot;&gt;custom error handler&lt;/a&gt; for E_NOTICE and redirect the messages away from the standard output (maybe to a log file):</source>
          <target state="translated">E_NOTICE에 대한 &lt;a href=&quot;http://www.php.net/manual/en/function.set-error-handler.php&quot;&gt;사용자 정의 오류 처리기&lt;/a&gt; 를 설정하고 메시지를 표준 출력에서 ​​로그 파일로 리디렉션하십시오.</target>
        </trans-unit>
        <trans-unit id="38c6436bbe37b65fd4cff25daad2075086a89c7d" translate="yes" xml:space="preserve">
          <source>So if I want to reference to $name and echo if exists, I simply write:</source>
          <target state="translated">따라서 $ name 및 echo를 참조하려면 다음과 같이 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="36072e33dcedcd91ed319b8401b07e997a0d16ce" translate="yes" xml:space="preserve">
          <source>So, basically, its always better to set error reporting ON for development.</source>
          <target state="translated">따라서 기본적으로 개발시 오류보고를 ON으로 설정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="dd907facc72be388b97bc97f9d4de9e44bdb66aa" translate="yes" xml:space="preserve">
          <source>So, we can modify the code as:</source>
          <target state="translated">따라서 코드를 다음과 같이 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf2bd1f0ac3ac90004a4067972d328400ddac0a0" translate="yes" xml:space="preserve">
          <source>Solve the bugs:</source>
          <target state="translated">버그를 해결하십시오.</target>
        </trans-unit>
        <trans-unit id="6b419dc38af7fbcf78327fa02d54ae5b28da5e3d" translate="yes" xml:space="preserve">
          <source>Something else that needs to be noted is that on a *NIX OS and Mac OS X, things are case-sensitive.</source>
          <target state="translated">주목해야 할 사항은 * NIX OS 및 Mac OS X에서 대소 문자를 구분한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="694d6f01f2fae6b518767de72285500e452c5b00" translate="yes" xml:space="preserve">
          <source>Suppress the error with the &lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;@ operator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/language.operators.errorcontrol.php&quot;&gt;@ 연산자로&lt;/a&gt; 오류를 억제하십시오.</target>
        </trans-unit>
        <trans-unit id="d6c82f9f3e2c37a512e35fed74133603600a813b" translate="yes" xml:space="preserve">
          <source>Test the above snippet in the &lt;a href=&quot;https://3v4l.org/5Wvgj&quot;&gt;3v4l.org online PHP editor&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://3v4l.org/5Wvgj&quot;&gt;3v4l.org 온라인 PHP 편집기&lt;/a&gt; 에서 위의 스 니펫을 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="ecaa6602d829b8f8420a1c0f03fb5203f8df225e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$_COOKIE&lt;/code&gt; array is never populated right after &lt;code&gt;setcookie()&lt;/code&gt;, but only on any followup HTTP request.</source>
          <target state="translated">&lt;code&gt;$_COOKIE&lt;/code&gt; 배열은 &lt;code&gt;setcookie()&lt;/code&gt; 직후에 채워지지 않으며 후속 HTTP 요청에서만 채워집니다.</target>
        </trans-unit>
        <trans-unit id="3c56358ec3894d19d1d4eb5fffcd7f449a0224ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id=&lt;/code&gt; or &lt;code&gt;title=&lt;/code&gt; attribute does not suffice.</source>
          <target state="translated">&lt;code&gt;id=&lt;/code&gt; 또는 &lt;code&gt;title=&lt;/code&gt; 속성으로는 충분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5475a2d023a0d2c6629d8227920dd0c2120230f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name=value&lt;/code&gt; pairs after the &lt;code&gt;?&lt;/code&gt; question mark are your query (GET) parameters. Thus this URL could only possibly yield &lt;code&gt;$_GET[&quot;id&quot;]&lt;/code&gt; and &lt;code&gt;$_GET[&quot;sort&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 뒤에 나오는 &lt;code&gt;name=value&lt;/code&gt; 쌍 물음표는 조회 (GET) 매개 변수입니다. 따라서이 URL은 &lt;code&gt;$_GET[&quot;id&quot;]&lt;/code&gt; 및 &lt;code&gt;$_GET[&quot;sort&quot;]&lt;/code&gt; 만 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="537926253495da54f07300390caa8999eb35d143" translate="yes" xml:space="preserve">
          <source>The above code will create error as The if loop is not satisfied and in the else loop '$user_location' was not defined. Still PHP was asked to echo out the variable. So to modify the code you must do the following:</source>
          <target state="translated">위의 코드는 if 루프가 충족되지 않고 else 루프 '$ user_location'이 정의되지 않았으므로 오류를 생성합니다. 여전히 PHP는 변수를 반향하라는 요청을 받았습니다. 따라서 코드를 수정하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="ff2229b18be9c131810bf4ce48302ea9132957ba" translate="yes" xml:space="preserve">
          <source>The above will work just the same with arrays, including sessions etc, replacing the variable being checked with e.g.:</source>
          <target state="translated">위는 세션 등을 포함하여 배열과 동일하게 작동하며 검사중인 변수를 예를 들어 다음과 같이 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="b048f95530d7c64aa0abe42c8d504702a81859eb" translate="yes" xml:space="preserve">
          <source>The best way for getting input &lt;strong&gt;string&lt;/strong&gt; is:</source>
          <target state="translated">입력 &lt;strong&gt;문자열&lt;/strong&gt; 을 얻는 가장 좋은 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2e7a342aa025b66b97e7d078cc07babad37f5579" translate="yes" xml:space="preserve">
          <source>The best way to deal with these is set error reporting on while development.</source>
          <target state="translated">이를 처리하는 가장 좋은 방법은 개발 중에 오류보고를 설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8f202fd6dffea7f55e5915cd84401305b3545108" translate="yes" xml:space="preserve">
          <source>The language construct &lt;a href=&quot;http://php.net/manual/en/function.list.php&quot;&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; may generate this when it attempts to access an array index that does not exist:</source>
          <target state="translated">존재하지 않는 배열 인덱스에 액세스하려고 할 때 언어 구문 &lt;a href=&quot;http://php.net/manual/en/function.list.php&quot;&gt; &lt;code&gt;list()&lt;/code&gt; &lt;/a&gt; 가이를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0cc344971806481306ad72b408a64497fee5923" translate="yes" xml:space="preserve">
          <source>The manual states the following basic syntax:</source>
          <target state="translated">매뉴얼에는 다음과 같은 기본 구문이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f41d9148a95ae84740101b0f703243664daa5302" translate="yes" xml:space="preserve">
          <source>The mistake is you are using a variable &lt;code&gt;$user_location&lt;/code&gt; which is not defined by you earlier and it doesn't have any value So I recommend you to please &lt;strong&gt;declare&lt;/strong&gt; this variable &lt;strong&gt;before&lt;/strong&gt;&lt;strong&gt;using&lt;/strong&gt; it, For Example:</source>
          <target state="translated">실수는 &lt;code&gt;$user_location&lt;/code&gt; 변수를 사용하고 있으며 이전에 정의하지 않았으며 값이없는 것이므로이 변수 &lt;strong&gt;를&lt;/strong&gt; &lt;strong&gt;사용&lt;/strong&gt; &lt;strong&gt;하기 전에&lt;/strong&gt; &lt;strong&gt;선언&lt;/strong&gt; 하십시오 (예 :</target>
        </trans-unit>
        <trans-unit id="365614d5705739a89a49940148d1c78a6bc39208" translate="yes" xml:space="preserve">
          <source>The notices above appear often when working with &lt;code&gt;$_POST&lt;/code&gt;, &lt;code&gt;$_GET&lt;/code&gt; or &lt;code&gt;$_SESSION&lt;/code&gt;. For &lt;code&gt;$_POST&lt;/code&gt; and &lt;code&gt;$_GET&lt;/code&gt; you just have to check if the index exists or not before you use them. For &lt;code&gt;$_SESSION&lt;/code&gt; you have to make sure you have the session started with &lt;a href=&quot;http://php.net/manual/en/function.session-start.php&quot;&gt;&lt;code&gt;session_start()&lt;/code&gt;&lt;/a&gt; and that the index also exists.</source>
          <target state="translated">위의 통지는 &lt;code&gt;$_POST&lt;/code&gt; , &lt;code&gt;$_GET&lt;/code&gt; 또는 &lt;code&gt;$_SESSION&lt;/code&gt; 작업시 자주 나타납니다. &lt;code&gt;$_POST&lt;/code&gt; 및 &lt;code&gt;$_GET&lt;/code&gt; 경우 인덱스를 사용하기 전에 인덱스가 있는지 확인해야합니다. &lt;code&gt;$_SESSION&lt;/code&gt; 경우 &lt;a href=&quot;http://php.net/manual/en/function.session-start.php&quot;&gt; &lt;code&gt;session_start()&lt;/code&gt; &lt;/a&gt; 세션을 시작하고 색인도 존재하는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="1303d76056f9e379b64dd9d48ae0e0a06e708f16" translate="yes" xml:space="preserve">
          <source>The obvious/simplest answer is that someone adjusted either of these settings in php.ini, or an upgraded version of PHP is now using a different php.ini from before. That's the first place to look.</source>
          <target state="translated">가장 명백하고 간단한 대답은 누군가 php.ini에서 이러한 설정 중 하나를 조정했거나 업그레이드 된 PHP 버전이 이전과 다른 php.ini를 사용하고 있다는 것입니다. 그것이 가장 먼저 볼 곳입니다.</target>
        </trans-unit>
        <trans-unit id="376eadba6f8edb5bd20bcd426796e9bebd194975" translate="yes" xml:space="preserve">
          <source>The other critical setting is the errors can be hidden (i.e. &lt;code&gt;display_errors&lt;/code&gt; set to &quot;off&quot; or &quot;syslog&quot;).</source>
          <target state="translated">다른 중요한 설정은 오류를 숨길 수 있다는 것입니다 (예 : &lt;code&gt;display_errors&lt;/code&gt; 가 &quot;off&quot;또는 &quot;syslog&quot;로 설정 됨).</target>
        </trans-unit>
        <trans-unit id="a75e2610ffdef28c345b5a4fd3a2c743b87a8b13" translate="yes" xml:space="preserve">
          <source>The same except using &lt;a href=&quot;http://php.net/manual/en/migration70.new-features.php#migration70.new-features.null-coalesce-op&quot;&gt;Null Coalescing Operator&lt;/a&gt;. There's no longer a need to call &lt;code&gt;isset()&lt;/code&gt; as this is built in, and no need to provide the variable to return as it's assumed to return the value of the variable being checked:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/migration70.new-features.php#migration70.new-features.null-coalesce-op&quot;&gt;Null Coalescing Operator&lt;/a&gt; 사용을 제외하고 동일합니다. 내장 된 &lt;code&gt;isset()&lt;/code&gt; 을 더 이상 호출 할 필요가 없으며 검사중인 변수의 값을 반환한다고 가정 할 때 반환 할 변수를 제공 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e753cdaa9733caa08b0ad78fac8b93c3f850d4e4" translate="yes" xml:space="preserve">
          <source>The same sanity checks apply to file uploads and &lt;code&gt;$_FILES[&quot;formname&quot;]&lt;/code&gt;.</source>
          <target state="translated">파일 업로드 및 &lt;code&gt;$_FILES[&quot;formname&quot;]&lt;/code&gt; 동일한 온 전성 검사가 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="42ef8750d67ad52eff9e5e5b10e547c06bfd10a0" translate="yes" xml:space="preserve">
          <source>Then trying to access more columns/rows inside a loop.</source>
          <target state="translated">그런 다음 루프 내에서 더 많은 열 / 행에 액세스하려고합니다.</target>
        </trans-unit>
        <trans-unit id="fa53eaa4beaf8499274fd1778a100d7fe5d72b04" translate="yes" xml:space="preserve">
          <source>There is also the added complication that the web server configuration can enable/disable .htaccess directives, so if you have directives in .htaccess that suddenly start/stop working then you need to check for that.</source>
          <target state="translated">또한 웹 서버 구성이 .htaccess 지시문을 활성화 / 비활성화 할 수 있다는 복잡한 문제가 있습니다. 따라서 .htaccess에 지시문이 있으면 갑자기 작동을 시작 / 중지하면이를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="2d4690476a4f0e6d694d6749cbadb3b86233be17" translate="yes" xml:space="preserve">
          <source>There's one upside over the &lt;code&gt;isset?:&lt;/code&gt; or &lt;code&gt;??&lt;/code&gt; super-supression however. Notices still can get logged. And one may resurrect &lt;code&gt;@&lt;/code&gt;-hidden notices with: &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;isset?:&lt;/code&gt; 에 대해 거꾸로 된 것이 있습니까? : 또는 &lt;code&gt;??&lt;/code&gt; 그러나 슈퍼 억압. 통지는 여전히 기록 될 수 있습니다. 그리고 &lt;code&gt;@&lt;/code&gt; -hidden 통지를 다음 &lt;code&gt;set_error_handler(&quot;var_dump&quot;);&lt;/code&gt; 같이 부활시킬 수 있습니다 : set_error_handler ( &quot;var_dump&quot;);</target>
        </trans-unit>
        <trans-unit id="610f7df0df63664bc16df3ce3be5540b89479d0c" translate="yes" xml:space="preserve">
          <source>These errors occur whenever we are using a variable that is not set.</source>
          <target state="translated">이러한 오류는 설정되지 않은 변수를 사용할 때마다 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a242e7b9e37860f997ff8ec6dacfbc38200a6a40" translate="yes" xml:space="preserve">
          <source>This has become much cleaner as of PHP 7.0, now you can use the &lt;a href=&quot;https://wiki.php.net/rfc/isset_ternary&quot;&gt;null coalesce operator&lt;/a&gt;:</source>
          <target state="translated">이것은 PHP 7.0부터 훨씬 더 깨끗해졌습니다. 이제 &lt;a href=&quot;https://wiki.php.net/rfc/isset_ternary&quot;&gt;null 병합 연산자를&lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c62d73e2f27e33c2b5cf4dbfaee5abce2ccd0549" translate="yes" xml:space="preserve">
          <source>This is a very common error you can face.So don't worry just declare the variable and &lt;strong&gt;Enjoy Coding&lt;/strong&gt;.</source>
          <target state="translated">이것은 당신이 직면 할 수있는 매우 일반적인 오류이므로 변수를 선언하고 &lt;strong&gt;코딩을 즐기십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="546cc1f08cbe64dbb8a79b3b1650c727f7ad1883" translate="yes" xml:space="preserve">
          <source>This is the error:</source>
          <target state="translated">이것은 오류입니다.</target>
        </trans-unit>
        <trans-unit id="7ff966243afce1a7d902755c52d1b1b30ab8fe9d" translate="yes" xml:space="preserve">
          <source>This is usually discouraged. Newcomers tend to way overuse it.</source>
          <target state="translated">이것은 일반적으로 권장하지 않습니다. 새로 온 사람들은 그것을 과도하게 사용하는 경향이 있습니다.</target>
        </trans-unit>
        <trans-unit id="36f2f603cf8e92c13666ec1e8a17ad3d38c3e166" translate="yes" xml:space="preserve">
          <source>This means that you could use only &lt;code&gt;empty()&lt;/code&gt; to determine if the variable is set, and in addition it checks the variable against the following, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;0.0&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;&quot;0&quot;&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">즉, &lt;code&gt;empty()&lt;/code&gt; 만 사용하여 변수가 설정되어 있는지 판별 할 수 있으며, 다음 &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;0.0&lt;/code&gt; , &lt;code&gt;&quot;&quot;&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; , &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; 또는 &lt;code&gt;[]&lt;/code&gt; 와 비교하여 변수를 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2964725d242f957a205bf9c81be748ed179c898" translate="yes" xml:space="preserve">
          <source>This notice appears when you (or PHP) try to access an undefined index of an array.</source>
          <target state="translated">이 알림은 사용자 (또는 PHP)가 정의되지 않은 배열 인덱스에 액세스하려고 할 때 나타납니다.</target>
        </trans-unit>
        <trans-unit id="2f77747d9f5e582edfa13077c2f58ea6f57ce527" translate="yes" xml:space="preserve">
          <source>This one-liner is almost equivalent to:</source>
          <target state="translated">이 하나의 라이너는 다음과 거의 같습니다.</target>
        </trans-unit>
        <trans-unit id="529e7d3c2e538b5d52219d1235d17f9c6f3feac3" translate="yes" xml:space="preserve">
          <source>This question already has an answer here:</source>
          <target state="translated">이 질문에는 이미 답변이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dae2510804613c4a9f8613363dc92fe4709d144a" translate="yes" xml:space="preserve">
          <source>This will not disturb any program logic and will not produce Notice even if &lt;code&gt;$test&lt;/code&gt; does not have value.</source>
          <target state="translated">이것은 프로그램 로직을 방해하지 않으며 &lt;code&gt;$test&lt;/code&gt; 값이 없더라도 통지를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7d0ff90ff438f8ccf24aee8c2d3fc219626d14b2" translate="yes" xml:space="preserve">
          <source>Those notices are because you don't have the used variable &lt;code&gt;defined&lt;/code&gt; and &lt;code&gt;my_index&lt;/code&gt; key was not present into &lt;code&gt;$my_array&lt;/code&gt; variable.</source>
          <target state="translated">이러한 공지는 사용 된 변수가 &lt;code&gt;defined&lt;/code&gt; 되어 있지 않고 &lt;code&gt;my_index&lt;/code&gt; 키가 &lt;code&gt;$my_array&lt;/code&gt; 변수에 존재하지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="26dce8f11e609f7f5dc0f8bff4d78aeefc24d0cd" translate="yes" xml:space="preserve">
          <source>Those notices were triggered every time, because your &lt;code&gt;code&lt;/code&gt; is not correct, but probably you didn't have the reporting of notices on.</source>
          <target state="translated">이러한 알림은 &lt;code&gt;code&lt;/code&gt; 가 정확하지 않지만 알림을보고하지 않았기 때문에 매번 트리거되었습니다.</target>
        </trans-unit>
        <trans-unit id="1f393d7ff7fa821ea12b82653454936d213304bf" translate="yes" xml:space="preserve">
          <source>To answer your question, however, this error pops up now when it did not pop up before because:</source>
          <target state="translated">그러나 귀하의 질문에 대답하기 위해이 오류는 이전에 팝업되지 않았을 때 나타납니다.</target>
        </trans-unit>
        <trans-unit id="cdf65b738829366dbcfa0a49c6003855e28f50a8" translate="yes" xml:space="preserve">
          <source>To expand on option 3: This is the ideal. If you can go this route, you should. If you are not going this route initially, consider moving this route eventually by testing your code in a development environment. While you're at it, get rid of &lt;code&gt;~E_STRICT&lt;/code&gt; and &lt;code&gt;~E_DEPRECATED&lt;/code&gt; to see what might go wrong in the future. You're going to see a LOT of unfamiliar errors, but it's going to stop you from having any unpleasant problems when you need to upgrade PHP in the future.</source>
          <target state="translated">옵션 3을 확장하려면이 방법이 이상적입니다. 이 길을 갈 수 있다면해야합니다. 처음에이 경로를 사용하지 않는 경우 개발 환경에서 코드를 테스트하여이 경로를 이동하는 것이 좋습니다. 그 동안 &lt;code&gt;~E_STRICT&lt;/code&gt; 및 &lt;code&gt;~E_DEPRECATED&lt;/code&gt; 를 제거하여 향후 어떤 문제가 발생하는지 확인하십시오. 익숙하지 않은 오류가 많이 있지만 앞으로 PHP를 업그레이드해야 할 때 불쾌한 문제가 발생하는 것을 막을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="094906bab7d44cc6f366e6c60757198980fdd5c4" translate="yes" xml:space="preserve">
          <source>To get rid of this error, we see the following example:</source>
          <target state="translated">이 오류를 없애기 위해 다음 예제를 봅니다.</target>
        </trans-unit>
        <trans-unit id="e46e0fd0dc9fc8f9ff712783134beba6ae2a3302" translate="yes" xml:space="preserve">
          <source>To set error reporting on:</source>
          <target state="translated">오류보고를 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="3824c138f15d6133079f7888d6ee7a4cdd5353d0" translate="yes" xml:space="preserve">
          <source>Try these</source>
          <target state="translated">이것들을보십시오</target>
        </trans-unit>
        <trans-unit id="04c5e65889040cdd256841f71aea99622c36d5db" translate="yes" xml:space="preserve">
          <source>Turn off &lt;code&gt;E_NOTICE&lt;/code&gt; by copying the &quot;Default value&quot; &lt;code&gt;E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; and replacing it with what is currently uncommented after the equals sign in &lt;code&gt;error_reporting =&lt;/code&gt;. Restart Apache, or PHP if using CGI or FPM. Make sure you are editing the &quot;right&quot; php.ini. The correct one will be Apache if you are running PHP with Apache, fpm or php-fpm if running PHP-FPM, cgi if running PHP-CGI, etc. This is not the recommended method, but if you have legacy code that's going to be exceedingly difficult to edit, then it might be your best bet.</source>
          <target state="translated">&quot;기본 값&quot; &lt;code&gt;E_ALL &amp;amp; ~E_NOTICE &amp;amp; ~E_STRICT &amp;amp; ~E_DEPRECATED&lt;/code&gt; 를 복사하고 &lt;code&gt;error_reporting =&lt;/code&gt; 의 등호 뒤에 현재 주석 처리되지 않은 것으로 바꾸어 &lt;code&gt;E_NOTICE&lt;/code&gt; 를 끄십시오. CGI 또는 FPM을 사용하는 경우 Apache 또는 PHP를 다시 시작하십시오. &quot;옳은&quot;php.ini를 편집하고 있는지 확인하십시오. PHP-FPM을 실행하는 경우 Apache, fpm 또는 php-fpm, PHP-CGI를 실행하는 경우 cgi 등으로 PHP를 실행하는 경우 올바른 방법은 Apache입니다. 권장되는 방법은 아니지만 레거시 코드가있는 경우 편집하기가 매우 어려우면 최선의 방법 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fad49f8502febfcd91e4aef4ad474815b9e63622" translate="yes" xml:space="preserve">
          <source>Turn off &lt;code&gt;E_NOTICE&lt;/code&gt; on the file or folder level. This might be preferable if you have some legacy code but want to do things the &quot;right&quot; way otherwise. To do this, you should consult Apache2, Nginx, or whatever your server of choice is. In Apache, you would use &lt;code&gt;php_value&lt;/code&gt; inside of &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">파일 또는 폴더 수준에서 &lt;code&gt;E_NOTICE&lt;/code&gt; 를 끕니다. 레거시 코드가 있지만 &quot;올바른&quot;방식으로 작업을 수행하려는 경우이 방법이 바람직 할 수 있습니다. 이를 위해서는 Apache2, Nginx 또는 선택한 서버가 무엇이든 상담해야합니다. Apache에서는 &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; 안에 &lt;code&gt;php_value&lt;/code&gt; 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5d5ed957309764841554d8b8cb88350227d87b01" translate="yes" xml:space="preserve">
          <source>Two variables are used to access two array elements, however there is only one array element, index &lt;code&gt;0&lt;/code&gt;, so this will generate:</source>
          <target state="translated">두 개의 배열 요소에 액세스하는 데 두 개의 변수가 사용되지만 index &lt;code&gt;0&lt;/code&gt; 인 배열 요소는 하나뿐이므로 다음과 같이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="e0e5d8fc0ef63edac5e7143fdf3e1855a5dac9d5" translate="yes" xml:space="preserve">
          <source>UPDATE 1: The problem is that when executing &lt;code&gt;$citiesCounterArray[$key]&lt;/code&gt;, sometimes the &lt;code&gt;$key&lt;/code&gt; corresponds to a key that does not exist in the &lt;code&gt;$citiesCounterArray&lt;/code&gt; array, but that is not always the case based on the data of my loop. What I need is to set a condition so that if &lt;code&gt;$key&lt;/code&gt; exists in the array, then run the code, otherwise, skip it.</source>
          <target state="translated">업데이트 1 : 문제는 &lt;code&gt;$citiesCounterArray[$key]&lt;/code&gt; 실행할 때 때때로 &lt;code&gt;$key&lt;/code&gt; 가 &lt;code&gt;$citiesCounterArray&lt;/code&gt; 배열에 존재하지 않는 키에 해당하지만 항상 내 루프의 데이터를 기반으로하는 것은 아닙니다. 내가 필요한 것은 &lt;code&gt;$key&lt;/code&gt; 가 배열에 있으면 코드를 실행하고 그렇지 않으면 건너 뛰도록 조건을 설정하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9ec6c14130d525ead0c2ea871193c581934d54f1" translate="yes" xml:space="preserve">
          <source>UPDATE 2: This is how I fixed it by using &lt;code&gt;array_key_exists()&lt;/code&gt;:</source>
          <target state="translated">업데이트 2 : 이것은 &lt;code&gt;array_key_exists()&lt;/code&gt; 를 사용하여 수정 한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="2bf6727023f25222e9c74a2bf96494095dbea5eb" translate="yes" xml:space="preserve">
          <source>Using a &lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;ternary&lt;/a&gt; is simple, readable, and clean:</source>
          <target state="translated">&lt;a href=&quot;http://php.net/manual/en/language.operators.comparison.php#language.operators.comparison.ternary&quot;&gt;삼항을&lt;/a&gt; 사용하는 것은 간단하고 읽기 쉽고 깨끗합니다.</target>
        </trans-unit>
        <trans-unit id="86a26ccd5642751a609fef60b7dd337f337a2cc3" translate="yes" xml:space="preserve">
          <source>Usually notices don't get displayed / reported (see &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;PHP manual&lt;/a&gt;)
so it is possible that when setting up the server, the php.ini file could not be loaded for some reason (file permissions??) and you were on the default settings. Later on, the 'bug' has been solved (by accident) and now it CAN load the correct php.ini file with the error_reporting set to show notices.</source>
          <target state="translated">일반적으로 알림이 표시 /보고되지 않으므로 ( &lt;a href=&quot;http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;PHP 설명서&lt;/a&gt; 참조) 서버를 설정할 때 php.ini 파일을 어떤 이유로로드 할 수없고 (파일 권한 ??) 기본 설정에있을 수 있습니다. . 나중에 '버그'가 우연히 해결되었으며 이제는 알림을 표시하도록 error_reporting이 설정된 올바른 php.ini 파일을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d24530c166702c7232b213cc8246a8e83fd5322f" translate="yes" xml:space="preserve">
          <source>Variable names &lt;strong&gt;and&lt;/strong&gt; array indicies are case-sensitive in PHP.</source>
          <target state="translated">변수 이름 &lt;strong&gt;과&lt;/strong&gt; 배열 인덱스는 PHP에서 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="912e179cc09cc88b4ce8f95c30a8269848354e3e" translate="yes" xml:space="preserve">
          <source>WHAT CAN I DO ABOUT IT?</source>
          <target state="translated">IT에 대해 무엇을 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="f116b7027271c72eac0333114826b4935b0862bd" translate="yes" xml:space="preserve">
          <source>WHAT DO THE ERRORS MEAN?</source>
          <target state="translated">오류는 무엇을 의미합니까?</target>
        </trans-unit>
        <trans-unit id="01acd73d35339d7dfe2443f4aa5a7d86cf9c0843" translate="yes" xml:space="preserve">
          <source>WHY IS THIS HAPPENING?</source>
          <target state="translated">왜 이런 일이 발생합니까?</target>
        </trans-unit>
        <trans-unit id="f4b8c27564705b305bacd1f667594409201c48e9" translate="yes" xml:space="preserve">
          <source>Ways to deal with the issue:</source>
          <target state="translated">문제를 해결하는 방법 :</target>
        </trans-unit>
        <trans-unit id="c5ad5e6704299d9f5c147a65c43665667dece0d2" translate="yes" xml:space="preserve">
          <source>We can check variable is defined or not in very efficient way!.</source>
          <target state="translated">변수가 매우 효율적으로 정의되어 있는지 확인할 수 있습니다!.</target>
        </trans-unit>
        <trans-unit id="338ef7a73886bf3bfc39e571370b27349815667c" translate="yes" xml:space="preserve">
          <source>We can initialize the variables to &lt;code&gt;NULL&lt;/code&gt; before assigning their values or using them.</source>
          <target state="translated">값을 할당하거나 사용하기 전에 변수를 &lt;code&gt;NULL&lt;/code&gt; 로 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ddce272e98389fe0e948221dee276e4cbbec29d" translate="yes" xml:space="preserve">
          <source>What is the meaning of these error messages?</source>
          <target state="translated">이 오류 메시지의 의미는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="c6e7ff943dd48acccebc4fe59031f4d94dd3f80d" translate="yes" xml:space="preserve">
          <source>What will have happened in this case is that either the &lt;code&gt;error_reporting&lt;/code&gt; was changed to also show notices (as per examples) and/or that the settings were changed to &lt;code&gt;display_errors&lt;/code&gt; on screen (as opposed to suppressing them/logging them).</source>
          <target state="translated">이 경우에 발생하는 것은 &lt;code&gt;error_reporting&lt;/code&gt; 이 예를 들어 통지를 표시하도록 변경되었거나 설정을 화면에 표시하지 않고 (표시를 억제 / 로깅하는 것과는 달리) &lt;code&gt;display_errors&lt;/code&gt; 로 변경 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="fc90694c7f9e38f9e4e15e33a7a837dea215728c" translate="yes" xml:space="preserve">
          <source>When I was encountering these and other issues, I used &lt;a href=&quot;https://netbeans.org/&quot;&gt;NetBeans IDE&lt;/a&gt; (free) and it gave me a host of warnings and notices. Some of them offer very helpful tips. This is not a requirement, and I don't use IDEs anymore except for large projects. I'm more of a &lt;code&gt;vim&lt;/code&gt; person these days :).</source>
          <target state="translated">이 문제와 다른 문제가 발생했을 때 &lt;a href=&quot;https://netbeans.org/&quot;&gt;NetBeans IDE&lt;/a&gt; (무료)를 사용하여 많은 경고와 알림을 받았습니다. 그들 중 일부는 매우 유용한 팁을 제공합니다. 이것은 요구 사항이 아니며 대규모 프로젝트를 제외하고는 더 이상 IDE를 사용하지 않습니다. 나는 요즘 더 &lt;code&gt;vim&lt;/code&gt; 인 사람입니다. :).</target>
        </trans-unit>
        <trans-unit id="e602b956524c545d1490322fb189dd18dc6a526a" translate="yes" xml:space="preserve">
          <source>When dealing with files, a proper enctype and a POST method are required, which will trigger an undefined index notice if either are not included in the form.</source>
          <target state="translated">파일을 다룰 때는 적절한 enctype과 POST 메소드가 필요합니다.이 메소드는 양식에 포함되지 않은 경우 정의되지 않은 색인 통지를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="75f1dfbc928b0ef0f4f2433279161b0b99c3534d" translate="yes" xml:space="preserve">
          <source>When using sessions, &lt;code&gt;session_start();&lt;/code&gt; is required to be placed inside all files using sessions.</source>
          <target state="translated">세션을 사용할 때 &lt;code&gt;session_start();&lt;/code&gt; 세션을 사용하여 모든 파일 안에 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="6f3141d1c6a51843178f64998c3976cdbb37f35e" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;code&gt;method=GET&lt;/code&gt; (or leaving it out) would yield &lt;code&gt;$_GET&lt;/code&gt; variables.</source>
          <target state="translated">반면 &lt;code&gt;method=GET&lt;/code&gt; (또는 제외)는 &lt;code&gt;$_GET&lt;/code&gt; 변수를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f71ba47027addf0c844f9adba2379fa962b8ceac" translate="yes" xml:space="preserve">
          <source>Why do they appear all of a sudden? I used to use this script for years and I've never had any problem.</source>
          <target state="translated">왜 갑자기 나타 납니까? 이 스크립트를 몇 년 동안 사용해 왔으며 아무런 문제가 없었습니다.</target>
        </trans-unit>
        <trans-unit id="5f3a0ac29b29bb43640449d84a6af6215f02572f" translate="yes" xml:space="preserve">
          <source>With modern PHP configurations (&amp;ge; 5.6) it has become &lt;a href=&quot;https://stackoverflow.com/questions/2142497/whats-wrong-with-using-request&quot;&gt;feasible&lt;/a&gt; (not fashionable) to use &lt;a href=&quot;http://php.net/reserved.variables.request&quot;&gt;&lt;code&gt;$_REQUEST['vars']&lt;/code&gt;&lt;/a&gt; again, which mashes GET and POST params.</source>
          <target state="translated">최신 PHP 구성 (&amp;ge; 5.6)에서는 &lt;a href=&quot;http://php.net/reserved.variables.request&quot;&gt; &lt;code&gt;$_REQUEST['vars']&lt;/code&gt; &lt;/a&gt; 다시 사용하여 GET 및 POST 매개 변수를 매기는 것이 &lt;a href=&quot;https://stackoverflow.com/questions/2142497/whats-wrong-with-using-request&quot;&gt;가능해&lt;/a&gt; 졌습니다 (유행이 아님).</target>
        </trans-unit>
        <trans-unit id="a1c129010c6b6c6343d2d728ed3f8853160d3aad" translate="yes" xml:space="preserve">
          <source>You changed the webserver configuration (assuming apache here): &lt;code&gt;.htaccess&lt;/code&gt; files and vhost configurations can also manipulate php settings.</source>
          <target state="translated">웹 서버 구성을 변경했습니다 (여기서 아파치 가정) : &lt;code&gt;.htaccess&lt;/code&gt; 파일 및 vhost 구성도 PHP 설정을 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b4fced5e709e30bbfcf4c68990b75c80763f5b0" translate="yes" xml:space="preserve">
          <source>You have removed or introduced some code (possibly in a dependency) that sets relevant settings at runtime using &lt;code&gt;ini_set()&lt;/code&gt; or &lt;code&gt;error_reporting()&lt;/code&gt; (search for these in the code)</source>
          <target state="translated">&lt;code&gt;ini_set()&lt;/code&gt; 또는 &lt;code&gt;error_reporting()&lt;/code&gt; 사용하여 런타임에 관련 설정을 설정하는 일부 코드 (종종 종속성)를 제거하거나 도입했습니다 (코드에서 해당 항목 검색).</target>
        </trans-unit>
        <trans-unit id="69968b7d6a5a3f2c642fe12286888d9b81786282" translate="yes" xml:space="preserve">
          <source>You have upgraded PHP to a newer version which can have other defaults for error_reporting, display_errors or other relevant settings.</source>
          <target state="translated">error_reporting, display_errors 또는 기타 관련 설정에 대한 다른 기본값을 가질 수있는 최신 버전으로 PHP를 업그레이드했습니다.</target>
        </trans-unit>
        <trans-unit id="7984239a557e68cdcc4c9f7fdc82e765dac0c254" translate="yes" xml:space="preserve">
          <source>You installed PHP and the new default settings are somewhat poorly documented but do not exclude &lt;code&gt;E_NOTICE&lt;/code&gt;.</source>
          <target state="translated">PHP를 설치했고 새로운 기본 설정은 다소 문서화되어 있지 않지만 &lt;code&gt;E_NOTICE&lt;/code&gt; 를 제외하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c6f1e94030aa7bce1aaede4251410298ef8b399" translate="yes" xml:space="preserve">
          <source>You should really be checking for this issue and handling it appropriately, either serving a different message, or even just returning a null value for everything else to identify the precise state.</source>
          <target state="translated">실제로이 문제를 확인하고 적절하게 처리하여 다른 메시지를 제공하거나 정확한 상태를 식별하기 위해 다른 모든 항목에 대해 null 값을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="b66267e9d806cae79e8954617ea907a8c9c827ca" translate="yes" xml:space="preserve">
          <source>Your code will be -</source>
          <target state="translated">귀하의 코드는-</target>
        </trans-unit>
        <trans-unit id="bdfad304004b547e14b9421e88ba6121b6614ac4" translate="yes" xml:space="preserve">
          <source>and any of these could also have been changed.</source>
          <target state="translated">이 중 하나도 변경되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c281092bf1fc0883e8ca51f5a75d6dbbe72083a" translate="yes" xml:space="preserve">
          <source>in php code itself</source>
          <target state="translated">PHP 코드 자체에서</target>
        </trans-unit>
        <trans-unit id="47595c7e0c922439a82930de428693c2485d70bf" translate="yes" xml:space="preserve">
          <source>mysql case sensitive table names in queries</source>
          <target state="translated">쿼리의 MySQL 대소 문자 구분 테이블 이름</target>
        </trans-unit>
        <trans-unit id="e14ba9580172b8ff8ef6a03867bfb9736b487d50" translate="yes" xml:space="preserve">
          <source>or however many levels deep you need, e.g.:</source>
          <target state="translated">또는 필요한 많은 수준, 예 :</target>
        </trans-unit>
        <trans-unit id="9b33cbbef3ccb8fdb6cb8aaa76aef3abd8db1e27" translate="yes" xml:space="preserve">
          <source>or in a &lt;code&gt;while&lt;/code&gt; loop:</source>
          <target state="translated">또는 &lt;code&gt;while&lt;/code&gt; 루프에서 :</target>
        </trans-unit>
        <trans-unit id="3e6c4e3d3890ad675a43319d3a2508da9155b5ae" translate="yes" xml:space="preserve">
          <source>the quick fix is to assign your variable to null at the top of your code</source>
          <target state="translated">빠른 수정은 코드 상단에서 변수를 null에 할당하는 것입니다</target>
        </trans-unit>
        <trans-unit id="e654604e10a9c37094bce87c19a7810ec1fb4979" translate="yes" xml:space="preserve">
          <source>undefined index means in an array you requested for unavailable array index for example</source>
          <target state="translated">정의되지 않은 인덱스는 예를 들어 사용할 수없는 배열 인덱스를 요청한 배열을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="93aa09c0ee6970627c3187b3637a745bf57b04d1" translate="yes" xml:space="preserve">
          <source>undefined offset means in array you have asked for non existing key. And the 
solution for this is to check before use</source>
          <target state="translated">정의되지 않은 오프셋은 존재하지 않는 키를 요청한 배열을 의미합니다. 이에 대한 해결책은 사용하기 전에 확인하는 것입니다</target>
        </trans-unit>
        <trans-unit id="c23b5abf2ff6f143c8acb60d718c8ede77d83594" translate="yes" xml:space="preserve">
          <source>undefined variable means you have used completely not existing variable or which is not defined or initialized by that name for example</source>
          <target state="translated">정의되지 않은 변수는 기존 변수를 완전히 사용하지 않았거나 해당 이름으로 정의되거나 초기화되지 않은 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="0db9d3b0198095f8017c1615ded2c62f36df51d8" translate="yes" xml:space="preserve">
          <source>why not keep things simple?</source>
          <target state="translated">왜 간단하게 유지하지 않습니까?</target>
        </trans-unit>
        <trans-unit id="aacd12fae3466e67c1db7d37bb55c38c2d26f64d" translate="yes" xml:space="preserve">
          <source>“Notice: Undefined variable”, “Notice: Undefined index”, and “Notice: Undefined offset” using PHP</source>
          <target state="translated">PHP를 사용한 &quot;알림 : 정의되지 않은 변수&quot;, &quot;알림 : 정의되지 않은 색인&quot;및 &quot;알림 : 정의되지 않은 오프셋&quot;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
