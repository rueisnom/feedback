<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/424071">
    <body>
      <group id="424071">
        <trans-unit id="ad77ba69d05093350eb6a79b032a5ce8bae1ae0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Another Way&lt;/strong&gt; (less preferred for scripts, because it's a &lt;em&gt;porcelain&lt;/em&gt; command; meant to be user-facing)</source>
          <target state="translated">&lt;strong&gt;다른 방법&lt;/strong&gt; ( &lt;em&gt;도자기&lt;/em&gt; 명령이므로 사용자가 직접 사용해야하기 때문에 스크립트에 적합하지 않음)</target>
        </trans-unit>
        <trans-unit id="d0447576676f4947b756aa9952d98b0bd139cb6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you want also the status of the changed files:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;변경된 파일의 상태도 원하는 경우 :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23278d82deb187be21f8a509fb7dc6ccf2a1b5dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OK,&lt;/strong&gt; there are couple of ways to show all files in a particular commit...</source>
          <target state="translated">&lt;strong&gt;좋아,&lt;/strong&gt; 특정 커밋에서 모든 파일을 표시하는 몇 가지 방법이 있습니다 ...</target>
        </trans-unit>
        <trans-unit id="8c8e9bd1d44588df0531d369d46966c0f9b8365a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Preferred Way&lt;/strong&gt; (because it's a &lt;em&gt;plumbing&lt;/em&gt; command; meant to be programmatic):</source>
          <target state="translated">&lt;strong&gt;선호하는 방법&lt;/strong&gt; ( &lt;em&gt;배관&lt;/em&gt; 명령이기 때문에 프로그래밍 방식이어야 함) :</target>
        </trans-unit>
        <trans-unit id="9cff8f3feb1036c13c81f6fa4295e98744512d52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;: Or as Ethan points out below</source>
          <target state="translated">&lt;strong&gt;업데이트&lt;/strong&gt; : 또는 Ethan이 아래에 지적한 것처럼</target>
        </trans-unit>
        <trans-unit id="17ef44e729d29da4c9ca86e5ba6acc585dfb23b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using standard git diff command&lt;/strong&gt; (also good for scripting):</source>
          <target state="translated">&lt;strong&gt;표준 git diff 명령 사용&lt;/strong&gt; (스크립팅에도 적합) :</target>
        </trans-unit>
        <trans-unit id="0c9550ab90e1179441e1e29efc4951546f96e3a8" translate="yes" xml:space="preserve">
          <source>A combination of &quot;&lt;code&gt;git show --stat&lt;/code&gt;&quot; (thanks Ryan) and a couple of sed commands should trim the data down for you:</source>
          <target state="translated">&quot; &lt;code&gt;git show --stat&lt;/code&gt; &quot;(Ryan에게 감사함)과 몇 가지 sed 명령을 조합하면 데이터가 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="5d44055b201ce7d5ff033c084205585bbbed9af7" translate="yes" xml:space="preserve">
          <source>Although it lists the files, it also includes unwanted diff information for each.</source>
          <target state="translated">파일을 나열하지만 각각에 대한 원치 않는 diff 정보도 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c3160d2e1bf1129cc94e4fa1551b73ce3f0331b0" translate="yes" xml:space="preserve">
          <source>COMMIT can be blank (&quot;&quot;) or the sha-1 or the sha-1 shortened.</source>
          <target state="translated">COMMIT는 공백 ( &quot;&quot;)이거나 sha-1 또는 sha-1이 짧아 질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a116d827d917cdb35856796c310530675a012bc3" translate="yes" xml:space="preserve">
          <source>Display the log.</source>
          <target state="translated">로그를 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="47a311a3d83ccc26d9917458100fbb5924a360fb" translate="yes" xml:space="preserve">
          <source>For those covering from SVN you will find this useful: (this is a combination of ideas from different threads, I only take credit of knowing how to use copy/paste)</source>
          <target state="translated">SVN을 다루는 사람들에게는 이것이 유용하다는 것을 알 수 있습니다 : (이것은 다른 스레드의 아이디어의 조합입니다. 복사 / 붙여 넣기 사용 방법 만 알고 있습니다.)</target>
        </trans-unit>
        <trans-unit id="2be5967d03fee8ee4abd3511837583183b3fb976" translate="yes" xml:space="preserve">
          <source>Found a perfect answer to this:</source>
          <target state="translated">이에 대한 완벽한 답을 찾았습니다.</target>
        </trans-unit>
        <trans-unit id="9ae87e499c85238f807e42c7a1ce2f73c459c682" translate="yes" xml:space="preserve">
          <source>How to list all the files in a commit</source>
          <target state="translated">커밋의 모든 파일을 나열하는 방법</target>
        </trans-unit>
        <trans-unit id="5bbaf2e40138b37a92b2b642b2cd1abbe4bd88f6" translate="yes" xml:space="preserve">
          <source>I also create the below image to show all steps to go through in these situation:</source>
          <target state="translated">또한 이러한 상황에서 모든 단계를 보여주기 위해 아래 이미지를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="13d91a62659b1da8dc0583e2939aa92a745b195b" translate="yes" xml:space="preserve">
          <source>I am looking for a simple &lt;code&gt;git&lt;/code&gt; command that provides a nicely formatted list of all files that were part of the commit given by a hash (SHA1), with no extraneous information.</source>
          <target state="translated">외부 정보가없는 해시 (SHA1)가 제공 한 커밋의 일부였던 모든 파일의 형식이 좋은 목록을 제공하는 간단한 &lt;code&gt;git&lt;/code&gt; 명령을 찾고 있습니다.</target>
        </trans-unit>
        <trans-unit id="f481599de8d99219c663f80ada085d861d69693b" translate="yes" xml:space="preserve">
          <source>I have tried:</source>
          <target state="translated">나는 시도했다 :</target>
        </trans-unit>
        <trans-unit id="da6a9bf33c8546e800cfbae46c41d0d687038ccf" translate="yes" xml:space="preserve">
          <source>I know this answer doesn't really match &quot;with no extraneous information.&quot;, but I still think this list is more useful then just the filenames.</source>
          <target state="translated">이 답변이 &quot;외부 정보가없는&quot;것과 실제로 일치하지 않는다는 것을 알고 있지만,이 목록이 파일 이름보다 더 유용하다고 생각합니다.</target>
        </trans-unit>
        <trans-unit id="664620311d1e31a10ca93db7aca57a5fe3ffbd72" translate="yes" xml:space="preserve">
          <source>I like this:</source>
          <target state="translated">나는 이것을 좋아한다 :</target>
        </trans-unit>
        <trans-unit id="56089483c6a444fdf3e608a08d370dfe5bf2d45a" translate="yes" xml:space="preserve">
          <source>I like to use</source>
          <target state="translated">나는 사용하고 싶다</target>
        </trans-unit>
        <trans-unit id="461c9a36b8e06be6ad0b65f05bbf91a57b827b34" translate="yes" xml:space="preserve">
          <source>I personally use the combination of &lt;strong&gt;--stat&lt;/strong&gt; and &lt;strong&gt;--oneline&lt;/strong&gt; with the &lt;strong&gt;show&lt;/strong&gt; command:</source>
          <target state="translated">개인적으로 &lt;strong&gt;show&lt;/strong&gt; 명령과 함께 &lt;strong&gt;--stat&lt;/strong&gt; 와 &lt;strong&gt;--oneline&lt;/strong&gt; 의 조합을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4eeacd36a6affc2bb872d7f5a902ed9f7a145bff" translate="yes" xml:space="preserve">
          <source>I thought I would share a summary of my alias..  also I find using 'zsh' great with git it chroma keys everything nicely and tells you want branch are in all of the time by changing the command prompt.</source>
          <target state="translated">나는 내 별칭의 요약을 공유 할 것이라고 생각했습니다. 또한 git과 함께 'zsh'를 사용하면 모든 것이 훌륭하게 크로마 키가되고 명령 프롬프트를 변경하여 분기가 항상 필요하다는 것을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ba70e2b1f7e42bc1811df8e8bc98003fd120ac8" translate="yes" xml:space="preserve">
          <source>I use &lt;strong&gt;changed&lt;/strong&gt; alias a quite often. To set it up:</source>
          <target state="translated">&lt;strong&gt;변경된&lt;/strong&gt; 별칭을 자주 사용합니다. 설정하려면 :</target>
        </trans-unit>
        <trans-unit id="98d825be3b1fd83a060d907ba4e9e98d6dba1d31" translate="yes" xml:space="preserve">
          <source>I use this to get list of changed files in merge commit</source>
          <target state="translated">이것을 사용하여 병합 커밋에서 변경된 파일 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="db976d5e421eb3b7c94ac9230e9184842fccf015" translate="yes" xml:space="preserve">
          <source>I use this to get list of modified files between two changesets:</source>
          <target state="translated">이것을 사용하여 두 변경 세트 사이에서 수정 된 파일 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0ecbf90cd82c6a9d98ba47a1275d8055eff8024d" translate="yes" xml:space="preserve">
          <source>I'll just assume that &lt;code&gt;gitk&lt;/code&gt; is not desired for this. In that case, try &lt;code&gt;git show --name-only &amp;lt;sha&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gitk&lt;/code&gt; 가 바람직하지 않다고 가정합니다. 이 경우 &lt;code&gt;git show --name-only &amp;lt;sha&amp;gt;&lt;/code&gt; 를 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="83011737a333f39d933169ff275f7cf3e83b3bc1" translate="yes" xml:space="preserve">
          <source>If you are using oh-my-zsh and git plugin, the &lt;strong&gt;glg&lt;/strong&gt; shortcut is helpful.</source>
          <target state="translated">oh-my-zsh 및 git 플러그인을 사용하는 경우 &lt;strong&gt;glg&lt;/strong&gt; 단축키가 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="a0a7ef9e99f62d02d2b82ba46be7cbf0ea17ea41" translate="yes" xml:space="preserve">
          <source>If you do not like/want the addition/removal stats, you can replace &lt;strong&gt;--stat&lt;/strong&gt; with &lt;strong&gt;--name-only&lt;/strong&gt;</source>
          <target state="translated">추가 / 제거 통계를 원하지 않거나 원하지 않는 경우 &lt;strong&gt;--stat&lt;/strong&gt; 를 &lt;strong&gt;--name-only로&lt;/strong&gt; 바꿀 수 있습니다</target>
        </trans-unit>
        <trans-unit id="e3f1e938253f750013417557858d4ffa0d4669a4" translate="yes" xml:space="preserve">
          <source>If you hit a file you'll get the raw version of the file; which sometimes is what you want if you're only looking for a nice reference or key pieces of code (diffs can make everything a mess),</source>
          <target state="translated">파일을 누르면 파일의 원시 버전을 얻게됩니다. 좋은 참조 또는 주요 코드 조각 만 찾고 있다면 때로는 원하는 것입니다 (diffs는 모든 것을 혼란스럽게 만들 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="ce6c2a17816e6fae5e61a04888a7fda4e1279c93" translate="yes" xml:space="preserve">
          <source>If you really want only the names of the files you could add the &lt;code&gt;--name-only&lt;/code&gt; option.</source>
          <target state="translated">파일 이름 만 원한다면 &lt;code&gt;--name-only&lt;/code&gt; 옵션을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f28c9e31ca8592bd0032f87f871e05b0327da4a" translate="yes" xml:space="preserve">
          <source>If you want to get list of all files in a commit, you can use</source>
          <target state="translated">커밋의 모든 파일 목록을 얻으려면 다음을 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="641d538f0877df2ad3d3baa2399343625cce7329" translate="yes" xml:space="preserve">
          <source>If you want to get list of changed files:</source>
          <target state="translated">변경된 파일 목록을 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b1669b72e9ffad6d77a942c6ad146262145ec2ac" translate="yes" xml:space="preserve">
          <source>Is there another &lt;code&gt;git&lt;/code&gt; command that will provide just the list I want, so that I can avoid parsing it from the &lt;code&gt;git show&lt;/code&gt; output?</source>
          <target state="translated">원하는 목록 만 제공하는 &lt;code&gt;git&lt;/code&gt; 명령이 있습니까? 그래서 &lt;code&gt;git show&lt;/code&gt; 출력에서 구문 분석을 피할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="e2347eabd53f52815a8ab35a979807fbb4ab2820" translate="yes" xml:space="preserve">
          <source>It outputs the commit summary with a list of files beneath it with their modes and if there added(&lt;code&gt;A&lt;/code&gt;), deleted(&lt;code&gt;D&lt;/code&gt;) or modified(&lt;code&gt;M&lt;/code&gt;);</source>
          <target state="translated">모드와 함께 파일 목록과 함께 커밋 요약을 출력하고 추가 ( &lt;code&gt;A&lt;/code&gt; ), deleted ( &lt;code&gt;D&lt;/code&gt; ) 또는 modified ( &lt;code&gt;M&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="d4c2862e5fe89ea8a2dc96353fc2de6a39140626" translate="yes" xml:space="preserve">
          <source>List the files that changed in a commit:</source>
          <target state="translated">커밋에서 변경된 파일을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="3e1b8b3eca17d3694b2f739ffccb0eabda9f87d2" translate="yes" xml:space="preserve">
          <source>Only drawback of this method is that it doesn't easily show a tree of files.</source>
          <target state="translated">이 방법의 단점은 파일 트리를 쉽게 표시하지 않는다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="422d87c30b12c87ca5030395cabc62cb65c292fb" translate="yes" xml:space="preserve">
          <source>Recently I needed to list all changed files between two commits. So I used this (also *nix specific) command</source>
          <target state="translated">최근에 두 커밋 사이에 변경된 파일을 모두 나열해야했습니다. 그래서 나는 (또한 * nix 특정) 명령을 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="2e96caa74a1b9fe32560ffcb8411a9ae7e3f5eae" translate="yes" xml:space="preserve">
          <source>Similar commands that may be useful:</source>
          <target state="translated">유용 할 수있는 비슷한 명령 :</target>
        </trans-unit>
        <trans-unit id="74ef1d347324c69f49f3cbf690577bf69e4c5f37" translate="yes" xml:space="preserve">
          <source>Simplest form:</source>
          <target state="translated">가장 간단한 형태 :</target>
        </trans-unit>
        <trans-unit id="375e09a15462d7427757df796f479e68e69bf942" translate="yes" xml:space="preserve">
          <source>So that I can know</source>
          <target state="translated">알 수 있도록</target>
        </trans-unit>
        <trans-unit id="48168d8a773572dbce634adca951844479a9bd2b" translate="yes" xml:space="preserve">
          <source>So you can do &lt;code&gt;git diff&lt;/code&gt; followed by &lt;code&gt;--name-only&lt;/code&gt;, with two commit hashes after &lt;code&gt;&amp;lt;sha0&amp;gt; &amp;lt;sha1&amp;gt;&lt;/code&gt;, something like below:</source>
          <target state="translated">따라서 &lt;code&gt;&amp;lt;sha0&amp;gt; &amp;lt;sha1&amp;gt;&lt;/code&gt; 뒤에 두 개의 커밋 해시를 사용하여 &lt;code&gt;git diff&lt;/code&gt; 다음에 &lt;code&gt;--name-only&lt;/code&gt; 를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8ed0407186782d12728f49ad9f63f474785a70c" translate="yes" xml:space="preserve">
          <source>That will produce just the list of modified files.</source>
          <target state="translated">수정 된 파일 목록 만 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="aa1fbd31286aa59e76c3cac43b082887c2b09106" translate="yes" xml:space="preserve">
          <source>That's easier to remember and it will give you all the information you need.</source>
          <target state="translated">기억하기 쉬우 며 필요한 모든 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b11c414a23a9a14d8efb4a4acf81afa7e7501db5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--name-only&lt;/code&gt; argument shows only the file names that were affected (Thanks Hank). Use &lt;code&gt;--name-status&lt;/code&gt; instead, if you want to see what happened to each file (&lt;strong&gt;D&lt;/strong&gt;eleted, &lt;strong&gt;M&lt;/strong&gt;odified, &lt;strong&gt;A&lt;/strong&gt;dded)</source>
          <target state="translated">&lt;code&gt;--name-only&lt;/code&gt; 인수는 영향을받은 파일 이름 만 표시합니다 (감사합니다). 각 파일에 무슨 일이 일어 났는지보고 싶다면 &lt;code&gt;--name-status&lt;/code&gt; 를 대신 사용하십시오 (Deleted, Modified, &lt;strong&gt;A&lt;/strong&gt; dded)</target>
        </trans-unit>
        <trans-unit id="bc3abc67b07b22381ae2776e583df9318173405b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-commit-id&lt;/code&gt; suppresses the commit ID output.</source>
          <target state="translated">&lt;code&gt;--no-commit-id&lt;/code&gt; 는 커밋 ID 출력을 억제합니다.</target>
        </trans-unit>
        <trans-unit id="f0385f8f11646bdafd1400a8b48fb8dbdc0dd51d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--pretty&lt;/code&gt; argument specifies an empty format string to avoid the cruft at the beginning.</source>
          <target state="translated">&lt;code&gt;--pretty&lt;/code&gt; 인수는 처음에 균열을 피하기 위해 빈 형식 문자열을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cecb2d9e5710d518e11cd117e4298f8fdefea5b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-r&lt;/code&gt; argument is to recurse into sub-trees</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; 인수는 하위 트리로 반복됩니다</target>
        </trans-unit>
        <trans-unit id="64dae849c95f7e002018080b13e72679a47bd897" translate="yes" xml:space="preserve">
          <source>There is a simple trick to view as a file listing, just add &lt;code&gt;:&lt;/code&gt; after the hash.</source>
          <target state="translated">파일 목록으로 보는 간단한 트릭이 있습니다. 해시 다음에 추가 &lt;code&gt;:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4b38f4f831cb0072694db09ef538e7874bf18e4" translate="yes" xml:space="preserve">
          <source>There's also &lt;code&gt;git whatchanged&lt;/code&gt;, which is more low level than &lt;code&gt;git log&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git whatchanged&lt;/code&gt; 도 있습니다 .git &lt;code&gt;git log&lt;/code&gt; 보다 낮은 레벨입니다.</target>
        </trans-unit>
        <trans-unit id="91223f547e5f77412a093622b09d4a65acfe0eb4" translate="yes" xml:space="preserve">
          <source>This doesn't show log messages, extra newlines, or any other clutter.  This works for any commit, not just the current one.  Not sure why it hasn't &lt;em&gt;quite&lt;/em&gt; been mentioned yet, so I'm adding it.</source>
          <target state="translated">로그 메시지, 추가 줄 바꿈 또는 기타 혼란이 표시되지 않습니다. 이것은 현재 커밋뿐만 아니라 모든 커밋에 적용됩니다. 왜 아직 언급되지 않았는지 잘 모르겠으므로 추가하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="55ef13a1e73329e726feb2ef079106cad9f434f9" translate="yes" xml:space="preserve">
          <source>This should work:</source>
          <target state="translated">이것은 작동해야합니다 :</target>
        </trans-unit>
        <trans-unit id="a5c25736e226d353ec9a14cefccaa51d79ecf1b1" translate="yes" xml:space="preserve">
          <source>This will list just the files, very useful for further processing.</source>
          <target state="translated">파일 만 나열되므로 추가 처리에 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0baeb0013a6c652f5fbd86ee26c86c20ecc52ca6" translate="yes" xml:space="preserve">
          <source>This will show what is not staged and what is staged.</source>
          <target state="translated">스테이지되지 않은 것과 스테이지 된 것을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b0a4fcaf86c0339df12546185b5b4319480fdb0d" translate="yes" xml:space="preserve">
          <source>This will show you the commit id, message, the files changed and whether it was modified, created, added or deleted. Somewhat of a all-in-one command.</source>
          <target state="translated">커밋 ID, 메시지, 변경된 파일 및 수정, 생성, 추가 또는 삭제 여부가 표시됩니다. 올인원 명령입니다.</target>
        </trans-unit>
        <trans-unit id="3727f8576998226d45bf297dddb26e1fbe204a4f" translate="yes" xml:space="preserve">
          <source>This works well with merge commits.</source>
          <target state="translated">이것은 병합 커밋과 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="72c1028c0cb5f545f3dd85f37f940ba8ace5a7a3" translate="yes" xml:space="preserve">
          <source>To reduce the info and &lt;strong&gt;show only names&lt;/strong&gt; of the files which committed, you simply can add &lt;code&gt;--name-only&lt;/code&gt; or &lt;code&gt;--name-status&lt;/code&gt; flag..., these flags just show you the file names which are different from previous commits as you want...</source>
          <target state="translated">정보를 줄이고 커밋 한 파일의 &lt;strong&gt;이름 만 표시&lt;/strong&gt; 하려면 &lt;code&gt;--name-only&lt;/code&gt; 또는 &lt;code&gt;--name-status&lt;/code&gt; 플래그 ...를 추가하면됩니다.이 플래그는 이전 커밋과 다른 파일 이름 만 표시합니다. 필요...</target>
        </trans-unit>
        <trans-unit id="aa8d49b825f83691079892b37aea2d35f15bd4a4" translate="yes" xml:space="preserve">
          <source>Type q to get your prompt back.</source>
          <target state="translated">프롬프트를 다시 표시하려면 q를 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="a817d54e4c24826074a029287c10fb0d6e7f68da" translate="yes" xml:space="preserve">
          <source>Use simple one line command, if you just want the list of files changed in the last commit:</source>
          <target state="translated">마지막 커밋에서 파일 목록을 변경하려면 간단한 한 줄 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4c0e5a3debed6ce07bf4843c100adf0b9626f19e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--name-status&lt;/code&gt; will also include the change (added, modified, deleted etc) next to each file</source>
          <target state="translated">&lt;code&gt;--name-status&lt;/code&gt; 를 사용하면 각 파일 옆에 변경 사항 (추가, 수정, 삭제 등)도 포함됩니다</target>
        </trans-unit>
        <trans-unit id="15d479fdf8988c9cfa09a925bf861aa9fa395328" translate="yes" xml:space="preserve">
          <source>Would give something like:</source>
          <target state="translated">다음과 같은 것을 줄 것입니다 :</target>
        </trans-unit>
        <trans-unit id="fe319fa0895a7f47e55075d55fc2289e3b3f2bea" translate="yes" xml:space="preserve">
          <source>You can also do</source>
          <target state="translated">당신은 또한 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="1edb2de62c1ba5ad7701b38aca6a583151a6ccda" translate="yes" xml:space="preserve">
          <source>You can then drill in,</source>
          <target state="translated">그런 다음 드릴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="539a7816297aef418f0789a5a942c125ceb409ed" translate="yes" xml:space="preserve">
          <source>and you can browse through various commits, commit messages and the changed files.</source>
          <target state="translated">다양한 커밋, 커밋 메시지 및 변경된 파일을 탐색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bce3718016e9dca53626d9bb8d9a45808139874" translate="yes" xml:space="preserve">
          <source>for get last commit hash then try this command</source>
          <target state="translated">마지막 커밋 해시를 얻으려면이 명령을 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="c6323f5b722066158c981a753845fd6c9273a276" translate="yes" xml:space="preserve">
          <source>for more advanced git log information read this article</source>
          <target state="translated">고급 git log 정보는이 기사를 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="f286a00c085c44d8475b3fc20183437ec29084d1" translate="yes" xml:space="preserve">
          <source>last commit with show files name and file status modify,create or delete</source>
          <target state="translated">쇼 파일 이름 및 파일 상태가있는 마지막 커밋 수정, 작성 또는 삭제</target>
        </trans-unit>
        <trans-unit id="aa7c6466bb6dc09182f85e45dfddd1f6809a3e2a" translate="yes" xml:space="preserve">
          <source>only show file names</source>
          <target state="translated">파일 이름 만 표시</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="b53886e7be82334b6ef48e2777341cac9cf6ca75" translate="yes" xml:space="preserve">
          <source>or for all</source>
          <target state="translated">또는 모두를 위해</target>
        </trans-unit>
        <trans-unit id="fa2f80b190663512311c372a57b5e2ff61edf414" translate="yes" xml:space="preserve">
          <source>then:</source>
          <target state="translated">then:</target>
        </trans-unit>
        <trans-unit id="991c46bded1959a102f2c2d71e9fd04f53047d1b" translate="yes" xml:space="preserve">
          <source>try this command for name and changes number of line</source>
          <target state="translated">이 명령을 사용하여 이름을 바꾸고 줄 수를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="ee0884b9501d86db7158fc22366fd2ebec7166b1" translate="yes" xml:space="preserve">
          <source>works fine for me</source>
          <target state="translated">나를 위해 잘 작동</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
