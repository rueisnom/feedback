<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/424071">
    <body>
      <group id="424071">
        <trans-unit id="ad77ba69d05093350eb6a79b032a5ce8bae1ae0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Another Way&lt;/strong&gt; (less preferred for scripts, because it's a &lt;em&gt;porcelain&lt;/em&gt; command; meant to be user-facing)</source>
          <target state="translated">&lt;strong&gt;另一种方式&lt;/strong&gt; （脚本不那么受欢迎，因为它是一个&lt;em&gt;瓷器&lt;/em&gt;命令；意味着面向用户）</target>
        </trans-unit>
        <trans-unit id="d0447576676f4947b756aa9952d98b0bd139cb6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you want also the status of the changed files:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;如果还需要更改文件的状态：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23278d82deb187be21f8a509fb7dc6ccf2a1b5dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OK,&lt;/strong&gt; there are couple of ways to show all files in a particular commit...</source>
          <target state="translated">&lt;strong&gt;好的，&lt;/strong&gt;有几种方法可以显示特定提交中的所有文件...</target>
        </trans-unit>
        <trans-unit id="8c8e9bd1d44588df0531d369d46966c0f9b8365a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Preferred Way&lt;/strong&gt; (because it's a &lt;em&gt;plumbing&lt;/em&gt; command; meant to be programmatic):</source>
          <target state="translated">&lt;strong&gt;首选方式&lt;/strong&gt; （因为这是一条&lt;em&gt;管道&lt;/em&gt;命令；是编程的）：</target>
        </trans-unit>
        <trans-unit id="9cff8f3feb1036c13c81f6fa4295e98744512d52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update&lt;/strong&gt;: Or as Ethan points out below</source>
          <target state="translated">&lt;strong&gt;更新&lt;/strong&gt; ：或如伊森指出以下</target>
        </trans-unit>
        <trans-unit id="17ef44e729d29da4c9ca86e5ba6acc585dfb23b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using standard git diff command&lt;/strong&gt; (also good for scripting):</source>
          <target state="translated">&lt;strong&gt;使用标准的git diff命令&lt;/strong&gt; （也适用于脚本编写）：</target>
        </trans-unit>
        <trans-unit id="0c9550ab90e1179441e1e29efc4951546f96e3a8" translate="yes" xml:space="preserve">
          <source>A combination of &quot;&lt;code&gt;git show --stat&lt;/code&gt;&quot; (thanks Ryan) and a couple of sed commands should trim the data down for you:</source>
          <target state="translated">结合使用&amp;ldquo; &lt;code&gt;git show --stat&lt;/code&gt; &amp;rdquo;（感谢Ryan）和几个sed命令可以为您减少数据量：</target>
        </trans-unit>
        <trans-unit id="5d44055b201ce7d5ff033c084205585bbbed9af7" translate="yes" xml:space="preserve">
          <source>Although it lists the files, it also includes unwanted diff information for each.</source>
          <target state="translated">虽然它列出了文件,但也包含了每个文件的不需要的差异信息。</target>
        </trans-unit>
        <trans-unit id="c3160d2e1bf1129cc94e4fa1551b73ce3f0331b0" translate="yes" xml:space="preserve">
          <source>COMMIT can be blank (&quot;&quot;) or the sha-1 or the sha-1 shortened.</source>
          <target state="translated">COMMIT可以是空白(&quot;&quot;),也可以是sha-1或sha-1的缩写。</target>
        </trans-unit>
        <trans-unit id="a116d827d917cdb35856796c310530675a012bc3" translate="yes" xml:space="preserve">
          <source>Display the log.</source>
          <target state="translated">显示日志。</target>
        </trans-unit>
        <trans-unit id="47a311a3d83ccc26d9917458100fbb5924a360fb" translate="yes" xml:space="preserve">
          <source>For those covering from SVN you will find this useful: (this is a combination of ideas from different threads, I only take credit of knowing how to use copy/paste)</source>
          <target state="translated">对于那些从SVN覆盖的人来说,你会发现这个很有用:(这是不同线程的想法的组合,我只把知道如何使用copyypaste的功劳归功于此</target>
        </trans-unit>
        <trans-unit id="2be5967d03fee8ee4abd3511837583183b3fb976" translate="yes" xml:space="preserve">
          <source>Found a perfect answer to this:</source>
          <target state="translated">找到了一个完美的答案。</target>
        </trans-unit>
        <trans-unit id="9ae87e499c85238f807e42c7a1ce2f73c459c682" translate="yes" xml:space="preserve">
          <source>How to list all the files in a commit</source>
          <target state="translated">如何列出提交中的所有文件</target>
        </trans-unit>
        <trans-unit id="5bbaf2e40138b37a92b2b642b2cd1abbe4bd88f6" translate="yes" xml:space="preserve">
          <source>I also create the below image to show all steps to go through in these situation:</source>
          <target state="translated">我还创建了下面的图片,以显示在这些情况下要经过的所有步骤。</target>
        </trans-unit>
        <trans-unit id="13d91a62659b1da8dc0583e2939aa92a745b195b" translate="yes" xml:space="preserve">
          <source>I am looking for a simple &lt;code&gt;git&lt;/code&gt; command that provides a nicely formatted list of all files that were part of the commit given by a hash (SHA1), with no extraneous information.</source>
          <target state="translated">我正在寻找一个简单的 &lt;code&gt;git&lt;/code&gt; 命令，该命令可提供所有文件的格式良好的列表，这些文件是哈希（SHA1）给出的提交的一部分，没有任何多余的信息。</target>
        </trans-unit>
        <trans-unit id="f481599de8d99219c663f80ada085d861d69693b" translate="yes" xml:space="preserve">
          <source>I have tried:</source>
          <target state="translated">我试过了。</target>
        </trans-unit>
        <trans-unit id="da6a9bf33c8546e800cfbae46c41d0d687038ccf" translate="yes" xml:space="preserve">
          <source>I know this answer doesn't really match &quot;with no extraneous information.&quot;, but I still think this list is more useful then just the filenames.</source>
          <target state="translated">我知道这个答案并不符合 &quot;没有多余的信息&quot;,但我还是觉得这个列表比只看文件名更有用。</target>
        </trans-unit>
        <trans-unit id="664620311d1e31a10ca93db7aca57a5fe3ffbd72" translate="yes" xml:space="preserve">
          <source>I like this:</source>
          <target state="translated">我喜欢这个。</target>
        </trans-unit>
        <trans-unit id="56089483c6a444fdf3e608a08d370dfe5bf2d45a" translate="yes" xml:space="preserve">
          <source>I like to use</source>
          <target state="translated">我喜欢用</target>
        </trans-unit>
        <trans-unit id="461c9a36b8e06be6ad0b65f05bbf91a57b827b34" translate="yes" xml:space="preserve">
          <source>I personally use the combination of &lt;strong&gt;--stat&lt;/strong&gt; and &lt;strong&gt;--oneline&lt;/strong&gt; with the &lt;strong&gt;show&lt;/strong&gt; command:</source>
          <target state="translated">我亲自将&lt;strong&gt;--stat&lt;/strong&gt;和&lt;strong&gt;--oneline&lt;/strong&gt;与&lt;strong&gt;show&lt;/strong&gt;命令结合使用：</target>
        </trans-unit>
        <trans-unit id="4eeacd36a6affc2bb872d7f5a902ed9f7a145bff" translate="yes" xml:space="preserve">
          <source>I thought I would share a summary of my alias..  also I find using 'zsh' great with git it chroma keys everything nicely and tells you want branch are in all of the time by changing the command prompt.</source>
          <target state="translated">我想我会分享一个我的别名总结...........我也发现用'zsh'很好的使用git,它的chroma键可以很好的告诉你想要的分支都在所有的时间通过改变命令提示符。</target>
        </trans-unit>
        <trans-unit id="0ba70e2b1f7e42bc1811df8e8bc98003fd120ac8" translate="yes" xml:space="preserve">
          <source>I use &lt;strong&gt;changed&lt;/strong&gt; alias a quite often. To set it up:</source>
          <target state="translated">我经常使用&lt;strong&gt;更改的&lt;/strong&gt;别名。 进行设置：</target>
        </trans-unit>
        <trans-unit id="98d825be3b1fd83a060d907ba4e9e98d6dba1d31" translate="yes" xml:space="preserve">
          <source>I use this to get list of changed files in merge commit</source>
          <target state="translated">我用这个来获取合并提交中更改的文件列表</target>
        </trans-unit>
        <trans-unit id="db976d5e421eb3b7c94ac9230e9184842fccf015" translate="yes" xml:space="preserve">
          <source>I use this to get list of modified files between two changesets:</source>
          <target state="translated">我用这个来获取两个更改集之间的修改文件列表。</target>
        </trans-unit>
        <trans-unit id="0ecbf90cd82c6a9d98ba47a1275d8055eff8024d" translate="yes" xml:space="preserve">
          <source>I'll just assume that &lt;code&gt;gitk&lt;/code&gt; is not desired for this. In that case, try &lt;code&gt;git show --name-only &amp;lt;sha&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">我只是假设不需要 &lt;code&gt;gitk&lt;/code&gt; 。 在这种情况下，请尝试 &lt;code&gt;git show --name-only &amp;lt;sha&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83011737a333f39d933169ff275f7cf3e83b3bc1" translate="yes" xml:space="preserve">
          <source>If you are using oh-my-zsh and git plugin, the &lt;strong&gt;glg&lt;/strong&gt; shortcut is helpful.</source>
          <target state="translated">如果您使用的是oh-my-zsh和git插件，则&lt;strong&gt;glg&lt;/strong&gt;快捷方式会很有帮助。</target>
        </trans-unit>
        <trans-unit id="a0a7ef9e99f62d02d2b82ba46be7cbf0ea17ea41" translate="yes" xml:space="preserve">
          <source>If you do not like/want the addition/removal stats, you can replace &lt;strong&gt;--stat&lt;/strong&gt; with &lt;strong&gt;--name-only&lt;/strong&gt;</source>
          <target state="translated">如果您不喜欢/不想添加/删除统计信息，可以将&lt;strong&gt;--stat&lt;/strong&gt;替换为&lt;strong&gt;--name-only&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3f1e938253f750013417557858d4ffa0d4669a4" translate="yes" xml:space="preserve">
          <source>If you hit a file you'll get the raw version of the file; which sometimes is what you want if you're only looking for a nice reference or key pieces of code (diffs can make everything a mess),</source>
          <target state="translated">如果你点击一个文件,你会得到该文件的原始版本;如果你只想找一个漂亮的参考或关键的代码片段,有时这就是你想要的(diffs会让一切都变得一团糟)。</target>
        </trans-unit>
        <trans-unit id="ce6c2a17816e6fae5e61a04888a7fda4e1279c93" translate="yes" xml:space="preserve">
          <source>If you really want only the names of the files you could add the &lt;code&gt;--name-only&lt;/code&gt; option.</source>
          <target state="translated">如果只需要文件名，则可以添加 &lt;code&gt;--name-only&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="9f28c9e31ca8592bd0032f87f871e05b0327da4a" translate="yes" xml:space="preserve">
          <source>If you want to get list of all files in a commit, you can use</source>
          <target state="translated">如果你想获得一个提交中的所有文件的列表,你可以使用</target>
        </trans-unit>
        <trans-unit id="641d538f0877df2ad3d3baa2399343625cce7329" translate="yes" xml:space="preserve">
          <source>If you want to get list of changed files:</source>
          <target state="translated">如果你想获得已更改的文件列表。</target>
        </trans-unit>
        <trans-unit id="b1669b72e9ffad6d77a942c6ad146262145ec2ac" translate="yes" xml:space="preserve">
          <source>Is there another &lt;code&gt;git&lt;/code&gt; command that will provide just the list I want, so that I can avoid parsing it from the &lt;code&gt;git show&lt;/code&gt; output?</source>
          <target state="translated">还有另一个 &lt;code&gt;git&lt;/code&gt; 命令将仅提供我想要的列表，以便避免从 &lt;code&gt;git show&lt;/code&gt; 输出中解析它吗？</target>
        </trans-unit>
        <trans-unit id="e2347eabd53f52815a8ab35a979807fbb4ab2820" translate="yes" xml:space="preserve">
          <source>It outputs the commit summary with a list of files beneath it with their modes and if there added(&lt;code&gt;A&lt;/code&gt;), deleted(&lt;code&gt;D&lt;/code&gt;) or modified(&lt;code&gt;M&lt;/code&gt;);</source>
          <target state="translated">它输出提交摘要以及其下方的文件列表及其模式，以及是否添加（ &lt;code&gt;A&lt;/code&gt; ），删除（ &lt;code&gt;D&lt;/code&gt; ）或修改（ &lt;code&gt;M&lt;/code&gt; ）；</target>
        </trans-unit>
        <trans-unit id="d4c2862e5fe89ea8a2dc96353fc2de6a39140626" translate="yes" xml:space="preserve">
          <source>List the files that changed in a commit:</source>
          <target state="translated">列出提交中改变的文件。</target>
        </trans-unit>
        <trans-unit id="3e1b8b3eca17d3694b2f739ffccb0eabda9f87d2" translate="yes" xml:space="preserve">
          <source>Only drawback of this method is that it doesn't easily show a tree of files.</source>
          <target state="translated">这种方法唯一的缺点是不容易显示出文件树。</target>
        </trans-unit>
        <trans-unit id="422d87c30b12c87ca5030395cabc62cb65c292fb" translate="yes" xml:space="preserve">
          <source>Recently I needed to list all changed files between two commits. So I used this (also *nix specific) command</source>
          <target state="translated">最近我需要列出两个提交之间的所有更改的文件。所以我使用了这个命令(也是*nix的特殊命令)。</target>
        </trans-unit>
        <trans-unit id="2e96caa74a1b9fe32560ffcb8411a9ae7e3f5eae" translate="yes" xml:space="preserve">
          <source>Similar commands that may be useful:</source>
          <target state="translated">类似的命令,可能有用。</target>
        </trans-unit>
        <trans-unit id="74ef1d347324c69f49f3cbf690577bf69e4c5f37" translate="yes" xml:space="preserve">
          <source>Simplest form:</source>
          <target state="translated">最简单的形式。</target>
        </trans-unit>
        <trans-unit id="375e09a15462d7427757df796f479e68e69bf942" translate="yes" xml:space="preserve">
          <source>So that I can know</source>
          <target state="translated">这样我就可以知道</target>
        </trans-unit>
        <trans-unit id="48168d8a773572dbce634adca951844479a9bd2b" translate="yes" xml:space="preserve">
          <source>So you can do &lt;code&gt;git diff&lt;/code&gt; followed by &lt;code&gt;--name-only&lt;/code&gt;, with two commit hashes after &lt;code&gt;&amp;lt;sha0&amp;gt; &amp;lt;sha1&amp;gt;&lt;/code&gt;, something like below:</source>
          <target state="translated">因此，您可以在 &lt;code&gt;git diff&lt;/code&gt; 之后加上 &lt;code&gt;--name-only&lt;/code&gt; ，在 &lt;code&gt;&amp;lt;sha0&amp;gt; &amp;lt;sha1&amp;gt;&lt;/code&gt; 之后添加两个提交哈希，如下所示：</target>
        </trans-unit>
        <trans-unit id="a8ed0407186782d12728f49ad9f63f474785a70c" translate="yes" xml:space="preserve">
          <source>That will produce just the list of modified files.</source>
          <target state="translated">这将产生的只是修改后的文件列表。</target>
        </trans-unit>
        <trans-unit id="aa1fbd31286aa59e76c3cac43b082887c2b09106" translate="yes" xml:space="preserve">
          <source>That's easier to remember and it will give you all the information you need.</source>
          <target state="translated">这样更容易记住,它能给你提供你所需要的所有信息。</target>
        </trans-unit>
        <trans-unit id="b11c414a23a9a14d8efb4a4acf81afa7e7501db5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--name-only&lt;/code&gt; argument shows only the file names that were affected (Thanks Hank). Use &lt;code&gt;--name-status&lt;/code&gt; instead, if you want to see what happened to each file (&lt;strong&gt;D&lt;/strong&gt;eleted, &lt;strong&gt;M&lt;/strong&gt;odified, &lt;strong&gt;A&lt;/strong&gt;dded)</source>
          <target state="translated">&lt;code&gt;--name-only&lt;/code&gt; 参数仅显示受影响的文件名（谢谢汉克）。 如果要查看每个文件发生了什么（删除，修改，添加），请使用 &lt;code&gt;--name-status&lt;/code&gt; 代替</target>
        </trans-unit>
        <trans-unit id="bc3abc67b07b22381ae2776e583df9318173405b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-commit-id&lt;/code&gt; suppresses the commit ID output.</source>
          <target state="translated">&lt;code&gt;--no-commit-id&lt;/code&gt; 禁止提交ID输出。</target>
        </trans-unit>
        <trans-unit id="f0385f8f11646bdafd1400a8b48fb8dbdc0dd51d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--pretty&lt;/code&gt; argument specifies an empty format string to avoid the cruft at the beginning.</source>
          <target state="translated">&lt;code&gt;--pretty&lt;/code&gt; 参数指定一个空的格式字符串，以避免开头出现压缩 。</target>
        </trans-unit>
        <trans-unit id="cecb2d9e5710d518e11cd117e4298f8fdefea5b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-r&lt;/code&gt; argument is to recurse into sub-trees</source>
          <target state="translated">&lt;code&gt;-r&lt;/code&gt; 参数是递归到子树中</target>
        </trans-unit>
        <trans-unit id="64dae849c95f7e002018080b13e72679a47bd897" translate="yes" xml:space="preserve">
          <source>There is a simple trick to view as a file listing, just add &lt;code&gt;:&lt;/code&gt; after the hash.</source>
          <target state="translated">有一个简单的技巧可以查看为文件列表，只需在哈希之后添加 &lt;code&gt;:&lt;/code&gt; 即可 。</target>
        </trans-unit>
        <trans-unit id="e4b38f4f831cb0072694db09ef538e7874bf18e4" translate="yes" xml:space="preserve">
          <source>There's also &lt;code&gt;git whatchanged&lt;/code&gt;, which is more low level than &lt;code&gt;git log&lt;/code&gt;</source>
          <target state="translated">还有 &lt;code&gt;git whatchanged&lt;/code&gt; ，它比 &lt;code&gt;git log&lt;/code&gt; 更底层</target>
        </trans-unit>
        <trans-unit id="91223f547e5f77412a093622b09d4a65acfe0eb4" translate="yes" xml:space="preserve">
          <source>This doesn't show log messages, extra newlines, or any other clutter.  This works for any commit, not just the current one.  Not sure why it hasn't &lt;em&gt;quite&lt;/em&gt; been mentioned yet, so I'm adding it.</source>
          <target state="translated">这不会显示日志消息，多余的换行符或其他任何混乱的内容。 这适用于任何提交，而不仅仅是当前提交。 不知道为什么还没有提到它，所以我添加了它。</target>
        </trans-unit>
        <trans-unit id="55ef13a1e73329e726feb2ef079106cad9f434f9" translate="yes" xml:space="preserve">
          <source>This should work:</source>
          <target state="translated">这应该可以的</target>
        </trans-unit>
        <trans-unit id="a5c25736e226d353ec9a14cefccaa51d79ecf1b1" translate="yes" xml:space="preserve">
          <source>This will list just the files, very useful for further processing.</source>
          <target state="translated">这将只列出文件,对进一步处理非常有用。</target>
        </trans-unit>
        <trans-unit id="0baeb0013a6c652f5fbd86ee26c86c20ecc52ca6" translate="yes" xml:space="preserve">
          <source>This will show what is not staged and what is staged.</source>
          <target state="translated">这样就可以看出什么是没有上演的,什么是上演的。</target>
        </trans-unit>
        <trans-unit id="b0a4fcaf86c0339df12546185b5b4319480fdb0d" translate="yes" xml:space="preserve">
          <source>This will show you the commit id, message, the files changed and whether it was modified, created, added or deleted. Somewhat of a all-in-one command.</source>
          <target state="translated">这将显示提交ID、消息、更改的文件以及是否被修改、创建、添加或删除。有点像一个多合一的命令。</target>
        </trans-unit>
        <trans-unit id="3727f8576998226d45bf297dddb26e1fbe204a4f" translate="yes" xml:space="preserve">
          <source>This works well with merge commits.</source>
          <target state="translated">这对合并提交很有效果。</target>
        </trans-unit>
        <trans-unit id="72c1028c0cb5f545f3dd85f37f940ba8ace5a7a3" translate="yes" xml:space="preserve">
          <source>To reduce the info and &lt;strong&gt;show only names&lt;/strong&gt; of the files which committed, you simply can add &lt;code&gt;--name-only&lt;/code&gt; or &lt;code&gt;--name-status&lt;/code&gt; flag..., these flags just show you the file names which are different from previous commits as you want...</source>
          <target state="translated">为了减少信息并&lt;strong&gt;仅显示&lt;/strong&gt;已提交文件的&lt;strong&gt;名称&lt;/strong&gt; ，您只需添加 &lt;code&gt;--name-only&lt;/code&gt; 或 &lt;code&gt;--name-status&lt;/code&gt; 标志...，这些标志仅向您显示与先前提交时不同的文件名。想...</target>
        </trans-unit>
        <trans-unit id="aa8d49b825f83691079892b37aea2d35f15bd4a4" translate="yes" xml:space="preserve">
          <source>Type q to get your prompt back.</source>
          <target state="translated">键入q,就可以得到你的提示。</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="a817d54e4c24826074a029287c10fb0d6e7f68da" translate="yes" xml:space="preserve">
          <source>Use simple one line command, if you just want the list of files changed in the last commit:</source>
          <target state="translated">使用简单的单行命令,如果你只是想要上次提交中更改的文件列表。</target>
        </trans-unit>
        <trans-unit id="4c0e5a3debed6ce07bf4843c100adf0b9626f19e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--name-status&lt;/code&gt; will also include the change (added, modified, deleted etc) next to each file</source>
          <target state="translated">使用 &lt;code&gt;--name-status&lt;/code&gt; 还将在每个文件旁边包含更改（添加，修改，删除等）</target>
        </trans-unit>
        <trans-unit id="15d479fdf8988c9cfa09a925bf861aa9fa395328" translate="yes" xml:space="preserve">
          <source>Would give something like:</source>
          <target state="translated">会给一些类似的东西。</target>
        </trans-unit>
        <trans-unit id="fe319fa0895a7f47e55075d55fc2289e3b3f2bea" translate="yes" xml:space="preserve">
          <source>You can also do</source>
          <target state="translated">你也可以做</target>
        </trans-unit>
        <trans-unit id="1edb2de62c1ba5ad7701b38aca6a583151a6ccda" translate="yes" xml:space="preserve">
          <source>You can then drill in,</source>
          <target state="translated">然后你就可以钻进去了。</target>
        </trans-unit>
        <trans-unit id="539a7816297aef418f0789a5a942c125ceb409ed" translate="yes" xml:space="preserve">
          <source>and you can browse through various commits, commit messages and the changed files.</source>
          <target state="translated">并且你可以浏览各种提交、提交信息和修改过的文件。</target>
        </trans-unit>
        <trans-unit id="4bce3718016e9dca53626d9bb8d9a45808139874" translate="yes" xml:space="preserve">
          <source>for get last commit hash then try this command</source>
          <target state="translated">对于获取最后一次提交的哈希,然后试试这个命令</target>
        </trans-unit>
        <trans-unit id="c6323f5b722066158c981a753845fd6c9273a276" translate="yes" xml:space="preserve">
          <source>for more advanced git log information read this article</source>
          <target state="translated">更多高级的git日志信息,请阅读这篇文章</target>
        </trans-unit>
        <trans-unit id="f286a00c085c44d8475b3fc20183437ec29084d1" translate="yes" xml:space="preserve">
          <source>last commit with show files name and file status modify,create or delete</source>
          <target state="translated">最后一次提交,并显示文件名和文件状态修改、创建或删除。</target>
        </trans-unit>
        <trans-unit id="aa7c6466bb6dc09182f85e45dfddd1f6809a3e2a" translate="yes" xml:space="preserve">
          <source>only show file names</source>
          <target state="translated">只显示文件名</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="b53886e7be82334b6ef48e2777341cac9cf6ca75" translate="yes" xml:space="preserve">
          <source>or for all</source>
          <target state="translated">或为所有</target>
        </trans-unit>
        <trans-unit id="fa2f80b190663512311c372a57b5e2ff61edf414" translate="yes" xml:space="preserve">
          <source>then:</source>
          <target state="translated">then:</target>
        </trans-unit>
        <trans-unit id="991c46bded1959a102f2c2d71e9fd04f53047d1b" translate="yes" xml:space="preserve">
          <source>try this command for name and changes number of line</source>
          <target state="translated">试试这个命令的名称和更改行数的命令</target>
        </trans-unit>
        <trans-unit id="ee0884b9501d86db7158fc22366fd2ebec7166b1" translate="yes" xml:space="preserve">
          <source>works fine for me</source>
          <target state="translated">很好用</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
