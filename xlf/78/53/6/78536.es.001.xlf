<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/78536">
    <body>
      <group id="78536">
        <trans-unit id="e7efd000d886354e9d1cc13458d5f1e572b80135" translate="yes" xml:space="preserve">
          <source>1.08 seconds for Nested MemberwiseClone on nested structs</source>
          <target state="translated">1,08 segundos para Nested MemberwiseClone en las estructuras anidadas</target>
        </trans-unit>
        <trans-unit id="e1f930c2714fac27b55e1b2d11e7e09778433bcb" translate="yes" xml:space="preserve">
          <source>10x faster than anything that involves serialization/deserialization;</source>
          <target state="translated">10 veces más rápido que cualquier cosa que implique serialización-deserialización;</target>
        </trans-unit>
        <trans-unit id="913cf4877bd3d1a0e2c97dbb3a5a2b17d016ef6e" translate="yes" xml:space="preserve">
          <source>10x faster than other methods</source>
          <target state="translated">10 veces más rápido que otros métodos</target>
        </trans-unit>
        <trans-unit id="2e8519892935fb7446d143f4c9e077f5476aac77" translate="yes" xml:space="preserve">
          <source>39.93 seconds for Serialization/Deserialization</source>
          <target state="translated">39,93 segundos para la SerializaciónDeserialización</target>
        </trans-unit>
        <trans-unit id="605ae3fff262161ddad94d3377c92774ca626ea9" translate="yes" xml:space="preserve">
          <source>4.77 seconds for Nested MemberwiseClone on nested classes</source>
          <target state="translated">4,77 segundos para Nested MemberwiseClone en clases anidadas</target>
        </trans-unit>
        <trans-unit id="e6a8a27926fb7d4df6fdbc3636b224f4a93094d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;Mr Venkat Subramaniam (redundant link here) explains in much detail why&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El Sr. Venkat Subramaniam (enlace redundante aqu&amp;iacute;) explica con mucho detalle por qu&amp;eacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a534b5d3abc07b774eb36f06f48c1a544f34a35e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-by-Expression-Trees-C-Sharp&quot;&gt;&lt;strong&gt;By Expression Trees&lt;/strong&gt;&lt;/a&gt; - &lt;strong&gt;20x faster&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-by-Expression-Trees-C-Sharp&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por &amp;aacute;rboles de expresi&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 20&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; veces m&amp;aacute;s r&amp;aacute;pido&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45ad212c37efd2067bec39fde68662fdd5053dd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;&lt;strong&gt;By Reflection&lt;/strong&gt;&lt;/a&gt; - &lt;strong&gt;5x faster&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por reflexi&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 5 veces m&amp;aacute;s r&amp;aacute;pido&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a201a8cdcb8b06280137854cb5778c399ecc452e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/129395/2094687&quot;&gt;&lt;strong&gt;By Serialization&lt;/strong&gt;&lt;/a&gt; (the shortest code)</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/129395/2094687&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por serializaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (el c&amp;oacute;digo m&amp;aacute;s corto)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55b21ec5676b6d9926b9a2ecbd52a02851175e29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.object.memberwiseclone&quot;&gt;MemberwiseClone&lt;/a&gt;&lt;/strong&gt;, which uses ICloneable</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.object.memberwiseclone&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MemberwiseClone&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que utiliza ICloneable&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59b3d56df2c2553ca2c3174a09e6a80bb843cdc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.serializableattribute&quot;&gt;Serialization&lt;/a&gt;&lt;/strong&gt;, as pointed by &lt;a href=&quot;https://stackoverflow.com/a/78612/274502&quot;&gt;johnc's preferred answer&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.serializableattribute&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Serializaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , como lo se&amp;ntilde;ala&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/78612/274502&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; la respuesta preferida de johnc&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b75c9f0e2a659a1ba2a0729244a6df1e7a7577e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;Expression Trees&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;Aacute;rboles de expresi&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b34fe40f5f4167ee46186dd24bc29a8490bea30c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/3441/Base-class-for-cloning-an-object-in-C&quot;&gt;Reflection&lt;/a&gt;&lt;/strong&gt; by using &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.activator.createinstance&quot;&gt;Activator.CreateInstance&lt;/a&gt; and &lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;recursive MemberwiseClone&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/3441/Base-class-for-cloning-an-object-in-C&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Reflexi&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usando&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.activator.createinstance&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Activator.CreateInstance&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; recursivo MemberwiseClone&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a66965c53feacfdc0f2a622f1ad557b95e5cb35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt; (January 10 2015) Thought I'd revisit this, to mention I recently started using (Newtonsoft) Json to do this, it &lt;a href=&quot;http://maxondev.com/serialization-performance-comparison-c-net-formats-frameworks-xmldatacontractserializer-xmlserializer-binaryformatter-json-newtonsoft-servicestack-text/&quot;&gt;should be&lt;/a&gt; lighter, and avoids the overhead of [Serializable] tags. (&lt;strong&gt;NB&lt;/strong&gt; @atconway has pointed out in the comments that private members are not cloned using the JSON method)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EDITAR&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (10 de enero de 2015) Pens&amp;eacute; en volver a visitar esto, por mencionar que recientemente comenc&amp;eacute; a usar (Newtonsoft) Json para hacer esto, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maxondev.com/serialization-performance-comparison-c-net-formats-frameworks-xmldatacontractserializer-xmlserializer-binaryformatter-json-newtonsoft-servicestack-text/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;deber&amp;iacute;a ser&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;aacute;s liviano y evitar la sobrecarga de las etiquetas [Serializable]. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NB&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; @atconway ha se&amp;ntilde;alado en los comentarios que los miembros privados no se clonan utilizando el m&amp;eacute;todo JSON)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a29dee9cb9abc92e82f8eade632689b3c73b1ef3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt;:
requires</source>
          <target state="translated">&lt;strong&gt;EDIT&lt;/strong&gt;:
requires</target>
        </trans-unit>
        <trans-unit id="1d85daf15d174bbd5f31c492aa89f634fbfc9513" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Extension Methods&lt;/strong&gt;, such as this &lt;a href=&quot;https://circlesandcrossesblogarchive.blogspot.com/2008/01/extension-methods-for-copying-or.html&quot;&gt;custom clone framework by Havard Straden&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;eacute;todos de extensi&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , como este &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://circlesandcrossesblogarchive.blogspot.com/2008/01/extension-methods-for-copying-or.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;marco de clonaci&amp;oacute;n personalizado de Havard Straden&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e32edf705aa496e7b8e43953ad068eb2e8290b5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How fast it is?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; tan r&amp;aacute;pido es?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4153b261e93aa8dd30ee443aaa58263e2edeea3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to use it?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo usarlo?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bd2dccfc4d1e6371353d780cd1be827d620d6c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Intermediate Language&lt;/strong&gt;, which I got no idea &lt;a href=&quot;https://whizzodev.blogspot.com/2008/03/object-cloning-using-il-in-c.html&quot;&gt;how works&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lenguaje intermedio&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , del cual no tengo idea de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://whizzodev.blogspot.com/2008/03/object-cloning-using-il-in-c.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c&amp;oacute;mo funciona&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9448142de5929b4f38d53e908b8a245d2802be75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Latest version has a more null checks, but I left them out for better understanding.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota: La&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;uacute;ltima versi&amp;oacute;n tiene controles m&amp;aacute;s nulos, pero los dej&amp;eacute; fuera para una mejor comprensi&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2fb848a13809ee8bb14a1d0a69ac671757135fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What can be cloned?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; se puede clonar?&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40a93dcd5c3fc2492063edd3e1785b037db9989a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;and more...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y m&amp;aacute;s...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed0893a863748e062a88693b978f6b9f856509ed" translate="yes" xml:space="preserve">
          <source>After much much reading about many of the options linked here, and possible solutions for this issue, I believe &lt;a href=&quot;https://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;all the options are summarized pretty well at &lt;em&gt;Ian P&lt;/em&gt;'s link&lt;/a&gt; (all other options are variations of those) and the best solution is provided by &lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;&lt;em&gt;Pedro77&lt;/em&gt;'s link&lt;/a&gt; on the question comments.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Despu&amp;eacute;s de leer mucho sobre muchas de las opciones vinculadas aqu&amp;iacute;, y las posibles soluciones para este problema, creo que &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;todas las opciones se resumen bastante bien en &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el enlace de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ian P&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (todas las dem&amp;aacute;s opciones son variaciones de esas) y la mejor soluci&amp;oacute;n es proporcionada por &lt;/font&gt;&lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El enlace de &lt;/font&gt;&lt;/a&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pedro77&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sobre la pregunta comenta.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8d3bece6070899d0b2f297368bd4b53482ca033" translate="yes" xml:space="preserve">
          <source>Again, note that &lt;strong&gt;if&lt;/strong&gt; you use &lt;strong&gt;Nested MemberwiseClone for a deep copy&lt;/strong&gt;, you have to manually implement a ShallowCopy for each nested level in the class, and a DeepCopy which calls all said ShallowCopy methods to create a complete clone. This is simple: only a few lines in total, see the demo code above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nuevamente, tenga en cuenta que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nested MemberwiseClone para una copia profunda&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , debe implementar manualmente una ShallowCopy para cada nivel anidado en la clase, y una DeepCopy que llama a todos los m&amp;eacute;todos ShallowCopy para crear un clon completo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es simple: solo unas pocas l&amp;iacute;neas en total, vea el c&amp;oacute;digo de demostraci&amp;oacute;n anterior.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c19c8aea1a18a9301adb5a8a3a8d0ced86c8138d" translate="yes" xml:space="preserve">
          <source>All his article circles around an example that tries to be applicable for most cases, using 3 objects: &lt;em&gt;Person&lt;/em&gt;, &lt;em&gt;Brain&lt;/em&gt; and &lt;em&gt;City&lt;/em&gt;. We want to clone a person, which will have its own brain but the same city. You can either picture all problems any of the other methods above can bring or read the article.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todo su art&amp;iacute;culo gira en torno a un ejemplo que intenta ser aplicable para la mayor&amp;iacute;a de los casos, utilizando 3 objetos: &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Persona&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cerebro&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ciudad&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Queremos clonar a una persona, que tendr&amp;aacute; su propio cerebro pero la misma ciudad. Puede imaginar todos los problemas que cualquiera de los otros m&amp;eacute;todos anteriores puede traer o leer el art&amp;iacute;culo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b78b06bc11058abc4b4d8e8a718695921c0e80ba" translate="yes" xml:space="preserve">
          <source>All linked methods are well working and were deeply tested.</source>
          <target state="translated">Todos los métodos vinculados funcionan bien y fueron profundamente probados.</target>
        </trans-unit>
        <trans-unit id="0c29649d0294b0e0f1687674c8bc49b583323722" translate="yes" xml:space="preserve">
          <source>All you need is a partial class definition with &lt;code&gt;ICloneable&lt;/code&gt; and the generator does the rest:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todo lo que necesita es una definici&amp;oacute;n de clase parcial con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ICloneable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y el generador hace el resto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="587b224561967e7f419831a3a6ad69801bd354fa" translate="yes" xml:space="preserve">
          <source>Also available as a nuget package:
&lt;a href=&quot;https://www.nuget.org/packages/Clone.Behave/1.0.0&quot;&gt;https://www.nuget.org/packages/Clone.Behave/1.0.0&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n disponible como paquete nuget: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.nuget.org/packages/Clone.Behave/1.0.0&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://www.nuget.org/packages/Clone.Behave/1.0.0&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="caf9f6b34ebd2432c8ed7b73c2a7afc59533eec4" translate="yes" xml:space="preserve">
          <source>Also, you can use this extension method</source>
          <target state="translated">Además,puede utilizar este método de extensión</target>
        </trans-unit>
        <trans-unit id="10534c09fa4b74a0a535f2ec89be9b232f40851d" translate="yes" xml:space="preserve">
          <source>And at another place:</source>
          <target state="translated">Y en otro lugar:</target>
        </trans-unit>
        <trans-unit id="1f4740f3ff2a55d536be02cd53cd7111c00e43e1" translate="yes" xml:space="preserve">
          <source>And be sure that if the Class grows, there will still be only those fields cloned, which also get serialized.</source>
          <target state="translated">Y asegúrense de que si la Clase crece,sólo quedarán los campos clonados,que también se serializan.</target>
        </trans-unit>
        <trans-unit id="d0563a645e72e80ed784f5e228f4af5685b4cb1c" translate="yes" xml:space="preserve">
          <source>And the method ...</source>
          <target state="translated">Y el método...</target>
        </trans-unit>
        <trans-unit id="ab1ebe0b3b8ed3d83f31e9be497c84326b12bdb3" translate="yes" xml:space="preserve">
          <source>And then make changes to the new object that are not reflected in the original object.</source>
          <target state="translated">Y luego hacer cambios en el nuevo objeto que no se reflejan en el objeto original.</target>
        </trans-unit>
        <trans-unit id="1710195cfedc2dce1fd5d8e0f90bbd028a5353c0" translate="yes" xml:space="preserve">
          <source>And this method is blindingly fast too: if we use nested structs, it's 35x faster than serializing/deserializing nested classes, and allows us to take advantage of all of the threads available on the machine.</source>
          <target state="translated">Y este método también es cegadoramente rápido:si usamos estructuras anidadas,es 35 veces más rápido que serializar las clases anidadas,y nos permite aprovechar todos los hilos disponibles en la máquina.</target>
        </trans-unit>
        <trans-unit id="d0c13e59860a62aab2ef50f3da165832ec52603e" translate="yes" xml:space="preserve">
          <source>And with the use of extension methods (also from the originally referenced source):</source>
          <target state="translated">Y con el uso de métodos de extensión (también de la fuente originalmente referida):</target>
        </trans-unit>
        <trans-unit id="c9f2a9c42fbc8f2b7cc5c9be9f24de59698164d7" translate="yes" xml:space="preserve">
          <source>Apparently, ExpressMapper is as fast, if not faster, than hand coding such as above. I might have to see how they compare with a profiler.</source>
          <target state="translated">Aparentemente,el ExpressMapper es tan rápido,si no más rápido,que la codificación manual como la anterior.Tendría que ver cómo se comparan con un perfilador.</target>
        </trans-unit>
        <trans-unit id="5c12a41b60d532c82c3b43c02edb2e71fc14f583" translate="yes" xml:space="preserve">
          <source>As I couldn't find a cloner that meets all my requirements in different projects, I created a deep cloner that can be configured and adapted to different code structures instead of adapting my code to meet the cloners requirements. Its achieved by adding annotations to the code that shall be cloned or you just leave the code as it is to have the default behaviour. It uses reflection, type caches and is based on &lt;a href=&quot;https://fasterflect.codeplex.com/&quot;&gt;fasterflect&lt;/a&gt;. The cloning process is very fast for a huge amount of data and a high object hierarchy (compared to other reflection/serialization based algorithms).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como no pude encontrar un clonador que cumpla con todos mis requisitos en diferentes proyectos, cre&amp;eacute; un clonador profundo que se puede configurar y adaptar a diferentes estructuras de c&amp;oacute;digo en lugar de adaptar mi c&amp;oacute;digo para cumplir con los requisitos de los clonadores. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se logra agregando anotaciones al c&amp;oacute;digo que se clonar&amp;aacute; o simplemente deja el c&amp;oacute;digo como debe tener el comportamiento predeterminado. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utiliza la reflexi&amp;oacute;n, el tipo de cach&amp;eacute;s y se basa en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://fasterflect.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fasterflect&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El proceso de clonaci&amp;oacute;n es muy r&amp;aacute;pido para una gran cantidad de datos y una alta jerarqu&amp;iacute;a de objetos (en comparaci&amp;oacute;n con otros algoritmos basados ​​en reflexi&amp;oacute;n / serializaci&amp;oacute;n).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87f827418ff56e0bbe18c669ab59db265811888c" translate="yes" xml:space="preserve">
          <source>As mentioned elsewhere, it does require your objects to be serializable.</source>
          <target state="translated">Como se mencionó en otra parte,requiere que sus objetos sean serializables.</target>
        </trans-unit>
        <trans-unit id="1110e7970bd347f9a3fc9cf0712907b6d662e3b4" translate="yes" xml:space="preserve">
          <source>As nearly all of the answers to this question have been unsatisfactory or plainly don't work in my situation, I have authored &lt;a href=&quot;https://github.com/replaysMike/AnyClone&quot;&gt;AnyClone&lt;/a&gt; which is entirely implemented with reflection and solved all of the needs here. I was unable to get serialization to work in a complicated scenario with complex structure, and &lt;code&gt;IClonable&lt;/code&gt; is less than ideal - in fact it shouldn't even be necessary.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como casi todas las respuestas a esta pregunta han sido insatisfactorias o simplemente no funcionan en mi situaci&amp;oacute;n, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/replaysMike/AnyClone&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;escrib&amp;iacute; AnyClone,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se implement&amp;oacute; completamente con reflexi&amp;oacute;n y resolvi&amp;oacute; todas las necesidades aqu&amp;iacute;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No pude lograr que la serializaci&amp;oacute;n funcionara en un escenario complicado con una estructura compleja, e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;IClonable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es menos que ideal; de hecho, ni siquiera deber&amp;iacute;a ser necesario.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1313723bc88d37b449c90621b18a792ad5c857fb" translate="yes" xml:space="preserve">
          <source>Basically you need to implement ICloneable interface and then realize object structure copying.</source>
          <target state="translated">Básicamente necesitas implementar la interfaz ICloneable y luego realizar la copia de la estructura de los objetos.</target>
        </trans-unit>
        <trans-unit id="f71d544485df8025b3b633c935a5631b7761b88e" translate="yes" xml:space="preserve">
          <source>Better still, use generic List&amp;lt;T&amp;gt; cloner:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mejor a&amp;uacute;n, use el clonador gen&amp;eacute;rico List &amp;lt;T&amp;gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="692cc6aa6522e29de28ed95cf1ce9f0d1fece5d9" translate="yes" xml:space="preserve">
          <source>Checksums to aid in debugging</source>
          <target state="translated">Cheques para ayudar a la depuración</target>
        </trans-unit>
        <trans-unit id="f8eb3248811492e79afeba88e2112b19fd5e3085" translate="yes" xml:space="preserve">
          <source>Cheers.</source>
          <target state="translated">Cheers.</target>
        </trans-unit>
        <trans-unit id="2df53530264316c637ddf985cf690aac0257f4d4" translate="yes" xml:space="preserve">
          <source>Choose this answer if you want the fastest speed .NET is capable of.</source>
          <target state="translated">Elija esta respuesta si quiere la velocidad más rápida de la que es capaz el .NET.</target>
        </trans-unit>
        <trans-unit id="c0fdac0bdca937d311a77c82e199ab179dc62d27" translate="yes" xml:space="preserve">
          <source>Cloning objects incorrectly can lead to very difficult-to-pin-down bugs. In production code, I tend to implement a checksum to double check that the object has been cloned properly, and hasn't been corrupted by another reference to it. This checksum can be switched off in Release mode.</source>
          <target state="translated">La clonación de objetos incorrectamente puede conducir a bichos muy difíciles de pinchar.En el código de producción,tiendo a implementar una suma de verificación para comprobar que el objeto ha sido clonado correctamente,y no ha sido corrompido por otra referencia a él.Esta suma de comprobación puede ser desactivada en el modo de liberación.</target>
        </trans-unit>
        <trans-unit id="fd74b2a71394e7ee81bb386b6917d0be84ba18b0" translate="yes" xml:space="preserve">
          <source>Code Generator</source>
          <target state="translated">Generador de código</target>
        </trans-unit>
        <trans-unit id="25357e6d4fe7b7c5a6d148c861ae62ca1d739cbd" translate="yes" xml:space="preserve">
          <source>Collection items for types implementing ICollection</source>
          <target state="translated">Artículos de colección para los tipos que implementan la recolección</target>
        </trans-unit>
        <trans-unit id="1d2a3b6ac919aa25b6d001f61ba859028b6bc586" translate="yes" xml:space="preserve">
          <source>Copying an object by specifying &lt;code&gt;New&lt;/code&gt; followed by the class name often leads to code that is not extensible. Using clone, the application of prototype pattern, is a better way to achieve this. However, using clone as it is provided in C# (and Java) can be quite problematic as well. It is better to provide a protected (non-public) copy constructor and invoke that from the clone method. This gives us the ability to delegate the task of creating an object to an instance of a class itself, thus providing extensibility and also, safely creating the objects using the protected copy constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Copiar un objeto especificando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;New&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; seguido del nombre de la clase a menudo conduce a un c&amp;oacute;digo que no es extensible. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usar el clon, la aplicaci&amp;oacute;n del patr&amp;oacute;n prototipo, es una mejor manera de lograrlo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, usar clon como se proporciona en C # (y Java) tambi&amp;eacute;n puede ser bastante problem&amp;aacute;tico. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es mejor proporcionar un constructor de copias protegido (no p&amp;uacute;blico) e invocarlo desde el m&amp;eacute;todo de clonaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto nos da la capacidad de delegar la tarea de crear un objeto a una instancia de una clase en s&amp;iacute; misma, proporcionando as&amp;iacute; extensibilidad y tambi&amp;eacute;n, creando de forma segura los objetos utilizando el constructor de copia protegida.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab2ca7bedff39cc7ca86fac38435d89d6b71fedb" translate="yes" xml:space="preserve">
          <source>Custom classes and structs, including generic classes and structs.</source>
          <target state="translated">Clases y estructuras personalizadas,incluyendo clases y estructuras genéricas.</target>
        </trans-unit>
        <trans-unit id="49116a8d10b7d9e81f10da72ed4849db170e4c2d" translate="yes" xml:space="preserve">
          <source>Deep cloning objects</source>
          <target state="translated">Los objetos de clonación profunda</target>
        </trans-unit>
        <trans-unit id="8622437626d6131f373e7baa6060fdcc20366396" translate="yes" xml:space="preserve">
          <source>Define an &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; with a read-only &lt;code&gt;Self&lt;/code&gt; property that returns &lt;code&gt;T&lt;/code&gt;, and &lt;code&gt;ICloneable&amp;lt;out T&amp;gt;&lt;/code&gt;, which derives from &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; and includes a method &lt;code&gt;T Clone()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Defina un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Self&lt;/code&gt; de&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo lectura &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;que devuelva &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ICloneable&amp;lt;out T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que deriva de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e incluye un m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T Clone()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a7fe18eb6df3c19423dafe4d851042aca981175" translate="yes" xml:space="preserve">
          <source>EDIT: project is discontinued</source>
          <target state="translated">EDIT:el proyecto se ha interrumpido</target>
        </trans-unit>
        <trans-unit id="32fd369a2e358951ab3eab2db75ced8552288be9" translate="yes" xml:space="preserve">
          <source>Each derived type should implement &lt;code&gt;VirtualClone&lt;/code&gt; by calling the base clone method and then doing whatever needs to be done to properly clone those aspects of the derived type which the parent VirtualClone method hasn't yet handled.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cada tipo derivado debe implementar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;VirtualClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; llamando al m&amp;eacute;todo de clonaci&amp;oacute;n base y luego haciendo lo que sea necesario para clonar correctamente aquellos aspectos del tipo derivado que el m&amp;eacute;todo VirtualClone padre a&amp;uacute;n no ha manejado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37781e17dc9d9f36990e7eeb0e4d1da65f512dd7" translate="yes" xml:space="preserve">
          <source>First and foremost, those are all our options:</source>
          <target state="translated">En primer lugar,esas son todas nuestras opciones:</target>
        </trans-unit>
        <trans-unit id="9290916a8ada6d592efd89d4b0ce3854336f1797" translate="yes" xml:space="preserve">
          <source>Follow these steps:</source>
          <target state="translated">Sigue estos pasos:</target>
        </trans-unit>
        <trans-unit id="79bd4d5a1c2ddb092a60f0c609c15d6a6c1715c0" translate="yes" xml:space="preserve">
          <source>Following class/struct members are cloned internally:</source>
          <target state="translated">Los siguientes miembros de la estructura de la clase se clonan internamente:</target>
        </trans-unit>
        <trans-unit id="68c49d64c9298ef668614e4520ac4c5ca0dc781a" translate="yes" xml:space="preserve">
          <source>For a deep copy, there is no way it can know how to automatically do it.</source>
          <target state="translated">Para una copia profunda,no hay manera de que pueda saber cómo hacerlo automáticamente.</target>
        </trans-unit>
        <trans-unit id="934801371dbbff4bea9fcd30da856a969b5d353d" translate="yes" xml:space="preserve">
          <source>For a more detailed explanation on Cloning using ICloneable, check out &lt;a href=&quot;https://web.archive.org/web/20120113123300/http://www.ondotnet.com/pub/a/dotnet/2002/11/25/copying.html&quot;&gt;this article&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener una explicaci&amp;oacute;n m&amp;aacute;s detallada sobre la clonaci&amp;oacute;n con ICloneable, consulte &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://web.archive.org/web/20120113123300/http://www.ondotnet.com/pub/a/dotnet/2002/11/25/copying.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;este art&amp;iacute;culo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fc88e1151d53a8ae7ea98191edcf398003baff4" translate="yes" xml:space="preserve">
          <source>For example: The following code will deepClone Address, but only perform a shallow copy of the _currentJob field.</source>
          <target state="translated">Por ejemplo:El siguiente código hará deepClone Address,pero sólo realizará una copia superficial del campo _currentJob.</target>
        </trans-unit>
        <trans-unit id="5cd150b2223802ecc627d4e65f116ecb5b6a90c3" translate="yes" xml:space="preserve">
          <source>For maximum inheritance versatility, classes exposing public cloning functionality should be &lt;code&gt;sealed&lt;/code&gt;, but derive from a base class which is otherwise identical except for the lack of cloning.  Rather than passing variables of the explicit clonable type, take a parameter of type &lt;code&gt;ICloneable&amp;lt;theNonCloneableType&amp;gt;&lt;/code&gt;.  This will allow a routine that expects a cloneable derivative of  &lt;code&gt;Foo&lt;/code&gt; to work with a cloneable derivative of &lt;code&gt;DerivedFoo&lt;/code&gt;, but also allow the creation of non-cloneable derivatives of &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para una m&amp;aacute;xima versatilidad de herencia, las clases que exponen la funcionalidad de clonaci&amp;oacute;n p&amp;uacute;blica deben &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sealed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero derivar de una clase base que de otro modo es id&amp;eacute;ntica, excepto por la falta de clonaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En lugar de pasar variables del tipo clonable expl&amp;iacute;cito, tome un par&amp;aacute;metro de tipo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ICloneable&amp;lt;theNonCloneableType&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto permitir&amp;aacute; una rutina que espera que un derivado clonable de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcione con un derivado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DerivedFoo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DerivedFoo&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero tambi&amp;eacute;n permitir&amp;aacute; la creaci&amp;oacute;n de derivados no clonables de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bb3bec8cd191d70ffb1e4224ea1af2ade92de38" translate="yes" xml:space="preserve">
          <source>For ultimate speed, you can use &lt;strong&gt;Nested MemberwiseClone to do a deep copy&lt;/strong&gt;. Its almost the same speed as copying a value struct, and is much faster than (a) reflection or (b) serialization (as described in other answers on this page).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para obtener la m&amp;aacute;xima velocidad, puede usar &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nested MemberwiseClone para hacer una copia profunda&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es casi la misma velocidad que copiar una estructura de valores, y es mucho m&amp;aacute;s r&amp;aacute;pido que (a) reflexi&amp;oacute;n o (b) serializaci&amp;oacute;n (como se describe en otras respuestas en esta p&amp;aacute;gina).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49e651e88e06ed605974a0c1ab21a11458146ce1" translate="yes" xml:space="preserve">
          <source>Here a solution fast and easy that worked for me without relaying on Serialization/Deserialization.</source>
          <target state="translated">Aquí una solución rápida y fácil que funcionó para mí sin depender de la serialización-deserialización.</target>
        </trans-unit>
        <trans-unit id="5ab133b4375ba1d6541aa1d17873018e5be4bcf1" translate="yes" xml:space="preserve">
          <source>Here is a deep copy implementation:</source>
          <target state="translated">Aquí hay una implementación de copia profunda:</target>
        </trans-unit>
        <trans-unit id="786eda73accd1aaa905eaaa551adf6a8af41b224" translate="yes" xml:space="preserve">
          <source>Here is the output of the code showing the relative performance difference for 100,000 clones:</source>
          <target state="translated">Aquí está la salida del código que muestra la diferencia relativa de rendimiento para 100.000 clones:</target>
        </trans-unit>
        <trans-unit id="a4113577b91cff35283db6fde643b2a2ec504918" translate="yes" xml:space="preserve">
          <source>Hopefully this implementation can make things clear:</source>
          <target state="translated">Esperemos que esta implementación pueda aclarar las cosas:</target>
        </trans-unit>
        <trans-unit id="284f895aea619d7cd96d1331cb6a4e9e8d08c72d" translate="yes" xml:space="preserve">
          <source>How can I clone or deep copy an object so that the cloned object can be modified without any changes being reflected in the original object?</source>
          <target state="translated">¿Cómo puedo clonar o copiar en profundidad un objeto para que el objeto clonado pueda ser modificado sin que ningún cambio se refleje en el objeto original?</target>
        </trans-unit>
        <trans-unit id="33eb716062ccf9ec7203b8f17cdd0d3d04915bd7" translate="yes" xml:space="preserve">
          <source>I came up with this to overcome a &lt;a href=&quot;http://en.wikipedia.org/wiki/.NET_Framework&quot;&gt;.NET&lt;/a&gt; shortcoming having to manually deep copy List&amp;lt;T&amp;gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se me ocurri&amp;oacute; esto para superar una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;deficiencia de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/.NET_Framework&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET al&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tener que copiar manualmente en profundidad la Lista &amp;lt;T&amp;gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bac9acceb1245250731fed957146e017e67a6a8" translate="yes" xml:space="preserve">
          <source>I don't often need this functionality, so when it's been necessary, I've resorted to creating a new object and then copying each property individually, but it always leaves me with the feeling that there is a better or more elegant way of handling the situation.</source>
          <target state="translated">No suelo necesitar esta funcionalidad,así que cuando ha sido necesario,he recurrido a crear un nuevo objeto y luego copiar cada propiedad individualmente,pero siempre me deja la sensación de que hay una forma mejor o más elegante de manejar la situación.</target>
        </trans-unit>
        <trans-unit id="bb7752146430d112c60f0a59aed39f05a3e65078" translate="yes" xml:space="preserve">
          <source>I find this method quite useful: often, you only want to clone parts of the object, not the entire thing.</source>
          <target state="translated">Encuentro este método bastante útil:a menudo,sólo quieres clonar partes del objeto,no la totalidad.</target>
        </trans-unit>
        <trans-unit id="d10c988eb5d27a0013e7cb535b1aa2ce33e37976" translate="yes" xml:space="preserve">
          <source>I have created a version of the accepted answer that works with both '[Serializable]' and '[DataContract]'. It has been a while since I wrote it, but if I remember correctly [DataContract] needed a different serializer.</source>
          <target state="translated">He creado una versión de la respuesta aceptada que funciona tanto con ''Serializable'' como con ''DataContract''.Ha pasado un tiempo desde que la escribí,pero si recuerdo correctamente [DataContract]necesitaba un serializador diferente.</target>
        </trans-unit>
        <trans-unit id="ec3c1e7cf1ca39d008ad9bbdf191ad00d04de1fc" translate="yes" xml:space="preserve">
          <source>I hope it helps someone else out there who ran into the same problems I did.</source>
          <target state="translated">Espero que ayude a alguien más que se haya encontrado con los mismos problemas que yo.</target>
        </trans-unit>
        <trans-unit id="6bf5e52938c06fb33b6e6fbe9c90474a0566db83" translate="yes" xml:space="preserve">
          <source>I like Copyconstructors like that:</source>
          <target state="translated">Me gustan los copilotos así:</target>
        </trans-unit>
        <trans-unit id="95531a41f608a2cbb78c6c5f7785d8752ce0dadc" translate="yes" xml:space="preserve">
          <source>I prefer a copy constructor to a clone. The intent is clearer.</source>
          <target state="translated">Prefiero un constructor de copias a un clon.La intención es más clara.</target>
        </trans-unit>
        <trans-unit id="c0f74be924fe581418864a3d2a39393a4dc834ad" translate="yes" xml:space="preserve">
          <source>I think you can try this.</source>
          <target state="translated">Creo que puedes probar esto.</target>
        </trans-unit>
        <trans-unit id="eb8254a66f6b04038b9c69b195818c7009ed4042" translate="yes" xml:space="preserve">
          <source>I tried to come up with oneliner that does this, but it's not possible, due to yield not working inside anonymous method blocks.</source>
          <target state="translated">Traté de idear un trazador que haga esto,pero no es posible,debido a que no funciona dentro de los bloques de métodos anónimos.</target>
        </trans-unit>
        <trans-unit id="d5c59659497994547255e487eca88abb8961fd73" translate="yes" xml:space="preserve">
          <source>I use this:</source>
          <target state="translated">Yo uso esto:</target>
        </trans-unit>
        <trans-unit id="aaca6f6057852c9e3ec8b284284cfa0264ea0432" translate="yes" xml:space="preserve">
          <source>I want to do something like:</source>
          <target state="translated">Quiero hacer algo como:</target>
        </trans-unit>
        <trans-unit id="3b8a4cb1921a75f054bdf5a58fc834116fb2a13a" translate="yes" xml:space="preserve">
          <source>I wanted a cloner for very simple objects of mostly primitives and lists.  If your object is out of the box JSON serializable then this method will do the trick.  This requires no modification or implementation of interfaces on the cloned class, just a JSON serializer like JSON.NET.</source>
          <target state="translated">Quería un clonador para objetos muy simples de la mayoría primitivos y listas.Si su objeto está fuera de la caja JSON serializable entonces este método hará el truco.Esto no requiere ninguna modificación o implementación de interfaces en la clase clonada,sólo un serializador JSON como JSON.NET.</target>
        </trans-unit>
        <trans-unit id="bc1b3ec016bf5be9728f40160455a45618dcdb74" translate="yes" xml:space="preserve">
          <source>I've just created &lt;strong&gt;&lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions&quot;&gt;&lt;code&gt;CloneExtensions&lt;/code&gt; library&lt;/a&gt;&lt;/strong&gt; project. It performs fast, deep clone using simple assignment operations generated by Expression Tree runtime code compilation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Acabo de crear el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;proyecto de la &lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;biblioteca &lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;CloneExtensions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Realiza una clonaci&amp;oacute;n r&amp;aacute;pida y profunda utilizando operaciones de asignaci&amp;oacute;n simples generadas por la compilaci&amp;oacute;n del c&amp;oacute;digo de tiempo de ejecuci&amp;oacute;n de Expression Tree.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63bdd57a2d0337e4d87060f54af28df189340cab" translate="yes" xml:space="preserve">
          <source>I've seen it implemented through reflection as well. Basically there was a method that would iterate through the members of an object and appropriately copy them to the new object. When it reached reference types or collections I think it did a recursive call on itself. Reflection is expensive, but it worked pretty well.</source>
          <target state="translated">También lo he visto implementado a través de la reflexión.Básicamente había un método que iteraba a través de los miembros de un objeto y los copiaba apropiadamente al nuevo objeto.Cuando llegó a los tipos o colecciones de referencia creo que hizo un llamado recursivo sobre sí mismo.La reflexión es cara,pero funcionó bastante bien.</target>
        </trans-unit>
        <trans-unit id="79bd2a350fbcbb11f645b5eca7a181fed727f30b" translate="yes" xml:space="preserve">
          <source>If it's deep copy of all members, you need to insure (not relating on solution you choose) that all children are clonable as well.</source>
          <target state="translated">Si se trata de una copia profunda de todos los miembros,tienes que asegurarte (sin relacionarte con la solución que elijas)que todos los niños son clonables también.</target>
        </trans-unit>
        <trans-unit id="e24eceaa8e8765b2d01a536c642ac6f8ffe37a02" translate="yes" xml:space="preserve">
          <source>If you have a &quot;&lt;strong&gt;class&lt;/strong&gt;&quot;, it's a &lt;strong&gt;reference type&lt;/strong&gt;, so if you copy it, all you are doing is copying the pointer to it. To create a true clone, you have to be more creative, and use &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;differences between value types and references types&lt;/a&gt; which creates another copy of the original object in memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si tiene una &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;, es un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo de referencia&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que si la copia, todo lo que est&amp;aacute; haciendo es copiar el puntero a ella. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para crear un clon verdadero, debe ser m&amp;aacute;s creativo y utilizar las &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;diferencias entre los tipos de valores y los tipos de referencias, lo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que crea otra copia del objeto original en la memoria.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98d36d67a28d8f5c15399c14baef62cd21c448b8" translate="yes" xml:space="preserve">
          <source>If you have a &quot;&lt;strong&gt;struct&lt;/strong&gt;&quot;, it's a &lt;strong&gt;value type&lt;/strong&gt; so you can just copy it, and the contents will be cloned (but it will only make a shallow clone unless you use the techniques in this post).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si tiene una &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;estructura&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;, es un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo de valor,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por lo que puede copiarla y el contenido se clonar&amp;aacute; (pero solo har&amp;aacute; un clon superficial a menos que use las t&amp;eacute;cnicas en esta publicaci&amp;oacute;n).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdd4dd3e80e7c7a49bd131224ae9255763d93baa" translate="yes" xml:space="preserve">
          <source>If you have more things to copy add them</source>
          <target state="translated">Si tienes más cosas para copiar,añádelas.</target>
        </trans-unit>
        <trans-unit id="290fd7a56c2e2008bf0fd281f379860b0e5510e5" translate="yes" xml:space="preserve">
          <source>If you want true cloning to unknown types you can take a look at
&lt;a href=&quot;http://fastclone.codeplex.com/&quot;&gt;fastclone&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si desea una verdadera clonaci&amp;oacute;n a tipos desconocidos, puede echar un vistazo a &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://fastclone.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fastclone&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cdafe5a039bec223dfc481c4ea0a13f7b5f0f79" translate="yes" xml:space="preserve">
          <source>If you're already using a 3rd party application like &lt;a href=&quot;http://valueinjecter.codeplex.com/&quot;&gt;ValueInjecter&lt;/a&gt; or &lt;a href=&quot;http://automapper.codeplex.com/&quot;&gt;Automapper&lt;/a&gt;, you can do something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si ya est&amp;aacute; utilizando una aplicaci&amp;oacute;n de terceros como &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://valueinjecter.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ValueInjecter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://automapper.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Automapper&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , puede hacer algo como esto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b834a0ee5a627d304f848834c565ac9ea3f4f76" translate="yes" xml:space="preserve">
          <source>If your Object Tree is Serializeable you could also use something like this</source>
          <target state="translated">Si tu Árbol de Objetos es serializable también podrías usar algo como esto</target>
        </trans-unit>
        <trans-unit id="a38d103b365aeb2f9c22815169ee1ce634af0a06" translate="yes" xml:space="preserve">
          <source>Ignore this answer if you want a really, really easy method of cloning.</source>
          <target state="translated">Ignora esta respuesta si quieres un método de clonación muy,muy fácil.</target>
        </trans-unit>
        <trans-unit id="bb0c9b67acb15de24ee8a8a6c073b40ceffd7394" translate="yes" xml:space="preserve">
          <source>In case you prefer to use the new &lt;a href=&quot;http://en.wikipedia.org/wiki/Extension_method&quot;&gt;extension methods&lt;/a&gt; of C# 3.0, change the method to have the following signature:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En caso de que prefiera utilizar los nuevos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Extension_method&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extensi&amp;oacute;n&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de C # 3.0, cambie el m&amp;eacute;todo para tener la siguiente firma:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db3aaef5372757b66df21234060ba0c120487fd4" translate="yes" xml:space="preserve">
          <source>In general, you implement the ICloneable interface and implement Clone yourself.
C# objects have a built-in MemberwiseClone method that performs a shallow copy that can help you out for all the primitives.</source>
          <target state="translated">En general,usted implementa la interfaz de ICloneable e implementa el Clon usted mismo.Los objetos C#tienen incorporado un método de MemberwiseClone que realiza una copia superficial que puede ayudarte para todos los primitivos.</target>
        </trans-unit>
        <trans-unit id="e2233544b5ac2cae76069b418f5cf0e76acfb419" translate="yes" xml:space="preserve">
          <source>In other words, &lt;a href=&quot;http://c2.com/cgi/wiki?PrematureOptimization&quot;&gt;go with another answer unless you have a performance bottleneck that needs fixing, and you can prove it with a profiler&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En otras palabras, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?PrematureOptimization&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;elija otra respuesta, a menos que tenga un cuello de botella en el rendimiento que deba corregirse y pueda probarlo con un generador de perfiles&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdb7be9a6ed4c1891567f4662c3e6a7fcf3be9ca" translate="yes" xml:space="preserve">
          <source>Instead of writing your own &lt;code&gt;Clone&lt;/code&gt; or &lt;code&gt;Copy&lt;/code&gt; methods with a tone of assignments between fields and properties make the program do it for yourself, using Expression Tree. &lt;code&gt;GetClone&amp;lt;T&amp;gt;()&lt;/code&gt; method marked as extension method allows you to simply call it on your instance:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En lugar de escribir sus propios &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; con un tono de asignaciones entre campos y propiedades, haga que el programa lo haga por usted mismo, usando el &amp;Aacute;rbol de expresiones. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GetClone&amp;lt;T&amp;gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; marcado como m&amp;eacute;todo de extensi&amp;oacute;n le permite simplemente llamarlo en su instancia:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="432ff0c0bae61943e8d638ae50cea62a618dc2cf" translate="yes" xml:space="preserve">
          <source>Isn't it quite like how you'd write your own &lt;code&gt;Clone&lt;/code&gt; method for &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;No es como escribir tu propio &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdd7f499025f760963324de6629e12ddc3b6c2f5" translate="yes" xml:space="preserve">
          <source>It's also faster than serialization-based solution when you clone more then couple instances of the same type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n es m&amp;aacute;s r&amp;aacute;pido que la soluci&amp;oacute;n basada en la serializaci&amp;oacute;n al clonar m&amp;aacute;s de par instancias del mismo tipo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee9522dc6965391afa5dd9a0c19ece73d75bea0a" translate="yes" xml:space="preserve">
          <source>Keep things simple and use &lt;a href=&quot;http://automapper.org/&quot;&gt;AutoMapper&lt;/a&gt; as others mentioned, it's a simple little library to map one object to another... To copy an object to another with the same type, all you need is three lines of code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mantenga las cosas simples y use &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://automapper.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AutoMapper&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como otros mencionaron, es una peque&amp;ntilde;a biblioteca simple para asignar un objeto a otro ... Para copiar un objeto a otro con el mismo tipo, todo lo que necesita es tres l&amp;iacute;neas de c&amp;oacute;digo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9387c3626e4ad38a467bda33b453d0bfdbc1381" translate="yes" xml:space="preserve">
          <source>Manually with &lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.icloneable&quot;&gt;ICloneable&lt;/a&gt;&lt;/strong&gt;, which is &lt;em&gt;Shallow&lt;/em&gt; and not &lt;em&gt;Type-Safe&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Manualmente con &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.icloneable&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que es &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;poco profundo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no es de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;tipo seguro&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cda1fab28beb5dcc6f99ca6ede745083a62923c" translate="yes" xml:space="preserve">
          <source>Note that &lt;strong&gt;if&lt;/strong&gt; you use &lt;strong&gt;Nested MemberwiseClone for a deep copy&lt;/strong&gt;, you have to manually implement a ShallowCopy for each nested level in the class, and a DeepCopy which calls all said ShallowCopy methods to create a complete clone. This is simple: only a few lines in total, see the demo code below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nested MemberwiseClone para una copia profunda&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , debe implementar manualmente una ShallowCopy para cada nivel anidado en la clase, y una DeepCopy que llama a todos los m&amp;eacute;todos ShallowCopy para crear un clon completo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es simple: solo unas pocas l&amp;iacute;neas en total, vea el c&amp;oacute;digo de demostraci&amp;oacute;n a continuaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0af8ae4e31e9ff3ff82bf3e10fbc4533e36588ee" translate="yes" xml:space="preserve">
          <source>Note that when it comes to cloning an object, there is is a big difference between a &quot;&lt;strong&gt;struct&lt;/strong&gt;&quot; and a &quot;&lt;strong&gt;class&lt;/strong&gt;&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que cuando se trata de clonar un objeto, hay una gran diferencia entre una &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;estructura&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; y una &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;clase&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aae01712872b960fb803d67f343b15e2447afa95" translate="yes" xml:space="preserve">
          <source>Now consider having a class derive from Person.</source>
          <target state="translated">Ahora considera tener una clase derivada de Persona.</target>
        </trans-unit>
        <trans-unit id="ff34d754f6d804ac5bef77b5ec865a3523ed0454" translate="yes" xml:space="preserve">
          <source>Now the method call simply becomes &lt;code&gt;objectBeingCloned.Clone();&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora la llamada al m&amp;eacute;todo simplemente se convierte en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;objectBeingCloned.Clone();&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1804c90829b7f01abfd49841af3caae85ad51299" translate="yes" xml:space="preserve">
          <source>Nullable</source>
          <target state="translated">Nullable</target>
        </trans-unit>
        <trans-unit id="aea48637fd6cb0fbb1092b31ccd75f1c1c3816b2" translate="yes" xml:space="preserve">
          <source>Observe that, if we keep a count of the number of objects, the clone as implemented here will keep a correct count of the number of objects.</source>
          <target state="translated">Obsérvese que,si llevamos un recuento del número de objetos,el clon,tal y como se ha implementado aquí,llevará un recuento correcto del número de objetos.</target>
        </trans-unit>
        <trans-unit id="c3eeb00b000365bc8d53a0a96cf25825d356fa70" translate="yes" xml:space="preserve">
          <source>Ok, there are some obvious example with reflection in this post, BUT reflection is usually slow, until you start to cache it properly.</source>
          <target state="translated">Ok,hay algunos ejemplos obvios con la reflexión en este post,PERO la reflexión suele ser lenta,hasta que empiezas a almacenarla adecuadamente.</target>
        </trans-unit>
        <trans-unit id="e23d64e4397696c5fa59fa45306bb0e1f0420da7" translate="yes" xml:space="preserve">
          <source>One excellent use case for this code is feeding clones of a nested class or struct into a queue, to implement the producer / consumer pattern.</source>
          <target state="translated">Un excelente caso de uso de este código es alimentar a los clones de una clase o estructura anidada en una cola,para implementar el patrón de consumo del productor.</target>
        </trans-unit>
        <trans-unit id="761342355b401790dfbe23294d1df5dacd46fb06" translate="yes" xml:space="preserve">
          <source>Pretty darn close to the theoretical maximum speed .NET is capable of.</source>
          <target state="translated">Bastante cerca de la velocidad máxima teórica de la que NET es capaz.</target>
        </trans-unit>
        <trans-unit id="065d0328e55ae55e8b02ce5bb757b3b0fe0dee2e" translate="yes" xml:space="preserve">
          <source>Primitive (int, uint, byte, double, char, etc.), known immutable
types (DateTime, TimeSpan, String) and delegates (including
Action, Func, etc)</source>
          <target state="translated">Tipos primitivos (int,uint,byte,doble,char,etc.),tipos inmutables conocidos (DateTime,TimeSpan,String)y delegados (incluyendo Action,Func,etc.)</target>
        </trans-unit>
        <trans-unit id="7bf8447210928dc303c80a8768175497c2b0a3c9" translate="yes" xml:space="preserve">
          <source>Q. Why would I choose this answer?</source>
          <target state="translated">Q.¿Por qué elegiría esta respuesta?</target>
        </trans-unit>
        <trans-unit id="dcc2f3fe8faa1e5329b963097f34643d07f07cfb" translate="yes" xml:space="preserve">
          <source>Read more about generated expressions on &lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions/blob/master/EXPRESSION_TREES.md&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lea m&amp;aacute;s sobre las expresiones generadas en la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions/blob/master/EXPRESSION_TREES.md&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;documentaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf20c3222016afbe0f5b7622903a26f7ea3da3d7" translate="yes" xml:space="preserve">
          <source>Really useful for decoupling many threads from many other threads</source>
          <target state="translated">Realmente útil para desacoplar muchos hilos de muchos otros hilos</target>
        </trans-unit>
        <trans-unit id="676a813ffcf5e05102377d47f21daa6ca2370a0a" translate="yes" xml:space="preserve">
          <source>Requires &lt;em&gt;System, System.IO, System.Runtime.Serialization, System.Runtime.Serialization.Formatters.Binary, System.Xml&lt;/em&gt;;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Requiere &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System, System.IO, System.Runtime.Serialization, System.Runtime.Serialization.Formatters.Binary, System.Xml&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="501424267b7da4761a914bfa7559daf692526455" translate="yes" xml:space="preserve">
          <source>Sample expression debug listing for &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; depuraci&amp;oacute;n de expresiones de muestra para &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;List &amp;lt;int&amp;gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87378a24289782458b83ba8c77b242d94a03f977" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;differences between value types and references types&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea las &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;diferencias entre los tipos de valores y los tipos de referencias&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2d0c4f52df46db4741e6f38ce4a127fc1302d208" translate="yes" xml:space="preserve">
          <source>See the this &lt;a href=&quot;http://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;Developer's Corner article&lt;/a&gt; for a few more options (credit to Ian).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Consulte el art&amp;iacute;culo de este &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Rinc&amp;oacute;n del desarrollador&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para ver algunas opciones m&amp;aacute;s (cr&amp;eacute;dito para Ian).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc123cba0fca14bdba4254f8955ce9877d711e07" translate="yes" xml:space="preserve">
          <source>Simple extension method to copy all the public properties. Works for any objects and &lt;strong&gt;does not&lt;/strong&gt; require class to be &lt;code&gt;[Serializable]&lt;/code&gt;. Can be extended for other access level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;eacute;todo de extensi&amp;oacute;n simple para copiar todas las propiedades p&amp;uacute;blicas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Funciona para cualquier objeto y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; requiere que la clase sea &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[Serializable]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede ampliar para otro nivel de acceso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9f42ce5d34f0487a854ebac451ba155ef8f4a8e" translate="yes" xml:space="preserve">
          <source>So I'll just copy relevant parts of those 2 references here. That way we can have:</source>
          <target state="translated">Así que copiaré partes relevantes de esas dos referencias aquí.De esa manera podemos tener:</target>
        </trans-unit>
        <trans-unit id="782c0023b4d03aa4bb350af8e42a042f00ca40c5" translate="yes" xml:space="preserve">
          <source>Sometimes you need to be aware of some restriction during this process, for example if you copying the ORM objects most of frameworks allow only one object attached to the session and you MUST NOT make clones of this object, or if it's possible you need to care about session attaching of these objects.</source>
          <target state="translated">A veces hay que tener en cuenta alguna restricción durante este proceso,por ejemplo si se copian los objetos ORM la mayoría de los marcos permiten sólo un objeto adjunto a la sesión y NO DEBEN hacer clones de este objeto,o si es posible hay que tener cuidado con la sesión adjunta de estos objetos.</target>
        </trans-unit>
        <trans-unit id="0ca3f588a1eccb15e1b1ea04edb10a168a3912e1" translate="yes" xml:space="preserve">
          <source>Standard ignore attributes are supported using &lt;code&gt;[IgnoreDataMember]&lt;/code&gt;, &lt;code&gt;[NonSerialized]&lt;/code&gt;. Supports complex collections, properties without setters, readonly fields etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los atributos de ignorar est&amp;aacute;ndar son compatibles con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[IgnoreDataMember]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[NonSerialized]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Admite colecciones complejas, propiedades sin setters, campos de solo lectura, etc.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0eac9f55b2053c29c60df9fa0310dc9335a8d1a6" translate="yes" xml:space="preserve">
          <source>T[] arrays</source>
          <target state="translated">T[]arreglos</target>
        </trans-unit>
        <trans-unit id="fc73feec9263194ea7566c6ca298cf0b1dc6e4bc" translate="yes" xml:space="preserve">
          <source>That means: if you refer multiple times to the same object in your hierachy, the clone will also have a single instance beeing referenced.</source>
          <target state="translated">Esto significa:si se refiere varias veces al mismo objeto en su jerarquía,el clon también tendrá una sola instancia siendo referenciado.</target>
        </trans-unit>
        <trans-unit id="5185008143b9a4c57443feec185defd54db980c5" translate="yes" xml:space="preserve">
          <source>That's How I used it</source>
          <target state="translated">Así es como lo usé</target>
        </trans-unit>
        <trans-unit id="649495c719068d9e76435ae9a61315556043b104" translate="yes" xml:space="preserve">
          <source>That's expression based cloning working about 10 times faster than binary serialization and maintaining complete object graph integrity.</source>
          <target state="translated">Es una clonación basada en la expresión que funciona unas 10 veces más rápido que la serialización binaria y mantiene la integridad completa de los gráficos de los objetos.</target>
        </trans-unit>
        <trans-unit id="5e0381de4bd305f85d92a1abdfa2d27e82f74f22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;article Fast Deep Copy by Expression Trees&lt;/a&gt;   has  also performance comparison of cloning by Serialization, Reflection and Expression Trees.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;art&amp;iacute;culo Fast Deep Copy de Expression Trees&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n tiene una comparaci&amp;oacute;n de rendimiento de la clonaci&amp;oacute;n por Serializaci&amp;oacute;n, Reflexi&amp;oacute;n y Expression Trees.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d11a96cf2596c6c3dffe8adc41739b4941905d8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;long&lt;/em&gt; answer is &quot;it depends&quot;. As mentioned by others, ICloneable is not supported by generics, requires special considerations for circular class references, and is actually viewed by some as a &lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;&quot;mistake&quot;&lt;/a&gt; in the .NET Framework. The serialization method depends on your objects being serializable, which they may not be and you may have no control over. There is still much debate in the community over which is the &quot;best&quot; practice. In reality, none of the solutions are the one-size fits all best practice for all situations like ICloneable was originally interpreted to be.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;respuesta &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;larga&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &quot;depende&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como lo mencionaron otros, ICloneable no es compatible con los gen&amp;eacute;ricos, requiere consideraciones especiales para las referencias de clase circulares y, de hecho, algunos lo ven como un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;error&quot;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en .NET Framework. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El m&amp;eacute;todo de serializaci&amp;oacute;n depende de que sus objetos sean serializables, lo que puede no serlo y es posible que usted no tenga control. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Todav&amp;iacute;a hay mucho debate en la comunidad sobre cu&amp;aacute;l es la &quot;mejor&quot; pr&amp;aacute;ctica. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En realidad, ninguna de las soluciones es la mejor pr&amp;aacute;ctica de talla &amp;uacute;nica para todas las situaciones, como se interpret&amp;oacute; originalmente como ICloneable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b0ed5f623380dd6ad9d925b235d263800849c07" translate="yes" xml:space="preserve">
          <source>The best is to implement an &lt;strong&gt;extension method&lt;/strong&gt; like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo mejor es implementar un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de extensi&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="696953dccce4adf3ae167301944e4e76065b3a09" translate="yes" xml:space="preserve">
          <source>The best thing to do for cloning objects in C sharp!</source>
          <target state="translated">¡Lo mejor para clonar objetos en Do sostenido!</target>
        </trans-unit>
        <trans-unit id="bf487f5262ad04b996e29511e0a35c4ab3748b82" translate="yes" xml:space="preserve">
          <source>The extension method can be used as follow:</source>
          <target state="translated">El método de extensión puede utilizarse de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="a99ffc2496c07c5a08ed57fd1f7f7e0552e18d8a" translate="yes" xml:space="preserve">
          <source>The following method of performing a deep clone is:</source>
          <target state="translated">El siguiente método para realizar un clon profundo es:</target>
        </trans-unit>
        <trans-unit id="dbbcd6ba835275fa6d96111588cbe40a53ba07d0" translate="yes" xml:space="preserve">
          <source>The idea is that it serializes your object and then deserializes it into a fresh object. The benefit is that you don't have to concern yourself about cloning everything when an object gets too complex.</source>
          <target state="translated">La idea es que serializa el objeto y luego lo deserializa en un objeto nuevo.El beneficio es que no tienes que preocuparte por clonar todo cuando un objeto se vuelve demasiado complejo.</target>
        </trans-unit>
        <trans-unit id="aca838b2e03bc7b1ac6f3116fd7cebcd23924630" translate="yes" xml:space="preserve">
          <source>The output produced will be:</source>
          <target state="translated">La salida producida será:</target>
        </trans-unit>
        <trans-unit id="11d9a4f4f642354e890324bcd8be9e56aba6d769" translate="yes" xml:space="preserve">
          <source>The reason not to use &lt;a href=&quot;http://referencesource.microsoft.com/mscorlib/system/icloneable.cs.html#fb795e239ce05299&quot;&gt;ICloneable&lt;/a&gt; is &lt;strong&gt;not&lt;/strong&gt; because it doesn't have a generic interface.  &lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;The reason not to use it is because it's vague&lt;/a&gt;.  It doesn't make clear whether you're getting a shallow or a deep copy; that's up to the implementer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La raz&amp;oacute;n para no usar &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://referencesource.microsoft.com/mscorlib/system/icloneable.cs.html#fb795e239ce05299&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneable &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;porque no tiene una interfaz gen&amp;eacute;rica. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La raz&amp;oacute;n para no usarlo es porque es vago&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No aclara si est&amp;aacute; obteniendo una copia superficial o profunda; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;eso depende del implementador.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3700a6686267f6677af0b7d02af2cc2b4dad31a9" translate="yes" xml:space="preserve">
          <source>The short answer is you inherit from the ICloneable interface and then implement the .clone function. Clone should do a memberwise copy and perform a deep copy on any member that requires it, then return the resulting object. This is a recursive operation ( it requires that all members of the class you want to clone are either value types or implement ICloneable and that their members are either value types or implement ICloneable, and so on).</source>
          <target state="translated">La respuesta corta es que se hereda de la interfaz de ICloneable y luego se implementa la función .clone.Clone debe hacer una copia de miembros y realizar una copia profunda en cualquier miembro que lo requiera,y luego devolver el objeto resultante.Esta es una operación recursiva (requiere que todos los miembros de la clase que quieres clonar sean tipos de valores o implementen ICloneable y que sus miembros sean tipos de valores o implementen ICloneable,y así sucesivamente).</target>
        </trans-unit>
        <trans-unit id="3d66f69c075cdad3f938b801287b8d10ee299246" translate="yes" xml:space="preserve">
          <source>The solution is faster then reflection, because members information has to be gathered only once, before &lt;code&gt;GetClone&amp;lt;T&amp;gt;&lt;/code&gt; is used for the first time for given type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La soluci&amp;oacute;n es m&amp;aacute;s r&amp;aacute;pida que la reflexi&amp;oacute;n, porque la informaci&amp;oacute;n de los miembros se debe recopilar solo una vez, antes de que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;GetClone&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se use por primera vez para un tipo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dado &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36ea8443350173fd15fbb1534b9edc7edba62173" translate="yes" xml:space="preserve">
          <source>The target object is now a copy of the source object.
Not simple enough? Create an extension method to use everywhere in your solution:</source>
          <target state="translated">El objeto objetivo es ahora una copia del objeto fuente.¿No es lo suficientemente simple? Crear un método de extensión para usar en todas las partes de la solución:</target>
        </trans-unit>
        <trans-unit id="1ce725210efa66422b32b09f551d9867f403bd27" translate="yes" xml:space="preserve">
          <source>Then define a &lt;code&gt;CloneBase&lt;/code&gt; type which implements a &lt;code&gt;protected virtual generic VirtualClone&lt;/code&gt; casting &lt;code&gt;MemberwiseClone&lt;/code&gt; to the passed-in type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces definir un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CloneBase&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tipo que implementa un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;protected virtual generic VirtualClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; colada &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MemberwiseClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; al tipo pasado-in.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0f40b28a3acd118ab2aa4e50e238e03ef1da381" translate="yes" xml:space="preserve">
          <source>Then, call the demo from main:</source>
          <target state="translated">Entonces,llama a la demo desde la central:</target>
        </trans-unit>
        <trans-unit id="8345538a3be0831e2f959f4de42f16a5788caf81" translate="yes" xml:space="preserve">
          <source>There is no need for interfaces, attributes or any other modification to the objects being cloned.</source>
          <target state="translated">No hay necesidad de interfaces,atributos o cualquier otra modificación de los objetos que se clonan.</target>
        </trans-unit>
        <trans-unit id="3fbbfae5551efe8809dc3650a37dccd914f78c6e" translate="yes" xml:space="preserve">
          <source>This is my slightly modified version of his conclusion:</source>
          <target state="translated">Esta es mi versión ligeramente modificada de su conclusión:</target>
        </trans-unit>
        <trans-unit id="e2527389cd7e00418a305634583fb96ead01a973" translate="yes" xml:space="preserve">
          <source>This method solved the problem for me:</source>
          <target state="translated">Este método me resolvió el problema:</target>
        </trans-unit>
        <trans-unit id="918273259e70d6d5921c33a1d7261a5e02d7b842" translate="yes" xml:space="preserve">
          <source>This works extremely well in practice, and allows us to decouple many threads (the producers) from one or more threads (the consumers).</source>
          <target state="translated">Esto funciona muy bien en la práctica,y nos permite desacoplar muchos hilos (los productores)de uno o más hilos (los consumidores).</target>
        </trans-unit>
        <trans-unit id="24648158c3671d5c6bb81a877c8017069ff08988" translate="yes" xml:space="preserve">
          <source>To understand how to do a deep copy using MemberwiseCopy, here is the demo project that was used to generate the times above:</source>
          <target state="translated">Para entender cómo hacer una copia en profundidad usando MemberwiseCopy,aquí está el proyecto de demostración que se utilizó para generar los tiempos anteriores:</target>
        </trans-unit>
        <trans-unit id="fb91e24fa52d8d2b32937bf04d843f730319a902" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="translated">Update</target>
        </trans-unit>
        <trans-unit id="461ad0994b7f1476e4374b7d94e949fb31f497e3" translate="yes" xml:space="preserve">
          <source>Use it like this: &lt;code&gt;MyObj a = DeepCopy(b);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;Uacute;selo as&amp;iacute;: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyObj a = DeepCopy(b);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66dba841d560becc9816085a306d100cc85fee1a" translate="yes" xml:space="preserve">
          <source>Using Nested MemberwiseClone on a class almost as fast as copying a struct, and copying a struct is pretty darn close to the theoretical maximum speed .NET is capable of.</source>
          <target state="translated">Usar Nested MemberwiseClone en una clase casi tan rápido como copiar una estructura,y copiar una estructura es bastante cercano a la velocidad máxima teórica que es capaz de alcanzar .NET.</target>
        </trans-unit>
        <trans-unit id="cd9b9255ce6351bcdef9cf350ab42b9ddeb1b4b9" translate="yes" xml:space="preserve">
          <source>Using this method you don't have to implement ISerializable or ICloneable on your objects.  This is common with the MVC/MVVM pattern, so simple tools like this have been created.</source>
          <target state="translated">Usando este método no tienes que implementar ISerializable o ICloneable en tus objetos.Esto es común con el patrón MVCMVVM,así que se han creado herramientas simples como esta.</target>
        </trans-unit>
        <trans-unit id="bf4a30ae07c99708a387e9cb7d364ddf392a934a" translate="yes" xml:space="preserve">
          <source>Value types vs. References Types</source>
          <target state="translated">Tipos de valor vs.Tipos de referencia</target>
        </trans-unit>
        <trans-unit id="39aea8149aa5b8b103a934efea6b86b20143efef" translate="yes" xml:space="preserve">
          <source>Values of public properties with both get and set accessors</source>
          <target state="translated">Los valores de las propiedades públicas con los accesorios tanto de &quot;get&quot; como de &quot;set&quot;...</target>
        </trans-unit>
        <trans-unit id="302396d82deab7fc7cad3e3483cf941fe922ad9c" translate="yes" xml:space="preserve">
          <source>Values of public, not readonly fields</source>
          <target state="translated">Los valores de los campos públicos,no sólo los de lectura</target>
        </trans-unit>
        <trans-unit id="35552e90441d2a43d9a95ed338c59edd061cc0d0" translate="yes" xml:space="preserve">
          <source>We can have one  (or more) threads modifying a class that they own, then pushing a complete copy of this class into a &lt;code&gt;ConcurrentQueue&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Podemos tener uno (o m&amp;aacute;s) subprocesos que modifiquen una clase que poseen, y luego enviar una copia completa de esta clase a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;ConcurrentQueue&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74a2934d5470ccafae6a9a85155a718db7cb3deb" translate="yes" xml:space="preserve">
          <source>We can have the following three implementations:</source>
          <target state="translated">Podemos tener las siguientes tres implementaciones:</target>
        </trans-unit>
        <trans-unit id="5faaa66e8ef875c00f94582775225a9753cd30ca" translate="yes" xml:space="preserve">
          <source>We have seen a lot of ideas from serialization over manual implementation to reflection and I want to propose a totally different approach using the &lt;a href=&quot;https://github.com/Toxantron/CGbR#cloneable&quot;&gt;CGbR Code Generator&lt;/a&gt;. The generate clone method is memory and CPU efficient and therefor 300x faster as the standard DataContractSerializer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hemos visto muchas ideas desde la serializaci&amp;oacute;n sobre la implementaci&amp;oacute;n manual hasta la reflexi&amp;oacute;n y quiero proponer un enfoque totalmente diferente usando el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Toxantron/CGbR#cloneable&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;generador de c&amp;oacute;digo CGbR&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El m&amp;eacute;todo de generaci&amp;oacute;n de clones es eficiente en memoria y CPU y, por lo tanto, 300 veces m&amp;aacute;s r&amp;aacute;pido que el DataContractSerializer est&amp;aacute;ndar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f14a8b1ccb62df7c67cbfa6a6ec698fcbb6cf25" translate="yes" xml:space="preserve">
          <source>We then have one (or more) threads pulling copies of these classes out and dealing with them.</source>
          <target state="translated">Entonces tenemos uno (o más)hilos que sacan copias de estas clases y se ocupan de ellas.</target>
        </trans-unit>
        <trans-unit id="2179653cf382f636247d9d798b14e45a3f0b83ca" translate="yes" xml:space="preserve">
          <source>Well I was having problems using ICloneable in Silverlight, but I liked the idea of seralization, I can seralize XML, so I did this:</source>
          <target state="translated">Bueno,tenía problemas para usar ICloneable en Silverlight,pero me gustaba la idea de la seralización,puedo seralizar XML,así que hice esto:</target>
        </trans-unit>
        <trans-unit id="6f89392b3e36bbc23bb15c48aee701c6627bc6ba" translate="yes" xml:space="preserve">
          <source>What I usually do is simply make a &lt;code&gt;Copy&lt;/code&gt; method that does exactly what I want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que generalmente hago es simplemente hacer un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que haga exactamente lo que quiero.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d942cdfe72c37fd467fcda26d1a8debb74076bf2" translate="yes" xml:space="preserve">
          <source>Whilst the standard practice is to implement the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.icloneable.aspx&quot;&gt;&lt;code&gt;ICloneable&lt;/code&gt;&lt;/a&gt; interface (described &lt;a href=&quot;https://stackoverflow.com/questions/78536/cloning-objects-in-c/78568#78568&quot;&gt;here&lt;/a&gt;, so I won't regurgitate), here's a nice deep clone object copier I found on &lt;a href=&quot;http://www.codeproject.com/Articles/23832/Implementing-Deep-Cloning-via-Serializing-objects&quot;&gt;The Code Project&lt;/a&gt; a while ago and incorporated it in our stuff.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si bien la pr&amp;aacute;ctica est&amp;aacute;ndar es implementar la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;interfaz &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.icloneable.aspx&quot;&gt; &lt;code&gt;ICloneable&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (descrita &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/78536/cloning-objects-in-c/78568#78568&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por lo que no regurgitar&amp;eacute;), aqu&amp;iacute; hay una buena copiadora de objetos de clonaci&amp;oacute;n profunda que encontr&amp;eacute; en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codeproject.com/Articles/23832/Implementing-Deep-Cloning-via-Serializing-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;The Code Project hace&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; un tiempo y la incorpor&amp;eacute; a nuestras cosas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0089e7b0bbe7b88be15358c0f719fcabdcb908bd" translate="yes" xml:space="preserve">
          <source>Why I choose &lt;em&gt;ICloneable&lt;/em&gt; (i.e. manually)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por qu&amp;eacute; elijo &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneable&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (es decir, manualmente)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c3adc3f6b41e8dec9c11551d20a3ba56b111a2ba" translate="yes" xml:space="preserve">
          <source>Yes, &lt;code&gt;MemberwiseClone&lt;/code&gt; makes a shallow copy, but the opposite of &lt;code&gt;MemberwiseClone&lt;/code&gt; isn't &lt;code&gt;Clone&lt;/code&gt;; it would be, perhaps, &lt;code&gt;DeepClone&lt;/code&gt;, which doesn't exist.  When you use an object through its ICloneable interface, you can't know which kind of cloning the underlying object performs.  (And XML comments won't make it clear, because you'll get the interface comments rather than the ones on the object's Clone method.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;iacute;, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MemberwiseClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hace una copia superficial, pero lo contrario de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;MemberwiseClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ser&amp;iacute;a, quiz&amp;aacute;s, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DeepClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , que no existe. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando usa un objeto a trav&amp;eacute;s de su interfaz ICloneable, no puede saber qu&amp;eacute; tipo de clonaci&amp;oacute;n realiza el objeto subyacente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Y los comentarios XML no lo dejar&amp;aacute;n claro, porque obtendr&amp;aacute; los comentarios de la interfaz en lugar de los del m&amp;eacute;todo Clone del objeto).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2ce8a229f8a057b64fa0f77a6062b9322b7d229" translate="yes" xml:space="preserve">
          <source>You can choose what should be copied from &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;newInstance&lt;/code&gt; using &lt;code&gt;CloningFlags&lt;/code&gt; enum:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede elegir lo que se debe copiar desde la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;source&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;newInstance&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;CloningFlags&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; enum:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cddb79c049ece38cdda3ce4fda281ec800770b8f" translate="yes" xml:space="preserve">
          <source>You may try running the following code:</source>
          <target state="translated">Puede intentar ejecutar el siguiente código:</target>
        </trans-unit>
        <trans-unit id="b49293362c4a6609de12247a9ebbcb6d96508630" translate="yes" xml:space="preserve">
          <source>and then use it anywhere in the solution by</source>
          <target state="translated">y luego utilizarlo en cualquier parte de la solución por</target>
        </trans-unit>
        <trans-unit id="882fd29c021ebf4e995497b69386ec0dd2acc808" translate="yes" xml:space="preserve">
          <source>be informed that this Solution is pretty easy but it's not as performant as other solutions may be.</source>
          <target state="translated">...que esta solución es bastante fácil,pero no es tan eficiente como otras soluciones pueden serlo.</target>
        </trans-unit>
        <trans-unit id="acf770d8bb857e64ae02226262cb7c427088e91c" translate="yes" xml:space="preserve">
          <source>full code check in my post in another answer</source>
          <target state="translated">comprobación completa del código en mi correo en otra respuesta</target>
        </trans-unit>
        <trans-unit id="129e7ca8e224fe2df88fa9b8ab2d02092049a4ce" translate="yes" xml:space="preserve">
          <source>if you'll cache it properly, than it'll deep clone 1000000 object by 4,6s (measured by Watcher).</source>
          <target state="translated">si lo almacena correctamente,entonces clonará profundamente 1000000 objetos por 4,6s (medido por Watcher).</target>
        </trans-unit>
        <trans-unit id="85a67b2f04cac24bb850986a47bf2a5498077678" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;http://valueinjecter.codeplex.com/wikipage?title=Faster%20Deep%20Cloning%20using%20SmartConventionInjection%20and%20FastMember&amp;amp;referringTitle=Home&quot;&gt;the valueinjecter deep cloning solution on CodePlex&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://valueinjecter.codeplex.com/wikipage?title=Faster%20Deep%20Cloning%20using%20SmartConventionInjection%20and%20FastMember&amp;amp;referringTitle=Home&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la soluci&amp;oacute;n de clonaci&amp;oacute;n profunda valueinjecter en CodePlex&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b5b0c8f480f30347ecc2af00ac4fd7ba722152b" translate="yes" xml:space="preserve">
          <source>than you take cached properties or add new to dictionary and use them simply</source>
          <target state="translated">que tomar las propiedades almacenadas o añadir nuevas al diccionario y usarlas simplemente</target>
        </trans-unit>
        <trans-unit id="4fcf39b9da053daec9d46b71401baed4bebb9824" translate="yes" xml:space="preserve">
          <source>what has the same meaning like following c# code:</source>
          <target state="translated">lo que tiene el mismo significado que seguir el código c#:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
