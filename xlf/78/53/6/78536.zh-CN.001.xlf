<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/78536">
    <body>
      <group id="78536">
        <trans-unit id="e7efd000d886354e9d1cc13458d5f1e572b80135" translate="yes" xml:space="preserve">
          <source>1.08 seconds for Nested MemberwiseClone on nested structs</source>
          <target state="translated">嵌套结构上的Nested MemberwiseClone的时间为1.08秒</target>
        </trans-unit>
        <trans-unit id="e1f930c2714fac27b55e1b2d11e7e09778433bcb" translate="yes" xml:space="preserve">
          <source>10x faster than anything that involves serialization/deserialization;</source>
          <target state="translated">比任何涉及序列化deserialization的东西都要快10倍。</target>
        </trans-unit>
        <trans-unit id="913cf4877bd3d1a0e2c97dbb3a5a2b17d016ef6e" translate="yes" xml:space="preserve">
          <source>10x faster than other methods</source>
          <target state="translated">比其他方法快10倍</target>
        </trans-unit>
        <trans-unit id="2e8519892935fb7446d143f4c9e077f5476aac77" translate="yes" xml:space="preserve">
          <source>39.93 seconds for Serialization/Deserialization</source>
          <target state="translated">39.93秒为SerializationDeserialization</target>
        </trans-unit>
        <trans-unit id="605ae3fff262161ddad94d3377c92774ca626ea9" translate="yes" xml:space="preserve">
          <source>4.77 seconds for Nested MemberwiseClone on nested classes</source>
          <target state="translated">嵌套类上的Nested MemberwiseClone 4.77秒</target>
        </trans-unit>
        <trans-unit id="e6a8a27926fb7d4df6fdbc3636b224f4a93094d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;Mr Venkat Subramaniam (redundant link here) explains in much detail why&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Venkat Subramaniam先生（此处为冗余链接）详细说明了原因&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a534b5d3abc07b774eb36f06f48c1a544f34a35e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-by-Expression-Trees-C-Sharp&quot;&gt;&lt;strong&gt;By Expression Trees&lt;/strong&gt;&lt;/a&gt; - &lt;strong&gt;20x faster&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-by-Expression-Trees-C-Sharp&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过表达式树&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;快20倍&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45ad212c37efd2067bec39fde68662fdd5053dd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;&lt;strong&gt;By Reflection&lt;/strong&gt;&lt;/a&gt; - &lt;strong&gt;5x faster&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过反射&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;快5倍&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a201a8cdcb8b06280137854cb5778c399ecc452e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/129395/2094687&quot;&gt;&lt;strong&gt;By Serialization&lt;/strong&gt;&lt;/a&gt; (the shortest code)</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/129395/2094687&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过序列化&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（最短的代码）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55b21ec5676b6d9926b9a2ecbd52a02851175e29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.object.memberwiseclone&quot;&gt;MemberwiseClone&lt;/a&gt;&lt;/strong&gt;, which uses ICloneable</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.object.memberwiseclone&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MemberwiseClone&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它使用ICloneable&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59b3d56df2c2553ca2c3174a09e6a80bb843cdc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.serializableattribute&quot;&gt;Serialization&lt;/a&gt;&lt;/strong&gt;, as pointed by &lt;a href=&quot;https://stackoverflow.com/a/78612/274502&quot;&gt;johnc's preferred answer&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.serializableattribute&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/a/78612/274502&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;约翰&amp;middot;约翰的首选答案&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指出的&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;序列化&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b75c9f0e2a659a1ba2a0729244a6df1e7a7577e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;Expression Trees&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表达树&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b34fe40f5f4167ee46186dd24bc29a8490bea30c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/3441/Base-class-for-cloning-an-object-in-C&quot;&gt;Reflection&lt;/a&gt;&lt;/strong&gt; by using &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.activator.createinstance&quot;&gt;Activator.CreateInstance&lt;/a&gt; and &lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;recursive MemberwiseClone&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/3441/Base-class-for-cloning-an-object-in-C&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.activator.createinstance&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Activator.CreateInstance&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;递归MemberwiseClone进行&lt;/font&gt;&lt;/a&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;反射&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a66965c53feacfdc0f2a622f1ad557b95e5cb35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt; (January 10 2015) Thought I'd revisit this, to mention I recently started using (Newtonsoft) Json to do this, it &lt;a href=&quot;http://maxondev.com/serialization-performance-comparison-c-net-formats-frameworks-xmldatacontractserializer-xmlserializer-binaryformatter-json-newtonsoft-servicestack-text/&quot;&gt;should be&lt;/a&gt; lighter, and avoids the overhead of [Serializable] tags. (&lt;strong&gt;NB&lt;/strong&gt; @atconway has pointed out in the comments that private members are not cloned using the JSON method)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编辑&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（2015年1月10日）以为我会重新审视这一点，我最近提到开始使用（Newtonsoft）Json来做到这一点，它&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maxondev.com/serialization-performance-comparison-c-net-formats-frameworks-xmldatacontractserializer-xmlserializer-binaryformatter-json-newtonsoft-servicestack-text/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;应该&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更轻巧，并且避免了[Serializable]标签的开销。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NB&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; @atconway在注释中指出，不使用JSON方法克隆私有成员）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a29dee9cb9abc92e82f8eade632689b3c73b1ef3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt;:
requires</source>
          <target state="translated">&lt;strong&gt;EDIT&lt;/strong&gt;:
requires</target>
        </trans-unit>
        <trans-unit id="1d85daf15d174bbd5f31c492aa89f634fbfc9513" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Extension Methods&lt;/strong&gt;, such as this &lt;a href=&quot;https://circlesandcrossesblogarchive.blogspot.com/2008/01/extension-methods-for-copying-or.html&quot;&gt;custom clone framework by Havard Straden&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，例如&lt;/font&gt;&lt;a href=&quot;https://circlesandcrossesblogarchive.blogspot.com/2008/01/extension-methods-for-copying-or.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Havard Straden的&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自定义克隆框架&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e32edf705aa496e7b8e43953ad068eb2e8290b5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How fast it is?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有多快？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4153b261e93aa8dd30ee443aaa58263e2edeea3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to use it?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何使用它？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bd2dccfc4d1e6371353d780cd1be827d620d6c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Intermediate Language&lt;/strong&gt;, which I got no idea &lt;a href=&quot;https://whizzodev.blogspot.com/2008/03/object-cloning-using-il-in-c.html&quot;&gt;how works&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中级语言&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，我不知道它是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://whizzodev.blogspot.com/2008/03/object-cloning-using-il-in-c.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何工作的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9448142de5929b4f38d53e908b8a245d2802be75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Latest version has a more null checks, but I left them out for better understanding.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最新版本具有更多的null检查功能，但为了更好的理解，我省略了它们。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2fb848a13809ee8bb14a1d0a69ac671757135fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What can be cloned?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以克隆什么？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40a93dcd5c3fc2492063edd3e1785b037db9989a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;and more...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和更多...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed0893a863748e062a88693b978f6b9f856509ed" translate="yes" xml:space="preserve">
          <source>After much much reading about many of the options linked here, and possible solutions for this issue, I believe &lt;a href=&quot;https://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;all the options are summarized pretty well at &lt;em&gt;Ian P&lt;/em&gt;'s link&lt;/a&gt; (all other options are variations of those) and the best solution is provided by &lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;&lt;em&gt;Pedro77&lt;/em&gt;'s link&lt;/a&gt; on the question comments.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在对这里链接的许多选项以及该问题的可能解决方案进行了许多阅读之后，我相信&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所有选项在&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ian P&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的链接上&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;都得到了&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;很好的总结&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（所有其他选项都是这些选项的变体），并且最佳解决方案是&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pedro77&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在问题评论上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的链接&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8d3bece6070899d0b2f297368bd4b53482ca033" translate="yes" xml:space="preserve">
          <source>Again, note that &lt;strong&gt;if&lt;/strong&gt; you use &lt;strong&gt;Nested MemberwiseClone for a deep copy&lt;/strong&gt;, you have to manually implement a ShallowCopy for each nested level in the class, and a DeepCopy which calls all said ShallowCopy methods to create a complete clone. This is simple: only a few lines in total, see the demo code above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再次，请注意，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nested MemberwiseClone进行深层复制&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则必须为类中的每个嵌套级别手动实现ShallowCopy，并使用DeepCopy调用所有上述ShallowCopy方法来创建完整的克隆。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这很简单：总共只有几行，请参见上面的演示代码。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c19c8aea1a18a9301adb5a8a3a8d0ced86c8138d" translate="yes" xml:space="preserve">
          <source>All his article circles around an example that tries to be applicable for most cases, using 3 objects: &lt;em&gt;Person&lt;/em&gt;, &lt;em&gt;Brain&lt;/em&gt; and &lt;em&gt;City&lt;/em&gt;. We want to clone a person, which will have its own brain but the same city. You can either picture all problems any of the other methods above can bring or read the article.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他所有的文章都围绕着一个示例，该示例试图使用3个对象：&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Person&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Brain&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;City&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来适用于大多数情况&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。我们想克隆一个人，这个人将拥有自己的大脑，但城市相同。您可以想象上面任何其他方法都能带来的所有问题或阅读本文。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b78b06bc11058abc4b4d8e8a718695921c0e80ba" translate="yes" xml:space="preserve">
          <source>All linked methods are well working and were deeply tested.</source>
          <target state="translated">所有联动的方法都很好用,经过了深刻的检验。</target>
        </trans-unit>
        <trans-unit id="0c29649d0294b0e0f1687674c8bc49b583323722" translate="yes" xml:space="preserve">
          <source>All you need is a partial class definition with &lt;code&gt;ICloneable&lt;/code&gt; and the generator does the rest:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您需要做的是使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ICloneable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;进行局部类定义，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后生成器完成其余工作：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="587b224561967e7f419831a3a6ad69801bd354fa" translate="yes" xml:space="preserve">
          <source>Also available as a nuget package:
&lt;a href=&quot;https://www.nuget.org/packages/Clone.Behave/1.0.0&quot;&gt;https://www.nuget.org/packages/Clone.Behave/1.0.0&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;也可以作为nuget包提供：&lt;/font&gt;&lt;a href=&quot;https://www.nuget.org/packages/Clone.Behave/1.0.0&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ://www.nuget.org/packages/Clone.Behave/1.0.0 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caf9f6b34ebd2432c8ed7b73c2a7afc59533eec4" translate="yes" xml:space="preserve">
          <source>Also, you can use this extension method</source>
          <target state="translated">此外,你还可以使用这个扩展方法</target>
        </trans-unit>
        <trans-unit id="10534c09fa4b74a0a535f2ec89be9b232f40851d" translate="yes" xml:space="preserve">
          <source>And at another place:</source>
          <target state="translated">而在另一个地方。</target>
        </trans-unit>
        <trans-unit id="1f4740f3ff2a55d536be02cd53cd7111c00e43e1" translate="yes" xml:space="preserve">
          <source>And be sure that if the Class grows, there will still be only those fields cloned, which also get serialized.</source>
          <target state="translated">而且要确定的是,如果类的增长,仍然只有那些字段被克隆,也会被序列化。</target>
        </trans-unit>
        <trans-unit id="d0563a645e72e80ed784f5e228f4af5685b4cb1c" translate="yes" xml:space="preserve">
          <source>And the method ...</source>
          <target state="translated">而这个方法.....</target>
        </trans-unit>
        <trans-unit id="ab1ebe0b3b8ed3d83f31e9be497c84326b12bdb3" translate="yes" xml:space="preserve">
          <source>And then make changes to the new object that are not reflected in the original object.</source>
          <target state="translated">然后对原对象中没有体现的新对象进行修改。</target>
        </trans-unit>
        <trans-unit id="1710195cfedc2dce1fd5d8e0f90bbd028a5353c0" translate="yes" xml:space="preserve">
          <source>And this method is blindingly fast too: if we use nested structs, it's 35x faster than serializing/deserializing nested classes, and allows us to take advantage of all of the threads available on the machine.</source>
          <target state="translated">而且这种方法的速度也是非常快的:如果我们使用嵌套结构,它比序列化、去序列化嵌套类要快35倍,而且可以利用机器上所有可用的线程。</target>
        </trans-unit>
        <trans-unit id="d0c13e59860a62aab2ef50f3da165832ec52603e" translate="yes" xml:space="preserve">
          <source>And with the use of extension methods (also from the originally referenced source):</source>
          <target state="translated">并使用了扩展方法(同样来自于最初的引用来源)。</target>
        </trans-unit>
        <trans-unit id="c9f2a9c42fbc8f2b7cc5c9be9f24de59698164d7" translate="yes" xml:space="preserve">
          <source>Apparently, ExpressMapper is as fast, if not faster, than hand coding such as above. I might have to see how they compare with a profiler.</source>
          <target state="translated">很显然,ExpressMapper的速度和上面的手工编码一样快,甚至更快。我可能要看看它们与剖析器的比较。</target>
        </trans-unit>
        <trans-unit id="5c12a41b60d532c82c3b43c02edb2e71fc14f583" translate="yes" xml:space="preserve">
          <source>As I couldn't find a cloner that meets all my requirements in different projects, I created a deep cloner that can be configured and adapted to different code structures instead of adapting my code to meet the cloners requirements. Its achieved by adding annotations to the code that shall be cloned or you just leave the code as it is to have the default behaviour. It uses reflection, type caches and is based on &lt;a href=&quot;https://fasterflect.codeplex.com/&quot;&gt;fasterflect&lt;/a&gt;. The cloning process is very fast for a huge amount of data and a high object hierarchy (compared to other reflection/serialization based algorithms).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于在不同的项目中找不到能满足我所有要求的克隆器，因此我创建了一个深度克隆器，可以对它进行配置和调整以适应不同的代码结构，而无需适应我的代码来满足克隆器的要求。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它通过在将要克隆的代码中添加注释来实现，或者您只需保留代码即可保留默认行为。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它使用反射类型缓存，并且基于&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://fasterflect.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fastflect&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于大量数据和高对象层次结构，克隆过程非常快（与其他基于反射/序列化的算法相比）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87f827418ff56e0bbe18c669ab59db265811888c" translate="yes" xml:space="preserve">
          <source>As mentioned elsewhere, it does require your objects to be serializable.</source>
          <target state="translated">正如其他地方提到的,它确实要求你的对象是可序列化的。</target>
        </trans-unit>
        <trans-unit id="1110e7970bd347f9a3fc9cf0712907b6d662e3b4" translate="yes" xml:space="preserve">
          <source>As nearly all of the answers to this question have been unsatisfactory or plainly don't work in my situation, I have authored &lt;a href=&quot;https://github.com/replaysMike/AnyClone&quot;&gt;AnyClone&lt;/a&gt; which is entirely implemented with reflection and solved all of the needs here. I was unable to get serialization to work in a complicated scenario with complex structure, and &lt;code&gt;IClonable&lt;/code&gt; is less than ideal - in fact it shouldn't even be necessary.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于这个问题的几乎所有答案都不能令人满意，或者在我的情况下&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/replaysMike/AnyClone&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根本无法解决&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此我编写了&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AnyClone&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它完全是通过反思实现的，并解决了此处的所有需求。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我无法使序列化在结构复杂的复杂情况下工作，并且&lt;/font&gt;&lt;/font&gt; &lt;code&gt;IClonable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并不理想-实际上，甚至没有必要。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1313723bc88d37b449c90621b18a792ad5c857fb" translate="yes" xml:space="preserve">
          <source>Basically you need to implement ICloneable interface and then realize object structure copying.</source>
          <target state="translated">基本上你需要实现ICloneable接口,然后实现对象结构复制。</target>
        </trans-unit>
        <trans-unit id="f71d544485df8025b3b633c935a5631b7761b88e" translate="yes" xml:space="preserve">
          <source>Better still, use generic List&amp;lt;T&amp;gt; cloner:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更好的是，使用通用List &amp;lt;T&amp;gt;克隆器：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="692cc6aa6522e29de28ed95cf1ce9f0d1fece5d9" translate="yes" xml:space="preserve">
          <source>Checksums to aid in debugging</source>
          <target state="translated">用于帮助调试的校验和</target>
        </trans-unit>
        <trans-unit id="f8eb3248811492e79afeba88e2112b19fd5e3085" translate="yes" xml:space="preserve">
          <source>Cheers.</source>
          <target state="translated">Cheers.</target>
        </trans-unit>
        <trans-unit id="2df53530264316c637ddf985cf690aac0257f4d4" translate="yes" xml:space="preserve">
          <source>Choose this answer if you want the fastest speed .NET is capable of.</source>
          <target state="translated">如果你想要.NET的最快速度,请选择这个答案。</target>
        </trans-unit>
        <trans-unit id="c0fdac0bdca937d311a77c82e199ab179dc62d27" translate="yes" xml:space="preserve">
          <source>Cloning objects incorrectly can lead to very difficult-to-pin-down bugs. In production code, I tend to implement a checksum to double check that the object has been cloned properly, and hasn't been corrupted by another reference to it. This checksum can be switched off in Release mode.</source>
          <target state="translated">不正确地克隆对象可能会导致非常难处理的bug。在生产代码中,我倾向于实现一个校验和,以重复检查对象是否已经被正确克隆,并且没有被另一个引用损坏。这个校验和可以在 Release 模式下关闭。</target>
        </trans-unit>
        <trans-unit id="fd74b2a71394e7ee81bb386b6917d0be84ba18b0" translate="yes" xml:space="preserve">
          <source>Code Generator</source>
          <target state="translated">代码生成器</target>
        </trans-unit>
        <trans-unit id="25357e6d4fe7b7c5a6d148c861ae62ca1d739cbd" translate="yes" xml:space="preserve">
          <source>Collection items for types implementing ICollection</source>
          <target state="translated">用于实现ICollection类型的集合项</target>
        </trans-unit>
        <trans-unit id="1d2a3b6ac919aa25b6d001f61ba859028b6bc586" translate="yes" xml:space="preserve">
          <source>Copying an object by specifying &lt;code&gt;New&lt;/code&gt; followed by the class name often leads to code that is not extensible. Using clone, the application of prototype pattern, is a better way to achieve this. However, using clone as it is provided in C# (and Java) can be quite problematic as well. It is better to provide a protected (non-public) copy constructor and invoke that from the clone method. This gives us the ability to delegate the task of creating an object to an instance of a class itself, thus providing extensibility and also, safely creating the objects using the protected copy constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过指定&lt;/font&gt;&lt;/font&gt; &lt;code&gt;New&lt;/code&gt; (&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;后跟类名）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来复制对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常会导致代码不可扩展。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用克隆（原型模式的应用）是一种更好的方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，使用C＃（和Java）中提供的克隆也很成问题。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最好提供一个受保护的（非公共）副本构造函数，然后从clone方法中调用它。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这使我们能够将创建对象的任务委托给类本身的实例，从而提供可扩展性，并且还可以使用受保护的副本构造函数安全地创建对象。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab2ca7bedff39cc7ca86fac38435d89d6b71fedb" translate="yes" xml:space="preserve">
          <source>Custom classes and structs, including generic classes and structs.</source>
          <target state="translated">定制类和结构,包括通用类和结构。</target>
        </trans-unit>
        <trans-unit id="49116a8d10b7d9e81f10da72ed4849db170e4c2d" translate="yes" xml:space="preserve">
          <source>Deep cloning objects</source>
          <target state="translated">深度克隆对象</target>
        </trans-unit>
        <trans-unit id="8622437626d6131f373e7baa6060fdcc20366396" translate="yes" xml:space="preserve">
          <source>Define an &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; with a read-only &lt;code&gt;Self&lt;/code&gt; property that returns &lt;code&gt;T&lt;/code&gt;, and &lt;code&gt;ICloneable&amp;lt;out T&amp;gt;&lt;/code&gt;, which derives from &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; and includes a method &lt;code&gt;T Clone()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义一个&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有只读&lt;/font&gt; &lt;code&gt;Self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，该&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性返回&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;，以及&lt;/font&gt; &lt;code&gt;ICloneable&amp;lt;out T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;，后者从&lt;/font&gt; &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;派生&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并包括方法&lt;/font&gt; &lt;code&gt;T Clone()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a7fe18eb6df3c19423dafe4d851042aca981175" translate="yes" xml:space="preserve">
          <source>EDIT: project is discontinued</source>
          <target state="translated">EDIT:项目已中止</target>
        </trans-unit>
        <trans-unit id="32fd369a2e358951ab3eab2db75ced8552288be9" translate="yes" xml:space="preserve">
          <source>Each derived type should implement &lt;code&gt;VirtualClone&lt;/code&gt; by calling the base clone method and then doing whatever needs to be done to properly clone those aspects of the derived type which the parent VirtualClone method hasn't yet handled.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个派生类型都应&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过调用基本clone方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;VirtualClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，然后执行需要做的任何事情以正确地克隆派生类型的那些方面（父VirtualClone方法尚未处理）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37781e17dc9d9f36990e7eeb0e4d1da65f512dd7" translate="yes" xml:space="preserve">
          <source>First and foremost, those are all our options:</source>
          <target state="translated">首先,最重要的是,这些都是我们的选择。</target>
        </trans-unit>
        <trans-unit id="9290916a8ada6d592efd89d4b0ce3854336f1797" translate="yes" xml:space="preserve">
          <source>Follow these steps:</source>
          <target state="translated">按照这些步骤进行。</target>
        </trans-unit>
        <trans-unit id="79bd4d5a1c2ddb092a60f0c609c15d6a6c1715c0" translate="yes" xml:space="preserve">
          <source>Following class/struct members are cloned internally:</source>
          <target state="translated">以下是内部克隆的类结构成员。</target>
        </trans-unit>
        <trans-unit id="68c49d64c9298ef668614e4520ac4c5ca0dc781a" translate="yes" xml:space="preserve">
          <source>For a deep copy, there is no way it can know how to automatically do it.</source>
          <target state="translated">对于一个深度的副本,它不可能知道如何自动完成。</target>
        </trans-unit>
        <trans-unit id="934801371dbbff4bea9fcd30da856a969b5d353d" translate="yes" xml:space="preserve">
          <source>For a more detailed explanation on Cloning using ICloneable, check out &lt;a href=&quot;https://web.archive.org/web/20120113123300/http://www.ondotnet.com/pub/a/dotnet/2002/11/25/copying.html&quot;&gt;this article&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关使用ICloneable进行克隆的更详细说明，请参阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://web.archive.org/web/20120113123300/http://www.ondotnet.com/pub/a/dotnet/2002/11/25/copying.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本文&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fc88e1151d53a8ae7ea98191edcf398003baff4" translate="yes" xml:space="preserve">
          <source>For example: The following code will deepClone Address, but only perform a shallow copy of the _currentJob field.</source>
          <target state="translated">举例来说。下面的代码将深度克隆地址,但只对_currentJob字段进行浅层复制。</target>
        </trans-unit>
        <trans-unit id="5cd150b2223802ecc627d4e65f116ecb5b6a90c3" translate="yes" xml:space="preserve">
          <source>For maximum inheritance versatility, classes exposing public cloning functionality should be &lt;code&gt;sealed&lt;/code&gt;, but derive from a base class which is otherwise identical except for the lack of cloning.  Rather than passing variables of the explicit clonable type, take a parameter of type &lt;code&gt;ICloneable&amp;lt;theNonCloneableType&amp;gt;&lt;/code&gt;.  This will allow a routine that expects a cloneable derivative of  &lt;code&gt;Foo&lt;/code&gt; to work with a cloneable derivative of &lt;code&gt;DerivedFoo&lt;/code&gt;, but also allow the creation of non-cloneable derivatives of &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了最大程度地继承通用性，应将公开公共克隆功能的类&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sealed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但应从基类派生，除非缺少克隆，否则该基类是相同的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是传递显式可克隆类型的变量，而是使用类型为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ICloneable&amp;lt;theNonCloneableType&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这将允许期望 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可&lt;/font&gt;&lt;/font&gt; &lt;code&gt;DerivedFoo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;派生类与&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DerivedFoo的可克隆&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;派生类一起工作的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例程&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而且还允许创建&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的非克隆派生类&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bb3bec8cd191d70ffb1e4224ea1af2ade92de38" translate="yes" xml:space="preserve">
          <source>For ultimate speed, you can use &lt;strong&gt;Nested MemberwiseClone to do a deep copy&lt;/strong&gt;. Its almost the same speed as copying a value struct, and is much faster than (a) reflection or (b) serialization (as described in other answers on this page).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了获得最高速度，您可以使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nested MemberwiseClone进行深度复制&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它的速度几乎与复制值结构相同，并且比（a）反射或（b）序列化要快得多（如本页其他答案所述）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49e651e88e06ed605974a0c1ab21a11458146ce1" translate="yes" xml:space="preserve">
          <source>Here a solution fast and easy that worked for me without relaying on Serialization/Deserialization.</source>
          <target state="translated">这里有一个快速而简单的解决方案,对我来说,不需要中继SerializationDeserialization,就能快速而简单的解决问题。</target>
        </trans-unit>
        <trans-unit id="5ab133b4375ba1d6541aa1d17873018e5be4bcf1" translate="yes" xml:space="preserve">
          <source>Here is a deep copy implementation:</source>
          <target state="translated">下面是一个深度复制的实现。</target>
        </trans-unit>
        <trans-unit id="786eda73accd1aaa905eaaa551adf6a8af41b224" translate="yes" xml:space="preserve">
          <source>Here is the output of the code showing the relative performance difference for 100,000 clones:</source>
          <target state="translated">下面是输出的代码,显示的是10万个克隆的相对性能差异。</target>
        </trans-unit>
        <trans-unit id="a4113577b91cff35283db6fde643b2a2ec504918" translate="yes" xml:space="preserve">
          <source>Hopefully this implementation can make things clear:</source>
          <target state="translated">希望这种实施方式能把事情说清楚。</target>
        </trans-unit>
        <trans-unit id="284f895aea619d7cd96d1331cb6a4e9e8d08c72d" translate="yes" xml:space="preserve">
          <source>How can I clone or deep copy an object so that the cloned object can be modified without any changes being reflected in the original object?</source>
          <target state="translated">如何才能克隆或深度复制一个对象,使克隆后的对象可以被修改而不在原对象中反映出任何变化?</target>
        </trans-unit>
        <trans-unit id="33eb716062ccf9ec7203b8f17cdd0d3d04915bd7" translate="yes" xml:space="preserve">
          <source>I came up with this to overcome a &lt;a href=&quot;http://en.wikipedia.org/wiki/.NET_Framework&quot;&gt;.NET&lt;/a&gt; shortcoming having to manually deep copy List&amp;lt;T&amp;gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我想出了这个方法来克服&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/.NET_Framework&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NET的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;缺点，即必须手动深复制List &amp;lt;T&amp;gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bac9acceb1245250731fed957146e017e67a6a8" translate="yes" xml:space="preserve">
          <source>I don't often need this functionality, so when it's been necessary, I've resorted to creating a new object and then copying each property individually, but it always leaves me with the feeling that there is a better or more elegant way of handling the situation.</source>
          <target state="translated">我不经常需要这个功能,所以当有必要的时候,我就会求助于创建一个新对象,然后单独复制每个属性,但这总让我觉得有更好或更优雅的处理方式。</target>
        </trans-unit>
        <trans-unit id="bb7752146430d112c60f0a59aed39f05a3e65078" translate="yes" xml:space="preserve">
          <source>I find this method quite useful: often, you only want to clone parts of the object, not the entire thing.</source>
          <target state="translated">我觉得这个方法挺管用的:很多时候,你只想克隆对象的一部分,而不是整个东西。</target>
        </trans-unit>
        <trans-unit id="d10c988eb5d27a0013e7cb535b1aa2ce33e37976" translate="yes" xml:space="preserve">
          <source>I have created a version of the accepted answer that works with both '[Serializable]' and '[DataContract]'. It has been a while since I wrote it, but if I remember correctly [DataContract] needed a different serializer.</source>
          <target state="translated">我创建了一个既能与'[[Serializable]'和'[DataContract]'配合使用的版本。我已经有一段时间没写了,但如果我没记错的话,[DataContract]需要一个不同的序列化器。</target>
        </trans-unit>
        <trans-unit id="ec3c1e7cf1ca39d008ad9bbdf191ad00d04de1fc" translate="yes" xml:space="preserve">
          <source>I hope it helps someone else out there who ran into the same problems I did.</source>
          <target state="translated">我希望它能帮助其他遇到同样问题的人。</target>
        </trans-unit>
        <trans-unit id="6bf5e52938c06fb33b6e6fbe9c90474a0566db83" translate="yes" xml:space="preserve">
          <source>I like Copyconstructors like that:</source>
          <target state="translated">我喜欢这样的抄袭者。</target>
        </trans-unit>
        <trans-unit id="95531a41f608a2cbb78c6c5f7785d8752ce0dadc" translate="yes" xml:space="preserve">
          <source>I prefer a copy constructor to a clone. The intent is clearer.</source>
          <target state="translated">与其说是克隆,不如说是复制构造函数。意图比较明确。</target>
        </trans-unit>
        <trans-unit id="c0f74be924fe581418864a3d2a39393a4dc834ad" translate="yes" xml:space="preserve">
          <source>I think you can try this.</source>
          <target state="translated">我想你可以试试这个。</target>
        </trans-unit>
        <trans-unit id="eb8254a66f6b04038b9c69b195818c7009ed4042" translate="yes" xml:space="preserve">
          <source>I tried to come up with oneliner that does this, but it's not possible, due to yield not working inside anonymous method blocks.</source>
          <target state="translated">我试着想出了一个oneliner来做这个,但是由于在匿名方法区块内的收益率不行,所以无法实现。</target>
        </trans-unit>
        <trans-unit id="d5c59659497994547255e487eca88abb8961fd73" translate="yes" xml:space="preserve">
          <source>I use this:</source>
          <target state="translated">我用的是这个。</target>
        </trans-unit>
        <trans-unit id="aaca6f6057852c9e3ec8b284284cfa0264ea0432" translate="yes" xml:space="preserve">
          <source>I want to do something like:</source>
          <target state="translated">我想做这样的事情:</target>
        </trans-unit>
        <trans-unit id="3b8a4cb1921a75f054bdf5a58fc834116fb2a13a" translate="yes" xml:space="preserve">
          <source>I wanted a cloner for very simple objects of mostly primitives and lists.  If your object is out of the box JSON serializable then this method will do the trick.  This requires no modification or implementation of interfaces on the cloned class, just a JSON serializer like JSON.NET.</source>
          <target state="translated">我想要一个非常简单的基元和列表对象的克隆器。如果你的对象是开箱即用的JSON序列化器,那么这个方法就能搞定。这不需要修改或实现克隆类上的接口,只需要一个JSON序列化器,如JSON.NET。</target>
        </trans-unit>
        <trans-unit id="bc1b3ec016bf5be9728f40160455a45618dcdb74" translate="yes" xml:space="preserve">
          <source>I've just created &lt;strong&gt;&lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions&quot;&gt;&lt;code&gt;CloneExtensions&lt;/code&gt; library&lt;/a&gt;&lt;/strong&gt; project. It performs fast, deep clone using simple assignment operations generated by Expression Tree runtime code compilation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我刚刚创建了&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions&quot;&gt; &lt;code&gt;CloneExtensions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;库&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;项目。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它使用&amp;ldquo;表达式树&amp;rdquo;运行时代码编译生成的简单赋值操作执行快速，深度的克隆。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63bdd57a2d0337e4d87060f54af28df189340cab" translate="yes" xml:space="preserve">
          <source>I've seen it implemented through reflection as well. Basically there was a method that would iterate through the members of an object and appropriately copy them to the new object. When it reached reference types or collections I think it did a recursive call on itself. Reflection is expensive, but it worked pretty well.</source>
          <target state="translated">我也看到过通过反射来实现。基本上,有一个方法可以迭代一个对象的成员,并适当地将其复制到新对象中。当它到达引用类型或集合时,我想它会对自己做一个递归调用。反射很贵,但效果还不错。</target>
        </trans-unit>
        <trans-unit id="79bd2a350fbcbb11f645b5eca7a181fed727f30b" translate="yes" xml:space="preserve">
          <source>If it's deep copy of all members, you need to insure (not relating on solution you choose) that all children are clonable as well.</source>
          <target state="translated">如果它是所有成员的深度复制,你需要保证(与你选择的解决方案无关),所有的孩子都是可克隆的。</target>
        </trans-unit>
        <trans-unit id="e24eceaa8e8765b2d01a536c642ac6f8ffe37a02" translate="yes" xml:space="preserve">
          <source>If you have a &quot;&lt;strong&gt;class&lt;/strong&gt;&quot;, it's a &lt;strong&gt;reference type&lt;/strong&gt;, so if you copy it, all you are doing is copying the pointer to it. To create a true clone, you have to be more creative, and use &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;differences between value types and references types&lt;/a&gt; which creates another copy of the original object in memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您有一个&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;，则它是一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用类型&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因此，如果您复制它，那么您所做的就是复制指向它的指针。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要创建真正的克隆，您必须更具创造力，并使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值类型和引用类型之间的差异，&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这会在内存中创建原始对象的另一个副本。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98d36d67a28d8f5c15399c14baef62cd21c448b8" translate="yes" xml:space="preserve">
          <source>If you have a &quot;&lt;strong&gt;struct&lt;/strong&gt;&quot;, it's a &lt;strong&gt;value type&lt;/strong&gt; so you can just copy it, and the contents will be cloned (but it will only make a shallow clone unless you use the techniques in this post).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您有一个&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;struct&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;，它是一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值类型，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此您可以复制它，并且内容将被克隆（但是除非您使用本文中的技巧，否则它只会进行浅表克隆）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdd4dd3e80e7c7a49bd131224ae9255763d93baa" translate="yes" xml:space="preserve">
          <source>If you have more things to copy add them</source>
          <target state="translated">如果你有更多的东西要复制,请添加它们</target>
        </trans-unit>
        <trans-unit id="290fd7a56c2e2008bf0fd281f379860b0e5510e5" translate="yes" xml:space="preserve">
          <source>If you want true cloning to unknown types you can take a look at
&lt;a href=&quot;http://fastclone.codeplex.com/&quot;&gt;fastclone&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您想将克隆真正克隆为未知类型，可以看看 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://fastclone.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fastclone&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cdafe5a039bec223dfc481c4ea0a13f7b5f0f79" translate="yes" xml:space="preserve">
          <source>If you're already using a 3rd party application like &lt;a href=&quot;http://valueinjecter.codeplex.com/&quot;&gt;ValueInjecter&lt;/a&gt; or &lt;a href=&quot;http://automapper.codeplex.com/&quot;&gt;Automapper&lt;/a&gt;, you can do something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您已经使用像一个第三方应用程序&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://valueinjecter.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ValueInjecter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://automapper.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Automapper&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，你可以这样做：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b834a0ee5a627d304f848834c565ac9ea3f4f76" translate="yes" xml:space="preserve">
          <source>If your Object Tree is Serializeable you could also use something like this</source>
          <target state="translated">如果你的对象树是可序列化的,你也可以使用类似这样的东西</target>
        </trans-unit>
        <trans-unit id="a38d103b365aeb2f9c22815169ee1ce634af0a06" translate="yes" xml:space="preserve">
          <source>Ignore this answer if you want a really, really easy method of cloning.</source>
          <target state="translated">如果你想要一个真正的、真正简单的克隆方法,请忽略这个答案。</target>
        </trans-unit>
        <trans-unit id="bb0c9b67acb15de24ee8a8a6c073b40ceffd7394" translate="yes" xml:space="preserve">
          <source>In case you prefer to use the new &lt;a href=&quot;http://en.wikipedia.org/wiki/Extension_method&quot;&gt;extension methods&lt;/a&gt; of C# 3.0, change the method to have the following signature:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您更喜欢使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C＃3.0 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的新&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Extension_method&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展方法&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，请将方法更改为具有以下签名：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db3aaef5372757b66df21234060ba0c120487fd4" translate="yes" xml:space="preserve">
          <source>In general, you implement the ICloneable interface and implement Clone yourself.
C# objects have a built-in MemberwiseClone method that performs a shallow copy that can help you out for all the primitives.</source>
          <target state="translated">一般情况下,你实现ICloneable接口,自己实现Clone。C#对象有一个内置的MemberwiseClone方法,它可以对所有的基元进行浅层复制,可以帮助你解决所有基元的问题。</target>
        </trans-unit>
        <trans-unit id="e2233544b5ac2cae76069b418f5cf0e76acfb419" translate="yes" xml:space="preserve">
          <source>In other words, &lt;a href=&quot;http://c2.com/cgi/wiki?PrematureOptimization&quot;&gt;go with another answer unless you have a performance bottleneck that needs fixing, and you can prove it with a profiler&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;换句话说，&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?PrematureOptimization&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除非您有需要解决的性能瓶颈，并且可以使用探查器来证明，否则请选择另一个答案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdb7be9a6ed4c1891567f4662c3e6a7fcf3be9ca" translate="yes" xml:space="preserve">
          <source>Instead of writing your own &lt;code&gt;Clone&lt;/code&gt; or &lt;code&gt;Copy&lt;/code&gt; methods with a tone of assignments between fields and properties make the program do it for yourself, using Expression Tree. &lt;code&gt;GetClone&amp;lt;T&amp;gt;()&lt;/code&gt; method marked as extension method allows you to simply call it on your instance:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不用编写自己的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在字段和属性之间分配分配音调，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;让该程序使用Expression Tree自己完成。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标记为扩展方法的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;GetClone&amp;lt;T&amp;gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法使您可以在实例上简单地调用它：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="432ff0c0bae61943e8d638ae50cea62a618dc2cf" translate="yes" xml:space="preserve">
          <source>Isn't it quite like how you'd write your own &lt;code&gt;Clone&lt;/code&gt; method for &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这与您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt; &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;编写自己的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法的方式&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;很不一样&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdd7f499025f760963324de6629e12ddc3b6c2f5" translate="yes" xml:space="preserve">
          <source>It's also faster than serialization-based solution when you clone more then couple instances of the same type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您克隆更多然后耦合相同类型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实例时，它也比基于序列化的解决方案更快&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee9522dc6965391afa5dd9a0c19ece73d75bea0a" translate="yes" xml:space="preserve">
          <source>Keep things simple and use &lt;a href=&quot;http://automapper.org/&quot;&gt;AutoMapper&lt;/a&gt; as others mentioned, it's a simple little library to map one object to another... To copy an object to another with the same type, all you need is three lines of code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保持简单，并使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://automapper.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AutoMapper，&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;就像其他人提到的那样，它是一个简单的小库，用于将一个对象映射到另一个对象。要将对象复制到具有相同类型的另一个对象，只需三行代码：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9387c3626e4ad38a467bda33b453d0bfdbc1381" translate="yes" xml:space="preserve">
          <source>Manually with &lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.icloneable&quot;&gt;ICloneable&lt;/a&gt;&lt;/strong&gt;, which is &lt;em&gt;Shallow&lt;/em&gt; and not &lt;em&gt;Type-Safe&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;手动使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.icloneable&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浅的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并且不是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型安全的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cda1fab28beb5dcc6f99ca6ede745083a62923c" translate="yes" xml:space="preserve">
          <source>Note that &lt;strong&gt;if&lt;/strong&gt; you use &lt;strong&gt;Nested MemberwiseClone for a deep copy&lt;/strong&gt;, you have to manually implement a ShallowCopy for each nested level in the class, and a DeepCopy which calls all said ShallowCopy methods to create a complete clone. This is simple: only a few lines in total, see the demo code below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nested MemberwiseClone进行深层复制&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则必须为类中的每个嵌套级别手动实现ShallowCopy，并使用DeepCopy调用所有上述ShallowCopy方法来创建完整克隆。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这很简单：总共只有几行，请参见下面的演示代码。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0af8ae4e31e9ff3ff82bf3e10fbc4533e36588ee" translate="yes" xml:space="preserve">
          <source>Note that when it comes to cloning an object, there is is a big difference between a &quot;&lt;strong&gt;struct&lt;/strong&gt;&quot; and a &quot;&lt;strong&gt;class&lt;/strong&gt;&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，在克隆对象时，&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;struct&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;和&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;class&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间有很大的区别&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aae01712872b960fb803d67f343b15e2447afa95" translate="yes" xml:space="preserve">
          <source>Now consider having a class derive from Person.</source>
          <target state="translated">现在可以考虑从Person派生出一个类。</target>
        </trans-unit>
        <trans-unit id="ff34d754f6d804ac5bef77b5ec865a3523ed0454" translate="yes" xml:space="preserve">
          <source>Now the method call simply becomes &lt;code&gt;objectBeingCloned.Clone();&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，方法调用简单地变为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;objectBeingCloned.Clone();&lt;/code&gt; 。&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1804c90829b7f01abfd49841af3caae85ad51299" translate="yes" xml:space="preserve">
          <source>Nullable</source>
          <target state="translated">Nullable</target>
        </trans-unit>
        <trans-unit id="aea48637fd6cb0fbb1092b31ccd75f1c1c3816b2" translate="yes" xml:space="preserve">
          <source>Observe that, if we keep a count of the number of objects, the clone as implemented here will keep a correct count of the number of objects.</source>
          <target state="translated">观察到,如果我们保持对象的数量,这里实现的克隆体将保持正确的对象数量。</target>
        </trans-unit>
        <trans-unit id="c3eeb00b000365bc8d53a0a96cf25825d356fa70" translate="yes" xml:space="preserve">
          <source>Ok, there are some obvious example with reflection in this post, BUT reflection is usually slow, until you start to cache it properly.</source>
          <target state="translated">好吧,这个帖子里有一些明显的反思的例子,BUT反思通常是很慢的,直到你开始正确地缓存它。</target>
        </trans-unit>
        <trans-unit id="e23d64e4397696c5fa59fa45306bb0e1f0420da7" translate="yes" xml:space="preserve">
          <source>One excellent use case for this code is feeding clones of a nested class or struct into a queue, to implement the producer / consumer pattern.</source>
          <target state="translated">这段代码的一个很好的用例是将一个嵌套类或结构的克隆送入队列,以实现生产者消费模式。</target>
        </trans-unit>
        <trans-unit id="761342355b401790dfbe23294d1df5dacd46fb06" translate="yes" xml:space="preserve">
          <source>Pretty darn close to the theoretical maximum speed .NET is capable of.</source>
          <target state="translated">相当接近于.NET的理论最高速度。</target>
        </trans-unit>
        <trans-unit id="065d0328e55ae55e8b02ce5bb757b3b0fe0dee2e" translate="yes" xml:space="preserve">
          <source>Primitive (int, uint, byte, double, char, etc.), known immutable
types (DateTime, TimeSpan, String) and delegates (including
Action, Func, etc)</source>
          <target state="translated">Primitive(int、uint、byte、double、char等)、已知的不可变类型(DateTime、TimeSpan、String)和委托代理(包括Action、Func等)。</target>
        </trans-unit>
        <trans-unit id="7bf8447210928dc303c80a8768175497c2b0a3c9" translate="yes" xml:space="preserve">
          <source>Q. Why would I choose this answer?</source>
          <target state="translated">Q.我为什么会选择这个答案?</target>
        </trans-unit>
        <trans-unit id="dcc2f3fe8faa1e5329b963097f34643d07f07cfb" translate="yes" xml:space="preserve">
          <source>Read more about generated expressions on &lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions/blob/master/EXPRESSION_TREES.md&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions/blob/master/EXPRESSION_TREES.md&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文档中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;阅读有关生成的表达式的更多信息&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf20c3222016afbe0f5b7622903a26f7ea3da3d7" translate="yes" xml:space="preserve">
          <source>Really useful for decoupling many threads from many other threads</source>
          <target state="translated">真的很有用,可以把许多线程和其他线程解耦起来。</target>
        </trans-unit>
        <trans-unit id="676a813ffcf5e05102377d47f21daa6ca2370a0a" translate="yes" xml:space="preserve">
          <source>Requires &lt;em&gt;System, System.IO, System.Runtime.Serialization, System.Runtime.Serialization.Formatters.Binary, System.Xml&lt;/em&gt;;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;需要&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System，System.IO，System.Runtime.Serialization，System.Runtime.Serialization.Formatters.Binary，System.Xml&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="501424267b7da4761a914bfa7559daf692526455" translate="yes" xml:space="preserve">
          <source>Sample expression debug listing for &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示例表达式调试列表&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87378a24289782458b83ba8c77b242d94a03f977" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;differences between value types and references types&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;查看&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值类型和引用类型之间的差异&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2d0c4f52df46db4741e6f38ce4a127fc1302d208" translate="yes" xml:space="preserve">
          <source>See the this &lt;a href=&quot;http://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;Developer's Corner article&lt;/a&gt; for a few more options (credit to Ian).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有关&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更多选择（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ian），&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅此&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;开发人员专栏文章&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc123cba0fca14bdba4254f8955ce9877d711e07" translate="yes" xml:space="preserve">
          <source>Simple extension method to copy all the public properties. Works for any objects and &lt;strong&gt;does not&lt;/strong&gt; require class to be &lt;code&gt;[Serializable]&lt;/code&gt;. Can be extended for other access level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;复制所有公共属性的简单扩展方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;适用于任何对象，并&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要求类是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[Serializable]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以扩展为其他访问级别。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9f42ce5d34f0487a854ebac451ba155ef8f4a8e" translate="yes" xml:space="preserve">
          <source>So I'll just copy relevant parts of those 2 references here. That way we can have:</source>
          <target state="translated">所以我就把这2个参考资料的相关部分复制到这里。这样我们就可以有。</target>
        </trans-unit>
        <trans-unit id="782c0023b4d03aa4bb350af8e42a042f00ca40c5" translate="yes" xml:space="preserve">
          <source>Sometimes you need to be aware of some restriction during this process, for example if you copying the ORM objects most of frameworks allow only one object attached to the session and you MUST NOT make clones of this object, or if it's possible you need to care about session attaching of these objects.</source>
          <target state="translated">在这个过程中,有时你需要注意一些限制,例如,如果你复制ORM对象,大多数框架只允许将一个对象连接到会话中,你不能复制这个对象,或者如果可能的话,你需要关注这些对象的会话连接。</target>
        </trans-unit>
        <trans-unit id="0ca3f588a1eccb15e1b1ea04edb10a168a3912e1" translate="yes" xml:space="preserve">
          <source>Standard ignore attributes are supported using &lt;code&gt;[IgnoreDataMember]&lt;/code&gt;, &lt;code&gt;[NonSerialized]&lt;/code&gt;. Supports complex collections, properties without setters, readonly fields etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[IgnoreDataMember]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[NonSerialized]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;支持标准的忽略属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;支持复杂的集合，不带setter的属性，只读字段等。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0eac9f55b2053c29c60df9fa0310dc9335a8d1a6" translate="yes" xml:space="preserve">
          <source>T[] arrays</source>
          <target state="translated">T[]数组</target>
        </trans-unit>
        <trans-unit id="fc73feec9263194ea7566c6ca298cf0b1dc6e4bc" translate="yes" xml:space="preserve">
          <source>That means: if you refer multiple times to the same object in your hierachy, the clone will also have a single instance beeing referenced.</source>
          <target state="translated">这意味着:如果你在你的层次结构中多次引用同一个对象,克隆也会有一个单一实例被引用。</target>
        </trans-unit>
        <trans-unit id="5185008143b9a4c57443feec185defd54db980c5" translate="yes" xml:space="preserve">
          <source>That's How I used it</source>
          <target state="translated">我就是这么用的</target>
        </trans-unit>
        <trans-unit id="649495c719068d9e76435ae9a61315556043b104" translate="yes" xml:space="preserve">
          <source>That's expression based cloning working about 10 times faster than binary serialization and maintaining complete object graph integrity.</source>
          <target state="translated">这就是基于表达式的克隆,比二进制序列化快10倍,并且保持了完整的对象图的完整性。</target>
        </trans-unit>
        <trans-unit id="5e0381de4bd305f85d92a1abdfa2d27e82f74f22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;article Fast Deep Copy by Expression Trees&lt;/a&gt;   has  also performance comparison of cloning by Serialization, Reflection and Expression Trees.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由表达式树文章快速深复制&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 有也被序列化，反射和表达式树克隆的性能对比。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d11a96cf2596c6c3dffe8adc41739b4941905d8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;long&lt;/em&gt; answer is &quot;it depends&quot;. As mentioned by others, ICloneable is not supported by generics, requires special considerations for circular class references, and is actually viewed by some as a &lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;&quot;mistake&quot;&lt;/a&gt; in the .NET Framework. The serialization method depends on your objects being serializable, which they may not be and you may have no control over. There is still much debate in the community over which is the &quot;best&quot; practice. In reality, none of the solutions are the one-size fits all best practice for all situations like ICloneable was originally interpreted to be.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;长&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的答案是&amp;ldquo;看情况&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正如其他人提到的那样，泛型不支持ICloneable，ICloneable需要对循环类引用进行特殊考虑，并且在某些情况下，ICloneable实际上&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在.NET Framework中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;被视为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;错误&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;序列化方法取决于您的对象是否可序列化，它们可能不是，并且您可能无法控制。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关于&amp;ldquo;最佳&amp;rdquo;实践，社区中仍有很多争论。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际上，没有一种解决方案能像所有最初解释为ICloneable的情况一样适合所有情况的最佳实践。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b0ed5f623380dd6ad9d925b235d263800849c07" translate="yes" xml:space="preserve">
          <source>The best is to implement an &lt;strong&gt;extension method&lt;/strong&gt; like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最好是实现一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一样&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="696953dccce4adf3ae167301944e4e76065b3a09" translate="yes" xml:space="preserve">
          <source>The best thing to do for cloning objects in C sharp!</source>
          <target state="translated">克隆对象在C语言中最好的克隆对象!</target>
        </trans-unit>
        <trans-unit id="bf487f5262ad04b996e29511e0a35c4ab3748b82" translate="yes" xml:space="preserve">
          <source>The extension method can be used as follow:</source>
          <target state="translated">扩展方法可按以下方式进行。</target>
        </trans-unit>
        <trans-unit id="a99ffc2496c07c5a08ed57fd1f7f7e0552e18d8a" translate="yes" xml:space="preserve">
          <source>The following method of performing a deep clone is:</source>
          <target state="translated">以下是进行深度克隆的方法。</target>
        </trans-unit>
        <trans-unit id="dbbcd6ba835275fa6d96111588cbe40a53ba07d0" translate="yes" xml:space="preserve">
          <source>The idea is that it serializes your object and then deserializes it into a fresh object. The benefit is that you don't have to concern yourself about cloning everything when an object gets too complex.</source>
          <target state="translated">其想法是,它将你的对象序列化,然后将其反序列化为一个新的对象。这样做的好处是,当一个对象变得过于复杂时,你不必担心克隆所有的东西。</target>
        </trans-unit>
        <trans-unit id="aca838b2e03bc7b1ac6f3116fd7cebcd23924630" translate="yes" xml:space="preserve">
          <source>The output produced will be:</source>
          <target state="translated">所产生的产出将是:</target>
        </trans-unit>
        <trans-unit id="11d9a4f4f642354e890324bcd8be9e56aba6d769" translate="yes" xml:space="preserve">
          <source>The reason not to use &lt;a href=&quot;http://referencesource.microsoft.com/mscorlib/system/icloneable.cs.html#fb795e239ce05299&quot;&gt;ICloneable&lt;/a&gt; is &lt;strong&gt;not&lt;/strong&gt; because it doesn't have a generic interface.  &lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;The reason not to use it is because it's vague&lt;/a&gt;.  It doesn't make clear whether you're getting a shallow or a deep copy; that's up to the implementer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不使用的原因&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://referencesource.microsoft.com/mscorlib/system/icloneable.cs.html#fb795e239ce05299&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因为它没有一个通用的接口。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不使用它的原因是因为它含糊不清&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不清楚是要浅拷贝还是要深拷贝？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这取决于实施者。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3700a6686267f6677af0b7d02af2cc2b4dad31a9" translate="yes" xml:space="preserve">
          <source>The short answer is you inherit from the ICloneable interface and then implement the .clone function. Clone should do a memberwise copy and perform a deep copy on any member that requires it, then return the resulting object. This is a recursive operation ( it requires that all members of the class you want to clone are either value types or implement ICloneable and that their members are either value types or implement ICloneable, and so on).</source>
          <target state="translated">简单的答案是你继承了ICloneable接口,然后实现.clone函数。Clone应该做一个成员式的复制,并对任何需要的成员进行深度复制,然后返回生成的对象。这是一个递归操作(它要求你要克隆的类的所有成员都是值类型或实现了ICloneable,并且它们的成员也是值类型或实现了ICloneable,以此类推)。</target>
        </trans-unit>
        <trans-unit id="3d66f69c075cdad3f938b801287b8d10ee299246" translate="yes" xml:space="preserve">
          <source>The solution is faster then reflection, because members information has to be gathered only once, before &lt;code&gt;GetClone&amp;lt;T&amp;gt;&lt;/code&gt; is used for the first time for given type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解决方案要快于反射，因为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在给定类型&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;首次使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;GetClone&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之前，成员信息仅需要收集一次&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36ea8443350173fd15fbb1534b9edc7edba62173" translate="yes" xml:space="preserve">
          <source>The target object is now a copy of the source object.
Not simple enough? Create an extension method to use everywhere in your solution:</source>
          <target state="translated">目标对象现在是源对象的一个副本。还不够简单?创建一个扩展方法,在你的解决方案中到处都可以使用。</target>
        </trans-unit>
        <trans-unit id="1ce725210efa66422b32b09f551d9867f403bd27" translate="yes" xml:space="preserve">
          <source>Then define a &lt;code&gt;CloneBase&lt;/code&gt; type which implements a &lt;code&gt;protected virtual generic VirtualClone&lt;/code&gt; casting &lt;code&gt;MemberwiseClone&lt;/code&gt; to the passed-in type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后定义一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CloneBase&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型，该类型实现&lt;/font&gt;&lt;/font&gt; &lt;code&gt;protected virtual generic VirtualClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MemberwiseClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;强制转换&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为传入的类型。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0f40b28a3acd118ab2aa4e50e238e03ef1da381" translate="yes" xml:space="preserve">
          <source>Then, call the demo from main:</source>
          <target state="translated">然后,从主界面调用demo。</target>
        </trans-unit>
        <trans-unit id="8345538a3be0831e2f959f4de42f16a5788caf81" translate="yes" xml:space="preserve">
          <source>There is no need for interfaces, attributes or any other modification to the objects being cloned.</source>
          <target state="translated">不需要对被克隆对象进行接口、属性或其他任何修改。</target>
        </trans-unit>
        <trans-unit id="3fbbfae5551efe8809dc3650a37dccd914f78c6e" translate="yes" xml:space="preserve">
          <source>This is my slightly modified version of his conclusion:</source>
          <target state="translated">这是我对他的结论略作修改的版本。</target>
        </trans-unit>
        <trans-unit id="e2527389cd7e00418a305634583fb96ead01a973" translate="yes" xml:space="preserve">
          <source>This method solved the problem for me:</source>
          <target state="translated">这个方法为我解决了这个问题。</target>
        </trans-unit>
        <trans-unit id="918273259e70d6d5921c33a1d7261a5e02d7b842" translate="yes" xml:space="preserve">
          <source>This works extremely well in practice, and allows us to decouple many threads (the producers) from one or more threads (the consumers).</source>
          <target state="translated">这在实践中效果非常好,可以让我们将许多线程(生产者)与一个或多个线程(消费者)解耦。</target>
        </trans-unit>
        <trans-unit id="24648158c3671d5c6bb81a877c8017069ff08988" translate="yes" xml:space="preserve">
          <source>To understand how to do a deep copy using MemberwiseCopy, here is the demo project that was used to generate the times above:</source>
          <target state="translated">要了解如何使用MemberwiseCopy进行深度复制,下面是上面的Demo项目,是用来生成的次数。</target>
        </trans-unit>
        <trans-unit id="fb91e24fa52d8d2b32937bf04d843f730319a902" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="translated">Update</target>
        </trans-unit>
        <trans-unit id="461ad0994b7f1476e4374b7d94e949fb31f497e3" translate="yes" xml:space="preserve">
          <source>Use it like this: &lt;code&gt;MyObj a = DeepCopy(b);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;像这样使用它：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyObj a = DeepCopy(b);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66dba841d560becc9816085a306d100cc85fee1a" translate="yes" xml:space="preserve">
          <source>Using Nested MemberwiseClone on a class almost as fast as copying a struct, and copying a struct is pretty darn close to the theoretical maximum speed .NET is capable of.</source>
          <target state="translated">在类上使用Nested MemberwiseClone几乎和复制一个结构体一样快,而且复制一个结构体的速度非常接近.NET理论上的最大速度。</target>
        </trans-unit>
        <trans-unit id="cd9b9255ce6351bcdef9cf350ab42b9ddeb1b4b9" translate="yes" xml:space="preserve">
          <source>Using this method you don't have to implement ISerializable or ICloneable on your objects.  This is common with the MVC/MVVM pattern, so simple tools like this have been created.</source>
          <target state="translated">使用这种方法,你不需要在对象上实现ISerializable或ICloneable。这一点在MVCMVVM模式中很常见,所以像这样的简单工具也就应运而生了。</target>
        </trans-unit>
        <trans-unit id="bf4a30ae07c99708a387e9cb7d364ddf392a934a" translate="yes" xml:space="preserve">
          <source>Value types vs. References Types</source>
          <target state="translated">价值类型与参考资料类型</target>
        </trans-unit>
        <trans-unit id="39aea8149aa5b8b103a934efea6b86b20143efef" translate="yes" xml:space="preserve">
          <source>Values of public properties with both get and set accessors</source>
          <target state="translated">具有get和set accessors的公共属性的值</target>
        </trans-unit>
        <trans-unit id="302396d82deab7fc7cad3e3483cf941fe922ad9c" translate="yes" xml:space="preserve">
          <source>Values of public, not readonly fields</source>
          <target state="translated">公共领域的价值,而不是只读领域</target>
        </trans-unit>
        <trans-unit id="35552e90441d2a43d9a95ed338c59edd061cc0d0" translate="yes" xml:space="preserve">
          <source>We can have one  (or more) threads modifying a class that they own, then pushing a complete copy of this class into a &lt;code&gt;ConcurrentQueue&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我们可以让一个（或多个）线程修改其拥有的类，然后将此类的完整副本推送到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ConcurrentQueue&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74a2934d5470ccafae6a9a85155a718db7cb3deb" translate="yes" xml:space="preserve">
          <source>We can have the following three implementations:</source>
          <target state="translated">我们可以有以下三种实现方式。</target>
        </trans-unit>
        <trans-unit id="5faaa66e8ef875c00f94582775225a9753cd30ca" translate="yes" xml:space="preserve">
          <source>We have seen a lot of ideas from serialization over manual implementation to reflection and I want to propose a totally different approach using the &lt;a href=&quot;https://github.com/Toxantron/CGbR#cloneable&quot;&gt;CGbR Code Generator&lt;/a&gt;. The generate clone method is memory and CPU efficient and therefor 300x faster as the standard DataContractSerializer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从序列化到手动实现到反思，我们已经看到了很多想法，我想使用&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Toxantron/CGbR#cloneable&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CGbR代码生成器&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提出一种完全不同的方法&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成克隆方法具有内存和CPU效率，因此比标准DataContractSerializer快300倍。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f14a8b1ccb62df7c67cbfa6a6ec698fcbb6cf25" translate="yes" xml:space="preserve">
          <source>We then have one (or more) threads pulling copies of these classes out and dealing with them.</source>
          <target state="translated">然后我们有一个(或多个)线程把这些班级的副本拉出来处理。</target>
        </trans-unit>
        <trans-unit id="2179653cf382f636247d9d798b14e45a3f0b83ca" translate="yes" xml:space="preserve">
          <source>Well I was having problems using ICloneable in Silverlight, but I liked the idea of seralization, I can seralize XML, so I did this:</source>
          <target state="translated">嗯,我在Silverlight中使用ICloneable有问题,但我喜欢seralization的想法,我可以seralize XML,所以我这样做了。</target>
        </trans-unit>
        <trans-unit id="6f89392b3e36bbc23bb15c48aee701c6627bc6ba" translate="yes" xml:space="preserve">
          <source>What I usually do is simply make a &lt;code&gt;Copy&lt;/code&gt; method that does exactly what I want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我通常要做的只是简单地&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;执行完全符合我想要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d942cdfe72c37fd467fcda26d1a8debb74076bf2" translate="yes" xml:space="preserve">
          <source>Whilst the standard practice is to implement the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.icloneable.aspx&quot;&gt;&lt;code&gt;ICloneable&lt;/code&gt;&lt;/a&gt; interface (described &lt;a href=&quot;https://stackoverflow.com/questions/78536/cloning-objects-in-c/78568#78568&quot;&gt;here&lt;/a&gt;, so I won't regurgitate), here's a nice deep clone object copier I found on &lt;a href=&quot;http://www.codeproject.com/Articles/23832/Implementing-Deep-Cloning-via-Serializing-objects&quot;&gt;The Code Project&lt;/a&gt; a while ago and incorporated it in our stuff.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;虽然标准做法是实现&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.icloneable.aspx&quot;&gt; &lt;code&gt;ICloneable&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接口（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/78536/cloning-objects-in-c/78568#78568&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在此进行了&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;描述&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，所以我不会反驳），但我还是在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一段时间前&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codeproject.com/Articles/23832/Implementing-Deep-Cloning-via-Serializing-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;The Code Project&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上发现了一个不错的深克隆对象复印机&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，并将其合并到我们的资料中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0089e7b0bbe7b88be15358c0f719fcabdcb908bd" translate="yes" xml:space="preserve">
          <source>Why I choose &lt;em&gt;ICloneable&lt;/em&gt; (i.e. manually)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为什么我选择&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneable&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（即手动）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c3adc3f6b41e8dec9c11551d20a3ba56b111a2ba" translate="yes" xml:space="preserve">
          <source>Yes, &lt;code&gt;MemberwiseClone&lt;/code&gt; makes a shallow copy, but the opposite of &lt;code&gt;MemberwiseClone&lt;/code&gt; isn't &lt;code&gt;Clone&lt;/code&gt;; it would be, perhaps, &lt;code&gt;DeepClone&lt;/code&gt;, which doesn't exist.  When you use an object through its ICloneable interface, you can't know which kind of cloning the underlying object performs.  (And XML comments won't make it clear, because you'll get the interface comments rather than the ones on the object's Clone method.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是的，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MemberwiseClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会进行浅表复制，但&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MemberwiseClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的反面&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;DeepClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它不存在。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过对象的ICloneable接口使用对象时，您不知道基础对象执行哪种克隆。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（而且XML注释不会清楚，因为您将获得接口注释，而不是对象的Clone方法中的接口注释。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2ce8a229f8a057b64fa0f77a6062b9322b7d229" translate="yes" xml:space="preserve">
          <source>You can choose what should be copied from &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;newInstance&lt;/code&gt; using &lt;code&gt;CloningFlags&lt;/code&gt; enum:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt; &lt;code&gt;CloningFlags&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;枚举&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;选择应该从&lt;/font&gt;&lt;/font&gt; &lt;code&gt;source&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;复制&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;到&lt;/font&gt;&lt;/font&gt; &lt;code&gt;newInstance&lt;/code&gt; 的&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内容&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cddb79c049ece38cdda3ce4fda281ec800770b8f" translate="yes" xml:space="preserve">
          <source>You may try running the following code:</source>
          <target state="translated">你可以尝试运行以下代码。</target>
        </trans-unit>
        <trans-unit id="b49293362c4a6609de12247a9ebbcb6d96508630" translate="yes" xml:space="preserve">
          <source>and then use it anywhere in the solution by</source>
          <target state="translated">然后在解决方案中的任何地方使用它</target>
        </trans-unit>
        <trans-unit id="882fd29c021ebf4e995497b69386ec0dd2acc808" translate="yes" xml:space="preserve">
          <source>be informed that this Solution is pretty easy but it's not as performant as other solutions may be.</source>
          <target state="translated">要知道,这个解决方案是相当容易的,但它不像其他的解决方案那样表现得那么好。</target>
        </trans-unit>
        <trans-unit id="acf770d8bb857e64ae02226262cb7c427088e91c" translate="yes" xml:space="preserve">
          <source>full code check in my post in another answer</source>
          <target state="translated">补码</target>
        </trans-unit>
        <trans-unit id="129e7ca8e224fe2df88fa9b8ab2d02092049a4ce" translate="yes" xml:space="preserve">
          <source>if you'll cache it properly, than it'll deep clone 1000000 object by 4,6s (measured by Watcher).</source>
          <target state="translated">如果你缓存得当,比起4,6s(由Watcher测量),它将深度克隆1000000个对象。</target>
        </trans-unit>
        <trans-unit id="85a67b2f04cac24bb850986a47bf2a5498077678" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;http://valueinjecter.codeplex.com/wikipage?title=Faster%20Deep%20Cloning%20using%20SmartConventionInjection%20and%20FastMember&amp;amp;referringTitle=Home&quot;&gt;the valueinjecter deep cloning solution on CodePlex&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://valueinjecter.codeplex.com/wikipage?title=Faster%20Deep%20Cloning%20using%20SmartConventionInjection%20and%20FastMember&amp;amp;referringTitle=Home&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodePlex上的valueinjecter深度克隆解决方案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b5b0c8f480f30347ecc2af00ac4fd7ba722152b" translate="yes" xml:space="preserve">
          <source>than you take cached properties or add new to dictionary and use them simply</source>
          <target state="translated">比你采取缓存的属性或添加新的属性到字典中,并简单地使用它们。</target>
        </trans-unit>
        <trans-unit id="4fcf39b9da053daec9d46b71401baed4bebb9824" translate="yes" xml:space="preserve">
          <source>what has the same meaning like following c# code:</source>
          <target state="translated">什么意思,就像下面的c#代码一样。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
