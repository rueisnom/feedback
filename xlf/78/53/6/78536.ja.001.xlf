<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/78536">
    <body>
      <group id="78536">
        <trans-unit id="e7efd000d886354e9d1cc13458d5f1e572b80135" translate="yes" xml:space="preserve">
          <source>1.08 seconds for Nested MemberwiseClone on nested structs</source>
          <target state="translated">ネストされた構造体でのネストされた MemberwiseClone の 1.08 秒</target>
        </trans-unit>
        <trans-unit id="e1f930c2714fac27b55e1b2d11e7e09778433bcb" translate="yes" xml:space="preserve">
          <source>10x faster than anything that involves serialization/deserialization;</source>
          <target state="translated">シリアライズデシリアライズを伴うものよりも10倍速い。</target>
        </trans-unit>
        <trans-unit id="913cf4877bd3d1a0e2c97dbb3a5a2b17d016ef6e" translate="yes" xml:space="preserve">
          <source>10x faster than other methods</source>
          <target state="translated">他の方法の10倍の速さ</target>
        </trans-unit>
        <trans-unit id="2e8519892935fb7446d143f4c9e077f5476aac77" translate="yes" xml:space="preserve">
          <source>39.93 seconds for Serialization/Deserialization</source>
          <target state="translated">SerializationDeserializationのための39.93秒</target>
        </trans-unit>
        <trans-unit id="605ae3fff262161ddad94d3377c92774ca626ea9" translate="yes" xml:space="preserve">
          <source>4.77 seconds for Nested MemberwiseClone on nested classes</source>
          <target state="translated">4.77秒でネストされたクラスのネストされたMemberwiseCloneに</target>
        </trans-unit>
        <trans-unit id="e6a8a27926fb7d4df6fdbc3636b224f4a93094d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;Mr Venkat Subramaniam (redundant link here) explains in much detail why&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Venkat Subramaniam氏（冗長リンクはこちら）がその理由を詳しく説明しています&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a534b5d3abc07b774eb36f06f48c1a544f34a35e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-by-Expression-Trees-C-Sharp&quot;&gt;&lt;strong&gt;By Expression Trees&lt;/strong&gt;&lt;/a&gt; - &lt;strong&gt;20x faster&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;http://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-by-Expression-Trees-C-Sharp&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;式の木に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 20倍高速化&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45ad212c37efd2067bec39fde68662fdd5053dd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;&lt;strong&gt;By Reflection&lt;/strong&gt;&lt;/a&gt; - &lt;strong&gt;5x faster&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;反射によって&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 5倍速く&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a201a8cdcb8b06280137854cb5778c399ecc452e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/129395/2094687&quot;&gt;&lt;strong&gt;By Serialization&lt;/strong&gt;&lt;/a&gt; (the shortest code)</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/129395/2094687&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;シリアライゼーション&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（最短コード）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55b21ec5676b6d9926b9a2ecbd52a02851175e29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.object.memberwiseclone&quot;&gt;MemberwiseClone&lt;/a&gt;&lt;/strong&gt;, which uses ICloneable</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.object.memberwiseclone&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneableを使用する&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; MemberwiseClone&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59b3d56df2c2553ca2c3174a09e6a80bb843cdc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.serializableattribute&quot;&gt;Serialization&lt;/a&gt;&lt;/strong&gt;, as pointed by &lt;a href=&quot;https://stackoverflow.com/a/78612/274502&quot;&gt;johnc's preferred answer&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.serializableattribute&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;シリアル化&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって指摘したように、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/78612/274502&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; JOHNCの好みの答え&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b75c9f0e2a659a1ba2a0729244a6df1e7a7577e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;Expression Trees&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;式ツリー&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b34fe40f5f4167ee46186dd24bc29a8490bea30c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/3441/Base-class-for-cloning-an-object-in-C&quot;&gt;Reflection&lt;/a&gt;&lt;/strong&gt; by using &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.activator.createinstance&quot;&gt;Activator.CreateInstance&lt;/a&gt; and &lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;recursive MemberwiseClone&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/3441/Base-class-for-cloning-an-object-in-C&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.activator.createinstance&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Activator.CreateInstance&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;a href=&quot;https://github.com/Burtsev-Alexey/net-object-deep-copy/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再帰MemberwiseClone&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用した&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リフレクション&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a66965c53feacfdc0f2a622f1ad557b95e5cb35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt; (January 10 2015) Thought I'd revisit this, to mention I recently started using (Newtonsoft) Json to do this, it &lt;a href=&quot;http://maxondev.com/serialization-performance-comparison-c-net-formats-frameworks-xmldatacontractserializer-xmlserializer-binaryformatter-json-newtonsoft-servicestack-text/&quot;&gt;should be&lt;/a&gt; lighter, and avoids the overhead of [Serializable] tags. (&lt;strong&gt;NB&lt;/strong&gt; @atconway has pointed out in the comments that private members are not cloned using the JSON method)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EDIT&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（2015年1月10日）思想私は、これを再訪したい私は最近、これを行うには（Newtonsoft）JSONを使い始め言及し、それが&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maxondev.com/serialization-performance-comparison-c-net-formats-frameworks-xmldatacontractserializer-xmlserializer-binaryformatter-json-newtonsoft-servicestack-text/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あるべき&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;軽量化、および[直列化]タグのオーバーヘッドを回避できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; @atconwayは、プライベートメンバーはJSONメソッドを使用して複製されないことをコメントで指摘しています）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a29dee9cb9abc92e82f8eade632689b3c73b1ef3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EDIT&lt;/strong&gt;:
requires</source>
          <target state="translated">&lt;strong&gt;EDIT&lt;/strong&gt;:
requires</target>
        </trans-unit>
        <trans-unit id="1d85daf15d174bbd5f31c492aa89f634fbfc9513" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Extension Methods&lt;/strong&gt;, such as this &lt;a href=&quot;https://circlesandcrossesblogarchive.blogspot.com/2008/01/extension-methods-for-copying-or.html&quot;&gt;custom clone framework by Havard Straden&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://circlesandcrossesblogarchive.blogspot.com/2008/01/extension-methods-for-copying-or.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Havard Stradenによる&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;カスタムクローンフレームワーク&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張メソッド&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e32edf705aa496e7b8e43953ad068eb2e8290b5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How fast it is?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どれくらい速いですか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4153b261e93aa8dd30ee443aaa58263e2edeea3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How to use it?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを使用する方法？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bd2dccfc4d1e6371353d780cd1be827d620d6c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Intermediate Language&lt;/strong&gt;, which I got no idea &lt;a href=&quot;https://whizzodev.blogspot.com/2008/03/object-cloning-using-il-in-c.html&quot;&gt;how works&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中間言語&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;a href=&quot;https://whizzodev.blogspot.com/2008/03/object-cloning-using-il-in-c.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どのように機能するのかわから&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なかった&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9448142de5929b4f38d53e908b8a245d2802be75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Latest version has a more null checks, but I left them out for better understanding.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最新バージョンではnullチェックが多くなっていますが、理解を深めるために省略しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2fb848a13809ee8bb14a1d0a69ac671757135fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What can be cloned?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何をクローンできますか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40a93dcd5c3fc2492063edd3e1785b037db9989a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;and more...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もっと...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed0893a863748e062a88693b978f6b9f856509ed" translate="yes" xml:space="preserve">
          <source>After much much reading about many of the options linked here, and possible solutions for this issue, I believe &lt;a href=&quot;https://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;all the options are summarized pretty well at &lt;em&gt;Ian P&lt;/em&gt;'s link&lt;/a&gt; (all other options are variations of those) and the best solution is provided by &lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;&lt;em&gt;Pedro77&lt;/em&gt;'s link&lt;/a&gt; on the question comments.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここにリンクされている多くのオプションとこの問題の可能な解決策についてよく読んだ後、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのオプションは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ian P&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のリンク&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でかなりうまくまとめられている&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と思い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（他のすべてのオプションはそれらのバリエーションです）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;質問コメント&lt;/font&gt;&lt;a href=&quot;http://www.agiledeveloper.com/articles/cloning072002.htm&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;への&lt;/font&gt;&lt;/a&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pedro77&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のリンク&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8d3bece6070899d0b2f297368bd4b53482ca033" translate="yes" xml:space="preserve">
          <source>Again, note that &lt;strong&gt;if&lt;/strong&gt; you use &lt;strong&gt;Nested MemberwiseClone for a deep copy&lt;/strong&gt;, you have to manually implement a ShallowCopy for each nested level in the class, and a DeepCopy which calls all said ShallowCopy methods to create a complete clone. This is simple: only a few lines in total, see the demo code above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでも、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディープコピーにNested MemberwiseCloneを&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、クラスのネストされた各レベルにShallowCopyを実装し、完全なクローンを作成するために上記のすべてのShallowCopyメソッドを呼び出すDeepCopyを手動で実装する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは簡単です。合計で数行のみです。上記のデモコードを参照してください。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c19c8aea1a18a9301adb5a8a3a8d0ced86c8138d" translate="yes" xml:space="preserve">
          <source>All his article circles around an example that tries to be applicable for most cases, using 3 objects: &lt;em&gt;Person&lt;/em&gt;, &lt;em&gt;Brain&lt;/em&gt; and &lt;em&gt;City&lt;/em&gt;. We want to clone a person, which will have its own brain but the same city. You can either picture all problems any of the other methods above can bring or read the article.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼のすべての記事は、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Person&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Brain&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cityの&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 3つのオブジェクトを使用して、ほとんどの場合に適用できるようにする例を中心にしています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。自分の頭脳を持つが同じ都市を持つ人をクローンしたい。上記の他の方法で問題が発生するか、記事を読むことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b78b06bc11058abc4b4d8e8a718695921c0e80ba" translate="yes" xml:space="preserve">
          <source>All linked methods are well working and were deeply tested.</source>
          <target state="translated">すべてのリンクされた方法がうまく機能しており、深く検証されました。</target>
        </trans-unit>
        <trans-unit id="0c29649d0294b0e0f1687674c8bc49b583323722" translate="yes" xml:space="preserve">
          <source>All you need is a partial class definition with &lt;code&gt;ICloneable&lt;/code&gt; and the generator does the rest:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要なのは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ICloneable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;した部分的なクラス定義だけで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、残りはジェネレーターが行います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="587b224561967e7f419831a3a6ad69801bd354fa" translate="yes" xml:space="preserve">
          <source>Also available as a nuget package:
&lt;a href=&quot;https://www.nuget.org/packages/Clone.Behave/1.0.0&quot;&gt;https://www.nuget.org/packages/Clone.Behave/1.0.0&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nugetパッケージとしても利用可能：&lt;/font&gt;&lt;a href=&quot;https://www.nuget.org/packages/Clone.Behave/1.0.0&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ://www.nuget.org/packages/Clone.Behave/1.0.0 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caf9f6b34ebd2432c8ed7b73c2a7afc59533eec4" translate="yes" xml:space="preserve">
          <source>Also, you can use this extension method</source>
          <target state="translated">また、このような拡張方法で</target>
        </trans-unit>
        <trans-unit id="10534c09fa4b74a0a535f2ec89be9b232f40851d" translate="yes" xml:space="preserve">
          <source>And at another place:</source>
          <target state="translated">そして、別の場所で。</target>
        </trans-unit>
        <trans-unit id="1f4740f3ff2a55d536be02cd53cd7111c00e43e1" translate="yes" xml:space="preserve">
          <source>And be sure that if the Class grows, there will still be only those fields cloned, which also get serialized.</source>
          <target state="translated">そして、クラスが成長しても、クローンされたフィールドだけが存在し、それもまたシリアライズされることを確認してください。</target>
        </trans-unit>
        <trans-unit id="d0563a645e72e80ed784f5e228f4af5685b4cb1c" translate="yes" xml:space="preserve">
          <source>And the method ...</source>
          <target state="translated">そして、その方法は...</target>
        </trans-unit>
        <trans-unit id="ab1ebe0b3b8ed3d83f31e9be497c84326b12bdb3" translate="yes" xml:space="preserve">
          <source>And then make changes to the new object that are not reflected in the original object.</source>
          <target state="translated">そして、元のオブジェクトに反映されていない変更を行います。</target>
        </trans-unit>
        <trans-unit id="1710195cfedc2dce1fd5d8e0f90bbd028a5353c0" translate="yes" xml:space="preserve">
          <source>And this method is blindingly fast too: if we use nested structs, it's 35x faster than serializing/deserializing nested classes, and allows us to take advantage of all of the threads available on the machine.</source>
          <target state="translated">また、このメソッドは驚くほど高速です。ネストされた構造体を使用すると、ネストされたクラスをシリアライズするよりも 35 倍高速で、マシン上で利用可能なすべてのスレッドを利用することができます。</target>
        </trans-unit>
        <trans-unit id="d0c13e59860a62aab2ef50f3da165832ec52603e" translate="yes" xml:space="preserve">
          <source>And with the use of extension methods (also from the originally referenced source):</source>
          <target state="translated">そして、拡張子のメソッドを使って(これも元々参照されていたソースから)。</target>
        </trans-unit>
        <trans-unit id="c9f2a9c42fbc8f2b7cc5c9be9f24de59698164d7" translate="yes" xml:space="preserve">
          <source>Apparently, ExpressMapper is as fast, if not faster, than hand coding such as above. I might have to see how they compare with a profiler.</source>
          <target state="translated">どうやらExpressMapperは、上記のようなハンドコーディングよりも、速くはないにしても同程度の速度らしい。プロファイラで比較してみる必要があるかもしれませんね。</target>
        </trans-unit>
        <trans-unit id="5c12a41b60d532c82c3b43c02edb2e71fc14f583" translate="yes" xml:space="preserve">
          <source>As I couldn't find a cloner that meets all my requirements in different projects, I created a deep cloner that can be configured and adapted to different code structures instead of adapting my code to meet the cloners requirements. Its achieved by adding annotations to the code that shall be cloned or you just leave the code as it is to have the default behaviour. It uses reflection, type caches and is based on &lt;a href=&quot;https://fasterflect.codeplex.com/&quot;&gt;fasterflect&lt;/a&gt;. The cloning process is very fast for a huge amount of data and a high object hierarchy (compared to other reflection/serialization based algorithms).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さまざまなプロジェクトですべての要件を満たすクローンを見つけることができなかったので、コードをクローンの要件を満たすように調整する代わりに、構成してさまざまなコード構造に適応できるディープクローナーを作成しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クローンを作成するコードに注釈を追加するか、デフォルトの動作を維持するためにコードをそのままにしておくことで、これを実現します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リフレクション、タイプキャッシュを使用し、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://fasterflect.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fasterflectに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基づいてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クローンプロセスは、大量のデータと高いオブジェクト階層に対して非常に高速です（他のリフレクション/シリアル化ベースのアルゴリズムと比較して）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87f827418ff56e0bbe18c669ab59db265811888c" translate="yes" xml:space="preserve">
          <source>As mentioned elsewhere, it does require your objects to be serializable.</source>
          <target state="translated">他の場所でも述べたように、これはオブジェクトがシリアライズ可能であることを必要とします。</target>
        </trans-unit>
        <trans-unit id="1110e7970bd347f9a3fc9cf0712907b6d662e3b4" translate="yes" xml:space="preserve">
          <source>As nearly all of the answers to this question have been unsatisfactory or plainly don't work in my situation, I have authored &lt;a href=&quot;https://github.com/replaysMike/AnyClone&quot;&gt;AnyClone&lt;/a&gt; which is entirely implemented with reflection and solved all of the needs here. I was unable to get serialization to work in a complicated scenario with complex structure, and &lt;code&gt;IClonable&lt;/code&gt; is less than ideal - in fact it shouldn't even be necessary.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問に対する回答のほとんどすべてが不十分であるか、明らかに私の状況では機能しないため、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/replaysMike/AnyClone&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リフレクション&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で完全に実装され、ここですべてのニーズを解決した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AnyClone&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;た。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;複雑な構造の複雑なシナリオでシリアル化を機能させることができませんでした&lt;/font&gt;&lt;/font&gt; &lt;code&gt;IClonable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は理想的とは言えません-実際には必要もありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1313723bc88d37b449c90621b18a792ad5c857fb" translate="yes" xml:space="preserve">
          <source>Basically you need to implement ICloneable interface and then realize object structure copying.</source>
          <target state="translated">基本的にはICloneableインターフェースを実装してからオブジェクト構造コピーを実現する必要があります。</target>
        </trans-unit>
        <trans-unit id="f71d544485df8025b3b633c935a5631b7761b88e" translate="yes" xml:space="preserve">
          <source>Better still, use generic List&amp;lt;T&amp;gt; cloner:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらによいのは、汎用のList &amp;lt;T&amp;gt;クローンを使用することです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="692cc6aa6522e29de28ed95cf1ce9f0d1fece5d9" translate="yes" xml:space="preserve">
          <source>Checksums to aid in debugging</source>
          <target state="translated">デバッグを支援するためのチェックサム</target>
        </trans-unit>
        <trans-unit id="f8eb3248811492e79afeba88e2112b19fd5e3085" translate="yes" xml:space="preserve">
          <source>Cheers.</source>
          <target state="translated">Cheers.</target>
        </trans-unit>
        <trans-unit id="2df53530264316c637ddf985cf690aac0257f4d4" translate="yes" xml:space="preserve">
          <source>Choose this answer if you want the fastest speed .NET is capable of.</source>
          <target state="translated">あなたが最速の速度をしたい場合は、この答えを選択してください。</target>
        </trans-unit>
        <trans-unit id="c0fdac0bdca937d311a77c82e199ab179dc62d27" translate="yes" xml:space="preserve">
          <source>Cloning objects incorrectly can lead to very difficult-to-pin-down bugs. In production code, I tend to implement a checksum to double check that the object has been cloned properly, and hasn't been corrupted by another reference to it. This checksum can be switched off in Release mode.</source>
          <target state="translated">オブジェクトのクローンを誤って作成すると、非常に困難なバグが発生する可能性があります。実運用のコードでは、オブジェクトが適切にクローンされているか、別の参照によって破損していないかを二重にチェックするためにチェックサムを実装する傾向があります。このチェックサムは Release モードでオフにすることができます。</target>
        </trans-unit>
        <trans-unit id="fd74b2a71394e7ee81bb386b6917d0be84ba18b0" translate="yes" xml:space="preserve">
          <source>Code Generator</source>
          <target state="translated">コードジェネレータ</target>
        </trans-unit>
        <trans-unit id="25357e6d4fe7b7c5a6d148c861ae62ca1d739cbd" translate="yes" xml:space="preserve">
          <source>Collection items for types implementing ICollection</source>
          <target state="translated">ICollectionを実装した型のコレクションアイテム</target>
        </trans-unit>
        <trans-unit id="1d2a3b6ac919aa25b6d001f61ba859028b6bc586" translate="yes" xml:space="preserve">
          <source>Copying an object by specifying &lt;code&gt;New&lt;/code&gt; followed by the class name often leads to code that is not extensible. Using clone, the application of prototype pattern, is a better way to achieve this. However, using clone as it is provided in C# (and Java) can be quite problematic as well. It is better to provide a protected (non-public) copy constructor and invoke that from the clone method. This gives us the ability to delegate the task of creating an object to an instance of a class itself, thus providing extensibility and also, safely creating the objects using the protected copy constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;New&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;後にクラス名を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;指定してオブジェクトをコピーすると、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くの場合、拡張できないコードが生成されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを実現するには、プロトタイプパターンのアプリケーションであるクローンを使用するのがより良い方法です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、C＃（およびJava）で提供されているようにcloneを使用することも、かなり問題になる可能性があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保護された（非パブリック）コピーコンストラクターを提供し、それをcloneメソッドから呼び出すことをお勧めします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、オブジェクトを作成するタスクをクラス自体のインスタンスに委任できるため、拡張性が提供され、保護されたコピーコンストラクターを使用してオブジェクトを安全に作成できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab2ca7bedff39cc7ca86fac38435d89d6b71fedb" translate="yes" xml:space="preserve">
          <source>Custom classes and structs, including generic classes and structs.</source>
          <target state="translated">ジェネリック・クラスや構造体を含むカスタム・クラスや構造体。</target>
        </trans-unit>
        <trans-unit id="49116a8d10b7d9e81f10da72ed4849db170e4c2d" translate="yes" xml:space="preserve">
          <source>Deep cloning objects</source>
          <target state="translated">ディープクローニングオブジェクト</target>
        </trans-unit>
        <trans-unit id="8622437626d6131f373e7baa6060fdcc20366396" translate="yes" xml:space="preserve">
          <source>Define an &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; with a read-only &lt;code&gt;Self&lt;/code&gt; property that returns &lt;code&gt;T&lt;/code&gt;, and &lt;code&gt;ICloneable&amp;lt;out T&amp;gt;&lt;/code&gt;, which derives from &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; and includes a method &lt;code&gt;T Clone()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;読み取り専用で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Self&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;復帰すること性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ICloneable&amp;lt;out T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その由来&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ISelf&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と方法は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;T Clone()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a7fe18eb6df3c19423dafe4d851042aca981175" translate="yes" xml:space="preserve">
          <source>EDIT: project is discontinued</source>
          <target state="translated">EDIT:プロジェクトは中止されています</target>
        </trans-unit>
        <trans-unit id="32fd369a2e358951ab3eab2db75ced8552288be9" translate="yes" xml:space="preserve">
          <source>Each derived type should implement &lt;code&gt;VirtualClone&lt;/code&gt; by calling the base clone method and then doing whatever needs to be done to properly clone those aspects of the derived type which the parent VirtualClone method hasn't yet handled.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各派生型は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、基本クローンメソッドを呼び出し、親VirtualCloneメソッドがまだ処理していない派生型のこれらの側面を適切に複製するために必要なことをすべて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行して、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;VirtualClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="37781e17dc9d9f36990e7eeb0e4d1da65f512dd7" translate="yes" xml:space="preserve">
          <source>First and foremost, those are all our options:</source>
          <target state="translated">何よりもまず第一に、それらはすべて私たちのオプションです。</target>
        </trans-unit>
        <trans-unit id="9290916a8ada6d592efd89d4b0ce3854336f1797" translate="yes" xml:space="preserve">
          <source>Follow these steps:</source>
          <target state="translated">以下の手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="79bd4d5a1c2ddb092a60f0c609c15d6a6c1715c0" translate="yes" xml:space="preserve">
          <source>Following class/struct members are cloned internally:</source>
          <target state="translated">以下のクラス構造体のメンバは内部でクローン化されています。</target>
        </trans-unit>
        <trans-unit id="68c49d64c9298ef668614e4520ac4c5ca0dc781a" translate="yes" xml:space="preserve">
          <source>For a deep copy, there is no way it can know how to automatically do it.</source>
          <target state="translated">深いコピーの場合、自動でできる方法を知ることができるわけがありません。</target>
        </trans-unit>
        <trans-unit id="934801371dbbff4bea9fcd30da856a969b5d353d" translate="yes" xml:space="preserve">
          <source>For a more detailed explanation on Cloning using ICloneable, check out &lt;a href=&quot;https://web.archive.org/web/20120113123300/http://www.ondotnet.com/pub/a/dotnet/2002/11/25/copying.html&quot;&gt;this article&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneableを使用したクローン作成の詳細については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://web.archive.org/web/20120113123300/http://www.ondotnet.com/pub/a/dotnet/2002/11/25/copying.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こちらの記事&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をご覧&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fc88e1151d53a8ae7ea98191edcf398003baff4" translate="yes" xml:space="preserve">
          <source>For example: The following code will deepClone Address, but only perform a shallow copy of the _currentJob field.</source>
          <target state="translated">例えば、以下のようになります。以下のコードはアドレスをディープクローンしますが、_currentJobフィールドの浅いコピーのみを実行します。</target>
        </trans-unit>
        <trans-unit id="5cd150b2223802ecc627d4e65f116ecb5b6a90c3" translate="yes" xml:space="preserve">
          <source>For maximum inheritance versatility, classes exposing public cloning functionality should be &lt;code&gt;sealed&lt;/code&gt;, but derive from a base class which is otherwise identical except for the lack of cloning.  Rather than passing variables of the explicit clonable type, take a parameter of type &lt;code&gt;ICloneable&amp;lt;theNonCloneableType&amp;gt;&lt;/code&gt;.  This will allow a routine that expects a cloneable derivative of  &lt;code&gt;Foo&lt;/code&gt; to work with a cloneable derivative of &lt;code&gt;DerivedFoo&lt;/code&gt;, but also allow the creation of non-cloneable derivatives of &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;継承の汎用性を最大限にするには、パブリッククローン機能を公開するクラスを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sealed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、クローンがないことを除いて他の点では同じである基本クラスから派生します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明示的なクローン可能タイプの変数を渡すのではなく、タイプ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ICloneable&amp;lt;theNonCloneableType&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パラメーターを取ります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、複製可能の派生見込んルーチンことができます &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の複製可能な誘導体との仕事に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;DerivedFoo&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するだけでなく、非複製可能な誘導体の創出できるように&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foo&lt;/code&gt; のを&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6bb3bec8cd191d70ffb1e4224ea1af2ade92de38" translate="yes" xml:space="preserve">
          <source>For ultimate speed, you can use &lt;strong&gt;Nested MemberwiseClone to do a deep copy&lt;/strong&gt;. Its almost the same speed as copying a value struct, and is much faster than (a) reflection or (b) serialization (as described in other answers on this page).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;究極のスピードのために、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネストされたMemberwiseCloneを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してディープコピーを行う&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことができ&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値の構造体をコピーするのとほぼ同じ速度で、（a）リフレクションまたは（b）シリアル化（このページの他の回答で説明されている）よりもはるかに高速です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49e651e88e06ed605974a0c1ab21a11458146ce1" translate="yes" xml:space="preserve">
          <source>Here a solution fast and easy that worked for me without relaying on Serialization/Deserialization.</source>
          <target state="translated">ここでは、SerializationDeserialization上でリレーすることなく、私のために働いていた迅速かつ簡単なソリューションを提供します。</target>
        </trans-unit>
        <trans-unit id="5ab133b4375ba1d6541aa1d17873018e5be4bcf1" translate="yes" xml:space="preserve">
          <source>Here is a deep copy implementation:</source>
          <target state="translated">こちらはディープコピーの実装です。</target>
        </trans-unit>
        <trans-unit id="786eda73accd1aaa905eaaa551adf6a8af41b224" translate="yes" xml:space="preserve">
          <source>Here is the output of the code showing the relative performance difference for 100,000 clones:</source>
          <target state="translated">以下は、100,000個のクローンに対する相対的な性能差を示すコードの出力です。</target>
        </trans-unit>
        <trans-unit id="a4113577b91cff35283db6fde643b2a2ec504918" translate="yes" xml:space="preserve">
          <source>Hopefully this implementation can make things clear:</source>
          <target state="translated">願わくば、この実装で物事が明確になることを願っています。</target>
        </trans-unit>
        <trans-unit id="284f895aea619d7cd96d1331cb6a4e9e8d08c72d" translate="yes" xml:space="preserve">
          <source>How can I clone or deep copy an object so that the cloned object can be modified without any changes being reflected in the original object?</source>
          <target state="translated">クローンされたオブジェクトを元のオブジェクトに変更を反映させずに変更できるように、オブジェクトのクローンやディープコピーを行うにはどうすればいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="33eb716062ccf9ec7203b8f17cdd0d3d04915bd7" translate="yes" xml:space="preserve">
          <source>I came up with this to overcome a &lt;a href=&quot;http://en.wikipedia.org/wiki/.NET_Framework&quot;&gt;.NET&lt;/a&gt; shortcoming having to manually deep copy List&amp;lt;T&amp;gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを思いついたのは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;List &amp;lt;T&amp;gt;を手動でディープコピーする必要が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/.NET_Framework&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.NETの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;欠点を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;克服するため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bac9acceb1245250731fed957146e017e67a6a8" translate="yes" xml:space="preserve">
          <source>I don't often need this functionality, so when it's been necessary, I've resorted to creating a new object and then copying each property individually, but it always leaves me with the feeling that there is a better or more elegant way of handling the situation.</source>
          <target state="translated">私はこの機能を必要としないことが多いので、必要になったときは、新しいオブジェクトを作成して、それぞれのプロパティを個別にコピーすることに頼ってきましたが、いつも、もっと良い方法があるのではないか、もっとエレガントな方法があるのではないかと感じてしまいます。</target>
        </trans-unit>
        <trans-unit id="bb7752146430d112c60f0a59aed39f05a3e65078" translate="yes" xml:space="preserve">
          <source>I find this method quite useful: often, you only want to clone parts of the object, not the entire thing.</source>
          <target state="translated">このメソッドは非常に便利です。</target>
        </trans-unit>
        <trans-unit id="d10c988eb5d27a0013e7cb535b1aa2ce33e37976" translate="yes" xml:space="preserve">
          <source>I have created a version of the accepted answer that works with both '[Serializable]' and '[DataContract]'. It has been a while since I wrote it, but if I remember correctly [DataContract] needed a different serializer.</source>
          <target state="translated">'[Serializable]'と'[DataContract]'の両方で動作するバージョンの合格答案を作成しました。書いてからしばらく経ちますが、私の記憶が正しければ、[DataContract]は別のシリアライザを必要としていました。</target>
        </trans-unit>
        <trans-unit id="ec3c1e7cf1ca39d008ad9bbdf191ad00d04de1fc" translate="yes" xml:space="preserve">
          <source>I hope it helps someone else out there who ran into the same problems I did.</source>
          <target state="translated">私がしたのと同じ問題に遭遇した他の誰かの助けになることを願っています。</target>
        </trans-unit>
        <trans-unit id="6bf5e52938c06fb33b6e6fbe9c90474a0566db83" translate="yes" xml:space="preserve">
          <source>I like Copyconstructors like that:</source>
          <target state="translated">そういうコピーコンが好きなんです。</target>
        </trans-unit>
        <trans-unit id="95531a41f608a2cbb78c6c5f7785d8752ce0dadc" translate="yes" xml:space="preserve">
          <source>I prefer a copy constructor to a clone. The intent is clearer.</source>
          <target state="translated">クローンよりもコピーコンストラクタの方が好きです。意図がはっきりしています。</target>
        </trans-unit>
        <trans-unit id="c0f74be924fe581418864a3d2a39393a4dc834ad" translate="yes" xml:space="preserve">
          <source>I think you can try this.</source>
          <target state="translated">これは試してみてもいいと思います。</target>
        </trans-unit>
        <trans-unit id="eb8254a66f6b04038b9c69b195818c7009ed4042" translate="yes" xml:space="preserve">
          <source>I tried to come up with oneliner that does this, but it's not possible, due to yield not working inside anonymous method blocks.</source>
          <target state="translated">これを行うonelinerを考えようとしましたが、匿名メソッドブロック内ではyieldが動作しないため、できませんでした。</target>
        </trans-unit>
        <trans-unit id="d5c59659497994547255e487eca88abb8961fd73" translate="yes" xml:space="preserve">
          <source>I use this:</source>
          <target state="translated">私はこれを使っています。</target>
        </trans-unit>
        <trans-unit id="aaca6f6057852c9e3ec8b284284cfa0264ea0432" translate="yes" xml:space="preserve">
          <source>I want to do something like:</source>
          <target state="translated">みたいなことをしたい。</target>
        </trans-unit>
        <trans-unit id="3b8a4cb1921a75f054bdf5a58fc834116fb2a13a" translate="yes" xml:space="preserve">
          <source>I wanted a cloner for very simple objects of mostly primitives and lists.  If your object is out of the box JSON serializable then this method will do the trick.  This requires no modification or implementation of interfaces on the cloned class, just a JSON serializer like JSON.NET.</source>
          <target state="translated">ほとんどがプリミティブとリストの非常にシンプルなオブジェクトのためのクローナーが欲しかったのです。もしあなたのオブジェクトがJSONシリアライズ可能なものであれば、このメソッドを使うと良いでしょう。これは、クローンされたクラスのインターフェイスの変更や実装を必要とせず、JSON.NET.NETのようなJSONシリアライザを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="bc1b3ec016bf5be9728f40160455a45618dcdb74" translate="yes" xml:space="preserve">
          <source>I've just created &lt;strong&gt;&lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions&quot;&gt;&lt;code&gt;CloneExtensions&lt;/code&gt; library&lt;/a&gt;&lt;/strong&gt; project. It performs fast, deep clone using simple assignment operations generated by Expression Tree runtime code compilation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions&quot;&gt; &lt;code&gt;CloneExtensions&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ライブラリ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロジェクトを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;式ツリーランタイムコードのコンパイルによって生成された単純な割り当て操作を使用して、高速でディープクローンを実行します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63bdd57a2d0337e4d87060f54af28df189340cab" translate="yes" xml:space="preserve">
          <source>I've seen it implemented through reflection as well. Basically there was a method that would iterate through the members of an object and appropriately copy them to the new object. When it reached reference types or collections I think it did a recursive call on itself. Reflection is expensive, but it worked pretty well.</source>
          <target state="translated">リフレクションでも実装されているのを見たことがあります。基本的には、オブジェクトのメンバを反復処理して、新しいオブジェクトに適切にコピーするメソッドがありました。参照型やコレクションに到達すると、それ自体を再帰的に呼び出していたと思います。リフレクションはコストがかかりますが、かなりうまく機能していました。</target>
        </trans-unit>
        <trans-unit id="79bd2a350fbcbb11f645b5eca7a181fed727f30b" translate="yes" xml:space="preserve">
          <source>If it's deep copy of all members, you need to insure (not relating on solution you choose) that all children are clonable as well.</source>
          <target state="translated">それがすべてのメンバーの深いコピーである場合は、すべての子供たちが同様にクローン可能であることを保証する必要があります(あなたが選択したソリューションに関連するものではありません)。</target>
        </trans-unit>
        <trans-unit id="e24eceaa8e8765b2d01a536c642ac6f8ffe37a02" translate="yes" xml:space="preserve">
          <source>If you have a &quot;&lt;strong&gt;class&lt;/strong&gt;&quot;, it's a &lt;strong&gt;reference type&lt;/strong&gt;, so if you copy it, all you are doing is copying the pointer to it. To create a true clone, you have to be more creative, and use &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;differences between value types and references types&lt;/a&gt; which creates another copy of the original object in memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がある場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照型な&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、コピーする場合は、ポインターをコピーするだけです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;真のクローンを作成するには、より創造的でなければならず&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、メモリ内に元のオブジェクトの別のコピーを作成する&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値タイプと参照タイプの違い&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98d36d67a28d8f5c15399c14baef62cd21c448b8" translate="yes" xml:space="preserve">
          <source>If you have a &quot;&lt;strong&gt;struct&lt;/strong&gt;&quot;, it's a &lt;strong&gt;value type&lt;/strong&gt; so you can just copy it, and the contents will be cloned (but it will only make a shallow clone unless you use the techniques in this post).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;struct&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がある場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、それは&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値タイプな&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、コピーするだけでコンテンツが複製されます（ただし、この投稿の手法を使用しない限り、浅い複製しか作成されません）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdd4dd3e80e7c7a49bd131224ae9255763d93baa" translate="yes" xml:space="preserve">
          <source>If you have more things to copy add them</source>
          <target state="translated">コピーしたいものがあれば追加してください。</target>
        </trans-unit>
        <trans-unit id="290fd7a56c2e2008bf0fd281f379860b0e5510e5" translate="yes" xml:space="preserve">
          <source>If you want true cloning to unknown types you can take a look at
&lt;a href=&quot;http://fastclone.codeplex.com/&quot;&gt;fastclone&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未知のタイプへの真のクローンが必要な場合は、 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://fastclone.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;fastcloneをご覧ください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2cdafe5a039bec223dfc481c4ea0a13f7b5f0f79" translate="yes" xml:space="preserve">
          <source>If you're already using a 3rd party application like &lt;a href=&quot;http://valueinjecter.codeplex.com/&quot;&gt;ValueInjecter&lt;/a&gt; or &lt;a href=&quot;http://automapper.codeplex.com/&quot;&gt;Automapper&lt;/a&gt;, you can do something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://valueinjecter.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ValueInjecter&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://automapper.codeplex.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Automapper&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などのサードパーティアプリケーションを既に使用している場合は、次のような&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b834a0ee5a627d304f848834c565ac9ea3f4f76" translate="yes" xml:space="preserve">
          <source>If your Object Tree is Serializeable you could also use something like this</source>
          <target state="translated">オブジェクトツリーがシリアライズ可能な場合は、次のようなものを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="a38d103b365aeb2f9c22815169ee1ce634af0a06" translate="yes" xml:space="preserve">
          <source>Ignore this answer if you want a really, really easy method of cloning.</source>
          <target state="translated">本当に簡単にクローンを作る方法を知りたいなら、この答えは無視してください。</target>
        </trans-unit>
        <trans-unit id="bb0c9b67acb15de24ee8a8a6c073b40ceffd7394" translate="yes" xml:space="preserve">
          <source>In case you prefer to use the new &lt;a href=&quot;http://en.wikipedia.org/wiki/Extension_method&quot;&gt;extension methods&lt;/a&gt; of C# 3.0, change the method to have the following signature:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C＃3.0の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Extension_method&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張メソッド&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、メソッドを変更して次のシグネチャを設定します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db3aaef5372757b66df21234060ba0c120487fd4" translate="yes" xml:space="preserve">
          <source>In general, you implement the ICloneable interface and implement Clone yourself.
C# objects have a built-in MemberwiseClone method that performs a shallow copy that can help you out for all the primitives.</source>
          <target state="translated">一般的にはICloneableインターフェースを実装し、Cloneを自分で実装します。C#オブジェクトには、すべてのプリミティブのためにあなたを助けることができる浅いコピーを実行するMemberwiseCloneメソッドが組み込まれています。</target>
        </trans-unit>
        <trans-unit id="e2233544b5ac2cae76069b418f5cf0e76acfb419" translate="yes" xml:space="preserve">
          <source>In other words, &lt;a href=&quot;http://c2.com/cgi/wiki?PrematureOptimization&quot;&gt;go with another answer unless you have a performance bottleneck that needs fixing, and you can prove it with a profiler&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?PrematureOptimization&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;修正が必要なパフォーマンスのボトルネックがあり、プロファイラーでそれを証明できる場合を除いて、別の答えを使用してください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdb7be9a6ed4c1891567f4662c3e6a7fcf3be9ca" translate="yes" xml:space="preserve">
          <source>Instead of writing your own &lt;code&gt;Clone&lt;/code&gt; or &lt;code&gt;Copy&lt;/code&gt; methods with a tone of assignments between fields and properties make the program do it for yourself, using Expression Tree. &lt;code&gt;GetClone&amp;lt;T&amp;gt;()&lt;/code&gt; method marked as extension method allows you to simply call it on your instance:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールドとプロパティ間の割り当てのトーンを使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て独自の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、プログラムは式ツリーを使用して自分で行います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張メソッドとしてマークされた&lt;/font&gt;&lt;/font&gt; &lt;code&gt;GetClone&amp;lt;T&amp;gt;()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを使用すると、インスタンスでそれを簡単に呼び出すことができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="432ff0c0bae61943e8d638ae50cea62a618dc2cf" translate="yes" xml:space="preserve">
          <source>Isn't it quite like how you'd write your own &lt;code&gt;Clone&lt;/code&gt; method for &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;独自の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Clone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成する方法とまったく同じではありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;か？&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bdd7f499025f760963324de6629e12ddc3b6c2f5" translate="yes" xml:space="preserve">
          <source>It's also faster than serialization-based solution when you clone more then couple instances of the same type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また、同じタイプ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンスを2つ以上複製すると、シリアル化ベースのソリューションよりも高速になります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee9522dc6965391afa5dd9a0c19ece73d75bea0a" translate="yes" xml:space="preserve">
          <source>Keep things simple and use &lt;a href=&quot;http://automapper.org/&quot;&gt;AutoMapper&lt;/a&gt; as others mentioned, it's a simple little library to map one object to another... To copy an object to another with the same type, all you need is three lines of code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;物事をシンプルに&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://automapper.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保ち&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、他の人が言及したように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;AutoMapper&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。これは、あるオブジェクトを別のオブジェクトにマップする単純な小さなライブラリです...オブジェクトを同じタイプで別のオブジェクトにコピーするには、必要なのは3行のコードだけです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9387c3626e4ad38a467bda33b453d0bfdbc1381" translate="yes" xml:space="preserve">
          <source>Manually with &lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.icloneable&quot;&gt;ICloneable&lt;/a&gt;&lt;/strong&gt;, which is &lt;em&gt;Shallow&lt;/em&gt; and not &lt;em&gt;Type-Safe&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;手動&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.icloneable&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浅い&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ないと&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプセーフ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cda1fab28beb5dcc6f99ca6ede745083a62923c" translate="yes" xml:space="preserve">
          <source>Note that &lt;strong&gt;if&lt;/strong&gt; you use &lt;strong&gt;Nested MemberwiseClone for a deep copy&lt;/strong&gt;, you have to manually implement a ShallowCopy for each nested level in the class, and a DeepCopy which calls all said ShallowCopy methods to create a complete clone. This is simple: only a few lines in total, see the demo code below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ディープコピーにNested MemberwiseCloneを&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、クラスのネストされた各レベルのShallowCopyを実装し、完全なクローンを作成するために上記のすべてのShallowCopyメソッドを呼び出すDeepCopyを実装する必要が&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意し&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは簡単です。合計で数行だけです。以下のデモコードを参照してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0af8ae4e31e9ff3ff82bf3e10fbc4533e36588ee" translate="yes" xml:space="preserve">
          <source>Note that when it comes to cloning an object, there is is a big difference between a &quot;&lt;strong&gt;struct&lt;/strong&gt;&quot; and a &quot;&lt;strong&gt;class&lt;/strong&gt;&quot;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの複製に関しては、「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;struct&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」と「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;class&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間に大きな違いがあることに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aae01712872b960fb803d67f343b15e2447afa95" translate="yes" xml:space="preserve">
          <source>Now consider having a class derive from Person.</source>
          <target state="translated">次に、クラスが Person から派生していることを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="ff34d754f6d804ac5bef77b5ec865a3523ed0454" translate="yes" xml:space="preserve">
          <source>Now the method call simply becomes &lt;code&gt;objectBeingCloned.Clone();&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで、メソッド呼び出しは単に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;objectBeingCloned.Clone();&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1804c90829b7f01abfd49841af3caae85ad51299" translate="yes" xml:space="preserve">
          <source>Nullable</source>
          <target state="translated">Nullable</target>
        </trans-unit>
        <trans-unit id="aea48637fd6cb0fbb1092b31ccd75f1c1c3816b2" translate="yes" xml:space="preserve">
          <source>Observe that, if we keep a count of the number of objects, the clone as implemented here will keep a correct count of the number of objects.</source>
          <target state="translated">オブジェクトの数を数えておけば、ここで実装されているクローンは、オブジェクトの数を正しく数えておくことができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c3eeb00b000365bc8d53a0a96cf25825d356fa70" translate="yes" xml:space="preserve">
          <source>Ok, there are some obvious example with reflection in this post, BUT reflection is usually slow, until you start to cache it properly.</source>
          <target state="translated">OK、この記事では、反射を使ったいくつかの明白な例がありますが、反射は、適切にそれをキャッシュし始めるまで、通常は遅いです。</target>
        </trans-unit>
        <trans-unit id="e23d64e4397696c5fa59fa45306bb0e1f0420da7" translate="yes" xml:space="preserve">
          <source>One excellent use case for this code is feeding clones of a nested class or struct into a queue, to implement the producer / consumer pattern.</source>
          <target state="translated">このコードの優れた使用例としては、入れ子になったクラスや構造体のクローンをキューに供給して、プロデューサ・コンシューマ・パターンを実装することが挙げられます。</target>
        </trans-unit>
        <trans-unit id="761342355b401790dfbe23294d1df5dacd46fb06" translate="yes" xml:space="preserve">
          <source>Pretty darn close to the theoretical maximum speed .NET is capable of.</source>
          <target state="translated">.NETが可能な理論上の最大速度にかなり近いです。</target>
        </trans-unit>
        <trans-unit id="065d0328e55ae55e8b02ce5bb757b3b0fe0dee2e" translate="yes" xml:space="preserve">
          <source>Primitive (int, uint, byte, double, char, etc.), known immutable
types (DateTime, TimeSpan, String) and delegates (including
Action, Func, etc)</source>
          <target state="translated">プリミティブ(int、uint、byte、double、charなど)、既知の不変型(DateTime、TimeSpan、String)およびデリゲート(Action、Funcなどを含む)。</target>
        </trans-unit>
        <trans-unit id="7bf8447210928dc303c80a8768175497c2b0a3c9" translate="yes" xml:space="preserve">
          <source>Q. Why would I choose this answer?</source>
          <target state="translated">Q.この答えを選ぶ理由は?</target>
        </trans-unit>
        <trans-unit id="dcc2f3fe8faa1e5329b963097f34643d07f07cfb" translate="yes" xml:space="preserve">
          <source>Read more about generated expressions on &lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions/blob/master/EXPRESSION_TREES.md&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/MarcinJuraszek/CloneExtensions/blob/master/EXPRESSION_TREES.md&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントで&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生成された式の詳細をご覧ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cf20c3222016afbe0f5b7622903a26f7ea3da3d7" translate="yes" xml:space="preserve">
          <source>Really useful for decoupling many threads from many other threads</source>
          <target state="translated">多くのスレッドを他の多くのスレッドからデカップリングするのに本当に便利です。</target>
        </trans-unit>
        <trans-unit id="676a813ffcf5e05102377d47f21daa6ca2370a0a" translate="yes" xml:space="preserve">
          <source>Requires &lt;em&gt;System, System.IO, System.Runtime.Serialization, System.Runtime.Serialization.Formatters.Binary, System.Xml&lt;/em&gt;;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System、System.IO、System.Runtime.Serialization、System.Runtime.Serialization.Formatters.Binary、System.Xml&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="501424267b7da4761a914bfa7559daf692526455" translate="yes" xml:space="preserve">
          <source>Sample expression debug listing for &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;式デバッグリストの例&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87378a24289782458b83ba8c77b242d94a03f977" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;differences between value types and references types&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.object.memberwiseclone(v=vs.110).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値タイプと参照タイプの違いを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2d0c4f52df46db4741e6f38ce4a127fc1302d208" translate="yes" xml:space="preserve">
          <source>See the this &lt;a href=&quot;http://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;Developer's Corner article&lt;/a&gt; for a few more options (credit to Ian).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いくつかのオプション&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;については、この&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://developerscon.blogspot.com/2008/06/c-object-clone-wars.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;開発者のコ​​ーナーの記事&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（Ianの功績）を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc123cba0fca14bdba4254f8955ce9877d711e07" translate="yes" xml:space="preserve">
          <source>Simple extension method to copy all the public properties. Works for any objects and &lt;strong&gt;does not&lt;/strong&gt; require class to be &lt;code&gt;[Serializable]&lt;/code&gt;. Can be extended for other access level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのパブリックプロパティをコピーする単純な拡張メソッド。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;任意のオブジェクトで&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能し&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、クラスが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[Serializable]&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある必要&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あり&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他のアクセスレベルに拡張できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d9f42ce5d34f0487a854ebac451ba155ef8f4a8e" translate="yes" xml:space="preserve">
          <source>So I'll just copy relevant parts of those 2 references here. That way we can have:</source>
          <target state="translated">ですから、ここにある2つの参照の関連部分をコピーしておきます。そうすれば</target>
        </trans-unit>
        <trans-unit id="782c0023b4d03aa4bb350af8e42a042f00ca40c5" translate="yes" xml:space="preserve">
          <source>Sometimes you need to be aware of some restriction during this process, for example if you copying the ORM objects most of frameworks allow only one object attached to the session and you MUST NOT make clones of this object, or if it's possible you need to care about session attaching of these objects.</source>
          <target state="translated">例えば、ORMオブジェクトをコピーする場合、ほとんどのフレームワークはセッションにアタッチされているオブジェクトを1つだけ許可しているので、このオブジェクトのクローンを作ってはいけない[MUST NOT]とか、可能であれば、これらのオブジェクトのセッションアタッチに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="0ca3f588a1eccb15e1b1ea04edb10a168a3912e1" translate="yes" xml:space="preserve">
          <source>Standard ignore attributes are supported using &lt;code&gt;[IgnoreDataMember]&lt;/code&gt;, &lt;code&gt;[NonSerialized]&lt;/code&gt;. Supports complex collections, properties without setters, readonly fields etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;標準では、属性を使用して、サポートされて無視&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[IgnoreDataMember]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[NonSerialized]&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;複雑なコレクション、セッターなしのプロパティ、読み取り専用フィールドなどをサポートします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0eac9f55b2053c29c60df9fa0310dc9335a8d1a6" translate="yes" xml:space="preserve">
          <source>T[] arrays</source>
          <target state="translated">T[]配列</target>
        </trans-unit>
        <trans-unit id="fc73feec9263194ea7566c6ca298cf0b1dc6e4bc" translate="yes" xml:space="preserve">
          <source>That means: if you refer multiple times to the same object in your hierachy, the clone will also have a single instance beeing referenced.</source>
          <target state="translated">つまり、階層構造の中で同じオブジェクトを複数回参照した場合、クローンは単一のインスタンスを参照することになります。</target>
        </trans-unit>
        <trans-unit id="5185008143b9a4c57443feec185defd54db980c5" translate="yes" xml:space="preserve">
          <source>That's How I used it</source>
          <target state="translated">私が使っていたのはこんな感じ</target>
        </trans-unit>
        <trans-unit id="649495c719068d9e76435ae9a61315556043b104" translate="yes" xml:space="preserve">
          <source>That's expression based cloning working about 10 times faster than binary serialization and maintaining complete object graph integrity.</source>
          <target state="translated">これは、式ベースのクローニングがバイナリのシリアライズよりも約10倍速く動作し、完全なオブジェクトグラフの完全性を維持しています。</target>
        </trans-unit>
        <trans-unit id="5e0381de4bd305f85d92a1abdfa2d27e82f74f22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;article Fast Deep Copy by Expression Trees&lt;/a&gt;   has  also performance comparison of cloning by Serialization, Reflection and Expression Trees.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/1111658/Fast-Deep-Copy-of-Objects-by-Expression-Trees-Csha&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高速ツリーによる式ツリーの高速ディープコピー&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記事に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; は、シリアル化、リフレクション、および式ツリーによるクローン作成のパフォーマンス比較もあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d11a96cf2596c6c3dffe8adc41739b4941905d8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;long&lt;/em&gt; answer is &quot;it depends&quot;. As mentioned by others, ICloneable is not supported by generics, requires special considerations for circular class references, and is actually viewed by some as a &lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;&quot;mistake&quot;&lt;/a&gt; in the .NET Framework. The serialization method depends on your objects being serializable, which they may not be and you may have no control over. There is still much debate in the community over which is the &quot;best&quot; practice. In reality, none of the solutions are the one-size fits all best practice for all situations like ICloneable was originally interpreted to be.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;長い&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;答えは「それが依存」です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の人が述べたように、ICloneableはジェネリックスでサポートされておらず、循環クラス参照について特別な考慮が必要であり、実際には一部&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では.NET Frameworkの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「間違い」&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見なされ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;シリアル化の方法は、オブジェクトがシリアル化可能かどうかに依存します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コミュニティでは、「ベスト」プラクティスをめぐって多くの議論があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際には、ICloneableが元々そうであると解釈されたようなすべての状況で、どのソリューションもすべてのベストプラクティスに適したサイズではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b0ed5f623380dd6ad9d925b235d263800849c07" translate="yes" xml:space="preserve">
          <source>The best is to implement an &lt;strong&gt;extension method&lt;/strong&gt; like</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最高の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張メソッド&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実装する&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こと&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="696953dccce4adf3ae167301944e4e76065b3a09" translate="yes" xml:space="preserve">
          <source>The best thing to do for cloning objects in C sharp!</source>
          <target state="translated">C sharpでオブジェクトをクローニングするのに最適なのは!</target>
        </trans-unit>
        <trans-unit id="bf487f5262ad04b996e29511e0a35c4ab3748b82" translate="yes" xml:space="preserve">
          <source>The extension method can be used as follow:</source>
          <target state="translated">拡張方法は以下のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="a99ffc2496c07c5a08ed57fd1f7f7e0552e18d8a" translate="yes" xml:space="preserve">
          <source>The following method of performing a deep clone is:</source>
          <target state="translated">ディープクローンを行う方法としては、以下のような方法があります。</target>
        </trans-unit>
        <trans-unit id="dbbcd6ba835275fa6d96111588cbe40a53ba07d0" translate="yes" xml:space="preserve">
          <source>The idea is that it serializes your object and then deserializes it into a fresh object. The benefit is that you don't have to concern yourself about cloning everything when an object gets too complex.</source>
          <target state="translated">これは、オブジェクトをシリアル化して、それを新しいオブジェクトにデシリアライズするという考え方です。利点は、オブジェクトが複雑になりすぎたときに、すべてのオブジェクトをクローンすることを気にする必要がないことです。</target>
        </trans-unit>
        <trans-unit id="aca838b2e03bc7b1ac6f3116fd7cebcd23924630" translate="yes" xml:space="preserve">
          <source>The output produced will be:</source>
          <target state="translated">生産されるアウトプットは</target>
        </trans-unit>
        <trans-unit id="11d9a4f4f642354e890324bcd8be9e56aba6d769" translate="yes" xml:space="preserve">
          <source>The reason not to use &lt;a href=&quot;http://referencesource.microsoft.com/mscorlib/system/icloneable.cs.html#fb795e239ce05299&quot;&gt;ICloneable&lt;/a&gt; is &lt;strong&gt;not&lt;/strong&gt; because it doesn't have a generic interface.  &lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;The reason not to use it is because it's vague&lt;/a&gt;.  It doesn't make clear whether you're getting a shallow or a deep copy; that's up to the implementer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://referencesource.microsoft.com/mscorlib/system/icloneable.cs.html#fb795e239ce05299&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理由は、ジェネリックインターフェイス&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ためではありません。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msdn.com/brada/archive/2004/05/03/125427.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それを使用しない理由は、それが曖昧だから&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;浅いコピーと深いコピーのどちらを取得するかは明確ではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは実装者次第です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3700a6686267f6677af0b7d02af2cc2b4dad31a9" translate="yes" xml:space="preserve">
          <source>The short answer is you inherit from the ICloneable interface and then implement the .clone function. Clone should do a memberwise copy and perform a deep copy on any member that requires it, then return the resulting object. This is a recursive operation ( it requires that all members of the class you want to clone are either value types or implement ICloneable and that their members are either value types or implement ICloneable, and so on).</source>
          <target state="translated">簡単に言うと、ICloneable インターフェースを継承して .clone 関数を実装するということです。cloneはメンバー単位でコピーを行い、それを必要とするメンバーに対してディープコピーを行い、結果のオブジェクトを返します。これは再帰的な操作です(クローンしたいクラスのすべてのメンバが値型かICloneableを実装している必要があり、そのメンバが値型かICloneableを実装している必要があります)。</target>
        </trans-unit>
        <trans-unit id="3d66f69c075cdad3f938b801287b8d10ee299246" translate="yes" xml:space="preserve">
          <source>The solution is faster then reflection, because members information has to be gathered only once, before &lt;code&gt;GetClone&amp;lt;T&amp;gt;&lt;/code&gt; is used for the first time for given type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;GetClone&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が特定の型&lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に対して初めて使用される&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前に、メンバー情報を1回だけ収集する必要があるため、ソリューションはリフレクションよりも高速&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="36ea8443350173fd15fbb1534b9edc7edba62173" translate="yes" xml:space="preserve">
          <source>The target object is now a copy of the source object.
Not simple enough? Create an extension method to use everywhere in your solution:</source>
          <target state="translated">ターゲットオブジェクトはソースオブジェクトのコピーになりました。単純ではありませんか?拡張メソッドを作成して、ソリューション内のあらゆる場所で使用します。</target>
        </trans-unit>
        <trans-unit id="1ce725210efa66422b32b09f551d9867f403bd27" translate="yes" xml:space="preserve">
          <source>Then define a &lt;code&gt;CloneBase&lt;/code&gt; type which implements a &lt;code&gt;protected virtual generic VirtualClone&lt;/code&gt; casting &lt;code&gt;MemberwiseClone&lt;/code&gt; to the passed-in type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;protected virtual generic VirtualClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実装&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;CloneBase&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義し、&lt;/font&gt; &lt;code&gt;MemberwiseClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を渡されたタイプに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キャストし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0f40b28a3acd118ab2aa4e50e238e03ef1da381" translate="yes" xml:space="preserve">
          <source>Then, call the demo from main:</source>
          <target state="translated">そして、メインからデモを呼び出します。</target>
        </trans-unit>
        <trans-unit id="8345538a3be0831e2f959f4de42f16a5788caf81" translate="yes" xml:space="preserve">
          <source>There is no need for interfaces, attributes or any other modification to the objects being cloned.</source>
          <target state="translated">複製されるオブジェクトにインターフェースや属性などの変更を加える必要はありません。</target>
        </trans-unit>
        <trans-unit id="3fbbfae5551efe8809dc3650a37dccd914f78c6e" translate="yes" xml:space="preserve">
          <source>This is my slightly modified version of his conclusion:</source>
          <target state="translated">これは彼の結論を私が少し修正したものです。</target>
        </trans-unit>
        <trans-unit id="e2527389cd7e00418a305634583fb96ead01a973" translate="yes" xml:space="preserve">
          <source>This method solved the problem for me:</source>
          <target state="translated">この方法で問題が解決しました。</target>
        </trans-unit>
        <trans-unit id="918273259e70d6d5921c33a1d7261a5e02d7b842" translate="yes" xml:space="preserve">
          <source>This works extremely well in practice, and allows us to decouple many threads (the producers) from one or more threads (the consumers).</source>
          <target state="translated">これは実際には非常にうまく機能し、多くのスレッド(生産者)を1つ以上のスレッド(消費者)から切り離すことができます。</target>
        </trans-unit>
        <trans-unit id="24648158c3671d5c6bb81a877c8017069ff08988" translate="yes" xml:space="preserve">
          <source>To understand how to do a deep copy using MemberwiseCopy, here is the demo project that was used to generate the times above:</source>
          <target state="translated">MemberwiseCopyを使ってディープコピーを行う方法を理解するために、上記の回を生成するために使用したデモプロジェクトをご紹介します。</target>
        </trans-unit>
        <trans-unit id="fb91e24fa52d8d2b32937bf04d843f730319a902" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="translated">Update</target>
        </trans-unit>
        <trans-unit id="461ad0994b7f1476e4374b7d94e949fb31f497e3" translate="yes" xml:space="preserve">
          <source>Use it like this: &lt;code&gt;MyObj a = DeepCopy(b);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のように使用します&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MyObj a = DeepCopy(b);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66dba841d560becc9816085a306d100cc85fee1a" translate="yes" xml:space="preserve">
          <source>Using Nested MemberwiseClone on a class almost as fast as copying a struct, and copying a struct is pretty darn close to the theoretical maximum speed .NET is capable of.</source>
          <target state="translated">Nested MemberwiseClone をクラスで使用すると、構造体をコピーするのとほぼ同じ速さになり、構造体をコピーすることは .NET が可能な理論上の最大速度にかなり近くなります。</target>
        </trans-unit>
        <trans-unit id="cd9b9255ce6351bcdef9cf350ab42b9ddeb1b4b9" translate="yes" xml:space="preserve">
          <source>Using this method you don't have to implement ISerializable or ICloneable on your objects.  This is common with the MVC/MVVM pattern, so simple tools like this have been created.</source>
          <target state="translated">このメソッドを使えば、オブジェクトにISerializableやICloneableを実装する必要はありません。これはMVCMVVMパターンと共通しているので、このようなシンプルなツールが作られています。</target>
        </trans-unit>
        <trans-unit id="bf4a30ae07c99708a387e9cb7d364ddf392a934a" translate="yes" xml:space="preserve">
          <source>Value types vs. References Types</source>
          <target state="translated">値の型と参照の型</target>
        </trans-unit>
        <trans-unit id="39aea8149aa5b8b103a934efea6b86b20143efef" translate="yes" xml:space="preserve">
          <source>Values of public properties with both get and set accessors</source>
          <target state="translated">get アクセサとset アクセサの両方を持つパブリックプロパティの値</target>
        </trans-unit>
        <trans-unit id="302396d82deab7fc7cad3e3483cf941fe922ad9c" translate="yes" xml:space="preserve">
          <source>Values of public, not readonly fields</source>
          <target state="translated">読み取り専用ではなく公開フィールドの値</target>
        </trans-unit>
        <trans-unit id="35552e90441d2a43d9a95ed338c59edd061cc0d0" translate="yes" xml:space="preserve">
          <source>We can have one  (or more) threads modifying a class that they own, then pushing a complete copy of this class into a &lt;code&gt;ConcurrentQueue&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つ（または複数）のスレッドが所有するクラスを変更し、このクラスの完全なコピーを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ConcurrentQueue&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プッシュすることができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="74a2934d5470ccafae6a9a85155a718db7cb3deb" translate="yes" xml:space="preserve">
          <source>We can have the following three implementations:</source>
          <target state="translated">以下の3つの実装を持つことができます。</target>
        </trans-unit>
        <trans-unit id="5faaa66e8ef875c00f94582775225a9753cd30ca" translate="yes" xml:space="preserve">
          <source>We have seen a lot of ideas from serialization over manual implementation to reflection and I want to propose a totally different approach using the &lt;a href=&quot;https://github.com/Toxantron/CGbR#cloneable&quot;&gt;CGbR Code Generator&lt;/a&gt;. The generate clone method is memory and CPU efficient and therefor 300x faster as the standard DataContractSerializer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;手動による実装のシリアル化からリフレクションまで多くのアイデアを見てきましたが、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/Toxantron/CGbR#cloneable&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CGbRコードジェネレーター&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用したまったく異なるアプローチを提案したいと思い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クローンの生成方法は、メモリとCPUの効率がよく、標準のDataContractSerializerと比べて300倍高速です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f14a8b1ccb62df7c67cbfa6a6ec698fcbb6cf25" translate="yes" xml:space="preserve">
          <source>We then have one (or more) threads pulling copies of these classes out and dealing with them.</source>
          <target state="translated">そして、1つ(またはそれ以上)のスレッドで、これらのクラスのコピーを取り出して、それらを処理しています。</target>
        </trans-unit>
        <trans-unit id="2179653cf382f636247d9d798b14e45a3f0b83ca" translate="yes" xml:space="preserve">
          <source>Well I was having problems using ICloneable in Silverlight, but I liked the idea of seralization, I can seralize XML, so I did this:</source>
          <target state="translated">えーと、SilverlightでICloneableを使うのは問題があったのですが、XMLをセラル化できるというアイデアが気に入ったので、これをやってみました。</target>
        </trans-unit>
        <trans-unit id="6f89392b3e36bbc23bb15c48aee701c6627bc6ba" translate="yes" xml:space="preserve">
          <source>What I usually do is simply make a &lt;code&gt;Copy&lt;/code&gt; method that does exactly what I want.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が通常行うことは、単純に、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自分のやりたいことを正確に実行&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d942cdfe72c37fd467fcda26d1a8debb74076bf2" translate="yes" xml:space="preserve">
          <source>Whilst the standard practice is to implement the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.icloneable.aspx&quot;&gt;&lt;code&gt;ICloneable&lt;/code&gt;&lt;/a&gt; interface (described &lt;a href=&quot;https://stackoverflow.com/questions/78536/cloning-objects-in-c/78568#78568&quot;&gt;here&lt;/a&gt;, so I won't regurgitate), here's a nice deep clone object copier I found on &lt;a href=&quot;http://www.codeproject.com/Articles/23832/Implementing-Deep-Cloning-via-Serializing-objects&quot;&gt;The Code Project&lt;/a&gt; a while ago and incorporated it in our stuff.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;標準的な方法は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.icloneable.aspx&quot;&gt; &lt;code&gt;ICloneable&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インターフェース&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実装すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/78536/cloning-objects-in-c/78568#78568&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明されて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いる&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、ここでは逆流しません）、ここで私が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しばらく前に&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.codeproject.com/Articles/23832/Implementing-Deep-Cloning-via-Serializing-objects&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードプロジェクトで&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見つけて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちのものに組み込んだ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;素晴らしいディープクローンオブジェクトコピー機を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;紹介し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0089e7b0bbe7b88be15358c0f719fcabdcb908bd" translate="yes" xml:space="preserve">
          <source>Why I choose &lt;em&gt;ICloneable&lt;/em&gt; (i.e. manually)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneable&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を選択する&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理由&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（つまり、手動）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c3adc3f6b41e8dec9c11551d20a3ba56b111a2ba" translate="yes" xml:space="preserve">
          <source>Yes, &lt;code&gt;MemberwiseClone&lt;/code&gt; makes a shallow copy, but the opposite of &lt;code&gt;MemberwiseClone&lt;/code&gt; isn't &lt;code&gt;Clone&lt;/code&gt;; it would be, perhaps, &lt;code&gt;DeepClone&lt;/code&gt;, which doesn't exist.  When you use an object through its ICloneable interface, you can't know which kind of cloning the underlying object performs.  (And XML comments won't make it clear, because you'll get the interface comments rather than the ones on the object's Clone method.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はい、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MemberwiseClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は浅いコピーを作成しますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;MemberwiseClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の反対は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Clone&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おそらく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;存在しない&lt;/font&gt;&lt;/font&gt; &lt;code&gt;DeepClone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でしょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ICloneableインターフェイスを介してオブジェクトを使用する場合、基になるオブジェクトがどのような種類の複製を実行するかはわかりません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（また、XMLコメントでは明確になりません。オブジェクトのCloneメソッドのコメントではなく、インターフェースのコメントが取得されるためです。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2ce8a229f8a057b64fa0f77a6062b9322b7d229" translate="yes" xml:space="preserve">
          <source>You can choose what should be copied from &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;newInstance&lt;/code&gt; using &lt;code&gt;CloningFlags&lt;/code&gt; enum:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;CloningFlags&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;列挙型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;source&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;newInstance&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何をコピーするかを選択できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cddb79c049ece38cdda3ce4fda281ec800770b8f" translate="yes" xml:space="preserve">
          <source>You may try running the following code:</source>
          <target state="translated">以下のコードを実行してみてください。</target>
        </trans-unit>
        <trans-unit id="b49293362c4a6609de12247a9ebbcb6d96508630" translate="yes" xml:space="preserve">
          <source>and then use it anywhere in the solution by</source>
          <target state="translated">を使って、ソリューション内の任意の場所で</target>
        </trans-unit>
        <trans-unit id="882fd29c021ebf4e995497b69386ec0dd2acc808" translate="yes" xml:space="preserve">
          <source>be informed that this Solution is pretty easy but it's not as performant as other solutions may be.</source>
          <target state="translated">このソリューションは非常に簡単ですが、他のソリューションほどのパフォーマンスはありません。</target>
        </trans-unit>
        <trans-unit id="acf770d8bb857e64ae02226262cb7c427088e91c" translate="yes" xml:space="preserve">
          <source>full code check in my post in another answer</source>
          <target state="translated">別の答えで私のポストにフルコードチェック</target>
        </trans-unit>
        <trans-unit id="129e7ca8e224fe2df88fa9b8ab2d02092049a4ce" translate="yes" xml:space="preserve">
          <source>if you'll cache it properly, than it'll deep clone 1000000 object by 4,6s (measured by Watcher).</source>
          <target state="translated">のようにキャッシュしておけば、4,6s(Watcherで計測)で100,000個のオブジェクトをディープクローンしてくれる。</target>
        </trans-unit>
        <trans-unit id="85a67b2f04cac24bb850986a47bf2a5498077678" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;http://valueinjecter.codeplex.com/wikipage?title=Faster%20Deep%20Cloning%20using%20SmartConventionInjection%20and%20FastMember&amp;amp;referringTitle=Home&quot;&gt;the valueinjecter deep cloning solution on CodePlex&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://valueinjecter.codeplex.com/wikipage?title=Faster%20Deep%20Cloning%20using%20SmartConventionInjection%20and%20FastMember&amp;amp;referringTitle=Home&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CodePlexのvalueinjecterディープクローニングソリューションを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0b5b0c8f480f30347ecc2af00ac4fd7ba722152b" translate="yes" xml:space="preserve">
          <source>than you take cached properties or add new to dictionary and use them simply</source>
          <target state="translated">キャッシュされたプロパティを取るか、辞書に新しいものを追加して、単にそれらを使用するよりも</target>
        </trans-unit>
        <trans-unit id="4fcf39b9da053daec9d46b71401baed4bebb9824" translate="yes" xml:space="preserve">
          <source>what has the same meaning like following c# code:</source>
          <target state="translated">何が次のc#コードのような同じ意味を持っています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
