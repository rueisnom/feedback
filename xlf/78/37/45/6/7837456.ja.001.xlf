<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/7837456">
    <body>
      <group id="7837456">
        <trans-unit id="a5c31be694049321e13bf0410e19b09e0c1576a2" translate="yes" xml:space="preserve">
          <source>(Note: 'scalar' here means values that can be compared directly using &lt;code&gt;===&lt;/code&gt; . So: numbers, strings, objects by reference, functions by reference. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators&quot;&gt;the MDN reference&lt;/a&gt; for more info about the comparison operators).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（注：ここでの「スカラー」とは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して直接比較できる値を意味します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。したがって、数値、文字列、参照によるオブジェクト、参照による関数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較演算子の詳細については&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、MDNリファレンス&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してください）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1e2af4b12e94d2012087fc2f4a88ebc6d8f1092" translate="yes" xml:space="preserve">
          <source>////// OR  ///////</source>
          <target state="translated">///OR ///</target>
        </trans-unit>
        <trans-unit id="20a4ba4f307fc112acadb9c77db56e49ffa907b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/7837456/how-to-compare-arrays-in-javascript/14853974?noredirect=1#comment59337127_14853974&quot;&gt;Samy Bencherif has prepared&lt;/a&gt; useful functions for the case you're searching for a specific object in nested arrays, which are available here: &lt;a href=&quot;https://jsfiddle.net/SamyBencherif/8352y6yw/&quot;&gt;https://jsfiddle.net/SamyBencherif/8352y6yw/&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/7837456/how-to-compare-arrays-in-javascript/14853974?noredirect=1#comment59337127_14853974&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Samy Bencherifは&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ネストされた配列で特定のオブジェクトを検索する場合に便利な関数を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用意&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しています。これは、&lt;/font&gt;&lt;a href=&quot;https://jsfiddle.net/SamyBencherif/8352y6yw/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//jsfiddle.net/SamyBencherif/8352y6yw/から&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入手できます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e24acb00db4f4e189fcf04104cea4055bf41d2ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Unrelated note:&lt;/em&gt; it is interesting to see people getting all trigger-happy John Waynes on the down vote button on perfectly legitimate answers to this question.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関連のないメモ：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問への完全に正当な回答に対する反対投票ボタンで、すべてのトリガーハッピーなJohn Waynesを見るのは興味深いことです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bee60379897f0223d2ae0b7211b8e3fc88a93f55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/19746771/308645&quot;&gt;every&lt;/a&gt; (69%)&lt;/strong&gt; by user2782196</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/19746771/308645&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ユーザー&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ごと&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（69％）&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f66f6102fb539502f0efb7ee30f1cc81ee936b76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/23555773/308645&quot;&gt;stringify&lt;/a&gt; (100%)&lt;/strong&gt; by radtek</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/23555773/308645&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;radtekによる&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;列化&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（100％）&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5048f387df1f50b3fdda6d4855d53a1c9c7ed360" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/39238456/308645&quot;&gt;half toString&lt;/a&gt; (90%)&lt;/strong&gt; by Victor Palomo</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/39238456/308645&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハーフtoString&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（90％）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; by Victor Palomo&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0756099e7e1c540fca042497df2a1882d16ea444" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/40496893/308645&quot;&gt;reduce&lt;/a&gt; (74%)&lt;/strong&gt; by DEIs</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/40496893/308645&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DEIによる&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;削減&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（74％）&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4012b1a858918d6719afb29ee536bdb980297e9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/42143065/308645&quot;&gt;join&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://stackoverflow.com/a/19001149/308645&quot;&gt;toString&lt;/a&gt; (78%)&lt;/strong&gt; by Gaizka Allende &amp;amp; vivek</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/42143065/308645&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;join&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;＆&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/19001149/308645&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;toString&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（78％）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; by Gaizka Allende＆vivek&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eba715d1da283e5c5036affc96ff06069cccee54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/7837725/308645&quot;&gt;while&lt;/a&gt; (67%)&lt;/strong&gt; by Tim Down</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://stackoverflow.com/a/7837725/308645&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;while&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（67％）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; by Tim Down&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa007e5c8785d58008cdc05286293fc5b0530ba1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; the examples below assumes the arrays are sorted, single-dimensional arrays. &lt;code&gt;.length&lt;/code&gt; comparison has been removed for a common benchmark (add &lt;code&gt;a1.length === a2.length&lt;/code&gt; to any of the suggestions and you will get a ~10% performance boost). Choose whatever solutions that works best for you knowing the speed and limitation of each.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アレイは、単一次元アレイをソートすることを前提としてい以下の実施例を。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.length&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較が一般的なベンチマークから削除されました（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1.length === a2.length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を提案に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加すると、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パフォーマンスが最大&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 10％向上します）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それぞれの速度と制限を把握しているため、最適なソリューションを選択してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="feee14cc8cd51f3066d4c59c791e68ba0ffbfa6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Recursive&lt;/strong&gt; &amp;amp; works on &lt;strong&gt;NESTED&lt;/strong&gt; arrays:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再帰的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネストされた&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動作し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a648cd0606cca5d79438d4f156e8c36af2fbb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="916f43bd3477c4285b8df77abca14599ec1ca5e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Your code will not handle the case appropriately when both arrays have same elements but not in same order.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方の配列に同じ要素があるが同じ順序ではない場合、コードはケースを適切に処理しません。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7b02b416b7c991f993fb857ac68d03416df103c4" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;I believe that larger amounts of data should be always stored in arrays, not in objects. However if you use objects, they can be partially compared too.&lt;br/&gt;
&lt;strong&gt;Here's how:&lt;/strong&gt;&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大量のデータは常にオブジェクトではなく配列に格納する必要があると思います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、オブジェクトを使用する場合は、部分的に比較することもできます。&lt;/font&gt;&lt;/font&gt;&lt;br/&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法は次のとおりです。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="b50eafe7d6c61170cda559607f0d8cf9efe5d685" translate="yes" xml:space="preserve">
          <source>A simple approach:</source>
          <target state="translated">シンプルなアプローチ。</target>
        </trans-unit>
        <trans-unit id="e303b48c479c721507775be3f1e4069e84ce39f9" translate="yes" xml:space="preserve">
          <source>Already some great answers.But i would like to share anther idea which has proven to be reliable in comparing arrays. We can compare two array using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;strong&gt;JSON.stringify ( )&lt;/strong&gt;&lt;/a&gt; . It will create a string out the the array and thus compare two obtained strings from two array for equality</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すでにいくつかの素晴らしい答えがありますが、配列の比較で信頼できることが証明されている別のアイデアを共有したいと思います。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.stringify（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して2つの配列を比較でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列から文字列を作成するため、2つの配列から取得した2つの文字列が等しいかどうかを比較します&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc418a94a6eea94547ef1cd57098ee233693027d" translate="yes" xml:space="preserve">
          <source>Another approach with very few code (using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&quot;&gt;Array reduce&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot;&gt;Array includes&lt;/a&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードが非常に少ない別のアプローチ（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array reduce&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Array include&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e7d5e9a586bf7415cc943b775ad88c35166fc2d" translate="yes" xml:space="preserve">
          <source>Answering Dmitry Grinko's question: &quot;Why did you use spread operator ( ... ) here - ...new Set ? It doesn't work&quot;</source>
          <target state="translated">Dmitry Grinkoさんの質問にお答えします。&quot;なぜここでスプレッド演算子(...)を使用したのですか-...new Set?それは動作しません&quot;</target>
        </trans-unit>
        <trans-unit id="ca0fad60553624b6d0dfed3bceaab06985ca0668" translate="yes" xml:space="preserve">
          <source>Arbitrary comparison (example)</source>
          <target state="translated">任意の比較(例</target>
        </trans-unit>
        <trans-unit id="5d67b5347dd354d895e9a75422ded8b1acc12c64" translate="yes" xml:space="preserve">
          <source>As the type suggests, &lt;code&gt;arrayCompare&lt;/code&gt; takes comparison function, &lt;code&gt;f&lt;/code&gt;, and two input arrays, &lt;code&gt;xs&lt;/code&gt; and &lt;code&gt;ys&lt;/code&gt;. For the most part, all we do is call &lt;code&gt;f (x) (y)&lt;/code&gt; for each element in the input arrays. We return an early &lt;code&gt;false&lt;/code&gt; if the user-defined &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; &amp;ndash; thanks to &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;'s short-circuit evaluation. So yes, this means the comparator can stop iteration early and prevent looping through the rest of the input array when unnecessary.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプが示すように、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は比較関数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と2つの入力配列&lt;/font&gt;&lt;/font&gt; &lt;code&gt;xs&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ys&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;取り&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの場合、行うのは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;入力配列の各要素&lt;/font&gt;&lt;/font&gt; &lt;code&gt;f (x) (y)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出すことだけです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の短絡評価の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おかげで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ユーザー定義の&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、初期の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、これはコンパレーターが反復を早期に停止し、不要な場合に残りの入力配列をループしないようにすることができることを意味します。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a030f672768f86030fd9d48ec5fdf1b4f887448" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;arrayDeepCompare&lt;/code&gt; is curried, we can partially apply it like we did in the previous examples too</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;arrayDeepCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はカリー化されて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いるため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、前の例で行ったように部分的に適用することもできます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2e5ed4568f08781f6f681d09e5e8c65a62574de" translate="yes" xml:space="preserve">
          <source>Bonus: Nested arrays with &lt;code&gt;indexOf&lt;/code&gt; and &lt;code&gt;contains&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ボーナス：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;indexOf&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt; &lt;code&gt;contains&lt;/code&gt; を含む&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネストされた配列&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24235633044e068519558d26dd0cf47fcfbd684d" translate="yes" xml:space="preserve">
          <source>Building off Tom&amp;aacute;&amp;scaron; Zato's answer, I agree that just iterating through the arrays is the fastest.  Additionally (like others have already stated), the function should be called equals/equal, not compare.  In light of this, I modified the function to handle comparing arrays for similarity - i.e. they have the same elements, but out of order - for personal use, and thought I'd throw it on here for everyone to see.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tom&amp;aacute;&amp;scaron;Zatoの答えを基にして、配列を反復するだけが最速であることに同意します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに（他の人がすでに述べているように）、関数は比較ではなく、等しい/等しいと呼ばれるべきです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを踏まえて、配列の類似性を比較するために関数を変更しました。つまり、配列は同じ要素ですが、順序が正しくありません-個人的な使用のために、ここでそれをすべての人に見せると思います。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c8d35e2e01011aa69564ca701b4936fdf9c7d60" translate="yes" xml:space="preserve">
          <source>But fails on:</source>
          <target state="translated">しかし、失敗する。</target>
        </trans-unit>
        <trans-unit id="1adcf9fce54c267bc542ea5aac6f642809e57a63" translate="yes" xml:space="preserve">
          <source>Comparing 2 arrays:</source>
          <target state="translated">2つの配列を比較します。</target>
        </trans-unit>
        <trans-unit id="05872b40fae17e6adaa80bdf5d2b29fe28d4d4ea" translate="yes" xml:space="preserve">
          <source>Comparing arrays:</source>
          <target state="translated">配列を比較します。</target>
        </trans-unit>
        <trans-unit id="2fc4770bfe1abe95f04226ff938387089ff37e79" translate="yes" xml:space="preserve">
          <source>Comparing objects:</source>
          <target state="translated">オブジェクトを比較する。</target>
        </trans-unit>
        <trans-unit id="00c5252c394597f9ca37e455c6ff334c93f1a9f0" translate="yes" xml:space="preserve">
          <source>Consider this code:</source>
          <target state="translated">このコードを考えてみてください。</target>
        </trans-unit>
        <trans-unit id="4b2cdb687185ea9120bcdd9330075e4e3d3b25f9" translate="yes" xml:space="preserve">
          <source>Deep array with objects? Not a problem. We built highly versatile, generic functions, so they'll work in a wide variety of use cases.</source>
          <target state="translated">オブジェクトを使った深い配列?問題ありません。汎用性の高い汎用的な関数を構築したので、さまざまなユースケースで動作します。</target>
        </trans-unit>
        <trans-unit id="01f2e5e55f6f115383876e4431cdd039d47832bd" translate="yes" xml:space="preserve">
          <source>Deep comparison (recursive)</source>
          <target state="translated">深い比較(再帰的</target>
        </trans-unit>
        <trans-unit id="f3260b12d96a81b1c18b2effe5e5a928f6cae7d1" translate="yes" xml:space="preserve">
          <source>Does that make it the &quot;right&quot; solution for you ? That's up for &lt;em&gt;you&lt;/em&gt; to decide. And no one else can do that for you; only you know what your needs are. In almost all cases, I value straightforward, practical, and versatile code over clever and fast kind. What you value might differ, so pick what works for you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それはあなたにとって「正しい」解決策になりますか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなた&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が決めることです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして、他の誰もあなたのためにそれを行うことはできません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなただけがあなたのニーズが何であるかを知っています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどすべての場合で、私は、賢くて速い種類よりも、単純で実用的で用途の広いコードを重視しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何を評価するかは異なる可能性があるため、自分に合ったものを選択してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5301648dcf6b53cefc9ed52999aaa92d4603cae0" translate="yes" xml:space="preserve">
          <source>Edit</source>
          <target state="translated">Edit</target>
        </trans-unit>
        <trans-unit id="41421552ae0e2d4d7de18420137d1ac132f2013f" translate="yes" xml:space="preserve">
          <source>Edit1.</source>
          <target state="translated">Edit1.</target>
        </trans-unit>
        <trans-unit id="5e297a41e8ef5ac08adf9ee0810c2244721fa92b" translate="yes" xml:space="preserve">
          <source>Eg:</source>
          <target state="translated">Eg:</target>
        </trans-unit>
        <trans-unit id="754514fa359cf08c9b472c3063cc1e2be9054c1b" translate="yes" xml:space="preserve">
          <source>Even though this has a lot of answers, one that I believe to be of help:</source>
          <target state="translated">これには多くの答えがありますが、私が参考になると信じているものがあります。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="a0b28b9c717fd981fd1a6389fbfa2841387db183" translate="yes" xml:space="preserve">
          <source>Extending Tom&amp;aacute;&amp;scaron; Zato idea. Tomas's Array.prototype.compare should be infact called  Array.prototype.compareIdentical.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tom&amp;aacute;&amp;scaron;Zatoのアイデアを拡張する。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TomasのArray.prototype.compareは、そのままArray.prototype.compareIdenticalと呼ばれるはずです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dd7722dd5de17bb1851936620fbff418e2d86b12" translate="yes" xml:space="preserve">
          <source>For array of numbers try</source>
          <target state="translated">数値の配列の場合は、次のようにしてみてください。</target>
        </trans-unit>
        <trans-unit id="d7751d38c1349312ec0eb8623087b991a9589286" translate="yes" xml:space="preserve">
          <source>For most arrays it's still faster than most of serialization solutions. It's probably the fastest compare method for arrays of object records.</source>
          <target state="translated">ほとんどの配列では、ほとんどのシリアライズソリューションよりも高速です。オブジェクトレコードの配列の比較方法としては、おそらくこれが一番速いでしょう。</target>
        </trans-unit>
        <trans-unit id="2e1097465a98afb22d74f0abd0c1c24452cfeb8c" translate="yes" xml:space="preserve">
          <source>From what I read from the comments, sorting the array and comparing may give accurate result:</source>
          <target state="translated">コメントを読んだ限りでは、配列を並べ替えて比較すると正確な結果が得られるかもしれません。</target>
        </trans-unit>
        <trans-unit id="a0366366c04e80115eabd4c11ad461837b393a5b" translate="yes" xml:space="preserve">
          <source>Generics offer reusability</source>
          <target state="translated">ジェネリックは再利用可能</target>
        </trans-unit>
        <trans-unit id="4473d8c7973131bac49a28c732cfd6a2f2737d26" translate="yes" xml:space="preserve">
          <source>Have a look at my code with your example which compares two arrays whose elements are numbers, you might modify or extend it for other element types (by utilising .join() instead of .toString()).</source>
          <target state="translated">要素が数値である2つの配列を比較している例の私のコードを見てみてください。</target>
        </trans-unit>
        <trans-unit id="50ca1d397b1470cca59c5d24ccad7e80ba7438af" translate="yes" xml:space="preserve">
          <source>Here is a Typescript version:</source>
          <target state="translated">こちらはTypescript版です。</target>
        </trans-unit>
        <trans-unit id="41688736df7b6338ffb256200b5b8207484cbaaa" translate="yes" xml:space="preserve">
          <source>Here is better (in my opinion) version:</source>
          <target state="translated">こちらの方が良い(私の意見ですが)バージョンです。</target>
        </trans-unit>
        <trans-unit id="274e4a9645ddbb2d5e13baafa3369667e246d010" translate="yes" xml:space="preserve">
          <source>Here's an optimized array comparison function that compares corresponding elements of each array in turn using strict equality and does not do recursive comparison of array elements that are themselves arrays, meaning that for the above example, &lt;code&gt;arraysIdentical(a, b)&lt;/code&gt; would return &lt;code&gt;false&lt;/code&gt;. It works in the general case, which JSON- and &lt;code&gt;join()&lt;/code&gt;-based solutions will not:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、厳密な等価性を使用して各配列の対応する要素を比較し、それ自体が配列である配列要素の再帰的な比較を行わない最適化された配列比較関数を示します。つまり、上記の例では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arraysIdentical(a, b)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは一般的なケースで機能しますが、JSON &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベース&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;join()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベースのソリューションでは機能しません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7b9a792a549c344e6c1065aa63cf5bd10c7c1e6" translate="yes" xml:space="preserve">
          <source>Herer's my solution:</source>
          <target state="translated">これが私の解決策だ</target>
        </trans-unit>
        <trans-unit id="4880aebaf6aa385fea706ddc6e8ffe5777cd0688" translate="yes" xml:space="preserve">
          <source>How to compare arrays in JavaScript</source>
          <target state="translated">JavaScriptで配列を比較する方法</target>
        </trans-unit>
        <trans-unit id="c2c461c10299b7e5af66b42d085e97cb25520ecd" translate="yes" xml:space="preserve">
          <source>However, if you just use object structure to contain data, comparing is still possible:</source>
          <target state="translated">しかし、オブジェクト構造を使ってデータを格納するだけであれば、比較は可能です。</target>
        </trans-unit>
        <trans-unit id="e594039d2af425b904d7515249c8e142700c2233" translate="yes" xml:space="preserve">
          <source>However, remember that this one is to serve in comparing JSON like data, not class instances and other stuff. If you want to compare mor complicated objects, look at &lt;a href=&quot;https://stackoverflow.com/a/1144249/607407&quot;&gt;this answer and it's superlong function&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、これはJSONなどのデータを比較するためのものであり、クラスインスタンスやその他のものではないことを覚えておいてください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;複雑なオブジェクトを比較したい場合は、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1144249/607407&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この答えを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見てください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは超長関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="022250769cc49731180c95c90b0c20271c103e22" translate="yes" xml:space="preserve">
          <source>I believe in plain &lt;code&gt;JS&lt;/code&gt; and with &lt;code&gt;ECMAScript 2015&lt;/code&gt;, which is sweet and simple to understand.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はプレーンな&lt;/font&gt;&lt;/font&gt; &lt;code&gt;JS&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ECMAScript 2015&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を信じています&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。ECMAScript2015&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、甘くて理解しやすいものです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="499e6cd006c66758e815aca88b41ac241a3a308b" translate="yes" xml:space="preserve">
          <source>I have been running performance tests on some of the more simple suggestions proposed here with the following &lt;a href=&quot;http://jsben.ch/#/1Mq8s&quot;&gt;results&lt;/a&gt; (fast to slow):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで提案されたいくつかのより単純な提案のパフォーマンステストを実行して、次の&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://jsben.ch/#/1Mq8s&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果が得られました&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（速いから遅い）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad90b5ecd28a094e1a832e3c44d60865d285a5a2" translate="yes" xml:space="preserve">
          <source>I like to use the Underscore library for array/object heavy coding projects ... in Underscore and Lodash whether you're comparing arrays or objects it just looks like this:</source>
          <target state="translated">私は配列オブジェクトの重いコーディングプロジェクトにUnderscoreライブラリを使うのが好きです...UnderscoreとLodashでは、配列やオブジェクトを比較する場合はこのようになります。</target>
        </trans-unit>
        <trans-unit id="479a61cd5d19ac2535e06c7c3c4abd803c3034f2" translate="yes" xml:space="preserve">
          <source>I made a &lt;a href=&quot;http://jsfiddle.net/Darker/SBtu2/&quot;&gt;little test tool for both of the functions&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://jsfiddle.net/Darker/SBtu2/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方の機能の小さなテストツール&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を作成しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d1ec46e0b6d5b6cd76ad87976c34a5d4b253bba" translate="yes" xml:space="preserve">
          <source>I think it's wrong to say a particular implementation is &quot;The Right Way&amp;trade;&quot; if it's only &quot;right&quot; (&quot;correct&quot;) in contrast to a &quot;wrong&quot; solution. Tom&amp;aacute;&amp;scaron;'s solution is a clear improvement over string-based array comparison, but that doesn't mean it's objectively &quot;right&quot;. What is &lt;em&gt;right&lt;/em&gt; anyway? Is it the fastest? Is it the most flexible? Is it the easiest to comprehend? Is it the quickest to debug? Does it use the least operations? Does it have any side effects? No one solution can have the best of all the things.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「間違った」ソリューションとは対照的に、「正しい」（「正しい」）だけである場合、特定の実装が「The Right Way&amp;trade;」であると言うのは間違っていると思います。トマーシュのソリューションは、文字列ベースの配列比較よりも明らかに改善されていますが、それが客観的に「正しい」という意味ではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とにかく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正しい&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？最速ですか？最も柔軟性がありますか？理解するのが最も簡単ですか？デバッグが最速ですか？最小限の操作を使用していますか？副作用はありますか？ 1つのソリューションがすべてのものの中で最高のものを持つことはできません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7dfaefb81a6cb79c18a8d7f99bd17ad5dbe2f3b" translate="yes" xml:space="preserve">
          <source>I'd like to compare two arrays... ideally, &lt;strong&gt;efficiently&lt;/strong&gt;. &lt;strong&gt;Nothing
  fancy&lt;/strong&gt;, just true if they are identical, and false if not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つのアレイを比較したい...理想的には、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;効率的に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特別なもの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何もありませ&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ん。それらが同一である場合は真、そうでない場合は偽です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26d301072bea13ba7702d3cb908d9d28fb622e43" translate="yes" xml:space="preserve">
          <source>I'd like to compare two arrays... ideally, efficiently. Nothing fancy, just &lt;code&gt;true&lt;/code&gt; if they are identical, and &lt;code&gt;false&lt;/code&gt; if not. Not surprisingly, the comparison operator doesn't seem to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つのアレイを比較したい...理想的には、効率的に。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特別なことは何もありませ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ん。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらが同一で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;真&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そうでない場合は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当然のことながら、比較演算子は機能していないようです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57fad3eb06f08f77de320c9c960be134004f417d" translate="yes" xml:space="preserve">
          <source>I've also written up a quick jsfiddle with the function and this example:</source>
          <target state="translated">また、関数とこの例を使って簡単なjsfiddleを書いてみました。</target>
        </trans-unit>
        <trans-unit id="90d44f844ac30e3753d832136998245b309dae5e" translate="yes" xml:space="preserve">
          <source>I've stated above, that two object &lt;strong&gt;instances&lt;/strong&gt; will never be equal, even if they contain same data at the moment:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上で述べたように、2つのオブジェクト&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インスタンス&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、たとえ現時点で同じデータが含まれていても、決して等しくなることはありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49fef65e4ec7c264658775eb17a1eccb22f5a252" translate="yes" xml:space="preserve">
          <source>If the order should remain the same, than it is just a loop, no sort is needed.</source>
          <target state="translated">順番が変わらない場合は、ただのループであり、ソートは必要ありません。</target>
        </trans-unit>
        <trans-unit id="75030758244b3950179588e06abf47eefc021171" translate="yes" xml:space="preserve">
          <source>If they are two arrays of numbers or strings only, this is a quick one-line one</source>
          <target state="translated">それらが数字や文字列だけの2つの配列であれば、これは1行で簡単にできます。</target>
        </trans-unit>
        <trans-unit id="59cdb1d5570deff6e3b8b613797251f7ab8faf0c" translate="yes" xml:space="preserve">
          <source>If you are using a testing framework like &lt;a href=&quot;http://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; with the &lt;a href=&quot;http://chaijs.com/&quot;&gt;Chai&lt;/a&gt; assertion library, you can use &lt;a href=&quot;http://chaijs.com/api/bdd/#deep&quot;&gt;deep&lt;/a&gt; equality to compare arrays.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたのようなテストフレームワークを使用している場合は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://mochajs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;モカ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://chaijs.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チャイの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;アサーション・ライブラリを、あなたは使用することができ&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://chaijs.com/api/bdd/#deep&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、深い&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較アレイへの平等を。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="100e85ec63e11974e2af0a51ea19efd0634353ac" translate="yes" xml:space="preserve">
          <source>If you want to compare also the equality of order:</source>
          <target state="translated">秩序の平等性も比較したいなら。</target>
        </trans-unit>
        <trans-unit id="9a86889ccd45b51d29414c6185681a26420c10c6" translate="yes" xml:space="preserve">
          <source>In my case compared arrays contain only numbers and strings. This function will show you if arrays contain same elements.</source>
          <target state="translated">私の場合、比較された配列には数字と文字列しか含まれていません。この関数は、配列に同じ要素が含まれているかどうかを表示します。</target>
        </trans-unit>
        <trans-unit id="36aa0bf36342bda94244d1021b18e70a66e86714" translate="yes" xml:space="preserve">
          <source>In my opinion, the best kind of code doesn't even need comments, and this is no exception. There's so little happening here that you can understand the behaviour of this procedure with almost no effort at all. Sure, some of the ES6 syntax might seem foreign to you now, but that's only because ES6 is relatively new.</source>
          <target state="translated">私の考えでは、最高の種類のコードにはコメントすら必要ありませんし、これも例外ではありません。ここではほとんど何も起こっていないので、ほとんど何の努力もせずにこのプロシージャの振る舞いを理解することができます。確かに、ES6の構文の中には今では外国に見えるものもあるかもしれませんが、それはES6が比較的新しいからに他なりません。</target>
        </trans-unit>
        <trans-unit id="790daf2a6cb9757bd25fc86e4ac1bf83e084eb12" translate="yes" xml:space="preserve">
          <source>In order to work with that value you'd need to use some Set properties (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&lt;/a&gt;).
On the other hand, when you use this code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その値を操作するには、いくつかのSetプロパティを使用する必要があります（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Setを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方、このコードを使用する場合：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d882a4fc7f1603af39e0b04b918e15860481248" translate="yes" xml:space="preserve">
          <source>In the first example it's being tested that an element is included</source>
          <target state="translated">最初の例では、要素が含まれているかどうかをテストしています。</target>
        </trans-unit>
        <trans-unit id="17dde33b9089f8162a348e082e62dcab5ec3e640" translate="yes" xml:space="preserve">
          <source>In the spirit of the original question:</source>
          <target state="translated">元の質問の精神で</target>
        </trans-unit>
        <trans-unit id="f8fa73b4eb85dccd592b78624d8be6e5207257bc" translate="yes" xml:space="preserve">
          <source>Is it the fastest? Nope. But it probably doesn't need to be either. If speed is the only metric used to measure the quality of our code, a lot of really great code would get thrown away &amp;mdash; That's why I'm calling this approach &lt;strong&gt;The Practical Way&lt;/strong&gt;. Or maybe to be more fair, &lt;em&gt;A&lt;/em&gt; Practical Way. This description is suitable for this answer because I'm not saying this answer is only practical in comparison to some other answer; it is objectively true. We've attained a high degree of practicality with very little code that's very easy to reason about. No other code can say we haven't earned this description.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最速ですか？いいえ。しかし、おそらくどちらかである必要はありません。コードの品質を測定するために使用される唯一の測定基準が速度である場合、非常に優れたコードの多くが破棄されます。そのため、このアプローチを&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実践的な方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼んでい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。それとも、より公正であると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実用的な方法。この答えは他のいくつかの答えと比較して実用的であるとは言わないので、この説明はこの答えに適しています。それは客観的に真実です。推論が非常に簡単な非常に小さなコードで高度な実用性を達成しました。他のコードでは、この説明を得ていないと言うことはできません。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab7554862387a41e5b4dc133c0aabaad9cf5ced9" translate="yes" xml:space="preserve">
          <source>It is not stated in the question how the structure of the array is going to look like, so If you know for sure that you &lt;strong&gt;won't have nested arrays nor objects&lt;/strong&gt; in you array (it happened to me, that's why I came to this answer) the above code will work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列の構造がどのように見えるかという質問には記載されていないので、配列内に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネストされた配列もオブジェクトもない&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こと&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;確実にわかっている場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（それが私に起こったので、これが私がこれに至った理由です）回答）上記のコードは機能します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e32b200a6c43d7a9fa654f168cf6b7feb027c79f" translate="yes" xml:space="preserve">
          <source>It passes on:</source>
          <target state="translated">受け継がれていく。</target>
        </trans-unit>
        <trans-unit id="d4e2f515eb2f1a5e9dd9ef704d07a891402948e7" translate="yes" xml:space="preserve">
          <source>It's unclear what you mean by &quot;identical&quot;. For example, are the arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; below identical (note the nested arrays)?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「同一」の意味がわかりません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、配列&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は同じですか（ネストされた配列に注意してください）？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98c3df0e853b40d0e6117701671d222e4220dc10" translate="yes" xml:space="preserve">
          <source>JSON encoding each array does, but is there a faster or &quot;better&quot; way to simply compare arrays without having to iterate through each value?</source>
          <target state="translated">各配列をJSONエンコードすることはできますが、各値を繰り返し処理することなく、単純に配列を比較するためのより高速な方法や「より良い」方法はありますか?</target>
        </trans-unit>
        <trans-unit id="fbbeb58c7e9f5bf711c79a5f58d0ae8a87dd0b59" translate="yes" xml:space="preserve">
          <source>Less is More</source>
          <target state="translated">Less is More</target>
        </trans-unit>
        <trans-unit id="6558ae1206a0e09183a5ae31f5fc7aee461efac2" translate="yes" xml:space="preserve">
          <source>Let's test it!</source>
          <target state="translated">テストしてみよう!</target>
        </trans-unit>
        <trans-unit id="f5812df3c33804f7b24f6a4f73a6490d1b91b8c5" translate="yes" xml:space="preserve">
          <source>Lodash isEqual docs</source>
          <target state="translated">Lodash isEqual docs</target>
        </trans-unit>
        <trans-unit id="1174ec7060ef61645dd789b3aab75d720c4ac96d" translate="yes" xml:space="preserve">
          <source>Loose comparison</source>
          <target state="translated">緩やかな比較</target>
        </trans-unit>
        <trans-unit id="4ae0be8d9969e0ac17de34aca47ff262d06f4172" translate="yes" xml:space="preserve">
          <source>My answer will approach the problem differently. I'll start with a generic &lt;code&gt;arrayCompare&lt;/code&gt; procedure that is only concerned with stepping through the arrays. From there, we'll build our other basic comparison functions like &lt;code&gt;arrayEqual&lt;/code&gt; and &lt;code&gt;arrayDeepEqual&lt;/code&gt;, etc</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の答えは別の方法で問題に取り組みます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、配列のステップ実行のみに関係&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する一般的な&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;arrayCompare&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロシージャ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から始め&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そこから、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayDeepEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他の基本的な比較関数を作成します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57ffd7aca68443da7022b94dfd380b0f3ede761b" translate="yes" xml:space="preserve">
          <source>My old answer was more focused on decomposing &lt;code&gt;arrayEqual&lt;/code&gt; into tiny procedures. It's an interesting exercise, but not really the best (most practical) way to approach this problem. If you're interested, you can see this revision history.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の以前の答えは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を小さなプロシージャ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に分解することに重点を置いていました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは興味深い演習ですが、この問題に取り組むための最良の（最も実用的な）方法ではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;興味があれば、この変更履歴を見ることができます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0aab4b2dc4fa55ca71a975c33e47a380b0c62aaa" translate="yes" xml:space="preserve">
          <source>Next, using our &lt;code&gt;arrayCompare&lt;/code&gt; function, we can easily create other functions we might need. We'll start with the elementary &lt;code&gt;arrayEqual&lt;/code&gt; &amp;hellip;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、必要な他の関数を簡単に作成できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本的な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;hellip; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から始めます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f28ddd4f3dddbdf765fbf86087224c94bdf7303a" translate="yes" xml:space="preserve">
          <source>Notice that we also define &lt;code&gt;equal&lt;/code&gt; as it's own function. This highlights the role of &lt;code&gt;arrayCompare&lt;/code&gt; as a higher-order function to utilize our first order comparator in the context of another data type (Array).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;equal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は独自の関数である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、これも定義していることに注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別のデータ型（配列）のコンテキストで一次コンパレーターを利用する高次関数として&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の役割を強調&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6d83d0086c80b9766216cf380d4fadd17f56e69" translate="yes" xml:space="preserve">
          <source>Now what if you have an array of objects or something ? Maybe you want to consider those arrays as &quot;equal&quot; if each object has the same &lt;code&gt;id&lt;/code&gt; value &amp;hellip;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの配列などがある場合はどうでしょうか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各オブジェクトに同じ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;id&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がある場合、これらの配列を「等しい」と見なしたいと思うかもしれません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;hellip;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26dcb2ee47068db8612480cf2728cd2bce0ca79f" translate="yes" xml:space="preserve">
          <source>Object comparison (example)</source>
          <target state="translated">オブジェクトの比較(例</target>
        </trans-unit>
        <trans-unit id="3a270693e01757a4354b2a676c36b0cd5f6119d5" translate="yes" xml:space="preserve">
          <source>On the same lines as JSON.encode is to use join().</source>
          <target state="translated">JSON.encodeと同じ行にjoin()を使うことです。</target>
        </trans-unit>
        <trans-unit id="35513e96450968d1eadf3307e3322525e4e0d662" translate="yes" xml:space="preserve">
          <source>Only problem is if you care about types which the last comparison tests.
If you care about types, you will have to loop.</source>
          <target state="translated">唯一の問題は、最後の比較テストでテストされる型を気にする場合です。型を気にするとループしなければなりません。</target>
        </trans-unit>
        <trans-unit id="c4bfcbcd33ee247db207d6ada9fe0e15e1ed5537" translate="yes" xml:space="preserve">
          <source>Or what if you wanted to do some other kind of kind of completely arbitrary comparison ? Maybe I want to know if each &lt;code&gt;x&lt;/code&gt; is greater than each &lt;code&gt;y&lt;/code&gt; &amp;hellip;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、他の種類の完全に恣意的な比較を実行したい場合はどうなりますか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多分私&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が各&lt;/font&gt;&lt;/font&gt; &lt;code&gt;y&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;よりも大きい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かどうか知りたいです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;hellip;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7499eb9db303be8df51d5dc77c4e9960d8439af" translate="yes" xml:space="preserve">
          <source>Please do note that you are no longer comparing the object but the string representation of the object. It may not be exactly what you want.</source>
          <target state="translated">オブジェクトを比較しているのではなく、オブジェクトの文字列表現を比較していることに注意してください。正確にはご希望通りではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="b74a13f2967c3af9ced9e57f9fd062f5605d3c30" translate="yes" xml:space="preserve">
          <source>Rr, in ECMAScript 6 / CoffeeScript / TypeScript with Arrow Functions:</source>
          <target state="translated">Rr,ECMAScript 6 CoffeeScript TypeScript with Arrow Functions で。</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">コードスニペットを表示</target>
        </trans-unit>
        <trans-unit id="29e9bc511d33e2ad9769f3bfed9bdc4b1853b09f" translate="yes" xml:space="preserve">
          <source>Simple as that. &lt;code&gt;arrayEqual&lt;/code&gt; can be defined with &lt;code&gt;arrayCompare&lt;/code&gt; and a comparator function that compares &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;b&lt;/code&gt; using &lt;code&gt;===&lt;/code&gt; (for strict equality).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのような単純な。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンパレーター関数で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（厳密に等しい場合）。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cd9d19285b51bc8fc62648242bcc32ffb430098" translate="yes" xml:space="preserve">
          <source>Simple as that. Here I've used vanilla JS objects, but this type of comparator could work for &lt;em&gt;any&lt;/em&gt; object type; even your custom objects. Tom&amp;aacute;&amp;scaron;'s solution would need to be completely reworked to support this kind of equality test</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのような単純な。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここではバニラJSオブジェクトを使用しましたが、このタイプのコンパレータは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どの&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトタイプ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も機能し&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;カスタムオブジェクトも。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このような同等性テストをサポートするには、トマシュのソリューションを完全に作り直す必要があります&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06d2d093cb445deb2402943ea17d0c3aa2cbce24" translate="yes" xml:space="preserve">
          <source>Simple as that. We build a deep comparator using &lt;em&gt;another&lt;/em&gt; higher-order function. This time we're wrapping &lt;code&gt;arrayCompare&lt;/code&gt; using a custom comparator that will check if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are arrays. If so, reapply &lt;code&gt;arrayDeepCompare&lt;/code&gt; otherwise compare &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to the user-specified comparator (&lt;code&gt;f&lt;/code&gt;). This allows us to keep the deep comparison behavior separate from how we actually compare the individual elements. Ie, like the example above shows, we can deep compare using &lt;code&gt;equal&lt;/code&gt;, &lt;code&gt;looseEqual&lt;/code&gt;, or any other comparator we make.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのような単純な。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;高次関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してディープコンパレータを作成し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。今回&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かどうかをチェックするカスタムコンパ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;arrayCompare&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ラップし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ています。そうであれば、&lt;/font&gt; &lt;code&gt;arrayDeepCompare&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再適用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そうでない場合&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をユーザー指定のコンパレーター（&lt;/font&gt; &lt;code&gt;f&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;）と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。これにより、個々の要素を実際に比較する方法とは別に、深い比較動作を維持できます。つまり、上記の例のように、&lt;/font&gt; &lt;code&gt;equal&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;looseEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;、またはその他のコンパレータを使用して詳細比較を行うことができます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3124b8504e1d7a909add8778c951b5250405c821" translate="yes" xml:space="preserve">
          <source>Some test cases for mocha:</source>
          <target state="translated">モカのテストケースをいくつか。</target>
        </trans-unit>
        <trans-unit id="b9e0ffc1c67c16f1e0a0dd19054085d8941d5c36" translate="yes" xml:space="preserve">
          <source>Strict comparison</source>
          <target state="translated">厳密な比較</target>
        </trans-unit>
        <trans-unit id="516be0111d52593ea1e8ae8469642a69f9d58e08" translate="yes" xml:space="preserve">
          <source>That's the difference, the former would give me a Set, it would work too as I could get the size of that Set, but the latter gives me the array I need, what's more direct to the resolution.</source>
          <target state="translated">その違いは、前者は私にSetを与えるだろう、それは私がそのSetのサイズを得ることができるように、それはあまりにも動作しますが、後者は私が必要とする配列を与えてくれます、何がより直接的な解像度になります。</target>
        </trans-unit>
        <trans-unit id="5708211c96c9685add438f1fe66055e9e81db3de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; check ensures that the set of elements in one array isn't just a subset of the other one.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;length&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェックは、一の配列内の要素のセットが他方のサブセットだけではないことを保証します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="367d766e650a2af72fa7f83d43ca989b769b72b1" translate="yes" xml:space="preserve">
          <source>The Practical Way</source>
          <target state="translated">実用的な方法</target>
        </trans-unit>
        <trans-unit id="fe41dc35305acda3ae7205822917c7513e60b63e" translate="yes" xml:space="preserve">
          <source>The reducer is used to walk through one array and search for each item in other array. If one item isn't found the reduce function returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;レデューサーは、1つの配列をウォークスルーし、他の配列の各項目を検索するために使用されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1つのアイテムが見つからない場合、reduce関数は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;返し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="548b60224cb3eaa940571d0b8dda966e1021c16b" translate="yes" xml:space="preserve">
          <source>The second example check for the order too</source>
          <target state="translated">2番目の例は、あまりにも順序のためのチェック</target>
        </trans-unit>
        <trans-unit id="efdee46a836e2b7c2a909090f956efa2bc3faebc" translate="yes" xml:space="preserve">
          <source>Then the above code would give &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、上記のコードは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; になります</target>
        </trans-unit>
        <trans-unit id="04d5889f264e99a100781ad08449e3c86af06e49" translate="yes" xml:space="preserve">
          <source>This I think is the simplest way to do it using JSON stringify, and it may be the best solution in some situations:</source>
          <target state="translated">これがJSONのstringifyを使った一番シンプルな方法だと思いますし、状況によってはこれが一番の解決策になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="0e85c68079c16e47624dada7072b24634fda1061" translate="yes" xml:space="preserve">
          <source>This answer also &lt;strong&gt;ignores the order of elements&lt;/strong&gt;, as I said, the exact situation happened to me, so maybe someone in the same situation might end up here (as I did).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この回答&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、要素の順序&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;無視し&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;先ほど&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;述べたように、正確な状況が私に起こったので、同じ状況の誰かがここで（おそらく私がしたように）終わるかもしれません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6af5977effa3c3427af72543a53f1a538580f60" translate="yes" xml:space="preserve">
          <source>This compares 2 unsorted arrays:</source>
          <target state="translated">これは,2つのソートされていない配列を比較します.</target>
        </trans-unit>
        <trans-unit id="24942767bf7f2f252d0e1dcda2ca4cf5f301b59f" translate="yes" xml:space="preserve">
          <source>This converts the objects &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; into strings so they can be compared. The order is important in most cases, for that can sort the object using a sort algorithm shown in one of the above answers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、オブジェクト&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が文字列に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変換され、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較できるようになります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の回答の1つに示されているソートアルゴリズムを使用してオブジェクトをソートできるため、ほとんどの場合、順序は重要です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b19c385bdf2431ebdeebf632263bc0b2bf01aee7" translate="yes" xml:space="preserve">
          <source>This function takes an additional parameter of strict that defaults to true.  This strict parameter defines if the arrays need to be wholly equal in both contents and the order of those contents, or simply just contain the same contents.</source>
          <target state="translated">この関数は,デフォルトでは true を指定する strict パラメータを追加します.この strict パラメータは,配列の内容と順序が完全に等しくなければならないのか,あるいは単に同じ内容を含むだけなのかを定義します.</target>
        </trans-unit>
        <trans-unit id="1d97aa1c42b282daa8679583a5dc65ce6a11afcf" translate="yes" xml:space="preserve">
          <source>This has a reason, since there may be, for example &lt;a href=&quot;https://stackoverflow.com/a/201471/607407&quot;&gt;private variables within objects.&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/201471/607407&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト内にプライベート変数&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がある可能性があるため、これには理由があり&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31c11f561802781954b2207e5e32d2302e1b9b97" translate="yes" xml:space="preserve">
          <source>This is how i did it.</source>
          <target state="translated">これが私がやった方法です。</target>
        </trans-unit>
        <trans-unit id="5cc814e86a067c0cc5642b64a319582cdd8bf418" translate="yes" xml:space="preserve">
          <source>This should return true only if the arrays have equal elements at corresponding indices.</source>
          <target state="translated">これは、対応するインデックスに等しい要素を持つ配列の場合にのみ真を返すべきです。</target>
        </trans-unit>
        <trans-unit id="f726d9ffaf9563ca6ba4d71d46d9f3138edd1009" translate="yes" xml:space="preserve">
          <source>To compare arrays, loop through them and compare every value:</source>
          <target state="translated">配列を比較するには、それらをループして、すべての値を比較します。</target>
        </trans-unit>
        <trans-unit id="d4a4795df7dee96d9854644642cd8d9f059cbe76" translate="yes" xml:space="preserve">
          <source>To make this work with &lt;code&gt;Array.equals&lt;/code&gt; you must edit the original function a little bit:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array.equals&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能させるには、元の関数を少し編集する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2e9c569f3318f53f4c1892004b8462d2335cb07" translate="yes" xml:space="preserve">
          <source>To me, this already a clear improvement over Tom&amp;aacute;&amp;scaron;'s solution because I can &lt;em&gt;explicitly&lt;/em&gt; choose a shallow or deep comparison for my arrays, as needed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私にとって、これ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、必要に応じて、配列の浅い比較または深い比較を&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明示的に&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;選択&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できるため、トマシュのソリューションよりも明らかに明確な改善&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4324cd24270be91f7bb3f2dc78ee778d33c8a79a" translate="yes" xml:space="preserve">
          <source>Tom&amp;aacute;&amp;scaron;'s could say his solution is fast but I would also say it is needlessly complicated. It tries to be an all-in-one solution that works for all arrays, nested or not. In fact, it even accepts more than just arrays as an input and still attempts to give a &quot;valid&quot; answer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トマーシュは彼の解決策は速いと言えるかもしれませんが、私はそれが不必要に複雑であるとも言います。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ネストされているかどうかにかかわらず、すべての配列で機能するオールインワンソリューションを目指しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際、それは配列としてだけでなく入力としても受け入れ、「有効な」答えを出そうとします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48b1f1c2dbeebb4796ac11f064b38d6db1d192b2" translate="yes" xml:space="preserve">
          <source>Underscore isEqual docs</source>
          <target state="translated">アンダースコア isEqual docs</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="3ee809c313835398653d2cd6110962ff6adbf251" translate="yes" xml:space="preserve">
          <source>We could do this the functional way, using &lt;code&gt;every&lt;/code&gt; (&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/every&quot;&gt;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/every&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;every&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、これを機能的な方法で行うことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/every&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/every&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdd789100b89681e490d10f63e0a55d68545a075" translate="yes" xml:space="preserve">
          <source>We could just as easily defined &lt;code&gt;arrayLooseEqual&lt;/code&gt; using a &lt;code&gt;==&lt;/code&gt; instead. Now when comparing &lt;code&gt;1&lt;/code&gt; (Number) to &lt;code&gt;'1'&lt;/code&gt; (String), the result will be &lt;code&gt;true&lt;/code&gt; &amp;hellip;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;簡単に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayLooseEqual&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;（数値）を&lt;/font&gt; &lt;code&gt;'1'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;（文字列）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と比較すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、結果は&lt;/font&gt; &lt;code&gt;true&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;になり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;hellip;&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71f4cad929e9ce822d37f19d03aa14c73ef40746" translate="yes" xml:space="preserve">
          <source>Well our &lt;code&gt;arrayCompare&lt;/code&gt; procedure is versatile enough to use in a way that makes a deep equality test a breeze &amp;hellip;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さて、私たちの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロシージャは、深い同等性テストを簡単にする方法で使用できるほど用途が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;広い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&amp;hellip;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2030b134e8f4b06110d972dd297e3f810e9a341c" translate="yes" xml:space="preserve">
          <source>What happens is that we use spread operator ( ... ) to concat both arrays, then we use Set to eliminate any duplicates. Once you have that you can compare their sizes, if all three arrays have the same size you are good to go.</source>
          <target state="translated">スプレッド演算子(...)を使って両方の配列を連結し、セットを使って重複を排除します。これで、3つの配列のサイズを比較することができます。</target>
        </trans-unit>
        <trans-unit id="3a8c68acbe473b4fbe79d7dea65dbf5e8ccd7ff3" translate="yes" xml:space="preserve">
          <source>While this only works for scalar arrays (see note below), it is short:</source>
          <target state="translated">これはスカラ配列に対してのみ動作しますが(以下の注を参照)、短いです。</target>
        </trans-unit>
        <trans-unit id="6ef46ad18b6f072481fe9c96f2daf1bd074be146" translate="yes" xml:space="preserve">
          <source>With ease, we can define exactly how we wish for two arrays to be compared &amp;mdash; shallow, deep, strict, loose, some object property, or some arbitrary computation, or any combination of these &amp;mdash; &lt;strong&gt;all using one procedure&lt;/strong&gt;, &lt;code&gt;arrayCompare&lt;/code&gt;. Maybe even dream up a &lt;code&gt;RegExp&lt;/code&gt; comparator ! I know how kids love those regexps &amp;hellip;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;簡単に、我々は、2つの配列を比較することのために私たちが望む方法を正確に定義することができます-浅い、深い、厳格な、緩い、一部のオブジェクトのプロパティ、またはいくつかの任意の計算、またはこれらの任意の組み合わせ- &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべて使用して1つの手順&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たぶん、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンパレータを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;思いつくことさえあるでしょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;子供がこれらの正規表現をどのように愛しているか知っています&amp;hellip;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d73b10bee4138b02cc956afc5a00951dc897e8c6" translate="yes" xml:space="preserve">
          <source>Works with &lt;strong&gt;MULTIPLE&lt;/strong&gt; arguments with &lt;strong&gt;NESTED&lt;/strong&gt; arrays:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で動作します&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MULTIPLE&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と引数&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NESTED&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="042cfe19c1d6b7c494c9b48aaf9971044ebac614" translate="yes" xml:space="preserve">
          <source>Works with any nested data structure, and obviously ignores objects' methods. Don't even think of extending Object.prototype with this method, when I tried this once, jQuery broke ;)</source>
          <target state="translated">このメソッドを使ってObject.prototypeを拡張しようとは思わないでください。このメソッドを使ってObject.prototypeを拡張しようとは思わないでください。)</target>
        </trans-unit>
        <trans-unit id="1ad3ef437b097196ead5d94e644c97ddbe468e56" translate="yes" xml:space="preserve">
          <source>You can see we're actually doing more with less code. There's nothing complicated about &lt;code&gt;arrayCompare&lt;/code&gt; itself and each of the custom comparators we've made have a very simple implementation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;少ないコードで実際に多くのことを行っていることがわかります。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;arrayCompare&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自体は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;複雑ではなく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、作成したカスタムコンパレータはそれぞれ非常に単純な実装です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55fdb010d5271a0dfeceb7b63b5b71559be46fbd" translate="yes" xml:space="preserve">
          <source>You may say &quot;&lt;em&gt;But it is much faster to compare strings - no loops...&lt;/em&gt;&quot; well, then you should note there ARE loops. First recursive loop that converts Array to string and second, that compares two strings. So this method &lt;strong&gt;is faster than use of string&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、文字列を比較する方がはるかに高速です-ループはありません...&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と言うかもしれません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列を文字列に変換する最初の再帰ループと、2つの文字列を比較する2番目のループ。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、この方法&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はstringを使用するよりも高速です&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a3c60843bf140420b0237338b009b1483e1a5f62" translate="yes" xml:space="preserve">
          <source>You'll get</source>
          <target state="translated">あなたが得られるのは</target>
        </trans-unit>
        <trans-unit id="815a0247827be2a19e21b354645d81ccf79dd6ff" translate="yes" xml:space="preserve">
          <source>You've probably noticed that this is only shallow comparison tho. Surely Tom&amp;aacute;&amp;scaron;'s solution is &quot;The Right Way&amp;trade;&quot; because it does implicit deep comparison, right ?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは浅い比較にすぎないことに気づいたでしょう。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;きっとトマシュの解法は「The Right Way&amp;trade;」です。暗黙の深い比較を行うからですよね？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40e73825fb9d5b392a6580c0de1c03d9361ec480" translate="yes" xml:space="preserve">
          <source>calling function</source>
          <target state="translated">呼び出し機能</target>
        </trans-unit>
        <trans-unit id="76a0c7348970f6d0763e05fb34628b5eaa3b77e9" translate="yes" xml:space="preserve">
          <source>hope it will help someone.</source>
          <target state="translated">誰かのお役に立てれば幸いです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
