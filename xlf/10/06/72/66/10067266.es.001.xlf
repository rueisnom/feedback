<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/10067266">
    <body>
      <group id="10067266">
        <trans-unit id="29fd3f854b887de70c267ec7c5f6d62874f253e1" translate="yes" xml:space="preserve">
          <source>(Of course, this also happens if the URL is in an unquoted variable.) For a static string, single quotes make the most sense, although any form of quoting or escaping works here.</source>
          <target state="translated">(Por supuesto,esto también sucede si el URL está en una variable no citada.)Para una cadena estática,las citas simples tienen más sentido,aunque cualquier forma de citar o escapar funciona aquí.</target>
        </trans-unit>
        <trans-unit id="e75e43676033b8825952394396f0bdb6b34f9132" translate="yes" xml:space="preserve">
          <source>(The loop is completely superfluous in the latter example; &lt;code&gt;printf&lt;/code&gt; specifically works fine with multiple arguments. &lt;code&gt;stat&lt;/code&gt; too.  But looping over a wildcard match is a common problem, and frequently done incorrectly.)</source>
          <target state="translated">(El bucle es completamente superfluo en el &amp;uacute;ltimo ejemplo; &lt;code&gt;printf&lt;/code&gt; funciona espec&amp;iacute;ficamente bien con m&amp;uacute;ltiples argumentos. &lt;code&gt;stat&lt;/code&gt; tambi&amp;eacute;n. Pero recorrer un comod&amp;iacute;n es un problema com&amp;uacute;n, y con frecuencia se hace incorrectamente).</target>
        </trans-unit>
        <trans-unit id="b3b5b7a51be079d9e32c2b061011fd5033a272d3" translate="yes" xml:space="preserve">
          <source>(The loop only runs once, over the literal single-quoted string.)</source>
          <target state="translated">(El bucle sólo se ejecuta una vez,sobre la cadena literal de una sola cita.)</target>
        </trans-unit>
        <trans-unit id="a62e7a96f381e21c77f5f03189a31cb8761fb2d2" translate="yes" xml:space="preserve">
          <source>(The loop only runs once, over the single, quoted string.)</source>
          <target state="translated">(El bucle sólo se ejecuta una vez,sobre la única y citada cadena.)</target>
        </trans-unit>
        <trans-unit id="e14130d7ea68f1fbe59aa0abc0d1fa4083bc5b1b" translate="yes" xml:space="preserve">
          <source>(There is no file named &lt;code&gt;$pattern&lt;/code&gt;, either!)</source>
          <target state="translated">(&amp;iexcl;Tampoco hay un archivo llamado &lt;code&gt;$pattern&lt;/code&gt; !)</target>
        </trans-unit>
        <trans-unit id="d675d362f86f01512076207502a183a15503624a" translate="yes" xml:space="preserve">
          <source>(There is no file named literally &lt;code&gt;file*.txt&lt;/code&gt;.)</source>
          <target state="translated">(No hay ning&amp;uacute;n archivo llamado literalmente &lt;code&gt;file*.txt&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="29898fff78243cab08dc3cc8940f533c439e0d0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$?&lt;/code&gt; doesn't need quotes since it's a numeric value. Whether &lt;code&gt;$URL&lt;/code&gt; needs it depends on what you allow in there and whether you still want an argument if it's empty.</source>
          <target state="translated">&lt;code&gt;$?&lt;/code&gt; no necesita comillas ya que es un valor num&amp;eacute;rico. Si &lt;code&gt;$URL&lt;/code&gt; necesita depende de lo que permita all&amp;iacute; y de si a&amp;uacute;n desea un argumento si est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="27df154497c68d91d87683896cfc44fea7cea1e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Double quotes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Doble comillas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c3d140c8e464f134cec3b0eebd38bf683f55d62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Examples&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c5864f833f59c5a8a0137c4d2afe109235f6656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No quotes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sin comillas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b557581d58744e25e1f1ff2a2f625fe4c2d3b5ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single quotes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Comillas simples&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c13ac318dfb25d9609eaabd5136933f8f64cd210" translate="yes" xml:space="preserve">
          <source>A variable containing a list of tokens to loop over or a wildcard to expand is less frequently seen, so we sometimes abbreviate to &quot;quote everything unless you know precisely what you are doing&quot;.</source>
          <target state="translated">Una variable que contiene una lista de fichas para enlazar o un comodín para expandir se ve con menos frecuencia,por lo que a veces abreviamos a &quot;citar todo a menos que sepas exactamente lo que estás haciendo&quot;.</target>
        </trans-unit>
        <trans-unit id="3222f0efe19396bc34dc4ae8d1cb67a63216d6c6" translate="yes" xml:space="preserve">
          <source>And if so, why?</source>
          <target state="translated">Y si es así,¿por qué?</target>
        </trans-unit>
        <trans-unit id="3785a2a188704d23953a5659e27c337b1d1de4b3" translate="yes" xml:space="preserve">
          <source>As an aside, scripts &lt;a href=&quot;http://mywiki.wooledge.org/ParsingLs&quot;&gt;should usually not use &lt;code&gt;ls&lt;/code&gt; for anything.&lt;/a&gt;  To expand a wildcard, just ... use it.</source>
          <target state="translated">Por otro lado, los scripts &lt;a href=&quot;http://mywiki.wooledge.org/ParsingLs&quot;&gt;generalmente no deber&amp;iacute;an usar &lt;code&gt;ls&lt;/code&gt; para nada.&lt;/a&gt; Para expandir un comod&amp;iacute;n, solo ... &amp;uacute;salo.</target>
        </trans-unit>
        <trans-unit id="0a3b82194ee5f88012f978f13a9f48b8293490ae" translate="yes" xml:space="preserve">
          <source>Bash parameter expansion (&lt;code&gt;&quot;${filename##*/}&quot;&lt;/code&gt;)</source>
          <target state="translated">Expansi&amp;oacute;n del par&amp;aacute;metro bash ( &lt;code&gt;&quot;${filename##*/}&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="57758dc45638caa5df2bbed2cb6a9858858010c4" translate="yes" xml:space="preserve">
          <source>By contrast:</source>
          <target state="translated">Por el contrario:</target>
        </trans-unit>
        <trans-unit id="b04f4a7fc53a3b1cd276b55f41b73ecb06f580ea" translate="yes" xml:space="preserve">
          <source>Could someone tell me whether or not I should wrap quotes around variables in a shell script?</source>
          <target state="translated">¿Podría alguien decirme si debería o no envolver las comillas alrededor de las variables en un guión de shell?</target>
        </trans-unit>
        <trans-unit id="62c11a34294e0f0be58f971653b654ab56174a59" translate="yes" xml:space="preserve">
          <source>Difference between single and double quotes in Bash</source>
          <target state="translated">Diferencia entre las comillas simples y dobles en Bash</target>
        </trans-unit>
        <trans-unit id="d17352112f221c89ded84084a22cdb430e8a3ce0" translate="yes" xml:space="preserve">
          <source>Double quotes are suitable when variable interpolation is required.  With suitable adaptations, it is also a good workaround when you need single quotes in the string.  (There is no straightforward way to escape a single quote between single quotes, because there is no escape mechanism inside single quotes -- if there was, they would not quote completely verbatim.)</source>
          <target state="translated">Las comillas dobles son adecuadas cuando se requiere una interpolación variable.Con las adaptaciones adecuadas,también es un buen método cuando se necesitan comillas simples en la cadena.(No hay una forma sencilla de escapar de una cita simple entre comillas simples,porque no hay un mecanismo de escape dentro de las comillas simples --si lo hubiera,no citarían completamente al pie de la letra).</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="c9cb1bd3a0f4351c0c8efb774a478ff510fec2bf" translate="yes" xml:space="preserve">
          <source>For example, is the following correct:</source>
          <target state="translated">Por ejemplo,es lo siguiente correcto:</target>
        </trans-unit>
        <trans-unit id="151056fa0605d3905394b3928a4f6252ee33612c" translate="yes" xml:space="preserve">
          <source>For using the variables in the shell script use &quot; &quot; quoted variables as the quoted one means that the variable may contain spaces or special character which won't affect the execution of your shell script. Else if you are sure of not having any spaces or special character in your variable name then you may use them without &quot; &quot;.</source>
          <target state="translated">Para usar las variables en el script de shell use &quot; &quot; variables citadas ya que la cita significa que la variable puede contener espacios o caracteres especiales que no afectarán a la ejecución de su script de shell.Por otra parte,si está seguro de que no hay espacios o caracteres especiales en el nombre de la variable,puede utilizarlos sin &quot; &quot;.</target>
        </trans-unit>
        <trans-unit id="dad12a999af9dd77c56aef7ff53113954aad61e3" translate="yes" xml:space="preserve">
          <source>General rule: quote it if it can either be empty or contain spaces (or any whitespace really) or special characters (wildcards). Not quoting strings with spaces often leads to the shell breaking apart a single argument into many.</source>
          <target state="translated">Regla general:citarla si puede estar vacía o contener espacios (o cualquier espacio en blanco realmente)o caracteres especiales (comodines).No citar cadenas con espacios a menudo lleva a que la cáscara se rompa en muchos.</target>
        </trans-unit>
        <trans-unit id="f5a242201e6b18c260832b69054eb43c8fbc2aba" translate="yes" xml:space="preserve">
          <source>Here is a three-point formula for quotes in general:</source>
          <target state="translated">Aquí hay una fórmula de tres puntos para las citas en general:</target>
        </trans-unit>
        <trans-unit id="d089f893e07ab81bae1415dc085018dee0e09dbc" translate="yes" xml:space="preserve">
          <source>I do use &lt;code&gt;$var&lt;/code&gt; as a simple way to join lines:</source>
          <target state="translated">Yo uso &lt;code&gt;$var&lt;/code&gt; como una forma simple de unir l&amp;iacute;neas:</target>
        </trans-unit>
        <trans-unit id="d5e34758580d5c070bff9a648e9fdbe239ea46e4" translate="yes" xml:space="preserve">
          <source>I generally use quoted like &lt;code&gt;&quot;$var&quot;&lt;/code&gt; for safe, unless I am sure that &lt;code&gt;$var&lt;/code&gt; does not contain space.</source>
          <target state="translated">Por lo general, uso comillas como &lt;code&gt;&quot;$var&quot;&lt;/code&gt; para la seguridad, a menos que est&amp;eacute; seguro de que &lt;code&gt;$var&lt;/code&gt; no contiene espacio.</target>
        </trans-unit>
        <trans-unit id="06b17da92223ef3ce239ff6ab88770fe677ad1de" translate="yes" xml:space="preserve">
          <source>I tend to always quote strings just out of habit since it's safer that way.</source>
          <target state="translated">Tiendo a citar siempre cuerdas por costumbre,ya que es más seguro de esa manera.</target>
        </trans-unit>
        <trans-unit id="ec439701c2466909be80a27184c5571e88afefb3" translate="yes" xml:space="preserve">
          <source>In contexts where we are absolutely sure that there are no word splitting or globbing issues or we &lt;em&gt;do want word splitting and globbing&lt;/em&gt;.</source>
          <target state="translated">En contextos en los que estamos absolutamente seguros de que no hay problemas de divisi&amp;oacute;n de palabras o globbing o si &lt;em&gt;queremos dividir palabras y globbing&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3b59209984bb16c283fcc6e7768175ac0fd17063" translate="yes" xml:space="preserve">
          <source>In contexts where we want to suppress word splitting and globbing. Also in contexts where we want the literal to be treated as a string, not a regex.</source>
          <target state="translated">En contextos en los que queremos suprimir la división de palabras y el &quot;globbing&quot;.También en contextos donde queremos que lo literal sea tratado como una cuerda,no como un regex.</target>
        </trans-unit>
        <trans-unit id="f939321e88ed3abfa39a256aa72ba3960b7cb7a2" translate="yes" xml:space="preserve">
          <source>In more concrete terms, anything containing a filename should usually be quoted (because filenames can contain whitespace and other shell metacharacters).  Anything containing a URL should usually be quoted (because many URLs contain shell metacharacters like &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt;).  Anything containing a regex should usually be quoted (ditto ditto).  Anything containing significant whitespace other than single spaces between non-whitespace characters needs to be quoted (because otherwise, the shell will munge the whitespace into, effectively, single spaces, and trim any leading or trailing whitespace).</source>
          <target state="translated">En t&amp;eacute;rminos m&amp;aacute;s concretos, cualquier cosa que contenga un nombre de archivo generalmente debe citarse (porque los nombres de archivo pueden contener espacios en blanco y otros metacaracteres de shell). Cualquier cosa que contenga una URL generalmente debe citarse (porque muchas URL contienen metacaracteres de shell como &lt;code&gt;?&lt;/code&gt; Y &lt;code&gt;&amp;amp;&lt;/code&gt; ). Cualquier cosa que contenga una expresi&amp;oacute;n regular generalmente debe citarse (&amp;iacute;dem &amp;iacute;dem). Cualquier cosa que contenga espacios en blanco significativos que no sean espacios individuales entre caracteres que no sean espacios en blanco debe ser citado (porque de lo contrario, el shell combinar&amp;aacute; el espacio en blanco, efectivamente, en espacios individuales y recortar&amp;aacute; cualquier espacio en blanco inicial o final).</target>
        </trans-unit>
        <trans-unit id="59a3873fba3332922756bc32b3c13b44d0217b04" translate="yes" xml:space="preserve">
          <source>In short, quote everything where you do not require the shell to perform token splitting and wildcard expansion.</source>
          <target state="translated">En resumen,cita todo lo que no requiere que la cáscara realice la división de fichas y la expansión de comodines.</target>
        </trans-unit>
        <trans-unit id="f4d6c9aa733db1b4d38cbcf25cc20311f87dd5bd" translate="yes" xml:space="preserve">
          <source>In string literals where we want to suppress interpolation and special treatment of backslashes. In other words, situations where using double quotes would be inappropriate.</source>
          <target state="translated">En los literales de cuerda donde queremos suprimir la interpolación y el tratamiento especial de las barras invertidas.En otras palabras,situaciones donde el uso de comillas dobles sería inapropiado.</target>
        </trans-unit>
        <trans-unit id="84af93e8bce1ae5fb2260de3492df002a2a4f03c" translate="yes" xml:space="preserve">
          <source>No quotes are suitable when you specifically require the shell to perform token splitting and/or wildcard expansion.</source>
          <target state="translated">No hay citas adecuadas cuando se requiere específicamente que la cáscara realice una división simbólica o una expansión comodín.</target>
        </trans-unit>
        <trans-unit id="9fa884c8c5bdc62d4775d1d0d104d5d6c681dd89" translate="yes" xml:space="preserve">
          <source>Quotes and escaping - Bash Hackers' Wiki</source>
          <target state="translated">Citas y escapadas-Bash Hackers' Wiki</target>
        </trans-unit>
        <trans-unit id="371a87eafb4de078ff674d69a5a89c186532eb49" translate="yes" xml:space="preserve">
          <source>See also:</source>
          <target state="translated">Ver también:</target>
        </trans-unit>
        <trans-unit id="bcabae38fbf5e1055fdfb65c2272617889d7c092" translate="yes" xml:space="preserve">
          <source>Single quotes protect the text between them verbatim.  It is the proper tool when you need to ensure that the shell does not touch the string at all.  Typically, it is the quoting mechanism of choice when you do not require variable interpolation.</source>
          <target state="translated">Las comillas simples protegen el texto entre ellas de forma literal.Es la herramienta adecuada cuando necesitas asegurarte de que la cáscara no toca la cuerda en absoluto.Típicamente,es el mecanismo de citas de elección cuando no se requiere una interpolación variable.</target>
        </trans-unit>
        <trans-unit id="2e161335e1f8eeaacb87546a6509dbdaab9d2fe2" translate="yes" xml:space="preserve">
          <source>The last example also suggests another useful concept, which I like to call &quot;seesaw quoting&quot;. If you need to mix single and double quotes, you can use them adjacent to each other. For example, the following quoted strings</source>
          <target state="translated">El último ejemplo también sugiere otro concepto útil,que me gusta llamar &quot;cita de subibaja&quot;.Si necesitas mezclar citas simples y dobles,puedes usarlas adyacentes entre sí.Por ejemplo,las siguientes cadenas de citas</target>
        </trans-unit>
        <trans-unit id="9e76dcfe4eb30da618b643dcc3d5d0d277cf14c1" translate="yes" xml:space="preserve">
          <source>This isn't awfully legible, but it's a common technique and thus good to know.</source>
          <target state="translated">Esto no es muy legible,pero es una técnica común y por lo tanto es bueno saberlo.</target>
        </trans-unit>
        <trans-unit id="5572ec42cf62f2e7a9cd4ada274dc621586474d2" translate="yes" xml:space="preserve">
          <source>Token splitting;</source>
          <target state="translated">La ficha se divide;</target>
        </trans-unit>
        <trans-unit id="b4e32ab8b1dec3cfd10f9a7c2386e171cf06f28b" translate="yes" xml:space="preserve">
          <source>Values which are not variables basically follow the same rules, though you could then also escape any metacharacters instead of quoting them. For a common example, a URL with a &lt;code&gt;&amp;amp;&lt;/code&gt; in it will be parsed by the shell as a background command unless the metacharacter is escaped or quoted:</source>
          <target state="translated">Los valores que no son variables b&amp;aacute;sicamente siguen las mismas reglas, aunque tambi&amp;eacute;n podr&amp;iacute;a escapar a los metacaracteres en lugar de citarlos. Para un ejemplo com&amp;uacute;n, una URL con un &lt;code&gt;&amp;amp;&lt;/code&gt; en ella ser&amp;aacute; analizada por el shell como un comando de fondo a menos que se escape o se cite el metacar&amp;aacute;cter:</target>
        </trans-unit>
        <trans-unit id="d0a268b7f726857d85b69c3da170c0e07d632e94" translate="yes" xml:space="preserve">
          <source>What are the special dollar sign shell variables?</source>
          <target state="translated">¿Cuáles son las variables especiales del signo del dólar?</target>
        </trans-unit>
        <trans-unit id="f53c17e29d0f0b4bf9ec0df6f70ec391904d6877" translate="yes" xml:space="preserve">
          <source>When is double quoting necessary?</source>
          <target state="translated">¿Cuándo es necesario citar dos veces?</target>
        </trans-unit>
        <trans-unit id="c2c0d9510460feeeeb5e7d81b6f01442f6bb1b61" translate="yes" xml:space="preserve">
          <source>When to wrap quotes around a shell variable</source>
          <target state="translated">Cuándo envolver las citas alrededor de una variable de la cáscara</target>
        </trans-unit>
        <trans-unit id="aba4621454c4be08c79d5714683b0614786c9e85" translate="yes" xml:space="preserve">
          <source>When you know that a variable can only contain a value which contains no shell metacharacters, quoting is optional.  Thus, an unquoted &lt;code&gt;$?&lt;/code&gt; is basically fine, because this variable can only ever contain a single number.  However, &lt;code&gt;&quot;$?&quot;&lt;/code&gt; is also correct, and recommended for general consistency and correctness (though this is my personal recommendation, not a widely recognized policy).</source>
          <target state="translated">Cuando sabe que una variable solo puede contener un valor que no contiene metacaracteres de shell, las comillas son opcionales. Por lo tanto, un &lt;code&gt;$?&lt;/code&gt; comillas ? b&amp;aacute;sicamente est&amp;aacute; bien, porque esta variable solo puede contener un solo n&amp;uacute;mero. Sin embargo, &lt;code&gt;&quot;$?&quot;&lt;/code&gt; tambi&amp;eacute;n es correcto y se recomienda por su consistencia y correcci&amp;oacute;n general (aunque esta es mi recomendaci&amp;oacute;n personal, no es una pol&amp;iacute;tica ampliamente reconocida).</target>
        </trans-unit>
        <trans-unit id="4fa8325b049d6a079d3e5f8128091f49749ffbd7" translate="yes" xml:space="preserve">
          <source>Wildcard expansion:</source>
          <target state="translated">Expansión de comodín:</target>
        </trans-unit>
        <trans-unit id="85ad4c94f8320e804977d9adc1bae6f86de1921a" translate="yes" xml:space="preserve">
          <source>around standard numeric variables (&lt;code&gt;$$&lt;/code&gt;, &lt;code&gt;$?&lt;/code&gt;, &lt;code&gt;$#&lt;/code&gt; etc.)</source>
          <target state="translated">alrededor de variables num&amp;eacute;ricas est&amp;aacute;ndar ( &lt;code&gt;$$&lt;/code&gt; , &lt;code&gt;$?&lt;/code&gt; , &lt;code&gt;$#&lt;/code&gt; etc.)</target>
        </trans-unit>
        <trans-unit id="9348a580f1e89ae695aee7326f94273b8c218efc" translate="yes" xml:space="preserve">
          <source>can be pasted together back to back, forming a single long string after tokenization and quote removal.</source>
          <target state="translated">pueden ser pegados juntos espalda con espalda,formando una sola cuerda larga después de la eliminación de las fichas y las citas.</target>
        </trans-unit>
        <trans-unit id="7eca7cf51e8bce5bf586b8b2a42970e21dce9728" translate="yes" xml:space="preserve">
          <source>command names and arguments that have whitespace in them</source>
          <target state="translated">comandan nombres y argumentos que tienen espacios en blanco en ellos</target>
        </trans-unit>
        <trans-unit id="1c92a162d04b1909da4b43f55844bab9f286483e" translate="yes" xml:space="preserve">
          <source>command substitutions (&lt;code&gt;&quot;$(ls)&quot;&lt;/code&gt;, &lt;code&gt;&quot;`ls`&quot;&lt;/code&gt;)</source>
          <target state="translated">sustituciones de comandos ( &lt;code&gt;&quot;$(ls)&quot;&lt;/code&gt; , &lt;code&gt;&quot;`ls`&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cc7c42e3356a925dec68daa8d37620f9445d8fc3" translate="yes" xml:space="preserve">
          <source>echo &quot;$url name&quot;  --  ( Cannot be used at such situations so take precaution before using it )</source>
          <target state="translated">eco &quot;$url name&quot; --(No puede ser usado en tales situaciones,así que tome precauciones antes de usarlo )</target>
        </trans-unit>
        <trans-unit id="99b231f14cbc77242a56e3332e58018f67ab0832" translate="yes" xml:space="preserve">
          <source>echo &quot;$url name&quot;  -- ( Can be used at all times )</source>
          <target state="translated">eco &quot;$url name&quot; --(Puede ser usado en todo momento )</target>
        </trans-unit>
        <trans-unit id="4eb1a73b2bfdcb3cfef0c6c93b604815ec5303d7" translate="yes" xml:space="preserve">
          <source>globs where directory path or file name part includes spaces (&lt;code&gt;&quot;/my dir/&quot;*&lt;/code&gt;)</source>
          <target state="translated">globs donde la ruta del directorio o la parte del nombre del archivo incluye espacios ( &lt;code&gt;&quot;/my dir/&quot;*&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="431657c47eea42a005d52a4986263ae27098fba8" translate="yes" xml:space="preserve">
          <source>in arithmetic contexts like &lt;code&gt;((count++))&lt;/code&gt;, &lt;code&gt;&quot;${arr[idx]}&quot;&lt;/code&gt;, &lt;code&gt;&quot;${string:start:length}&quot;&lt;/code&gt;</source>
          <target state="translated">en contextos aritm&amp;eacute;ticos como &lt;code&gt;((count++))&lt;/code&gt; , &lt;code&gt;&quot;${arr[idx]}&quot;&lt;/code&gt; , &lt;code&gt;&quot;${string:start:length}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00c8bf297bc8ae6bd9a198204ec1be2d51af7f94" translate="yes" xml:space="preserve">
          <source>inside &lt;code&gt;[[ ]]&lt;/code&gt; expression which is free from word splitting and globbing issues (this is a matter of style and opinions can vary widely)</source>
          <target state="translated">dentro de la expresi&amp;oacute;n &lt;code&gt;[[ ]]&lt;/code&gt; que est&amp;aacute; libre de problemas de divisi&amp;oacute;n de palabras y problemas globales (esto es una cuesti&amp;oacute;n de estilo y las opiniones pueden variar ampliamente)</target>
        </trans-unit>
        <trans-unit id="c4d6e9627c34eb58a1eea6d1992d6b74937dfd97" translate="yes" xml:space="preserve">
          <source>literal strings that need interpolation to be suppressed ( &lt;code&gt;'Really costs $$!'&lt;/code&gt;, &lt;code&gt;'just a backslash followed by a t: \t'&lt;/code&gt;)</source>
          <target state="translated">cadenas literales que necesitan interpolaci&amp;oacute;n para ser suprimidas ( &lt;code&gt;'Really costs $$!'&lt;/code&gt; , &lt;code&gt;'just a backslash followed by a t: \t'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5acf883ec1db9dead0c49352f4358c26aeb815fe" translate="yes" xml:space="preserve">
          <source>literal strings with whitespace (&lt;code&gt;&quot;StackOverflow rocks!&quot;&lt;/code&gt;, &lt;code&gt;&quot;Steve's Apple&quot;&lt;/code&gt;)</source>
          <target state="translated">cadenas literales con espacios en blanco ( &lt;code&gt;&quot;StackOverflow rocks!&quot;&lt;/code&gt; , &lt;code&gt;&quot;Steve's Apple&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="1190a37ac3e7e62b6dc2927f0c581dd1b0cc2c4a" translate="yes" xml:space="preserve">
          <source>regex literals that need interpolation to be suppressed</source>
          <target state="translated">literales regex que necesitan interpolación para ser suprimidos</target>
        </trans-unit>
        <trans-unit id="7afcbc7133a9bfa9f7695cf3ed6ea8f923559126" translate="yes" xml:space="preserve">
          <source>to protect double quotes (&lt;code&gt;'The &quot;crux&quot;'&lt;/code&gt;)</source>
          <target state="translated">para proteger las comillas dobles ( &lt;code&gt;'The &quot;crux&quot;'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5a427cc565039cdb9848ceddca07212cb2ac6aa5" translate="yes" xml:space="preserve">
          <source>to protect single quotes (&lt;code&gt;&quot;single'quote'delimited'string&quot;&lt;/code&gt;)</source>
          <target state="translated">para proteger comillas simples ( &lt;code&gt;&quot;single'quote'delimited'string&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="88e68764b2cd68e45dbca11e7896feabad14a64e" translate="yes" xml:space="preserve">
          <source>use shell quoting for literals involving special characters (&lt;code&gt;$'\n\t'&lt;/code&gt;)</source>
          <target state="translated">use comillas para los literales que involucran caracteres especiales ( &lt;code&gt;$'\n\t'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="054395cc1a9331195a21aa9529f181c98fef1dc2" translate="yes" xml:space="preserve">
          <source>use shell quoting where we need to protect several single and double quotes (&lt;code&gt;$'{&quot;table&quot;: &quot;users&quot;, &quot;where&quot;: &quot;first_name&quot;=\'Steve\'}'&lt;/code&gt;)</source>
          <target state="translated">use comillas de shell donde necesitemos proteger varias comillas simples y dobles ( &lt;code&gt;$'{&quot;table&quot;: &quot;users&quot;, &quot;where&quot;: &quot;first_name&quot;=\'Steve\'}'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cef7889538529bccee6ed683f5e9ceaa3cc8a566" translate="yes" xml:space="preserve">
          <source>variable expansions (&lt;code&gt;&quot;$var&quot;&lt;/code&gt;, &lt;code&gt;&quot;${arr[@]}&quot;&lt;/code&gt;)</source>
          <target state="translated">expansiones variables ( &lt;code&gt;&quot;$var&quot;&lt;/code&gt; , &lt;code&gt;&quot;${arr[@]}&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="96f338e51dda580c323e3544dc476fee880b6a1a" translate="yes" xml:space="preserve">
          <source>where we want &lt;code&gt;~&lt;/code&gt; to be interpreted as &lt;code&gt;$HOME&lt;/code&gt; (&lt;code&gt;~/&quot;some dir&quot;&lt;/code&gt; but not &lt;code&gt;&quot;~/some dir&quot;&lt;/code&gt;)</source>
          <target state="translated">donde queremos que &lt;code&gt;~&lt;/code&gt; se interprete como &lt;code&gt;$HOME&lt;/code&gt; ( &lt;code&gt;~/&quot;some dir&quot;&lt;/code&gt; pero no &lt;code&gt;&quot;~/some dir&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e8a753b52738ba5d0807eef6dbde281e8f3d225e" translate="yes" xml:space="preserve">
          <source>where we want globbing (&lt;code&gt;for txtfile in *.txt; do ...&lt;/code&gt;)</source>
          <target state="translated">donde queremos globbing ( &lt;code&gt;for txtfile in *.txt; do ...&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f673e3859c82d5187c762a06882bc0f49d37ddef" translate="yes" xml:space="preserve">
          <source>where we want word splitting (&lt;code&gt;for word in $words&lt;/code&gt;)</source>
          <target state="translated">donde queremos dividir palabras ( &lt;code&gt;for word in $words&lt;/code&gt; )</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
