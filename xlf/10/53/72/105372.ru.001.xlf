<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/105372">
    <body>
      <group id="105372">
        <trans-unit id="204ee29d33b6243e0190c07dfb5eab1bae58afc9" translate="yes" xml:space="preserve">
          <source>'Suit' is a 'type' but is used like a 'variable'</source>
          <target state="translated">'Suit' является 'типом',но используется как 'переменная'.</target>
        </trans-unit>
        <trans-unit id="f2bf7d31a04dc34e0b6fb75921211d6512b3f1cc" translate="yes" xml:space="preserve">
          <source>(Actually, that's a bit more complicated than that - enum types are considered to have an &quot;underlying&quot; integer type, which means each enum value corresponds to an integer value (this is typically implicit, but can be manually specified). C# was designed in a way so that you could stuff &lt;em&gt;any&lt;/em&gt; integer of that type into the enum variable, even if it isn't a &quot;named&quot; value.)</source>
          <target state="translated">(На самом деле, это немного сложнее - считается, что типы перечисления имеют &amp;laquo;базовый&amp;raquo; целочисленный тип, что означает, что каждое значение перечисления соответствует целочисленному значению (обычно это неявное, но может быть указано вручную). C # был разработан таким образом, чтобы вы могли вставить &lt;em&gt;любое&lt;/em&gt; целое число этого типа в переменную enum, даже если это не &amp;laquo;именованное&amp;raquo; значение.)</target>
        </trans-unit>
        <trans-unit id="75c4d4b0e176e2184304b63994d713b095b617ae" translate="yes" xml:space="preserve">
          <source>(The current accepted answer has a cast that I don't think 
is needed (although I may be wrong).)</source>
          <target state="translated">(Текущий принятый ответ имеет гипс,который,как мне кажется,не нужен (хотя,возможно,я ошибаюсь)).</target>
        </trans-unit>
        <trans-unit id="ea0e98176aee6ddc771dbf3b53048227666d5df4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Language_Integrated_Query&quot;&gt;LINQ&lt;/a&gt; Generic Way:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Language_Integrated_Query&quot;&gt;LINQ&lt;/a&gt; Generic Way:</target>
        </trans-unit>
        <trans-unit id="eff6af42e717cf5361127d9a29beed5d256a0098" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://web.archive.org/web/20101105013136/http://www.dolittle.no/blogs/einar/archive/2008/01/13/missing-enum-getvalues-when-doing-silverlight-for-instance.aspx&quot;&gt;Original Blog Post by Einar Ingebrigtsen&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://web.archive.org/web/20101105013136/http://www.dolittle.no/blogs/einar/archive/2008/01/13/missing-enum-getvalues-when-doing-silverlight-for-instance.aspx&quot;&gt;Оригинальное сообщение в блоге Эйнара Ингебригтсена&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="628b003cff860c93265eccaec110cd80fc03d7d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Enum.GetValues(type)&lt;/code&gt; // Since .NET 1.1, not in Silverlight or .NET Compact Framework</source>
          <target state="translated">&lt;code&gt;Enum.GetValues(type)&lt;/code&gt; // Начиная с .NET 1.1, а не в Silverlight или .NET Compact Framework</target>
        </trans-unit>
        <trans-unit id="c85e52b3b4353211b223e1d52ac1fdf07f1068e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EnumLoop&lt;/code&gt; has this completely generic definition:</source>
          <target state="translated">&lt;code&gt;EnumLoop&lt;/code&gt; имеет это полностью общее определение:</target>
        </trans-unit>
        <trans-unit id="bfbf23c79144694d3391307903f4e52ac2d39f99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt; types are called &quot;enumeration types&quot; not because they are containers that &quot;enumerate&quot; values (which they aren't), but because they are defined by &lt;em&gt;enumerating&lt;/em&gt; the possible values for a variable of that type.</source>
          <target state="translated">Типы &lt;code&gt;enum&lt;/code&gt; называются &amp;laquo;типами перечисления&amp;raquo; не потому, что они являются контейнерами, которые &amp;laquo;перечисляют&amp;raquo; значения (которые они не являются), а потому, что они определяются путем &lt;em&gt;перечисления&lt;/em&gt; возможных значений для переменной этого типа.</target>
        </trans-unit>
        <trans-unit id="e5c45b1afb733bf0b290d4865898a9aa1a4607d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type.GetEnumValues()&lt;/code&gt; // Only on .NET 4 and above</source>
          <target state="translated">&lt;code&gt;type.GetEnumValues()&lt;/code&gt; // Только в .NET 4 и выше</target>
        </trans-unit>
        <trans-unit id="5ec027cd63787fc63ff00a1d7f39f02a465ad222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type.GetFields().Where(x =&amp;gt; x.IsLiteral).Select(x =&amp;gt; x.GetValue(null))&lt;/code&gt; // Works everywhere</source>
          <target state="translated">&lt;code&gt;type.GetFields().Where(x =&amp;gt; x.IsLiteral).Select(x =&amp;gt; x.GetValue(null))&lt;/code&gt; // Работает везде</target>
        </trans-unit>
        <trans-unit id="8e4a67312cef01f89b813f460218af4e618c5098" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;I am not sure why &lt;code&gt;GetEnumValues&lt;/code&gt; was introduced on type instances. It isn't very readable at all for me.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Я не уверен, почему &lt;code&gt;GetEnumValues&lt;/code&gt; был введен на экземплярах типов.&lt;/em&gt; &lt;em&gt;Это не очень читабельно для меня.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f22550b58f5408cd4a7789a3f168d48edeb08400" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The cast to &lt;code&gt;(Suit[])&lt;/code&gt; is not strictly necessary, &lt;a href=&quot;https://gist.github.com/bartoszkp/9e059c3edccc07a5e588#gistcomment-2625454&quot;&gt;but it does make the code 0.5 ns faster&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : приведение к &lt;code&gt;(Suit[])&lt;/code&gt; не является строго необходимым, &lt;a href=&quot;https://gist.github.com/bartoszkp/9e059c3edccc07a5e588#gistcomment-2625454&quot;&gt;но оно ускоряет выполнение кода на 0,5 нс&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b10049e3c204f7b966f11b4223add60fd0a0dff9" translate="yes" xml:space="preserve">
          <source>A call would look like this:</source>
          <target state="translated">Звонок будет выглядеть так:</target>
        </trans-unit>
        <trans-unit id="b8278d6fa198e09d50fbbd6937ff32e3b20545e9" translate="yes" xml:space="preserve">
          <source>A simple and generic way to convert an enum to something you can interact:</source>
          <target state="translated">Простой и общий способ преобразования enum в то,что вы можете взаимодействовать:</target>
        </trans-unit>
        <trans-unit id="489a98e4905ac18f73bdcd16377405cbf983f47f" translate="yes" xml:space="preserve">
          <source>Add method &lt;code&gt;public static IEnumerable&amp;lt;T&amp;gt; GetValues&amp;lt;T&amp;gt;()&lt;/code&gt; to your class, like:</source>
          <target state="translated">Добавьте метод &lt;code&gt;public static IEnumerable&amp;lt;T&amp;gt; GetValues&amp;lt;T&amp;gt;()&lt;/code&gt; в ваш класс, например:</target>
        </trans-unit>
        <trans-unit id="9adfddcd92a71b3bc6564c2c5d83a45f949ebce5" translate="yes" xml:space="preserve">
          <source>Also you can bind to the public static members of the enum directly by using reflection:</source>
          <target state="translated">Также вы можете связать с публичными статическими членами переписи непосредственно с помощью рефлексии:</target>
        </trans-unit>
        <trans-unit id="5185077a60357f56c044d96e3e9c27f0dcfed475" translate="yes" xml:space="preserve">
          <source>And it gives the following compile-time error:</source>
          <target state="translated">И это дает следующую ошибку во время компиляции:</target>
        </trans-unit>
        <trans-unit id="a65c6aab9ccb89445d5895ed004afd6ead95252c" translate="yes" xml:space="preserve">
          <source>And then:</source>
          <target state="translated">А потом:</target>
        </trans-unit>
        <trans-unit id="9fbda980a4e6671aa89af76a1ac43b0bd5a659b2" translate="yes" xml:space="preserve">
          <source>And you can use it like below:</source>
          <target state="translated">И ты можешь использовать его,как внизу:</target>
        </trans-unit>
        <trans-unit id="2c8a83e8900192b4b50deba69a1aba7d1d83c362" translate="yes" xml:space="preserve">
          <source>As with any code that involves &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/framework/reflection-and-codedom/reflection&quot;&gt;reflection&lt;/a&gt;, you should take steps to ensure it runs only once and results are cached.</source>
          <target state="translated">Как и в случае любого кода, в котором используется &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/framework/reflection-and-codedom/reflection&quot;&gt;рефлексия&lt;/a&gt; , вы должны предпринять шаги, чтобы убедиться, что он выполняется только один раз и результаты кэшируются.</target>
        </trans-unit>
        <trans-unit id="01488da0f2c695215e3c263c1b0a620cdb5ef987" translate="yes" xml:space="preserve">
          <source>But that's not strictly enumerating, just looping. The second method is much faster than any other approach though...</source>
          <target state="translated">Но это не строго перечисление,а просто петля.Второй метод намного быстрее,чем любой другой...</target>
        </trans-unit>
        <trans-unit id="b777c1f71b046ec9e2702c289bcdaf42a8b05a32" translate="yes" xml:space="preserve">
          <source>By the way, incrementing the value is not a good way to enumerate the values of an enum. You should do this instead.</source>
          <target state="translated">Кстати,увеличение значения-не самый лучший способ перечислить значения перечисления.Вместо этого следует сделать это.</target>
        </trans-unit>
        <trans-unit id="e1b0a5a3ca314c0e37db1c2351ee79f4bdd02a1b" translate="yes" xml:space="preserve">
          <source>Call and pass your enum. Now you can iterate through it using &lt;code&gt;foreach&lt;/code&gt;:</source>
          <target state="translated">Позвони и передай свое перечисление. Теперь вы можете перебрать его, используя &lt;code&gt;foreach&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="130e344783d4105439d699f40125c5715cbf222e" translate="yes" xml:space="preserve">
          <source>E.g. the following code does not compile:</source>
          <target state="translated">Например,следующий код не компилируется:</target>
        </trans-unit>
        <trans-unit id="bfcf41711c45f4d582e1d7496ffdb987c0c718e9" translate="yes" xml:space="preserve">
          <source>EDIT: Should have suggested the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.enum.getvalues(v=vs.110).aspx&quot;&gt;System.Enum.GetValues&lt;/a&gt; method instead. Oops.</source>
          <target state="translated">РЕДАКТИРОВАТЬ: должен был предложить метод &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.enum.getvalues(v=vs.110).aspx&quot;&gt;System.Enum.GetValues&lt;/a&gt; вместо этого. К сожалению.</target>
        </trans-unit>
        <trans-unit id="488d755bd3034f031474bb24d86a52e629556d9e" translate="yes" xml:space="preserve">
          <source>For getting a list of int from an enum, use the following. It works!</source>
          <target state="translated">Для получения списка int из перечисления используйте следующее.Это работает!</target>
        </trans-unit>
        <trans-unit id="36444104581e368e6494a254b78ef4c4bdba70fa" translate="yes" xml:space="preserve">
          <source>Having a helper class like &lt;code&gt;Enum&amp;lt;T&amp;gt;&lt;/code&gt; is what is most readable and memorable for me:</source>
          <target state="translated">Наличие вспомогательного класса, такого как &lt;code&gt;Enum&amp;lt;T&amp;gt;&lt;/code&gt; является для меня самым читаемым и запоминающимся:</target>
        </trans-unit>
        <trans-unit id="4d987bf9b5c596c8a548ba1557b0eb1909241d54" translate="yes" xml:space="preserve">
          <source>Here is a working example of creating select options for a &lt;a href=&quot;https://en.wikipedia.org/wiki/Data_definition_language&quot;&gt;DDL&lt;/a&gt;:</source>
          <target state="translated">Вот рабочий пример создания опций выбора для &lt;a href=&quot;https://en.wikipedia.org/wiki/Data_definition_language&quot;&gt;DDL&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e75161fd8733bf32d8db574b4afe41d157fb02e8" translate="yes" xml:space="preserve">
          <source>How can you enumerate an &lt;code&gt;enum&lt;/code&gt; in C#?</source>
          <target state="translated">Как вы можете перечислить &lt;code&gt;enum&lt;/code&gt; в C #?</target>
        </trans-unit>
        <trans-unit id="c84443bbee6468fa570fcd4ddd774034fc4262fb" translate="yes" xml:space="preserve">
          <source>How to enumerate an enum</source>
          <target state="translated">Как перечислить перечисление</target>
        </trans-unit>
        <trans-unit id="f71295e846abf2ebf66206d4e52f2c2e37af5217" translate="yes" xml:space="preserve">
          <source>I do not hold the opinion this is better, or even good. I am just stating yet another solution.</source>
          <target state="translated">Я не считаю,что это лучше или даже лучше.Я просто констатирую еще одно решение.</target>
        </trans-unit>
        <trans-unit id="d695e5bed90c7a43ad6dc3f50817744cdf7c56ad" translate="yes" xml:space="preserve">
          <source>I know it is a bit messy, but if you are fan of one-liners, here is one:</source>
          <target state="translated">Я знаю,что это немного грязновато,но если вы фанат однолинейных фильмов,вот один:</target>
        </trans-unit>
        <trans-unit id="47435f3e3d1517a85d9c8156dd62f2793656b5a2" translate="yes" xml:space="preserve">
          <source>I made some extensions for easy enum usage. Maybe someone can use it...</source>
          <target state="translated">Я сделал несколько расширений для удобства использования переписей.Может,кто-нибудь сможет его использовать...</target>
        </trans-unit>
        <trans-unit id="f706da7a8ed272d2a138924d9e5f8c1acccb9734" translate="yes" xml:space="preserve">
          <source>I think caching the array would speed it up considerably.  It looks like you're getting a new array (through reflection) every time.  Rather:</source>
          <target state="translated">Думаю,кэширование массива значительно ускорит его.Похоже,что каждый раз вы получаете новый массив (через отражение).Скорее:</target>
        </trans-unit>
        <trans-unit id="aef4593fde75c927e239b1d9aeaba5fe6fa96721" translate="yes" xml:space="preserve">
          <source>I think this is more efficient than other suggestions because &lt;code&gt;GetValues()&lt;/code&gt; is not called each time you have a loop. It is also more concise. And you get a compile-time error, not a runtime exception if &lt;code&gt;Suit&lt;/code&gt; is not an &lt;code&gt;enum&lt;/code&gt;.</source>
          <target state="translated">Я думаю, что это более эффективно, чем другие предложения, потому что &lt;code&gt;GetValues()&lt;/code&gt; не вызывается каждый раз, когда у вас есть цикл. Это также более кратко. И вы получите ошибку во время компиляции, а не исключение времени выполнения, если &lt;code&gt;Suit&lt;/code&gt; не является &lt;code&gt;enum&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08426ede7845024ec8363a327be63a416a6c495d" translate="yes" xml:space="preserve">
          <source>I think you can use</source>
          <target state="translated">Я думаю,ты можешь использовать</target>
        </trans-unit>
        <trans-unit id="c71fe08aa4ab3025b3712ce5ed439b295b73dc54" translate="yes" xml:space="preserve">
          <source>I tried many ways and got the result from this code:</source>
          <target state="translated">Я перепробовал много способов и получил результат от этого кода:</target>
        </trans-unit>
        <trans-unit id="5754c8aaf063971e507315c385218c84d323b198" translate="yes" xml:space="preserve">
          <source>I use ToString() then split and parse the spit array in flags.</source>
          <target state="translated">Я использую ToString(),затем разделяю и разбираю массив слюны во флагах.</target>
        </trans-unit>
        <trans-unit id="0f65a7c0c8aabd73dcf605c5708aad1685be6eaf" translate="yes" xml:space="preserve">
          <source>I would use &lt;code&gt;Enum.GetValues(typeof(Suit))&lt;/code&gt; instead.</source>
          <target state="translated">Я бы использовал &lt;code&gt;Enum.GetValues(typeof(Suit))&lt;/code&gt; вместо этого.</target>
        </trans-unit>
        <trans-unit id="7d3eeef3663d9af4d6b31c62a690bda6aa657080" translate="yes" xml:space="preserve">
          <source>I've heard vague rumours that this is
  terifically slow. Anyone know? &amp;ndash; Orion
  Edwards Oct 15 '08 at 1:31 7</source>
          <target state="translated">Я слышал смутные слухи, что это очень медленно. Кто-нибудь знает? - Орион Эдвардс 15 октября 2008 года в 1:31 7</target>
        </trans-unit>
        <trans-unit id="ce164deb41b4ac66b3fc10c0ed18762860a83ba4" translate="yes" xml:space="preserve">
          <source>If anyone knows how to get rid of the &lt;code&gt;T valueType = new T()&lt;/code&gt;, I'd be happy to see a solution.</source>
          <target state="translated">Если кто-нибудь знает, как избавиться от &lt;code&gt;T valueType = new T()&lt;/code&gt; , я был бы рад увидеть решение.</target>
        </trans-unit>
        <trans-unit id="b7989ee216e55942bc73f30b10d14df8440aeb1c" translate="yes" xml:space="preserve">
          <source>If enum values are contiguous and you can provide the first and last element of the enum, then:</source>
          <target state="translated">Если значения перечисления совпадают и вы можете указать первый и последний элемент перечисления,то:</target>
        </trans-unit>
        <trans-unit id="4e5ec090707deff327e609b2e64c69fb0fa67593" translate="yes" xml:space="preserve">
          <source>If enum values range strictly from 0 to n - 1, a generic alternative is:</source>
          <target state="translated">Если значения перечисления находятся в строгом диапазоне от 0 до n-1,то это родовая альтернатива:</target>
        </trans-unit>
        <trans-unit id="39889263d487079852bb1c20c0aa134d99325643" translate="yes" xml:space="preserve">
          <source>If you have:</source>
          <target state="translated">Если так:</target>
        </trans-unit>
        <trans-unit id="02553c0e65d89d3e34617306e8ef88aabf22574d" translate="yes" xml:space="preserve">
          <source>If you need speed and type checking at build and run time, this helper method is better than using LINQ to cast each element:</source>
          <target state="translated">Если вам нужна проверка скорости и типа во время сборки и выполнения,то этот вспомогательный метод лучше,чем использование LINQ для приведения каждого элемента в соответствие:</target>
        </trans-unit>
        <trans-unit id="50ce5a98656192c5eb253b5a488e358888162aa7" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;Suit&lt;/code&gt; and &lt;code&gt;Value&lt;/code&gt; are both enumerations:</source>
          <target state="translated">В этом случае &lt;code&gt;Suit&lt;/code&gt; и &lt;code&gt;Value&lt;/code&gt; являются перечислениями:</target>
        </trans-unit>
        <trans-unit id="084b05b7f5b1b1bcec12c207bc96765dbf9581aa" translate="yes" xml:space="preserve">
          <source>It fails on the &lt;code&gt;Suit&lt;/code&gt; keyword, the second one.</source>
          <target state="translated">Не удается &lt;code&gt;Suit&lt;/code&gt; ключевое слово Suit , второе.</target>
        </trans-unit>
        <trans-unit id="1537656a85cf3bdee1b6d6f52c4a3f226a4c4538" translate="yes" xml:space="preserve">
          <source>It is clean, simple, and, by @Jeppe-Stig-Nielsen's comment, fast.</source>
          <target state="translated">Чисто,просто,и,по комментарию @Jeppe-Stig-Nielsen,быстро.</target>
        </trans-unit>
        <trans-unit id="fd3e08d7f38c4afc0cf631122546a28964fd62c7" translate="yes" xml:space="preserve">
          <source>It looks to me like you really want to print out the names of each enum, rather than the values. In which case &lt;code&gt;Enum.GetNames()&lt;/code&gt; seems to be the right approach.</source>
          <target state="translated">Мне кажется, что вы действительно хотите распечатать имена каждого перечисления, а не значения. В этом случае &lt;code&gt;Enum.GetNames()&lt;/code&gt; кажется правильным подходом.</target>
        </trans-unit>
        <trans-unit id="360a6b89e50ba4bd210cc51e591971ee1f69294c" translate="yes" xml:space="preserve">
          <source>Just by combining the top answers, I threw together a very simple extension:</source>
          <target state="translated">Просто объединив верхние ответы,я собрал очень простое расширение:</target>
        </trans-unit>
        <trans-unit id="10a092cb98eb6837964bf5134343571d1daf40dd" translate="yes" xml:space="preserve">
          <source>My solution works in &lt;a href=&quot;https://en.wikipedia.org/wiki/.NET_Compact_Framework&quot;&gt;.NET Compact Framework&lt;/a&gt; (3.5) and supports type checking &lt;strong&gt;at compile time&lt;/strong&gt;:</source>
          <target state="translated">Мое решение работает в &lt;a href=&quot;https://en.wikipedia.org/wiki/.NET_Compact_Framework&quot;&gt;.NET Compact Framework&lt;/a&gt; (3.5) и поддерживает проверку типов &lt;strong&gt;во время компиляции&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="e37b0b483215648e142c8ca2c80b58e28804d64a" translate="yes" xml:space="preserve">
          <source>Now you call:</source>
          <target state="translated">Теперь ты звонишь:</target>
        </trans-unit>
        <trans-unit id="2f412be11b8b6e2fdd3aeed2275fcb0a44143bcf" translate="yes" xml:space="preserve">
          <source>Of course you can return &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt;, but that buys you nothing here.</source>
          <target state="translated">Конечно, вы можете вернуть &lt;code&gt;IEnumerable&amp;lt;T&amp;gt;&lt;/code&gt; , но здесь вы ничего не купите.</target>
        </trans-unit>
        <trans-unit id="c48ca7dddfe2d112cac0be14ca0611658d437c22" translate="yes" xml:space="preserve">
          <source>One can also use some sort of caching if performance matters, but I don't expect this to be an issue at all.</source>
          <target state="translated">Можно также использовать некоторое кэширование,если производительность имеет значение,но я не ожидаю,что это будет проблемой вообще.</target>
        </trans-unit>
        <trans-unit id="82da7dfc583a0e4fe4bb642d8fab3b6d854e977c" translate="yes" xml:space="preserve">
          <source>Some versions of the .NET framework do not support &lt;code&gt;Enum.GetValues&lt;/code&gt;. Here's a good workaround from &lt;a href=&quot;https://web.archive.org/web/20100530072822/http://ideas.dalezak.ca/2008/11/enumgetvalues-in-compact-framework.html&quot;&gt;Ideas 2.0: Enum.GetValues in Compact Framework&lt;/a&gt;:</source>
          <target state="translated">Некоторые версии .NET Framework не поддерживают &lt;code&gt;Enum.GetValues&lt;/code&gt; . Вот хороший обходной путь от &lt;a href=&quot;https://web.archive.org/web/20100530072822/http://ideas.dalezak.ca/2008/11/enumgetvalues-in-compact-framework.html&quot;&gt;Ideas 2.0: Enum.GetValues ​​в Compact Framework&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="749ad7c6ceddd06a44a6cc8eda059e33ad78e6e0" translate="yes" xml:space="preserve">
          <source>That's at least a little faster, ja?</source>
          <target state="translated">Это хотя бы немного быстрее,ja?</target>
        </trans-unit>
        <trans-unit id="5ea366c0157b9d18b4275a7ff3221c90cd637a68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.enum.getnames(v=vs.110).aspx&quot;&gt;System.Enum.GetNames method&lt;/a&gt; can be used to retrieve an array of strings which are the names of the enum values, as the name suggests.</source>
          <target state="translated">Метод &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/system.enum.getnames(v=vs.110).aspx&quot;&gt;System.Enum.GetNames&lt;/a&gt; можно использовать для получения массива строк, которые являются именами значений перечисления, как следует из названия.</target>
        </trans-unit>
        <trans-unit id="9454a0d96d98fe3891e37f1a5902de10e403389c" translate="yes" xml:space="preserve">
          <source>The author uses a double for-loop to iterate through a pair of Enumerators (to create a full deck of cards):</source>
          <target state="translated">Автор использует двойную петлю for-loop для итерации через пару Enumerators (для создания полной колоды карт):</target>
        </trans-unit>
        <trans-unit id="d9ceb8e1cff9691037ef71f5e6ef12dffd8981d8" translate="yes" xml:space="preserve">
          <source>The enum itself must be decorated with the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.flagsattribute.aspx&quot;&gt;FlagsAttribute&lt;/a&gt;:</source>
          <target state="translated">Сам перечисление должно быть украшено &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.flagsattribute.aspx&quot;&gt;атрибутом Flags&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="31f80d82d321cecc7a18a82ce47aae20ea4c6a29" translate="yes" xml:space="preserve">
          <source>The first will give you values in form on an array of **&lt;code&gt;object&lt;/code&gt;**s, and the second will give you values in form of an array of **&lt;code&gt;String&lt;/code&gt;**s.</source>
          <target state="translated">Первый даст вам значения в виде массива ** &lt;code&gt;object&lt;/code&gt; ** с, а второй даст вам значения в виде массива ** &lt;code&gt;String&lt;/code&gt; ** с.</target>
        </trans-unit>
        <trans-unit id="a3c00a868093bad7c9671d53272d539a2466a64d" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;getListOfEnum&lt;/code&gt; uses reflection to take any enum type and returns an &lt;code&gt;IEnumerable&lt;/code&gt; of all enum values.</source>
          <target state="translated">Метод &lt;code&gt;getListOfEnum&lt;/code&gt; использует отражение, чтобы взять любой тип перечисления и возвращает &lt;code&gt;IEnumerable&lt;/code&gt; всех значений перечисления.</target>
        </trans-unit>
        <trans-unit id="55f11269620118a0c51541b00ccb10c4cded0769" translate="yes" xml:space="preserve">
          <source>There are two ways to iterate an &lt;code&gt;Enum&lt;/code&gt;:</source>
          <target state="translated">Есть два способа перебора &lt;code&gt;Enum&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b4b1865dc4a7fd39f1b8aa8db86d453dcc081bf2" translate="yes" xml:space="preserve">
          <source>There you go, &lt;code&gt;IEnumerable&amp;lt;Suit&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Вот, &lt;code&gt;IEnumerable&amp;lt;Suit&amp;gt;&lt;/code&gt; , IEnumerable &amp;lt;Suit&amp;gt; .</target>
        </trans-unit>
        <trans-unit id="39a561dadc1177d56df15e8441fdf0e4446cfa83" translate="yes" xml:space="preserve">
          <source>This question appears in Chapter 10 of &quot;&lt;a href=&quot;http://www.amazon.ca/Microsoft-Visual-2013-Step/dp/073568183X&quot;&gt;C# Step by Step 2013&lt;/a&gt;&quot;</source>
          <target state="translated">Этот вопрос появляется в главе 10 &amp;laquo; &lt;a href=&quot;http://www.amazon.ca/Microsoft-Visual-2013-Step/dp/073568183X&quot;&gt;C # Step by Step 2013&lt;/a&gt; &amp;raquo;</target>
        </trans-unit>
        <trans-unit id="cf5b7c750a4b16617dfd7cff20be48990a9d7985" translate="yes" xml:space="preserve">
          <source>This:</source>
          <target state="translated">This:</target>
        </trans-unit>
        <trans-unit id="089ebedeb2803ff4e74259ec02f9b991ccf33afb" translate="yes" xml:space="preserve">
          <source>Three ways:</source>
          <target state="translated">Три способа:</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="33b5900dd65f1fd3618f19573c76c63e4674e21f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Cast&amp;lt;T&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Используйте &lt;code&gt;Cast&amp;lt;T&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d00d002ca2e26a173c65238f0c1b8c6432fbf90d" translate="yes" xml:space="preserve">
          <source>Use it in a &lt;code&gt;foreach&lt;/code&gt; loop as below:</source>
          <target state="translated">Используйте его в цикле &lt;code&gt;foreach&lt;/code&gt; , как показано ниже:</target>
        </trans-unit>
        <trans-unit id="644d8c6b477119eaf658031f82a7cb1c621f1d00" translate="yes" xml:space="preserve">
          <source>What if you know the type will be an &lt;code&gt;enum&lt;/code&gt;, but you don't know what the exact type is at compile time?</source>
          <target state="translated">Что если вы знаете, что типом будет &lt;code&gt;enum&lt;/code&gt; , но вы не знаете, какой это тип во время компиляции?</target>
        </trans-unit>
        <trans-unit id="d713ca8d870cdfeb112abd654479d42242f3e918" translate="yes" xml:space="preserve">
          <source>Will output:</source>
          <target state="translated">Выходит:</target>
        </trans-unit>
        <trans-unit id="e747aad7bee356ac10c009028151f40094025583" translate="yes" xml:space="preserve">
          <source>You won't get &lt;code&gt;Enum.GetValues()&lt;/code&gt; in &lt;a href=&quot;http://en.wikipedia.org/wiki/Microsoft_Silverlight&quot;&gt;Silverlight&lt;/a&gt;.</source>
          <target state="translated">Вы не получите &lt;code&gt;Enum.GetValues()&lt;/code&gt; в &lt;a href=&quot;http://en.wikipedia.org/wiki/Microsoft_Silverlight&quot;&gt;Silverlight&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26393ee27fab3122bc1d86c27587f0ca6510073c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;PlayingCard&lt;/code&gt; is a card object with a defined &lt;code&gt;Suit&lt;/code&gt; and &lt;code&gt;Value&lt;/code&gt;:</source>
          <target state="translated">и &lt;code&gt;PlayingCard&lt;/code&gt; - это объект карты с определенными мастью и достоинством :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
