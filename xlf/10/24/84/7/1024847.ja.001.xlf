<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1024847">
    <body>
      <group id="1024847">
        <trans-unit id="04eca2d86e336edfe107c929c2e59855b15899fa" translate="yes" xml:space="preserve">
          <source>&quot;Is it possible to add a key to a Python dictionary after it has been created? It doesn't seem to have an .add() method.&quot;</source>
          <target state="translated">&quot;Python辞書を作成した後にキーを追加することは可能でしょうか?.add()メソッドがないようです。&quot;</target>
        </trans-unit>
        <trans-unit id="4ab0ac8c9a73378934e80024d0570549356521d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/38987/how-can-i-merge-union-two-python-dictionaries-in-a-single-expression&quot;&gt;This popular question&lt;/a&gt; addresses &lt;em&gt;functional&lt;/em&gt; methods of merging dictionaries &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/38987/how-can-i-merge-union-two-python-dictionaries-in-a-single-expression&quot;&gt;このよくある質問&lt;/a&gt;は、辞書 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; をマージする&lt;em&gt;機能&lt;/em&gt;的な方法を扱ってい&lt;em&gt;ます&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad001b0828fca5ae3c82625f31c6bb441ba469a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaultdict&lt;/code&gt; can also be used with complex data types such as &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;defaultdict&lt;/code&gt; は、 &lt;code&gt;list&lt;/code&gt; や &lt;code&gt;set&lt;/code&gt; などの複雑なデータ型でも使用できます。</target>
        </trans-unit>
        <trans-unit id="3b929177a76d46636bc59ee1a9414e08ccf23217" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;my_dict&lt;/code&gt; is now:</source>
          <target state="translated">&lt;code&gt;my_dict&lt;/code&gt; は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6e93c63524908f0f74096b8c3156a602a3753de3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_params&lt;/code&gt; is equal to &lt;code&gt;{'a': 1, 'b': 2, 'c': 3}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new_params&lt;/code&gt; は &lt;code&gt;{'a': 1, 'b': 2, 'c': 3}&lt;/code&gt; 等しい</target>
        </trans-unit>
        <trans-unit id="8d1585b803e1652c6e2085fcbf2d21217dee1387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt; is still equal to &lt;code&gt;{'a': 1, 'b': 2}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; はまだ &lt;code&gt;{'a': 1, 'b': 2}&lt;/code&gt; 等しい</target>
        </trans-unit>
        <trans-unit id="d501fe2570ed3293f58c5ce5460d711f502caa12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: The first method above only works if the keys in &lt;code&gt;b&lt;/code&gt; are strings.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注：上記の最初の方法は、 &lt;code&gt;b&lt;/code&gt; のキーが文字列の場合にのみ機能します。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2601d5077d58f1f6c225d2c1738c86f152c2d7a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In Python 3.5+ you can do:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Python 3.5以降では、次のことができます。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73996e032b248c04ab8caa9f7c14f69e2df001c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Python requires that you first add a sub</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Pythonでは、最初にサブを追加する必要があります</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5018b70000138d5df7f921ebffdd2cac6a28885e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Python 2 equivalent is:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Python 2に相当するものは次のとおりです。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a339136d5630eda985681c6701c00f1ea6b8f95e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To add or modify a single element&lt;/strong&gt;, the &lt;code&gt;b&lt;/code&gt; dictionary would contain only that one element...</source>
          <target state="translated">&lt;strong&gt;単一の要素を追加または変更する&lt;/strong&gt;には、 &lt;code&gt;b&lt;/code&gt; ディクショナリにはその1つの要素のみが含まれます...</target>
        </trans-unit>
        <trans-unit id="da499b5301b989b6a1a605c94874f3c525420c09" translate="yes" xml:space="preserve">
          <source>Adding an element automatically initialises the list.</source>
          <target state="translated">要素を追加すると自動的にリストが初期化されます。</target>
        </trans-unit>
        <trans-unit id="683cea09edf080a37df4a34fb6508de828da5791" translate="yes" xml:space="preserve">
          <source>After either of these:</source>
          <target state="translated">このどちらかの後に</target>
        </trans-unit>
        <trans-unit id="ca0a4e48f5bd8b26fa85a737d2708df901169ec2" translate="yes" xml:space="preserve">
          <source>Another efficient way of doing this with the update method is with keyword arguments, but since they have to be legitimate python words, you can't have spaces or special symbols or start the name with a number, but many consider this a more readable way to create keys for a dict, and here we certainly avoid creating an extra unnecessary &lt;code&gt;dict&lt;/code&gt;:</source>
          <target state="translated">updateメソッドでこれを行う別の効率的な方法は、キーワード引数を使用することですが、それらは正当なpython単語である必要があるため、スペースや特殊記号を使用したり、名前を数字で始めることはできませんが、多くの人がこれをより読みやすい方法と考えています辞書のキーを作成するために、ここで私たちは確かに余分な不要な &lt;code&gt;dict&lt;/code&gt; 作成を避けます：</target>
        </trans-unit>
        <trans-unit id="4c893d88e38b8da8202ff64ca99c0a9e5057064a" translate="yes" xml:space="preserve">
          <source>Best Practice 1: Subscript notation</source>
          <target state="translated">ベストプラクティス1:添字表記</target>
        </trans-unit>
        <trans-unit id="ee37591de484a99eb48a9bc98bda86e813d9c8f2" translate="yes" xml:space="preserve">
          <source>Best Practice 2: The &lt;code&gt;update&lt;/code&gt; method - 2 ways</source>
          <target state="translated">ベストプラクティス2： &lt;code&gt;update&lt;/code&gt; 方法-2つの方法</target>
        </trans-unit>
        <trans-unit id="82fd8d7e0bcfdd1da88305b692e30eb31d1cf0a4" translate="yes" xml:space="preserve">
          <source>Check if a key is already in dictionary</source>
          <target state="translated">キーが既に辞書に登録されているかどうかをチェック</target>
        </trans-unit>
        <trans-unit id="f67c0362cd7b8147f13b2d5a76db3a64115a6abe" translate="yes" xml:space="preserve">
          <source>Create a dictionary from two lists</source>
          <target state="translated">2つのリストから辞書を作成</target>
        </trans-unit>
        <trans-unit id="c318045ce8395ad18b41f4d3d8eeff8fb211aa5e" translate="yes" xml:space="preserve">
          <source>Creating a dictionary with initial values</source>
          <target state="translated">初期値で辞書を作成する</target>
        </trans-unit>
        <trans-unit id="007ef487c0ab13c7eba1f5da4ab8c155bcc1a2d0" translate="yes" xml:space="preserve">
          <source>Creating a merged dictionary without modifying originals</source>
          <target state="translated">元の辞書を変更せずにマージされた辞書を作成する</target>
        </trans-unit>
        <trans-unit id="d926f36f38031abc15a68e74b97ef479550883ea" translate="yes" xml:space="preserve">
          <source>Creating a merged dictionary without modifying originals:</source>
          <target state="translated">オリジナルを変更せずにマージされた辞書を作成します。</target>
        </trans-unit>
        <trans-unit id="d1f247308a0e11faa03c3b75d469095dcbcd9bf3" translate="yes" xml:space="preserve">
          <source>Creating an empty dictionary</source>
          <target state="translated">空の辞書の作成</target>
        </trans-unit>
        <trans-unit id="6c0b1ef1dfb363843aa061d29046a36c2fe18c2e" translate="yes" xml:space="preserve">
          <source>Deleting items in dictionary</source>
          <target state="translated">辞書の項目を削除する</target>
        </trans-unit>
        <trans-unit id="e2f12086d0ce0d1bd023d0978333425bfbc88cb8" translate="yes" xml:space="preserve">
          <source>Example: Add a new entry to your dictionary &amp;amp; sub dictionary</source>
          <target state="translated">例：辞書とサブ辞書に新しいエントリを追加する</target>
        </trans-unit>
        <trans-unit id="c51d3114bf34ea5d9d02d882fbc1c15dde414d6a" translate="yes" xml:space="preserve">
          <source>Feel free to add more!</source>
          <target state="translated">ご自由に追加してください</target>
        </trans-unit>
        <trans-unit id="21b8e2c1ac3b0fa7f64e3918b7d05b6d8a91bfb5" translate="yes" xml:space="preserve">
          <source>For adding a single key, the accepted answer has less computational overhead.</source>
          <target state="translated">単一のキーを追加する場合、受け入れられた答えは計算オーバーヘッドが少なくなります。</target>
        </trans-unit>
        <trans-unit id="9ce5b9ee6a88f9e23557639655e58e51344bc688" translate="yes" xml:space="preserve">
          <source>Gives:</source>
          <target state="translated">Gives:</target>
        </trans-unit>
        <trans-unit id="6bf08be80db6bb207abab39eaae33bda80c9e0de" translate="yes" xml:space="preserve">
          <source>Here are some of the more straightforward methods (tested in Python 3)...</source>
          <target state="translated">ここでは、より簡単な方法をいくつか紹介します(Python 3でテスト済み)...</target>
        </trans-unit>
        <trans-unit id="7eeb65e3d0b9300bdfd81a2a351ceb19234b44e1" translate="yes" xml:space="preserve">
          <source>Here's another way that I didn't see here:</source>
          <target state="translated">ここにはなかった別の方法があります。</target>
        </trans-unit>
        <trans-unit id="c80ca74c688588bd09c7cd450bb9d84c48c140cc" translate="yes" xml:space="preserve">
          <source>How can I add new keys to a dictionary</source>
          <target state="translated">辞書に新しいキーを追加するには</target>
        </trans-unit>
        <trans-unit id="84aa9f6a9e0a85147606e49e1f706d1b73446c21" translate="yes" xml:space="preserve">
          <source>However, if you'd like to add, for example, thousands of new key-value pairs, you should consider using the &lt;code&gt;update()&lt;/code&gt; method.</source>
          <target state="translated">ただし、たとえば数千の新しいキーと値のペアを追加する場合は、 &lt;code&gt;update()&lt;/code&gt; メソッドの使用を検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="f781565580385fe51694b451bc7ed3d85575bded" translate="yes" xml:space="preserve">
          <source>I feel like consolidating info about Python dictionaries:</source>
          <target state="translated">Pythonの辞書の情報を集約したい気分です。</target>
        </trans-unit>
        <trans-unit id="fe9540b28ec3329620b845c15367febdc19cbf33" translate="yes" xml:space="preserve">
          <source>I think it would also be useful to point out Python's &lt;strong&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.html&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; module that consists of many useful dictionary subclasses and wrappers that simplify the &lt;strong&gt;addition and modification of data types in a dictionary&lt;/strong&gt;, specifically &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.defaultdict&quot;&gt;&lt;strong&gt;&lt;code&gt;defaultdict&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">ディクショナリ&lt;strong&gt;のデータ型の追加と変更&lt;/strong&gt;を簡単にする多くの便利なディクショナリサブクラスとラッパー、特に&lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.defaultdict&quot;&gt;&lt;strong&gt; &lt;code&gt;defaultdict&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt;で構成されるPythonの&lt;strong&gt;&lt;a href=&quot;https://docs.python.org/3/library/collections.html&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt;モジュールを指摘することも役立つと思います。</target>
        </trans-unit>
        <trans-unit id="58b953bf28537ef05b6330d05a69cdb056422cd2" translate="yes" xml:space="preserve">
          <source>If the key does not yet exist, &lt;code&gt;defaultdict&lt;/code&gt; assigns the value given (in our case &lt;code&gt;10&lt;/code&gt;) as the initial value to the dictionary (often used inside loops). This operation therefore does two things: it &lt;strong&gt;adds a new key to a dictionary (as per question), &lt;em&gt;and&lt;/em&gt; assigns the value if the key doesn't yet exist.&lt;/strong&gt; With the standard dictionary, this would have raised an error as the &lt;code&gt;+=&lt;/code&gt; operation is trying to access a value that doesn't yet exist:</source>
          <target state="translated">キーがまだ存在しない場合、 &lt;code&gt;defaultdict&lt;/code&gt; は指定された値（この場合は &lt;code&gt;10&lt;/code&gt; ）を初期値として辞書に割り当てます（ループ内でよく使用されます）。 したがって、この操作は2つのことを行い&lt;strong&gt;ます。新しい質問を（質問に従って）辞書&lt;/strong&gt;に&lt;strong&gt;追加し、キーがまだ存在しない場合は値&lt;em&gt;を&lt;/em&gt;割り当てます。&lt;/strong&gt; 標準の辞書では、 &lt;code&gt;+=&lt;/code&gt; 操作がまだ存在しない値にアクセスしようとしているため、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="34460f694884d22830583b7d0ecc808eac4cf38e" translate="yes" xml:space="preserve">
          <source>If you want to add a dictionary within a dictionary you can do it this way.</source>
          <target state="translated">辞書の中に辞書を追加したい場合は、このようにします。</target>
        </trans-unit>
        <trans-unit id="c1c28f910100ccbcd2b7d117b11137ad326d77bf" translate="yes" xml:space="preserve">
          <source>If you're not joining two dictionaries, but adding new key-value pairs to a dictionary, then using the subscript notation seems like the best way.</source>
          <target state="translated">2つの辞書を結合するのではなく、辞書に新しいキーと値のペアを追加するのであれば、添え字表記を使用するのが最善の方法のように思えます。</target>
        </trans-unit>
        <trans-unit id="7c5a136df2e826799a0ed49363226be36f4e2af7" translate="yes" xml:space="preserve">
          <source>In fact, defining &lt;code&gt;__getitem__&lt;/code&gt; and &lt;code&gt;__setitem__&lt;/code&gt; methods is how you can make your own class support the  square bracket syntax. See &lt;a href=&quot;https://python.developpez.com/cours/DiveIntoPython/php/endiveintopython/object_oriented_framework/special_class_methods.php&quot;&gt;https://python.developpez.com/cours/DiveIntoPython/php/endiveintopython/object_oriented_framework/special_class_methods.php&lt;/a&gt;</source>
          <target state="translated">実際、 &lt;code&gt;__getitem__&lt;/code&gt; および &lt;code&gt;__setitem__&lt;/code&gt; メソッドの定義は、独自のクラスで角括弧構文をサポートする方法です。 &lt;a href=&quot;https://python.developpez.com/cours/DiveIntoPython/php/endiveintopython/object_oriented_framework/special_class_methods.php&quot;&gt;https://python.developpez.com/cours/DiveIntoPython/php/endiveintopython/object_oriented_framework/special_class_methods.phpを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="c3ca7494efc8866f48f970515cffc68077cede67" translate="yes" xml:space="preserve">
          <source>Inserting/Updating a single value</source>
          <target state="translated">挿入更新単一の値を更新する</target>
        </trans-unit>
        <trans-unit id="e17b244054d460d3ea34f1a148402b3a9f13a7e2" translate="yes" xml:space="preserve">
          <source>Inserting/Updating multiple values</source>
          <target state="translated">挿入複数の値の更新</target>
        </trans-unit>
        <trans-unit id="ffa6d0b860c9583fcb4129c001e4584597a6cb91" translate="yes" xml:space="preserve">
          <source>Is it possible to add a key to a Python dictionary after it has been created?</source>
          <target state="translated">Python辞書を作成した後にキーを追加することは可能ですか?</target>
        </trans-unit>
        <trans-unit id="1f334bada45788eb2d25d0cbd1894b162eb9cf1d" translate="yes" xml:space="preserve">
          <source>It doesn't seem to have an &lt;code&gt;.add()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;.add()&lt;/code&gt; メソッドがないようです。</target>
        </trans-unit>
        <trans-unit id="9d212c65e43810ddf6d4d8cc17b2fd85a7520e22" translate="yes" xml:space="preserve">
          <source>Iterate through pairs in a dictionary</source>
          <target state="translated">辞書内のペアを繰り返し処理する</target>
        </trans-unit>
        <trans-unit id="89707e99a83e8fc10ba3e89a1267b2183fc91f51" translate="yes" xml:space="preserve">
          <source>Let's pretend you want to live in the immutable world and do NOT want to modify the original but want to create a new &lt;code&gt;dict&lt;/code&gt; that is the result of adding a new key to the original.</source>
          <target state="translated">不変の世界に住み、オリジナルを変更したくないが、オリジナルに新しいキーを追加した結果である新しい &lt;code&gt;dict&lt;/code&gt; を作成したいと仮定しましょう。</target>
        </trans-unit>
        <trans-unit id="c05b3de09a182d983d2d192df85c7931241a87f8" translate="yes" xml:space="preserve">
          <source>Magic method, &lt;code&gt;__setitem__&lt;/code&gt;, and why it should be avoided</source>
          <target state="translated">マジックメソッド &lt;code&gt;__setitem__&lt;/code&gt; と、なぜそれを避けるべきか</target>
        </trans-unit>
        <trans-unit id="a328da44292955eb3e07db8e7fb25d80212d3eff" translate="yes" xml:space="preserve">
          <source>New to Python&amp;nbsp;3.5</source>
          <target state="translated">Python 3.5の新機能</target>
        </trans-unit>
        <trans-unit id="4edb040613659daef3715e1286edccf82a09d7e1" translate="yes" xml:space="preserve">
          <source>New to Python&amp;nbsp;3.9</source>
          <target state="translated">Python 3.9の新機能</target>
        </trans-unit>
        <trans-unit id="cf20e08fc74dec1943b9c074404296220334d375" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;https://stackoverflow.com/a/2255892/514866&quot;&gt;https://stackoverflow.com/a/2255892/514866&lt;/a&gt;</source>
          <target state="translated">リファレンス： &lt;a href=&quot;https://stackoverflow.com/a/2255892/514866&quot;&gt;https&lt;/a&gt; : //stackoverflow.com/a/2255892/514866</target>
        </trans-unit>
        <trans-unit id="65745abd95b26b4a2cfbaac4ad41ab7203838713" translate="yes" xml:space="preserve">
          <source>So many answers and still everybody forgot about the strangely named, oddly behaved, and yet still handy &lt;code&gt;dict.setdefault()&lt;/code&gt;</source>
          <target state="translated">非常に多くの回答があり、奇妙な名前が付けられ、奇妙に振る舞い、それでも便利な &lt;code&gt;dict.setdefault()&lt;/code&gt; をまだ誰もが忘れていました</target>
        </trans-unit>
        <trans-unit id="e800b8d845babd687813e13316500c664f8ed4e9" translate="yes" xml:space="preserve">
          <source>So now we have covered three Pythonic ways of updating a &lt;code&gt;dict&lt;/code&gt;.</source>
          <target state="translated">これで、 &lt;code&gt;dict&lt;/code&gt; を更新する3つのPythonの方法について説明しました。</target>
        </trans-unit>
        <trans-unit id="34681cf08f50bb145828fce3cc070ced57636477" translate="yes" xml:space="preserve">
          <source>So we see that using the subscript notation is actually much faster than using &lt;code&gt;__setitem__&lt;/code&gt;. Doing the Pythonic thing, that is, using the language in the way it was intended to be used, usually is both more readable and computationally efficient.</source>
          <target state="translated">したがって、添え字表記を使用すると、実際には &lt;code&gt;__setitem__&lt;/code&gt; を使用するよりもはるかに高速であることがわかります。 Pythonicのこと、つまり、意図された方法で言語を使用することは、通常、より読みやすく、計算上効率的です。</target>
        </trans-unit>
        <trans-unit id="a656aa2af1115c832571c643fef51343b32d3de0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;merge operator&lt;/em&gt;&lt;code&gt;|&lt;/code&gt; now works for dictionaries:</source>
          <target state="translated">&lt;em&gt;マージ演算子&lt;/em&gt; &lt;code&gt;|&lt;/code&gt; 辞書で機能するようになりました：</target>
        </trans-unit>
        <trans-unit id="6dda7832f9afb81c5410ec735df0a28b3a9ae560" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;update operator&lt;/em&gt;&lt;code&gt;|=&lt;/code&gt; now works for dictionaries:</source>
          <target state="translated">&lt;em&gt;更新演算子&lt;/em&gt; &lt;code&gt;|=&lt;/code&gt; が辞書で機能するようになりました。</target>
        </trans-unit>
        <trans-unit id="a9dfb14f74f5ba23b1199b110fcc51c8b8dcb117" translate="yes" xml:space="preserve">
          <source>The above is using dictionary comprehension.</source>
          <target state="translated">上記は辞書の理解力を利用しています。</target>
        </trans-unit>
        <trans-unit id="816376b6b1b0653e7c5b78705f0befc4d77dd9ac" translate="yes" xml:space="preserve">
          <source>The orthodox syntax is &lt;code&gt;d[key] = value&lt;/code&gt;, but if your keyboard is missing the square bracket keys you could do:</source>
          <target state="translated">正統な構文は &lt;code&gt;d[key] = value&lt;/code&gt; ですが、キーボードに角かっこキーがない場合は、次のようにできます。</target>
        </trans-unit>
        <trans-unit id="b9db9819504a60edc52842254ca28854e4a72c00" translate="yes" xml:space="preserve">
          <source>There will be times when you don't want to modify the original (you only want the result of adding to the original). &lt;strong&gt;I find this a refreshing alternative to the following:&lt;/strong&gt;</source>
          <target state="translated">オリジナルを変更したくない場合があります（オリジナルに追加した結果だけが必要な場合があります）。 &lt;strong&gt;私はこれが次のさわやかな代替手段だと思っています：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe9f9bb804c273ab92dd6fad89de2270c6f6a45f" translate="yes" xml:space="preserve">
          <source>There's another way of updating a &lt;code&gt;dict&lt;/code&gt; that you shouldn't use, which uses the &lt;code&gt;__setitem__&lt;/code&gt; method. Here's an example of how one might use the &lt;code&gt;__setitem__&lt;/code&gt; method to add a key-value pair to a &lt;code&gt;dict&lt;/code&gt;, and a demonstration of the poor performance of using it:</source>
          <target state="translated">&lt;code&gt;__setitem__&lt;/code&gt; メソッドを使用する、使用してはいけない &lt;code&gt;dict&lt;/code&gt; を更新する別の方法があります。 &lt;code&gt;__setitem__&lt;/code&gt; メソッドを使用して、キーと値のペアを &lt;code&gt;dict&lt;/code&gt; に追加する方法の例と、それを使用した場合のパフォーマンスの低下を示します。</target>
        </trans-unit>
        <trans-unit id="7971e6a051104074fdae0f02322417b6eb5695a2" translate="yes" xml:space="preserve">
          <source>This</source>
          <target state="translated">This</target>
        </trans-unit>
        <trans-unit id="b60959ef74f05198ffbb9483003774741e2ce211" translate="yes" xml:space="preserve">
          <source>This is equivalent to...</source>
          <target state="translated">これは...</target>
        </trans-unit>
        <trans-unit id="6e2a7126f13d73c067c38ca4a0cf0150e9e85b91" translate="yes" xml:space="preserve">
          <source>This is particularly useful if you are working with dictionaries that always consist of the same data types or structures, for example a dictionary of lists.</source>
          <target state="translated">これは、リストの辞書など、常に同じデータ型や構造からなる辞書を扱う場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="cac34963cbb5c84957e51d1bd950df84c8685bf7" translate="yes" xml:space="preserve">
          <source>This uses a new featrue called &lt;em&gt;dictionary unpacking&lt;/em&gt;.</source>
          <target state="translated">これは、 &lt;em&gt;辞書アンパック&lt;/em&gt;と呼ばれる新しい機能を使用します。</target>
        </trans-unit>
        <trans-unit id="5f065f1bcd7e1060c98d49ceb25c6a1c6b0112b2" translate="yes" xml:space="preserve">
          <source>To add multiple keys simultaneously, use &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">複数のキーを同時に追加するには、 &lt;a href=&quot;https://docs.python.org/library/stdtypes.html#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; を&lt;/a&gt;使用します：</target>
        </trans-unit>
        <trans-unit id="48d513119759c4eb5faabc0d8bea779ccd23f528" translate="yes" xml:space="preserve">
          <source>To demonstrate how and how not to use it, let's create an empty dict with the dict literal, &lt;code&gt;{}&lt;/code&gt;:</source>
          <target state="translated">それを使用する方法と使用しない方法を示すために、dictリテラル &lt;code&gt;{}&lt;/code&gt; を使用して空のdictを作成してみましょう。</target>
        </trans-unit>
        <trans-unit id="2f82cbfa84fc78c67f3abbc2c4d07772fc65c2ba" translate="yes" xml:space="preserve">
          <source>To update this dict with a single new key and value, you can use &lt;a href=&quot;https://docs.python.org/2/reference/datamodel.html#the-standard-type-hierarchy&quot;&gt;the subscript notation (see Mappings here)&lt;/a&gt; that provides for item assignment:</source>
          <target state="translated">この辞書を単一の新しいキーと値で更新するには、項目の割り当てを提供&lt;a href=&quot;https://docs.python.org/2/reference/datamodel.html#the-standard-type-hierarchy&quot;&gt;する添え字表記（ここでのマッピングを参照）&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="22cde883903efc2be312b6c06634b84c92a693bf" translate="yes" xml:space="preserve">
          <source>Update or add values for an existing dictionary</source>
          <target state="translated">既存の辞書の値を更新または追加する</target>
        </trans-unit>
        <trans-unit id="f965363578a0a48ee84cf5d50bf813ecbd71ba83" translate="yes" xml:space="preserve">
          <source>We can also update the dict with multiple values efficiently as well using &lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict.update&quot;&gt;the &lt;code&gt;update&lt;/code&gt; method&lt;/a&gt;.  We may be unnecessarily creating an extra &lt;code&gt;dict&lt;/code&gt; here, so we hope our &lt;code&gt;dict&lt;/code&gt; has already been created and came from or was used for another purpose:</source>
          <target state="translated">また&lt;a href=&quot;https://docs.python.org/2/library/stdtypes.html#dict.update&quot;&gt;、 &lt;code&gt;update&lt;/code&gt; メソッド&lt;/a&gt;を使用して、効率的に複数の値でdictを更新することもできます。 ここでは余分な &lt;code&gt;dict&lt;/code&gt; 不必要に作成している可能性があるため、 &lt;code&gt;dict&lt;/code&gt; が既に作成されており、別の目的で使用または使用されていることを願っています。</target>
        </trans-unit>
        <trans-unit id="6b1948cb734207d9dbf1fef75f11bea17febc51f" translate="yes" xml:space="preserve">
          <source>Without the use of &lt;code&gt;defaultdict&lt;/code&gt;, the amount of code to add a new element would be much greater and perhaps looks something like:</source>
          <target state="translated">&lt;code&gt;defaultdict&lt;/code&gt; を使用しない場合、新しい要素を追加するコードの量ははるかに多くなり、おそらく次のようになります。</target>
        </trans-unit>
        <trans-unit id="ad79e6455a72416a2adc86530d1fe884bda628e0" translate="yes" xml:space="preserve">
          <source>Yes it is possible, and it does have a method that implements this, but you don't want to use it directly.</source>
          <target state="translated">はい、それは可能ですし、それはこれを実装したメソッドを持っていますが、あなたはそれを直接使用したくありません。</target>
        </trans-unit>
        <trans-unit id="b2c3f8dcd877c1fd5a3b17344b8da4eca0690a09" translate="yes" xml:space="preserve">
          <source>You can create one:</source>
          <target state="translated">作ることができます。</target>
        </trans-unit>
        <trans-unit id="10b368798be3d1c50d80dd097441baa77fabe765" translate="yes" xml:space="preserve">
          <source>You can use the dictionary constructor and implicit expansion to reconstruct a dictionary. Moreover, interestingly, this method can be used to control the positional order during dictionary construction (&lt;a href=&quot;https://stackoverflow.com/q/39980323/325452&quot;&gt;post Python 3.6&lt;/a&gt;). &lt;a href=&quot;https://mail.python.org/pipermail/python-dev/2017-December/151283.html&quot;&gt;In fact, insertion order is guaranteed for Python 3.7 and above!&lt;/a&gt;</source>
          <target state="translated">辞書コンストラクターと暗黙の展開を使用して、辞書を再構築できます。 さらに、興味深いことに、このメソッドを使用して、辞書の構築中に位置の順序を制御できます（ &lt;a href=&quot;https://stackoverflow.com/q/39980323/325452&quot;&gt;Python 3.6以降&lt;/a&gt; ）。 &lt;a href=&quot;https://mail.python.org/pipermail/python-dev/2017-December/151283.html&quot;&gt;実際、Python 3.7以降では挿入順序が保証されています！&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e903b2f410053125931a305e99c0a07848b4c663" translate="yes" xml:space="preserve">
          <source>add dictionary key, value class.</source>
          <target state="translated">辞書キー、値クラスを追加します。</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="0e9d8b81c479b2fad669112b24581aa30f3d1d3c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;my_dict&lt;/code&gt; is now:</source>
          <target state="translated">そして &lt;code&gt;my_dict&lt;/code&gt; は今です：</target>
        </trans-unit>
        <trans-unit id="720a99ba5cd7b3a8e07151db559bc4dbf2814558" translate="yes" xml:space="preserve">
          <source>basically just does this:</source>
          <target state="translated">基本的にはこれをするだけです。</target>
        </trans-unit>
        <trans-unit id="bb3342ef80392218dd3ddd17d98bb5d8b32fe6d8" translate="yes" xml:space="preserve">
          <source>before adding entries.</source>
          <target state="translated">エントリーを追加する前に</target>
        </trans-unit>
        <trans-unit id="2fc0539c66d69447ca1dfc11b0014ae772488369" translate="yes" xml:space="preserve">
          <source>dict subclass that calls a factory function to supply missing values</source>
          <target state="translated">ファクトリ関数を呼び出して欠損値を供給する dict サブクラス</target>
        </trans-unit>
        <trans-unit id="7f53a68d324346fc8457a1665141697dcc97ee86" translate="yes" xml:space="preserve">
          <source>e.g.</source>
          <target state="translated">e.g.</target>
        </trans-unit>
        <trans-unit id="1dfd948319c95b0ad599608b513acea82f0dd1ed" translate="yes" xml:space="preserve">
          <source>first to check whether the key already exists</source>
          <target state="translated">最初に、キーが既に存在するかどうかを確認するために</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="57f51543353d577af291dc9ea677b91a886b6e55" translate="yes" xml:space="preserve">
          <source>then you can add the new key and value</source>
          <target state="translated">のように、新しいキーと値を追加することができます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
