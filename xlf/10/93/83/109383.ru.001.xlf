<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/109383">
    <body>
      <group id="109383">
        <trans-unit id="59210f2b08d26d330e9074712c1c876a8c43f87b" translate="yes" xml:space="preserve">
          <source>&quot;Full&quot; answer/Live sorted map by values</source>
          <target state="translated">&quot;Полный&quot; ответКарта отсортирована в реальном времени по значениям.</target>
        </trans-unit>
        <trans-unit id="24f34a79fd761c933410c9714132422070ab3ae2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NB&lt;/em&gt;: If you are going to use a TreeMap, remember that if a comparison == 0, then the item is already in the list (which will happen if you have multiple values that compare the same).  To alleviate this, you could add your key to the comparator like so (presuming that your keys and values are &lt;code&gt;Comparable&lt;/code&gt;):</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NB&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Если вы собираетесь использовать TreeMap, помните, что если сравнение == 0, то элемент уже находится в списке (что произойдет, если у вас есть несколько значений, которые сравнивают одно и то же). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы облегчить это, вы можете добавить свой ключ к компаратору следующим образом (при условии, что ваши ключи и значения &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f47325a6fc8222fddd98d7d45f0e52b07510dabd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Approach&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Лучший подход&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1455ec89bb946aa7c607ee9824d6f539e07c38a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Given Map&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Данная карта&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8180e08a074019aecc5b3655f03e62cb28a40fb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: This has changed significantly in June 2012 - the previous code could never work: an internal HashMap is required to lookup the values without creating an infinite loop between the &lt;code&gt;TreeMap.get()&lt;/code&gt; -&amp;gt; &lt;code&gt;compare()&lt;/code&gt; and &lt;code&gt;compare()&lt;/code&gt; -&amp;gt; &lt;code&gt;get()&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Примечание: это значительно изменилось в июне 2012 года - предыдущий код никогда не работал: требуется внутренний HashMap для поиска значений без создания бесконечного цикла между &lt;/font&gt;&lt;/font&gt; &lt;code&gt;TreeMap.get()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -&amp;gt; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d12b121dd20db5c6fbdbda026bff85f6c3142492" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75116e5dff5e402b94cd5e09a93676a05bdbad87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sort the map based on the value in ascending order&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сортировать карту по значению в порядке возрастания&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c1cf3cec9acba942c0f6db02c2b7ed840b8937b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sort the map based on value in desending order&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сортировать карту по значению в порядке убывания&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b321740a16a805ff8e622cd42e8145251809e12f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This code can break in multiple ways.&lt;/strong&gt; If you intend to use the code provided, be sure to read the comments as well to be aware of the implications. For example, values can no longer be retrieved by their key. (&lt;code&gt;get&lt;/code&gt; always returns &lt;code&gt;null&lt;/code&gt;.)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот код может сломаться несколькими способами. &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы намереваетесь использовать предоставленный код, обязательно прочитайте комментарии, чтобы знать о последствиях. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, значения больше не могут быть получены по их ключу. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;get&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; всегда возвращает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a34d20822ab2f8404ff70541e222d92cfd66320b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Three 1-line answers...&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Три однострочных ответа ...&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e07ef7a777bdef36155b1aed7bcd56dbe0b842a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;inputUnsortedMap&lt;/strong&gt; is the input to the code.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;inputUnsortedMap&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это ввод кода.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28138231f05aeaef17c033812972459fd2f8fb4e" translate="yes" xml:space="preserve">
          <source>= &lt;em&gt;Apply natural ordering to the value mapped by the key, and compound that with the natural ordering of the key&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;= &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Применить естественное упорядочение к значению, сопоставленному ключом, и составить его с естественным упорядочением ключа&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="abe33cac7b24cd1b4480a616ed422035183bd2d5" translate="yes" xml:space="preserve">
          <source>Afaik the most cleaner way is utilizing collections to sort map on value:</source>
          <target state="translated">Афайк самый чистый способ-это использование коллекций для сортировки карты по стоимости:</target>
        </trans-unit>
        <trans-unit id="8bcb0e3c67a835c2b781df27ba3939902bc460d3" translate="yes" xml:space="preserve">
          <source>And as the last point I'll add simple iterator:</source>
          <target state="translated">И в качестве последнего пункта я добавлю простой итератор:</target>
        </trans-unit>
        <trans-unit id="6d628eccce9ad2ce1393f4a9fde0250c66bb27d4" translate="yes" xml:space="preserve">
          <source>And here is an embarrassingly incomplete unit test:</source>
          <target state="translated">И вот досадно неполный юнит-тест:</target>
        </trans-unit>
        <trans-unit id="7814e93746d456622d58195d74d5efbfabb45dfa" translate="yes" xml:space="preserve">
          <source>And if you don't want to use these framework... they come with source code.</source>
          <target state="translated">И если вы не хотите использовать этот фреймворк...они поставляются с исходным кодом.</target>
        </trans-unit>
        <trans-unit id="a6642e0e19da4f3fc763ebc54c91b57a8189efe3" translate="yes" xml:space="preserve">
          <source>Based on @devinmoore code, a map sorting methods using generics and supporting both ascending and descending ordering.</source>
          <target state="translated">Основанный на коде @devinmoore,метод сортировки карт с использованием дженериков и поддерживающий как восходящий,так и нисходящий порядок.</target>
        </trans-unit>
        <trans-unit id="1d7ac361a6b0bb62efb129ec2135318521275d21" translate="yes" xml:space="preserve">
          <source>Create customized comparator and use it while creating new TreeMap object.</source>
          <target state="translated">Создайте настраиваемый компаратор и используйте его при создании нового объекта TreeMap.</target>
        </trans-unit>
        <trans-unit id="ab0cf0466a19667cd5504338bae8079c30855ead" translate="yes" xml:space="preserve">
          <source>Depending on the context, using &lt;code&gt;java.util.LinkedHashMap&amp;lt;T&amp;gt;&lt;/code&gt; which rememebers the order in which items are placed into the map.  Otherwise, if you need to sort values based on their natural ordering, I would recommend maintaining a separate List which can be sorted via &lt;code&gt;Collections.sort()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В зависимости от контекста используется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;java.util.LinkedHashMap&amp;lt;T&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который запоминает порядок, в котором элементы размещаются на карте. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В противном случае, если вам нужно отсортировать значения на основе их естественного порядка, я бы порекомендовал поддерживать отдельный список, который можно отсортировать с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Collections.sort()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4053369ef0133035b8f91efc19166be7bfd3d95" translate="yes" xml:space="preserve">
          <source>Don't try the comparators above on a &lt;code&gt;TreeMap&lt;/code&gt;; there's no point trying to compare an inserted key when it doesn't have a value until after the put, i.e., it will break really fast</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Не пытайтесь использовать приведенные выше компараторы на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;TreeMap&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;нет смысла пытаться сравнивать вставленный ключ, когда он не имеет значения, до окончания операции, т. е. он очень быстро сломается&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b77083671289f2571c8f08230f320ac253f1e7c1" translate="yes" xml:space="preserve">
          <source>Don't worry though; if you were obsessed enough with having a &quot;live&quot; map sorted in this manner, you could solve not one but both(!) of the above issues with something crazy like the following:</source>
          <target state="translated">Не волнуйтесь,если бы вы были достаточно одержимы &quot;живой&quot; картой,отсортированной таким образом,вы могли бы решить не одну,а обе(!)из вышеперечисленных проблем с помощью чего-то сумасшедшего,например,следующего:</target>
        </trans-unit>
        <trans-unit id="5e297a41e8ef5ac08adf9ee0810c2244721fa92b" translate="yes" xml:space="preserve">
          <source>Eg:</source>
          <target state="translated">Eg:</target>
        </trans-unit>
        <trans-unit id="b4b3c9f0a22fd38968fff79f6e3693c798293b52" translate="yes" xml:space="preserve">
          <source>Finally, if you need to continously access the sorted information (rather than just sorting it once in a while), you can use an additional multi map. Let me know if you need more details...</source>
          <target state="translated">Наконец,если вам необходим постоянный доступ к отсортированной информации (а не просто сортировка изредка),вы можете использовать дополнительную мультикарту.Дайте мне знать,если вам понадобится больше подробностей...</target>
        </trans-unit>
        <trans-unit id="91779b7bc7a8678dd76731684aa5de7e25a37f72" translate="yes" xml:space="preserve">
          <source>For me it worked fine to adjust the comparator, if it equals do not return 0 but -1.</source>
          <target state="translated">Для меня это отлично сработало,чтобы отрегулировать компаратор,если он равен не возвращать 0,а -1.</target>
        </trans-unit>
        <trans-unit id="8e406a246e214fab960dc0b3f305274417f48a0c" translate="yes" xml:space="preserve">
          <source>For reverse ordering, replace:</source>
          <target state="translated">При обратном заказе замените:</target>
        </trans-unit>
        <trans-unit id="53025cbca741873d6864b1a49b4f17f8a1e6fbbd" translate="yes" xml:space="preserve">
          <source>For sure the solution of Stephen is really great, but for those who can't use Guava:</source>
          <target state="translated">Конечно,решение от Стивена действительно замечательное,но для тех,кто не может использовать Гуаву:</target>
        </trans-unit>
        <trans-unit id="bca8a2d6906fd6ec7b91d1353a79f62dfa010e80" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;http://www.programmersheaven.com/download/49349/download.aspx&quot;&gt;http://www.programmersheaven.com/download/49349/download.aspx&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.programmersheaven.com/download/49349/download.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.programmersheaven.com/download/49349/download.aspx&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56a87779c28758fc061e9ef20e880e2cdeac315c" translate="yes" xml:space="preserve">
          <source>Here is a solution that I think fits better:</source>
          <target state="translated">Вот решение,которое,как мне кажется,лучше подходит:</target>
        </trans-unit>
        <trans-unit id="139f56c76399a711c8997f96d98e566e40c24f0d" translate="yes" xml:space="preserve">
          <source>Here is an OO solution (i.e., doesn't use &lt;code&gt;static&lt;/code&gt; methods):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот решение OO (то есть, не использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; методы):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c533c62227f4b7c2270b57f90b436d33422eae0" translate="yes" xml:space="preserve">
          <source>Here's a generic version of such a thing:</source>
          <target state="translated">Вот общая версия такой вещи:</target>
        </trans-unit>
        <trans-unit id="084fe78490cb0d73e4a3807b7c36dde72217acab" translate="yes" xml:space="preserve">
          <source>Here's a generic-friendly version:</source>
          <target state="translated">Вот общая дружелюбная версия:</target>
        </trans-unit>
        <trans-unit id="9ac0ebba1bd0f6ef3b804bbac08300bd0d50871c" translate="yes" xml:space="preserve">
          <source>Here's a more efficient albeit less appealing version:</source>
          <target state="translated">Вот более эффективная,хотя и менее привлекательная версия:</target>
        </trans-unit>
        <trans-unit id="5e29940c32e352c554753e7c84c8ed529fb6af4e" translate="yes" xml:space="preserve">
          <source>Here's my solution for sorting by value a map.
This solution handle the case where there are twice the same value etc...</source>
          <target state="translated">Вот мое решение для сортировки по значению карты.Это решение обрабатывает случай,когда есть дважды одно и то же значение и т.д...</target>
        </trans-unit>
        <trans-unit id="fd68565812d25e5ceec29703dbcb893980a46c19" translate="yes" xml:space="preserve">
          <source>Hereby donated to the public domain.</source>
          <target state="translated">Таким образом,пожертвованные в общественное достояние.</target>
        </trans-unit>
        <trans-unit id="de896150fc621e06779026f9882ddc4af288aa1f" translate="yes" xml:space="preserve">
          <source>Hope it will help some folks</source>
          <target state="translated">Надеюсь,это поможет некоторым людям</target>
        </trans-unit>
        <trans-unit id="67c95dc6919a41c84123a1ba99f5ca2979c22d8b" translate="yes" xml:space="preserve">
          <source>I am relatively new to Java, and often find that I need to sort a &lt;code&gt;Map&amp;lt;Key, Value&amp;gt;&lt;/code&gt; on the values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я относительно новичок в Java и часто нахожу, что мне нужно отсортировать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Map&amp;lt;Key, Value&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по значениям.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="908c833d407b4a2c8b6db9e9799a55f6b8119602" translate="yes" xml:space="preserve">
          <source>I cooked up a generic friendly example that solves this use case. This implementation does not honor all of the contracts of the Map interface, such as reflecting value changes and removals in the sets return from keySet() and entrySet() in the original object. I felt such a solution would be too large to include in a Stack Overflow answer. If I manage to create a more complete implementation, perhaps I will post it to Github and then to it link in an updated version of this answer.</source>
          <target state="translated">Я придумал общий дружественный пример,который решает этот случай использования.Эта реализация не учитывает все контракты интерфейса карты,такие как отражение изменений и удалений значений в наборах,возвращаемых из keySet()и entrySet()в исходном объекте.Я чувствовал,что такое решение будет слишком большим,чтобы включать в ответ Stack Overflow.Если мне удастся создать более полную реализацию,возможно,я отправлю ее на Github,а затем на нее ссылку в обновленной версии этого ответа.</target>
        </trans-unit>
        <trans-unit id="317031672a0e89f6c2a629b6a08edb25468f3be6" translate="yes" xml:space="preserve">
          <source>I would use &lt;s&gt;Google Collections&lt;/s&gt;&lt;a href=&quot;http://code.google.com/p/guava-libraries/&quot;&gt;&lt;strong&gt;Guava&lt;/strong&gt;&lt;/a&gt; to do this - if your values are &lt;code&gt;Comparable&lt;/code&gt; then you can use</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я бы использовал &lt;/font&gt;&lt;/font&gt;&lt;s&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Google Collections &lt;/font&gt;&lt;/font&gt;&lt;/s&gt;&lt;a href=&quot;http://code.google.com/p/guava-libraries/&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Guava&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для этого - если ваши значения &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; то вы можете использовать&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a85e4803753bab14df9e953288e5b01e3e3ce743" translate="yes" xml:space="preserve">
          <source>I've looked at the given answers, but a lot of them are more complicated than needed or remove map elements when several keys have same value.</source>
          <target state="translated">Я просмотрел данные ответы,но многие из них сложнее,чем нужно,или удалить элементы карты,когда несколько клавиш имеют одинаковое значение.</target>
        </trans-unit>
        <trans-unit id="663337f61010a182644be7174423fc45b482972b" translate="yes" xml:space="preserve">
          <source>If the values are not comparable, you can pass an explicit comparator:</source>
          <target state="translated">Если значения несопоставимы,можно пройти явный компаратор:</target>
        </trans-unit>
        <trans-unit id="f9d378d984dd82ac33a3950da1cdf1f52e09157b" translate="yes" xml:space="preserve">
          <source>If they're not comparable, then you'll need to do something along the lines of</source>
          <target state="translated">Если они несопоставимы,то вам нужно будет сделать что-то вроде</target>
        </trans-unit>
        <trans-unit id="634e2e6c5860e8e445a868183470782068063016" translate="yes" xml:space="preserve">
          <source>If you have duplicate keys and only a small set of data (&amp;lt;1000) and your code is not performance critical you can just do the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если у вас есть дубликаты ключей и только небольшой набор данных (&amp;lt;1000) и ваш код не критичен по производительности, вы можете просто сделать следующее:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="3d4e611d915be2e33259d2008d321245d328e4a8" translate="yes" xml:space="preserve">
          <source>Important note:</source>
          <target state="translated">Важное примечание:</target>
        </trans-unit>
        <trans-unit id="f883c4ace034e3fd6f1007d660d4ff9a9ac4eda3" translate="yes" xml:space="preserve">
          <source>In example lower you are supposed to add TreeMap a comparator at place where * is. But by java API it gives comparator only keys, not values. All of examples stated here is based on 2 Maps. One Hash and one new Tree. Which is odd.</source>
          <target state="translated">В примере ниже предполагается добавить TreeMap компаратор в месте,где находится *.Но по java API он дает компаратору только ключи,а не значения.Все приведенные здесь примеры основаны на 2 картах.Одна Хэш и одно новое дерево.Что странно.</target>
        </trans-unit>
        <trans-unit id="6586d1e2257bdfe2162cfb24c0698d16633d478f" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;Collections.sort&lt;/code&gt; as some do I'd suggest using &lt;code&gt;Arrays.sort&lt;/code&gt;. Actually what &lt;code&gt;Collections.sort&lt;/code&gt; does is something like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вместо использования &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Collections.sort&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как некоторые, я бы предложил использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;На самом деле то, что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;делает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Collections.sort&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выглядит примерно так:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="991c135400c02792721d8921359dce25deb031b3" translate="yes" xml:space="preserve">
          <source>Is not the fastest sort but does the job without any additional dependencies.</source>
          <target state="translated">Не является самым быстрым сортом,но делает работу без дополнительных зависимостей.</target>
        </trans-unit>
        <trans-unit id="b75f10d2fbf40f7c5b8a003fa03c3c07e643fab4" translate="yes" xml:space="preserve">
          <source>Is there an easier way?</source>
          <target state="translated">Есть ли более легкий путь?</target>
        </trans-unit>
        <trans-unit id="d7c0f8bb8d0763b15d4d8a0fcb314fc4f565812c" translate="yes" xml:space="preserve">
          <source>It just calls &lt;code&gt;toArray&lt;/code&gt; on the list and then uses &lt;code&gt;Arrays.sort&lt;/code&gt;. This way all the map entries will be copied three times: once from the map to the temporary list (be it a LinkedList or ArrayList), then to the temporary array and finally to the new map.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он просто вызывает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;toArray&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в списке, а затем использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, все записи карты будут скопированы три раза: один раз из карты во временный список (будь то LinkedList или ArrayList), затем во временный массив и, наконец, в новую карту.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93c570b18e4444f9f408bb17babdf2f8e266be3c" translate="yes" xml:space="preserve">
          <source>It seems much easier than all of the foregoing. Use a TreeMap as follows:</source>
          <target state="translated">Кажется,это намного проще,чем все вышесказанное.Используйте TreeMap следующим образом:</target>
        </trans-unit>
        <trans-unit id="c83aa2b8e919834fc179d59370ab0766046987f6" translate="yes" xml:space="preserve">
          <source>Java 8 offers a new answer: convert the entries into a stream, and use the comparator combinators from Map.Entry:</source>
          <target state="translated">Java 8 предлагает новый ответ:преобразовать записи в поток и использовать компаратор-комбинаторы из Map.Entry:</target>
        </trans-unit>
        <trans-unit id="da486f4bf629dc5b76595ff52258d020b8a1628b" translate="yes" xml:space="preserve">
          <source>Late Entry.</source>
          <target state="translated">Поздний вход.</target>
        </trans-unit>
        <trans-unit id="85e93491091c6837f83f8099436c3104aec0e1f2" translate="yes" xml:space="preserve">
          <source>Major problem. If you use the first answer (Google takes you here), change the comparator to add an equal clause, otherwise you cannot get values from the sorted_map by keys:</source>
          <target state="translated">Большая проблема.Если вы используете первый ответ (Google берет вас здесь),измените компаратор,чтобы добавить равное условие,иначе вы не сможете получить значения из отсортированной_карты по клавишам:</target>
        </trans-unit>
        <trans-unit id="db4bc4dee0cc64da3139b564ccd0fe3a577f993e" translate="yes" xml:space="preserve">
          <source>Map base;
      public ValueComparator(Map base) {
          this.base = base;
      }</source>
          <target state="translated">Map base;public ValueComparator(Карта базы){this.base=base;}</target>
        </trans-unit>
        <trans-unit id="1c3b47602d39948f4c5aaa0860739da90b5ecdab" translate="yes" xml:space="preserve">
          <source>My solution ommits this one step as it does not create unnecessary LinkedList. Here is the code, generic-friendly and performance-optimal:</source>
          <target state="translated">Мое решение не подходит для этого шага,так как оно не создает ненужный LinkedList.Вот код,удобный в использовании и оптимальный по производительности:</target>
        </trans-unit>
        <trans-unit id="a416e119e42ab799185af74495aabb338a062eb4" translate="yes" xml:space="preserve">
          <source>Note that it's rather up in the air how to handle nulls.</source>
          <target state="translated">Обратите внимание,что это скорее в воздухе,как обращаться с нулями.</target>
        </trans-unit>
        <trans-unit id="7e0344ffe6a7120425ae3fbaf57827c1fd6625f8" translate="yes" xml:space="preserve">
          <source>Note that the map is sorted from the highest value to the lowest.</source>
          <target state="translated">Обратите внимание,что карта отсортирована от самого высокого значения до самого низкого.</target>
        </trans-unit>
        <trans-unit id="ef6a9570551cc08f58c8d148af9cf23cd42b2d22" translate="yes" xml:space="preserve">
          <source>Note that this will still not work if your keys compare to 0, but this should be sufficient for most &lt;code&gt;comparable&lt;/code&gt; items (as &lt;code&gt;hashCode&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;compareTo&lt;/code&gt; are often in sync...)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что это все равно не будет работать, если ваши ключи сравниваются с 0, но этого должно быть достаточно для большинства &lt;/font&gt;&lt;/font&gt; &lt;code&gt;comparable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; элементов (поскольку &lt;/font&gt;&lt;/font&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;equals&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; часто синхронизируются ...)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4355eb0b2e5df1a98aae42fe20a2be8a874a9740" translate="yes" xml:space="preserve">
          <source>Now this will most likely work work, but:</source>
          <target state="translated">Скорее всего,это сработает,но..:</target>
        </trans-unit>
        <trans-unit id="f7720bc28b3f9e58540d0f4b5aa865986012280c" translate="yes" xml:space="preserve">
          <source>One important advantage of this approach is that it actually returns a Map, unlike some of the other solutions offered here.</source>
          <target state="translated">Одним из важных преимуществ такого подхода является то,что он фактически возвращает Карту,в отличие от некоторых других решений,предлагаемых здесь.</target>
        </trans-unit>
        <trans-unit id="8e6fcb1ea485639b4d6636b9c4b0b4977af0b4bb" translate="yes" xml:space="preserve">
          <source>Or print to &lt;code&gt;System.out&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Или распечатайте в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;System.out&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="d2861ff73b05fc8241a4c85b96d71884a6634759" translate="yes" xml:space="preserve">
          <source>Point 1 is a bit of a deal-breaker for me; google collections is incredibly lazy (which is good: you can do pretty much every operation in an instant; the real work is done when you start using the result), and this requires copying a &lt;em&gt;whole&lt;/em&gt; map!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пункт 1 для меня немного нарушает условия сделки; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Коллекции Google невероятно ленивы (и это хорошо: вы можете выполнять практически любую операцию за один раз; настоящая работа выполняется, когда вы начинаете использовать результат), и для этого нужно скопировать &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;всю&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; карту!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="98ea47745006dea89293ca840f3a5ad25b683fb2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://guava-libraries.googlecode.com/svn/trunk/javadoc/com/google/common/collect/Ordering.html#onResultOf(com.google.common.base.Function)&quot;&gt;Ordering.onResultOf()&lt;/a&gt; and &lt;a href=&quot;http://guava-libraries.googlecode.com/svn/trunk/javadoc/com/google/common/base/Functions.html#forMap(java.util.Map)&quot;&gt;Functions.forMap()&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://guava-libraries.googlecode.com/svn/trunk/javadoc/com/google/common/collect/Ordering.html#onResultOf(com.google.common.base.Function)&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ordering.onResultOf ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://guava-libraries.googlecode.com/svn/trunk/javadoc/com/google/common/base/Functions.html#forMap(java.util.Map)&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Functions.forMap ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ae9128126439315f3fe5b57e92b16bd5aeefaa3" translate="yes" xml:space="preserve">
          <source>Since &lt;strong&gt;&lt;em&gt;TreeMap&amp;lt;&amp;gt; does not work&lt;/em&gt;&lt;/strong&gt; for values that can be equal, I used this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TreeMap &amp;lt;&amp;gt; не работает&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для значений, которые могут быть равны, я использовал это:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2560d76da03a973d81dc40969c1168afacb43741" translate="yes" xml:space="preserve">
          <source>Since the values are not unique, I find myself converting the &lt;code&gt;keySet&lt;/code&gt; into an &lt;code&gt;array&lt;/code&gt;, and sorting that array through &lt;strong&gt;array sort&lt;/strong&gt; with a &lt;strong&gt;custom comparator&lt;/strong&gt; that sorts on the value associated with the key.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку значения не являются уникальными, я обнаруживаю, что преобразую &lt;/font&gt;&lt;/font&gt; &lt;code&gt;keySet&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и сортирую этот массив с помощью &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;сортировки массива&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с помощью &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;специального компаратора,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который сортирует значения, связанные с ключом.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2e5e0de973edbeefbc690e381c5294117ccaacdb" translate="yes" xml:space="preserve">
          <source>So change the map into a set this way:</source>
          <target state="translated">Так что поменяйте карту на набор таким образом:</target>
        </trans-unit>
        <trans-unit id="6f0d43b1bb10002aa10059b154ca589ad700d52b" translate="yes" xml:space="preserve">
          <source>So leaves out E!!</source>
          <target state="translated">Так что оставь Рик!!!</target>
        </trans-unit>
        <trans-unit id="20546584e598da1a7b70e4b09221b905bd1015ac" translate="yes" xml:space="preserve">
          <source>So now that we've got a comparator that does what we want, we need to get a result from it.</source>
          <target state="translated">Так что теперь,когда у нас есть компаратор,который делает то,что мы хотим,мы должны получить от него результат.</target>
        </trans-unit>
        <trans-unit id="94ef289c163c75bc16c30b324e624ee8f4a98a5e" translate="yes" xml:space="preserve">
          <source>Some simple changes in order to have a sorted map with pairs that have duplicate values. In the compare method (class ValueComparator) when values are equal do not return 0 but return the result of comparing the 2 keys. Keys are distinct in a map so you succeed to keep duplicate values (which are sorted by keys by the way). So the above example could be modified like this:</source>
          <target state="translated">Некоторые простые изменения для того,чтобы иметь отсортированную карту с парами,которые имеют дублирующиеся значения.В методе сравнения (класс ValueComparator)при равенстве значений возвращается не 0,а результат сравнения 2-х ключей.Ключи на карте различаются,поэтому удается сохранить дубликаты значений (которые,кстати,отсортированы по ключам).Таким образом,приведенный выше пример можно было бы модифицировать следующим образом:</target>
        </trans-unit>
        <trans-unit id="030ced435e55b2bcce84e017b1b7d183f00f27c4" translate="yes" xml:space="preserve">
          <source>Sort a Map&lt;Key, Value&gt; by values</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сортировать карту&lt;/font&gt;&lt;/font&gt;&lt;key, value=&quot;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по значениям&lt;/font&gt;&lt;/font&gt;&lt;/key,&gt;</target>
        </trans-unit>
        <trans-unit id="4a0bb84d0747e0eff183b9159d67a14ec1d37164" translate="yes" xml:space="preserve">
          <source>Sorting the keys requires the Comparator to look up each value for each comparison. A more scalable solution would use the entrySet directly, since then the value would be immediately available for each comparison (although I haven't backed this up by numbers).</source>
          <target state="translated">Сортировка ключей требует от компаратора поиска каждого значения для каждого сравнения.Более масштабируемое решение будет использовать entrySet напрямую,так как тогда значение будет сразу же доступно для каждого сравнения (хотя я не делал резервных копий для этого по номерам).</target>
        </trans-unit>
        <trans-unit id="48db8e95acb16a961456895bc67db00673426ef9" translate="yes" xml:space="preserve">
          <source>The answer voted for the most does not work when you have 2 items that equals.
the TreeMap leaves equal values out.</source>
          <target state="translated">Ответ,за который проголосовало большинство,не работает,когда у вас есть 2 элемента,которые равны.TreeMap оставляет равные значения вне.</target>
        </trans-unit>
        <trans-unit id="41e61a3bfd970356553f26101c2af79d288ac372" translate="yes" xml:space="preserve">
          <source>The commons-collections library contains a solution called &lt;a href=&quot;http://commons.apache.org/collections/api-release/org/apache/commons/collections/bidimap/TreeBidiMap.html&quot;&gt;TreeBidiMap&lt;/a&gt;. Or, you could have a look at the Google Collections API. It has &lt;a href=&quot;http://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/collect/TreeMultimap.html&quot;&gt;TreeMultimap&lt;/a&gt; which you could use.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Библиотека commons-collection содержит решение под названием &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://commons.apache.org/collections/api-release/org/apache/commons/collections/bidimap/TreeBidiMap.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TreeBidiMap&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Или вы можете взглянуть на API Google Collections. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;У него есть &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://google-collections.googlecode.com/svn/trunk/javadoc/com/google/common/collect/TreeMultimap.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TreeMultimap,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который вы можете использовать.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d6e545f68964fa59f0aa976d9f8863418abd5b21" translate="yes" xml:space="preserve">
          <source>The constructor would need to be called as</source>
          <target state="translated">Строителя нужно будет называть</target>
        </trans-unit>
        <trans-unit id="3f75b35c9e243539d4c076bc6bc600ed9af292c2" translate="yes" xml:space="preserve">
          <source>The entries are ordered by their values using the given comparator. Alternatively, if your values are mutually comparable, no explicit comparator is needed:</source>
          <target state="translated">Записи упорядочены по их значениям с помощью данного компаратора.В качестве альтернативы,если ваши значения взаимно сопоставимы,явного компаратора не требуется:</target>
        </trans-unit>
        <trans-unit id="02092979de37d83b5ad53f06cac684737782c70a" translate="yes" xml:space="preserve">
          <source>The example:</source>
          <target state="translated">Пример:</target>
        </trans-unit>
        <trans-unit id="35b977c4d4b3f28a69e6b4a7df89b951f0f8fe12" translate="yes" xml:space="preserve">
          <source>The exec:
&lt;a href=&quot;http://www.ideone.com/dq3Lu&quot;&gt;http://www.ideone.com/dq3Lu&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Исполнительный директор: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.ideone.com/dq3Lu&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.ideone.com/dq3Lu&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df416751e8a2d229d8b98d6297b404967b69b568" translate="yes" xml:space="preserve">
          <source>The output:</source>
          <target state="translated">Выход:</target>
        </trans-unit>
        <trans-unit id="3b721cdb3444c2e9ece1f65adc6d3da26eeb67d2" translate="yes" xml:space="preserve">
          <source>The result is a sorted list of Map.Entry objects, from which you can obtain the keys and values.</source>
          <target state="translated">В результате получается отсортированный список объектов Map.Entry,из которого можно получить ключи и значения.</target>
        </trans-unit>
        <trans-unit id="bad039ad9a868f2d0bd4b4a2325abfa3c2035442" translate="yes" xml:space="preserve">
          <source>The returned iterable creates a fresh snapshot of the given map each time it's iterated, so barring concurrent modification, it will always reflect the current state of the map.</source>
          <target state="translated">Возвращаемый итерабельный снимок каждый раз при итерации создает свежий снимок данной карты,поэтому,если запретить одновременную модификацию,он всегда будет отражать текущее состояние карты.</target>
        </trans-unit>
        <trans-unit id="6600a621bf571421e93b166cdc9c42f89b8b645f" translate="yes" xml:space="preserve">
          <source>The returned list is a snapshot of the given map at the time this method is called, so neither will reflect subsequent changes to the other. For a live iterable view of the map:</source>
          <target state="translated">Возвращаемый список является снимком данной карты на момент вызова этого метода,поэтому ни тот,ни другой не будут отражать последующие изменения.Для просмотра карты в реальном времени:</target>
        </trans-unit>
        <trans-unit id="a3b99c1410faa23e32144b3fcd1d422616689057" translate="yes" xml:space="preserve">
          <source>The variable &lt;strong&gt;sortedOutputMap&lt;/strong&gt; will contain the data in decending order when iterated over. To change order just change &amp;gt; to a &amp;lt; in the if statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Переменная &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;sortedOutputMap&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет содержать данные в порядке убывания при повторном выполнении. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы изменить порядок, просто измените&amp;gt; на &amp;lt;в операторе if.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59f1fdb04544d382583d9db4f0fd9c6f4627cb44" translate="yes" xml:space="preserve">
          <source>There are a lot of answers for this question already, but none provided me what I was looking for, a map implementation that returns keys and entries sorted by the associated value, and maintains this property as keys and values are modified in the map. Two &lt;a href=&quot;https://stackoverflow.com/q/13108887/1760575&quot;&gt;other&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/q/7465369/1760575&quot;&gt;questions&lt;/a&gt; ask for this specifically.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;На этот вопрос уже есть много ответов, но ни один из них не дал мне того, что я искал, реализацию карты, которая возвращает ключи и записи, отсортированные по ассоциированному значению, и поддерживает это свойство, поскольку ключи и значения изменяются в карте. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Два &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/q/13108887/1760575&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;других &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/q/7465369/1760575&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вопроса&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; задают это специально.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1209839bd6cf14dede97d52af2da744845f7f6c8" translate="yes" xml:space="preserve">
          <source>There are ways to lessen memory rotation for the above solution. The first ArrayList created could for instance be re-used as a return value; this would require suppression of some generics warnings, but it might be worth it for re-usable library code. Also,  the Comparator does not have to be re-allocated at every invocation.</source>
          <target state="translated">Есть способы уменьшить вращение памяти для вышеуказанного решения.Например,первый созданный ArrayList может быть повторно использован в качестве возвращаемого значения,что потребует подавления некоторых генерических предупреждений,но для кода библиотек многократного использования может оказаться полезным.Кроме того,компаратор не обязательно переопределять при каждом вызове.</target>
        </trans-unit>
        <trans-unit id="b12f5e6b473cc157b1424d13a04089509927952a" translate="yes" xml:space="preserve">
          <source>These may be applied to a TreeMap (as &lt;code&gt;Ordering&lt;/code&gt; extends &lt;code&gt;Comparator&lt;/code&gt;), or a &lt;a href=&quot;https://stackoverflow.com/questions/109383/how-to-sort-a-mapkey-value-on-the-values-in-java/109389#109389&quot;&gt;LinkedHashMap after some sorting&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Они могут быть применены к TreeMap (так как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Ordering&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; расширяет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) или &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/109383/how-to-sort-a-mapkey-value-on-the-values-in-java/109389#109389&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LinkedHashMap после некоторой сортировки&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6979c71753a0155d90f3027d1c6f82d7b3cb6d26" translate="yes" xml:space="preserve">
          <source>This is a variation of Anthony's answer, which doesn't work if there are duplicate values:</source>
          <target state="translated">Это вариант ответа Энтони,который не работает,если есть дублирующиеся значения:</target>
        </trans-unit>
        <trans-unit id="a811c4132ea0a610461d949d5c7ba1c70cfca427" translate="yes" xml:space="preserve">
          <source>This is just too complicated. Maps were not supposed to do such job as sorting them by Value. The easiest way is to create your own Class so it fits your requirement.</source>
          <target state="translated">Это слишком сложно.Карты не должны были делать такую работу,как сортировка по Value.Самый простой способ-это создать свой собственный класс,чтобы он соответствовал вашим требованиям.</target>
        </trans-unit>
        <trans-unit id="d286cc2e485a6d93d49f6c91c48c8676c5d6c240" translate="yes" xml:space="preserve">
          <source>This way you can easily add more dependencies.</source>
          <target state="translated">Таким образом,вы можете легко добавить больше зависимостей.</target>
        </trans-unit>
        <trans-unit id="7bb53a9ee7a3be4c0ad640c2617047bbab35fedd" translate="yes" xml:space="preserve">
          <source>This will let you consume the entries sorted in ascending order of value.  If you want descending value, simply reverse the comparator:</source>
          <target state="translated">Это позволит вам использовать записи,отсортированные в порядке возрастания значения.Если вы хотите,чтобы значение было нисходящим,просто переверните компаратор:</target>
        </trans-unit>
        <trans-unit id="4ad3c99013fc121493dd959d33868e7de262e3a8" translate="yes" xml:space="preserve">
          <source>To accomplish this with the new features in Java 8:</source>
          <target state="translated">Достичь этого можно с помощью новых возможностей Java 8:</target>
        </trans-unit>
        <trans-unit id="92d4a6e82e1399c0d8cff002a694c0469b844052" translate="yes" xml:space="preserve">
          <source>Use a generic comparator such as :</source>
          <target state="translated">Используйте общий компаратор,такой как :</target>
        </trans-unit>
        <trans-unit id="1193f8d0b344715897c6483e3c90b40961a6ced9" translate="yes" xml:space="preserve">
          <source>Use the below code in your main func</source>
          <target state="translated">Используйте нижеприведенный код в вашей основной функции</target>
        </trans-unit>
        <trans-unit id="520f4a950c7805fdf4ff5d4a995c173724866eaf" translate="yes" xml:space="preserve">
          <source>When we put, we ensure that the hash map has the value for the comparator, and then put to the TreeSet for sorting. But before that we check the hash map to see that the key is not actually a duplicate. Also, the comparator that we create will also include the key so that duplicate values don't delete the non-duplicate keys (due to == comparison).
These 2 items are &lt;em&gt;vital&lt;/em&gt; for ensuring the map contract is kept; if you think you don't want that, then you're almost at the point of reversing the map entirely (to &lt;code&gt;Map&amp;lt;V,K&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда мы помещаем, мы гарантируем, что хэш-карта имеет значение для компаратора, а затем помещаем его в TreeSet для сортировки. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но перед этим мы проверяем хеш-карту, чтобы увидеть, что ключ на самом деле не является дубликатом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, созданный нами компаратор также будет включать ключ, чтобы дублированные значения не удаляли неповторяющиеся ключи (из-за сравнения ==). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эти 2 пункта &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;жизненно важны&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для гарантии сохранения контракта на карту; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;если вы думаете, что не хотите этого, то вы почти полностью изменили карту (на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Map&amp;lt;V,K&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3800ae2840c02be0d42b5cd0fb00d1591c94eae" translate="yes" xml:space="preserve">
          <source>Which will create a function (object) for the map [that takes any of the keys as input, returning the respective value], and then apply natural (comparable) ordering to them [the values].</source>
          <target state="translated">Которая создаст функцию (объект)для карты [который принимает любую из клавиш за ввод,возвращая соответствующее значение],а затем применит к ним естественный (сравнимый)порядок [значения].</target>
        </trans-unit>
        <trans-unit id="ac9a4decda199cbf299b80fbb8b703acf08cb93e" translate="yes" xml:space="preserve">
          <source>While I agree that the constant need to sort a map is probably a smell, I think the following code is the easiest way to do it without using a different data structure.</source>
          <target state="translated">Хотя я согласен с тем,что постоянная необходимость сортировки карты-это,наверное,запах,я думаю,что следующий код-это самый простой способ сделать это без использования другой структуры данных.</target>
        </trans-unit>
        <trans-unit id="d7c9c4a0b243dba0863243e4440b8b1f7dfe26da" translate="yes" xml:space="preserve">
          <source>With Java 8, you can use the &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html&quot;&gt;streams api&lt;/a&gt; to do it in a significantly less verbose way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В Java 8 вы можете использовать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;API потоков,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы сделать это значительно менее многословно:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d08aeac0e37b34150489ddefe62b7e0bf1af4e9b" translate="yes" xml:space="preserve">
          <source>With the advent of Java-8, we can use streams for data manipulation in a very easy/succinct way. You can use streams to sort the map entries by value and create a &lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/LinkedHashMap.html&quot;&gt;LinkedHashMap&lt;/a&gt; which preserves &lt;em&gt;insertion-order&lt;/em&gt; iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С появлением Java-8 мы можем использовать потоки для манипулирования данными очень простым / лаконичным способом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете использовать потоки, чтобы отсортировать записи карты по значению и создать &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.oracle.com/javase/8/docs/api/java/util/LinkedHashMap.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LinkedHashMap,&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который сохраняет &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;итерацию &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;порядка вставки&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61a9d2a8cce194ca596f4da2bd4c8529d8c4688b" translate="yes" xml:space="preserve">
          <source>You can then proceed to use other stream operations to consume the data. For example, if you want the top 10 in a new map:</source>
          <target state="translated">Затем вы можете перейти к использованию других потоковых операций для потребления данных.Например,если вы хотите,чтобы на новой карте было 10 лучших:</target>
        </trans-unit>
        <trans-unit id="4a8d92d6c54f8a8fc3b027577e1fc659355c4c4c" translate="yes" xml:space="preserve">
          <source>You might want to put &lt;strong&gt;&lt;em&gt;list&lt;/em&gt;&lt;/strong&gt; in a &lt;strong&gt;&lt;em&gt;LinkedHashMap&lt;/em&gt;&lt;/strong&gt;, but if you're only going to iterate over it right away, that's superfluous...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Возможно, вы захотите поместить &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;список&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LinkedHashMap&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но если вы собираетесь сразу же повторить его, это лишнее ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c207a3ee6f596118883f2fb3aa238a9d600e6b53" translate="yes" xml:space="preserve">
          <source>You will create class &lt;code&gt;Results&lt;/code&gt;,</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы создадите класс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Results&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c6b8ddb42ba96dd4c4fa8a69d04b9366e5de479" translate="yes" xml:space="preserve">
          <source>and the Comparator class:</source>
          <target state="translated">и класс &quot;Компаратор&quot;:</target>
        </trans-unit>
        <trans-unit id="9a4e01b06fa70cd963fd0806cada0f3c129d33eb" translate="yes" xml:space="preserve">
          <source>and this is the test class (I just tested it, and this works for the Integer, String Map:</source>
          <target state="translated">а это тестовый класс (я только что его протестировал,и это работает для Integer,String Map:</target>
        </trans-unit>
        <trans-unit id="63d7d60a93bb9d00a60d358f5823e138a7be4732" translate="yes" xml:space="preserve">
          <source>and this is the testcase for this:</source>
          <target state="translated">а это-тест-пример для этого:</target>
        </trans-unit>
        <trans-unit id="4b34a8484641332075a7a6a8c58b504c1debcf0e" translate="yes" xml:space="preserve">
          <source>as a response to Aliens (2011 nov. 22):
I Am using this solution for a map of Integer Id's and names, but the idea is the same, so might be the code above is not correct (I will write it in a test and give you the correct code), this is the code for a Map sorting, based on the solution above:</source>
          <target state="translated">как ответ иностранцам (2011 ноя.22):Я использую это решение для карты Интегрального Ида и названий,но идея та же самая,так что,возможно,приведенный выше код некорректен (я напишу его в тесте и дам вам правильный код),это код для сортировки карты,основанный на вышеуказанном решении:</target>
        </trans-unit>
        <trans-unit id="8f1f5dfdb484ce896928a3b42559b8791bae97a1" translate="yes" xml:space="preserve">
          <source>class ValueComparator implements Comparator {</source>
          <target state="translated">класс ValueComparator реализует Comparator {</target>
        </trans-unit>
        <trans-unit id="20f9d7abe77ceaa8e43570e4617e10ec897feb7e" translate="yes" xml:space="preserve">
          <source>here is the code for the Comparator of a Map:</source>
          <target state="translated">вот код для компаратора карты:</target>
        </trans-unit>
        <trans-unit id="61a254bf4f1c04a77d3e03f4583b6ed73eaf3ceb" translate="yes" xml:space="preserve">
          <source>in the example:</source>
          <target state="translated">в примере:</target>
        </trans-unit>
        <trans-unit id="6cac24b6691daafb3e026c0d154c06f28c692bad" translate="yes" xml:space="preserve">
          <source>needs to be done given a complete finished map</source>
          <target state="translated">необходимо сделать при наличии полной готовой карты</target>
        </trans-unit>
        <trans-unit id="0dfff1cb67f373fc0eb5c32ed6e0375d8c0f139b" translate="yes" xml:space="preserve">
          <source>now it returns:</source>
          <target state="translated">Теперь он возвращается:</target>
        </trans-unit>
        <trans-unit id="ce9b7d5944c4ca8809a3f11a4cc40ca740e2b7a9" translate="yes" xml:space="preserve">
          <source>of cource you can make this a lot more generic, but I just needed it for 1 case (the Map)</source>
          <target state="translated">в суде вы можете сделать это гораздо более общим,но мне это было нужно только для одного дела (Карта).</target>
        </trans-unit>
        <trans-unit id="9db5a9dc748beadf9376377d4c6374fa017ac4aa" translate="yes" xml:space="preserve">
          <source>public int compare(Object a, Object b) {</source>
          <target state="translated">public int comparison(Объект a,Объект b){</target>
        </trans-unit>
        <trans-unit id="cdf7e925f5746741c316f5fbcf39ad0dfca90775" translate="yes" xml:space="preserve">
          <source>results</source>
          <target state="translated">results</target>
        </trans-unit>
        <trans-unit id="32f066ab49d567aa0dda290679007c2477ad1732" translate="yes" xml:space="preserve">
          <source>results:</source>
          <target state="translated">results:</target>
        </trans-unit>
        <trans-unit id="98b53d73991861fe92d9df6865853de3b45489b4" translate="yes" xml:space="preserve">
          <source>the exmaple:
unsorted map</source>
          <target state="translated">пример:несортированная карта</target>
        </trans-unit>
        <trans-unit id="eed64825fd44a2f4999dca5fa77dd0db677c4dd3" translate="yes" xml:space="preserve">
          <source>unsorted map:</source>
          <target state="translated">Несортированная карта:</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="9a3a7b33e4fd32b50e5145e2ec8541c7f8f730d2" translate="yes" xml:space="preserve">
          <source>{jobs=200, opportunity=200, USA=100, technology=70, software=50}</source>
          <target state="translated">{занятость=200,возможность=200,США=100,технология=70,программное обеспечение=50}</target>
        </trans-unit>
        <trans-unit id="0ac30418555b78383f524d388809af86794686bb" translate="yes" xml:space="preserve">
          <source>{software=50, technology=70, USA=100, jobs=200, opportunity=200}</source>
          <target state="translated">{программное обеспечение=50,технология=70,США=100,рабочие места=200,возможность=200}</target>
        </trans-unit>
        <trans-unit id="65873d0f887ce71b04e92d909ff1d67a4003826f" translate="yes" xml:space="preserve">
          <source>}
    }</source>
          <target state="translated">}}</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
