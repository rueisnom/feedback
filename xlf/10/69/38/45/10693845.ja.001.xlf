<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/10693845">
    <body>
      <group id="10693845">
        <trans-unit id="a5cd690f3af202426dd9259aa87d20adc73cf533" translate="yes" xml:space="preserve">
          <source>1- document.getElementsByClassName('myElement').style.size = '100px';</source>
          <target state="translated">1-document.getElementsByClassName('myElement').style.size='100px'.</target>
        </trans-unit>
        <trans-unit id="3cdfabdfb8f3581262b97c6e51564e4a9a9eb77b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.querySelector()&lt;/code&gt; selects only the first &lt;strong&gt;one&lt;/strong&gt; element of the specified selector. So it doesn't spit out an array, it's a single value. Similar to &lt;code&gt;document.getElementById()&lt;/code&gt; which fetches ID-elements only, since IDs have to be unique.</source>
          <target state="translated">&lt;code&gt;document.querySelector()&lt;/code&gt; は、指定されたセレクターの最初の&lt;strong&gt;1つの&lt;/strong&gt;要素のみを選択します。 だからそれは配列を吐き出さない、それは単一の値です。 IDは一意である必要があるため、ID要素のみをフェッチする &lt;code&gt;document.getElementById()&lt;/code&gt; と同様です。</target>
        </trans-unit>
        <trans-unit id="909c5dc63d13dea3917448973376a098624d6f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.querySelectorAll()&lt;/code&gt; selects &lt;strong&gt;all&lt;/strong&gt; elements with the specified selector and returns them in an array. Similar to &lt;code&gt;document.getElementsByClassName()&lt;/code&gt; for classes and &lt;code&gt;document.getElementsByTagName()&lt;/code&gt; tags only.</source>
          <target state="translated">&lt;code&gt;document.querySelectorAll()&lt;/code&gt; は、指定されたセレクターで&lt;strong&gt;すべての&lt;/strong&gt;要素を選択し、配列で返します。 クラスの &lt;code&gt;document.getElementsByTagName()&lt;/code&gt; およびdocument.getElementsByTagName（）タグのみに似てい &lt;code&gt;document.getElementsByClassName()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40f2d9b217a4671a73be8b7dfa6c3329794cd499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getElementbyId&lt;/code&gt; will return an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element&quot;&gt;Element object&lt;/a&gt; or null if no element with the ID is found</source>
          <target state="translated">&lt;code&gt;getElementbyId&lt;/code&gt; は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element&quot;&gt;Elementオブジェクト&lt;/a&gt;を返します。IDの要素が見つからない場合はnullを返します。</target>
        </trans-unit>
        <trans-unit id="9f58ee06d0ffc14be77811db1d2fc285ede081a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getElementsByClassName&lt;/code&gt; will return a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection&quot;&gt;live HTMLCollection&lt;/a&gt;, possibly of length 0 if no matching elements are found</source>
          <target state="translated">&lt;code&gt;getElementsByClassName&lt;/code&gt; は、一致する要素が見つからない場合は長さ0の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection&quot;&gt;ライブHTMLCollection&lt;/a&gt;を返します</target>
        </trans-unit>
        <trans-unit id="2522e403908b9a614d38da0c0313b5c464fee997" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ES6&lt;/strong&gt; provides &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt; method, which creates a new Array instance from an array-like or iterable object.</source>
          <target state="translated">&lt;strong&gt;ES6に&lt;/strong&gt;は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt;メソッドが用意されています。これは、配列のようなオブジェクトまたは反復可能なオブジェクトから新しいArrayインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="2dad1db0bdd731e5b0fdd939bf91c230d43bf60f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In Other Words&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;言い換えると&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5837fd92021485c9f190c96ccf5efd85f95e8eac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Infos&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Infos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="213531668e119900376c86df389d1b9d77470fc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why this performance difference?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;なぜこのパフォーマンスの違いですか？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee2150945a5429d3adb02da74c22362813d4358d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why use getElement/sBy?*&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;なぜgetElement / sByを使用するのですか？*&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94fcab7e2964943224aae557d28caf6b292b0d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why use querySelector?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;querySelectorを使用する理由&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5900c9760c29770a79f57ef41c159a1cc1a84096" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You make that an Array as example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;あなたは例としてそれを配列にします&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47de26ab4b5ceb06c3239e35515e14b22b9b6037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;getElement/sBy*&lt;/strong&gt; immediately adapts the existing live NodeList of the current DOM.</source>
          <target state="translated">&lt;strong&gt;getElement / sBy *&lt;/strong&gt;は、現在のDOMの既存のライブNodeListをすぐに適合させます。</target>
        </trans-unit>
        <trans-unit id="04a77e42c0d79b18cf8f50f83d99c44f1860d582" translate="yes" xml:space="preserve">
          <source>As you can see inside the code snippet, after using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt; function you are then able to manipulate over each element.</source>
          <target state="translated">コードスニペットの内部を見るとわかるように、 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt;関数を使用すると、各要素を操作できます。</target>
        </trans-unit>
        <trans-unit id="213fe2a8593a845ca144d41f8be7976f0c4f1397" translate="yes" xml:space="preserve">
          <source>Both ways of selection has the purpose of creating a &lt;strong&gt;NodeList&lt;/strong&gt; for further use. 
&lt;strong&gt;querySelectors&lt;/strong&gt; generates a static NodeList with the selectors thus it must be first created from scratch.</source>
          <target state="translated">どちらの選択方法にも、 &lt;strong&gt;後で&lt;/strong&gt;使用する&lt;strong&gt;NodeList&lt;/strong&gt;を作成する目的があります。 &lt;strong&gt;querySelectors&lt;/strong&gt;は、セレクターを使用して静的NodeListを生成するため、最初から最初から作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="91ae108192705c5ac271da1bc6f386af248ba70e" translate="yes" xml:space="preserve">
          <source>Demo of all methods</source>
          <target state="translated">すべてのメソッドのデモ</target>
        </trans-unit>
        <trans-unit id="e6d5e860ae77094d3be83478a5771a5ce10a34d2" translate="yes" xml:space="preserve">
          <source>Do &lt;code&gt;getElementsByClassName&lt;/code&gt; (and similar functions like &lt;code&gt;getElementsByTagName&lt;/code&gt; and &lt;code&gt;querySelectorAll&lt;/code&gt;) work the same as &lt;code&gt;getElementById&lt;/code&gt; or do they return an array of elements?</source>
          <target state="translated">&lt;code&gt;getElementsByClassName&lt;/code&gt; （および &lt;code&gt;getElementsByTagName&lt;/code&gt; や &lt;code&gt;querySelectorAll&lt;/code&gt; などの同様の関数）は、 getElementByIdと同じように機能しますか、それとも要素の配列を返しますか？</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="72054a5e77b545c43ffac90a53bd73166922cfe0" translate="yes" xml:space="preserve">
          <source>Faster performance.</source>
          <target state="translated">パフォーマンスを向上させる。</target>
        </trans-unit>
        <trans-unit id="2c0748a6d3d6417796fd9a1d1b6c51ebfd4ec829" translate="yes" xml:space="preserve">
          <source>However, &lt;a href=&quot;https://developer.mozilla.org/en/DOM/document.getElementsByClassName#Syntax&quot;&gt;&lt;code&gt;getElementsByClassName()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll&quot;&gt;&lt;code&gt;querySelectorAll()&lt;/code&gt;&lt;/a&gt;, and other &lt;code&gt;getElementsBy*&lt;/code&gt; methods return an array-like collection of elements. Iterate over it like you would with a real array:</source>
          <target state="translated">ただし、 &lt;a href=&quot;https://developer.mozilla.org/en/DOM/document.getElementsByClassName#Syntax&quot;&gt; &lt;code&gt;getElementsByClassName()&lt;/code&gt; &lt;/a&gt; 、 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll&quot;&gt; &lt;code&gt;querySelectorAll()&lt;/code&gt; &lt;/a&gt; 、およびその他の &lt;code&gt;getElementsBy*&lt;/code&gt; メソッドは、配列のような要素のコレクションを返します。 実際の配列と同じように繰り返します。</target>
        </trans-unit>
        <trans-unit id="bd0522bd15f21508b4d12b3e359cb2cf4b8f6b8a" translate="yes" xml:space="preserve">
          <source>If this is your HTML body:</source>
          <target state="translated">これがあなたのHTMLの本文であれば</target>
        </trans-unit>
        <trans-unit id="b629700b9bb71b9c01daeb9b4990dd58dee38b41" translate="yes" xml:space="preserve">
          <source>If you prefer something shorter, consider using &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;:</source>
          <target state="translated">もっと短いものが好きな場合は、 &lt;a href=&quot;http://jquery.com&quot;&gt;jQueryの&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="bbf2b1d7bfaaa44c8204b90050849727435b4531" translate="yes" xml:space="preserve">
          <source>If you would like apply this for all elements with the class I suggest you to use</source>
          <target state="translated">クラスのすべての要素に適用したい場合は、次のようにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0e5b1cde5023cc7aa2d19a5ff0462ab27f4a152a" translate="yes" xml:space="preserve">
          <source>It returns Array-like list.</source>
          <target state="translated">配列のようなリストを返します。</target>
        </trans-unit>
        <trans-unit id="2af8e8b194d8b30925f051d9cf1190eff7c64628" translate="yes" xml:space="preserve">
          <source>It's used merely for the sole purpose of ease and brevity.</source>
          <target state="translated">単に簡単に簡潔にするために使われているだけです。</target>
        </trans-unit>
        <trans-unit id="5e5535262882af84108b5d5a5b48d46645d969d9" translate="yes" xml:space="preserve">
          <source>NodeList Documentation</source>
          <target state="translated">NodeList ドキュメント</target>
        </trans-unit>
        <trans-unit id="852a7f260ed529ad0ce151fb7583c4b47f50b941" translate="yes" xml:space="preserve">
          <source>Performance Test</source>
          <target state="translated">性能試験</target>
        </trans-unit>
        <trans-unit id="4e170aa7299f466ef0f20a33c9e8ffa4d49e17b1" translate="yes" xml:space="preserve">
          <source>Please refer to &lt;a href=&quot;https://stackoverflow.com/questions/9979172/difference-between-node-object-and-element-object&quot;&gt;this post&lt;/a&gt; for more on differences between elements and nodes.</source>
          <target state="translated">要素とノードの違いの詳細については、 &lt;a href=&quot;https://stackoverflow.com/questions/9979172/difference-between-node-object-and-element-object&quot;&gt;この投稿&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="97e3f6b52a80459866fcaa3ede3c865ea46da902" translate="yes" xml:space="preserve">
          <source>So, as a parameter &lt;code&gt;getElementsByClassName&lt;/code&gt; would accept a class name.</source>
          <target state="translated">したがって、パラメーターとして、 &lt;code&gt;getElementsByClassName&lt;/code&gt; はクラス名を受け入れます。</target>
        </trans-unit>
        <trans-unit id="bcb93deca72968331aae087a1eab48ae6ba871fd" translate="yes" xml:space="preserve">
          <source>So, when to use which method it's up to you/your project/your device.</source>
          <target state="translated">だから、どの方法を使用するかは、それがあなたのプロジェクトあなたのデバイスに依存しています。</target>
        </trans-unit>
        <trans-unit id="13fd8d8ae637999d748cdfc438418d3198535eed" translate="yes" xml:space="preserve">
          <source>That's why the function &lt;code&gt;getElementById&lt;/code&gt; worked for you, this function will return the direct object. Therefore you will be able to access the &lt;code&gt;style&lt;/code&gt; property.</source>
          <target state="translated">関数 &lt;code&gt;getElementById&lt;/code&gt; が機能したのはこのためです。この関数は直接オブジェクトを返します。 したがって、 &lt;code&gt;style&lt;/code&gt; プロパティにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="e11aa8f165a82330192e791883144c49b9ad9303" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getElementsByClassName(classNames)&lt;/code&gt; method takes a string that
  contains an unordered set of unique space-separated tokens
  representing classes. When called, the method must return a live
  &lt;code&gt;NodeList&lt;/code&gt; object containing all the elements in the document that
  have all the classes specified in that argument, having obtained the
  classes by splitting a string on spaces. If there are no tokens
  specified in the argument, then the method must return an empty
  NodeList.</source>
          <target state="translated">&lt;code&gt;getElementsByClassName(classNames)&lt;/code&gt; メソッドは、クラスを表す、スペースで区切られた一意のトークンの順序付けされていないセットを含む文字列を取ります。 呼び出されると、メソッドは、引数で指定されたすべてのクラスを持つドキュメント内のすべての要素を含むライブ &lt;code&gt;NodeList&lt;/code&gt; オブジェクトを返し、スペースで文字列を分割してクラスを取得する必要があります。 引数でトークンが指定されていない場合、メソッドは空のNodeListを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="6549923fae420b2bd01f194a4dfa2c0d2b9036ad" translate="yes" xml:space="preserve">
          <source>The NodeList object represents a collection of nodes. The nodes can be
  accessed by index numbers. The index starts at 0.</source>
          <target state="translated">NodeList オブジェクトは、ノードのコレクションを表します。ノードはインデックス番号でアクセスできます。インデックスは 0 から始まります。</target>
        </trans-unit>
        <trans-unit id="bdfd874e182e111cdb76047ccb65cd97b980ecd0" translate="yes" xml:space="preserve">
          <source>The following description is taken from &lt;a href=&quot;http://www.w3schools.com/jsref/met_document_getelementsbyclassname.asp&quot;&gt;this page&lt;/a&gt;:</source>
          <target state="translated">次の説明は、 &lt;a href=&quot;http://www.w3schools.com/jsref/met_document_getelementsbyclassname.asp&quot;&gt;このページ&lt;/a&gt;からの引用です 。</target>
        </trans-unit>
        <trans-unit id="95cab1e3ad7e84a40c3b1059f3c7001c0683c346" translate="yes" xml:space="preserve">
          <source>The getElementById() method accesses the first element with the specified id.</source>
          <target state="translated">getElementById()メソッドは、指定されたidを持つ最初の要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="0ef57e476d518e3414e94181a72adb0582bbbffc" translate="yes" xml:space="preserve">
          <source>The getElementsByClassName() method returns a collection of all elements in the document with the specified class name, as a NodeList object.</source>
          <target state="translated">getElementsByClassName()メソッドは、指定されたクラス名を持つドキュメント内のすべての要素のコレクションを NodeList オブジェクトとして返します。</target>
        </trans-unit>
        <trans-unit id="064a300efa03fb8ba07cf07857ddcd15c4f543ee" translate="yes" xml:space="preserve">
          <source>The reason I ask is because I am trying to change the style of all elements using &lt;code&gt;getElementsByClassName&lt;/code&gt;. See below.</source>
          <target state="translated">私が尋ねる理由は、 &lt;code&gt;getElementsByClassName&lt;/code&gt; を使用してすべての要素のスタイルを変更しようとしているためです。 下記参照。</target>
        </trans-unit>
        <trans-unit id="74cf49dd175a4783713dd94198e209cd7e4cb862" translate="yes" xml:space="preserve">
          <source>The same solution using &lt;strong&gt;&lt;code&gt;jQuery&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;jQuery&lt;/code&gt; &lt;/strong&gt;を使用した同じソリューション。</target>
        </trans-unit>
        <trans-unit id="cf5749c96c442cad1045cf2d791abd2740c03a51" translate="yes" xml:space="preserve">
          <source>Tip: You can use the  length property of the NodeList object to determine the number of elements with a specified class name, then you can loop through all elements and extract the info you want.</source>
          <target state="translated">ヒント:NodeList オブジェクトの length プロパティを使用して、指定されたクラス名を持つ要素の数を決定し、すべての要素をループして必要な情報を抽出することができます。</target>
        </trans-unit>
        <trans-unit id="4b9b52ee031388dbdfa5e6f0782ab3c71788f639" translate="yes" xml:space="preserve">
          <source>What do querySelectorAll and getElementsBy* methods return</source>
          <target state="translated">querySelectorAllメソッドとgetElementsBy*メソッドは何を返しますか?</target>
        </trans-unit>
        <trans-unit id="945d3d7434999326b4bde32f2ea2419702b0093c" translate="yes" xml:space="preserve">
          <source>With ES5+ (any browsed nowadays - 2017) you should be able to do</source>
          <target state="translated">ES5+(今はどの閲覧も~2017年)では</target>
        </trans-unit>
        <trans-unit id="fb16cfa3a1f054fecee4253933c99aea6a6ab86d" translate="yes" xml:space="preserve">
          <source>You are using a array as an object, the difference between &lt;code&gt;getElementbyId&lt;/code&gt; and 
&lt;code&gt;getElementsByClassName&lt;/code&gt; is that:</source>
          <target state="translated">オブジェクトとして配列を使用している場合、 &lt;code&gt;getElementbyId&lt;/code&gt; と &lt;code&gt;getElementsByClassName&lt;/code&gt; の違いは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1023e3bbc5f022ac9435fe779e72279ec5048a1a" translate="yes" xml:space="preserve">
          <source>You can then iterate over this nodes (&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s in this case) collection with:</source>
          <target state="translated">次に、このノード（この場合は &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; ）コレクションを反復処理します。</target>
        </trans-unit>
        <trans-unit id="08fd5b23dcfddf4d412e82596826f73a1eff12ef" translate="yes" xml:space="preserve">
          <source>You could get a single element by running</source>
          <target state="translated">を実行することで、単一の要素を取得することができます。</target>
        </trans-unit>
        <trans-unit id="7a05ef5a513ed9ec6478f65167787a56fca4e71e" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;getElementById()&lt;/code&gt; code works since IDs have to be unique and thus the function always returns exactly one element (or &lt;code&gt;null&lt;/code&gt; if none was found).</source>
          <target state="translated">IDは一意である必要があるため、 &lt;code&gt;getElementById()&lt;/code&gt; コードは機能します。したがって、関数は常に正確に1つの要素を返します（何も見つからなかった場合は &lt;code&gt;null&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1c0f6272fc1221a0607f2e20378f02aaf2c69b1d" translate="yes" xml:space="preserve">
          <source>but it's going to work for the first element with class .myElement.</source>
          <target state="translated">を使っていますが、class .myElementで最初の要素に対しては動作しそうです。</target>
        </trans-unit>
        <trans-unit id="e0c8f791835eb8d2a96e4a6cefa6b19e0194222e" translate="yes" xml:space="preserve">
          <source>getElementById</source>
          <target state="translated">getElementById</target>
        </trans-unit>
        <trans-unit id="fdb245845eb95fb9ae857f6678922cfd561c480b" translate="yes" xml:space="preserve">
          <source>getElementsByClassName</source>
          <target state="translated">getElementsByClassName</target>
        </trans-unit>
        <trans-unit id="b5da720987f1eb5e16994dd7f2ee145e6c5c2d16" translate="yes" xml:space="preserve">
          <source>in your code the lines:</source>
          <target state="translated">あなたのコードの行で。</target>
        </trans-unit>
        <trans-unit id="f955fa2fe6b20a02e30dcd751f9567d30c8b2e06" translate="yes" xml:space="preserve">
          <source>then &lt;code&gt;var menuItems = document.getElementsByClassName('menuItem')&lt;/code&gt; would return a collection (not an array) of the 3 upper &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s, as they match the given class name.</source>
          <target state="translated">次に、 &lt;code&gt;var menuItems = document.getElementsByClassName('menuItem')&lt;/code&gt; は、指定されたクラス名と一致するため、上位3つの &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; のコレクション（配列ではない）を返します。</target>
        </trans-unit>
        <trans-unit id="0cf344213c931edea90b6103649f2220375a9eb7" translate="yes" xml:space="preserve">
          <source>will &lt;strong&gt;NOT&lt;/strong&gt; work as expected, because the &lt;code&gt;getElementByClassName&lt;/code&gt; will return an array, and the array will &lt;strong&gt;NOT&lt;/strong&gt; have the &lt;code&gt;style&lt;/code&gt; property, you can access each &lt;code&gt;element&lt;/code&gt; by iterating through them.</source>
          <target state="translated">&lt;code&gt;getElementByClassName&lt;/code&gt; は配列を返し、配列には &lt;code&gt;style&lt;/code&gt; プロパティが&lt;strong&gt;ない&lt;/strong&gt;ため、期待どおりに機能し&lt;strong&gt;ません&lt;/strong&gt; 。各 &lt;code&gt;element&lt;/code&gt; を反復処理することにより、各要素にアクセスできます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
