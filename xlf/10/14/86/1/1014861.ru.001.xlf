<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/1014861">
    <body>
      <group id="1014861">
        <trans-unit id="7b397ba52ee94766842947b88cacc5d7c45eb414" translate="yes" xml:space="preserve">
          <source>(Copy and pasted from the URL above).</source>
          <target state="translated">(Скопируйте и вставьте из URL выше).</target>
        </trans-unit>
        <trans-unit id="705bae603e7f65e8924343357e7788723ac06749" translate="yes" xml:space="preserve">
          <source>(compare the two lists on the left styled with standard selectors and the two lists on the right styled with axe selectors)</source>
          <target state="translated">(сравните два списка в левом стиле со стандартными селекторами и два списка в правом стиле с селекторами осей)</target>
        </trans-unit>
        <trans-unit id="d27f20f24403a2ee408f76161810e65b625ac349" translate="yes" xml:space="preserve">
          <source>... I'm hoping that there is some sort of workaround that exists native to CSS Level 2...</source>
          <target state="translated">...Я надеюсь,что существует своего рода обходной путь,родной для второго уровня CSS...</target>
        </trans-unit>
        <trans-unit id="82e0198d7fb554ce11dda78b7187f808521eff94" translate="yes" xml:space="preserve">
          <source>... but for things like &lt;code&gt;::after&lt;/code&gt; and &lt;code&gt;:hover&lt;/code&gt;, I'm not at all certain in which CSS version those first appeared.</source>
          <target state="translated">... но для таких вещей, как &lt;code&gt;::after&lt;/code&gt; и &lt;code&gt;:hover&lt;/code&gt; , я совершенно не уверен, в какой версии CSS они впервые появились.</target>
        </trans-unit>
        <trans-unit id="eddc39850fc9dfc650c1fd65c41dbbc827922439" translate="yes" xml:space="preserve">
          <source>... pretty &lt;em&gt;gross&lt;/em&gt;, but with just CSS and HTML it is possible to touch and re-touch anything but the &lt;code&gt;body&lt;/code&gt; and &lt;code&gt;:root&lt;/code&gt; from just about anywhere by linking the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;for&lt;/code&gt; properties of &lt;code&gt;radio&lt;/code&gt;/&lt;code&gt;checkbox&lt;/code&gt;&lt;em&gt;&lt;code&gt;input&lt;/code&gt;s&lt;/em&gt; and &lt;code&gt;label&lt;/code&gt;&lt;em&gt;triggers&lt;/em&gt;; likely someone'll show how to re-touch those at some point.</source>
          <target state="translated">... довольно &lt;em&gt;грубо&lt;/em&gt; , но только с помощью CSS и HTML можно коснуться и снова прикоснуться к чему угодно, кроме &lt;code&gt;body&lt;/code&gt; и &lt;code&gt;:root&lt;/code&gt; практически из любого места, связав &lt;code&gt;id&lt;/code&gt; и свойства &lt;em&gt; &lt;code&gt;input&lt;/code&gt; &lt;/em&gt; &lt;code&gt;radio&lt;/code&gt; / &lt;code&gt;checkbox&lt;/code&gt; и &lt;em&gt;триггеров&lt;/em&gt; &lt;code&gt;label&lt;/code&gt; ; Скорее всего, кто-то покажет, как снова прикоснуться к ним.</target>
        </trans-unit>
        <trans-unit id="8b043cba9ff6a55d3381955a4bd58a718bc7edc7" translate="yes" xml:space="preserve">
          <source>3.2. The Nesting At-Rule: @nest</source>
          <target state="translated">3.2.Гнездущий в руле:@гнездо</target>
        </trans-unit>
        <trans-unit id="3da93df5d2b54ef90c349bf508b3a08d5eddf8b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://css-tricks.com/parent-selectors-in-css/&quot;&gt;Chris Coyier on the talks of Parent selector&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://css-tricks.com/parent-selectors-in-css/&quot;&gt;Крис Койер о беседах селектора родителей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6ec4d61fd9ab8aae629c7bd115d45fe7e27e7b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://csswizardry.com/2011/09/writing-efficient-css-selectors/&quot;&gt;Harry Roberts again on writing efficient CSS selectors&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://csswizardry.com/2011/09/writing-efficient-css-selectors/&quot;&gt;Гарри Робертс снова пишет эффективные селекторы CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="38a1f468f30c6d5ab191612fbceaee120b26a668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://elementqueries.com/demos/parent.html&quot;&gt;Here's a demo of &lt;code&gt;$parent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://staticresource.com/parent.html&quot;&gt;another &lt;code&gt;$parent&lt;/code&gt; demo that works in Internet&amp;nbsp;Explorer&amp;nbsp;8&lt;/a&gt;, as well as &lt;a href=&quot;https://i.imgur.com/QyVAj2u.png&quot;&gt;a screenshot in case you don't have Internet&amp;nbsp;Explorer&amp;nbsp;8 around to test with&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://elementqueries.com/demos/parent.html&quot;&gt;Вот демонстрация &lt;code&gt;$parent&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;http://staticresource.com/parent.html&quot;&gt;другая демонстрация &lt;code&gt;$parent&lt;/code&gt; которая работает в Internet Explorer 8&lt;/a&gt; , а также &lt;a href=&quot;https://i.imgur.com/QyVAj2u.png&quot;&gt;снимок экрана в случае, если у вас нет Internet Explorer 8 для тестирования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f14858af83fb794e7da625e0923603d47a5ac8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://snook.ca/archives/html_and_css/css-parent-selectors&quot;&gt;Jonathan Snook explains how CSS is evaluated&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://snook.ca/archives/html_and_css/css-parent-selectors&quot;&gt;Джонатан Снук объясняет, как оценивается CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef35928c432b9c4253e81fbd92a966eae480f52c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://jsfiddle.net/ilyabogdanov/o4fkL7kv/&quot;&gt;Another example&lt;/a&gt; how to use it with text-inputs - select parent fieldset</source>
          <target state="translated">&lt;a href=&quot;https://jsfiddle.net/ilyabogdanov/o4fkL7kv/&quot;&gt;Другой пример,&lt;/a&gt; как использовать его с вводом текста - выбрать родительский набор полей</target>
        </trans-unit>
        <trans-unit id="bce3f4a409dc0c67054a7e806ad3eecf69f742f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59126bc4b62e268cb8bfd989e38d43eaba68ba53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;axe&lt;/strong&gt; is presently in a relatively early BETA stage of development.</source>
          <target state="translated">&lt;strong&gt;В&lt;/strong&gt; настоящее время &lt;strong&gt;топор&lt;/strong&gt; находится на относительно ранней стадии развития бета-версии.</target>
        </trans-unit>
        <trans-unit id="0a33cff9020a55fa3185256ec7c4be09e6bf6115" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jQuery&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jQuery&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="581b2a4bc4f69b824674b1fafce3cebe87835ff7" translate="yes" xml:space="preserve">
          <source>Although there is no parent selector in standard CSS at present, I am working on a (personal) project called &lt;strong&gt;axe&lt;/strong&gt; (ie. &lt;em&gt;Augmented CSS Selector Syntax / ACSSSS&lt;/em&gt;) which, among its 7 new selectors, includes both:</source>
          <target state="translated">Хотя в стандартном CSS в настоящее время нет родительского селектора, я работаю над (персональным) проектом, который называется &lt;strong&gt;ax&lt;/strong&gt; (т.е. &lt;em&gt;расширенный синтаксис селектора CSS / ACSSSS&lt;/em&gt; ), который среди 7 новых селекторов включает в себя оба:</target>
        </trans-unit>
        <trans-unit id="cd78f2ac716d2cda34f6ca00275c12ae8f213f6e" translate="yes" xml:space="preserve">
          <source>An element can be focused if it has a &lt;code&gt;tabindex&lt;/code&gt; attribute.</source>
          <target state="translated">Элемент может быть сфокусирован, если у него есть атрибут &lt;code&gt;tabindex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69ad4e17d87b7e2b85b003e0a8823937ee0cb2eb" translate="yes" xml:space="preserve">
          <source>And then simply:</source>
          <target state="translated">А потом просто:</target>
        </trans-unit>
        <trans-unit id="c87d339dfeeb0ffcb18ef3ea996bc725cc487ee7" translate="yes" xml:space="preserve">
          <source>Any ideas?</source>
          <target state="translated">Есть идеи?</target>
        </trans-unit>
        <trans-unit id="46da08d1043ad879cdcc45e6f65a18f2928a64da" translate="yes" xml:space="preserve">
          <source>As an example, my CSS would be something like this:</source>
          <target state="translated">В качестве примера,мой CSS был бы чем-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="f30ffa0dd6e130ff96540648031fcd83f6808c90" translate="yes" xml:space="preserve">
          <source>As mentioned by a couple of others, there isn't a way to style an element's parent/s using just CSS but the following works with &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt;:</source>
          <target state="translated">Как уже упоминалось несколькими другими, не существует способа стилизовать родительский (ие) элемент (ы), используя только CSS, но с &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; работает следующее:</target>
        </trans-unit>
        <trans-unit id="ad5b8a09eccf6abdc58ead5f76417e9e20fb8e36" translate="yes" xml:space="preserve">
          <source>At least up to and including CSS&amp;nbsp;3 you cannot select like that.
But it can be done pretty easily nowadays in JavaScript, you just need to add a bit of vanilla JavaScript, notice that the code is pretty short.</source>
          <target state="translated">По крайней мере, до CSS 3 включительно, вы не можете так выбрать. Но это может быть сделано довольно легко в настоящее время в JavaScript, вам просто нужно добавить немного ванильного JavaScript, обратите внимание, что код довольно короткий.</target>
        </trans-unit>
        <trans-unit id="43449dc9ba2bd2b62b86c3428241f7e4790aaf86" translate="yes" xml:space="preserve">
          <source>BTW, it works in Internet&amp;nbsp;Explorer.</source>
          <target state="translated">Кстати, это работает в Internet Explorer.</target>
        </trans-unit>
        <trans-unit id="fb13078eac3f8b09b86d5eef2f091a49b9e6bc9b" translate="yes" xml:space="preserve">
          <source>Browser support for focus-within</source>
          <target state="translated">Поддержка браузера для фокусировки с</target>
        </trans-unit>
        <trans-unit id="2aee8f3ddcd99c50c0e1366c2789e0a30beb2659" translate="yes" xml:space="preserve">
          <source>Browser support: &lt;a href=&quot;https://caniuse.com/#feat=css-has&quot;&gt;none&lt;/a&gt;</source>
          <target state="translated">Поддержка браузера: &lt;a href=&quot;https://caniuse.com/#feat=css-has&quot;&gt;нет&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3e5d0dc70b9f32887f6a06fe04c38bba9810f51" translate="yes" xml:space="preserve">
          <source>But &lt;a href=&quot;http://calendar.perfplanet.com/2011/css-selector-performance-has-changed-for-the-better/&quot;&gt;Nicole Sullivan has some interesting facts on positive trends&lt;/a&gt;.</source>
          <target state="translated">Но у &lt;a href=&quot;http://calendar.perfplanet.com/2011/css-selector-performance-has-changed-for-the-better/&quot;&gt;Николь Салливан есть некоторые интересные факты о положительных тенденциях&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6effa79c887dd8d50614b8719d9ff351118d26aa" translate="yes" xml:space="preserve">
          <source>But as you already seem to have an &lt;code&gt;.active&lt;/code&gt; class, it would be easier to move that class to the &lt;code&gt;li&lt;/code&gt; (instead of the &lt;code&gt;a&lt;/code&gt;). That way you can access both the &lt;code&gt;li&lt;/code&gt; and the &lt;code&gt;a&lt;/code&gt; via CSS only.</source>
          <target state="translated">Но поскольку у вас уже есть класс &lt;code&gt;.active&lt;/code&gt; , было бы легче переместить этот класс в &lt;code&gt;li&lt;/code&gt; (вместо &lt;code&gt;a&lt;/code&gt; ). Таким образом, вы можете получить доступ к &lt;code&gt;li&lt;/code&gt; и &lt;code&gt;a&lt;/code&gt; только через CSS.</target>
        </trans-unit>
        <trans-unit id="6f6985a9d0eb315212432208d6414fa92b4733f0" translate="yes" xml:space="preserve">
          <source>But we have to wait for browsers' implementation :(</source>
          <target state="translated">Но мы должны дождаться реализации браузеров :(</target>
        </trans-unit>
        <trans-unit id="61681cfa05004a759407afbe83568d2e0493d3f2" translate="yes" xml:space="preserve">
          <source>CSS 2.1 Selectors Spec</source>
          <target state="translated">CSS 2.1 Селекторы Спецификация</target>
        </trans-unit>
        <trans-unit id="1dccedaba4e0a58fadb2e33c024826e8f5a099f0" translate="yes" xml:space="preserve">
          <source>CSS 4 will be fancy if it adds some &lt;em&gt;hooks&lt;/em&gt; into &lt;em&gt;walking backwards&lt;/em&gt;. Till then it is possible (though &lt;strong&gt;not&lt;/strong&gt; advisable) to use &lt;code&gt;checkbox&lt;/code&gt; and/or &lt;code&gt;radio&lt;/code&gt;&lt;em&gt;&lt;code&gt;input&lt;/code&gt;s&lt;/em&gt; to &lt;em&gt;break&lt;/em&gt; the usual way that things are connected, and through that also allow CSS to operate outside of its normal scope...</source>
          <target state="translated">CSS 4 будет интересен, если он добавит несколько &lt;em&gt;хуков&lt;/em&gt; в &lt;em&gt;ход назад&lt;/em&gt; . До тех пор можно (хотя и &lt;strong&gt;не&lt;/strong&gt; желательно) использовать &lt;code&gt;checkbox&lt;/code&gt; и / или &lt;em&gt; &lt;code&gt;input&lt;/code&gt; &lt;/em&gt; чтобы &lt;em&gt;нарушить&lt;/em&gt; обычный способ соединения вещей, и через это также позволить CSS работать за пределами своей обычной области ...</target>
        </trans-unit>
        <trans-unit id="dab33d9e23d7eb31831e879a062b7f5917762fda" translate="yes" xml:space="preserve">
          <source>CSS output:</source>
          <target state="translated">CSS-выход:</target>
        </trans-unit>
        <trans-unit id="3b5005583c3ac04422c049fe373d867e888072be" translate="yes" xml:space="preserve">
          <source>Changing parent element based on child element can currently only happen when we have an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element inside the parent element. When an input gets focus, its corresponding parent element can get affected using CSS.</source>
          <target state="translated">Изменение родительского элемента на основе дочернего элемента в настоящее время может происходить только тогда, когда у нас есть элемент &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; внутри родительского элемента. Когда ввод получает фокус, его соответствующий родительский элемент может быть затронут с помощью CSS.</target>
        </trans-unit>
        <trans-unit id="18556e9ea9f9b7f6726983bf605220880f25984b" translate="yes" xml:space="preserve">
          <source>Check out this HTML:</source>
          <target state="translated">Ознакомьтесь с этим HTML:</target>
        </trans-unit>
        <trans-unit id="c5bb43480ad4b78749fb66e153d30232a52d93b0" translate="yes" xml:space="preserve">
          <source>Currently there is no parent selector &amp;amp; it is not even being discussed in any of the talks of W3C. You need to understand how CSS is evaluated by the browser to actually understand if we need it or not.</source>
          <target state="translated">В настоящее время нет родительского селектора, и он даже не обсуждается ни в одном из обсуждений W3C. Вам нужно понять, как браузер оценивает CSS, чтобы понять, нужен он нам или нет.</target>
        </trans-unit>
        <trans-unit id="4eef675c1b4319602fca50d2de01a62cb4a97177" translate="yes" xml:space="preserve">
          <source>EQCSS also includes &lt;a href=&quot;http://elementqueries.com/#meta-selectors&quot;&gt;meta-selectors&lt;/a&gt;: &lt;code&gt;$prev&lt;/code&gt; for the element before a selected element and &lt;code&gt;$this&lt;/code&gt; for only those elements that match an element query, and more.</source>
          <target state="translated">EQCSS также включает &lt;a href=&quot;http://elementqueries.com/#meta-selectors&quot;&gt;мета-селекторы&lt;/a&gt; : &lt;code&gt;$prev&lt;/code&gt; для элемента перед выбранным элементом и &lt;code&gt;$this&lt;/code&gt; только для тех элементов, которые соответствуют запросу элемента, и другие.</target>
        </trans-unit>
        <trans-unit id="3b640aba86fcca65dec1908b6e5c562b31f87dc5" translate="yes" xml:space="preserve">
          <source>Example of valid selectors under this specification:</source>
          <target state="translated">Пример действующего селектора в соответствии с данной спецификацией:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="464ccf1905e87e5a95c6748de2f236f1f89e0a98" translate="yes" xml:space="preserve">
          <source>Following example will help you understand using &lt;code&gt;:focus-within&lt;/code&gt; in CSS.</source>
          <target state="translated">Следующий пример поможет вам понять использование &lt;code&gt;:focus-within&lt;/code&gt; в CSS.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Например:</target>
        </trans-unit>
        <trans-unit id="f50f072fe39c030829e35c9b8a3624078bf644d8" translate="yes" xml:space="preserve">
          <source>Here's a hack using &lt;code&gt;pointer-events&lt;/code&gt; with &lt;code&gt;hover&lt;/code&gt;:</source>
          <target state="translated">Вот хак, использующий &lt;code&gt;pointer-events&lt;/code&gt; с &lt;code&gt;hover&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b611322ac06e504df2ce1ba1df17c7e673e24596" translate="yes" xml:space="preserve">
          <source>How do I select the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element that is a direct parent of the anchor element?</source>
          <target state="translated">Как выбрать элемент &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; , который является прямым родителем элемента привязки?</target>
        </trans-unit>
        <trans-unit id="6ffd2b70834f91480e84a36fbbcb343068436409" translate="yes" xml:space="preserve">
          <source>However, you can do something like this as well.</source>
          <target state="translated">Тем не менее,ты можешь сделать что-нибудь подобное.</target>
        </trans-unit>
        <trans-unit id="a5bd05eb13e3214b3adc618685843351edaf7a3e" translate="yes" xml:space="preserve">
          <source>I am not sure about the other &lt;code&gt;:&lt;/code&gt; selectors, but I &lt;code&gt;:checked&lt;/code&gt; for pre-CSS&amp;nbsp;3. If I remember correctly, it was something like &lt;code&gt;[checked]&lt;/code&gt; which is why you may find it in the above code, for example,</source>
          <target state="translated">Я не уверен насчет других &lt;code&gt;:&lt;/code&gt; селекторов, но я &lt;code&gt;:checked&lt;/code&gt; наличие пре-CSS 3. Если я правильно помню, это было что-то вроде &lt;code&gt;[checked]&lt;/code&gt; поэтому вы можете найти его в приведенном выше коде, например:</target>
        </trans-unit>
        <trans-unit id="196213724285ce38a731fd4d44cc552e824831f8" translate="yes" xml:space="preserve">
          <source>I don&amp;rsquo;t think you can select the parent in CSS only.</source>
          <target state="translated">Я не думаю, что вы можете выбрать родителя только в CSS.</target>
        </trans-unit>
        <trans-unit id="16c4776cbb70e04fad7c494fb5241e5d112347a8" translate="yes" xml:space="preserve">
          <source>I know the OP was looking for a CSS solution but it is simple to achieve using jQuery. In my case I needed to find the &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; parent tag for a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag contained in the child &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;. jQuery has the &lt;code&gt;:has&lt;/code&gt; selector so it's possible to identify a parent by the children it contains:</source>
          <target state="translated">Я знаю, что OP искал решение CSS, но этого легко добиться с помощью jQuery. В моем случае мне нужно было найти родительский тег &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; для тега &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; , содержащегося в дочернем &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; . В jQuery есть селектор &lt;code&gt;:has&lt;/code&gt; , поэтому можно определить родителя по дочерним элементам:</target>
        </trans-unit>
        <trans-unit id="dfe5220200994dbee3e70035d15507704322a597" translate="yes" xml:space="preserve">
          <source>I'd hire some JavaScript code to do that. For example, in React when you iterate over an array, add another class to the parent component, which indicates it contains your children:</source>
          <target state="translated">Я бы нанял код JavaScript,чтобы сделать это.Например,в React,когда вы выполняете итерацию по массиву,добавьте другой класс к родительскому компоненту,что указывает на то,что он содержит ваших детей:</target>
        </trans-unit>
        <trans-unit id="70662a08d8251062a3671c0306a258aefc83c674" translate="yes" xml:space="preserve">
          <source>If there was a way to do it, it would be in either of the current CSS selectors specs:</source>
          <target state="translated">Если бы существовал способ сделать это,то это было бы в любой из текущих спецификаций CSS-селекторов:</target>
        </trans-unit>
        <trans-unit id="6f922b4a2d0b8bb48f6cf2ff662f85897aeb2004" translate="yes" xml:space="preserve">
          <source>If you want to achieve this using jQuery here is the reference for the &lt;a href=&quot;http://www.snoopcode.com/jquery/jquery-parent-selector&quot;&gt;jQuery parent selector&lt;/a&gt;.</source>
          <target state="translated">Если вы хотите добиться этого с помощью jQuery, то вот ссылка на &lt;a href=&quot;http://www.snoopcode.com/jquery/jquery-parent-selector&quot;&gt;родительский селектор jQuery&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d65e5da9c83a072af4ee2b07ecb88b8f0f120074" translate="yes" xml:space="preserve">
          <source>In the meantime, you'll have to resort to JavaScript if you need to select a parent element.</source>
          <target state="translated">В то же время,вам придется прибегнуть к JavaScript,если вам нужно выбрать родительский элемент.</target>
        </trans-unit>
        <trans-unit id="f16c306ee15fdd03dfd636b9bce7c73b96e2dda9" translate="yes" xml:space="preserve">
          <source>Is there a CSS parent selector</source>
          <target state="translated">Есть ли родительский селектор CSS</target>
        </trans-unit>
        <trans-unit id="13ec5a3a448276a5a42986cd1ef56bef5b48f756" translate="yes" xml:space="preserve">
          <source>It's now 2019, and the &lt;a href=&quot;https://drafts.csswg.org/css-nesting-1/&quot;&gt;latest draft of the CSS Nesting Module&lt;/a&gt; actually has something like this. Introducing &lt;code&gt;@nest&lt;/code&gt; at-rules.</source>
          <target state="translated">Сейчас 2019 год, и в &lt;a href=&quot;https://drafts.csswg.org/css-nesting-1/&quot;&gt;последнем проекте модуля вложенности CSS&lt;/a&gt; есть нечто подобное. Представляем &lt;code&gt;@nest&lt;/code&gt; at-rules.</target>
        </trans-unit>
        <trans-unit id="4b931fd1efc1773a431641d534b7304ded42decc" translate="yes" xml:space="preserve">
          <source>It's possible with ampersand in &lt;a href=&quot;http://en.wikipedia.org/wiki/Sass_%28stylesheet_language%29&quot;&gt;Sass&lt;/a&gt;:</source>
          <target state="translated">Это возможно с помощью амперсанда в &lt;a href=&quot;http://en.wikipedia.org/wiki/Sass_%28stylesheet_language%29&quot;&gt;Sass&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="74301d932f63fc4e123ec9936b949e5886c20f87" translate="yes" xml:space="preserve">
          <source>Just an idea for horizontal menu...</source>
          <target state="translated">Просто идея для горизонтального меню...</target>
        </trans-unit>
        <trans-unit id="47023b4c7e50240fc29adb73ee5120bc8d7e6ed8" translate="yes" xml:space="preserve">
          <source>No, you cannot select the parent in CSS only.</source>
          <target state="translated">Нет,вы не можете выбрать родителя только в CSS.</target>
        </trans-unit>
        <trans-unit id="20e18f525ed9580c55fc072a10875e2a19f1cdef" translate="yes" xml:space="preserve">
          <source>Not in CSS 2 as far as I'm aware.  CSS 3 has more robust selectors but is not consistently implemented across all browsers.  Even with the improved selectors, I don't believe it will accomplish exactly what you've specified in your example.</source>
          <target state="translated">Насколько я знаю,не в CSS 2.CSS 3 имеет более надежные селекторы,но не во всех браузерах.Даже с улучшенными селекторами,я не верю,что это позволит достичь именно того,что вы указали в вашем примере.</target>
        </trans-unit>
        <trans-unit id="8c22cb9ba25f96a44e36262373ee0c19158feb75" translate="yes" xml:space="preserve">
          <source>Obviously there are ways of doing this with JavaScript, but I'm hoping that there is some sort of workaround that exists native to CSS Level 2.</source>
          <target state="translated">Очевидно,что есть способы сделать это с помощью JavaScript,но я надеюсь,что существует своего рода обходной путь,родной для CSS Level 2.</target>
        </trans-unit>
        <trans-unit id="234c99c2581b8c6536fb11fe85dcb8d8997ba0cb" translate="yes" xml:space="preserve">
          <source>One additional caveat is that only &lt;strong&gt;one&lt;/strong&gt;&lt;code&gt;input&lt;/code&gt; of a specific &lt;code&gt;id&lt;/code&gt; maybe used, first &lt;code&gt;checkbox&lt;/code&gt;/&lt;code&gt;radio&lt;/code&gt;&lt;em&gt;wins&lt;/em&gt; a toggled state in other words... &lt;strong&gt;But&lt;/strong&gt; multiple labels can all point to the same &lt;code&gt;input&lt;/code&gt;, though that would make both the HTML and CSS look even grosser.</source>
          <target state="translated">Еще одно предостережение заключается в том, что может использоваться только &lt;strong&gt;один&lt;/strong&gt; &lt;code&gt;input&lt;/code&gt; определенного &lt;code&gt;id&lt;/code&gt; , первый &lt;code&gt;checkbox&lt;/code&gt; / &lt;code&gt;radio&lt;/code&gt; &lt;em&gt;получает&lt;/em&gt; переключенное состояние другими словами ... &lt;strong&gt;Но все&lt;/strong&gt; метки могут указывать на один и тот же &lt;code&gt;input&lt;/code&gt; , хотя это будет выглядеть как на HTML, так и на CSS даже грубее.</target>
        </trans-unit>
        <trans-unit id="dad84c76aa649120afe0f6e800a2dd0ebf6d391f" translate="yes" xml:space="preserve">
          <source>One of the things EQCSS adds is a parent selector. It works in all browsers, Internet&amp;nbsp;Explorer&amp;nbsp;8 and up. Here's the format:</source>
          <target state="translated">EQCSS добавляет родительский селектор. Он работает во всех браузерах, Internet Explorer 8 и выше. Вот формат:</target>
        </trans-unit>
        <trans-unit id="a02dc6e19f4de7ac398851a48b96aa66b7230018" translate="yes" xml:space="preserve">
          <source>Or a shorter way if you use &lt;strong&gt;jQuery&lt;/strong&gt; in your application:</source>
          <target state="translated">Или более короткий путь, если вы используете &lt;strong&gt;jQuery&lt;/strong&gt; в своем приложении:</target>
        </trans-unit>
        <trans-unit id="43800482e3beb106c88c7aaf358738953555e1f3" translate="yes" xml:space="preserve">
          <source>Or select it when it's active:</source>
          <target state="translated">Или выберите его,когда он активен:</target>
        </trans-unit>
        <trans-unit id="ca5bd20a655a2bc4968ade970397decdfd873fd9" translate="yes" xml:space="preserve">
          <source>Part of CSS</source>
          <target state="translated">Часть CSS</target>
        </trans-unit>
        <trans-unit id="f2cdaf3876200e6785af9542210009f91d3480c1" translate="yes" xml:space="preserve">
          <source>Part of HTML</source>
          <target state="translated">Часть HTML</target>
        </trans-unit>
        <trans-unit id="01da1613b2040aa32ee1cde9b1a6656ac4994461" translate="yes" xml:space="preserve">
          <source>See a demo here:</source>
          <target state="translated">Смотрите демо:</target>
        </trans-unit>
        <trans-unit id="0b82b256a797a7919f29e1212ab0fa27a680b419" translate="yes" xml:space="preserve">
          <source>Selectors Level 3 Spec</source>
          <target state="translated">Селекторы Уровень 3 Спецификация</target>
        </trans-unit>
        <trans-unit id="fd5cee2f3389e51c22f44f6ab1db6f1e89aebf1f" translate="yes" xml:space="preserve">
          <source>So here we've opened an element query on every element &lt;code&gt;a.active&lt;/code&gt;, and for the styles inside that query, things like &lt;code&gt;$parent&lt;/code&gt; make sense, because there's a reference point. The browser can find the parent, because it's very similar to &lt;code&gt;parentNode&lt;/code&gt; in JavaScript.</source>
          <target state="translated">Итак, здесь мы открыли запрос элемента для каждого элемента &lt;code&gt;a.active&lt;/code&gt; , и для стилей внутри этого запроса такие вещи, как &lt;code&gt;$parent&lt;/code&gt; имеют смысл, потому что есть контрольная точка. Браузер может найти родителя, потому что он очень похож на &lt;code&gt;parentNode&lt;/code&gt; в JavaScript.</target>
        </trans-unit>
        <trans-unit id="52a2c95be3c108c186043953d9e9e35ce7f66497" translate="yes" xml:space="preserve">
          <source>Tabindex</source>
          <target state="translated">Tabindex</target>
        </trans-unit>
        <trans-unit id="9bd7792b2744f0d1b786cf5d8d866a187ed9a7c0" translate="yes" xml:space="preserve">
          <source>Technically there is no direct way to do this. However, you can sort that out with either jQuery or JavaScript.</source>
          <target state="translated">Технически нет прямого способа сделать это.Однако,вы можете разобраться с этим с помощью jQuery или JavaScript.</target>
        </trans-unit>
        <trans-unit id="4eaef36c3573d5075574bb5d85ee107c8ad1986a" translate="yes" xml:space="preserve">
          <source>That all stated, please don't ever use this in production, not even in anger. As a joke sure, or in other words just because something &lt;em&gt;can&lt;/em&gt; be done does not always mean it &lt;em&gt;should&lt;/em&gt;.</source>
          <target state="translated">Это все заявлено, пожалуйста, никогда не используйте это в производстве, даже в гневе. Как шутка, или, другими словами, просто потому, что что-то &lt;em&gt;можно&lt;/em&gt; сделать, не всегда означает, что это &lt;em&gt;должно&lt;/em&gt; быть сделано.</target>
        </trans-unit>
        <trans-unit id="a629de3f83fd6a1d08af4cc79dae0063f03bb926" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://dev.w3.org/csswg/selectors4/#relational&quot;&gt;Selectors Level 4 Working Draft&lt;/a&gt; includes a &lt;code&gt;:has()&lt;/code&gt; pseudo-class that works the same as the &lt;a href=&quot;https://api.jquery.com/has-selector/&quot;&gt;jQuery implementation&lt;/a&gt;. As of 2019, &lt;strong&gt;&lt;a href=&quot;https://caniuse.com/#feat=css-has&quot;&gt;this is still not supported by any browser&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://dev.w3.org/csswg/selectors4/#relational&quot;&gt;Рабочий вариант селектора уровня 4&lt;/a&gt; включает в себя псевдокласс &lt;code&gt;:has()&lt;/code&gt; который работает так же, как и &lt;a href=&quot;https://api.jquery.com/has-selector/&quot;&gt;реализация jQuery&lt;/a&gt; . По состоянию на 2019 год &lt;strong&gt;&lt;a href=&quot;https://caniuse.com/#feat=css-has&quot;&gt;это все еще не поддерживается ни одним браузером&lt;/a&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="28e1654c9ed1b1cc0caadd43d65e06ae4949ab6f" translate="yes" xml:space="preserve">
          <source>The @nest rule functions identically to a style rule: it starts with a selector, and contains declarations that apply to the elements the selector matches. The only difference is that the selector used in a @nest rule must be nest-containing, which means it contains a nesting selector in it somewhere. A list of selectors is nest-containing if all of its individual complex selectors are nest-containing.</source>
          <target state="translated">Правило @nest функционирует идентично правилу стиля:оно начинается с селектора и содержит объявления,которые применяются к элементам,которым соответствует селектор.Единственное отличие состоит в том,что селектор,используемый в правиле @nest,должен быть nest-содержащим,то есть где-то в нем содержится селектор-вложенность.Список селекторов является nest-содержащим,если все его отдельные сложные селекторы являются nest-содержащими.</target>
        </trans-unit>
        <trans-unit id="18e42931d9416cdf818b4232a0135af47f2e5f6b" translate="yes" xml:space="preserve">
          <source>The CSS selector &amp;ldquo;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/General_sibling_selectors&quot;&gt;General Sibling Combinator&lt;/a&gt;&amp;rdquo; could maybe used for what you want:</source>
          <target state="translated">Селектор CSS &amp;laquo; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/General_sibling_selectors&quot;&gt;General Sibling Combinator&lt;/a&gt; &amp;raquo; может быть использован для того, что вы хотите:</target>
        </trans-unit>
        <trans-unit id="b018e3bf2d2a2a0a6d77db0e353a74d400c77660" translate="yes" xml:space="preserve">
          <source>The W3C excluded such a selector because of the huge performance impact it would have on a browser.</source>
          <target state="translated">W3C исключил такой селектор из-за огромного влияния на производительность браузера.</target>
        </trans-unit>
        <trans-unit id="b456d9cbdcf9b8cd585766201d57b3476c428074" translate="yes" xml:space="preserve">
          <source>The article &lt;em&gt;&lt;a href=&quot;http://snook.ca/archives/html_and_css/css-parent-selectors&quot;&gt;Why we don't have a parent selector&lt;/a&gt;&lt;/em&gt; explains it in detail.</source>
          <target state="translated">В статье &amp;laquo; &lt;em&gt;&lt;a href=&quot;http://snook.ca/archives/html_and_css/css-parent-selectors&quot;&gt;Почему у нас нет родительского селектора&amp;raquo;&lt;/a&gt;&lt;/em&gt; это подробно объясняется.</target>
        </trans-unit>
        <trans-unit id="801acbc757fcb57499e82fcad44f7ba6ab312dfc" translate="yes" xml:space="preserve">
          <source>The menu that I am trying to style is being spewed out by a CMS, so I can't move the active element to the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element... (unless I theme the menu creation module which I'd rather not do).</source>
          <target state="translated">Меню, которое я пытаюсь стилизовать, издается CMS, поэтому я не могу переместить активный элемент в элемент &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; ... (если я не создаю тему модуля создания меню, который я бы предпочел не делать) ,</target>
        </trans-unit>
        <trans-unit id="7795ddddbd1162f3d3bf7ad4e15c37d50aa7a07a" translate="yes" xml:space="preserve">
          <source>The pseudo element &lt;code&gt;:focus-within&lt;/code&gt; allows a parent to be selected if a descendent has focus.</source>
          <target state="translated">Псевдоэлемент &lt;code&gt;:focus-within&lt;/code&gt; позволяет выбрать родителя, если у потомка есть фокус.</target>
        </trans-unit>
        <trans-unit id="6871a464234ef2e2de2e8af814ef8a3bdbc58428" translate="yes" xml:space="preserve">
          <source>The short answer is &lt;strong&gt;NO&lt;/strong&gt;; we don't have a &lt;code&gt;parent selector&lt;/code&gt; at this stage in CSS, but if you don't have to swap the elements or classes anyway, the second option is using JavaScript. Something like this:</source>
          <target state="translated">Краткий ответ - &lt;strong&gt;НЕТ&lt;/strong&gt; ; На данном этапе в CSS у нас нет &lt;code&gt;parent selector&lt;/code&gt; , но если вам все равно не нужно менять элементы или классы, второй вариант - использование JavaScript. Что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="71729e03cfb9f3fd601d1a7ab83c941bcfc92b47" translate="yes" xml:space="preserve">
          <source>Then the browser will have to wait until it has loaded and parsed everything until the &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; to determine if the page should be red or not.</source>
          <target state="translated">Затем браузеру придется подождать, пока он загрузится, и проанализировать все до &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; , чтобы определить, должна ли страница быть красной или нет.</target>
        </trans-unit>
        <trans-unit id="d00d805d268185840395c641e28b3bc5add4b860" translate="yes" xml:space="preserve">
          <source>There are many more capabilities; just check out the documentation of the plugin.</source>
          <target state="translated">Существует гораздо больше возможностей;просто ознакомьтесь с документацией к плагину.</target>
        </trans-unit>
        <trans-unit id="e67cea1b2a161c6681e116a6774619d3f84b1bd3" translate="yes" xml:space="preserve">
          <source>There is a lot of technical explanation here.</source>
          <target state="translated">Здесь много технических объяснений.</target>
        </trans-unit>
        <trans-unit id="afc3a63e369a4fed52f8738f4589c056fb25ee8d" translate="yes" xml:space="preserve">
          <source>There is currently no way to select the parent of an element in CSS.</source>
          <target state="translated">В настоящее время в CSS нет возможности выбрать родителя элемента.</target>
        </trans-unit>
        <trans-unit id="64126c1f70e0ad510ec815dd95643cda6db57054" translate="yes" xml:space="preserve">
          <source>There is no parent selector; just the way there is no previous sibling selector. One good reason for not having these selectors is because the browser has to traverse through all children of an element to determine whether or not a class should be applied. For example, if you wrote:</source>
          <target state="translated">Родительский селектор отсутствует,как и предыдущий селектор для брата и сестры.Одна из веских причин отсутствия таких селекторов заключается в том,что браузер должен пройти через все дочерние элементы элемента,чтобы определить,следует ли применять класс или нет.Например,если вы написали:</target>
        </trans-unit>
        <trans-unit id="b4ca2e90f6a7c0b5a95dec74a07e5bdd9c96f44e" translate="yes" xml:space="preserve">
          <source>There isn't a way to do this in CSS&amp;nbsp;2. You could add the class to the &lt;code&gt;li&lt;/code&gt; and reference the &lt;code&gt;a&lt;/code&gt;:</source>
          <target state="translated">В CSS 2 нет способа сделать это. Вы можете добавить класс в &lt;code&gt;li&lt;/code&gt; и сослаться на &lt;code&gt;a&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2a34e62954344c0300972e93384773fea6391d93" translate="yes" xml:space="preserve">
          <source>There no css (and therefore in css preprocessors) parent selector due to &quot;The major reasons for the CSS Working Group previously rejecting proposals for parent selectors are related to browser performance and incremental rendering issues.&quot;</source>
          <target state="translated">Родительский селектор в css (и,следовательно,в препроцессорах css)отсутствует в связи с тем,что &quot;основные причины,по которым Рабочая группа CSS ранее отклоняла предложения по родительскому селектору,связаны с производительностью браузера и проблемами инкрементального рендеринга&quot;.</target>
        </trans-unit>
        <trans-unit id="18d3bacd368887644309231e77445d8201da133f" translate="yes" xml:space="preserve">
          <source>There's a plugin that extends CSS to include some non-standard features that can really help when designing websites. It's called &lt;a href=&quot;http://elementqueries.com&quot;&gt;EQCSS&lt;/a&gt;.</source>
          <target state="translated">Есть плагин, который расширяет CSS, чтобы включать некоторые нестандартные функции, которые действительно могут помочь при разработке сайтов. Это называется &lt;a href=&quot;http://elementqueries.com&quot;&gt;EQCSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebd3737a340ed903c39226bcb7604071a5298840" translate="yes" xml:space="preserve">
          <source>These people are all top class in the field of front end development.</source>
          <target state="translated">Все эти люди относятся к высшему классу в области фронтального развития.</target>
        </trans-unit>
        <trans-unit id="60157f44e253a7ae7ce43a373250de2567d3b3e7" translate="yes" xml:space="preserve">
          <source>This is the most discussed aspect of the &lt;strong&gt;Selectors Level 4&lt;/strong&gt; specification.
With this, a selector will be able to style an element according to its child by using an exclamation mark after the given selector (!).</source>
          <target state="translated">Это наиболее обсуждаемый аспект спецификации &lt;strong&gt;Selectors Level 4&lt;/strong&gt; . При этом селектор сможет стилизовать элемент в соответствии с его дочерним элементом, используя восклицательный знак после данного селектора (!).</target>
        </trans-unit>
        <trans-unit id="a3377bca324d82054b28ed12a562d840cb5ba6ee" translate="yes" xml:space="preserve">
          <source>This matches any &lt;code&gt;F&lt;/code&gt; element that is preceded by an &lt;code&gt;E&lt;/code&gt; element.</source>
          <target state="translated">Это соответствует любому элементу &lt;code&gt;F&lt;/code&gt; , которому предшествует элемент &lt;code&gt;E&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ade13046564c9f73c7d23a1d0201e5b601d80cff" translate="yes" xml:space="preserve">
          <source>This way you can change the style in multiple inner tags, based on the rollover of the parent element.</source>
          <target state="translated">Таким образом,вы можете изменить стиль в нескольких внутренних тегах,основываясь на опрокидывании родительского элемента.</target>
        </trans-unit>
        <trans-unit id="a2ae2524fa82d3b6ca48d01699e987c240ed2e95" translate="yes" xml:space="preserve">
          <source>This will select any parent of a text input. But wait, there's still much more. If you want, you can select a specified parent:</source>
          <target state="translated">При этом будет выбран любой родитель вводимого текста.Но подождите,есть еще много чего.При желании вы можете выбрать любого из родителей:</target>
        </trans-unit>
        <trans-unit id="6bf4a3263761c784d37c158220ed791d196fdd9e" translate="yes" xml:space="preserve">
          <source>To aid in all these issues, this specification defines the @nest rule, which imposes fewer restrictions on how to validly nest style rules. Its syntax is:</source>
          <target state="translated">Чтобы помочь во всех этих вопросах,эта спецификация определяет правило @nest,которое накладывает меньше ограничений на то,как правильно вложить правила стиля гнезда.Его синтаксис:</target>
        </trans-unit>
        <trans-unit id="a1376a8f7898599fd7de6e615cc6b7beba746b37" translate="yes" xml:space="preserve">
          <source>Try to switch &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;block&lt;/code&gt; display, and then use any style you want. The &lt;code&gt;a&lt;/code&gt; element will fill the &lt;code&gt;li&lt;/code&gt; element, and you will be able to modify its look as you want. Don't forget to set &lt;code&gt;li&lt;/code&gt; padding to 0.</source>
          <target state="translated">Попробуйте переключить, чтобы &lt;code&gt;block&lt;/code&gt; отображение, а затем использовать любой стиль, который вы хотите. Элемент &lt;code&gt;a&lt;/code&gt; заполнит элемент &lt;code&gt;li&lt;/code&gt; , и вы сможете изменить его внешний вид так, как вам хочется. Не забудьте установить &lt;code&gt;li&lt;/code&gt; padding в 0.</target>
        </trans-unit>
        <trans-unit id="24975ca5508ea9851cec97364cf5dabca8f5a370" translate="yes" xml:space="preserve">
          <source>Updated demo and the rest of code</source>
          <target state="translated">Обновленная демо-версия и остальной код</target>
        </trans-unit>
        <trans-unit id="afe653ce0b85079b9bb98d11a41b5e77b2f6340a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;:has()&lt;/code&gt; the original question could be solved with this:</source>
          <target state="translated">Используя &lt;code&gt;:has()&lt;/code&gt; исходный вопрос можно решить с помощью этого:</target>
        </trans-unit>
        <trans-unit id="60034bec0808b20e41b05d45e963a29c8888458e" translate="yes" xml:space="preserve">
          <source>While direct nesting looks nice, it is somewhat fragile. Some valid nesting selectors, like .foo &amp;amp;, are disallowed, and editing the selector in certain ways can make the rule invalid unexpectedly. As well, some people find the nesting challenging to distinguish visually from the surrounding declarations.</source>
          <target state="translated">Хотя прямое вложение выглядит красиво, оно несколько хрупкое. Некоторые допустимые вложенные селекторы, такие как .foo &amp;amp;, запрещены, и редактирование селектора определенными способами может неожиданно сделать правило недействительным. Кроме того, некоторые люди считают, что гнездование сложно отличить визуально от окружающих деклараций.</target>
        </trans-unit>
        <trans-unit id="dbb5d3a24caf372a638b498419bfe0d5936fdb36" translate="yes" xml:space="preserve">
          <source>Yes: &lt;a href=&quot;https://developer.mozilla.org//docs/Web/CSS/:has&quot;&gt;&lt;code&gt;:has()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Да:: &lt;a href=&quot;https://developer.mozilla.org//docs/Web/CSS/:has&quot;&gt; &lt;code&gt;:has()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4becc4185bc33bcd14acd7a5c4a3c162b49aff0" translate="yes" xml:space="preserve">
          <source>You can select that &lt;code&gt;span.help&lt;/code&gt; when the &lt;code&gt;input&lt;/code&gt; is active and show it:</source>
          <target state="translated">Вы можете выбрать этот &lt;code&gt;span.help&lt;/code&gt; , когда &lt;code&gt;input&lt;/code&gt; активен, и показать его:</target>
        </trans-unit>
        <trans-unit id="19eac2928591c549608327e2a7b6ea1dbfb4196b" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://github.com/Idered/cssParentSelector&quot;&gt;this script&lt;/a&gt;:</source>
          <target state="translated">Вы можете использовать &lt;a href=&quot;https://github.com/Idered/cssParentSelector&quot;&gt;этот скрипт&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="86a4aaca88668f11e33e1f945825696dbcae43cc" translate="yes" xml:space="preserve">
          <source>You might try to use hyperlink as the parent, and then change the inner elements on hover. Like this:</source>
          <target state="translated">Вы можете попробовать использовать гиперссылку в качестве родителя,а затем изменить внутренние элементы на наведении курсора.Вот так:</target>
        </trans-unit>
        <trans-unit id="d481d1b33f51732b9c2e5434d7c91e77a6a5dc0a" translate="yes" xml:space="preserve">
          <source>an &lt;em&gt;any ancestor selector&lt;/em&gt;&lt;code&gt;^&lt;/code&gt; (which enables the opposite selection to &lt;code&gt;[SPACE]&lt;/code&gt;)</source>
          <target state="translated">&lt;em&gt;селектор любого предка&lt;/em&gt; &lt;code&gt;^&lt;/code&gt; (который разрешает выбор, противоположный &lt;code&gt;[SPACE]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="03b96edb4dca056d15b356bd25000fefadf68769" translate="yes" xml:space="preserve">
          <source>an &lt;em&gt;immediate parent&lt;/em&gt; selector &lt;code&gt;&amp;lt;&lt;/code&gt; (which enables the opposite selection to &lt;code&gt;&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;em&gt;непосредственный родительский&lt;/em&gt; селектор &lt;code&gt;&amp;lt;&lt;/code&gt; (который позволяет противоположный выбор для &lt;code&gt;&amp;gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c0cd0fa5b431f90d6f44d53fb95437bc7b01360c" translate="yes" xml:space="preserve">
          <source>will select the &lt;code&gt;ul&lt;/code&gt; element that has a child element with id &lt;em&gt;someId&lt;/em&gt;. Or to answer the original question, something like the following should do the trick (untested):</source>
          <target state="translated">выберет элемент &lt;code&gt;ul&lt;/code&gt; , который имеет дочерний элемент с идентификатором &lt;em&gt;someId&lt;/em&gt; . Или, чтобы ответить на исходный вопрос, нужно выполнить что-то вроде следующего (не проверено):</target>
        </trans-unit>
        <trans-unit id="dac52e037e129a40e9eab87f2da23d1eab4ce701" translate="yes" xml:space="preserve">
          <source>will set a red background-color if the user hovers over any anchor.</source>
          <target state="translated">установит красный цвет фона,если пользователь нависает на любой якорь.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
