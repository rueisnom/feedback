<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/1085162">
    <body>
      <group id="1085162">
        <trans-unit id="23e42a6ef9c64a5546118f7117feb409e677b35e" translate="yes" xml:space="preserve">
          <source>. If no selection is made, the complete hunk is staged.</source>
          <target state="translated">.Если выбор не сделан,то инсценируется весь кусок.</target>
        </trans-unit>
        <trans-unit id="847948549067358fc7a4308fd567106f17add26d" translate="yes" xml:space="preserve">
          <source>... and then using the mentioned keys, (y/n etc), for choosing lines to be included in the commit.</source>
          <target state="translated">...а затем с помощью указанных клавиш (yn и т.д.)для выбора строк,которые будут включены в фиксацию.</target>
        </trans-unit>
        <trans-unit id="61de0379c7d819a87c04dbdac3b47a347b3ab611" translate="yes" xml:space="preserve">
          <source>... but for files already in you repository, there is, in s are much better off using --patch flag on the commit command directly (if you are using a recent enough version of git): 
&lt;code&gt;
git commit --patch filename.txt
&lt;/code&gt;</source>
          <target state="translated">... но для файлов, уже находящихся в вашем репозитории, в s гораздо лучше использовать флаг --patch непосредственно для команды commit (если вы используете достаточно свежую версию git): &lt;code&gt; git commit --patch filename.txt &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f3b72d5b73714422778fa475930c0069a912871" translate="yes" xml:space="preserve">
          <source>... or, again, the short-form 
&lt;code&gt;
git commit -p filename.txt
&lt;/code&gt;</source>
          <target state="translated">... или, опять же, краткая форма &lt;code&gt; git commit -p filename.txt &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a6f81aa83591a345f7d00fc226626c0579ba9de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://git-cola.github.io/&quot;&gt;git-cola&lt;/a&gt; is a great GUI and also has this feature built-in. Just select the lines to stage and press</source>
          <target state="translated">&lt;a href=&quot;https://git-cola.github.io/&quot;&gt;git-cola&lt;/a&gt; - это отличный графический интерфейс, который также имеет встроенную функцию. Просто выберите линии для сцены и нажмите</target>
        </trans-unit>
        <trans-unit id="35441747290dcc3711db4cdec8c7cacff7f37e98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/airblade/vim-gitgutter&quot;&gt;vim-gitgutter&lt;/a&gt; plugin can stage hunks without leaving vim editor using</source>
          <target state="translated">Плагин &lt;a href=&quot;https://github.com/airblade/vim-gitgutter&quot;&gt;vim-gitgutter&lt;/a&gt; может ставить фрагменты, не выходя из редактора vim с помощью</target>
        </trans-unit>
        <trans-unit id="8903e3f3225494c415da330134b06696301cdc78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jjlee/git-meld-index&quot;&gt;git-meld-index&lt;/a&gt; -- quoting from the website:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jjlee/git-meld-index&quot;&gt;git-meld-index&lt;/a&gt; - цитирование с сайта:</target>
        </trans-unit>
        <trans-unit id="28b716c5bba7244cfb7516b371504adfe48cfc84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;Intellij IDEA&lt;/a&gt; (and I guess all other products of the series) has built in support for partial commits since v2018.1</source>
          <target state="translated">&lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;Intellij IDEA&lt;/a&gt; (и я думаю, что все другие продукты серии) имеет встроенную поддержку частичных коммитов начиная с v2018.1</target>
        </trans-unit>
        <trans-unit id="a3693c4c04984eaf771586cad4040aa423acf334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git commit -v&lt;/code&gt; to view your commit while you edit the commit message.</source>
          <target state="translated">&lt;code&gt;git commit -v&lt;/code&gt; для просмотра вашего коммита, пока вы редактируете сообщение о коммите.</target>
        </trans-unit>
        <trans-unit id="cb31642f605e0315309cc4b14fe75ddb68bfca5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git diff --staged&lt;/code&gt; to check that you staged the correct changes</source>
          <target state="translated">&lt;code&gt;git diff --staged&lt;/code&gt; для проверки правильности внесенных изменений</target>
        </trans-unit>
        <trans-unit id="a300a432b7be1f62c0bfcf53665b08b13a0d8d89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;git reset -p&lt;/code&gt; to unstage mistakenly added hunks</source>
          <target state="translated">&lt;code&gt;git reset -p&lt;/code&gt; , чтобы untage ошибочно добавил ханк</target>
        </trans-unit>
        <trans-unit id="7554969efd8c83b8d600d8b9661de769b4581ce1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1. Hunk wise:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;1. Гуд мудрый:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ec47db25e3de53e6b5b4945d2a98c539eba18c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2. Line wise:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2. Линия мудрая:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34bd1c26971226d88394a22e3a5522039b11f6e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;3. If you want to stage the complete file except couple of lines:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;3. Если вы хотите подготовить файл целиком, за исключением нескольких строк:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="717533e2cf3df700e8aa4b35f4a2379b03d77f77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Caution:&lt;/em&gt;&lt;/strong&gt;&lt;em&gt; do not change the content of the file, this is not a good place to do so. Just change the operators of deleted or added lines.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Внимание:&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;не изменяйте содержимое файла, это не очень хорошее место для этого.&lt;/em&gt; &lt;em&gt;Просто поменяйте операторы удаленных или добавленных строк.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcbfbc3d6aae516d0ed9d15c0444f8ac72f9abf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LEFT&lt;/strong&gt;: temporary directory contining files copied from your working tree</source>
          <target state="translated">&lt;strong&gt;LEFT&lt;/strong&gt; : временные файлы, содержащие каталог, скопированные из вашего рабочего дерева</target>
        </trans-unit>
        <trans-unit id="13c6f36292c01a823253f512a339ab42dfc2fe46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RIGHT&lt;/strong&gt;: temporary directory with the contents of the index. This also includes files that are not yet in the index but are modified or untracked in the working copy -- in this case you'll see the file contents from HEAD.</source>
          <target state="translated">&lt;strong&gt;ВПРАВО&lt;/strong&gt; : временный каталог с содержимым индекса. Сюда также входят файлы, которых еще нет в индексе, но которые изменены или не отслежены в рабочей копии - в этом случае вы увидите содержимое файла из HEAD.</target>
        </trans-unit>
        <trans-unit id="372f60334aa5d8918e891d52c780ab816ff7ba23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c767acbf8b9ca7f2b499bbb39aac7fce3d76c573" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;added content&lt;/strong&gt; 
             Added content is represented by lines beginning with &quot;+&quot;. You can
             prevent staging any addition lines by deleting them.</source>
          <target state="translated">&lt;strong&gt;добавленный контент&lt;/strong&gt; Добавленный контент представлен строками, начинающимися с &quot;+&quot;. Вы можете предотвратить размещение любых добавочных строк, удалив их.</target>
        </trans-unit>
        <trans-unit id="f607b8d257c50df637d647fa28b123086e4be8d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;git gui&lt;/strong&gt; provides this functionality under the diff view. Just right click the line(s) you're interested in and you should see a &quot;stage this line to commit&quot; menu item.</source>
          <target state="translated">&lt;strong&gt;git gui&lt;/strong&gt; предоставляет эту функциональность в представлении diff. Просто щелкните правой кнопкой мыши на строке (строках), которая вас интересует, и вы должны увидеть пункт меню &amp;laquo;подготовить эту строку&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="8ba7739b3b0c26c77014375db0f4c8d5dad3926d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;modified content:&lt;/strong&gt; 
             Modified content is represented by &quot;-&quot; lines (removing the old
             content) followed by &quot;+&quot; lines (adding the replacement content).
             You can prevent staging the modification by converting &quot;-&quot; lines to
             &quot; &quot;, and removing &quot;+&quot; lines. Beware that modifying only half of the
             pair is likely to introduce confusing changes to the index.</source>
          <target state="translated">&lt;strong&gt;Модифицированный контент:&lt;/strong&gt; Модифицированный контент представлен линиями &amp;laquo;-&amp;raquo; (удаление старого контента), за которыми следуют строки &amp;laquo;+&amp;raquo; (добавление контента замены). Вы можете предотвратить внесение изменений, преобразовав строки &quot;-&quot; в &quot;&quot; и удалив строки &quot;+&quot;. Помните, что изменение только половины пары может привести к непонятным изменениям в индексе.</target>
        </trans-unit>
        <trans-unit id="5f8bdb8133686a8ad60a0f2d2b9279d1a888e115" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;removed content:&lt;/strong&gt;
             Removed content is represented by lines beginning with &quot;-&quot;. You can
             prevent staging their removal by converting the &quot;-&quot; to a &quot; &quot;
             (space).</source>
          <target state="translated">&lt;strong&gt;удаленный контент:&lt;/strong&gt; удаленный контент представлен строками, начинающимися с &amp;laquo;-&amp;raquo;. Вы можете предотвратить постановку их удаления, преобразовав &quot;-&quot; в &quot;&quot; (пробел).</target>
        </trans-unit>
        <trans-unit id="9821869aa821996defeaba01e6c12538af610d55" translate="yes" xml:space="preserve">
          <source>Added content is represented by lines beginning with &quot;+&quot;. You can prevent staging any addition lines by deleting them.</source>
          <target state="translated">Добавленное содержимое представлено строками,начинающимися с &quot;+&quot;.Вы можете предотвратить инсценировку любых строк добавления,удалив их.</target>
        </trans-unit>
        <trans-unit id="a0bd44e9469f5b0a01c14c017e5f08be1f2e2eb4" translate="yes" xml:space="preserve">
          <source>Adding on a previous answer, if you prefer using the command line, entering &lt;code&gt;git add -e myfile&lt;/code&gt; gives you the choice to choose line by line what you want to commit because this command will open an editor with the differences, like so:</source>
          <target state="translated">Если добавить предыдущий ответ, если вы предпочитаете использовать командную строку, введите &lt;code&gt;git add -e myfile&lt;/code&gt; , чтобы выбрать строку за строкой то, что вы хотите зафиксировать, поскольку эта команда откроет редактор с различиями, например:</target>
        </trans-unit>
        <trans-unit id="ace6e76e5b5dce58f294c1fa6d523113cc7f265a" translate="yes" xml:space="preserve">
          <source>Afterwards, you can use:</source>
          <target state="translated">После этого ты можешь использовать:</target>
        </trans-unit>
        <trans-unit id="6734f386df43dba1b5b934c1feb61c5334bd4d27" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;https://stackoverflow.com/a/1085191/340811&quot;&gt;one answer&lt;/a&gt; above shows, you can use 
&lt;code&gt;
git add --patch filename.txt
&lt;/code&gt;</source>
          <target state="translated">Как показывает &lt;a href=&quot;https://stackoverflow.com/a/1085191/340811&quot;&gt;один ответ&lt;/a&gt; выше, вы можете использовать &lt;code&gt; git add --patch filename.txt &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be21521ecb4c7d9c5c8691f8206a6ac37f252f2c" translate="yes" xml:space="preserve">
          <source>As you may known lines that start with &lt;code&gt;+&lt;/code&gt; are addtions, lines that start with &lt;code&gt;-&lt;/code&gt; are deletions. So:</source>
          <target state="translated">Как вам известно, строки, начинающиеся с &lt;code&gt;+&lt;/code&gt; , являются добавками, строки, начинающиеся с &lt;code&gt;-&lt;/code&gt; , являются удалениями. Так:</target>
        </trans-unit>
        <trans-unit id="ef56989526889384d7de34cfc717d71ed832fdec" translate="yes" xml:space="preserve">
          <source>Beside this, it provides other cool features like a diff sign column as in some modern IDEs</source>
          <target state="translated">Кроме того,он предоставляет и другие интересные возможности,такие как колонка с диффузным знаком,как в некоторых современных IDE.</target>
        </trans-unit>
        <trans-unit id="5c0f00258f5a786db203a0a5065228f986e1abbe" translate="yes" xml:space="preserve">
          <source>Commit only part of a file in Git</source>
          <target state="translated">Запишите только часть файла в Git</target>
        </trans-unit>
        <trans-unit id="37d93ee3e64beb05ff2a0858ce87a460e62aef34" translate="yes" xml:space="preserve">
          <source>Edit the index (right hand side) until happy. Remember to save when needed.</source>
          <target state="translated">Редактируйте указатель (правая сторона)до тех пор,пока не будете счастливы.Не забудьте сохранить,когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="f434b2db17a1d7f01dbc67f0158ecbc3fe4be048" translate="yes" xml:space="preserve">
          <source>Every details about &lt;code&gt;git add&lt;/code&gt; are available on &lt;code&gt;git --help add&lt;/code&gt;</source>
          <target state="translated">Все подробности о &lt;code&gt;git add&lt;/code&gt; доступны на &lt;code&gt;git --help add&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07bb17d57bcd9c5e250639f163b7bbee5d78743c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;http://atom.io&quot;&gt;Atom&lt;/a&gt; users, the package &lt;a href=&quot;https://github.com/atom/github&quot;&gt;github&lt;/a&gt; includes interactive staging, in the style of &lt;code&gt;git gui&lt;/code&gt;. For shortcuts see the package's &lt;a href=&quot;https://flight-manual.atom.io/using-atom/sections/github-package/&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">Для пользователей &lt;a href=&quot;http://atom.io&quot;&gt;Atom&lt;/a&gt; пакет &lt;a href=&quot;https://github.com/atom/github&quot;&gt;github&lt;/a&gt; включает в себя интерактивную постановку в стиле &lt;code&gt;git gui&lt;/code&gt; . Для ярлыков см. &lt;a href=&quot;https://flight-manual.atom.io/using-atom/sections/github-package/&quot;&gt;Документацию&lt;/a&gt; пакета.</target>
        </trans-unit>
        <trans-unit id="40c81ad64f5f7bb1bc418d6564a82d4e98911ad5" translate="yes" xml:space="preserve">
          <source>For emacs there is also &lt;a href=&quot;http://github.com/chneukirchen/gitsum&quot;&gt;gitsum&lt;/a&gt;</source>
          <target state="translated">Для Emacs есть также &lt;a href=&quot;http://github.com/chneukirchen/gitsum&quot;&gt;Gitsum&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0444bdcf76b5f9632e10b0404425cd7d186826c" translate="yes" xml:space="preserve">
          <source>For example, how could I commit only 15 lines out of 30 lines that have been changed in a file?</source>
          <target state="translated">Например,как я могу зафиксировать только 15 строк из 30,которые были изменены в файле?</target>
        </trans-unit>
        <trans-unit id="2ba3f180baead898993201dbc26c96e533f80bbc" translate="yes" xml:space="preserve">
          <source>For those who use &lt;strong&gt;Git Extensions&lt;/strong&gt;:</source>
          <target state="translated">Для тех, кто использует &lt;strong&gt;Git Extensions&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="59f3fba9fd6e62600e09e7c815ce8d4de4f1c35d" translate="yes" xml:space="preserve">
          <source>Here is a description of each option:</source>
          <target state="translated">Вот описание каждого варианта:</target>
        </trans-unit>
        <trans-unit id="517a9b1840568ea22b08ea1f647231bed6e4e0ab" translate="yes" xml:space="preserve">
          <source>I believe that &lt;code&gt;git add -e myfile&lt;/code&gt; is the easiest way (my preference at least) since it simply opens a text editor and lets you choose which line you want to stage and which line you don't.
Regarding editing commands:</source>
          <target state="translated">Я считаю, что &lt;code&gt;git add -e myfile&lt;/code&gt; - это самый простой способ (по крайней мере, мои предпочтения), поскольку он просто открывает текстовый редактор и позволяет вам выбрать, какую строку вы хотите поставить, а какую - нет. По поводу команд редактирования:</target>
        </trans-unit>
        <trans-unit id="41704e4a48d4a2577d68697853205cb72ed1e6a3" translate="yes" xml:space="preserve">
          <source>I would strongly recommend using &lt;a href=&quot;https://www.sourcetreeapp.com/&quot;&gt;SourceTree&lt;/a&gt; from Atlassian. (It's free.) It makes this trivial. You can stage individual hunks of code or individual lines of code quickly and easily.</source>
          <target state="translated">Я настоятельно рекомендую использовать &lt;a href=&quot;https://www.sourcetreeapp.com/&quot;&gt;SourceTree&lt;/a&gt; от Atlassian. (Это бесплатно.) Это делает это тривиальным. Вы можете быстро и легко создавать отдельные фрагменты кода или отдельные строки кода.</target>
        </trans-unit>
        <trans-unit id="c26e334cc417c71ced9e0e20b6e573d3a3a987e4" translate="yes" xml:space="preserve">
          <source>If it's on &lt;code&gt;Windows&lt;/code&gt; platform, in my opinion &lt;code&gt;git gui&lt;/code&gt; is very good tool to &lt;code&gt;stage&lt;/code&gt;/&lt;code&gt;commit&lt;/code&gt; few lines from &lt;code&gt;unstaged&lt;/code&gt; file</source>
          <target state="translated">Если это на платформе &lt;code&gt;Windows&lt;/code&gt; , по моему мнению, &lt;code&gt;git gui&lt;/code&gt; - очень хороший инструмент для &lt;code&gt;unstaged&lt;/code&gt; / &lt;code&gt;commit&lt;/code&gt; нескольких строк из файла без тегов.</target>
        </trans-unit>
        <trans-unit id="f0aab2b8f69d3d6b7bb910a0606dbaeef0d9f5f5" translate="yes" xml:space="preserve">
          <source>If only part of hunk should be staged &lt;a href=&quot;https://github.com/tpope/vim-fugitive&quot;&gt;vim-fugitive&lt;/a&gt;</source>
          <target state="translated">Если только часть ломоть должен быть поставлен в &lt;a href=&quot;https://github.com/tpope/vim-fugitive&quot;&gt;бегах&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="045ec0da0831cce15d8fd5cfea09e640da8232f3" translate="yes" xml:space="preserve">
          <source>If the file is not in the repository yet, you can first do &lt;code&gt;git add -N &amp;lt;filename&amp;gt;&lt;/code&gt;. Afterwards you can go on with &lt;code&gt;git add -p &amp;lt;filename&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Если файл еще не находится в репозитории, вы можете сначала выполнить &lt;code&gt;git add -N &amp;lt;filename&amp;gt;&lt;/code&gt; . После этого вы можете продолжить с помощью &lt;code&gt;git add -p &amp;lt;filename&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46738d37fe9a25b9ad51cf85eecd1df4c9f7d76e" translate="yes" xml:space="preserve">
          <source>If you are using vim, you may want to try the excellent plugin called &lt;a href=&quot;https://github.com/tpope/vim-fugitive&quot;&gt;fugitive&lt;/a&gt;.</source>
          <target state="translated">Если вы используете vim, вы можете попробовать отличный плагин под названием &lt;a href=&quot;https://github.com/tpope/vim-fugitive&quot;&gt;fugitive&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14388be9fdfad5e3d00b91139d94da29d1c8deaf" translate="yes" xml:space="preserve">
          <source>If you prefer doing it from GUI, you can use &lt;a href=&quot;http://git-scm.com/docs/git-gui&quot;&gt;git-gui&lt;/a&gt;. You can simply mark chunks which you want to have included in commit.  I personally find it easier than using &lt;code&gt;git add -i&lt;/code&gt;.  Other git GUIs, like QGit or GitX, might also have this functionality as well.</source>
          <target state="translated">Если вы предпочитаете делать это из GUI, вы можете использовать &lt;a href=&quot;http://git-scm.com/docs/git-gui&quot;&gt;git-gui&lt;/a&gt; . Вы можете просто пометить чанки, которые хотите включить в коммит. Лично мне проще, чем использовать &lt;code&gt;git add -i&lt;/code&gt; . Другие графические интерфейсы git, такие как QGit или GitX, также могут иметь эту функцию.</target>
        </trans-unit>
        <trans-unit id="d0ffacab77b9308a3cf3697ac65536e8276d38cd" translate="yes" xml:space="preserve">
          <source>In a git repository, run:</source>
          <target state="translated">В git-репозитории,беги:</target>
        </trans-unit>
        <trans-unit id="af4c27a86b8f42b6d7e6b884b22d8573ed032c03" translate="yes" xml:space="preserve">
          <source>In the Commit window, select the file you want to partially commit, then select the text you want to commit in the right pane, then right-click on the selection and choose 'Stage selected lines' from the context menu.</source>
          <target state="translated">В окне фиксации выберите файл,который вы хотите частично зафиксировать,затем в правой панели выберите текст,который вы хотите зафиксировать,затем щелкните правой кнопкой мыши по выбранному файлу и выберите из контекстного меню 'Stage selected lines' (Выделенные строки).</target>
        </trans-unit>
        <trans-unit id="44dc43e2735e0a17a8d0426f9b1117c8acf5f974" translate="yes" xml:space="preserve">
          <source>It's been 10 years since this question was asked. And I hope this answer will be useful to someone. As mentioned in the answer &lt;a href=&quot;https://stackoverflow.com/a/55326882/736149&quot;&gt;here&lt;/a&gt;, where GUI is not an option, Andrew Shadura's &lt;a href=&quot;https://github.com/andrewshadura/git-crecord&quot;&gt;crecord extension&lt;/a&gt; helps bring a ncurses window in which we can select the lines to commit.</source>
          <target state="translated">Прошло 10 лет с тех пор, как этот вопрос был задан. И я надеюсь, что этот ответ будет кому-то полезен. Как уже упоминалось в ответе, где GUI не является опцией, &lt;a href=&quot;https://github.com/andrewshadura/git-crecord&quot;&gt;расширение crecord&lt;/a&gt; Эндрю Шадуры помогает открыть окно ncurses, в котором мы можем выбрать строки для фиксации.</target>
        </trans-unit>
        <trans-unit id="58668e7669fd564d99db5d581fcdb6a5618440b5" translate="yes" xml:space="preserve">
          <source>J</source>
          <target state="translated">J</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="59b86486aed4edafd59a372a9da15c32460385f0" translate="yes" xml:space="preserve">
          <source>Like this:</source>
          <target state="translated">Вот так:</target>
        </trans-unit>
        <trans-unit id="5573b67a2a0a6c0c6bdb8830a0a160f18532fc7f" translate="yes" xml:space="preserve">
          <source>Modern Git has also &lt;code&gt;git commit --interactive&lt;/code&gt; (and &lt;code&gt;git commit --patch&lt;/code&gt;, which is shortcut to patch option in interactive commit).</source>
          <target state="translated">Современный Git также имеет &lt;code&gt;git commit --interactive&lt;/code&gt; (и &lt;code&gt;git commit --patch&lt;/code&gt; , который является ярлыком для опции исправления в интерактивном коммите).</target>
        </trans-unit>
        <trans-unit id="00b61542d0211972bc61982931e3e8c50577c383" translate="yes" xml:space="preserve">
          <source>Modified content is represented by &quot;-&quot; lines (removing the old content) followed by &quot;+&quot; lines (adding the replacement content). You can prevent staging the modification by converting &quot;-&quot; lines to &quot; &quot;, and removing &quot;+&quot;
             lines. Beware that modifying only half of the pair is likely to introduce confusing changes to the index.</source>
          <target state="translated">Модифицированное содержимое представлено строками &quot;-&quot; (удаление старого содержимого),за которыми следуют строки &quot;+&quot; (добавление заменяющего содержимого).Вы можете предотвратить инсценировку изменения,конвертировав строки &quot;-&quot; в &quot; &quot;,а также удалив строки с символом &quot;+&quot;.Остерегайтесь,что модификация только половины пары,скорее всего,приведет к путанице в индексе.</target>
        </trans-unit>
        <trans-unit id="bae9503f83a8e896d44b3571e2eb4a60a9fe1b2a" translate="yes" xml:space="preserve">
          <source>Much like jdsumsion's answer you can also stash your current work but then use a difftool like meld to pull selected changes from the stash. That way you can even edit the hunks manually very easy, which is a bit of a pain when in &lt;code&gt;git add -p&lt;/code&gt;:</source>
          <target state="translated">Как и в ответе jdsumsion, вы также можете спрятать свою текущую работу, но затем использовать difftool, как meld, чтобы извлечь выбранные изменения из тайника. Таким образом, вы даже можете легко редактировать фрагменты вручную, что немного неприятно, если в &lt;code&gt;git add -p&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="53ec17fd9b28ca771807cff59cfa96c309a72a6d" translate="yes" xml:space="preserve">
          <source>Note this is far different than the &lt;code&gt;git format-patch&lt;/code&gt; command, whose purpose is to parse commit data into a &lt;code&gt;.patch&lt;/code&gt; files.</source>
          <target state="translated">Обратите внимание, что это сильно отличается от команды &lt;code&gt;git format-patch&lt;/code&gt; , целью которой является анализ данных &lt;code&gt;.patch&lt;/code&gt; файлах .patch .</target>
        </trans-unit>
        <trans-unit id="cf0b19ebbada53230ba7249ba576d21462e947b8" translate="yes" xml:space="preserve">
          <source>Press &lt;code&gt;Ctrl+T (Stage file to commit)&lt;/code&gt;</source>
          <target state="translated">Нажмите &lt;code&gt;Ctrl+T (Stage file to commit)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52239031922cdf5e70de23769980eb38d27ba72b" translate="yes" xml:space="preserve">
          <source>Reference for future: &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Interactive-Staging&quot;&gt;Git Tools - Interactive Staging&lt;/a&gt;</source>
          <target state="translated">Ссылка на будущее: &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Interactive-Staging&quot;&gt;Git Tools - Интерактивная постановка&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e317f2faafb831e4cbd09ebccd9fa3144e930ab8" translate="yes" xml:space="preserve">
          <source>Removed content is represented by lines beginning with &quot;-&quot;. You can prevent staging their removal by converting the &quot;-&quot; to a &quot; &quot; (space).</source>
          <target state="translated">Удаленное содержимое представлено строками,начинающимися с буквы &quot;-&quot;.Вы можете предотвратить инсценировку их удаления,преобразовав &quot;-&quot; в &quot; &quot; (пробел).</target>
        </trans-unit>
        <trans-unit id="ef674289039b58b9fbd3bc60331d9ad9f7f2ac74" translate="yes" xml:space="preserve">
          <source>Right click and select &lt;code&gt;Stage Lines for commit&lt;/code&gt;</source>
          <target state="translated">Щелкните правой кнопкой мыши и выберите &lt;code&gt;Stage Lines for commit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8020cf0a2c0136cbe4dff7fd09abeadf6fd6efe3" translate="yes" xml:space="preserve">
          <source>Right click and select &lt;code&gt;UnStage Lines for commit&lt;/code&gt;</source>
          <target state="translated">Щелкните правой кнопкой мыши и выберите &lt;code&gt;UnStage Lines for commit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56d808d074c0a88634b9cef4a33c2469daa0e812" translate="yes" xml:space="preserve">
          <source>Right click chunk of code which needs to be staged</source>
          <target state="translated">Щелкните правой кнопкой мыши на фрагмент кода,который должен быть инсценирован</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="623ca25f66ecbf070f81282eaa31f40ab5a274c2" translate="yes" xml:space="preserve">
          <source>Screencast showing a sample usage</source>
          <target state="translated">Скринкаст,показывающий пример использования</target>
        </trans-unit>
        <trans-unit id="a5417a62ca7d77b9ec3e57207087553d427fb00b" translate="yes" xml:space="preserve">
          <source>Select &lt;code&gt;Stage Hunk for commit&lt;/code&gt;</source>
          <target state="translated">Выберите &lt;code&gt;Stage Hunk for commit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebce5d0eeaf118eee23bff549f7a7bee7579de19" translate="yes" xml:space="preserve">
          <source>Select the file from &lt;code&gt;unstagged Changes&lt;/code&gt; section</source>
          <target state="translated">Выберите файл из раздела &amp;laquo; &lt;code&gt;unstagged Changes&lt;/code&gt; &amp;raquo;</target>
        </trans-unit>
        <trans-unit id="fa2b58c78176d060bcde0e4b996821d4aabc9272" translate="yes" xml:space="preserve">
          <source>Select the line/lines be staged</source>
          <target state="translated">Выберите линии,которые должны быть инсценированы</target>
        </trans-unit>
        <trans-unit id="6fae30d7ddd28643a4dfb0611be0f70d48956dd7" translate="yes" xml:space="preserve">
          <source>Select the line/lines to be staged</source>
          <target state="translated">Выберите линии,которые должны быть поставлены</target>
        </trans-unit>
        <trans-unit id="ec430cad84d922bbf920abd01c484d1a3e8aa858" translate="yes" xml:space="preserve">
          <source>Selected file now moves to &lt;code&gt;Staged Changes&lt;/code&gt; Section</source>
          <target state="translated">Выбранный файл теперь перемещается в секцию &lt;code&gt;Staged Changes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7420a1e2bd38f2439eaf52e297b4afe5d8714c1" translate="yes" xml:space="preserve">
          <source>Set up the extension as follows:</source>
          <target state="translated">Настройте удлинитель следующим образом:</target>
        </trans-unit>
        <trans-unit id="305d297ce07ffd48b4b0e32f0a495bd9f7e053e6" translate="yes" xml:space="preserve">
          <source>Should you use emacs, take a look at &lt;a href=&quot;https://github.com/magit/magit&quot;&gt;Magit&lt;/a&gt;, which provides a git interface for emacs. It supports &lt;a href=&quot;https://magit.vc/manual/magit/Staging-and-unstaging.html&quot;&gt;staging hunks&lt;/a&gt; (parts of files) quite well.</source>
          <target state="translated">Если вы используете emacs, взгляните на &lt;a href=&quot;https://github.com/magit/magit&quot;&gt;Magit&lt;/a&gt; , который предоставляет интерфейс git для emacs. Он поддерживает &lt;a href=&quot;https://magit.vc/manual/magit/Staging-and-unstaging.html&quot;&gt;постановку&lt;/a&gt; фрагментов (частей файлов) довольно хорошо.</target>
        </trans-unit>
        <trans-unit id="4b6dae5db01cab8d5dfa9eb338aee11d63798aa7" translate="yes" xml:space="preserve">
          <source>This is similar to the functionality of git add -p, and git add --interactive. In some cases meld is easier / quicker to use than git add -p. That's because meld allows you, for example, to:</source>
          <target state="translated">Это похоже на функциональность gitd-добавления -p,а gitd-добавления --interactive.В некоторых случаях meld проще в использовании,чем git add -p.Это связано с тем,что meld позволяет,например:</target>
        </trans-unit>
        <trans-unit id="107bcabe6072db121e67aa71721c126bc5b7a251" translate="yes" xml:space="preserve">
          <source>This is what &lt;code&gt;git add -h&lt;/code&gt; says about adding files this way (patching files):</source>
          <target state="translated">Вот что говорит &lt;code&gt;git add -h&lt;/code&gt; о добавлении файлов таким образом (исправление файлов):</target>
        </trans-unit>
        <trans-unit id="294fe49b14eb83ec799ed7501f42dc4441ab0366" translate="yes" xml:space="preserve">
          <source>This would bring up the ncurses interface which can be used as shown below. Pressing the following keys in the ncurses window will do certain actions:</source>
          <target state="translated">Это вызовет интерфейс ncurses,который можно использовать,как показано ниже.Нажатие следующих клавиш в окне ncurses выполнит определенные действия:</target>
        </trans-unit>
        <trans-unit id="b26ee33e338740e38745f396a6e8dc505b55c741" translate="yes" xml:space="preserve">
          <source>To not stage a deletion just replace &lt;code&gt;-&lt;/code&gt; with space .</source>
          <target state="translated">Чтобы не удалять, просто замените пробелом.</target>
        </trans-unit>
        <trans-unit id="3d532a60dd3a1c232befda239f8834800f5a6bca" translate="yes" xml:space="preserve">
          <source>To not stage an addition just delete that line.</source>
          <target state="translated">Чтобы не ставить добавление,просто удалите эту строку.</target>
        </trans-unit>
        <trans-unit id="957a877ee67efecdb4f61b01204df1e0f35b8efb" translate="yes" xml:space="preserve">
          <source>Tried out &lt;code&gt;git add -p filename.x&lt;/code&gt;, but on a mac, I found gitx (&lt;a href=&quot;http://gitx.frim.nl/&quot;&gt;http://gitx.frim.nl/&lt;/a&gt; or &lt;a href=&quot;https://github.com/pieter/gitx&quot;&gt;https://github.com/pieter/gitx&lt;/a&gt;) to be much easier to commit exactly the lines I wanted to.</source>
          <target state="translated">Попробовал &lt;code&gt;git add -p filename.x&lt;/code&gt; , но на Mac я обнаружил, что gitx ( &lt;a href=&quot;http://gitx.frim.nl/&quot;&gt;http://gitx.frim.nl/&lt;/a&gt; или &lt;a href=&quot;https://github.com/pieter/gitx&quot;&gt;https://github.com/pieter/gitx&lt;/a&gt; ) гораздо проще совершить именно линии я хотел.</target>
        </trans-unit>
        <trans-unit id="ca8bc6b6ead73dfa665a0d4dec1469cd39a4cc85" translate="yes" xml:space="preserve">
          <source>Using Atom allows working with a theme that has dark background (by default, &lt;a href=&quot;https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Graphical-Interfaces&quot;&gt;&lt;code&gt;git gui&lt;/code&gt;&lt;/a&gt; has a white background).</source>
          <target state="translated">Использование Atom позволяет работать с темой с темным фоном (по умолчанию у &lt;a href=&quot;https://git-scm.com/book/en/v2/Appendix-A%3A-Git-in-Other-Environments-Graphical-Interfaces&quot;&gt; &lt;code&gt;git gui&lt;/code&gt; &lt;/a&gt; белый фон).</target>
        </trans-unit>
        <trans-unit id="99ec45b509d4548ed87f55167fbcd7ee680ecd01" translate="yes" xml:space="preserve">
          <source>Using the stash method gives you the opportunity to test, if your code still works, before you commit it.</source>
          <target state="translated">Использование метода тайника дает возможность проверить,работает ли еще ваш код,прежде чем вы его зафиксируете.</target>
        </trans-unit>
        <trans-unit id="ff757ce89282a58ada7756dd6170fccc0c35abe9" translate="yes" xml:space="preserve">
          <source>Very good introductory screencasts &lt;a href=&quot;http://vimcasts.org/blog/2011/05/the-fugitive-series/&quot;&gt;here&lt;/a&gt; (see esp. &lt;a href=&quot;http://vimcasts.org/episodes/fugitive-vim-working-with-the-git-index/&quot;&gt;part 2&lt;/a&gt;).</source>
          <target state="translated">Очень хорошие вступительные скринкасты &lt;a href=&quot;http://vimcasts.org/blog/2011/05/the-fugitive-series/&quot;&gt;здесь&lt;/a&gt; (см. &lt;a href=&quot;http://vimcasts.org/episodes/fugitive-vim-working-with-the-git-index/&quot;&gt;Часть 2&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d19085746262dfa0b4a2e48a79a7c3a79eade753" translate="yes" xml:space="preserve">
          <source>When I have a lot of changes, and will end up creating a few commits from the changes, then I want to save my starting point temporarily before staging things.</source>
          <target state="translated">Когда у меня будет много изменений,и в итоге я создам несколько коммитов из этих изменений,то я хочу временно сохранить свою исходную точку перед тем,как ставить вещи.</target>
        </trans-unit>
        <trans-unit id="c26e0bd3b160568868c27879c9ec41b2a5d7c27c" translate="yes" xml:space="preserve">
          <source>When I make changes to a file in Git, how can I commit only some of the changes?</source>
          <target state="translated">Когда я вношу изменения в файл в Git'е,как я могу зафиксировать только некоторые из этих изменений?</target>
        </trans-unit>
        <trans-unit id="9ab19446ba2f329c6b2652821409e8c2a85fc007" translate="yes" xml:space="preserve">
          <source>When you're done, close meld, and git-meld-index will update the index to match the contents of the temporary directory on the right hand side of meld that you just edited.</source>
          <target state="translated">Когда вы закончите,close meld и git-meld-index обновят индекс,чтобы он соответствовал содержимому временной директории справа от meld,которую вы только что редактировали.</target>
        </trans-unit>
        <trans-unit id="1f25c863c7368dd1170c04b039b2bb6a11f88e0c" translate="yes" xml:space="preserve">
          <source>Whymarrh's answer is what I usually do, except sometimes there are lots of changes and I can tell I might make a mistake while staging things, and I want a committed state I can fall back on for a second pass.</source>
          <target state="translated">Ответ Whymarrh-это то,что я обычно делаю,за исключением того,что иногда происходит много изменений,и я могу сказать,что я могу сделать ошибку во время постановки вещей,и я хочу преданное состояние,в котором я могу отступить на второй пасс.</target>
        </trans-unit>
        <trans-unit id="c0fbf9c727bf6651110e82e636d1ff5fc2055fa3" translate="yes" xml:space="preserve">
          <source>With TortoiseGit:</source>
          <target state="translated">С TortoiseGit:</target>
        </trans-unit>
        <trans-unit id="d626449e752977866bd08eaedb98e61749874fc3" translate="yes" xml:space="preserve">
          <source>Worth noting that to use &lt;code&gt;git add --patch&lt;/code&gt; for a &lt;strong&gt;new file&lt;/strong&gt; you need to first add the file to index with &lt;code&gt;git add --intent-to-add&lt;/code&gt;:</source>
          <target state="translated">Стоит отметить, что для использования &lt;code&gt;git add --patch&lt;/code&gt; для &lt;strong&gt;нового файла&lt;/strong&gt; вам нужно сначала добавить файл в индекс с помощью &lt;code&gt;git add --intent-to-add&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5de17521f490d0afa8d7013ca6849d8c188412a3" translate="yes" xml:space="preserve">
          <source>You can see the diff of a file between working copy and index with &lt;code&gt;:Gdiff&lt;/code&gt;, and then add lines or hunks to the index using classic vim diff commands like &lt;code&gt;dp&lt;/code&gt;. Save the modifications in the index and commit with &lt;code&gt;:Gcommit&lt;/code&gt;, and you're done.</source>
          <target state="translated">Вы можете увидеть &lt;code&gt;:Gdiff&lt;/code&gt; файла между рабочей копией и индексом с помощью : Gdiff , а затем добавить строки или фрагменты в индекс, используя классические команды vim diff, такие как &lt;code&gt;dp&lt;/code&gt; . Сохраните изменения в индексе и &lt;code&gt;:Gcommit&lt;/code&gt; с помощью : Gcommit , и все готово.</target>
        </trans-unit>
        <trans-unit id="615e7bfe037e262f18abbd07e4ba664a365964a1" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;git add --interactive&lt;/code&gt; or &lt;code&gt;git add -p &amp;lt;&lt;em&gt;file&lt;/em&gt;&amp;gt;&lt;/code&gt;, and then &lt;code&gt;git commit&lt;/code&gt; (&lt;strong&gt;not&lt;/strong&gt;&lt;code&gt;git commit -a&lt;/code&gt;); see &lt;em&gt;Interactive mode&lt;/em&gt; in &lt;a href=&quot;http://git-scm.com/docs/git-add&quot;&gt;git-add&lt;/a&gt; manpage, or simply follow instructions.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;git add --interactive&lt;/code&gt; или &lt;code&gt;git add -p &amp;lt;&lt;em&gt;file&lt;/em&gt;&amp;gt;&lt;/code&gt; , а затем &lt;code&gt;git commit&lt;/code&gt; ( &lt;strong&gt;не&lt;/strong&gt; &lt;code&gt;git commit -a&lt;/code&gt; ); см. &lt;em&gt;Интерактивный режим&lt;/em&gt; на странице руководства &lt;a href=&quot;http://git-scm.com/docs/git-add&quot;&gt;git-add&lt;/a&gt; или просто следуйте инструкциям.</target>
        </trans-unit>
        <trans-unit id="a401d330b7ab811a76458f02f4cc5cdfd7f43aec" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;git add --patch &amp;lt;filename&amp;gt;&lt;/code&gt; (or &lt;code&gt;-p&lt;/code&gt; for short), and git will begin to break down your file into what it thinks are sensible &quot;hunks&quot; (portions of the file). It will then prompt you with this question:</source>
          <target state="translated">Вы можете использовать &lt;code&gt;git add --patch &amp;lt;filename&amp;gt;&lt;/code&gt; (или &lt;code&gt;-p&lt;/code&gt; для краткости), и git начнет разбивать ваш файл на то, что он считает разумными &quot;кусочками&quot; (частями файла). Затем он подскажет вам этот вопрос:</target>
        </trans-unit>
        <trans-unit id="a8d7ec41c3df53ed0c68c5ddca5e3337d59f3573" translate="yes" xml:space="preserve">
          <source>You'll see meld (or your configured git difftool) pop up with:</source>
          <target state="translated">Вы увидите всплывающее окно meld (или ваш настроенный git-диффузел):</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="5b599c890062a85dea5257d16b555dad8305bfda" translate="yes" xml:space="preserve">
          <source>added content:</source>
          <target state="translated">добавленный контент:</target>
        </trans-unit>
        <trans-unit id="2bd1a9484c2c9f160372d06b72725e5d0cb958f7" translate="yes" xml:space="preserve">
          <source>allows visual range selection then &lt;code&gt;:'&amp;lt;,'&amp;gt;diffput&lt;/code&gt; or &lt;code&gt;:'&amp;lt;,'&amp;gt;diffget&lt;/code&gt; to stage/revert individual line changes.</source>
          <target state="translated">позволяет визуальный выбор диапазона затем &lt;code&gt;:'&amp;lt;,'&amp;gt;diffput&lt;/code&gt; или &lt;code&gt;:'&amp;lt;,'&amp;gt;diffget&lt;/code&gt; для изменения / изменения отдельных строк.</target>
        </trans-unit>
        <trans-unit id="939a3589d16f8375971efd6cba1bbef0770d3266" translate="yes" xml:space="preserve">
          <source>cd to your git repo and invoke it as follows:</source>
          <target state="translated">cd к вашему git repo и ссылаться на него следующим образом:</target>
        </trans-unit>
        <trans-unit id="3c363836cf4e16666669a25da280a1865c2d2874" translate="yes" xml:space="preserve">
          <source>d</source>
          <target state="translated">d</target>
        </trans-unit>
        <trans-unit id="21a709faaa441c7cbc72b92e9631d25156fb9de8" translate="yes" xml:space="preserve">
          <source>do not stage this hunk for the next commit</source>
          <target state="translated">не ставить этот крючок на следующий коммит.</target>
        </trans-unit>
        <trans-unit id="5cb599d5f2640b95044ae8fbfeb0a86fef5ccb92" translate="yes" xml:space="preserve">
          <source>do not stage this hunk or any of the later hunks in the file</source>
          <target state="translated">не запускайте этот или любой из последующих хакеров в файле.</target>
        </trans-unit>
        <trans-unit id="58e6b3a414a1e090dfc6029add0f3555ccba127f" translate="yes" xml:space="preserve">
          <source>e</source>
          <target state="translated">e</target>
        </trans-unit>
        <trans-unit id="fac0778a946fcd984d819bd8ba1f9f2a148a6061" translate="yes" xml:space="preserve">
          <source>edit by hand and see 'live' diff updates (updated after every keypress)</source>
          <target state="translated">редактируйте вручную и смотрите &quot;живые&quot; диф-обновления (обновляются после каждого нажатия клавиш)</target>
        </trans-unit>
        <trans-unit id="54fd1711209fb1c0781092374132c66e79e2241b" translate="yes" xml:space="preserve">
          <source>g</source>
          <target state="translated">g</target>
        </trans-unit>
        <trans-unit id="9aef0c5ee589f04c2f5d9cecb27c8c7afb703d04" translate="yes" xml:space="preserve">
          <source>git-meld-index runs meld -- or any other git difftool (kdiff3, diffuse, etc.) -- to allow you to interactively stage changes to the git index (also known as the git staging area).</source>
          <target state="translated">git-meld-index запускает meld --или любой другой git-диффтол (kdiff3,диффузный и т.д.)--для того,чтобы вы могли интерактивно изменять git-индекс (также известный как git staging area).</target>
        </trans-unit>
        <trans-unit id="5c2dd944dde9e08881bef0894fe7b22a5c9c4b06" translate="yes" xml:space="preserve">
          <source>j</source>
          <target state="translated">j</target>
        </trans-unit>
        <trans-unit id="13fbd79c3d390e5d6585a21e11ff5ec1970cff0c" translate="yes" xml:space="preserve">
          <source>k</source>
          <target state="translated">k</target>
        </trans-unit>
        <trans-unit id="e624254c5f00cfb41d411f0289f1d7f313562900" translate="yes" xml:space="preserve">
          <source>leave this hunk undecided, see next hunk</source>
          <target state="translated">оставь этот кусок нерешенным,посмотрим следующий кусок.</target>
        </trans-unit>
        <trans-unit id="73f1fb01121e6fe592576068c4c58768f12bf692" translate="yes" xml:space="preserve">
          <source>leave this hunk undecided, see next undecided hunk</source>
          <target state="translated">Оставьте этот кусок нерешённым,посмотрите следующий кусок.</target>
        </trans-unit>
        <trans-unit id="44a80068c49c358887ccd8723bf2742be57110ef" translate="yes" xml:space="preserve">
          <source>leave this hunk undecided, see previous hunk</source>
          <target state="translated">оставьте этот кусок нерешённым,посмотрите на предыдущий кусок.</target>
        </trans-unit>
        <trans-unit id="8206a9870270114d62e9ac026a19d0a9dc3c7408" translate="yes" xml:space="preserve">
          <source>leave this hunk undecided, see previous undecided hunk</source>
          <target state="translated">Оставьте этот кусок нерешённым,посмотрите предыдущий кусок.</target>
        </trans-unit>
        <trans-unit id="3c9a0c677d8b89380ca2574208ab057e3e3bb7f8" translate="yes" xml:space="preserve">
          <source>manually edit the current hunk</source>
          <target state="translated">вручную отредактировать текущий хак</target>
        </trans-unit>
        <trans-unit id="ace76e0e158a4c766cceb7381c21cb78f042b860" translate="yes" xml:space="preserve">
          <source>modified content:</source>
          <target state="translated">измененное содержание:</target>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="0cfaab1d27c93e0d310a84aa1c86c7d62a3a71f4" translate="yes" xml:space="preserve">
          <source>navigate to a change without saying 'n' to every change you want to skip</source>
          <target state="translated">переходите к изменениям,не говоря &quot;н&quot; к каждому изменению,которое вы хотите пропустить.</target>
        </trans-unit>
        <trans-unit id="d9c887040bab16e786e9865b9ca42745e486c7e2" translate="yes" xml:space="preserve">
          <source>or the short-form 
&lt;code&gt;
git add -p filename.txt
&lt;/code&gt;</source>
          <target state="translated">или краткая форма &lt;code&gt; git add -p filename.txt &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37d153789c2dbb68f9608a65efc226fa132b90a9" translate="yes" xml:space="preserve">
          <source>print hunk help</source>
          <target state="translated">справка по печати</target>
        </trans-unit>
        <trans-unit id="22ea1c649c82946aa6e479e1ffd321e4a318b1b0" translate="yes" xml:space="preserve">
          <source>q</source>
          <target state="translated">q</target>
        </trans-unit>
        <trans-unit id="615eb261f17dea328d8bd3ad7d422948e7c79bf7" translate="yes" xml:space="preserve">
          <source>quit; do not stage this hunk or any of the remaining hunks</source>
          <target state="translated">увольняйтесь;не ставите этот или любой из оставшихся крючков.</target>
        </trans-unit>
        <trans-unit id="255ef44dfeab3c6fe814ae0eafeb12f21f555dc5" translate="yes" xml:space="preserve">
          <source>removed content:</source>
          <target state="translated">удаленное содержимое:</target>
        </trans-unit>
        <trans-unit id="69cb0d9032f44652297ddcc29503be1db22ac8d7" translate="yes" xml:space="preserve">
          <source>right click on the file and use &lt;code&gt;Context Menu &amp;rarr; Restore after commit&lt;/code&gt;. This will create a copy of the file as it is. Then you can edit the file, e.g. in TortoiseGitMerge and undo all the changes you don't want to commit. After saving those changes you can commit the file.</source>
          <target state="translated">щелкните правой кнопкой мыши по файлу и используйте &lt;code&gt;Context Menu &amp;rarr; Restore after commit&lt;/code&gt; . Это создаст копию файла как есть. Затем вы можете отредактировать файл, например, в TortoiseGitMerge и отменить все изменения, которые вы не хотите фиксировать. После сохранения этих изменений вы можете зафиксировать файл.</target>
        </trans-unit>
        <trans-unit id="a0f1490a20d0211c997b44bc357e1972deab8ae3" translate="yes" xml:space="preserve">
          <source>s</source>
          <target state="translated">s</target>
        </trans-unit>
        <trans-unit id="6bf011b4c4e4a3b51d486045f81bb5c55e449ea8" translate="yes" xml:space="preserve">
          <source>search for a hunk matching the given regex</source>
          <target state="translated">искать кусок,соответствующий заданному регексу.</target>
        </trans-unit>
        <trans-unit id="64910625a6143adc6a9492187c237d484695bd48" translate="yes" xml:space="preserve">
          <source>see intra-line diffs</source>
          <target state="translated">см.внутристрочные различия</target>
        </trans-unit>
        <trans-unit id="0487db7276da0fa004abf7a968b5acde74288481" translate="yes" xml:space="preserve">
          <source>see more context</source>
          <target state="translated">видеть больше контекста</target>
        </trans-unit>
        <trans-unit id="46e65c804a644f61e13d7053473dec3fe1fbf881" translate="yes" xml:space="preserve">
          <source>select a hunk to go to</source>
          <target state="translated">выбирать закуски</target>
        </trans-unit>
        <trans-unit id="72f562ac46d88f8ce6d11b88676fd931e24aa771" translate="yes" xml:space="preserve">
          <source>split the current hunk into smaller hunks</source>
          <target state="translated">разделить текущий кусок на более мелкие куски</target>
        </trans-unit>
        <trans-unit id="b7945fc58b43436a06f81e0c40bca7ac83f99327" translate="yes" xml:space="preserve">
          <source>stage this hunk and all later hunks in the file</source>
          <target state="translated">инсценировать этот ханк и все последующие ханкеры в файле.</target>
        </trans-unit>
        <trans-unit id="c2f61885ca5863b63181678e5c4401fc217d8536" translate="yes" xml:space="preserve">
          <source>stage this hunk for the next commit</source>
          <target state="translated">подготовить этот к следующему совершению</target>
        </trans-unit>
        <trans-unit id="95cb0bfd2977c761298d9624e4b4d4c72a39974a" translate="yes" xml:space="preserve">
          <source>y</source>
          <target state="translated">y</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
