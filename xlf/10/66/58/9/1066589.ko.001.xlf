<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/1066589">
    <body>
      <group id="1066589">
        <trans-unit id="db76f0a25108e4cb963d0a08f23235f505a9cc91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusion:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusion:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0601a966e991049ff691c44d1fead13eadcc576" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method #1&lt;/strong&gt;: Iterating over entries using a For-Each loop.</source>
          <target state="translated">&lt;strong&gt;방법 # 1&lt;/strong&gt; : For-Each 루프를 사용하여 항목을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="19b50c8725cd11e147ede5c82ecf8af825d6cf84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method #2&lt;/strong&gt;: Iterating over keys or values using a For-Each loop.</source>
          <target state="translated">&lt;strong&gt;방법 # 2&lt;/strong&gt; : For-Each 루프를 사용하여 키 또는 값을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="423b3fdf6a6db74587b4f1d158bda400c587b086" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method #3&lt;/strong&gt;: Iterating using Iterator.</source>
          <target state="translated">&lt;strong&gt;방법 # 3&lt;/strong&gt; : 반복자를 사용하여 반복.</target>
        </trans-unit>
        <trans-unit id="629031c450d4545cf3e66946cf9c423acc4009c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method #4&lt;/strong&gt;: Iterating over keys and searching for values (inefficient).</source>
          <target state="translated">&lt;strong&gt;방법 # 4&lt;/strong&gt; : 키 반복 및 값 검색 (비효율적)</target>
        </trans-unit>
        <trans-unit id="a8a5189b15219f0d8e50a7cfabfaa186a2a3ae6c" translate="yes" xml:space="preserve">
          <source>A bad practice would be to iterate through all of the keys, and then within the loop, always do &lt;code&gt;map.get(key)&lt;/code&gt; to get the value. If you're doing that, then the first option I wrote is for you.</source>
          <target state="translated">나쁜 습관은 모든 키를 반복 한 다음 루프 내에서 항상 &lt;code&gt;map.get(key)&lt;/code&gt; 를 수행하여 값을 얻는 것입니다. 당신이 그렇게하고 있다면, 내가 쓴 첫 번째 옵션은 당신을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="5e1554aecae7e9abef6161f22823124bd5b9395b" translate="yes" xml:space="preserve">
          <source>Depends. If you know you're going to need both the key and the value of every entry, then go through the &lt;code&gt;entrySet&lt;/code&gt;. If you just need the values, then there's the &lt;code&gt;values()&lt;/code&gt; method. And if you just need the keys, then use &lt;code&gt;keyset()&lt;/code&gt;.</source>
          <target state="translated">다릅니다. 모든 항목의 키와 값이 모두 필요하다는 것을 알고 있다면 &lt;code&gt;entrySet&lt;/code&gt; 을 살펴보십시오. 값이 필요하면 &lt;code&gt;values()&lt;/code&gt; 메소드가 있습니다. 키가 필요한 경우 &lt;code&gt;keyset()&lt;/code&gt; 을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9d0d52aabdbb300c0b9629aeed3fb6fe8e7ad2a4" translate="yes" xml:space="preserve">
          <source>Extracted from the reference &lt;em&gt;&lt;a href=&quot;http://www.sergiy.ca/how-to-iterate-over-a-map-in-java&quot;&gt;How to Iterate Over a Map in Java&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://www.sergiy.ca/how-to-iterate-over-a-map-in-java&quot;&gt;Java에서 맵을 반복하는 방법&lt;/a&gt;&lt;/em&gt; 참조에서 추출 :</target>
        </trans-unit>
        <trans-unit id="bbd1eecd76277deb98ca3c8bad11fbe295ab7238" translate="yes" xml:space="preserve">
          <source>Finally, if you want both the key and value, use &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#entrySet%28%29&quot;&gt;&lt;code&gt;entrySet()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">마지막으로 키와 값을 모두 원하면 &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#entrySet%28%29&quot;&gt; &lt;code&gt;entrySet()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4fcd064260756a5bfdc14389e63e8656cb7b332" translate="yes" xml:space="preserve">
          <source>From a performance point of view this method is equal to a For-Each iteration.</source>
          <target state="translated">성능 관점에서이 방법은 For-Each 반복과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="21d576a86eb1de2d9efc253b76a9d9ca48bc2df0" translate="yes" xml:space="preserve">
          <source>If you just want to get all of the values and aren't concerned with the keys, you can use:</source>
          <target state="translated">모든 값을 가져오고 키와 관련이없는 경우 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05af90b598d8d6b82c7bb48c4c122fba6a8b8060" translate="yes" xml:space="preserve">
          <source>If you need only keys or values from the map, use method #2. If you are stuck with older version of Java (less than 5) or planning to remove entries during iteration, you have to use method #3. Otherwise use method #1.</source>
          <target state="translated">맵의 키 또는 값만 필요한 경우 방법 # 2를 사용하십시오. 이전 버전의 Java (5 미만)를 사용하거나 반복 중에 항목을 제거하려는 경우 방법 # 3을 사용해야합니다. 그렇지 않으면 방법 # 1을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="435785cc5d3a3655d31f35cc4c11b067717594be" translate="yes" xml:space="preserve">
          <source>If you need only keys or values from the map, you can iterate over keySet or values instead of entrySet.</source>
          <target state="translated">맵에서 키 또는 값만 필요한 경우 entrySet 대신 keySet 또는 값을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4ae1cafa4c3c876c5a896aeb9086f938e53a2f2" translate="yes" xml:space="preserve">
          <source>If you only need the values, use &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#values%28%29&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">값만 필요한 경우 &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#values%28%29&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d653825c232c9237e361cdfde68d310f1acc3a6" translate="yes" xml:space="preserve">
          <source>If you're only interested in the keys, you can iterate through the &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#keySet%28%29&quot;&gt;&lt;code&gt;keySet()&lt;/code&gt;&lt;/a&gt; of the map:</source>
          <target state="translated">키에만 관심이 있다면 맵의 &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#keySet%28%29&quot;&gt; &lt;code&gt;keySet()&lt;/code&gt; &lt;/a&gt; 을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8de75faa3a8a1e5954175dae349d806d84a72736" translate="yes" xml:space="preserve">
          <source>Iterate through a HashMap</source>
          <target state="translated">HashMap을 반복</target>
        </trans-unit>
        <trans-unit id="303c7671fbc38c01fcc57b6134d43dde6a51a607" translate="yes" xml:space="preserve">
          <source>Iterate through the &lt;a href=&quot;http://www.java2s.com/Code/JavaAPI/java.util/HashtableentrySet.htm&quot;&gt;&lt;code&gt;entrySet()&lt;/code&gt;&lt;/a&gt; like so:</source>
          <target state="translated">다음과 같이 &lt;a href=&quot;http://www.java2s.com/Code/JavaAPI/java.util/HashtableentrySet.htm&quot;&gt; &lt;code&gt;entrySet()&lt;/code&gt; &lt;/a&gt; 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="8309aacf859b111bcb751197caed041008ca18e1" translate="yes" xml:space="preserve">
          <source>Note that the For-Each loop was introduced in Java 5, so this method is working only in newer versions of the language. Also a For-Each loop will throw &lt;code&gt;NullPointerException&lt;/code&gt; if you try to iterate over a map that is null, so before iterating you should always check for null references.</source>
          <target state="translated">For-Each 루프는 Java 5에서 도입되었으므로이 방법은 최신 버전의 언어에서만 작동합니다. 또한 null 인 맵을 반복하려고하면 For-Each 루프에서 &lt;code&gt;NullPointerException&lt;/code&gt; 이 발생하므로 반복하기 전에 항상 null 참조를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="2da77de9ec01563c58b4b04c7b991e9f32f4efd0" translate="yes" xml:space="preserve">
          <source>One caveat: if you want to remove items mid-iteration, you'll need to do so via an Iterator (see &lt;a href=&quot;https://stackoverflow.com/questions/1066589/java-iterate-through-hashmap/1066603#1066603&quot;&gt;karim79's answer&lt;/a&gt;). However, changing item values is OK (see &lt;a href=&quot;https://docs.oracle.com/javase/6/docs/api/java/util/Map.Entry.html&quot;&gt;&lt;code&gt;Map.Entry&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">한 가지주의 사항 : 반복 &lt;a href=&quot;https://stackoverflow.com/questions/1066589/java-iterate-through-hashmap/1066603#1066603&quot;&gt;도중에&lt;/a&gt; 항목을 제거하려면 반복자를 통해 제거해야합니다 ( karim79의 답변 참조). 그러나 항목 값을 변경해도 괜찮습니다 ( &lt;a href=&quot;https://docs.oracle.com/javase/6/docs/api/java/util/Map.Entry.html&quot;&gt; &lt;code&gt;Map.Entry&lt;/code&gt; &lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="ccc7121a53996261139ef81072107bb7f44129c0" translate="yes" xml:space="preserve">
          <source>Or you can get the list of keys with</source>
          <target state="translated">또는 당신은 키 목록을 얻을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="dc55481aea8f572597fb7519617956c2189f93e2" translate="yes" xml:space="preserve">
          <source>Read more about &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Map.html&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Map.html&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 에 대해 자세히 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="1b8aaca117900cdb384072de829a6540e688f691" translate="yes" xml:space="preserve">
          <source>Smarter:</source>
          <target state="translated">Smarter:</target>
        </trans-unit>
        <trans-unit id="d351e7157c657b1712aaca02be43a11d23191a25" translate="yes" xml:space="preserve">
          <source>There are several ways of iterating over a &lt;code&gt;Map&lt;/code&gt; in Java. Let's go over the most common methods and review their advantages and disadvantages. Since all maps in Java implement the Map interface, the following techniques will work for any map implementation (&lt;code&gt;HashMap&lt;/code&gt;, &lt;code&gt;TreeMap&lt;/code&gt;, &lt;code&gt;LinkedHashMap&lt;/code&gt;, &lt;code&gt;Hashtable&lt;/code&gt;, etc.)</source>
          <target state="translated">Java에서 &lt;code&gt;Map&lt;/code&gt; 을 반복하는 방법에는 여러 가지가 있습니다. 가장 일반적인 방법을 살펴보고 장점과 단점을 검토합시다. Java의 모든 맵은 Map 인터페이스를 구현하므로 다음 기술은 모든 맵 구현 ( &lt;code&gt;HashMap&lt;/code&gt; , &lt;code&gt;TreeMap&lt;/code&gt; , &lt;code&gt;LinkedHashMap&lt;/code&gt; , &lt;code&gt;Hashtable&lt;/code&gt; 등)에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ab229ee1c5da5afd1e49b6c36cec646ae7f4fde6" translate="yes" xml:space="preserve">
          <source>This is the most common method and is preferable in most cases. It should be used if you need both map keys and values in the loop.</source>
          <target state="translated">이것은 가장 일반적인 방법이며 대부분의 경우에 바람직합니다. 루프에서 맵 키와 값이 모두 필요한 경우 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="557aa84ade53f058876f01818a43d3a317610101" translate="yes" xml:space="preserve">
          <source>This method gives a slight performance advantage over &lt;code&gt;entrySet&lt;/code&gt; iteration (about 10% faster) and is more clean.</source>
          <target state="translated">이 방법은 &lt;code&gt;entrySet&lt;/code&gt; 반복 (약 10 % 더 빠름)에 비해 약간의 성능 이점을 제공하며 더 깨끗합니다.</target>
        </trans-unit>
        <trans-unit id="7ba9e0f0738c6d53f865814c73584f366e1bd29f" translate="yes" xml:space="preserve">
          <source>This method might look redundant, but it has its own advantages. First of all, it is the only way to iterate over a map in older versions of Java. The other important feature is that it is the only method that allows you to remove entries from the map during iteration by calling &lt;code&gt;iterator.remove()&lt;/code&gt;. If you try to do this during For-Each iteration you will get &quot;unpredictable results&quot; according to &lt;a href=&quot;https://en.wikipedia.org/wiki/Javadoc&quot;&gt;Javadoc&lt;/a&gt;.</source>
          <target state="translated">이 방법은 중복 적으로 보일 수 있지만 고유 한 장점이 있습니다. 우선, 이전 버전의 Java에서 맵을 반복하는 유일한 방법입니다. 다른 중요한 기능은 &lt;code&gt;iterator.remove()&lt;/code&gt; 를 호출하여 반복 중에 맵에서 항목을 제거 할 수있는 유일한 방법이라는 것입니다. For-Each 반복 중에이 작업을 수행하려고하면 &lt;a href=&quot;https://en.wikipedia.org/wiki/Javadoc&quot;&gt;Javadoc&lt;/a&gt; 에 따라 &quot;예측할 수없는 결과&quot;가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="80ed21e2922189c97300309e124a3d95ec634c5b" translate="yes" xml:space="preserve">
          <source>This might look like a cleaner alternative for method #1, but in practice it is pretty slow and inefficient as getting values by a key might be time-consuming (this method in different Map implementations is 20%-200% slower than method #1). If you have FindBugs installed, it will detect this and warn you about inefficient iteration. This method should be avoided.</source>
          <target state="translated">이것은 방법 # 1의 대안으로 보일 수 있지만 실제로 키로 값을 가져 오는 데 시간이 오래 걸리기 때문에 속도가 느리고 비효율적입니다 (다른 Map 구현에서이 방법은 방법 # 1보다 20 % -200 % 느립니다) ). FindBugs가 설치되어 있으면이를 감지하여 비효율적 인 반복에 대해 경고합니다. 이 방법은 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="0fa40b3632dc695233a34be740a246bdda279695" translate="yes" xml:space="preserve">
          <source>Using Generics:</source>
          <target state="translated">제네릭 사용하기 :</target>
        </trans-unit>
        <trans-unit id="11f9da6cd86804a4f6cc4c6affc10492c79c0f27" translate="yes" xml:space="preserve">
          <source>What's the best way to iterate over the items in a &lt;a href=&quot;https://docs.oracle.com/javase/10/docs/api/java/util/HashMap.html&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;?</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/10/docs/api/java/util/HashMap.html&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; &lt;/a&gt; 에서 항목을 반복하는 가장 좋은 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="15e4e56b3576975a62c34d8fa7e6d2b6b5032984" translate="yes" xml:space="preserve">
          <source>Without Generics:</source>
          <target state="translated">제네릭없이 :</target>
        </trans-unit>
        <trans-unit id="66311a4e36ab375803063dafda62d4cd6c5d8f62" translate="yes" xml:space="preserve">
          <source>You can also use same technique to iterate over &lt;code&gt;keySet&lt;/code&gt; or values.</source>
          <target state="translated">동일한 기술을 사용하여 &lt;code&gt;keySet&lt;/code&gt; 또는 값을 반복 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="06e4035d2f06a8a8e9193d3406efc5ee211ea5eb" translate="yes" xml:space="preserve">
          <source>You can iterate through the entries in a &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Map.html&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; in several ways. Get each key and value like this:</source>
          <target state="translated">여러 가지 방법으로 &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Map.html&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 의 항목을 반복 할 수 있습니다. 다음과 같이 각 키와 값을 얻으십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
