<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1066589">
    <body>
      <group id="1066589">
        <trans-unit id="db76f0a25108e4cb963d0a08f23235f505a9cc91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusion:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusion:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0601a966e991049ff691c44d1fead13eadcc576" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method #1&lt;/strong&gt;: Iterating over entries using a For-Each loop.</source>
          <target state="translated">&lt;strong&gt;方法＃1&lt;/strong&gt; ：For-Eachループを使用してエントリを反復します。</target>
        </trans-unit>
        <trans-unit id="19b50c8725cd11e147ede5c82ecf8af825d6cf84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method #2&lt;/strong&gt;: Iterating over keys or values using a For-Each loop.</source>
          <target state="translated">&lt;strong&gt;メソッド＃2&lt;/strong&gt; ：For-Eachループを使用してキーまたは値を反復します。</target>
        </trans-unit>
        <trans-unit id="423b3fdf6a6db74587b4f1d158bda400c587b086" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method #3&lt;/strong&gt;: Iterating using Iterator.</source>
          <target state="translated">&lt;strong&gt;方法＃3&lt;/strong&gt; ：Iteratorを使用して反復する。</target>
        </trans-unit>
        <trans-unit id="629031c450d4545cf3e66946cf9c423acc4009c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Method #4&lt;/strong&gt;: Iterating over keys and searching for values (inefficient).</source>
          <target state="translated">&lt;strong&gt;方法＃4&lt;/strong&gt; ：キーを反復処理して値を検索する（非効率的）。</target>
        </trans-unit>
        <trans-unit id="a8a5189b15219f0d8e50a7cfabfaa186a2a3ae6c" translate="yes" xml:space="preserve">
          <source>A bad practice would be to iterate through all of the keys, and then within the loop, always do &lt;code&gt;map.get(key)&lt;/code&gt; to get the value. If you're doing that, then the first option I wrote is for you.</source>
          <target state="translated">悪い習慣は、すべてのキーを反復処理し、ループ内で常に &lt;code&gt;map.get(key)&lt;/code&gt; を実行して値を取得することです。 あなたがそうしているなら、私が書いた最初のオプションはあなたのためです。</target>
        </trans-unit>
        <trans-unit id="5e1554aecae7e9abef6161f22823124bd5b9395b" translate="yes" xml:space="preserve">
          <source>Depends. If you know you're going to need both the key and the value of every entry, then go through the &lt;code&gt;entrySet&lt;/code&gt;. If you just need the values, then there's the &lt;code&gt;values()&lt;/code&gt; method. And if you just need the keys, then use &lt;code&gt;keyset()&lt;/code&gt;.</source>
          <target state="translated">依存します。 すべてのエントリのキーと値の両方が必要になることがわかっている場合は、 &lt;code&gt;entrySet&lt;/code&gt; を調べます。 値だけが必要な場合は、 &lt;code&gt;values()&lt;/code&gt; メソッドがあります。 そして、キーだけが必要な場合は、 &lt;code&gt;keyset()&lt;/code&gt; を使用します 。</target>
        </trans-unit>
        <trans-unit id="9d0d52aabdbb300c0b9629aeed3fb6fe8e7ad2a4" translate="yes" xml:space="preserve">
          <source>Extracted from the reference &lt;em&gt;&lt;a href=&quot;http://www.sergiy.ca/how-to-iterate-over-a-map-in-java&quot;&gt;How to Iterate Over a Map in Java&lt;/a&gt;&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://www.sergiy.ca/how-to-iterate-over-a-map-in-java&quot;&gt;「Javaでマップを反復処理する方法」&lt;/a&gt;&lt;/em&gt;のリファレンスから抽出：</target>
        </trans-unit>
        <trans-unit id="bbd1eecd76277deb98ca3c8bad11fbe295ab7238" translate="yes" xml:space="preserve">
          <source>Finally, if you want both the key and value, use &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#entrySet%28%29&quot;&gt;&lt;code&gt;entrySet()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">最後に、キーと値の両方が必要な場合は、 &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#entrySet%28%29&quot;&gt; &lt;code&gt;entrySet()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="c4fcd064260756a5bfdc14389e63e8656cb7b332" translate="yes" xml:space="preserve">
          <source>From a performance point of view this method is equal to a For-Each iteration.</source>
          <target state="translated">性能の観点から見ると、この方法はFor-Each反復と同等です。</target>
        </trans-unit>
        <trans-unit id="21d576a86eb1de2d9efc253b76a9d9ca48bc2df0" translate="yes" xml:space="preserve">
          <source>If you just want to get all of the values and aren't concerned with the keys, you can use:</source>
          <target state="translated">すべての値を取得したいだけで、キーを気にしないのであれば、以下のような方法があります。</target>
        </trans-unit>
        <trans-unit id="05af90b598d8d6b82c7bb48c4c122fba6a8b8060" translate="yes" xml:space="preserve">
          <source>If you need only keys or values from the map, use method #2. If you are stuck with older version of Java (less than 5) or planning to remove entries during iteration, you have to use method #3. Otherwise use method #1.</source>
          <target state="translated">マップのキーや値だけが必要な場合は、メソッド#2を使用してください。Javaのバージョンが古い(5以下)場合や、反復処理中にエントリを削除する予定がある場合は、メソッド#3を使用しなければなりません。それ以外の場合はメソッド#1を使用してください。</target>
        </trans-unit>
        <trans-unit id="435785cc5d3a3655d31f35cc4c11b067717594be" translate="yes" xml:space="preserve">
          <source>If you need only keys or values from the map, you can iterate over keySet or values instead of entrySet.</source>
          <target state="translated">マップからキーまたは値だけが必要な場合は、entrySetの代わりにkeySetまたはvalueを反復処理することができます。</target>
        </trans-unit>
        <trans-unit id="a4ae1cafa4c3c876c5a896aeb9086f938e53a2f2" translate="yes" xml:space="preserve">
          <source>If you only need the values, use &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#values%28%29&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">値だけが必要な場合は、 &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#values%28%29&quot;&gt; &lt;code&gt;values()&lt;/code&gt; を&lt;/a&gt;使用します 。</target>
        </trans-unit>
        <trans-unit id="8d653825c232c9237e361cdfde68d310f1acc3a6" translate="yes" xml:space="preserve">
          <source>If you're only interested in the keys, you can iterate through the &lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#keySet%28%29&quot;&gt;&lt;code&gt;keySet()&lt;/code&gt;&lt;/a&gt; of the map:</source>
          <target state="translated">キーだけに関心がある場合は、マップの&lt;a href=&quot;https://docs.oracle.com/javase/1.5.0/docs/api/java/util/Map.html#keySet%28%29&quot;&gt; &lt;code&gt;keySet()&lt;/code&gt; &lt;/a&gt;を反復処理できます。</target>
        </trans-unit>
        <trans-unit id="8de75faa3a8a1e5954175dae349d806d84a72736" translate="yes" xml:space="preserve">
          <source>Iterate through a HashMap</source>
          <target state="translated">ハッシュマップを反復処理する</target>
        </trans-unit>
        <trans-unit id="303c7671fbc38c01fcc57b6134d43dde6a51a607" translate="yes" xml:space="preserve">
          <source>Iterate through the &lt;a href=&quot;http://www.java2s.com/Code/JavaAPI/java.util/HashtableentrySet.htm&quot;&gt;&lt;code&gt;entrySet()&lt;/code&gt;&lt;/a&gt; like so:</source>
          <target state="translated">次のように&lt;a href=&quot;http://www.java2s.com/Code/JavaAPI/java.util/HashtableentrySet.htm&quot;&gt; &lt;code&gt;entrySet()&lt;/code&gt; を&lt;/a&gt;反復処理します。</target>
        </trans-unit>
        <trans-unit id="8309aacf859b111bcb751197caed041008ca18e1" translate="yes" xml:space="preserve">
          <source>Note that the For-Each loop was introduced in Java 5, so this method is working only in newer versions of the language. Also a For-Each loop will throw &lt;code&gt;NullPointerException&lt;/code&gt; if you try to iterate over a map that is null, so before iterating you should always check for null references.</source>
          <target state="translated">For-EachループはJava 5で導入されたため、このメソッドは新しいバージョンの言語でのみ機能します。 また、For-Eachループは、nullであるマップを反復しようとすると &lt;code&gt;NullPointerException&lt;/code&gt; をスローします。したがって、反復する前に、常にnull参照を確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="2da77de9ec01563c58b4b04c7b991e9f32f4efd0" translate="yes" xml:space="preserve">
          <source>One caveat: if you want to remove items mid-iteration, you'll need to do so via an Iterator (see &lt;a href=&quot;https://stackoverflow.com/questions/1066589/java-iterate-through-hashmap/1066603#1066603&quot;&gt;karim79's answer&lt;/a&gt;). However, changing item values is OK (see &lt;a href=&quot;https://docs.oracle.com/javase/6/docs/api/java/util/Map.Entry.html&quot;&gt;&lt;code&gt;Map.Entry&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">注意点の1つ：イテレーションの途中でアイテムを削除する場合は、イテレーターを使用して削除する必要があります（ &lt;a href=&quot;https://stackoverflow.com/questions/1066589/java-iterate-through-hashmap/1066603#1066603&quot;&gt;karim79の回答を&lt;/a&gt;参照）。 ただし、アイテム値の変更は問題あり&lt;a href=&quot;https://docs.oracle.com/javase/6/docs/api/java/util/Map.Entry.html&quot;&gt; &lt;code&gt;Map.Entry&lt;/code&gt; &lt;/a&gt; （ Map.Entryを参照）。</target>
        </trans-unit>
        <trans-unit id="ccc7121a53996261139ef81072107bb7f44129c0" translate="yes" xml:space="preserve">
          <source>Or you can get the list of keys with</source>
          <target state="translated">また、キーのリストを取得するには</target>
        </trans-unit>
        <trans-unit id="dc55481aea8f572597fb7519617956c2189f93e2" translate="yes" xml:space="preserve">
          <source>Read more about &lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Map.html&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/util/Map.html&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;についてもっと読む。</target>
        </trans-unit>
        <trans-unit id="1b8aaca117900cdb384072de829a6540e688f691" translate="yes" xml:space="preserve">
          <source>Smarter:</source>
          <target state="translated">Smarter:</target>
        </trans-unit>
        <trans-unit id="d351e7157c657b1712aaca02be43a11d23191a25" translate="yes" xml:space="preserve">
          <source>There are several ways of iterating over a &lt;code&gt;Map&lt;/code&gt; in Java. Let's go over the most common methods and review their advantages and disadvantages. Since all maps in Java implement the Map interface, the following techniques will work for any map implementation (&lt;code&gt;HashMap&lt;/code&gt;, &lt;code&gt;TreeMap&lt;/code&gt;, &lt;code&gt;LinkedHashMap&lt;/code&gt;, &lt;code&gt;Hashtable&lt;/code&gt;, etc.)</source>
          <target state="translated">Javaで &lt;code&gt;Map&lt;/code&gt; を反復する方法はいくつかあります。 最も一般的な方法を見て、それらの長所と短所を確認してみましょう。 JavaのすべてのマップはMapインターフェースを実装しているため、次の手法はどのマップ実装（ &lt;code&gt;HashMap&lt;/code&gt; 、 &lt;code&gt;TreeMap&lt;/code&gt; 、 &lt;code&gt;LinkedHashMap&lt;/code&gt; 、 &lt;code&gt;Hashtable&lt;/code&gt; など）でも機能します。</target>
        </trans-unit>
        <trans-unit id="ab229ee1c5da5afd1e49b6c36cec646ae7f4fde6" translate="yes" xml:space="preserve">
          <source>This is the most common method and is preferable in most cases. It should be used if you need both map keys and values in the loop.</source>
          <target state="translated">これは最も一般的な方法であり、ほとんどの場合で好ましい方法です。ループ内でマップキーと値の両方が必要な場合に使用します。</target>
        </trans-unit>
        <trans-unit id="557aa84ade53f058876f01818a43d3a317610101" translate="yes" xml:space="preserve">
          <source>This method gives a slight performance advantage over &lt;code&gt;entrySet&lt;/code&gt; iteration (about 10% faster) and is more clean.</source>
          <target state="translated">この方法は、 &lt;code&gt;entrySet&lt;/code&gt; の反復よりもわずかにパフォーマンスが向上し（約10％高速）、よりクリーンです。</target>
        </trans-unit>
        <trans-unit id="7ba9e0f0738c6d53f865814c73584f366e1bd29f" translate="yes" xml:space="preserve">
          <source>This method might look redundant, but it has its own advantages. First of all, it is the only way to iterate over a map in older versions of Java. The other important feature is that it is the only method that allows you to remove entries from the map during iteration by calling &lt;code&gt;iterator.remove()&lt;/code&gt;. If you try to do this during For-Each iteration you will get &quot;unpredictable results&quot; according to &lt;a href=&quot;https://en.wikipedia.org/wiki/Javadoc&quot;&gt;Javadoc&lt;/a&gt;.</source>
          <target state="translated">この方法は冗長に見えるかもしれませんが、独自の利点があります。 まず、古いバージョンのJavaでマップを反復処理する唯一の方法です。 他の重要な機能は、 &lt;code&gt;iterator.remove()&lt;/code&gt; を呼び出して、 反復中にマップからエントリを削除できる唯一のメソッドであることです。 For-Eachのイテレーション中にこれを行おうとすると、 &lt;a href=&quot;https://en.wikipedia.org/wiki/Javadoc&quot;&gt;Javadocに&lt;/a&gt;よると「予期しない結果」が発生します。</target>
        </trans-unit>
        <trans-unit id="80ed21e2922189c97300309e124a3d95ec634c5b" translate="yes" xml:space="preserve">
          <source>This might look like a cleaner alternative for method #1, but in practice it is pretty slow and inefficient as getting values by a key might be time-consuming (this method in different Map implementations is 20%-200% slower than method #1). If you have FindBugs installed, it will detect this and warn you about inefficient iteration. This method should be avoided.</source>
          <target state="translated">これはメソッド#1のよりクリーンな代替案のように見えるかもしれませんが、実際にはキーによる値の取得に時間がかかるため、かなり遅く非効率的です(異なるMap実装でのこの方法はメソッド#1よりも20%~200%遅くなります)。FindBugs がインストールされていれば、これを検出して非効率な反復処理を警告してくれます。この方法は避けるべきです。</target>
        </trans-unit>
        <trans-unit id="0fa40b3632dc695233a34be740a246bdda279695" translate="yes" xml:space="preserve">
          <source>Using Generics:</source>
          <target state="translated">ジェネリックを使用しています。</target>
        </trans-unit>
        <trans-unit id="11f9da6cd86804a4f6cc4c6affc10492c79c0f27" translate="yes" xml:space="preserve">
          <source>What's the best way to iterate over the items in a &lt;a href=&quot;https://docs.oracle.com/javase/10/docs/api/java/util/HashMap.html&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt;?</source>
          <target state="translated">&lt;a href=&quot;https://docs.oracle.com/javase/10/docs/api/java/util/HashMap.html&quot;&gt; &lt;code&gt;HashMap&lt;/code&gt; の&lt;/a&gt;項目を反復処理する最良の方法は何ですか？</target>
        </trans-unit>
        <trans-unit id="15e4e56b3576975a62c34d8fa7e6d2b6b5032984" translate="yes" xml:space="preserve">
          <source>Without Generics:</source>
          <target state="translated">ジェネリックなし。</target>
        </trans-unit>
        <trans-unit id="66311a4e36ab375803063dafda62d4cd6c5d8f62" translate="yes" xml:space="preserve">
          <source>You can also use same technique to iterate over &lt;code&gt;keySet&lt;/code&gt; or values.</source>
          <target state="translated">同じ手法を使用して、 &lt;code&gt;keySet&lt;/code&gt; または値を反復することもできます。</target>
        </trans-unit>
        <trans-unit id="06e4035d2f06a8a8e9193d3406efc5ee211ea5eb" translate="yes" xml:space="preserve">
          <source>You can iterate through the entries in a &lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Map.html&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; in several ways. Get each key and value like this:</source>
          <target state="translated">いくつかの方法で&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/util/Map.html&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;のエントリを反復処理できます。 次のように各キーと値を取得します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
