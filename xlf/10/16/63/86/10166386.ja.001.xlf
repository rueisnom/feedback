<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/10166386">
    <body>
      <group id="10166386">
        <trans-unit id="a91f786eb752a3c157fafaf697b540c422e29319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;10&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="c83a4b9047d5d6ad44852ef0211c32ae4eca4366" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Even more fantastically,&lt;/em&gt;&lt;/strong&gt; It makes an operation to search array values much, much easier.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに素晴らしく、&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列の値を検索する操作がはるかに簡単になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c53815baf690b14ed872f006109366b8ed092a1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;The following Table expresses the values required to parse the line in terms of number of Calls and % expansions to be appended to the string.&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の表は、行を解析するために必要な値を、文字列に追加される呼び出しの数と拡張％で表しています。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f0be4f3f95901b34cd3ba335c6716abebfb4a17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A typical batch Pseudo Array, and how to parse:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;典型的なバッチ疑似配列と解析方法：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52e7874f64b59a2bd3be7e9e79d14cb2c9be36ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Although, to be sure today I usually make the base of the structures the name of the script, as I find this is more useful, and may or may not use ordered arrays depending on need.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、今日は念のため、構造のベースをスクリプトの名前にしていますが、これはより便利であり、必要に応じて順序付き配列を使用する場合と使用しない場合があります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ede7be3845d0b23d4dae9a918205093e6207390" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Below we make some Dumb Pseudo Arrays and a manual ordered Pseudo Array, plus create an Ordered Pseudo Array catching the output of a DIR Command.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下では、いくつかのダム疑似配列と手動で順序付けされた疑似配列を作成し、さらに、DIRコマンドの出力をキャッチする順序付けされた疑似配列を作成します。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9314a4247fb5ad17b1a49f59800ecfb0f7f9b207" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;But what about where you might have to collect large sets of dynamically generated data, and group it into pre-made categories and then mix that up to report it.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、動的に生成されたデータの大規模なセットを収集し、それを事前に作成されたカテゴリにグループ化し、それを混合してレポートする必要がある場合についてはどうでしょうか。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdb4e253cc39bbf6a3952935fb40028b376413f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Initially you might create simple arrays of substrings I'll define like this:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初に、次のように定義する部分文字列の単純な配列を作成する場合があります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ddba6320a5740f4c79c19b76b85c501057c4d84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Just, what a pain, and this isn't even when you need to have a dynamic set of objects, this is all manual.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただ、なんて面倒なことでしょう。動的なオブジェクトセットが必要な場合でも、これはすべて手動です。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="65dcf051b0f8d4d6b70a92dd10d98dbbb05e7cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1832d77aa9c61cc23e25156ef33f5d87db48d005" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now, 13 sites, this isn't all that bad, I'm sure you're saying. right?  You can just add one at the end and then put in the info and done.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さて、13のサイト、これはそれほど悪いことではありません、私はあなたが言っていると確信しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正しい？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最後に1つ追加するだけで、情報を入力して完了できます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="982cb422b5c01810de41f426564588fa4cb1d7fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or as shown in in this example code.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、このコード例に示すように。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7b71e3e46c170e803e4d31e162a5f7a8619b734" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Population of an array construct using a Macro&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マクロを使用した配列構成の入力&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a630bbb2cdf789ae8f63a18be98bdecb4eb000e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Since the example I started with ended up being the first place I tried these you can see this intermediate amalgam step I'll define like this:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私が始めた例が最初にこれらを試したところだったので、次のように定義するこの中間アマルガムのステップを見ることができます：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60c5294ffa4bf151951e2d2d66e7ea231048ed5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;So what can you do?  Well, here's what I did:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それで、あなたは何ができますか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さて、これが私がしたことです：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eed4cb349360febbd4eeb656f0898ef24f29982f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following rules apply to expansion depth using Call:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のルールは、呼び出しを使用した拡張深度に適用されます。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4856acf900408866939e4954ad6516f402f2144e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The value of E increases in proportion to C like so:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eの値は、Cに比例して次のように増加します。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8548d37b5600a5f91c18abadd2a08a9492186b4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Then it just keeps getting worse:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その後、悪化し続けます：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74dbb4973ec970e4e03d24cfb58fb4b4cf898a62" translate="yes" xml:space="preserve">
          <source>A simple approach to populating multiple Arrays using a function.</source>
          <target state="translated">関数を使用して複数の配列を埋め込んでいくシンプルなアプローチです。</target>
        </trans-unit>
        <trans-unit id="b6d46f4b098c5b9a74006a98be0a76d696ec22da" translate="yes" xml:space="preserve">
          <source>All together:</source>
          <target state="translated">全部一緒に。</target>
        </trans-unit>
        <trans-unit id="fe1529ef9de6d02a893e5e246b57f2968663da02" translate="yes" xml:space="preserve">
          <source>An unusual, impractical, however still somewhat interesting way to create linked data within a batch file is to assign variables within variables within variables, with the aid (Or abuse) of &lt;code&gt;Call&lt;/code&gt; to extract the desired values.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バッチファイル内でリンクされたデータを作成する珍しい、実用的ではありませんが、それでもやや興味深い方法は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Call&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数内の変数内に変数を割り当て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、目的の値を抽出することです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95fa3dd91bbd957a4289ffdeaee62aa284a89bd9" translate="yes" xml:space="preserve">
          <source>And rapidly retrieve them by Doing:</source>
          <target state="translated">そして、Doingで迅速にそれらを取得します。</target>
        </trans-unit>
        <trans-unit id="0310623f6ea21b2e7db5cc2a3378bc25379bb02b" translate="yes" xml:space="preserve">
          <source>And the Input Args to be processed by the macro is appended in doubleqouted form:</source>
          <target state="translated">また、マクロで処理する入力引数はダブルクォート形式で追加されます。</target>
        </trans-unit>
        <trans-unit id="ba02b8ddb4d87619beeef16be944ce8020dae7bb" translate="yes" xml:space="preserve">
          <source>And yet another means to populate linked data structures.</source>
          <target state="translated">また、リンクされたデータ構造を入力するための別の手段もあります。</target>
        </trans-unit>
        <trans-unit id="6898be52c245a03795cd9ed75536de6b08409ab7" translate="yes" xml:space="preserve">
          <source>Another way to achieve the previous process is to use an additional FOR command to change the delayed expansion of the index by an equivalent replaceable parameter, and then use the delayed expansion for the array element. This method runs faster than previous CALL:</source>
          <target state="translated">前の処理を実現する別の方法は、追加のforコマンドを使用してインデックスの遅延展開を等価な置換可能なパラメータで変更し、その遅延展開を配列要素に使用することです。この方法は、前のcallよりも高速に実行されます。</target>
        </trans-unit>
        <trans-unit id="9e071cf9a819329f56079bb1779332cc71c7a0e6" translate="yes" xml:space="preserve">
          <source>Arrays, linked lists and other data structures in cmd.exe (batch) script</source>
          <target state="translated">cmd.exe(バッチ)スクリプトでの配列、リンクされたリスト、およびその他のデータ構造</target>
        </trans-unit>
        <trans-unit id="f3d1222eed1aa2f87c1d0d3185e207dabf54caaf" translate="yes" xml:space="preserve">
          <source>As mentioned, it is impractical, not to mention terribly inefficient, however I find it interesting enough to merit mentioning.</source>
          <target state="translated">前述したように、それは非現実的であることは言うまでもなく、ひどく非効率的であるが、私は言及する価値がある十分に興味深いと思う。</target>
        </trans-unit>
        <trans-unit id="1fb09a79d76b517fdba47fcf652d1ea33e9ff060" translate="yes" xml:space="preserve">
          <source>As such an array is essentially a list of sub-strings you need to exports as variables, and adding or changing their ordering means changing your code.</source>
          <target state="translated">このように、配列は基本的に変数としてエクスポートする必要があるサブ文字列のリストであり、それらの順序を追加したり変更したりすることはコードを変更することを意味します。</target>
        </trans-unit>
        <trans-unit id="aeca005bd072db4ca0236e039439df31b185ee92" translate="yes" xml:space="preserve">
          <source>As you can probably see, these structures work very well where you have sets of forking hierarchical data that you need to apply manually and show data in a specific sequential order.</source>
          <target state="translated">おそらくお分かりのように、これらの構造は、手動で適用して特定の順序でデータを表示する必要があるフォーク階層データのセットを持っている場合に非常にうまく機能します。</target>
        </trans-unit>
        <trans-unit id="7e209ae1f4abfab0da56fd962d476aa34a665f04" translate="yes" xml:space="preserve">
          <source>But, I want to create arrays, linked list etc...</source>
          <target state="translated">しかし、配列やリンクリストなどを作成したい。</target>
        </trans-unit>
        <trans-unit id="39f6e97ccbe87d459ec89c8a8f0991011baefd65" translate="yes" xml:space="preserve">
          <source>Cause its help not full in: /?</source>
          <target state="translated">Cause its help not full in.?</target>
        </trans-unit>
        <trans-unit id="be870b0c3a150bcd81f13481533b39a0110933b7" translate="yes" xml:space="preserve">
          <source>Concerning this statement:</source>
          <target state="translated">この発言について</target>
        </trans-unit>
        <trans-unit id="3097afbfbc9f358bc00d57aa58dbb00708f59229" translate="yes" xml:space="preserve">
          <source>Could Cmd.exe be defined as full by Turing-Machine definition? ( Turing-Complete )</source>
          <target state="translated">Cmd.exeはTuring-Machineの定義でフルと定義できますか?(Turing-Complete )</target>
        </trans-unit>
        <trans-unit id="b6b23fb8036562bce958674747914e2d2139e152" translate="yes" xml:space="preserve">
          <source>Depending on the length of the string contained within a variable, A variable depth of Eleven can be achieved - That is to say, from the same starting point, eleven data points can be stored / extracted.
Due to the relationship between the values of how many Expansions are required to access a particular depth of the variable, a function could easily be built to extract a value at that depth.</source>
          <target state="translated">変数に含まれる文字列の長さに応じて、11の変数の深さを達成することができます-つまり、同じ開始点から11のデータ・ポイントを抽出して保存することができます。変数の特定の深さにアクセスするために必要なExpansionの数の値の関係から、その深さの値を抽出する関数を簡単に構築することができます。</target>
        </trans-unit>
        <trans-unit id="2b7c17ec8db279b2bbab29c0b28268196a723d0b" translate="yes" xml:space="preserve">
          <source>E (% Expansion) begins with a value of 1</source>
          <target state="translated">E (% Expansion)は値が 1 から始まります。</target>
        </trans-unit>
        <trans-unit id="a2b22c32844b2f3d08c9cda405cbc2f84fc297da" translate="yes" xml:space="preserve">
          <source>Essentially, the preface to expanding the population macro is:</source>
          <target state="translated">本質的には、人口マクロを拡大するための序章である。</target>
        </trans-unit>
        <trans-unit id="da9f5710688efed23cbcbe7af44fc34b89d28175" translate="yes" xml:space="preserve">
          <source>Example Results:</source>
          <target state="translated">結果の例。</target>
        </trans-unit>
        <trans-unit id="3d4e45db45b2c570c95ca46a62d1e98d84fa1bdd" translate="yes" xml:space="preserve">
          <source>Finally we Dynamically report some of the values from the Array by doing a pre-defined For L Loop for values 7 to 9, and Generating a Random value to print the 4th example value of the array.</source>
          <target state="translated">最後に、あらかじめ定義された値7から9までのFor Lループを実行し、配列の4番目の例の値を表示するためにランダムな値を生成することで、配列からの値の一部を動的にレポートします。</target>
        </trans-unit>
        <trans-unit id="d836442ffc1ce9706cedfed326c0eb8224a4d54e" translate="yes" xml:space="preserve">
          <source>For all the rest of your question I recommend to read &lt;a href=&quot;https://stackoverflow.com/users/778560&quot;&gt;Aacini&lt;/a&gt;'s great and comprehensive &lt;a href=&quot;https://stackoverflow.com/a/10167990&quot;&gt;answer&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;残りの質問については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/778560&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aacini&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のすばらしい包括的な&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/10167990&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を読むことをお勧めします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e14ad2519116b026919a495bb4d10f4e477c7198" translate="yes" xml:space="preserve">
          <source>From the 12th expansion onwards, the number of Calls and &lt;code&gt;%&lt;/code&gt; expansions appended to the string exceed the line length limit, resulting in failure to build a string of the length needed to expand at this point.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;12番目の拡張以降、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文字列に追加された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出しと&lt;/font&gt;&lt;/font&gt; &lt;code&gt;%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;拡張の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行の長さの制限を超えているため、この時点で拡張するために必要な長さの文字列を構築できません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e886077cec08ca1dd3ee6e9b2b53b33d6ed7c286" translate="yes" xml:space="preserve">
          <source>Here is another code example of this step in usage:</source>
          <target state="translated">ここでは、このステップの使用法の別のコード例を示します。</target>
        </trans-unit>
        <trans-unit id="62e40b135af80aabfc1fc56f1f9f54c99aa63ae5" translate="yes" xml:space="preserve">
          <source>However I find it a pain for long arrays of data, especially when I need multi-value content.</source>
          <target state="translated">しかし、長いデータの配列、特に多値コンテンツが必要な場合には苦痛を感じます。</target>
        </trans-unit>
        <trans-unit id="d152629482af602a2d220e3dd7249fd63e7f3543" translate="yes" xml:space="preserve">
          <source>I constructed the below macro to mimic piping by assigning input arguments to a variable processed by an internal for loop at the moment it's expanded.</source>
          <target state="translated">展開した瞬間に内部のforループで処理される変数に入力引数を代入することで配管を模倣するマクロを以下のように構築しました。</target>
        </trans-unit>
        <trans-unit id="56c516cc1a5be13a0423222d1f815492598811cf" translate="yes" xml:space="preserve">
          <source>I create a variable to hold the method for adding members to make adding them simpler.</source>
          <target state="translated">メンバーの追加を簡単にするために、メンバーを追加するためのメソッドを保持するための変数を作成しています。</target>
        </trans-unit>
        <trans-unit id="468421e190d5a97c2342fa81d00c8c5914695972" translate="yes" xml:space="preserve">
          <source>I elaborated on the reasons I have to use array notation in Batch files at &lt;a href=&quot;https://stackoverflow.com/questions/10544646/dir-output-into-bat-array/10569981#10569981&quot;&gt;this post&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10544646/dir-output-into-bat-array/10569981#10569981&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この記事&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;では、バッチファイルで配列表記を使用する必要がある理由について詳しく説明しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="123589474adf212ce52e21edc989670cdab134b2" translate="yes" xml:space="preserve">
          <source>I ended up resorting to implementing a sort of poor-mans Structure or Object-array (of strings) in my cmd scripts where the need fits.</source>
          <target state="translated">私は結局、必要に応じて cmd スクリプトにある種の貧乏人の構造やオブジェクト配列(文字列の)を実装することに頼ることになってしまいました。</target>
        </trans-unit>
        <trans-unit id="eb0e31d51d5bfcc66fa6836bfa7133e36c8fe47a" translate="yes" xml:space="preserve">
          <source>I found that it became hard when you ended up needing multiple arrays of information which you needed to update or add features to across the board.</source>
          <target state="translated">更新や機能追加が必要な情報の配列が複数必要になったときに、それが難しくなることがわかりました。</target>
        </trans-unit>
        <trans-unit id="f404c7144be2a27b7d3c9bfbfdb777c6e343a29b" translate="yes" xml:space="preserve">
          <source>I have found, how to define simple variables:</source>
          <target state="translated">単純な変数を定義する方法を見つけました</target>
        </trans-unit>
        <trans-unit id="0f4a015b04bfa1f15abdd5a1dda5bfd18570d4b0" translate="yes" xml:space="preserve">
          <source>I hit upon the Idea of using a &quot;For&quot; loop and the &quot;set&quot; command to allow the parsing of variables, allowing me to create Pseudo Arrays, both ordered and linked-list style, and more importantly, Pseudo Objects akin to structures.</source>
          <target state="translated">私は、&quot;For &quot;ループと &quot;set &quot;コマンドを使用して変数の解析を可能にするというアイデアに行き当たりました。</target>
        </trans-unit>
        <trans-unit id="aa27b357e51d18e7459245f770b7c26079df1321" translate="yes" xml:space="preserve">
          <source>I made a bubble sort implementation in batch using pseudo-arrays a while ago.
Not sure why you'd use it (although I will admit to doing so in another batch file) as it gets pretty slow as the list size increases. It was more to set myself a little challenge.
&lt;em&gt;Someone&lt;/em&gt; might find this useful.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;先ほど、疑似配列を使用してバブルソート実装をバッチで作成しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;リストのサイズが大きくなるとかなり遅くなるため、なぜそれを使用するのかはわかりません（ただし、別のバッチファイルで使用することは認めます）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;少し挑戦するだけでした。 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誰か&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がこれを役に立つと思うかもしれません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3967b0a82e17c7bf5aee550e98a6f8862b603718" translate="yes" xml:space="preserve">
          <source>I point this out as it should make it easy to see how we make the minor jump from ordered arrays to Pseudo objects.</source>
          <target state="translated">順序付き配列から疑似オブジェクトへのマイナーなジャンプをどのように行うかを簡単に理解できるようにする必要があるので、私はこの点を指摘します。</target>
        </trans-unit>
        <trans-unit id="e662a075aa0cac1c034922e3d4fab916a67d04f1" translate="yes" xml:space="preserve">
          <source>I want to realize some algorithms as:</source>
          <target state="translated">としていくつかのアルゴリズムを実現したい。</target>
        </trans-unit>
        <trans-unit id="22f1af3d58e5c71c1807bbca620e6aa183eb7d36" translate="yes" xml:space="preserve">
          <source>I was playing with cmd.exe, but in its help I didn't find any info, how to define arrays.</source>
          <target state="translated">私はcmd.exeで遊んでいたが、そのヘルプでは、どのように配列を定義する方法、情報を見つけることができませんでした。</target>
        </trans-unit>
        <trans-unit id="cb24f6bddd8b51d8f1e8d45e66556c2b59bd4416" translate="yes" xml:space="preserve">
          <source>IE the structure would be a &quot;Site Object&quot; which would have multiple properties, which might be objects with sub properties themselves.  Since CMD is not actually Object oriented, its a bit of a kludge, just as arrays are.</source>
          <target state="translated">IE 構造体は、複数のプロパティを持つ「サイト・オブジェクト」になります。CMD は実際にはオブジェクト指向ではないので、配列と同じように、そのビットの kludge です。</target>
        </trans-unit>
        <trans-unit id="ec5cd240244fcc514454daecd955f5eb0e797ad6" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;em&gt;another variable&lt;/em&gt; as index, you must know that the replacement of variables enclosed in percent symbols by their values is parsed &lt;em&gt;from left to right&lt;/em&gt;; this means that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;別の変数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をインデックスとして&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、パーセント記号で囲まれた変数の値による置換が&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;左から右に&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;解析されることを知っている必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この意味は：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c10ea65783646a50a9e718a1738dd2b87045220" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://www.dostips.com/forum/viewtopic.php?f=3&amp;amp;t=2823&quot;&gt;this post&lt;/a&gt; there is a Batch file that reads a text file and stores the indexes of the lines in a vector, then does a Buble Sort of vector elements based on line contents; the equivalent result is a sort over file contents.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.dostips.com/forum/viewtopic.php?f=3&amp;amp;t=2823&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このポスト&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、テキストファイルを読み込み、ベクター内の行インデックスを格納するバッチファイルが存在しないブーブレソート行の内容に基づいて、ベクトルの要素; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同等の結果は、ファイルの内容をソートしたものです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8341ce4356aec5208081a14ad17a66a21537e235" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://www.dostips.com/forum/viewtopic.php?f=3&amp;amp;t=3126&quot;&gt;this post&lt;/a&gt; there is a basic Relational Data Base application in Batch based on indexes stored in files.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.dostips.com/forum/viewtopic.php?f=3&amp;amp;t=3126&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、この記事&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のファイルに保存されたインデックスに基づいて、バッチで、基本的なリレーショナルデータベースのアプリケーションがあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="181bfa51b2f20c15c6dda3f304fca23579831800" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http://www.dostips.com/forum/viewtopic.php?f=3&amp;amp;t=3244&quot;&gt;this post&lt;/a&gt; there is a complete multiple linked-list application in Batch that assembles a large data structure taken from a subdirectory and displays it in the form of TREE command.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.dostips.com/forum/viewtopic.php?f=3&amp;amp;t=3244&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、この記事&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のサブディレクトリとTREEコマンドの形式で表示し、それをから取られた大規模なデータ構造を組み立てる一括で完全な複数の連結リストのアプリケーションがあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f98568c2eedaf6424224c45178d7ae730e663861" translate="yes" xml:space="preserve">
          <source>In Windows Batch files a &lt;em&gt;variable name&lt;/em&gt; should begin with a letter and may include any valid character, where &lt;em&gt;valid characters&lt;/em&gt; are: #$'()*+,-.?@[]_`{}~ besides letters and digits.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Windowsバッチファイルでは、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数名&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は文字で始まる必要があり、有効な文字を含めることができます。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有効な文字&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は次のとおり&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：＃$ '（）* +、-。？@ [] _ `{}〜文字と数字のほかに。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="103d715b3d0b30bb6dc1e280a1cc33fe154be2c3" translate="yes" xml:space="preserve">
          <source>In a similar script to the FTP delete, we need to check the sizes of multiple directories, I am going to dumb tis one down quite a bit and look at just one check:</source>
          <target state="translated">FTPの削除と似たようなスクリプトで、複数のディレクトリのサイズをチェックする必要がありますが、私はかなりの量を減らして、1つだけのチェックを見ようとしています。</target>
        </trans-unit>
        <trans-unit id="de47b3b0cf72661f0a9e31fec6d0694e60f8db51" translate="yes" xml:space="preserve">
          <source>In all the playing around I've done with bath arrays in the past few month's, how did I miss using &lt;code&gt;Set ArrayName[&lt;/code&gt; as a means of accessing or storing the Array.
&lt;a href=&quot;https://stackoverflow.com/a/35632781/12343998&quot;&gt;Thanks&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/users/1683264/rojo&quot;&gt;@Rojo&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;過去数か月の間に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Set ArrayName[&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;行ったすべての遊びの中で、配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;へのアクセスまたは格納の手段として&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Set ArrayName [&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用できなかったのは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なぜですか&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/35632781/12343998&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ありがとう&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;a href=&quot;https://stackoverflow.com/users/1683264/rojo&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Rojo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6add1020c7a52509f59ec5e29d4c7d58ab3fdf32" translate="yes" xml:space="preserve">
          <source>Initially I would do things similar to Aacini, a simple line of variables with an incremental counter, manually, or assigning them through a simple loop from a quick list of variables.</source>
          <target state="translated">最初はAaciniと似たようなことをするのですが、インクリメンタルカウンターを使ったシンプルな変数の列を手動で作ったり、変数のクイックリストからシンプルなループで代入したりしています。</target>
        </trans-unit>
        <trans-unit id="5eb11c497e232ac05cfbfd8063d494fe6a120e9e" translate="yes" xml:space="preserve">
          <source>It is all terribly hackish and inconvenient when it comes down to it. The command-line shell just wasn't designed for heavy programming. I agree with @MatteoItalia -- if you need serious scripting, use a real scripting language.</source>
          <target state="translated">いざとなれば、すべてがひどくハックされていて、不便です。コマンドラインシェルは重いプログラミングのために設計されたものではありません。私は @MatteoItalia さんの意見に同意します --本格的なスクリプトが必要なら、本物のスクリプト言語を使いましょう。</target>
        </trans-unit>
        <trans-unit id="386fdecdb7e2fb1a1cbc6a01d08e426cbd89d4e5" translate="yes" xml:space="preserve">
          <source>It is also possible to store the program parameters in an &quot;array&quot; or loop through the filenames in a directory using a &quot;&lt;code&gt;for&lt;/code&gt;&quot; loop and store them in an &quot;array&quot; (without interpreting &quot;&lt;code&gt;!&lt;/code&gt;&quot; in their values) without using the presented subroutines in the program above:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「配列」にプログラムパラメータを格納するか、「&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」ループ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してディレクトリ内のファイル名を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループし、「配列」に格納する（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt; &lt;code&gt;!&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を解釈&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;せずに）上記のプログラムのサブルーチン：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae4a18394b8919a981061cd3e223c87740a730f7" translate="yes" xml:space="preserve">
          <source>Joined to the outside of the Define.Array macro For loop using:</source>
          <target state="translated">Define.Arrayマクロの外側に結合されています。</target>
        </trans-unit>
        <trans-unit id="39abeadf1c9f3ca9c7b6fb5758c73b667088628c" translate="yes" xml:space="preserve">
          <source>Located here is a script that demonstrates the use of nested for loops to sort and compare elements in Arrays</source>
          <target state="translated">ここにあるのは、入れ子になったループを使って、配列の要素を並べ替えたり比較したりするスクリプトです。</target>
        </trans-unit>
        <trans-unit id="e1297e24a095d9c7344148fe71d6ff34cfd96ed6" translate="yes" xml:space="preserve">
          <source>My tip is, if you want to do your scripting in a sane way, use a &lt;em&gt;real&lt;/em&gt; scripting language, and leave batch for simple, quick hacks and for backwards compatibility.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私のヒントは、スクリプトを健全な方法で実行したい場合は、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実際の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スクリプト言語を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;単純で迅速なハッキングと下位互換性のためにバッチを残します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa65743c960de429affeba474a6d8889a37130bc" translate="yes" xml:space="preserve">
          <source>Note that index values are not limited to numbers, but they may be any string that contain valid characters; this point allows to define what in other programming languages are called &lt;a href=&quot;https://en.wikipedia.org/wiki/Associative_array&quot;&gt;associative arrays&lt;/a&gt;. At &lt;a href=&quot;https://stackoverflow.com/questions/35639223/find-all-ocurences-of-letter-change-to-diffrent-letter/35642840#35642840&quot;&gt;this answer&lt;/a&gt; there is a detailed explanation of the method used to solve a problem using an associative array. Note also that the space is a valid character in variable names, so you must pay attention to not insert spaces in variable names that may go unnoticed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インデックス値は数値に限定されず、有効な文字を含む任意の文字列である可能性があることに注意してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この点により、他のプログラミング言語では&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Associative_array&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;連想配列&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と呼ばれるものを定義でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/35639223/find-all-ocurences-of-letter-change-to-diffrent-letter/35642840#35642840&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この答え&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;連想配列を使用して問題を解決するために使用される方法の詳細な説明があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スペースは変数名で有効な文字であることにも注意してください。そのため、気づかれない可能性がある変数名にスペースを挿入しないように注意する必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c80e0c3fe5fa9ca99206aac49f37ccc78b33ac6e" translate="yes" xml:space="preserve">
          <source>Ok. I'll try to be as clear as possible to not be misunderstood...</source>
          <target state="translated">わかりました、誤解されないように出来るだけわかりやすくしておきます...。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="c4f2e1a5a5452250dd69422e5394d4c3be7b4c0e" translate="yes" xml:space="preserve">
          <source>References/instances/structs are stuff for a real language, cmd scripting is just a bunch of extensions that grew over the very primitive interpreter that was command.com, you can do some basic scripting, but anything more complicated than a bunch of calls to other commands is doomed to become ugly and incomprehensible.</source>
          <target state="translated">基本的なスクリプトを書くことはできますが、他のコマンドを呼び出すだけの複雑なものは、醜くて理解しにくいものになる運命にあります。</target>
        </trans-unit>
        <trans-unit id="6a395052c9ebc4235d024c28291d96b8cac3053b" translate="yes" xml:space="preserve">
          <source>SPACE</source>
          <target state="translated">SPACE</target>
        </trans-unit>
        <trans-unit id="6335d8b4270d9a2506edd3cb15594d7cb4e5916e" translate="yes" xml:space="preserve">
          <source>SPACEs</source>
          <target state="translated">SPACEs</target>
        </trans-unit>
        <trans-unit id="8485a6b461a4bd2e72b18e4d8897c2d52fe1317c" translate="yes" xml:space="preserve">
          <source>Seriously speaking: I never heard that batch has arrays, maybe you can emulate them with some strange trick, but I wouldn't call it a good idea.</source>
          <target state="translated">真面目な話。バッチに配列があるなんて聞いたことがない、もしかしたら変な仕掛けでエミュレートできるかもしれないが、それを良いアイデアとは言わないだろう。</target>
        </trans-unit>
        <trans-unit id="cb15535a9f571d26ef907dc10a6b57569a494049" translate="yes" xml:space="preserve">
          <source>Similarly, you can use the same basic idea to create a struct-like set of variables like &lt;code&gt;ITEM_NAME, ITEM_DATA&lt;/code&gt; or w/e. I even found &lt;a href=&quot;http://www.robvanderwoude.com/battech_array.php&quot;&gt;this link&lt;/a&gt; that talks about simulating an associative array in CMD.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同様に、同じ基本的な考え方を使用して、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ITEM_NAME, ITEM_DATA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、w / e &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などの構造体のような変数のセットを作成できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;CMDでの連想配列のシミュレーションについて説明している&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.robvanderwoude.com/battech_array.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このリンク&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も見つけました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f9dbaf58509fb26687dba3c438600db0ad4b57f" translate="yes" xml:space="preserve">
          <source>So for the code to work, you must get rid of the</source>
          <target state="translated">そのため、コードを動作させるためには</target>
        </trans-unit>
        <trans-unit id="b3fde17de4fa32e5b0f1e31eb269b5d64c4d5051" translate="yes" xml:space="preserve">
          <source>So much more efficient. It allows array constructs to be Rapidly stored using:</source>
          <target state="translated">とても効率的です。これを使えば、配列構造体を高速に格納することができます。</target>
        </trans-unit>
        <trans-unit id="2c20eb00c76639e22887210bb18b168bb4ba8201" translate="yes" xml:space="preserve">
          <source>So, I also want to know, does Cmd.exe have references or instances, structs etc?</source>
          <target state="translated">そこで、私はまた、Cmd.exeは参照やインスタンス、構造体などを持っているかどうかを知りたいですか?</target>
        </trans-unit>
        <trans-unit id="7233fec59aecc1a3a287a1f6400d03490193e033" translate="yes" xml:space="preserve">
          <source>So, does it able in cmd.exe ( I mean: does in cmd.exe exist any array keywords? )</source>
          <target state="translated">だから、それはcmd.exeでできるのですか(私が意味する:cmd.exeでは、任意の配列キーワードが存在するのですか?</target>
        </trans-unit>
        <trans-unit id="3d2856558120184fd36a59ae5b85300e7dac9e2f" translate="yes" xml:space="preserve">
          <source>Solution to the recursion level issue:
Removal of the &lt;code&gt;Setlocal EnableDelayedExpansion&lt;/code&gt; switch from the macro and turning Delayed expansion on prior to expanding the macro resolves this issue.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再帰レベルの問題の解決策：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マクロから&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Setlocal EnableDelayedExpansion&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スイッチを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;削除&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、マクロを展開する前に遅延展開をオンにすると、この問題が解決します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d69dabce4725955fd5cfe5474202e42df310b5ad" translate="yes" xml:space="preserve">
          <source>TLDR:</source>
          <target state="translated">TLDR:</target>
        </trans-unit>
        <trans-unit id="ae52cf4081ad3b9a637ea514a53d7a219de83361" translate="yes" xml:space="preserve">
          <source>Take for instance a scenario where you need to log into multiple FTP servers, delete files older than X days from certain paths.</source>
          <target state="translated">あなたが複数のFTPサーバーにログインする必要があるシナリオを例に挙げると、特定のパスからX日よりも古いファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="325c86fcf4cfd336ba06186cd322fa4214b434f6" translate="yes" xml:space="preserve">
          <source>The Macro increments counts for the class name and index name using those names  as the variable for the count. Each time the macro is expanded for a given class name or index name, the value of that count will be incremented. Class names will be appended with the next class index number with each expansion. The first use of &lt;code&gt;Class&lt;/code&gt; will become &lt;code&gt;Class[1]&lt;/code&gt; the second &lt;code&gt;Class[2]&lt;/code&gt; and so on. Index names should be different for each expansion of the macro for the sake of accurate referencing. Each element contained within a class name is assigned to it's own indexed value for the current class index. Eg &lt;code&gt;Class[1][1]&lt;/code&gt;&lt;code&gt;Class[1][2]&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マクロは、クラス名とインデックス名のカウントを、それらの名前をカウントの変数として使用して増分します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マクロが特定のクラス名またはインデックス名に対して展開されるたびに、そのカウントの値が増加します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス名には、展開ごとに次のクラスインデックス番号が付加されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;となるであろう&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class[1]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;第二&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class[2]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;などがあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正確な参照のために、インデックス名はマクロの展開ごとに異なる必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クラス名に含まれる各要素は、現在のクラスインデックスの独自のインデックス値に割り当てられます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class[1][1]&lt;/code&gt; &lt;code&gt;Class[1][2]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84cbc89069a1075db49f472aca9fa8fca653017e" translate="yes" xml:space="preserve">
          <source>The basis of the principle is that with the use of Call, A variable can be expanded at increasing levels of depth, until the variable is found to be empty. The limitation is in the line length limit, as the number of &lt;code&gt;%&lt;/code&gt; expansions that need to be used to expand the variable increases proportionally to the number of Calls used to Parse over the variable for each level of expansion to be achieved.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原理の基礎は、Callを使用すると、変数が空であることがわかるまで、変数を深さのレベルを上げて拡張できることです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数を展開するために使用する必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がある&lt;/font&gt;&lt;/font&gt; &lt;code&gt;%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;展開の数は、達成される展開の各レベルで変数を解析するために使用される呼び出しの数に比例して増加するため、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;制限は行の長さの制限に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7132a3d229f9a8b630296b75dd5b0ffa36bfe50a" translate="yes" xml:space="preserve">
          <source>The example Function provided assigns values to Array Indices using Call with a parameter for the element name - An unexpanded Variable that has previously been set with the values of all indices to be populated. The second parameter is used to define the index number for the Array being populated, and is associated with the Element name for future access of the Array.</source>
          <target state="translated">この関数の例では、要素名のパラメータを持つCallを使用して、配列のインデックスに値を代入します。2 番目のパラメータは、格納される配列のインデックス番号を定義するために使用され、将来の配列アクセスのために要素名と関連付けられます。</target>
        </trans-unit>
        <trans-unit id="a8070f342a03ed830ee0d2f63db270b848475e93" translate="yes" xml:space="preserve">
          <source>The example also demonstrates how to create and access nested arrays, as well as how to build strings for use in array population during For Loops.</source>
          <target state="translated">また、この例では、入れ子になった配列を作成してアクセスする方法や、For Loops の間に配列の母集団で使用するための文字列を作成する方法も示しています。</target>
        </trans-unit>
        <trans-unit id="7709030a04490301434c9934358caeb9babc94ea" translate="yes" xml:space="preserve">
          <source>The following program simulates vectors (arrays) operations in &lt;code&gt;cmd&lt;/code&gt;. The subroutines presented in it were initially designed for some special cases like storing the program parameters in an array or looping through filenames in a &quot;&lt;code&gt;for&lt;/code&gt;&quot; loop and storing them in an array. In these cases, in an &lt;code&gt;enabled delayed expansion&lt;/code&gt; block, the &quot;&lt;code&gt;!&lt;/code&gt;&quot; characters - if present in values of the parameters or in the &quot;&lt;code&gt;for&lt;/code&gt;&quot; loop variable's value - would get interpreted. That's why, in these cases, the subroutines must be used inside a &lt;code&gt;disabled delayed expansion&lt;/code&gt; block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のプログラムは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;cmd&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ベクトル（配列）操作をシミュレートします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。そこに示されているサブルーチンは、プログラムパラメータを配列に格納したり、ファイル名を「&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」ループでループして配列に格納したりする&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など、いくつかの特別な場合のために設計され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ました。これらの場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;enabled delayed expansion&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブロックでは、「&lt;/font&gt;&lt;/font&gt; &lt;code&gt;!&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」文字（パラメーターの値または「&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」ループ変数の値に存在する場合）が解釈されます。そのため、これらのケースでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;disabled delayed expansion&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;遅延拡張&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブロック&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内でサブルーチンを使用する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="672e8113ef28fd09497d2ea07a7813b9bdf2d2ce" translate="yes" xml:space="preserve">
          <source>The included script is somewhat basic, merely built to show proof of concept - not a practical application by any means.</source>
          <target state="translated">付属のスクリプトはやや基本的なもので、概念の証明を示すために作られただけで、実用的なアプリケーションではありません。</target>
        </trans-unit>
        <trans-unit id="b66cfa3cf767278f137d205e51d629c187d09dec" translate="yes" xml:space="preserve">
          <source>The number of directories you have to check, using different users, at the same site begins increasing.</source>
          <target state="translated">同じサイトでも、ユーザーを変えてチェックしなければならないディレクトリが増え始める。</target>
        </trans-unit>
        <trans-unit id="d120ffa7f16cfcfca2c706c00e19fd0c53b74ee7" translate="yes" xml:space="preserve">
          <source>The only &quot;advanced&quot; construct is the do-it-all weirdo &lt;code&gt;for&lt;/code&gt; loop, which, mixed with the strange &quot;rules&quot; of variable substitution (&lt;code&gt;%var%&lt;/code&gt;, &lt;code&gt;%%var&lt;/code&gt;, &lt;code&gt;!var!&lt;/code&gt;, are different stuff because of the idiotic parser), makes writing even trivial algorithms a collection of strange hacks (see e.g. here for &lt;a href=&quot;https://stackoverflow.com/questions/133154/how-do-i-implement-quicksort-using-a-batch-file&quot;&gt;an implementation of quicksort&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一の「高度な」構成は、すべて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を実行する変な&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループであり、変数置換の奇妙な「ルール」と混合されます（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;%var%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;%%var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;!var!&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）は、ばかばかしいパーサーのために別のものです）、些細なアルゴリズムでさえ奇妙なハックのコレクションを作成します（たとえば&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/133154/how-do-i-implement-quicksort-using-a-batch-file&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、クイックソートの実装については&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここを参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fba7ca6897a04656855fffc99e3e572be46bba6" translate="yes" xml:space="preserve">
          <source>The value of C (Calls required to parse the Variable) commences at 0, increments by 1 for the 2nd expansion, Then doubles for Each
subsequent Expansion</source>
          <target state="translated">C (変数を解析するのに必要な呼び出し)の値は 0 から始まり、2回目の展開では1ずつインクリメントし、それ以降の展開では2倍になります。</target>
        </trans-unit>
        <trans-unit id="119f73e3e16938a0f0bb6ff5cb6b83c38c560178" translate="yes" xml:space="preserve">
          <source>Then you need to add the names of the sites in for reporting, so you add another term to each string at place 5 so you don't have to change your function..</source>
          <target state="translated">その後、レポートのためにサイト名を追加する必要がありますので、あなたは、あなたの関数を変更する必要がないように、5の場所に各文字列に別の用語を追加します。</target>
        </trans-unit>
        <trans-unit id="439bc97cdcf8fb5ec237e5f09e3a1803c4d5518c" translate="yes" xml:space="preserve">
          <source>Then you realise you'll need to keep them in order by their site names (or IPs, but the names are easier for most people to remember and you need to be able to let other people have a look) so you change the order in all 13 spots, the call to expand the variables, and the function.</source>
          <target state="translated">そして、サイト名(またはIPですが、ほとんどの人が覚えやすい名前の方が覚えやすく、他の人にも見てもらえるようにする必要があります)の順に並べる必要があることに気がつきました。</target>
        </trans-unit>
        <trans-unit id="7377d39feb2c5c2045f561314c0ff03eedbb7cb3" translate="yes" xml:space="preserve">
          <source>This is simply wrong! Variable &lt;code&gt;a&lt;/code&gt; will remain empty (supposing it was empty initially) and &lt;code&gt;echo %a%&lt;/code&gt; will return &lt;code&gt;ECHO is on.&lt;/code&gt; A variable called &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは単に間違っています！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は空のままになり（最初は空であったと仮定）、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo %a%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;ECHO is on.&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを返し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc23cbf9301e02c674c8373d9f9f29c42bf87a05" translate="yes" xml:space="preserve">
          <source>This means that from the cmd.exe point of view, &lt;code&gt;SET NORMAL_NAME=123&lt;/code&gt; is exactly the same as &lt;code&gt;SET A#$'()*+,-.?@[\]_{}~=123&lt;/code&gt; and also the same as &lt;code&gt;SET VECTOR[1]=123&lt;/code&gt;; all three are normal variables. This way, &lt;em&gt;it is up to you&lt;/em&gt; to write variable names in the form of array elements:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、cmd.exeの観点から見ると、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SET NORMAL_NAME=123&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SET A#$'()*+,-.?@[\]_{}~=123&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まったく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じであり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SET VECTOR[1]=123&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とも同じです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[1] = 123&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;3つすべてが通常の変数です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このように、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列名の形式で変数名を書くのは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなた次第です&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb0ce76510a184faa75a269cf3357455a40c5301" translate="yes" xml:space="preserve">
          <source>This was fine for small 2-D Arrays.</source>
          <target state="translated">小型の2次元アレイの場合はこれで良かった。</target>
        </trans-unit>
        <trans-unit id="bd2e491cf40b1818725020969da4122e5055808c" translate="yes" xml:space="preserve">
          <source>This way, &lt;code&gt;echo %elem[2]%&lt;/code&gt; will show &lt;code&gt;Second one&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このように、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;echo %elem[2]%&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Second one&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を表示し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7782378673080e28e93ffa6b0e7b8dffebb9034e" translate="yes" xml:space="preserve">
          <source>This way, the Batch file &lt;em&gt;behaves&lt;/em&gt; like it manages arrays. I think the important point here is not to discuss if Batch manages arrays or not, but the fact that you may manage arrays in Batch files in an equivalent way of other programming languages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このように、バッチファイル&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列を管理&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動作&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで重要な点は、Batchが配列を管理するかどうかを議論することではなく、他のプログラミング言語と同等の方法でBatchファイル内の配列を管理できるということです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38586a875ef2f14e3c21f6c99b186e10aa9fcfff" translate="yes" xml:space="preserve">
          <source>To be fair, this script example may not be very explicit in showing what is happening, and I had to make changes on the fly to fix a new object style, but essentially:
It creates connection objects, and then dynamically extends them to include sub folders, and maintain running totals for each subfolder and site in KB, MB, and GB, and pics which of the values to report after summing up all of the directories for a given folder etc dynamically.</source>
          <target state="translated">公平に言うと、このスクリプトの例は、何が起こっているのかを明示的に示しているわけではないかもしれません。それは、接続オブジェクトを作成し、動的にサブフォルダを含むようにそれらを拡張し、KB、MB、GBで各サブフォルダとサイトの実行中の合計を維持し、与えられたフォルダなどのためのディレクトリのすべてを動的に合計した後に報告する値のうちのどれをピックします。</target>
        </trans-unit>
        <trans-unit id="d793fe5385aeb29019c59283bacba8a240c0520b" translate="yes" xml:space="preserve">
          <source>To combat the issue with needing to re-order sets of Data on the fly I considered using a form of linked lists I toyed with, but since I wanted to easily add items to each grouping of sites while retaining order between sites I settled on a simple method.</source>
          <target state="translated">データのセットをフライで再注文する必要があるという問題に対処するために、私は私がおもちゃにしたリンクされたリストの形式を使用することを検討しましたが、私はサイト間の順序を保持しながら、簡単にサイトの各グループ化にアイテムを追加したかったので、私はシンプルな方法に落ち着きました。</target>
        </trans-unit>
        <trans-unit id="03ad79e4de626903d467452c756afc4f143e6952" translate="yes" xml:space="preserve">
          <source>To make the assignment safe against all characters, use the quoted syntax (supposing you have the &lt;a href=&quot;http://ss64.com/nt/cmd.html&quot;&gt;command extensions&lt;/a&gt; enabled, which is the default for the Windows command prompt anyway):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべての文字に対して割り当てを安全にするには、引用符で囲まれた構文を使用します（&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とにかくWindowsコマンドプロンプトのデフォルトである&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://ss64.com/nt/cmd.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コマンド拡張機能が&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有効になっ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ていると仮定します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02cb3b0eb7ab0da6d50f4246120875ffadf89c9b" translate="yes" xml:space="preserve">
          <source>To offset the string length limitation limitation, the variable used as the starting point can be changed in combination with the depth level to target.</source>
          <target state="translated">文字列の長さ制限を相殺するために、開始点として使用する変数を、ターゲットとする深度レベルと組み合わせて変更することができます。</target>
        </trans-unit>
        <trans-unit id="0ae3f0a3743e6ad9679664ec7a1bc822db9a3217" translate="yes" xml:space="preserve">
          <source>To say nothing of when I need to match and populate content in those multi-dimensional arrays dynamically, where the simple usage there breaks down.</source>
          <target state="translated">多次元配列のコンテンツを動的にマッチさせたり、埋め込んだりする必要がある場合は言うまでもありませんが、ここでは単純な使い方が崩れてしまいます。</target>
        </trans-unit>
        <trans-unit id="87dc6b21881b212f6ce71097527bcdacd009afc2" translate="yes" xml:space="preserve">
          <source>To solve this problem you must use &lt;em&gt;Delayed Expansion&lt;/em&gt;, that is, insert &lt;code&gt;setlocal EnableDelayedExpansion&lt;/code&gt; command at the beginning, enclose index variables in percent symbols, and enclose the array elements in exclamation marks:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この問題を解決するに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;遅延拡張を&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。つまり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、最初に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;setlocal EnableDelayedExpansion&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コマンドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;挿入&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、インデックス変数をパーセント記号で囲み、配列要素を感嘆符で囲みます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb91e24fa52d8d2b32937bf04d843f730319a902" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="translated">Update</target>
        </trans-unit>
        <trans-unit id="1006011ff2bd10e97b168cbacefacd9aee9c3809" translate="yes" xml:space="preserve">
          <source>Use of the double pipe after the Call string can test for when this failure occurs, allowing intervention:</source>
          <target state="translated">コール文字列の後にダブルパイプを使用することで、この失敗がいつ発生するかをテストし、介入を可能にすることができます。</target>
        </trans-unit>
        <trans-unit id="11a7cf1e852d81c647914a108c3ec5f6a49e035e" translate="yes" xml:space="preserve">
          <source>We also take the Dumb Pseudo Arrays and convert them into Ordered arrays (removing the original Dumb Pseudo Array variables after).</source>
          <target state="translated">また、ダム疑似配列を取り、順序付き配列に変換します(元のダム疑似配列変数を後から削除します)。</target>
        </trans-unit>
        <trans-unit id="e26186abb86787fb08d9227ccbd6153e7af428ec" translate="yes" xml:space="preserve">
          <source>We then update all of the ordered Arrays to contain more elements manually.</source>
          <target state="translated">次に、順序付けされたすべての配列を更新して、より多くの要素を手動で含むようにします。</target>
        </trans-unit>
        <trans-unit id="d15ff34059990aa31c704b0655eb9c7da7379d8b" translate="yes" xml:space="preserve">
          <source>Well here again these can be useful too, and you can build them on the fly in your code adding more properties as needed.</source>
          <target state="translated">さて、ここで再びこれらはあまりにも有用であることができ、あなたは必要に応じてより多くのプロパティを追加し、あなたのコードのフライでそれらを構築することができます。</target>
        </trans-unit>
        <trans-unit id="69f8958e93da77e3c6f30479ddcaf361b0b58f31" translate="yes" xml:space="preserve">
          <source>Which expands to:</source>
          <target state="translated">どっちが拡大するんだ?</target>
        </trans-unit>
        <trans-unit id="77966974bfaaa756b2ccaaf299f08caed8236632" translate="yes" xml:space="preserve">
          <source>While i had to edit it a bit because this is also an earlier version of these as well, I thought it was one of the instances where it might best show the benefits.  If I find a better example in one of my other scripts I might update it there as well.</source>
          <target state="translated">これはまた、これらの初期バージョンでもあるので、私はそれを少し編集しなければならなかったが、私はそれが最高の利点を示す可能性がありますインスタンスの一つだと思った。もし他のスクリプトでもっと良い例を見つけたら、そこでも更新するかもしれません。</target>
        </trans-unit>
        <trans-unit id="62b601608b0a589c0113e5f1eba3dc75e8f0e258" translate="yes" xml:space="preserve">
          <source>Windows shell scripting really isn't designed to work with arrays, let alone complex data structures. For the most part, everything's a string in the windows shell, but, there are some things you can do to &quot;work with&quot; arrays, like declaring &lt;code&gt;n&lt;/code&gt; variables &lt;code&gt;VAR_1, VAR_2, VAR_3...&lt;/code&gt; using a loop and filtering on the prefix &lt;code&gt;VAR_&lt;/code&gt;, or creating a delimited string and then using the &lt;code&gt;FOR&lt;/code&gt; construct that iterates over a delimited string.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Windowsシェルスクリプトは、複雑なデータ構造はもちろんのこと、配列を処理するようには設計されていません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの場合、すべてがWindowsシェルの文字列ですが&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ループを使用してプレフィックス&lt;/font&gt; &lt;code&gt;VAR_&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィルタリング&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;n&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;VAR_1, VAR_2, VAR_3...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言など、配列を「操作」するためにできることがいくつか&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あります&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、または区切られた文字列を作成してから、区切ら&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れた文字列を反復&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;FOR&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;構文を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ee7d03f6cbcf1644f16f2ec1b513c8e72ad5ab60" translate="yes" xml:space="preserve">
          <source>You end up having 30, 40,50 of these and it's hard to remember which is which by looking at the end of a long string and copying them around, etc.</source>
          <target state="translated">これが30個、40個、50個もあって、長い文字列の最後を見てどれがどれなのかを覚えるのは大変です。</target>
        </trans-unit>
        <trans-unit id="35aae060981006ca3019530b614a0b4f7daec859" translate="yes" xml:space="preserve">
          <source>You may also use parameters of FOR commands as indexes: &lt;code&gt;for /L %%i in (1,1,3) do echo !elem[%%i]!&lt;/code&gt;. You must use !index! to store values in array elements when the index is changed inside a FOR or IF: &lt;code&gt;set elem[!index!]=New value&lt;/code&gt;. To get the value of an element when the index changes inside FOR/IF, enclose the element in double percent symbols and precede the command with &lt;code&gt;call&lt;/code&gt;. For example, to move a range of array elements four places to the left:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FORコマンドのパラメーターをインデックスとして使用することもできます&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for /L %%i in (1,1,3) do echo !elem[%%i]!&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！index！を使用する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FORまたはIF内でインデックスが変更されたときに配列要素に値を格納するには、次のように&lt;/font&gt;&lt;/font&gt; &lt;code&gt;set elem[!index!]=New value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;FOR / IF内でインデックスが変更されたときに要素の値を取得するには、要素を二重パーセント記号で囲み、コマンドの前に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;call&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;付け&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、配列要素の範囲を左に4桁移動するには、次のようにします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7455a0f1aef01ebf88affb8802b8e0bdbdca9fba" translate="yes" xml:space="preserve">
          <source>You realise you need to have different retention times per site, and later, per directory.</source>
          <target state="translated">サイトごと、後にはディレクトリごとに保持時間が異なる必要があることに気づくのです。</target>
        </trans-unit>
        <trans-unit id="c143b4efa5ddb34b0203ea20bab3f466794d85d0" translate="yes" xml:space="preserve">
          <source>You stopped adding more paths, but sometime you have to remove old ones or it causes problems when they are gone, and if you forget to update the total number of site sin the list you might miss running the script on some.</source>
          <target state="translated">あなたはより多くのパスの追加を停止しましたが、いつかは古いものを削除しなければならないか、それがなくなったときに問題が発生し、あなたがリストのサイトの合計数を更新することを忘れた場合は、いくつかの上でスクリプトを実行していない可能性があります。</target>
        </trans-unit>
        <trans-unit id="e4b304132883cb82f03bd3401d85ded39c138b0a" translate="yes" xml:space="preserve">
          <source>around the equal-to sign:</source>
          <target state="translated">等倍記号の周りに</target>
        </trans-unit>
        <trans-unit id="5c4638b5fa7c0cb37b305d8f7aa97b068c95defa" translate="yes" xml:space="preserve">
          <source>bubble sort</source>
          <target state="translated">泡沫状</target>
        </trans-unit>
        <trans-unit id="748f3fb7b5d2eba98fe0d5e1c3691ec119545fe3" translate="yes" xml:space="preserve">
          <source>doesn't give the desired result because it means: show the value of the &lt;code&gt;elem[&lt;/code&gt; variable, followed by &lt;code&gt;i&lt;/code&gt;, followed by the value of the &lt;code&gt;]&lt;/code&gt; variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;elem[&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を表示し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その後に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その後に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を表示し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5e9b496a0935b15e72709835275b0a4dd4c2a1c6" translate="yes" xml:space="preserve">
          <source>etc...</source>
          <target state="translated">etc...</target>
        </trans-unit>
        <trans-unit id="7ecd2a7165e3884c1db5f55375b5b2e3d4cbfa49" translate="yes" xml:space="preserve">
          <source>gnome sort</source>
          <target state="translated">ノームソート</target>
        </trans-unit>
        <trans-unit id="2f4bf40e24a7772cb6bea0b06c378be0adcb68ba" translate="yes" xml:space="preserve">
          <source>quick sort</source>
          <target state="translated">クイックソート</target>
        </trans-unit>
        <trans-unit id="bcfbf4c9be6c82a0a5770566cc31fb99227279fb" translate="yes" xml:space="preserve">
          <source>when a directory is added or removed you have to add it/remove it fro each site making it harder to use the ordering, and easier to miss sites as they aren;t easy to ID.</source>
          <target state="translated">ディレクトリが追加されるか、または削除されたときに、それを追加する必要がありますitremoveそれをfroそれが順序を使用することが困難になる各サイト、およびそれらがIDに容易ではないのでサイトを見逃すことが容易に。</target>
        </trans-unit>
        <trans-unit id="943cbce6d8068edf6897edc55710731afa4cc74b" translate="yes" xml:space="preserve">
          <source>will actually be set to the value</source>
          <target state="translated">は実際には</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
