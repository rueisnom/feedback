<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/10714251">
    <body>
      <group id="10714251">
        <trans-unit id="1583e07615db44b3aebaf031efc7dc227e1bd7fd" translate="yes" xml:space="preserve">
          <source>&quot;... and am finding that my code would be more re-usable if I were able to use variables instead of Select functions.&quot;</source>
          <target state="translated">&quot;...........我发现如果我能用变量代替Select函数,我的代码会更容易重用。&quot;</target>
        </trans-unit>
        <trans-unit id="65668430b49589fc9fbf6663610ba1ef10b4f6b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.select&lt;/code&gt; can be avoided, as many posted already, by directly working with the already existing objects, which allows various indirect referencing like calculating i and j in a complex way and then editing cell(i,j), etc.</source>
          <target state="translated">通过直接使用已经存在的对象，可以避免 &lt;code&gt;.select&lt;/code&gt; 的出现，因为已经发布了许多对象，这允许进行各种间接引用，例如以复杂的方式计算i和j，然后编辑cell（i，j）等。</target>
        </trans-unit>
        <trans-unit id="46aace16bb5f3e381d2482dce00631eeda077e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set&lt;/code&gt; the variable to the required range.  There are many ways to refer to a single-cell range</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 变量设置为所需范围。 有很多方法可以引用单细胞范围</target>
        </trans-unit>
        <trans-unit id="dbf0a53faf54267e7d0218a3e233651058490cf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1)&lt;/strong&gt; Directly work with the relevant objects</source>
          <target state="translated">&lt;strong&gt;1）&lt;/strong&gt;直接处理相关对象</target>
        </trans-unit>
        <trans-unit id="ac076fbab555f48bb12dc9a7c21d14606ed09db8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2)&lt;/strong&gt; If required declare your variables. The same code above can be written as</source>
          <target state="translated">&lt;strong&gt;2）&lt;/strong&gt;如果需要，声明您的变量。 上面的相同代码可以写成</target>
        </trans-unit>
        <trans-unit id="99428b1a299a34007af83abf35330640dd4f9340" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How do we avoid it?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;我们如何避免呢？&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc08b622bab6c87c5cc5be08dde9605c3175d5e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is how you may avoid &lt;code&gt;Select&lt;/code&gt; and &lt;code&gt;Activate&lt;/code&gt; in the following cases:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在以下情况下，这可以避免 &lt;code&gt;Select&lt;/code&gt; 和 &lt;code&gt;Activate&lt;/code&gt; ：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a036de4957f470612e6979da7ab6f0c0d8fcf0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Two Main reasons why &lt;code&gt;.Select&lt;/code&gt;/&lt;code&gt;.Activate&lt;/code&gt;/&lt;code&gt;Selection&lt;/code&gt;/&lt;code&gt;Activecell&lt;/code&gt;/&lt;code&gt;Activesheet&lt;/code&gt;/&lt;code&gt;Activeworkbook&lt;/code&gt; etc... should be avoided&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;为什么要避免 &lt;code&gt;.Select&lt;/code&gt; / &lt;code&gt;.Activate&lt;/code&gt; / &lt;code&gt;Selection&lt;/code&gt; / &lt;code&gt;Activecell&lt;/code&gt; / &lt;code&gt;Activesheet&lt;/code&gt; / Activeworkbook等的两个主要原因&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9615b91dffdf33df5e1f2103a44c256bec9f7d7f" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;(Yes, I know this question was about &lt;code&gt;.Select&lt;/code&gt;, not &lt;code&gt;Selection&lt;/code&gt; but I wanted to remove any misconceptions that novice VBA coders might infer.)&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;（是的，我知道这个问题是关于 &lt;code&gt;.Select&lt;/code&gt; ，而不是 &lt;code&gt;Selection&lt;/code&gt; ,但是我想消除新手VBA编码人员可能推断出的任何误解。）&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="60ff3ea1fbc282bfa0ebe965624896d49bcfbd15" translate="yes" xml:space="preserve">
          <source>A common (bad) piece of code is to open a book, get some data then close again</source>
          <target state="translated">一个常见的(坏的)代码是打开一本书,获得一些数据,然后再关闭一次</target>
        </trans-unit>
        <trans-unit id="b5c432e332545ae43153b3b22f6fa7dc9543f84d" translate="yes" xml:space="preserve">
          <source>A good example of when you could be justified in using &lt;code&gt;.Activate&lt;/code&gt; and &lt;code&gt;.Select&lt;/code&gt; is when you want make sure that a specific Worksheet is selected for visual reasons. E.g., that your Excel would always open with the cover worksheet selected first, disregarding which which was the ActiveSheet when the file was closed.</source>
          <target state="translated">当您希望确保出于视觉原因选择了特定的工作表时，可以使用 &lt;code&gt;.Activate&lt;/code&gt; 和 &lt;code&gt;.Select&lt;/code&gt; 进行证明是一个很好的例子。 例如，您的Excel将始终以首先选择封面工作表的方式打开，而不考虑关闭文件时哪个是ActiveSheet。</target>
        </trans-unit>
        <trans-unit id="a7ff9741542bb2bff5f3d5f551bf4aeac916af25" translate="yes" xml:space="preserve">
          <source>A minus -2 would have referenced J2</source>
          <target state="translated">减去-2会参考J2</target>
        </trans-unit>
        <trans-unit id="4220e97788b8078159668a22922f256f15e54813" translate="yes" xml:space="preserve">
          <source>Adding a new Worksheet and copying a cell on it:</source>
          <target state="translated">添加一个新的工作表,并在上面复制一个单元格。</target>
        </trans-unit>
        <trans-unit id="e26144a32cd81fc46c2cfab306213322549da933" translate="yes" xml:space="preserve">
          <source>After you've done that at the top of your Sub, using them could not be simpler, just use them wherever you would use &quot;Selection&quot;:</source>
          <target state="translated">在你在你的Sub顶部做了这些之后,使用它们不能更简单,只要在你会使用 &quot;选择 &quot;的地方使用它们就可以了。</target>
        </trans-unit>
        <trans-unit id="9787f1901cdd0a4dbe1ff18d12b8cc48258584ee" translate="yes" xml:space="preserve">
          <source>Again, this refers to the &lt;em&gt;active workbook&lt;/em&gt;.  Unless you specifically want to work only with the &lt;code&gt;ActiveWorkbook&lt;/code&gt; or &lt;code&gt;ThisWorkbook&lt;/code&gt;, it is better to Dim a &lt;code&gt;Workbook&lt;/code&gt; variable too.</source>
          <target state="translated">同样，这是指&lt;em&gt;活动工作簿&lt;/em&gt; 。 除非您特别想只使用 &lt;code&gt;ActiveWorkbook&lt;/code&gt; 或 &lt;code&gt;ThisWorkbook&lt;/code&gt; ，否则也最好对 &lt;code&gt;Workbook&lt;/code&gt; 变量进行调暗。</target>
        </trans-unit>
        <trans-unit id="228ef87a9e7ba50e3e4ff446dac448818b7b1544" translate="yes" xml:space="preserve">
          <source>All the above examples refer to cells on the &lt;em&gt;active sheet&lt;/em&gt;.  Unless you specifically want to work only with the active sheet, it is better to Dim a &lt;code&gt;Worksheet&lt;/code&gt; variable too</source>
          <target state="translated">以上所有示例均涉及&lt;em&gt;活动工作表&lt;/em&gt;上的单元格。 除非您特别想只使用活动工作表，否则最好也将 &lt;code&gt;Worksheet&lt;/code&gt; 变量变暗。</target>
        </trans-unit>
        <trans-unit id="ac83fe225af8cf1235a81c24e2829cbed9cf54a0" translate="yes" xml:space="preserve">
          <source>Always state the workbook, worksheet and the cell/range.</source>
          <target state="translated">一定要注明工作簿、工作表和单元格范围。</target>
        </trans-unit>
        <trans-unit id="0c3e8c70cfdf57f0ad7dadcf53a72e6a6a570606" translate="yes" xml:space="preserve">
          <source>And Macro1 as:</source>
          <target state="translated">和Macro1作为。</target>
        </trans-unit>
        <trans-unit id="66a162fc9cb6af64eb431f806241eb8da0acc491" translate="yes" xml:space="preserve">
          <source>And never use the index of a workbook.</source>
          <target state="translated">而且千万不要用工作簿的索引。</target>
        </trans-unit>
        <trans-unit id="c7a61fd49482d190e4fc8e29863bd18d71ee9b14" translate="yes" xml:space="preserve">
          <source>And would be better like:</source>
          <target state="translated">而且会更好的喜欢。</target>
        </trans-unit>
        <trans-unit id="e02fd59c2f4740db7b8d363450445f14ee5220cb" translate="yes" xml:space="preserve">
          <source>Another good example is when you need to export all sheets into one PDF file, as mentioned in this case - &lt;a href=&quot;https://stackoverflow.com/questions/59107554/how-to-avoid-select-active-statements-in-vba-in-this-example&quot;&gt;How to avoid select/active statements in VBA in this example?&lt;/a&gt;</source>
          <target state="translated">另一个很好的例子是，当您需要将所有图纸导出到一个PDF文件中时，如本例所述-在此示例中， &lt;a href=&quot;https://stackoverflow.com/questions/59107554/how-to-avoid-select-active-statements-in-vba-in-this-example&quot;&gt;如何避免在VBA中使用select / active语句？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ca55f853d0333e2d3bea08ceb83d3f443e361ff" translate="yes" xml:space="preserve">
          <source>As an added bonus, if you &lt;em&gt;always&lt;/em&gt; name your variables &quot;wb&quot; and &quot;ws&quot;, you can copy and paste code from one book to another and it will usually work with minimal changes needed, if any.</source>
          <target state="translated">另外，如果您&lt;em&gt;始终&lt;/em&gt;将变量命名为&amp;ldquo; wb&amp;rdquo;和&amp;ldquo; ws&amp;rdquo;，则可以将代码从一本书复制并粘贴到另一本书，并且通常只需很少的更改即可运行。</target>
        </trans-unit>
        <trans-unit id="29c8dfc5ba99ac1d6c7ccd6a62dfa8ae208771c6" translate="yes" xml:space="preserve">
          <source>At best, your macro will crash, at worst you might end up writing values or changing cells in the wrong workbook with no way to &quot;Undo&quot; them.</source>
          <target state="translated">在最好的情况下,你的宏会崩溃,在最坏的情况下,你可能最终会在错误的工作簿中写入值或更改单元格,而没有办法 &quot;撤消 &quot;它们。</target>
        </trans-unit>
        <trans-unit id="c266c2aae0dfbc70617fbb635ddbd6ab8df188d3" translate="yes" xml:space="preserve">
          <source>Avoiding &lt;code&gt;Select&lt;/code&gt; and &lt;code&gt;Activate&lt;/code&gt; is the move that makes you a bit better VBA developer. In general, &lt;code&gt;Select&lt;/code&gt; and &lt;code&gt;Activate&lt;/code&gt; are used when a macro is recorded, thus the &lt;code&gt;Parent&lt;/code&gt; worksheet or range is always considered the active one.</source>
          <target state="translated">避免 &lt;code&gt;Select&lt;/code&gt; 和 &lt;code&gt;Activate&lt;/code&gt; 是使您成为更好的VBA开发人员的举动。 通常，记录宏时会使用&amp;ldquo; &lt;code&gt;Select&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;Activate&lt;/code&gt; ，因此&amp;ldquo; &lt;code&gt;Parent&lt;/code&gt; 工作表或范围始终被视为活动工作表或范围。</target>
        </trans-unit>
        <trans-unit id="9ecb8a979e18efe477619674504f8039f77f6492" translate="yes" xml:space="preserve">
          <source>Basically because they're called primarily to handle user input through the Application UI. Since they're the methods called when the user handles objects through the UI, they're the ones recorded by the macro-recorder, and that's why calling them is either brittle or redundant for most situations: you don't have to select an object so as to perform an action with &lt;code&gt;Selection&lt;/code&gt; right afterwards.</source>
          <target state="translated">基本上是因为调用它们主要是为了通过Application UI处理用户输入。 由于它们是用户通过UI处理对象时调用的方法，因此它们是由宏记录器记录的方法，这就是为什么在大多数情况下调用它们既脆弱又多余的原因：您不必选择对象，以便随后执行&amp;ldquo; &lt;code&gt;Selection&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="905437c19e84b248c8538ed51d8616749ba18a57" translate="yes" xml:space="preserve">
          <source>Basically when you expect the &lt;em&gt;final user&lt;/em&gt; to play a role in the execution.</source>
          <target state="translated">基本上，当您期望&lt;em&gt;最终用户&lt;/em&gt;在执行中扮演角色时。</target>
        </trans-unit>
        <trans-unit id="d53615a8a60eaf9f8057825a8088f5891dee445b" translate="yes" xml:space="preserve">
          <source>Because end users will always just click buttons and as soon as the focus moves off of the workbook the code wants to work with then things go completely wrong.</source>
          <target state="translated">因为终端用户总是只需点击按钮,一旦焦点从工作簿上转移到代码想要的工作簿上,那么事情就会完全出错。</target>
        </trans-unit>
        <trans-unit id="4f3ade12de7118b1fab12c29e66e2eaa28e83ea2" translate="yes" xml:space="preserve">
          <source>Can I really never use &lt;code&gt;.Select&lt;/code&gt; or &lt;code&gt;.Activate&lt;/code&gt; for anything?</source>
          <target state="translated">我真的可以永远不使用 &lt;code&gt;.Select&lt;/code&gt; 或 &lt;code&gt;.Activate&lt;/code&gt; 做任何事情吗？</target>
        </trans-unit>
        <trans-unit id="67a19b1bc7ddad4d1497ab55d5007648d46c8730" translate="yes" xml:space="preserve">
          <source>Consider this code</source>
          <target state="translated">考虑一下这个代码</target>
        </trans-unit>
        <trans-unit id="0bc8c412a86987fbdd9ffe118b5d3658448585de" translate="yes" xml:space="preserve">
          <source>Consider, if the above example had been written like this:</source>
          <target state="translated">想想看,如果上面的例子是这样写的。</target>
        </trans-unit>
        <trans-unit id="342af09d892d741e8ae4eb8e0e9c0bde9cb1610c" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;valOne = Range(&quot;A1&quot;).Value&lt;/code&gt;</source>
          <target state="translated">示例 &lt;code&gt;valOne = Range(&quot;A1&quot;).Value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25ae24e2d7c0935ba151d02c912ed006bdcab2e3" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;valTwo = Sheets(&quot;Sheet3&quot;).Codename&lt;/code&gt;</source>
          <target state="translated">示例 &lt;code&gt;valTwo = Sheets(&quot;Sheet3&quot;).Codename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="cf7ebef2a1d6c136a006983c3fada9586f976045" translate="yes" xml:space="preserve">
          <source>Examples of Selection-based sub framework:</source>
          <target state="translated">基于选择的子框架的例子。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="19ed3e227b2182a6509decf520975d8866c8c29d" translate="yes" xml:space="preserve">
          <source>From (code generated with macro recorder):</source>
          <target state="translated">从(用宏记录器生成的代码)。</target>
        </trans-unit>
        <trans-unit id="c4d63e4c56f1d2b74aaf3de1c3943ce348748d84" translate="yes" xml:space="preserve">
          <source>From:</source>
          <target state="translated">From:</target>
        </trans-unit>
        <trans-unit id="2e15feb4b1e6d46ee1b8d65de8879bda3bf04984" translate="yes" xml:space="preserve">
          <source>Here are a couple additional reasons to make liberal use of named ranges though I am sure I could think of more.</source>
          <target state="translated">这里有几个额外的理由,可以自由使用命名的范围,不过我相信我可以想到更多。</target>
        </trans-unit>
        <trans-unit id="d93452b537df3f534f5ef7bedc5edff439df4f87" translate="yes" xml:space="preserve">
          <source>Here are a couple examples.</source>
          <target state="translated">这里有几个例子。</target>
        </trans-unit>
        <trans-unit id="70b222c6b3bdc9703cf528be11364ad5184179d0" translate="yes" xml:space="preserve">
          <source>Hope this helps to clear things up a little bit.</source>
          <target state="translated">希望这能帮你把事情弄清楚一点。</target>
        </trans-unit>
        <trans-unit id="1397360149465600f8777ba9df8d95a5e4126e51" translate="yes" xml:space="preserve">
          <source>How to avoid using Select in Excel VBA</source>
          <target state="translated">如何避免在Excel VBA中使用Select</target>
        </trans-unit>
        <trans-unit id="e6bdfe5f18421fcf3e6addabaae874e296142168" translate="yes" xml:space="preserve">
          <source>However, this definition settles situations on which they are called for:</source>
          <target state="translated">然而,这一定义解决了需要它们的情况。</target>
        </trans-unit>
        <trans-unit id="8f89cc294fff45750397aff3d126f9f1ee0b3ca2" translate="yes" xml:space="preserve">
          <source>I have a simple golden rule that I follow: Add variables named &quot;wb&quot; and &quot;ws&quot; for a Workbook object and a Worksheet object and always use those to refer to my macro book. If I need to refer to more than one book, or more than one sheet, I add more variables.</source>
          <target state="translated">我有一个简单的金科玉律,是我所遵循的。为一个工作簿对象和一个工作表对象添加名为 &quot;wb &quot;和 &quot;ws &quot;的变量,并且总是用这些变量来引用我的宏书。如果我需要引用不止一个书,或者不止一个工作表,我就会添加更多的变量。</target>
        </trans-unit>
        <trans-unit id="c4e5a5bc6d3ac2b448ed1a7bd951468681990bc7" translate="yes" xml:space="preserve">
          <source>I have found &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&quot;&gt;this article on ranges&lt;/a&gt; and &lt;a href=&quot;http://www.businessprogrammer.com/201105/power-excel-vba-secret-avoid-using-select/&quot;&gt;this example on the benefits of not using select&lt;/a&gt; but can't find anything on &lt;em&gt;how&lt;/em&gt;?</source>
          <target state="translated">我&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa139976%28v=office.10%29.aspx&quot;&gt;在范围上&lt;/a&gt;找到了这篇文章，并且在&lt;a href=&quot;http://www.businessprogrammer.com/201105/power-excel-vba-secret-avoid-using-select/&quot;&gt;这个示例中&lt;/a&gt;找到了不使用select却无法找到任何好处的好处 ？</target>
        </trans-unit>
        <trans-unit id="406f5a70b189cd46c55531348ccb84e4fdd5b945" translate="yes" xml:space="preserve">
          <source>I hope that helps. Let me know if you have any questions.</source>
          <target state="translated">希望对你有帮助。如果你有什么问题请告诉我。</target>
        </trans-unit>
        <trans-unit id="c82904cb28ac0559082451b3612913720cd3cedd" translate="yes" xml:space="preserve">
          <source>I hope this helps someone.</source>
          <target state="translated">我希望这能帮上忙。</target>
        </trans-unit>
        <trans-unit id="0449608ca81bf5f5050ebe5831b2f71390c1c5db" translate="yes" xml:space="preserve">
          <source>I noticed that none of these answers mention the &lt;a href=&quot;https://msdn.microsoft.com/en-us/vba/excel-vba/articles/range-offset-property-excel&quot;&gt;.Offset Property&lt;/a&gt;. This also can be used to avoid using the &lt;code&gt;Select&lt;/code&gt; action when manipulating certain cells, particularly in reference to a selected cell (as the OP mentions with &lt;code&gt;ActiveCell&lt;/code&gt;).</source>
          <target state="translated">我注意到这些答案都没有提到&lt;a href=&quot;https://msdn.microsoft.com/en-us/vba/excel-vba/articles/range-offset-property-excel&quot;&gt;.Offset属性&lt;/a&gt; 。 这也可以用来避免在处理某些单元格时使用 &lt;code&gt;Select&lt;/code&gt; 操作，尤其是在引用所选单元格时（如OP在 &lt;code&gt;ActiveCell&lt;/code&gt; 中提到的那样）。</target>
        </trans-unit>
        <trans-unit id="9cb3e9de7fe6f06115cf1d8c5c0446bf5051938c" translate="yes" xml:space="preserve">
          <source>I will also assume the &quot;ActiveCell&quot; is &lt;strong&gt;J4&lt;/strong&gt;.</source>
          <target state="translated">我还将假设&amp;ldquo; ActiveCell&amp;rdquo;是&lt;strong&gt;J4&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="06cc60f8c75ea171652433a327d13dc8e6332b81" translate="yes" xml:space="preserve">
          <source>I'm going to give the short answer since everyone else gave the long one.</source>
          <target state="translated">既然别人都给了长的,我就简答一下。</target>
        </trans-unit>
        <trans-unit id="054c04a0c52ae72376c1375e28fe08492eab52a8" translate="yes" xml:space="preserve">
          <source>I've heard much about the understandable abhorrence of using &lt;code&gt;.Select&lt;/code&gt; in Excel VBA, but am unsure of how to avoid using it. I am finding that my code would be more re-usable if I were able to use variables instead of &lt;code&gt;Select&lt;/code&gt; functions. However, I am not sure how to refer to things (like the &lt;code&gt;ActiveCell&lt;/code&gt; etc.) if not using &lt;code&gt;Select&lt;/code&gt;.</source>
          <target state="translated">我已经听说了很多有关在Excel VBA中使用 &lt;code&gt;.Select&lt;/code&gt; 的可理解的厌恶 ，但是不确定如何避免使用它。 我发现如果我能够使用变量而不是 &lt;code&gt;Select&lt;/code&gt; 函数，那么我的代码将更可重用。 但是，如果不使用 &lt;code&gt;Select&lt;/code&gt; ，我不确定如何引用事物（例如 &lt;code&gt;ActiveCell&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="70a894385d22dff1dce34826fbc2099c7cda7e04" translate="yes" xml:space="preserve">
          <source>IMHO use of &lt;code&gt;.select&lt;/code&gt; comes from people, who like me started learning VBA by necessity through recording macros and then modifying the code without realizing that &lt;code&gt;.select&lt;/code&gt; and subsequent &lt;code&gt;selection&lt;/code&gt; is just an unnecessary middle-men.</source>
          <target state="translated">恕我直言， &lt;code&gt;.select&lt;/code&gt; 的使用来自于像我这样的人，他们像我一样开始通过记录宏来学习VBA，然后修改代码，而没有意识到 &lt;code&gt;.select&lt;/code&gt; 和随后的 &lt;code&gt;selection&lt;/code&gt; 只是不必要的中间人。</target>
        </trans-unit>
        <trans-unit id="f789aa2d6d3b11b1653e6c359b8d306d22d93e4e" translate="yes" xml:space="preserve">
          <source>If you &lt;em&gt;do&lt;/em&gt; want to work with the &lt;code&gt;ActiveSheet&lt;/code&gt;, for clarity it's best to be explicit. But take care, as some &lt;code&gt;Worksheet&lt;/code&gt; methods change the active sheet.</source>
          <target state="translated">如果您&lt;em&gt;确实&lt;/em&gt;想使用 &lt;code&gt;ActiveSheet&lt;/code&gt; ，为清楚起见，最好是明确的。 但是请注意，因为某些 &lt;code&gt;Worksheet&lt;/code&gt; 方法会更改活动工作表。</target>
        </trans-unit>
        <trans-unit id="cf37ca85c57f5f0614a801ca0fc60ed6ed1683f4" translate="yes" xml:space="preserve">
          <source>If you &lt;em&gt;do&lt;/em&gt; want to work with the &lt;code&gt;ActiveWorkbook&lt;/code&gt;, for clarity it's best to be explicit. But take care, as many &lt;code&gt;WorkBook&lt;/code&gt; methods change the active book.</source>
          <target state="translated">如果您&lt;em&gt;确实&lt;/em&gt;想使用 &lt;code&gt;ActiveWorkbook&lt;/code&gt; ，为清楚起见，最好是明确的。 但是请注意，因为许多 &lt;code&gt;WorkBook&lt;/code&gt; 方法都会更改活动书本。</target>
        </trans-unit>
        <trans-unit id="dbeeee43d26bf344b7062ff2ea8aa9aede597130" translate="yes" xml:space="preserve">
          <source>If you are developing and expect the user to choose the object instances for your code to handle, then &lt;code&gt;.Selection&lt;/code&gt; or &lt;code&gt;.ActiveObject&lt;/code&gt; are apropriate.</source>
          <target state="translated">如果您正在开发并且希望用户为代码 &lt;code&gt;.Selection&lt;/code&gt; 要处理的对象实例，那么 &lt;code&gt;.ActiveObject&lt;/code&gt; 或.ActiveObject是合适的。</target>
        </trans-unit>
        <trans-unit id="cc4234df1fa6976f14bdf9d894db67a406e78e71" translate="yes" xml:space="preserve">
          <source>If you are looping over a range of cells it is often better (faster) to copy the range values to a variant array first and loop over that</source>
          <target state="translated">如果你要在一个单元格范围内循环,通常最好的办法是先将该范围的值复制到一个变体数组中,然后再在该范围内循环。</target>
        </trans-unit>
        <trans-unit id="897ca510ef4f543f54c868e4ea12e2c6c2e52698" translate="yes" xml:space="preserve">
          <source>If you had used named ranges to begin with, the &lt;code&gt;Months&lt;/code&gt; and &lt;code&gt;Sales&lt;/code&gt; columns could be moved around all you like, and your code will continue working just fine.</source>
          <target state="translated">如果您使用命名范围作为开头，则可以根据需要随意移动&amp;ldquo; &lt;code&gt;Months&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;Sales&lt;/code&gt; 列，并且代码将继续正常运行。</target>
        </trans-unit>
        <trans-unit id="749fce5d2ede6dcecd826470fbe76f3689d34b17" translate="yes" xml:space="preserve">
          <source>If you want to use it for a cell that is not the active one, for instance for &quot;B2&quot;, you should select it first, like this:</source>
          <target state="translated">如果你想把它用在一个不是活动的单元格上,比如 &quot;B2&quot;,你应该先选择它,就像这样。</target>
        </trans-unit>
        <trans-unit id="a653b6f01f61e4975c23afcfb8b3573413d843a9" translate="yes" xml:space="preserve">
          <source>In short, don't discard &lt;code&gt;Selection&lt;/code&gt; due to its close association with &lt;code&gt;.Select&lt;/code&gt; and &lt;code&gt;ActiveCell&lt;/code&gt;. As a worksheet property it has many other purposes.</source>
          <target state="translated">简而言之，不要因为 &lt;code&gt;Selection&lt;/code&gt; 与 &lt;code&gt;.Select&lt;/code&gt; 和 &lt;code&gt;ActiveCell&lt;/code&gt; 紧密关联而丢弃它。 作为工作表属性，它还有许多其他用途。</target>
        </trans-unit>
        <trans-unit id="cfaa76811fa329554d5f4bd88b9a6e03e0b4ad7d" translate="yes" xml:space="preserve">
          <source>It is pretty obvious what the named ranges &lt;code&gt;Months&lt;/code&gt; and &lt;code&gt;MonthlySales&lt;/code&gt; contain, and what the procedure is doing.</source>
          <target state="translated">很明显， &lt;code&gt;Months&lt;/code&gt; 和 &lt;code&gt;MonthlySales&lt;/code&gt; 的命名范围包含什么，以及该过程在做什么。</target>
        </trans-unit>
        <trans-unit id="5ad7d1bf5793ee33867d812b4a5ba5ca5ff61785" translate="yes" xml:space="preserve">
          <source>It is usually the main cause of runtime errors.</source>
          <target state="translated">这通常是造成运行时出错的主要原因。</target>
        </trans-unit>
        <trans-unit id="201fe044a2fb275379e6872e86fe757d6a288ae0" translate="yes" xml:space="preserve">
          <source>It really depends on what you are trying to do. Anyway a simple example could be useful. Let's suppose that you want to set the value of the active cell to &quot;foo&quot;. Using ActiveCell you would write something like this:</source>
          <target state="translated">这真的要看你想做什么。无论如何,一个简单的例子可能是有用的。假设你想将活动单元格的值设置为 &quot;foo&quot;。使用ActiveCell,你会写出这样的内容。</target>
        </trans-unit>
        <trans-unit id="ff99bc44597d2d4c55a57cdf57976aef1d2bc4e6" translate="yes" xml:space="preserve">
          <source>It slows down your code.</source>
          <target state="translated">它拖慢了你的代码。</target>
        </trans-unit>
        <trans-unit id="ad428f8c472dea0571feb2430daf298a70e70a94" translate="yes" xml:space="preserve">
          <source>Named ranges ensure that your macros do not break when (not if!) the configuration of the spreadsheet changes.</source>
          <target state="translated">命名范围可以确保当电子表格的配置发生变化时(而不是如果!),您的宏不会损坏。</target>
        </trans-unit>
        <trans-unit id="a58c2c2aa99585df7fde3e6747abc640a32ec180" translate="yes" xml:space="preserve">
          <source>Named ranges make your code easier to read and understand.</source>
          <target state="translated">命名范围让你的代码更容易阅读和理解。</target>
        </trans-unit>
        <trans-unit id="13c323eb1978f7ee0ff5123b07d0ef78e67196d2" translate="yes" xml:space="preserve">
          <source>Not copying values, but taking them</source>
          <target state="translated">不是复制值,而是取值</target>
        </trans-unit>
        <trans-unit id="8d07f1f7a3605d5cbc3b8666a34b7d361ba61207" translate="yes" xml:space="preserve">
          <source>Note that &quot;0&quot; is not needed in the offset parameter if not needed (,2)</source>
          <target state="translated">注意,如果不需要偏移参数中的 &quot;0 &quot;不需要(,2)</target>
        </trans-unit>
        <trans-unit id="ce24df35a6acd90a6c665387396054ce7dd32a42" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;.Select&lt;/code&gt; and &lt;code&gt;.Activate&lt;/code&gt; are of use when you can infer the user's next action and you want your code to guide the user, possibly saving him some time and mouse clicks. For example, if your code just created a brand new instance of a chart or updated one, the user might want to check it out, and you could call &lt;code&gt;.Activate&lt;/code&gt; on it or its sheet to save the user the time searching for it; or if you know the user will need to update some range values, you can programatically select that range.</source>
          <target state="translated">另一方面，当您可以推断用户的下一个动作并且希望您的代码引导用户时，可以使用 &lt;code&gt;.Select&lt;/code&gt; 和 &lt;code&gt;.Activate&lt;/code&gt; ，从而可以节省用户一些时间和单击鼠标。 例如，如果您的代码只是创建了一个全新的图表实例或对其进行了更新，则用户可能想将其检出，您可以在其或其工作表上调用 &lt;code&gt;.Activate&lt;/code&gt; 来节省用户的搜索时间； 或者，如果您知道用户需要更新某些范围值，则可以以编程方式选择该范围。</target>
        </trans-unit>
        <trans-unit id="8a5631d586cbbc18aba6d9d7014311024dadc2f9" translate="yes" xml:space="preserve">
          <source>One small point of emphasis I'll add to all the excellent answers given above:</source>
          <target state="translated">一个小的强调点,我会在上面给出的所有优秀答案的基础上再加一个。</target>
        </trans-unit>
        <trans-unit id="761062da63f5c2dfd2f32bfa21813d6c157419fc" translate="yes" xml:space="preserve">
          <source>Or you could</source>
          <target state="translated">或者你可以</target>
        </trans-unit>
        <trans-unit id="242daa76d32fe1291a06f3b0520926d68ab2cce2" translate="yes" xml:space="preserve">
          <source>Otherwise, there is nothing implicitly wrong with &lt;code&gt;.select&lt;/code&gt; itself and you can find uses for this easily, e.g. I have a spreadsheet that I populate with date, activate macro that does some magic with it and exports it in an acceptable format on a separate sheet, which, however, requires some final manual (unpredictable) inputs into an adjacent cell. So here comes the moment for &lt;code&gt;.select&lt;/code&gt; that saves me that additional mouse movement and click.</source>
          <target state="translated">否则， &lt;code&gt;.select&lt;/code&gt; 本身并没有任何隐含的错误，您可以轻松地找到用途，例如，我有一个填充有日期的电子表格，激活了一个可以做些魔术的宏，并以可接受的格式将其导出到另一张纸上，但是，这需要一些最终的手动（不可预测的）输入到相邻单元格中。 因此， &lt;code&gt;.select&lt;/code&gt; 的时刻到了，为我节省了更多的鼠标移动和单击。</target>
        </trans-unit>
        <trans-unit id="32b3a37f94a8c922d5c28e8c5a5f7c0bbdea6152" translate="yes" xml:space="preserve">
          <source>Pass ranges to your &lt;code&gt;Sub&lt;/code&gt;s and &lt;code&gt;Function&lt;/code&gt;s as Range variables</source>
          <target state="translated">将范围作为范围变量传递给 &lt;code&gt;Sub&lt;/code&gt; 和 &lt;code&gt;Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0abd2efbaeebc3f9874d726f6b5be41e099a7bb1" translate="yes" xml:space="preserve">
          <source>Please note that in the following I'm comparing the Select approach (the one that the OP wants to avoid), with the Range approach (and this is the answer to the question). So don't stop reading when you see the first Select.</source>
          <target state="translated">请注意,在下面我将Select方法(也就是OP想避免的方法)和Range方法(这就是问题的答案)进行比较。所以当你看到第一个Select的时候不要停止阅读。</target>
        </trans-unit>
        <trans-unit id="84b6d862dbab1b92cc220f9f74080e54427e1405" translate="yes" xml:space="preserve">
          <source>Probably the biggest thing you can do to avoid using Select is to &lt;strong&gt;&lt;em&gt;as much as possible, use named ranges (combined with meaningful variable names) in your VBA code&lt;/em&gt;&lt;/strong&gt;. This point was mentioned above, but glossed over a bit; however, it deserves special attention.</source>
          <target state="translated">可能要避免使用Select的最大方法是， &lt;strong&gt;&lt;em&gt;在VBA代码中尽可能地使用命名范围（结合有意义的变量名）&lt;/em&gt;&lt;/strong&gt; 。 上面已经提到了这一点，但略有掩饰。 但是，它值得特别注意。</target>
        </trans-unit>
        <trans-unit id="c19b9e55c4b41a683af84fb571d28868be5285ec" translate="yes" xml:space="preserve">
          <source>Quick Answer:</source>
          <target state="translated">快速回答:</target>
        </trans-unit>
        <trans-unit id="76837e683f1ab6c8eace2b2bf42966d8b27bd806" translate="yes" xml:space="preserve">
          <source>Similar to the previous example a minus 1 would be &lt;code&gt;i4&lt;/code&gt;</source>
          <target state="translated">与前面的示例类似，负1为 &lt;code&gt;i4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccaa5dfd9846264e3d7b54e960eb926a1df91b66" translate="yes" xml:space="preserve">
          <source>So to change the value of cell &quot;A1&quot; in &quot;Output&quot; to &quot;Hello&quot;, instead of:</source>
          <target state="translated">所以要把 &quot;输出 &quot;中 &quot;A1 &quot;单元格的值改为 &quot;Hello&quot;,而不是。</target>
        </trans-unit>
        <trans-unit id="6349bc802ce809cbc798d6a0e4404ab7b4fd0fb0" translate="yes" xml:space="preserve">
          <source>So, you can eliminate these issues by directly referencing your cells.  Which goes:</source>
          <target state="translated">所以,你可以通过直接引用你的细胞来消除这些问题。其中去。</target>
        </trans-unit>
        <trans-unit id="3317d77437344f8effb7824986e8599bc1c40a6f" translate="yes" xml:space="preserve">
          <source>Some examples of how to avoid select</source>
          <target state="translated">如何避免选择的一些例子</target>
        </trans-unit>
        <trans-unit id="71c86c440c43a975779bcd286f8334855549bb73" translate="yes" xml:space="preserve">
          <source>The &quot;Set wb = ThisWorkbook&quot; command is absolutely key. &quot;ThisWorkbook&quot; is a special value in Excel, and it means the workbook that your VBA code is &lt;em&gt;currently running from&lt;/em&gt;. A very helpful shortcut to set your Workbook variable with.</source>
          <target state="translated">&amp;ldquo;设置wb = ThisWorkbook&amp;rdquo;命令绝对是关键。 &amp;ldquo; ThisWorkbook&amp;rdquo;是Excel中的一个特殊值，它表示您的VBA代码&lt;em&gt;当前从中运行&lt;/em&gt;的工作簿。 一个非常有用的快捷方式，用于设置Workbook变量。</target>
        </trans-unit>
        <trans-unit id="5fee5abcdd7dbc77b9703f21e028afc5cb7a5c70" translate="yes" xml:space="preserve">
          <source>The actual code to process could be anything from a single line to multiple modules. I have used this method to initiate long running routines on a ragged selection of cells containing the filenames of external workbooks.</source>
          <target state="translated">实际要处理的代码可以是单行到多个模块。我曾用这种方法在一个包含外部工作簿文件名的单元格的粗略选择上启动长时间运行的例程。</target>
        </trans-unit>
        <trans-unit id="abe06f7a26cb0d5cb85b28afa84b21fb132154a3" translate="yes" xml:space="preserve">
          <source>The example from above would look like this:</source>
          <target state="translated">上面的例子是这样的。</target>
        </trans-unit>
        <trans-unit id="232e072f73db13abfe2c99fdf56f713a07b7b7bd" translate="yes" xml:space="preserve">
          <source>The main reason never to use Select or Activesheet is because most people will have at least another couple of workbooks open (sometimes dozens) when they run your macro, and if they click away from your sheet while your macro is running and click on some other book they have open, then the &quot;Activesheet&quot; changes, and the target workbook for an unqualified &quot;Select&quot; command changes as well.</source>
          <target state="translated">绝不使用Select或Activesheet的主要原因是,大多数人在运行宏时,至少还会有几个工作簿打开(有时是几十个),如果他们在运行宏时点击离开你的工作表,然后点击其他打开的工作簿,那么 &quot;Activesheet &quot;就会发生变化,而不合格的 &quot;Select &quot;命令的目标工作簿也会发生变化。</target>
        </trans-unit>
        <trans-unit id="2b87517a7b7db3e49616eda0b99c113c8df61e36" translate="yes" xml:space="preserve">
          <source>Then you can rewrite Macro2 as:</source>
          <target state="translated">那么你可以把Macro2改写成。</target>
        </trans-unit>
        <trans-unit id="5ccd7090c87aa3e8666028fc4b07152cb2712b92" translate="yes" xml:space="preserve">
          <source>There are times when having short, time-saving macro sub routines assigned to hot-key combinations available with the tap of a couple of keys saves a lot of time. Being able to select a group of cells to enact the operational code on works wonders when dealing with pocketed data that does not conform to a worksheet-wide data format. Much in the same way that you might select a group of cells and apply a format change, selecting a group of cells to run special macro code against can be a major time saver.</source>
          <target state="translated">有的时候,只需轻点几个键,就能为热键组合指定一个简短、省时的宏子例程,可以节省很多时间。能够选择一组单元格来执行操作代码,在处理不符合整个工作表数据格式的袋装数据时,效果非常好。就像您选择一组单元格并应用格式更改一样,选择一组单元格来运行特殊的宏代码可以大大节省时间。</target>
        </trans-unit>
        <trans-unit id="e09d2880bfcc8b2dffdda0f2fc4363c4a3bb96b6" translate="yes" xml:space="preserve">
          <source>There are various combinations of these methods, but that would be the general idea expressed as shortly as possible for impatient people like me.</source>
          <target state="translated">这些方法有多种组合,但这将是像我这样没有耐心的人尽快表达的一般想法。</target>
        </trans-unit>
        <trans-unit id="4a135e576f2a780630edd1a83b84c56e5ce6b835" translate="yes" xml:space="preserve">
          <source>These aren't to say they are &quot;better&quot; than the above options, but just listing alternatives.</source>
          <target state="translated">这些并不是说它们比上面的选项 &quot;好&quot;,只是列举了替代品。</target>
        </trans-unit>
        <trans-unit id="60a34910e232eb57b418886648c46ba303e02e75" translate="yes" xml:space="preserve">
          <source>These methods are rather stigmatized, so taking the lead of @Vityata and @Jeeped for the sake of drawing a line in the sand:</source>
          <target state="translated">这些方法都是比较污名化的,所以采取@Vityata和@Jeeped的方法,是为了画龙点睛。</target>
        </trans-unit>
        <trans-unit id="929bf8332f019b9414f7499db2ba21af5d19d7a3" translate="yes" xml:space="preserve">
          <source>This code can also be written as</source>
          <target state="translated">这个代码也可以写成</target>
        </trans-unit>
        <trans-unit id="8f3ca10303fe3f18ca0db94d265c340831916367" translate="yes" xml:space="preserve">
          <source>This code will work just fine at first - that is until you or a future user decides &quot;gee wiz, I think I'm going to add a new column with the year in Column &lt;code&gt;A&lt;/code&gt;!&quot;, or put an expenses column between the months and sales columns, or add a header to each column. Now, your code is broken. And because you used terrible variable names, it will take you a lot more time to figure out how to fix it than it should take.</source>
          <target state="translated">这段代码起初会很好用-直到您或未来的用户决定&amp;ldquo;老兄，我想我要在 &lt;code&gt;A&lt;/code&gt; 列中添加年份的新列！&amp;rdquo;，或在月份之间插入费用列和销售列，或为每个列添加标题。 现在，您的代码已损坏。 而且由于使用了可怕的变量名，因此花了更多的时间弄清楚如何解决它，而不是应该花的时间。</target>
        </trans-unit>
        <trans-unit id="eacc091cdbc76177f176d8b0e9bd243614c3c187" translate="yes" xml:space="preserve">
          <source>This is a small taster for what's possible.</source>
          <target state="translated">这是个小试牛刀的可能。</target>
        </trans-unit>
        <trans-unit id="ae0989b74e24d3660df0f50524cb9716b7eda992" translate="yes" xml:space="preserve">
          <source>This is an example that will clear the contents of cell &quot;A1&quot; (or more if the selection type is xllastcell, etc). All done without having to select the cells.</source>
          <target state="translated">这是一个例子,可以清除 &quot;A1 &quot;单元格的内容(如果选择类型是xllastcell等,则可以清除更多的内容)。所有这些都是在不选择单元格的情况下完成的。</target>
        </trans-unit>
        <trans-unit id="762ebf2457ee279a98fd5649ebb9cbc3cd6a7b9d" translate="yes" xml:space="preserve">
          <source>This is bad:</source>
          <target state="translated">这下可糟了。</target>
        </trans-unit>
        <trans-unit id="0d41dbd9ad4957e46b3782cd01ec1fafee48d61f" translate="yes" xml:space="preserve">
          <source>This is probably the most common mistake in &lt;a href=&quot;/questions/tagged/vba&quot;&gt;vba&lt;/a&gt;. Whenever you copy ranges, sometimes the worksheet is not referenced and thus VBA considers the wrong sheet the ActiveWorksheet.</source>
          <target state="translated">这可能是&lt;a href=&quot;/questions/tagged/vba&quot;&gt;vba中&lt;/a&gt;最常见的错误。 每当您复制范围时，有时都不会引用工作表，因此VBA会将错误的工作表视为ActiveWorksheet。</target>
        </trans-unit>
        <trans-unit id="5e122b50935040e5fd1d6401fcf8c058d49ea198" translate="yes" xml:space="preserve">
          <source>This will change the cell &lt;code&gt;J6&lt;/code&gt; to be a value of 12</source>
          <target state="translated">这会将单元格 &lt;code&gt;J6&lt;/code&gt; 的值更改为12</target>
        </trans-unit>
        <trans-unit id="08d9486971b376a463a863dc46d7024a72f24f2e" translate="yes" xml:space="preserve">
          <source>This will clear values in all cells in the column k.</source>
          <target state="translated">这将清除k列中所有单元格中的值。</target>
        </trans-unit>
        <trans-unit id="20b8048458adb606f2b1e1a196e5e1d0910514c8" translate="yes" xml:space="preserve">
          <source>This will copy the cell in &lt;code&gt;k4&lt;/code&gt; to &lt;code&gt;L4&lt;/code&gt;.</source>
          <target state="translated">这会将 &lt;code&gt;k4&lt;/code&gt; 中的单元格复制到 &lt;code&gt;L4&lt;/code&gt; 中 。</target>
        </trans-unit>
        <trans-unit id="c4280da2552c89b41daaf9e638bcff148983122b" translate="yes" xml:space="preserve">
          <source>Thus, something like the code below is absolutely OK:</source>
          <target state="translated">因此,像下面这样的代码绝对是可以的。</target>
        </trans-unit>
        <trans-unit id="b29db0a9ebce0d821cd293ea4647e15fe52b8f73" translate="yes" xml:space="preserve">
          <source>To avoid using the &lt;code&gt;.Select&lt;/code&gt; method you can set a variable equal to the property that you want.</source>
          <target state="translated">为了避免使用 &lt;code&gt;.Select&lt;/code&gt; 方法，可以将变量设置为等于所需的属性。</target>
        </trans-unit>
        <trans-unit id="7e7fbc811015943c1c30e7ceeea8b05c76a8ee58" translate="yes" xml:space="preserve">
          <source>To:</source>
          <target state="translated">To:</target>
        </trans-unit>
        <trans-unit id="b5d0d629ad0e2b5237278acee2d84781c70e9023" translate="yes" xml:space="preserve">
          <source>Try always to reference the Worksheet as well</source>
          <target state="translated">试着经常参考工作表</target>
        </trans-unit>
        <trans-unit id="820d37aca0668bb02b9cb9b9176812569cde5943" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Dim&lt;/code&gt;'d variables</source>
          <target state="translated">使用 &lt;code&gt;Dim&lt;/code&gt; 'd变量</target>
        </trans-unit>
        <trans-unit id="8c02248d1ef375250bb52904ec3aa6867866086e" translate="yes" xml:space="preserve">
          <source>Using Ranges you can write a more generic macro that can be used to set the value of any cell you want to whatever you want:</source>
          <target state="translated">使用Ranges,你可以编写一个更通用的宏,可以将任何单元格的值设置为你想要的任何值。</target>
        </trans-unit>
        <trans-unit id="a1d131a998e15e990e02311e0e95ed6f9b0aaa23" translate="yes" xml:space="preserve">
          <source>Using fancy named ranges</source>
          <target state="translated">使用花式命名的范围</target>
        </trans-unit>
        <trans-unit id="6d9d1adab2b726167f433785499507aa1f2706a1" translate="yes" xml:space="preserve">
          <source>Usually, if you are willing to &lt;code&gt;select&lt;/code&gt;, most probably you are copying something. If you are only interested in the values, this is a good option to avoid select:</source>
          <target state="translated">通常，如果您愿意 &lt;code&gt;select&lt;/code&gt; ，则很可能是在复制某些内容。 如果您仅对值感兴趣，这是避免选择的好方法：</target>
        </trans-unit>
        <trans-unit id="62f1316df6e963f4c1cb189f5c550cf5322ce17d" translate="yes" xml:space="preserve">
          <source>We can now do this:</source>
          <target state="translated">我们现在可以这样做了。</target>
        </trans-unit>
        <trans-unit id="3db9289846abc2602cc47e2f88e6fd49aa2e29fc" translate="yes" xml:space="preserve">
          <source>When a command only works with &lt;code&gt;ActiveWindow&lt;/code&gt; like &lt;a href=&quot;https://github.com/Vitosh/VBA_personal/blob/master/Boilerplate/Boilerplate%20VitoshAcademy/tblInput.vb&quot;&gt;ActiveWindow.Zoom&lt;/a&gt; or &lt;a href=&quot;https://github.com/Vitosh/VBA_personal/blob/master/Boilerplate/Boilerplate%20VitoshAcademy/ExcelAdditional.bas&quot;&gt;ActiveWindow.FreezePanes&lt;/a&gt;</source>
          <target state="translated">当命令仅适用于 &lt;code&gt;ActiveWindow&lt;/code&gt; (如&lt;a href=&quot;https://github.com/Vitosh/VBA_personal/blob/master/Boilerplate/Boilerplate%20VitoshAcademy/tblInput.vb&quot;&gt;ActiveWindow.Zoom&lt;/a&gt;或&lt;a href=&quot;https://github.com/Vitosh/VBA_personal/blob/master/Boilerplate/Boilerplate%20VitoshAcademy/ExcelAdditional.bas&quot;&gt;ActiveWindow.FreezePanes）时&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="664c3ec1724c39e9d817d23e1add267175c2243c" translate="yes" xml:space="preserve">
          <source>When to call &lt;code&gt;.Activate&lt;/code&gt;, &lt;code&gt;.Select&lt;/code&gt;, &lt;code&gt;.Selection&lt;/code&gt;, &lt;code&gt;.ActiveSomething&lt;/code&gt; methods/properties</source>
          <target state="translated">何时调用 &lt;code&gt;.Activate&lt;/code&gt; ， &lt;code&gt;.Select&lt;/code&gt; ， &lt;code&gt;.ActiveSomething&lt;/code&gt; ， .ActiveSomething方法/属性</target>
        </trans-unit>
        <trans-unit id="18f1fbe694af57d98b927314b300825941887eef" translate="yes" xml:space="preserve">
          <source>When you want to copy range between worksheets:</source>
          <target state="translated">当你想在工作表之间复制范围。</target>
        </trans-unit>
        <trans-unit id="ba9b0865f911659398740f3174b15810ea5acab0" translate="yes" xml:space="preserve">
          <source>Which is not only much more reliable and less likely to crash if the user is working with multiple spreadsheets, it's also much shorter, quicker and easier to write.</source>
          <target state="translated">如果用户在使用多个电子表格工作时,不仅可靠性更高,更不容易崩溃,而且更短、更快、更容易编写。</target>
        </trans-unit>
        <trans-unit id="09932fb3aef04cea54af61c310221424cea0a4e5" translate="yes" xml:space="preserve">
          <source>While I cannot think of any more than an isolated handful of situations where &lt;code&gt;.Select&lt;/code&gt; would be a better choice than direct cell referencing, I would rise to the defense of &lt;code&gt;Selection&lt;/code&gt; and point out that it should not be thrown out for the same reasons that &lt;code&gt;.Select&lt;/code&gt; should be avoided.</source>
          <target state="translated">虽然我只想到少数情况， &lt;code&gt;.Select&lt;/code&gt; 比直接单元格引用是更好的选择，但我会提起选择的辩护，并指出不应出于相同的原因而将其丢弃 &lt;code&gt;.Select&lt;/code&gt; 应该避免选择 。</target>
        </trans-unit>
        <trans-unit id="0a6152210d03ead206f38c1da3eb6a5db226d13c" translate="yes" xml:space="preserve">
          <source>Why is this important? Partially because it is easier for other people to understand it, but even if you are the only person who will ever see or use your code, you should still use named ranges and good variable names because &lt;strong&gt;&lt;em&gt;YOU WILL FORGET&lt;/em&gt;&lt;/strong&gt; what you meant to do with it a year later, and &lt;strong&gt;&lt;em&gt;you will waste&lt;/em&gt;&lt;/strong&gt; 30 minutes just figuring out what your code is doing.</source>
          <target state="translated">为什么这很重要？ 部分原因是因为它使其他人更容易理解它，但是即使您是唯一会看到或使用您的代码的人，您仍应使用命名范围和良好的变量名，因为&lt;strong&gt;&lt;em&gt;您将忘记&lt;/em&gt;&lt;/strong&gt;使用它的意图一年后， &lt;strong&gt;&lt;em&gt;您将花费&lt;/em&gt;&lt;/strong&gt; 30分钟来弄清楚您的代码在做什么。</target>
        </trans-unit>
        <trans-unit id="132048d27141895d32dea0e4d12d74cb144590fd" translate="yes" xml:space="preserve">
          <source>Why not call &lt;code&gt;.Activate&lt;/code&gt;, &lt;code&gt;.Select&lt;/code&gt;, &lt;code&gt;Selection&lt;/code&gt;, &lt;code&gt;ActiveSomething&lt;/code&gt; methods/properties</source>
          <target state="translated">为什么不调用 &lt;code&gt;.Activate&lt;/code&gt; ， &lt;code&gt;.Select&lt;/code&gt; ， &lt;code&gt;Selection&lt;/code&gt; ， &lt;code&gt;ActiveSomething&lt;/code&gt; 方法/属性</target>
        </trans-unit>
        <trans-unit id="e17d9b760fa5d36bbd15d9bca87074516c81d248" translate="yes" xml:space="preserve">
          <source>Working with .Parent feature. This example shows how setting only one myRng reference enables dynamic access to the entire environment with no .Select, .Activate, .Activecell, .ActiveWorkbook, .ActiveSheet and so on. (There's no genereic .Child feature)</source>
          <target state="translated">使用.Parent功能。这个例子显示了如何只设置一个myRng引用就可以动态访问整个环境,没有.Select,.Activate,.Activecell,.ActiveWorkbook,.ActiveSheet等功能。(没有遗传的.Child功能)</target>
        </trans-unit>
        <trans-unit id="1508720ece33c2584914411ccc009c19c7e36381" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;can&lt;/em&gt; use the shortcut to the &lt;code&gt;Evaluate&lt;/code&gt; method, but this is less efficient and should generally be avoided in production code.</source>
          <target state="translated">您&lt;em&gt;可以&lt;/em&gt;使用 &lt;code&gt;Evaluate&lt;/code&gt; 方法的快捷方式，但这效率较低，通常应在生产代码中避免。</target>
        </trans-unit>
        <trans-unit id="a1de300f4a1c4b4c7e7122036a1192f5eb62c4eb" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;ThisWorkbook&lt;/code&gt; object to refer to the book containing the running code.</source>
          <target state="translated">您还可以使用 &lt;code&gt;ThisWorkbook&lt;/code&gt; 对象来引用包含运行代码的书。</target>
        </trans-unit>
        <trans-unit id="1b0f18f5b5700344d106581cc1ef1edf1a937cde" translate="yes" xml:space="preserve">
          <source>You don't know what other workbooks will be open when the user runs your code.</source>
          <target state="translated">当用户运行你的代码时,你不知道还有哪些工作簿会被打开。</target>
        </trans-unit>
        <trans-unit id="b567a50d846bbc185751ba49c0c391aab667ea78" translate="yes" xml:space="preserve">
          <source>You may access them with &lt;code&gt;[]&lt;/code&gt;, which is really beautiful, compared to the other way. Check yourself:</source>
          <target state="translated">您可以使用 &lt;code&gt;[]&lt;/code&gt; 来访问它们，与其他方法相比，它确实很漂亮。 自行检查：</target>
        </trans-unit>
        <trans-unit id="45f73eb1e95dbceb0d425d807da5afe4b3ce6e16" translate="yes" xml:space="preserve">
          <source>You should also apply Methods (such as &lt;code&gt;Find&lt;/code&gt; and &lt;code&gt;Copy&lt;/code&gt;) to variables</source>
          <target state="translated">您还应该将方法（例如 &lt;code&gt;Find&lt;/code&gt; 和 &lt;code&gt;Copy&lt;/code&gt; ）应用于变量</target>
        </trans-unit>
        <trans-unit id="d2f66f82c75e0adb5a4b880874806ebe3f59a263" translate="yes" xml:space="preserve">
          <source>You'll get .select and .activate whenever you record macros and reuse them.  When you .select a cell or sheet it just makes it active.  From that point on whenever you use unqualified references like &lt;code&gt;Range.Value&lt;/code&gt; they just use the active cell and sheet.  This can also be problematic if you don't watch where your code is placed or a user clicks on the workbook.</source>
          <target state="translated">录制宏并重复使用它们时，您将获得.select和.activate。 当您选择一个单元格或工作表时，只会使其处于活动状态。 从那时起，只要您使用不合格的引用（例如 &lt;code&gt;Range.Value&lt;/code&gt; ),它们就只会使用活动单元格和工作表。 如果您不注意代码的放置位置或用户单击工作簿，这也会造成问题。</target>
        </trans-unit>
        <trans-unit id="7e2fb968a45f3910e02ba7ce0b0ea0809f985cc3" translate="yes" xml:space="preserve">
          <source>for example</source>
          <target state="translated">比如说</target>
        </trans-unit>
        <trans-unit id="0ebdc211de2dfa5eadfec7af61e45b784eadf3f9" translate="yes" xml:space="preserve">
          <source>or a multi-cell range</source>
          <target state="translated">或多细胞范围</target>
        </trans-unit>
        <trans-unit id="db79665cffa616a326a2d28c638db4c3d9635d03" translate="yes" xml:space="preserve">
          <source>► For instance, if you want the codename of 'Sheet3` you could set a variable equal to the codename property of that worksheet.</source>
          <target state="translated">例如,如果你想要'Sheet3'的代号,你可以设置一个变量等于该工作表的代号属性。</target>
        </trans-unit>
        <trans-unit id="0c76659031ced3ca2a500590e56bef41650de411" translate="yes" xml:space="preserve">
          <source>► For instance, if you want the value in &lt;code&gt;Cell A1&lt;/code&gt; you could set a variable equal to the value property of that cell.</source>
          <target state="translated">►例如，如果要获取 &lt;code&gt;Cell A1&lt;/code&gt; 的值，则可以设置一个等于该单元格的value属性的变量。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
