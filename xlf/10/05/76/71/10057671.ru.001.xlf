<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/10057671">
    <body>
      <group id="10057671">
        <trans-unit id="431a49cdeeb4d9cc84db522a2a5c3a2cdef9de47" translate="yes" xml:space="preserve">
          <source>(*) Incrementing the &lt;code&gt;refcount&lt;/code&gt; here sounds innocuous, but violates copy-on-write (COW) semantics: This means that we are going to modify the IAP of a refcount=2 array, while COW dictates that modifications can only be performed on refcount=1 values. This violation results in user-visible behavior change (while a COW is normally transparent) because the IAP change on the iterated array will be observable -- but only until the first non-IAP modification on the array. Instead, the three &quot;valid&quot; options would have been a) to always duplicate, b) do not increment the &lt;code&gt;refcount&lt;/code&gt; and thus allowing the iterated array to be arbitrarily modified in the loop or c) don't use the IAP at all (the PHP 7 solution).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(*) &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; здесь &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;refcount&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; звучит безобидно, но нарушает семантику копирования при записи (COW): это означает, что мы собираемся изменить IAP массива refcount = 2, в то время как COW требует, чтобы изменения могли выполняться только на refcount = 1 значения. Это нарушение приводит к изменению поведения, видимому пользователю (в то время как COW обычно прозрачна), потому что изменение IAP в итерированном массиве будет наблюдаться - но только до первой не-IAP модификации в массиве. Вместо этого тремя &amp;laquo;действительными&amp;raquo; вариантами было бы: а) всегда дублировать, б) не увеличивать счет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и, таким образом, позволить произвольному изменению повторяющегося массива в цикле, или в) вообще не использовать IAP ( Решение PHP 7).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d2e82db9cb7a24724aefb22e69a8ef395189a72" translate="yes" xml:space="preserve">
          <source>...nothing that unexpected there, in fact it seems to support the &quot;copy of source&quot; theory.</source>
          <target state="translated">...там нет ничего неожиданного,на самом деле это,кажется,поддерживает теорию &quot;копии источника&quot;.</target>
        </trans-unit>
        <trans-unit id="f4497a3a12ac079d6abeb450ebe7f0a4fed04110" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/6n20ooMy&quot;&gt;Test case 3&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/6n20ooMy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тестовый пример 3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b69a24985ff01a40a778deb19291c02020c185b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;Test case 1&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тестовый пример 1&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b296351ad09fc5da5b353a825af3c80241645fce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/IfwJyTCL&quot;&gt;Test case 5&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/IfwJyTCL&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тестовый пример 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9f341ef07206e6d5fe4744f7d24db0a9be7420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/JJp79xSd&quot;&gt;Test case 4&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/JJp79xSd&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Контрольный пример 4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4dfe8c8ddf3994b7c27afe0d0d0c0df19fe1f5ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/nirz6Ufh&quot;&gt;Test case 2&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/nirz6Ufh&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Контрольный пример 2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92450a86cebc52bf0c89fb24add8360ca746b9b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/Traversable&quot;&gt;&lt;code&gt;Traversable&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">&lt;a href=&quot;http://php.net/Traversable&quot;&gt; &lt;code&gt;Traversable&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объекты&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="908655cd3ea9b530395773a64ca419f237ea537f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$array&lt;/code&gt; have only single element, so as per the foreach execution, 1 assign to &lt;code&gt;$v&lt;/code&gt; and it don't have any other element to move pointer</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет только один элемент, поэтому при выполнении foreach 1 присваивается &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и у него нет другого элемента для перемещения указателя&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="938010d83c888eb8143f06ce28fb347711f9b87f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$array&lt;/code&gt; have two element, so now $array evaluate the zero indices and move the pointer by one. For first iteration of loop, added &lt;code&gt;$array['baz']=3;&lt;/code&gt; as pass by reference.</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет два элемента, поэтому теперь $ array вычисляет нулевые индексы и перемещает указатель на единицу &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для первой итерации цикла добавлено &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array['baz']=3;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как передать по ссылке.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1affd49fa1fb528431442ca255c166508d81d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; supports iteration over three different kinds of values:</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; поддерживает итерацию по трем различным типам значений:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abb2ca0c1e4616efa3f2efd4269ebebd90ad1322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation (quote from &lt;a href=&quot;http://www.php.net/manual/en/control-structures.foreach.php&quot;&gt;php.net&lt;/a&gt;):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пояснение (цитата из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;php.net&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a4d3bc1f85063b4a7a1f3955f1173eaa16593fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE FOR PHP 7&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ПРИМЕЧАНИЕ ДЛЯ PHP 7&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1fb7fa83cec2cb2b2385d7b48d3c6aa0f897abb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It does not allow &lt;code&gt;original array indexes&lt;/code&gt; to be used as &lt;code&gt;references&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Примечание.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Он не позволяет использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;original array indexes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в качестве &lt;/font&gt;&lt;/font&gt; &lt;code&gt;references&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e390762dc699d870f965a304fb7cfab2643240d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test case&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Прецедент&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="064c7a4ed7767e83cfb50fc272e79514ccda566e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вопрос&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8eaecf9e823bcd133564dce45ba4540f14164da4" translate="yes" xml:space="preserve">
          <source>A good way to show the various duplication behaviors is to observe the behavior of the  &lt;code&gt;current()&lt;/code&gt; function inside a &lt;code&gt;foreach&lt;/code&gt; loop. Consider this example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хороший способ показать различные варианты дублирования - наблюдать за поведением функции &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;цикла &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Рассмотрим этот пример:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="236e1d04f916381e46584894a84e93c220049445" translate="yes" xml:space="preserve">
          <source>Another consequence of the &lt;code&gt;HashPointer&lt;/code&gt; backup+restore mechanism is that changes to the IAP through &lt;code&gt;reset()&lt;/code&gt; etc. usually do not impact &lt;code&gt;foreach&lt;/code&gt;. For example, the following code executes as if the &lt;code&gt;reset()&lt;/code&gt; were not present at all:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другое последствие &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; резервного копирования и восстановления &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HashPointer&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заключается в том, что изменения в IAP с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и т. Д. Обычно не влияют на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, следующий код выполняется так, как если бы &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вообще не присутствовал:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea6e6c9833112d231a15e75686626599f59cf2f4" translate="yes" xml:space="preserve">
          <source>Another important change between PHP 5 and PHP 7 relates to array duplication. Now that the IAP is no longer used, by-value array iteration will only do a &lt;code&gt;refcount&lt;/code&gt; increment (instead of duplication the array) in all cases. If the array is modified during the &lt;code&gt;foreach&lt;/code&gt; loop, at that point a duplication will occur (according to copy-on-write) and &lt;code&gt;foreach&lt;/code&gt; will keep working on the old array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Другое важное изменение между PHP 5 и PHP 7 связано с дублированием массива. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь, когда IAP больше не используется, итерация массива по значению &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;во всех случаях &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;будет делать только &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; приращения (вместо дублирования массива). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если массив модифицируется во время &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;цикла &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , в этот момент произойдет дублирование (в соответствии с копированием при записи), и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; продолжит работать со старым массивом.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30f8495f70ccc77cad7c101cec7ef97f79d5b290" translate="yes" xml:space="preserve">
          <source>Another small variation, this time we'll assign the array to another variable:</source>
          <target state="translated">Еще одна небольшая вариация,на этот раз мы присвоим массив другой переменной:</target>
        </trans-unit>
        <trans-unit id="6061b59ca687ed0aca907a08cf7627241a0b0ecc" translate="yes" xml:space="preserve">
          <source>Another weird edge case that is fixed now, is the odd effect you get when you remove and add elements that happen to have the same hash:</source>
          <target state="translated">Еще один странный крайний случай,который сейчас исправлен,это странный эффект,который вы получаете,когда вы удаляете и добавляете элементы,которые случайно имеют тот же самый хэш:</target>
        </trans-unit>
        <trans-unit id="7b3c4b65d9376f8f346fae1a7e1f345e86a60260" translate="yes" xml:space="preserve">
          <source>Any changes from the original can't be notices, actually there are no changes from the original, even though you clearly assigned a value to $item. This is because you are operating on $item as it appears in the copy of $set being worked on. You can override this by grabbing $item by reference, like so:</source>
          <target state="translated">Любые изменения из оригинала не могут быть замечены,на самом деле нет никаких изменений из оригинала,даже если вы явно присвоили значение $item.Это потому,что вы работаете с $item,как он появляется в копии $set,над которым вы работаете.Вы можете переопределить это,взяв $item по ссылке,например,так:</target>
        </trans-unit>
        <trans-unit id="35db9b2dbbaebbc8cf821369cbcf483b3bfde43a" translate="yes" xml:space="preserve">
          <source>Array duplication</source>
          <target state="translated">Дублирование массивов</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="823c6eac545f4e9f53730659ec02d448a1a05736" translate="yes" xml:space="preserve">
          <source>Arrays in PHP 5 have one dedicated &quot;internal array pointer&quot; (IAP), which properly supports modifications: Whenever an element is removed, there will be a check whether the IAP points to this element. If it does, it is advanced to the next element instead.</source>
          <target state="translated">Массивы в PHP 5 имеют один выделенный &quot;внутренний указатель на массив&quot; (IAP),который правильно поддерживает модификации:Всякий раз,когда элемент удаляется,проверяется,указывает ли IAP на этот элемент.Если да,то вместо этого она переходит к следующему элементу.</target>
        </trans-unit>
        <trans-unit id="f75e47ce74e53d29a3f08bdad31252a7f301d27e" translate="yes" xml:space="preserve">
          <source>As a last preliminary, it should be noted that PHP uses reference counting and copy-on-write to manage memory. This means that if you &quot;copy&quot; a value, you actually just reuse the old value and increment its reference count (refcount). Only once you perform some kind of modification a real copy (called a &quot;duplication&quot;) will be done. See &lt;a href=&quot;http://blog.golemon.com/2007/01/youre-being-lied-to.html&quot;&gt;You're being lied to&lt;/a&gt; for a more extensive introduction on this topic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В качестве последнего предварительного замечания следует отметить, что PHP использует подсчет ссылок и копирование при записи для управления памятью. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что если вы &amp;laquo;копируете&amp;raquo; значение, вы фактически просто повторно используете старое значение и увеличиваете его счетчик ссылок (refcount). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Только после того, как вы выполните какую-либо модификацию, будет сделана настоящая копия (называемая &amp;laquo;дублирование&amp;raquo;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;См. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.golemon.com/2007/01/youre-being-lied-to.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вам лгут&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для более обширного введения в эту тему.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="542892a9365ec273fecd375c7e489fa48476131d" translate="yes" xml:space="preserve">
          <source>As foreach relies on the internal array pointer changing it within the loop may lead to unexpected behavior.</source>
          <target state="translated">Поскольку foreach полагается на внутренний указатель массива,его изменение в цикле может привести к неожиданному поведению.</target>
        </trans-unit>
        <trans-unit id="baa3dd2721745beae2d7d04883df796d03dc88ac" translate="yes" xml:space="preserve">
          <source>As it is shown in the example, PHP copied $set and used it to loop over, but when $set was used inside the loop, PHP added the variables to the original array, not the copied array. Basically, PHP is only using the copied array for the execution of the loop and the assignment of $item. Because of this, the loop above only executes 3 times, and each time it appends another value to the end of the original $set, leaving the original $set with 6 elements, but never entering an infinite loop.</source>
          <target state="translated">Как показано в примере,PHP скопировал $set и использовал его для зацикливания,но когда $set использовался внутри цикла,PHP добавил переменные в исходный массив,а не в скопированный.В принципе,PHP использует скопированный массив только для выполнения цикла и присвоения $item.Из-за этого вышеприведенный цикл выполняется только 3 раза,и каждый раз в конце исходного $set добавляется еще одно значение,оставляя исходный $set с 6 элементами,но никогда не входя в бесконечный цикл.</target>
        </trans-unit>
        <trans-unit id="ab66544e20bcc6d22c26b016a5bf97297360d4e1" translate="yes" xml:space="preserve">
          <source>As per the documentation provided by PHP manual.</source>
          <target state="translated">В соответствии с документацией,предоставленной руководством по PHP.</target>
        </trans-unit>
        <trans-unit id="9e594b71f6bced954d7ae590b3a25fb57f21e1c4" translate="yes" xml:space="preserve">
          <source>As you can see in this case PHP will just start iterating the other entity from the start once the substitution has happened.</source>
          <target state="translated">Как вы видите,в этом случае PHP просто начнет итерацию другой сущности с самого начала,как только произойдет подстановка.</target>
        </trans-unit>
        <trans-unit id="20f262f66c271e4ab3c91dc621f3473494822a99" translate="yes" xml:space="preserve">
          <source>As you can see, the outer loop no longer aborts after the first iteration. The reason is that both loops now have entirely separate hashtable iterators, and there is no longer any cross-contamination of both loops through a shared IAP.</source>
          <target state="translated">Как видите,внешний контур больше не прерывается после первой итерации.Причина в том,что оба цикла теперь имеют полностью отдельные хэшируемые итераторы,и больше нет перекрестного загрязнения обоих циклов через общую ВБД.</target>
        </trans-unit>
        <trans-unit id="a96acebafe34ace0cbf6ab97e41de8fa2b59af23" translate="yes" xml:space="preserve">
          <source>Besides this, php does allow to use &lt;code&gt;iterated values as a reference to the original array value&lt;/code&gt; as well. This is demonstrated below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Помимо этого, php также позволяет использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;iterated values as a reference to the original array value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это продемонстрировано ниже:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c1322fef9f585e5e7154becbb7d1228383785b9" translate="yes" xml:space="preserve">
          <source>But in your second example:</source>
          <target state="translated">Но во втором примере:</target>
        </trans-unit>
        <trans-unit id="61cf77a4a315dd7e9e2390f03668bfecb9f6a3df" translate="yes" xml:space="preserve">
          <source>But, those examples are still sane. The real fun starts if you remember that the &lt;code&gt;HashPointer&lt;/code&gt; restore uses a pointer to the element and its hash to determine whether it still exists. But: Hashes have collisions, and pointers can be reused! This means that, with a careful choice of array keys, we can make &lt;code&gt;foreach&lt;/code&gt; believe that an element that has been removed still exists, so it will jump directly to it. An example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но эти примеры все еще нормальны. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Самое интересное начинается, если вы помните, что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;восстановление &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует указатель на элемент и его хеш, чтобы определить, существует ли он до сих пор. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но: у хэшей есть коллизии, и указатели можно использовать повторно! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что при тщательном выборе ключей массива мы можем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , что удаленный элемент все еще существует, поэтому он сразу перейдет к нему. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пример:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a873ee1119a94396aced11abeb0cd2d2207ad6e6" translate="yes" xml:space="preserve">
          <source>Coming back to your test cases, you can easily imagine that &lt;code&gt;foreach&lt;/code&gt; creates some kind of iterator with a reference to the array. This reference works exactly like the variable &lt;code&gt;$b&lt;/code&gt; in my example. However, the iterator along with the reference live only during the loop and then, they are both discarded. Now you can see that, in all cases but 3, the array is modified during the loop, while this extra reference is alive. This triggers a clone, and that explains what's going on here!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Возвращаясь к вашим тестам, вы можете легко представить, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; создает некий итератор со ссылкой на массив. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта ссылка работает точно так же, как переменная &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в моем примере. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тем не менее, итератор вместе со ссылкой живут только во время цикла, а затем они оба сбрасываются. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь вы можете видеть, что во всех случаях, кроме 3, массив изменяется во время цикла, пока эта дополнительная ссылка активна. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это вызывает клон, и это объясняет, что здесь происходит!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd1908e73fa068ba357e7b95d943c7ecfbd21234" translate="yes" xml:space="preserve">
          <source>Consider these nested loops over the same array (where by-ref iteration is used to make sure it really is the same one):</source>
          <target state="translated">Рассмотрим эти вложенные циклы по одному и тому же массиву (где используется побочная итерация,чтобы убедиться,что это действительно один и тот же массив):</target>
        </trans-unit>
        <trans-unit id="befcb9dd75c6dd0a10f8bd95a14d34e8993a4204" translate="yes" xml:space="preserve">
          <source>Consider this code as an example where duplication occurs:</source>
          <target state="translated">Рассмотрим данный код как пример,где происходит дублирование:</target>
        </trans-unit>
        <trans-unit id="57d82a24fd4de958c3356e0910b2308cb05d3c6e" translate="yes" xml:space="preserve">
          <source>Detailed explanation can be read at &lt;a href=&quot;https://stackoverflow.com/questions/10057671/how-foreach-actually-works&quot;&gt;How does PHP 'foreach' actually work?&lt;/a&gt; which explains the internals behind this behaviour.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Подробное объяснение можно прочитать в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10057671/how-foreach-actually-works&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;разделе Как работает PHP 'foreach'? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;который объясняет внутренности этого поведения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="7ec6a83aa93501181bc76d815fd97e699db2e256" translate="yes" xml:space="preserve">
          <source>Examples: Effects of &lt;code&gt;current&lt;/code&gt; in foreach</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Примеры: влияние &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в foreach&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d80b3f40876bd05acd5f02160f3241ab742c26e" translate="yes" xml:space="preserve">
          <source>Examples: Modification during iteration</source>
          <target state="translated">Примеры:Модификация во время итерации</target>
        </trans-unit>
        <trans-unit id="7014583239968e6f988f3c793a9d2a3bc8292bd9" translate="yes" xml:space="preserve">
          <source>Examples: Your test cases</source>
          <target state="translated">Примеры:Ваши тестовые случаи</target>
        </trans-unit>
        <trans-unit id="eaf82d3114000fbe7543dd6911539ba662528cba" translate="yes" xml:space="preserve">
          <source>For a long time I assumed that &lt;code&gt;foreach&lt;/code&gt; worked with the array itself. Then I found many references to the fact that it works with a &lt;em&gt;copy&lt;/em&gt; of the array, and I have since assumed this to be the end of the story. But I recently got into a discussion on the matter, and after a little experimentation found that this was not in fact 100% true.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Долгое время я предполагал, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работает с самим массивом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем я обнаружил много ссылок на тот факт, что он работает с &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;копией&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; массива, и с тех пор я предположил, что это конец истории. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но я недавно вступил в дискуссию по этому вопросу, и после небольшого эксперимента обнаружил, что на самом деле это не на 100% верно.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99743dc1e1b371509b02b41756d7ef22f8ef3712" translate="yes" xml:space="preserve">
          <source>For internal classes, actual method calls are avoided by using an internal API that essentially just mirrors the &lt;code&gt;Iterator&lt;/code&gt; interface on the C level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для внутренних классов фактические вызовы методов избегаются с помощью внутреннего API, который по существу просто отражает &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;интерфейс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на уровне C.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96beb39c41bbc50dd98ec331cb5f6ba16ae93074" translate="yes" xml:space="preserve">
          <source>Great question, because many developers, even experienced ones, are confused by the way PHP handles arrays in foreach loops. In the standard foreach loop, PHP makes a copy of the array that is used in the loop. The copy is discarded immediately after the loop finishes. This is transparent in the operation of a simple foreach loop. 
For example:</source>
          <target state="translated">Отличный вопрос,потому что многие разработчики,даже опытные,запутались в том,как PHP работает с массивами в форач-циклах.В стандартном форач-цикле PHP делает копию массива,который используется в цикле.Копия отбрасывается сразу после завершения цикла.Это прозрачно в работе простого форекс-цикла.Например:</target>
        </trans-unit>
        <trans-unit id="75618f2aca443a65c28cb788bdb7a31c7622b2b8" translate="yes" xml:space="preserve">
          <source>Hashtable iterators</source>
          <target state="translated">хештабельные итераторы</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">Вот пример:</target>
        </trans-unit>
        <trans-unit id="58bc8215af40743629373e4bc4e87df55c794abe" translate="yes" xml:space="preserve">
          <source>Here is an excellent article for another side effect of this copy-on-write behaviour: &lt;a href=&quot;http://fabien.potencier.org/article/48/the-php-ternary-operator-fast-or-not&quot;&gt;The PHP Ternary Operator: Fast or not?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот отличная статья для еще одного побочного эффекта этого поведения копирования при записи: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://fabien.potencier.org/article/48/the-php-ternary-operator-fast-or-not&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тернарный оператор PHP: быстро или нет?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06fc87efa1fa8d9ad8f989a7e8c9d55bd7acc20f" translate="yes" xml:space="preserve">
          <source>Here the important part is that foreach will make &lt;code&gt;$array&lt;/code&gt; an is_ref=1 when it is iterated by reference, so basically you have the same situation as above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь важная часть заключается в том, что foreach сделает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; is_ref = 1, когда он будет повторен по ссылке, поэтому в основном у вас та же ситуация, что и выше.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ef31c0a3f93f77487b87c511286a358a48ee73" translate="yes" xml:space="preserve">
          <source>Here the refcount of the &lt;code&gt;$array&lt;/code&gt; is 2 when the loop is started, so for once we actually have to do the duplication upfront. Thus &lt;code&gt;$array&lt;/code&gt; and the array used by foreach will be completely separate from the outset. That's why you get the position of the IAP wherever it was before the loop (in this case it was at the first position).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь refcount &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; равен 2, когда цикл запускается, так что на этот раз нам нужно сделать дублирование заранее. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и массив, используемый foreach, будут полностью отделены от начала. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот почему вы получаете положение IAP, где бы оно ни было до цикла (в данном случае это было в первой позиции).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9320a0e42c4e40c9d72e4f533951976eb7d6cedf" translate="yes" xml:space="preserve">
          <source>Here we have the is_ref=1 case, so the array is not copied (just like above). But now that it is a reference, the array no longer has to be duplicated when passing to the by-ref &lt;code&gt;current()&lt;/code&gt; function. Thus &lt;code&gt;current()&lt;/code&gt; and &lt;code&gt;foreach&lt;/code&gt; work on the same array. You still see the off-by-one behavior though, due to the way &lt;code&gt;foreach&lt;/code&gt; advances the pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь мы имеем случай is_ref = 1, поэтому массив не копируется (как и выше). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но теперь, когда это ссылка, массив больше не нужно дублировать при передаче в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцию &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;by-ref &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работают с одним и тем же массивом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тем не менее, вы по-прежнему видите поведение &amp;laquo;один за другим&amp;raquo; из-за того, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; продвигает указатель.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c78f9c618fca247dc03a5d8ccd4502643dd21c69" translate="yes" xml:space="preserve">
          <source>Here we should normally expect the output &lt;code&gt;1, 1, 3, 4&lt;/code&gt; according to the previous rules. How what happens is that &lt;code&gt;'FYFY'&lt;/code&gt; has the same hash as the removed element &lt;code&gt;'EzFY'&lt;/code&gt;, and the allocator happens to reuse the same memory location to store the element. So foreach ends up directly jumping to the newly inserted element, thus short-cutting the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь мы обычно должны ожидать выход &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1, 1, 3, 4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; соответствии с предыдущими правилами. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что происходит, так это то, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'FYFY'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет тот же хеш, что и удаленный элемент &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'EzFY'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , и распределитель случайно использует ту же ячейку памяти для хранения элемента. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, foreach заканчивает тем, что непосредственно переходит на вновь вставленный элемент, таким образом сокращая цикл.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b09c9e6cdc88c66a96f4f93e25e90ddea554a4e6" translate="yes" xml:space="preserve">
          <source>Here you should know that &lt;code&gt;current()&lt;/code&gt; is a by-ref function (actually: prefer-ref), even though it does not modify the array. It has to be in order to play nice with all the other functions like &lt;code&gt;next&lt;/code&gt; which are all by-ref. By-reference passing implies that the array has to be separated and thus &lt;code&gt;$array&lt;/code&gt; and the &lt;code&gt;foreach-array&lt;/code&gt; will be different. The reason you get &lt;code&gt;2&lt;/code&gt; instead of &lt;code&gt;1&lt;/code&gt; is also mentioned above: &lt;code&gt;foreach&lt;/code&gt; advances the array pointer &lt;em&gt;before&lt;/em&gt; running the user code, not after. So even though the code is at the first element, &lt;code&gt;foreach&lt;/code&gt; already advanced the pointer to the second.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь вы должны знать, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является функцией by-ref (на самом деле :fer-ref), даже если она не модифицирует массив. Это должно быть сделано для того, чтобы хорошо играть со всеми другими функциями, такими как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;next&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которые все by-ref. Передача по ссылке подразумевает, что массив должен быть отделен, и, следовательно, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach-array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будут разными. Причина, по которой вы получаете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вместо &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , также упоминалась выше: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; продвигает указатель массива &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;до&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; запуска пользовательского кода, а не после. Так что, хотя код находится в первом элементе, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; уже продвинул указатель на второй &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;элемент &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e2c11296f52e3c33b435c41a2c9058141794dda" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;$arr&lt;/code&gt; will be duplicated to prevent IAP changes on &lt;code&gt;$arr&lt;/code&gt; from leaking to &lt;code&gt;$outerArr&lt;/code&gt;. In terms of the conditions above, the array is not a reference (is_ref=0) and is used in two places (refcount=2). This requirement is unfortunate and an artifact of the suboptimal implementation (there is no concern of modification during iteration here, so we don't really need to use the IAP in the first place).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет продублирован, чтобы предотвратить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;утечку &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;изменений IAP в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$outerArr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С точки зрения условий выше, массив не является ссылкой (is_ref = 0) и используется в двух местах (refcount = 2). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это требование является неудачным и является артефактом неоптимальной реализации (здесь нет проблем с модификацией во время итерации, поэтому нам не нужно в первую очередь использовать IAP).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71f26286c42873f72392d673b048fc981f68e484" translate="yes" xml:space="preserve">
          <source>How does PHP 'foreach' actually work</source>
          <target state="translated">Как на самом деле работает PHP 'foreach'.</target>
        </trans-unit>
        <trans-unit id="4d7dd5b09fef4fbc13b52490cc8353aa7c961d78" translate="yes" xml:space="preserve">
          <source>However &lt;code&gt;foreach&lt;/code&gt;, being a rather special snowflake, chooses to do things slightly differently:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , будучи довольно особенной снежинкой, предпочитает действовать немного иначе:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a31efb1a52d63389e065a96d4038859b40f71b1e" translate="yes" xml:space="preserve">
          <source>However, we get some interesting changes when considering modifications during iteration. I hope you will find the new behavior saner. The first example:</source>
          <target state="translated">Однако мы получаем некоторые интересные изменения при рассмотрении модификаций во время итерации.Надеюсь,что вы найдете новое поведение более вменяемым.Первый пример:</target>
        </trans-unit>
        <trans-unit id="a61c4d96bcc3da5af6ed31ee756e7c946152cca3" translate="yes" xml:space="preserve">
          <source>However, what if we had used $item by reference, as I mentioned before? A single character added to the above test:</source>
          <target state="translated">Однако,что,если бы мы использовали $item by reference,как я уже упоминал? Один символ добавлен к вышеуказанному тесту:</target>
        </trans-unit>
        <trans-unit id="c00ef429043163e498185705691978c68ce29357" translate="yes" xml:space="preserve">
          <source>I believe that this is all consequence of &lt;strong&gt;On each iteration&lt;/strong&gt; part of the explanation in the documentation, which probably means that &lt;code&gt;foreach&lt;/code&gt; does all logic before it calls the code in &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я полагаю, что все это является следствием части &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;каждой&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; пояснения в документации, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;каждой итерации&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , что, вероятно, означает, что &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foreach&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выполняет всю логику, прежде чем вызовет код в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4697e7e52d5799d87464f9e9fddb553071695d6" translate="yes" xml:space="preserve">
          <source>If not, what is it really doing?</source>
          <target state="translated">Если нет,то что он на самом деле делает?</target>
        </trans-unit>
        <trans-unit id="2a829325bc6b57c4325ab8e0937f30c13ff8ee66" translate="yes" xml:space="preserve">
          <source>If the array is not duplicated (is_ref=0, refcount=1), then only its &lt;code&gt;refcount&lt;/code&gt; will be incremented (*). Additionally, if &lt;code&gt;foreach&lt;/code&gt; by reference is used, then the (potentially duplicated) array will be turned into a reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если массив не дублируется (is_ref = 0, refcount = 1), то &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; только его &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;refcount&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (*). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, если используется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по ссылке, массив (потенциально дублированный) будет превращен в ссылку.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78dc274491d6ca8054a1f088bedca2ccdc345189" translate="yes" xml:space="preserve">
          <source>If we look in the &lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;manual&lt;/a&gt;, we find this statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если мы посмотрим в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;руководстве&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , мы найдем это утверждение:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e55a1d14766bac174bfd5d5e0ed5c6eddea5d0fd" translate="yes" xml:space="preserve">
          <source>If you iterate by reference using &lt;code&gt;foreach ($arr as &amp;amp;$v)&lt;/code&gt; then &lt;code&gt;$arr&lt;/code&gt; is turned into a reference and you can change it during iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы выполняете итерацию по ссылке, используя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach ($arr as &amp;amp;$v)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; то &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; превращается в ссылку, и вы можете изменить ее во время итерации.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f6bafee81d8af7c1d8fe3a7d35b1e1d5276370d" translate="yes" xml:space="preserve">
          <source>If you run this:</source>
          <target state="translated">Если ты этим займешься:</target>
        </trans-unit>
        <trans-unit id="f1c3d02b13b81fde5e463b3c1e3481a89c040f02" translate="yes" xml:space="preserve">
          <source>If you still remember, the main problem with array iteration was how to handle removal of elements mid-iteration. PHP 5 used a single internal array pointer (IAP) for this purpose, which was somewhat suboptimal, as one array pointer had to be stretched to support multiple simultaneous foreach loops &lt;em&gt;and&lt;/em&gt; interaction with &lt;code&gt;reset()&lt;/code&gt; etc. on top of that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы все еще помните, основная проблема с итерацией массива заключалась в том, как обрабатывать удаление элементов в середине итерации. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В PHP 5 для этой цели использовался один внутренний указатель массива (IAP), что было несколько неоптимальным, поскольку один указатель массива нужно было растянуть для поддержки нескольких одновременных циклов foreach &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;и&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; взаимодействия с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и т. Д. Поверх этого.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02f297f5905381c7400f2b6935063eab3c3035ae" translate="yes" xml:space="preserve">
          <source>In PHP 5 the same applies even if you iterate by value, but the array was a reference beforehand: &lt;code&gt;$ref =&amp;amp; $arr; foreach ($ref as $v)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В PHP 5 применяется то же самое, даже если вы выполняете итерацию по значению, но массив был ссылкой заранее: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$ref =&amp;amp; $arr; foreach ($ref as $v)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c31012f51272cbd314bdcd5bbcfff2fc3b76f9e3" translate="yes" xml:space="preserve">
          <source>In example 3 you don't modify the array. In all other examples you modify either the contents or the internal array pointer. This is important when it comes to &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP&lt;/a&gt; arrays because of the semantics of the assignment operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В примере 3 вы не модифицируете массив. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во всех других примерах вы изменяете либо содержимое, либо внутренний указатель массива. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это важно, когда дело доходит до &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;массивов &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из-за семантики оператора присваивания.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22ede99ce8e51107137227faf74df0b592c69a53" translate="yes" xml:space="preserve">
          <source>In foreach loop, the first thing php does is that it creates a copy of the array which is to be iterated over. PHP then iterates over this new &lt;code&gt;copy&lt;/code&gt; of the array rather than the original one. This is demonstrated in the below example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В цикле foreach первое, что делает php - это создает копию массива, который должен быть повторен. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем PHP перебирает эту новую &lt;/font&gt;&lt;/font&gt; &lt;code&gt;copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; массива, а не исходную. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это продемонстрировано в следующем примере:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="134677d03213db70953d47c1bffdab544c9f93e4" translate="yes" xml:space="preserve">
          <source>In most cases, this change is transparent and has no other effect than better performance. However, there is one occasion where it results in different behavior, namely the case where the array was a reference beforehand:</source>
          <target state="translated">В большинстве случаев это изменение является прозрачным и не имеет никакого другого эффекта,кроме лучшей производительности.Однако,есть один случай,когда это приводит к различному поведению,а именно тот,когда массив заранее был ссылкой:</target>
        </trans-unit>
        <trans-unit id="8d13b49c0d0dcf6c67a637aa73c5a0309f5ed373" translate="yes" xml:space="preserve">
          <source>In test case 3, once again the array is not duplicated, thus &lt;code&gt;foreach&lt;/code&gt; will be modifying the IAP of the &lt;code&gt;$array&lt;/code&gt; variable. At the end of the iteration, the IAP is NULL (meaning iteration has done), which &lt;code&gt;each&lt;/code&gt; indicates by returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В тестовом примере 3 массив снова не дублируется, поэтому &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет модифицировать IAP &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;переменной &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В конце итерации, МАП является NULL (то есть итерация сделано), который &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; указывает, возвращая &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33d269e7a4a764b049b79e9cb1f9e20dc83243c4" translate="yes" xml:space="preserve">
          <source>In test cases 1 and 2 &lt;code&gt;$array&lt;/code&gt; starts off with refcount=1, so it will not be duplicated by &lt;code&gt;foreach&lt;/code&gt;: Only the &lt;code&gt;refcount&lt;/code&gt; is incremented. When the loop body subsequently modifies the array (which has refcount=2 at that point), the duplication will occur at that point. Foreach will continue working on an unmodified copy of &lt;code&gt;$array&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В тестовых случаях 1 и 2 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; начинается с refcount = 1, поэтому он не будет дублироваться &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;увеличивается &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;только значение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда тело цикла впоследствии модифицирует массив (который имеет refcount = 2 в этой точке), дублирование произойдет в этой точке. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Foreach будет продолжать работать с неизмененной копией &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1dbfb1adb9e84f34a26cf1ef4549ca5fdf33e6ac" translate="yes" xml:space="preserve">
          <source>In test cases 4 and 5 both &lt;code&gt;each&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; are by-reference functions. The &lt;code&gt;$array&lt;/code&gt; has a &lt;code&gt;refcount=2&lt;/code&gt; when it is passed to them, so it has to be duplicated. As such &lt;code&gt;foreach&lt;/code&gt; will be working on a separate array again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В тестовых примерах 4 и 5 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; являются побочными функциями. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount=2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , когда он передается им, поэтому он должен быть повторен. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; снова будет работать с отдельным массивом.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ed0a58bec9d6612b04799a17cd5f6d6fef8450f" translate="yes" xml:space="preserve">
          <source>In the following, I will try to explain precisely how iteration works in different cases. By far the simplest case is &lt;code&gt;Traversable&lt;/code&gt; objects, as for these &lt;code&gt;foreach&lt;/code&gt; is essentially only syntax sugar for code along these lines:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Далее я попытаюсь объяснить, как итерация работает в разных случаях. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Безусловно, самый простой случай - это &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объекты &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Traversable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , так как для этих &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по сути только синтаксический сахар для кода по следующим строкам:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7339506450bbac19831889ae44122066b7fe107" translate="yes" xml:space="preserve">
          <source>In your second example, you start with two elements, and foreach loop is not at the last element so it evaluates the array on the next iteration and thus realises that there is new element in the array.</source>
          <target state="translated">Во втором примере вы начинаете с двух элементов,а фораховый цикл не находится на последнем элементе,поэтому он оценивает массив на следующей итерации и таким образом понимает,что в массиве появился новый элемент.</target>
        </trans-unit>
        <trans-unit id="fde8dd98d7e3c5d285a56193ed177dd2ac066399" translate="yes" xml:space="preserve">
          <source>Internal array pointer and HashPointer</source>
          <target state="translated">Внутренний указатель массива и HashPointer</target>
        </trans-unit>
        <trans-unit id="55351291e1c5fef6a45bef8efd585915f3bd479a" translate="yes" xml:space="preserve">
          <source>Is there any situation where using functions that adjust the array pointer (&lt;code&gt;each()&lt;/code&gt;, &lt;code&gt;reset()&lt;/code&gt; et al.) during a &lt;code&gt;foreach&lt;/code&gt; could affect the outcome of the loop?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Есть ли ситуации, когда использование функций, которые корректируют указатель массива ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и др.) Во время &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может повлиять на результат цикла?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfb1d36860bfa186a30dd861585a17c395ef9f61" translate="yes" xml:space="preserve">
          <source>Is this correct and the whole story?</source>
          <target state="translated">Это верно и вся история?</target>
        </trans-unit>
        <trans-unit id="7bb8345349d5d2faf3d2e667f6fed8801fadc203" translate="yes" xml:space="preserve">
          <source>It seems to me that &lt;code&gt;foreach&lt;/code&gt; works with a &lt;em&gt;copy&lt;/em&gt; of the array, but sets the array pointer of the source array to the end of the array after the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мне кажется, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работает с &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;копией&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; массива, но устанавливает указатель массива исходного массива на конец массива после цикла.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2d00199b28cd212143ebd236537b2023ca47451" translate="yes" xml:space="preserve">
          <source>Iteration of arrays and plain objects is significantly more complicated. First of all, it should be noted that in PHP &quot;arrays&quot; are really ordered dictionaries and they will be traversed according to this order (which matches the insertion order as long as you didn't use something like &lt;code&gt;sort&lt;/code&gt;). This is opposed to iterating by the natural order of the keys (how lists in other languages often work) or having no defined order at all (how dictionaries in other languages often work).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итерация массивов и простых объектов значительно сложнее. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Прежде всего, следует отметить, что в PHP &amp;laquo;массивы&amp;raquo; - это действительно упорядоченные словари, и они будут проходить в соответствии с этим порядком (который соответствует порядку вставки, если вы не использовали что-то вроде &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это противоположно итерации по естественному порядку ключей (как часто работают списки на других языках) или вообще без определенного порядка (как часто работают словари на других языках).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0d7e336b7b454ce37f9f414661d83e60fed3826" translate="yes" xml:space="preserve">
          <source>Let me prefix this by saying that I know what &lt;code&gt;foreach&lt;/code&gt; is, does and how to use it. This question concerns how it works under the bonnet, and I don't want any answers along the lines of &quot;this is how you loop an array with &lt;code&gt;foreach&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Позвольте мне поставить префикс, сказав, что я знаю, что такое &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , что он делает и как его использовать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот вопрос касается того, как он работает под капотом, и я не хочу никаких ответов в духе &amp;laquo;вот как вы зацикливаете массив с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b63928b527f92fb71f4104a7bd7acfb52f9d816d" translate="yes" xml:space="preserve">
          <source>Let me show what I mean. For the following test cases, we will be working with the following array:</source>
          <target state="translated">Позволь мне показать,что я имею в виду.Для следующих тестовых случаев мы будем работать со следующим массивом:</target>
        </trans-unit>
        <trans-unit id="f751c6687bfd848ca5a2e2261174f789d8ab95d8" translate="yes" xml:space="preserve">
          <source>Let's consider a few examples, starting with your test cases:</source>
          <target state="translated">Рассмотрим несколько примеров,начиная с ваших тестовых случаев:</target>
        </trans-unit>
        <trans-unit id="3097fd5b0d5d815f05c7fe33aaa245060a3bf92e" translate="yes" xml:space="preserve">
          <source>Namely, the array pointer is already moved forward &lt;em&gt;before&lt;/em&gt; the loop body runs. This means that while the loop body is working on element &lt;code&gt;$i&lt;/code&gt;, the IAP is already at element &lt;code&gt;$i+1&lt;/code&gt;. This is the reason why code samples showing modification during iteration will always &lt;code&gt;unset&lt;/code&gt; the &lt;em&gt;next&lt;/em&gt; element, rather than the current one.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;А именно, указатель массива уже перемещен вперед &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;до&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; запуска тела цикла. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что, хотя тело цикла работает с элементом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , IAP уже находится в элементе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$i+1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это является причиной того, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;почему примеры кода , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;показывающие изменения во время итерации всегда будет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;следующий&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; элемент, а не текущий.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40a05dbc2f0a8aa4f92fc60f38c31f2f5d423ec4" translate="yes" xml:space="preserve">
          <source>Normal objects</source>
          <target state="translated">Нормальные объекты</target>
        </trans-unit>
        <trans-unit id="e08a5016973ce24d28ac18e9fdb6932843bef710" translate="yes" xml:space="preserve">
          <source>Now lets try a small modification:</source>
          <target state="translated">Теперь давайте попробуем небольшую модификацию:</target>
        </trans-unit>
        <trans-unit id="5656010570fbcc2ba537a9c5378cc92d8408d098" translate="yes" xml:space="preserve">
          <source>Objects have by-handle passing semantics, which for most practical purposes means that they behave like references. So objects can always be changed during iteration.</source>
          <target state="translated">Объекты обладают передаваемой семантикой,что для большинства практических целей означает,что они ведут себя как ссылки.Поэтому объекты всегда могут быть изменены во время итерации.</target>
        </trans-unit>
        <trans-unit id="7c216b53de040b00d089894dd8ddbc5bde03d966" translate="yes" xml:space="preserve">
          <source>On each iteration, the value of the current element is assigned to $v and the internal</source>
          <target state="translated">На каждой итерации значение текущего элемента присваивается $v и внутреннему</target>
        </trans-unit>
        <trans-unit id="a4f99d71c5a8b263015886cdb2f907d0ce4d1a2e" translate="yes" xml:space="preserve">
          <source>One last odd case that I'd like to mention, it is that PHP allows you to substitute the iterated entity during the loop. So you can start iterating on one array and then replace it with another array halfway through. Or start iterating on an array and then replace it with an object:</source>
          <target state="translated">И последний странный случай,о котором я хотел бы упомянуть,это то,что PHP позволяет заменять итерацию сущности во время цикла.Таким образом,вы можете начать итерацию по одному массиву,а затем заменить его на другой массив наполовину.Или начать итерации по массиву,а затем заменить его на объект:</target>
        </trans-unit>
        <trans-unit id="c242255b4e20b8454762a9c1cfc23f3f6bb8f097" translate="yes" xml:space="preserve">
          <source>PHP 5</source>
          <target state="translated">PHP 5</target>
        </trans-unit>
        <trans-unit id="084c3eec12a7ea0542a27183c70a323878c7d71b" translate="yes" xml:space="preserve">
          <source>PHP 7</source>
          <target state="translated">PHP 7</target>
        </trans-unit>
        <trans-unit id="5845f09d0ec80f31277ff6f4551cfaec806397d0" translate="yes" xml:space="preserve">
          <source>PHP 7 uses a different approach, namely, it supports creating an arbitrary amount of external, safe hashtable iterators. These iterators have to be registered in the array, from which point on they have the same semantics as the IAP: If an array element is removed, all hashtable iterators pointing to that element will be advanced to the next element.</source>
          <target state="translated">В PHP 7 используется другой подход,а именно,поддерживается создание произвольного количества внешних,безопасных хэшируемых итераторов.Эти итераторы должны быть зарегистрированы в массиве,откуда они имеют ту же семантику,что и IAP:Если элемент массива удален,то все хэшируемые итераторы,указывающие на этот элемент,будут перенесены на следующий элемент.</target>
        </trans-unit>
        <trans-unit id="34259c10ebcccdc96f1a84d84d17eb2f067ddea9" translate="yes" xml:space="preserve">
          <source>PHP foreach loop can be used with &lt;code&gt;Indexed arrays&lt;/code&gt;, &lt;code&gt;Associative arrays&lt;/code&gt; and &lt;code&gt;Object public variables&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Цикл PHP foreach может использоваться с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Indexed arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Associative arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object public variables&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c0047e404d6d99d4b1d7ddc87de51f778964b06" translate="yes" xml:space="preserve">
          <source>Position advancement order</source>
          <target state="translated">Порядок продвижения позиции</target>
        </trans-unit>
        <trans-unit id="758faebc57cf11a657355347e9e4d05b49a43dde" translate="yes" xml:space="preserve">
          <source>Previously by-value iteration of reference-arrays was special cases. In this case, no duplication occurred, so all modifications of the array during iteration would be reflected by the loop. In PHP 7 this special case is gone: A by-value iteration of an array will &lt;strong&gt;always&lt;/strong&gt; keep working on the original elements, disregarding any modifications during the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ранее по значению итерации ссылочных массивов были частными случаями. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этом случае дублирование не произошло, поэтому все модификации массива во время итерации будут отражены циклом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В PHP 7 этот особый случай исчез: итерация массива по значениям &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;всегда&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;продолжать работать с исходными элементами, не обращая внимания на любые изменения во время цикла.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0b70ce3dfe944d7a532ef64d990426ece003306" translate="yes" xml:space="preserve">
          <source>Previously the HashPointer restore mechanism jumped right to the new element because it &quot;looked&quot; like it's the same as the removed element (due to colliding hash and pointer). As we no longer rely on the element hash for anything, this is no longer an issue.</source>
          <target state="translated">Ранее механизм восстановления HashPointer перепрыгнул прямо на новый элемент,потому что он &quot;выглядел&quot; так,как будто это тот же самый элемент,что и удаленный (из-за столкновения хэша и указателя).Так как мы больше не полагаемся на хэш элемента ни для чего,это больше не проблема.</target>
        </trans-unit>
        <trans-unit id="b2fef7d7e527879e31aa00e11336ca35080be717" translate="yes" xml:space="preserve">
          <source>Results in an infinite loop. Note this actually is an infinite loop, you&amp;rsquo;ll have to either kill the script yourself or wait for your OS to run out of memory. I added the following line to my script so PHP would run out of memory very quickly, I suggest you do the same if you&amp;rsquo;re going to be running these infinite loop tests:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В результате получается бесконечный цикл. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что на самом деле это бесконечный цикл, вам придется либо убить скрипт самостоятельно, либо подождать, пока вашей ОС не хватит памяти. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я добавил следующую строку в свой скрипт, чтобы PHP быстро исчерпал память, я предлагаю вам сделать то же самое, если вы собираетесь выполнять эти тесты с бесконечным циклом:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f485176e25715d83c8d06eb7fb74f9a075ad672" translate="yes" xml:space="preserve">
          <source>Right... this seems to suggest that &lt;code&gt;foreach&lt;/code&gt; relies on the array pointer of the source array. But we've just proved that we're &lt;em&gt;not working with the source array&lt;/em&gt;, right? Well, not entirely.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Правильно ... кажется, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; полагается на указатель массива исходного массива. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но мы только что доказали, что &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не работаем с исходным массивом&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , верно? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ну, не совсем.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26851422c5fa9895c974ae2a35d04d45be56bf30" translate="yes" xml:space="preserve">
          <source>So as per your first example:</source>
          <target state="translated">Итак,согласно вашему первому примеру:</target>
        </trans-unit>
        <trans-unit id="a118c312dcc816d78542af9b056c14047650c765" translate="yes" xml:space="preserve">
          <source>So far, so good. Iterating over a dictionary can't be too hard, right? The problems begin when you realize that an array/object can change during iteration. There are multiple ways this can happen:</source>
          <target state="translated">Пока все хорошо.Итерация по словарю не может быть слишком сложной,верно? Проблемы начинаются,когда понимаешь,что массивный объект может измениться во время итерации.Это может произойти несколькими способами:</target>
        </trans-unit>
        <trans-unit id="22767625f947aff65dabcdc777a951ea58e15915" translate="yes" xml:space="preserve">
          <source>So in this previous example with the infinite loop, we see the reason why PHP was written to create a copy of the array to loop over. When a copy is created and used only by the structure of the loop construct itself, the array stays static throughout the execution of the loop, so you&amp;rsquo;ll never run into issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, в этом предыдущем примере с бесконечным циклом мы видим причину, по которой PHP был написан для создания копии массива для зацикливания. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда копия создается и используется только структурой самой конструкции цикла, массив остается статичным в течение всего цикла, поэтому вы никогда не столкнетесь с проблемами.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4810d33897e930efe44a50f6d87f8ce4b8c4edb" translate="yes" xml:space="preserve">
          <source>So it is evident and observable, when $item is operated on by-reference, the changes made to $item are made to the members of the original $set. Using $item by reference also prevents PHP from creating the array copy. To test this, first we&amp;rsquo;ll show a quick script demonstrating the copy:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, это очевидно и заметно, что при работе с $ item по ссылке, изменения, внесенные в $ item, вносятся в члены исходного набора $. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Использование $ item по ссылке также не позволяет PHP создавать копию массива. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы проверить это, сначала мы покажем быстрый скрипт, демонстрирующий копию:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1a42e1f249741b6b1505dd1fe7c48630ed823c6" translate="yes" xml:space="preserve">
          <source>So the copy is created but the developer doesn't notice, because the original array isn&amp;rsquo;t referenced within the loop or after the loop finishes. However, when you attempt to modify the items in a loop, you find that they are unmodified when you finish:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, копия создается, но разработчик этого не замечает, поскольку исходный массив не указан в цикле или после его завершения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако, когда вы пытаетесь изменить элементы в цикле, вы обнаружите, что они не изменены, когда вы закончите:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8607657ed5ac59972cd210308aab7916fb222409" translate="yes" xml:space="preserve">
          <source>So, despite the fact that we are not working directly with the source array, we are working directly with the source array pointer - the fact that the pointer is at the end of the array at the end of the loop shows this. Except this can't be true - if it was, then &lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;test case 1&lt;/a&gt; would loop forever.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, несмотря на то, что мы не работаем напрямую с исходным массивом, мы работаем напрямую с указателем исходного массива - тот факт, что указатель находится в конце массива в конце цикла, показывает это. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;За исключением того, что это не может быть правдой - если бы это было так, то &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;тестовый случай 1&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; зациклился бы навсегда.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7620823db465a8213cdba392c149d0cffe8cba72" translate="yes" xml:space="preserve">
          <source>So, in your first example you only have one element in the array, and when the pointer is moved the next element does not exist, so after you add new element foreach ends because it already &quot;decided&quot; that it it as the last element.</source>
          <target state="translated">Итак,в первом примере у вас в массиве есть только один элемент,а при перемещении указателя следующего элемента не существует,поэтому после добавления нового элемента foreach заканчивается,так как он уже &quot;решил&quot;,что это последний элемент.</target>
        </trans-unit>
        <trans-unit id="35d0be98ccd23d238ffd883d44c8e1a3bba9053a" translate="yes" xml:space="preserve">
          <source>Some points to note when working with &lt;code&gt;foreach()&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Некоторые моменты, на которые следует обратить внимание при работе с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57120796a80a08ef6aa8f16cb423a7f2ab9f0a14" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&quot;&gt;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Источник: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c75dc3f330b31a50042d85df76b4fbc730b896f9" translate="yes" xml:space="preserve">
          <source>Stack&amp;nbsp;Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2728709&quot;&gt;How to make sure the value is reset in a 'foreach' loop in PHP?&lt;/a&gt;&lt;/em&gt; addresses the cases (3,4,5) of your question.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вопрос переполнения стека &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2728709&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как убедиться, что значение сбрасывается в цикле 'foreach' в PHP? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;рассматривает случаи (3,4,5) вашего вопроса.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43ee53a8fd3dd8f60f02f4016979d5c8131c4a41" translate="yes" xml:space="preserve">
          <source>Substituting the iterated entity during the loop</source>
          <target state="translated">Подстановка итерационной сущности во время петли</target>
        </trans-unit>
        <trans-unit id="799e1f85c65dc059f75f6566ee59feb5cfae8d0f" translate="yes" xml:space="preserve">
          <source>Test case 3 changes: &lt;code&gt;Foreach&lt;/code&gt; no longer uses the IAP, so &lt;code&gt;each()&lt;/code&gt; is not affected by the loop. It will have the same output before and after.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Изменения в тестовом примере 3: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; больше не использует IAP, поэтому &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не затрагивается циклом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он будет иметь одинаковый вывод до и после.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd92aadc08b97ed5f3daa2ae99864416eaa8183a" translate="yes" xml:space="preserve">
          <source>Test cases 1 and 2 retain the same output: By-value array iteration always keep working on the original elements. (In this case, even &lt;code&gt;refcounting&lt;/code&gt; and duplication behavior is exactly the same between PHP 5 and PHP 7).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Контрольные примеры 1 и 2 сохраняют один и тот же вывод: итерация массива по значению всегда продолжает работать с исходными элементами. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(В этом случае даже &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcounting&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и дублирование поведения одинаково для PHP 5 и PHP 7).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5302152a206d4acde3103ec9c65b3fc49d9cde5" translate="yes" xml:space="preserve">
          <source>Test cases 4 and 5 stay the same: &lt;code&gt;each()&lt;/code&gt; and &lt;code&gt;reset()&lt;/code&gt; will duplicate the array before changing the IAP, while &lt;code&gt;foreach&lt;/code&gt; still uses the original array. (Not that the IAP change would have mattered, even if the array was shared.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Контрольные примеры 4 и 5 остаются прежними: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будут дублировать массив перед изменением IAP, в то время как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; все еще использует исходный массив. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Не то, чтобы изменение IAP имело значение, даже если массив был общим.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9e56b636d04a99b97687e1513e0cfbb1be220f5" translate="yes" xml:space="preserve">
          <source>The IAP is a visible feature of an array (exposed through the &lt;code&gt;current&lt;/code&gt; family of functions), as such changes to the IAP count as modifications under copy-on-write semantics. This, unfortunately, means that &lt;code&gt;foreach&lt;/code&gt; is in many cases forced to duplicate the array it is iterating over. The precise conditions are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IAP - это видимая особенность массива (предоставляемая &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; семейством функций), поскольку такие изменения в IAP учитываются как изменения в семантике копирования при записи. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;К сожалению, это означает, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; во многих случаях вынужден дублировать массив, который он повторяет. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Точные условия:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdc4e3aeface141ed50ea2f3a5bb834802fbbc54" translate="yes" xml:space="preserve">
          <source>The PHP manual also states:</source>
          <target state="translated">В руководстве по PHP также указано:</target>
        </trans-unit>
        <trans-unit id="e2744babbe5f6a155ba4b49e4f30afc0e91f850e" translate="yes" xml:space="preserve">
          <source>The array has refcount&amp;gt;1. If &lt;code&gt;refcount&lt;/code&gt; is 1, then the array is not shared and we're free to modify it directly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Массив имеет refcount&amp;gt; 1. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; равен 1, то массив не является общим, и мы можем изменить его напрямую.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b7837793519155ae58510c7f461d7624338cf8e" translate="yes" xml:space="preserve">
          <source>The array is not a reference (is_ref=0). If it's a reference, then changes to it are &lt;em&gt;supposed&lt;/em&gt; to propagate, so it should not be duplicated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Массив не является ссылкой (is_ref = 0). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если это ссылка, то изменения в ней &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;должны&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; распространяться, поэтому ее не следует дублировать.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f59618d362ad66a77e6991b447adba9675635b9" translate="yes" xml:space="preserve">
          <source>The assignment operator for the arrays in PHP works more like a lazy clone. Assigning one variable to another that contains an array will clone the array, unlike most languages. However, the actual cloning will not be done unless it is needed. This means that the clone will take place only when either of the variables is modified (copy-on-write).</source>
          <target state="translated">Оператор присваивания для массивов в PHP работает скорее как ленивый клон.Присвоение одной переменной другой,содержащей массив,в отличие от большинства языков,приведет к клонированию массива.Однако фактическое клонирование не будет выполнено,если в этом нет необходимости.Это означает,что клон будет происходить только тогда,когда одна из переменных будет изменена (копия на запись).</target>
        </trans-unit>
        <trans-unit id="14fa8ff0cf5d61c850805b6e5fb983b36b041d68" translate="yes" xml:space="preserve">
          <source>The behavior of your test cases is simple to explain at this point:</source>
          <target state="translated">Поведение ваших тестовых случаев на данном этапе легко объяснить:</target>
        </trans-unit>
        <trans-unit id="915873c4a3ce154fb4090c25aea28f3a43b43480" translate="yes" xml:space="preserve">
          <source>The expected part here is that &lt;code&gt;(1, 2)&lt;/code&gt; is missing from the output because element &lt;code&gt;1&lt;/code&gt; was removed. What's probably unexpected is that the outer loop stops after the first element. Why is that?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ожидаемая часть здесь - то, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; отсутствует в выходных данных, потому что элемент &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; был удален. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вероятно, неожиданно то, что внешний цикл останавливается после первого элемента. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это почему?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="565256f6d92b66af02eea962561abc18319450cb" translate="yes" xml:space="preserve">
          <source>The first form loops over the array given by array_expression. On each
  iteration, the value of the current element is assigned to $value and
  the internal array pointer is advanced by one (so on the next
  iteration, you'll be looking at the next element).</source>
          <target state="translated">Первый цикл форм по массиву,заданному выражением array_expression.На каждой итерации значение текущего элемента присваивается $value,а внутренний указатель массива выдвигается на единицу (поэтому на следующей итерации вы будете смотреть на следующий элемент).</target>
        </trans-unit>
        <trans-unit id="93a9acd0a95da182c6b4c513a8110aeb3ca36d0e" translate="yes" xml:space="preserve">
          <source>The following example shows that each() and reset() DOES NOT affect &lt;code&gt;SENTINEL&lt;/code&gt; variables
&lt;code&gt;(for example, the current index variable)&lt;/code&gt; of the &lt;code&gt;foreach()&lt;/code&gt; iterator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В следующем примере показаны , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что каждый () и сброс () не влияет на &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SENTINEL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменного &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(for example, the current index variable)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; по &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; итератор.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87247b8d9ab9cc6541ded942f6c651cfc9dcd41e" translate="yes" xml:space="preserve">
          <source>The problem with allowing modifications during iteration is the case where the element you are currently on is removed. Say you use a pointer to keep track of which array element you are currently at. If this element is now freed, you are left with a dangling pointer (usually resulting in a segfault).</source>
          <target state="translated">Проблема с разрешением модификаций во время итерации заключается в том,что элемент,на котором вы в данный момент находитесь,удаляется.Скажем,вы используете указатель,чтобы отслеживать,какой элемент массива вы в данный момент находитесь.Если этот элемент теперь освобожден,то вы останетесь с висячим указателем (обычно это приводит к сегрегации).</target>
        </trans-unit>
        <trans-unit id="9656b1e147952d098aeb672618e2c2a5d55eeaf8" translate="yes" xml:space="preserve">
          <source>The reason behind this is the nested-loop hack described above: Before the loop body runs, the current IAP position and hash is backed up into a &lt;code&gt;HashPointer&lt;/code&gt;. After the loop body it will be restored, but only if the element still exists, otherwise the current IAP position (whatever it may be) is used instead. In the example above this is exactly the case: The current element of the outer loop has been removed, so it will use the IAP, which has already been marked as finished by the inner loop!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Причиной этого является хак с вложенным циклом, описанный выше: перед выполнением тела цикла текущая позиция IAP и хеш-код копируются в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;После тела цикла оно будет восстановлено, но только если элемент все еще существует, в противном случае вместо него используется текущая позиция IAP (какой бы она ни была). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В приведенном выше примере это именно тот случай: текущий элемент внешнего цикла был удален, поэтому он будет использовать IAP, который уже помечен как завершенный внутренним циклом!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba05429027cb017f1644ed283db2a59b07a096cf" translate="yes" xml:space="preserve">
          <source>The reason is that, while &lt;code&gt;reset()&lt;/code&gt; temporarily modifies the IAP, it will be restored to the current foreach element after the loop body. To force &lt;code&gt;reset()&lt;/code&gt; to make an effect on the loop, you have to additionally remove the current element, so that the backup/restore mechanism fails:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Причина в том, что хотя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; временно изменяет IAP, он будет восстановлен в текущем элементе foreach после тела цикла. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы заставить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; влиять на цикл, вам необходимо дополнительно удалить текущий элемент, чтобы механизм резервного копирования / восстановления вышел из строя:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63f9f02be33a648c748f491f47a14295cc7acb13" translate="yes" xml:space="preserve">
          <source>The same also applies to objects, as the object properties can be seen as another (ordered) dictionary mapping property names to their values, plus some visibility handling. In the majority of cases, the object properties are not actually stored in this rather inefficient way. However, if you start iterating over an object, the packed representation that is normally used will be converted to a real dictionary. At that point, iteration of plain objects becomes very similar to iteration of arrays (which is why I'm not discussing plain-object iteration much in here).</source>
          <target state="translated">То же самое относится и к объектам,так как свойства объекта можно рассматривать как еще один (упорядоченный)словарь,сопоставляющий имена свойств с их значениями,плюс некоторую обработку видимости.В большинстве случаев свойства объекта на самом деле не хранятся таким довольно неэффективным способом.Однако,если вы начнете итерацию по объекту,то упакованное представление,которое обычно используется,будет преобразовано в реальный словарь.В этот момент итерация простых объектов становится очень похожей на итерацию массивов (поэтому я не буду здесь много говорить о простой итерации объектов).</target>
        </trans-unit>
        <trans-unit id="1a0968550b75fdd5a4eacffc8fd75cfc37aab8f9" translate="yes" xml:space="preserve">
          <source>The second set of examples was related to the behavior of &lt;code&gt;current()&lt;/code&gt; under different &lt;code&gt;reference/refcounting&lt;/code&gt; configurations. This no longer makes sense, as &lt;code&gt;current()&lt;/code&gt; is completely unaffected by the loop, so its return value always stays the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Второй набор примеров был связан с поведением &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; при различных &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;конфигурациях &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reference/refcounting&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это больше не имеет смысла, поскольку &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;цикл &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не влияет на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;current ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому его возвращаемое значение всегда остается неизменным.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4db5d7598394dc4efaf2ebddee1152d9a2cb947f" translate="yes" xml:space="preserve">
          <source>The three aspects described above should provide you with a mostly complete impression of the idiosyncrasies of the &lt;code&gt;foreach&lt;/code&gt; implementation and we can move on to discuss some examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Три описанных выше аспекта должны дать вам в основном полное представление об особенностях реализации &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и мы можем перейти к обсуждению некоторых примеров.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20a766900138d9e9e26f7eb059f6b2414363bea0" translate="yes" xml:space="preserve">
          <source>There are different ways of solving this issue. PHP 5 and PHP 7 differ significantly in this regard and I'll describe both behaviors in the following. The summary is that PHP 5's approach was rather dumb and lead to all kinds of weird edge-case issues, while PHP 7's more involved approach results in more predictable and consistent behavior.</source>
          <target state="translated">Есть разные способы решения этой проблемы.PHP 5 и PHP 7 значительно отличаются в этом отношении,и я опишу оба варианта поведения следующим образом.Подводя итог,можно сказать,что подход PHP 5 был довольно тупым и привел к разного рода странным краевым проблемам,в то время как более вовлеченный подход PHP 7 приводит к более предсказуемому и последовательному поведению.</target>
        </trans-unit>
        <trans-unit id="1f629149a2bff5b4f1c466133ca920bd33974cdf" translate="yes" xml:space="preserve">
          <source>There is one last implementation detail that you have to be aware of to properly understand the code samples below. The &quot;normal&quot; way of looping through some data structure would look something like this in pseudocode:</source>
          <target state="translated">Есть одна последняя деталь реализации,которую вы должны знать,чтобы правильно понять примеры кода,приведенные ниже.Обычный&quot; способ прохождения через некоторую структуру данных будет выглядеть примерно так в псевдокоде:</target>
        </trans-unit>
        <trans-unit id="b91dabc2f851c9c172de2f74b35ab48cd0251a75" translate="yes" xml:space="preserve">
          <source>This backs up our initial conclusion, we are working with a copy of the source array during the loop, otherwise we would see the modified values during the loop. &lt;em&gt;But...&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это подтверждает наш первоначальный вывод: мы работаем с копией исходного массива во время цикла, в противном случае мы увидим измененные значения во время цикла. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но...&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1b089bdce204bf49714d0cd96aee6fb5deb45f" translate="yes" xml:space="preserve">
          <source>This clearly shows that we are not working directly with the source array - otherwise the loop would continue forever, since we are constantly pushing items onto the array during the loop. But just to be sure this is the case:</source>
          <target state="translated">Это наглядно показывает,что мы не работаем напрямую с исходным массивом-иначе цикл продолжился бы навсегда,т.к.в течение цикла мы постоянно подталкиваем элементы к массиву.Но только для того,чтобы убедиться,что это так:</target>
        </trans-unit>
        <trans-unit id="bd5628afe1d31ff01bbe9de9e91da9996b858397" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;foreach&lt;/code&gt; will no longer use the IAP &lt;strong&gt;at all&lt;/strong&gt;. The &lt;code&gt;foreach&lt;/code&gt; loop will be absolutely no effect on the results of &lt;code&gt;current()&lt;/code&gt; etc. and its own behavior will never be influenced by functions like  &lt;code&gt;reset()&lt;/code&gt; etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; больше не будет использовать IAP &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вообще&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Цикл &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; не&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; окажет абсолютно никакого влияния на результаты &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и т. Д., И на его собственное поведение никогда не будут влиять такие функции, как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и т. Д.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f91d4073e1806ac4e46d9be9407b7439ade530c5" translate="yes" xml:space="preserve">
          <source>This outputs:</source>
          <target state="translated">Это выходит:</target>
        </trans-unit>
        <trans-unit id="3d273d739b2b7205fdf68170c768084c1fcdfbc4" translate="yes" xml:space="preserve">
          <source>This reflects the by-handle semantics of objects (i.e. they behave reference-like even in by-value contexts).</source>
          <target state="translated">Это отражает семантику управления объектами (т.е.они ведут себя как опорные даже в контекстах опорных значений).</target>
        </trans-unit>
        <trans-unit id="c95f478c775abdcfe2b0089734af8e18efb1ae85" translate="yes" xml:space="preserve">
          <source>This, of course, does not apply to by-reference iteration. If you iterate by-reference all modifications will be reflected by the loop. Interestingly, the same is true for by-value iteration of plain objects:</source>
          <target state="translated">Это,конечно,не относится к итерации ссылок.Если выполнить итерацию по ссылке,то все изменения будут отражены в цикле.Интересно,что то же самое верно и для итераций бай-значения простых объектов:</target>
        </trans-unit>
        <trans-unit id="9baca8009051358845df552bcda06556e6c99b61" translate="yes" xml:space="preserve">
          <source>To support two simultaneous loops with only one internal array pointer, &lt;code&gt;foreach&lt;/code&gt; performs the following shenanigans: Before the loop body is executed, &lt;code&gt;foreach&lt;/code&gt; will back up a pointer to the current element and its hash into a per-foreach &lt;code&gt;HashPointer&lt;/code&gt;. After the loop body runs, the IAP will be set back to this element if it still exists. If however the element has been removed, we'll just use wherever the IAP is currently at. This scheme mostly-kinda-sort of works, but there's a lot of weird behavior you can get out of it, some of which I'll demonstrate below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для поддержки двух одновременных циклов только с одним указателем внутреннего массива &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; выполняет следующие действия: перед выполнением тела цикла &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; создаст резервную копию указателя на текущий элемент и его хэш в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для каждого foreach &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. После запуска тела цикла IAP будет возвращен к этому элементу, если он все еще существует. Однако, если элемент был удален, мы просто будем использовать там, где сейчас находится IAP. Эта схема в основном своего рода работает, но есть много странного поведения, которое вы можете извлечь из нее, некоторые из которых я продемонстрирую ниже.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c7e385d1086d82869c2eb01e2cb254a41ea968b" translate="yes" xml:space="preserve">
          <source>To update on this answer as it has gained some popularity: This answer no longer applies as of PHP 7. As explained in the &quot;&lt;a href=&quot;https://secure.php.net/manual/en/migration70.incompatible.php&quot;&gt;Backward incompatible changes&lt;/a&gt;&quot;, in PHP 7 foreach works on copy of the array, so any changes on the array itself are not reflected on foreach loop. More details at the link.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы обновить этот ответ, поскольку он приобрел некоторую популярность: этот ответ больше не применяется в PHP 7. Как объясняется в разделе &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://secure.php.net/manual/en/migration70.incompatible.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратные несовместимые изменения&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo;, в PHP 7 foreach работает с копией массива, поэтому любые изменения в самом массиве не отражаются на цикле foreach. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Подробнее по ссылке.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dde4e161f740b1bd3e90639d3dbf341a1b517450" translate="yes" xml:space="preserve">
          <source>Trying to account for modifications during iteration is where all our foreach troubles originated, so it serves to consider some examples for this case.</source>
          <target state="translated">Попытка учесть изменения во время итерации-это то место,откуда возникли все наши проблемы с форвардом,поэтому мы рассмотрим некоторые примеры для данного случая.</target>
        </trans-unit>
        <trans-unit id="b7169fdc663586782ea538bce150905ae47564ed" translate="yes" xml:space="preserve">
          <source>Well, let's find out what that &quot;unexpected behavior&quot; is (technically, any behavior is unexpected since I no longer know what to expect).</source>
          <target state="translated">Что ж,давайте выясним,что это за &quot;неожиданное поведение&quot; (технически любое поведение неожиданно,так как я больше не знаю,чего ожидать).</target>
        </trans-unit>
        <trans-unit id="1ab0b9b999b26475829ef83e1f0b570dd0b5e77b" translate="yes" xml:space="preserve">
          <source>What is going on here? My C-fu is not good enough for me to able to extract a proper conclusion simply by looking at the PHP source code, I would appreciate it if someone could translate it into English for me.</source>
          <target state="translated">Что здесь происходит? Мой C-fu недостаточно хорош для того,чтобы я мог сделать правильный вывод,просто посмотрев на исходные тексты PHP,я был бы благодарен,если бы кто-нибудь перевел его для меня на английский язык.</target>
        </trans-unit>
        <trans-unit id="95561907a33364750b2b8e1516364f240bfb03a0" translate="yes" xml:space="preserve">
          <source>When foreach first starts executing, the internal array pointer is automatically reset to the first element of the array.</source>
          <target state="translated">При первом запуске foreach указатель внутреннего массива автоматически сбрасывается на первый элемент массива.</target>
        </trans-unit>
        <trans-unit id="7a3890dc8a14c3affcfff7a3e17e38a070766491" translate="yes" xml:space="preserve">
          <source>Which means that array was modified, but since we modified it when the &lt;code&gt;foreach&lt;/code&gt; already was at the last element of the array, it &quot;decided&quot; not to loop anymore, and even though we added new element, we added it &quot;too late&quot; and it was not looped through.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что массив был изменен, но так как мы изменили его, когда &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; уже был в последнем элементе массива, он &amp;laquo;решил&amp;raquo; больше не выполнять цикл, и хотя мы добавили новый элемент, мы добавили его &amp;laquo;слишком поздно&amp;raquo; и это не было зациклено.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65702a1e70c39355a68fb6833461fd85241d87ae" translate="yes" xml:space="preserve">
          <source>Which means that it accepted the modification and went through it because it was modified &quot;in time&quot;. But if you do this:</source>
          <target state="translated">Это означает,что он принял модификацию и прошел через нее,потому что она была модифицирована &quot;вовремя&quot;.Но если вы сделаете это:</target>
        </trans-unit>
        <trans-unit id="1fd1a4f9962695956b5a0b896fb6ce6683a6dc0f" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;foreach&lt;/code&gt; does make use of the IAP, there is an additional complication: There is only one IAP, but one array can be part of multiple &lt;code&gt;foreach&lt;/code&gt; loops:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хотя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; действительно использует IAP, существует еще одно осложнение: существует только один IAP, но один массив может быть частью нескольких &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;циклов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18462cb77b79fe84dcfd1b92f599337e091e34e5" translate="yes" xml:space="preserve">
          <source>You get the same behavior when doing by-ref iteration:</source>
          <target state="translated">У тебя такое же поведение,когда ты делаешь рефлекторную итерацию:</target>
        </trans-unit>
        <trans-unit id="e6a2c66c5caf519fd3145fb125a072e560e5ed25" translate="yes" xml:space="preserve">
          <source>You will get this output:</source>
          <target state="translated">Вы получите этот выход:</target>
        </trans-unit>
        <trans-unit id="3fc54bd7f5ebfc024ec5a1d4f9148e3802ccdaea" translate="yes" xml:space="preserve">
          <source>You will get:</source>
          <target state="translated">Ты получишь:</target>
        </trans-unit>
        <trans-unit id="9e5ce9453caf5a9d5d4ebea4a03dcac1ad968aa6" translate="yes" xml:space="preserve">
          <source>a) &lt;code&gt;foreach&lt;/code&gt; works on the &lt;strong&gt;prospected copy&lt;/strong&gt; of the original array.
    It means &lt;code&gt;foreach()&lt;/code&gt; will have SHARED data storage until or unless a &lt;code&gt;prospected copy&lt;/code&gt; is
    not created &lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;foreach Notes/User comments&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;а) &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; работает над &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;предполагаемой копией&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; исходного массива. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет иметь хранилище данных SHARED до тех пор, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пока не будет создана &lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ожидаемая &lt;/font&gt;&lt;/a&gt;&lt;/font&gt; &lt;code&gt;prospected copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;каждого примечания / комментария пользователя&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6d778baf7de3191914dd29582064f66af60c2ed" translate="yes" xml:space="preserve">
          <source>array pointer is advanced by one (so on the next iteration, you'll be looking at the next element).</source>
          <target state="translated">указатель массива выдвигается на один (так что на следующей итерации вы будете смотреть на следующий элемент).</target>
        </trans-unit>
        <trans-unit id="31d1af7d4fa62aceb0ae76a9d0de0910cca5e3b6" translate="yes" xml:space="preserve">
          <source>b) What triggers a &lt;strong&gt;prospected copy&lt;/strong&gt;?
    A prospected copy is created based on the policy of &lt;code&gt;copy-on-write&lt;/code&gt;, that is, whenever
    an array passed to &lt;code&gt;foreach()&lt;/code&gt; is changed, a clone of the original array is created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;б) Что вызывает &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;предполагаемую копию&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Предполагаемая копия создается на основе политики &lt;/font&gt;&lt;/font&gt; &lt;code&gt;copy-on-write&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , то есть при каждом изменении массива, переданного в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , создается клон исходного массива.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e5bef131b548d431cca88634055bf7723f0fe7b" translate="yes" xml:space="preserve">
          <source>c) The original array and &lt;code&gt;foreach()&lt;/code&gt; iterator will have &lt;code&gt;DISTINCT SENTINEL VARIABLES&lt;/code&gt;, that is, one for the original array and other for &lt;code&gt;foreach&lt;/code&gt;; see the test code below. &lt;a href=&quot;http://php.net/manual/en/book.spl.php&quot;&gt;SPL&lt;/a&gt; , &lt;a href=&quot;http://www.php.net/manual/en/spl.iterators.php&quot;&gt;Iterators&lt;/a&gt;, and &lt;a href=&quot;http://www.php.net/manual/en/class.arrayiterator.php&quot;&gt;Array Iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c) Исходный массив &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;итератор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будут иметь &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DISTINCT SENTINEL VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , то есть один для исходного массива, а другой для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;см. код теста ниже. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/book.spl.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SPL&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/spl.iterators.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;итераторы&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/class.arrayiterator.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;итераторы массивов&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
