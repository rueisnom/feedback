<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/10057671">
    <body>
      <group id="10057671">
        <trans-unit id="431a49cdeeb4d9cc84db522a2a5c3a2cdef9de47" translate="yes" xml:space="preserve">
          <source>(*) Incrementing the &lt;code&gt;refcount&lt;/code&gt; here sounds innocuous, but violates copy-on-write (COW) semantics: This means that we are going to modify the IAP of a refcount=2 array, while COW dictates that modifications can only be performed on refcount=1 values. This violation results in user-visible behavior change (while a COW is normally transparent) because the IAP change on the iterated array will be observable -- but only until the first non-IAP modification on the array. Instead, the three &quot;valid&quot; options would have been a) to always duplicate, b) do not increment the &lt;code&gt;refcount&lt;/code&gt; and thus allowing the iterated array to be arbitrarily modified in the loop or c) don't use the IAP at all (the PHP 7 solution).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(*) Incrementar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; aqu&amp;iacute; parece inocuo, pero viola la sem&amp;aacute;ntica de copia en escritura (COW): Esto significa que vamos a modificar el IAP de una matriz refcount = 2, mientras que COW dicta que las modificaciones solo se pueden realizar en el recuento = 1 valores. Esta violaci&amp;oacute;n da como resultado un cambio de comportamiento visible para el usuario (mientras que un COW es normalmente transparente) porque el cambio de IAP en la matriz iterada ser&amp;aacute; observable, pero solo hasta la primera modificaci&amp;oacute;n no IAP en la matriz. En cambio, las tres opciones &quot;v&amp;aacute;lidas&quot; habr&amp;iacute;an sido a) duplicar siempre, b) no incrementar el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y permitir as&amp;iacute; que la matriz iterada se modifique arbitrariamente en el bucle o c) no use el IAP en absoluto (el Soluci&amp;oacute;n PHP 7).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d2e82db9cb7a24724aefb22e69a8ef395189a72" translate="yes" xml:space="preserve">
          <source>...nothing that unexpected there, in fact it seems to support the &quot;copy of source&quot; theory.</source>
          <target state="translated">...nada tan inesperado allí,de hecho parece apoyar la teoría de la &quot;copia de la fuente&quot;.</target>
        </trans-unit>
        <trans-unit id="f4497a3a12ac079d6abeb450ebe7f0a4fed04110" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/6n20ooMy&quot;&gt;Test case 3&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/6n20ooMy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Caso de prueba 3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b69a24985ff01a40a778deb19291c02020c185b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;Test case 1&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Caso de prueba 1&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b296351ad09fc5da5b353a825af3c80241645fce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/IfwJyTCL&quot;&gt;Test case 5&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/IfwJyTCL&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Caso de prueba 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9f341ef07206e6d5fe4744f7d24db0a9be7420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/JJp79xSd&quot;&gt;Test case 4&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/JJp79xSd&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Caso de prueba 4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4dfe8c8ddf3994b7c27afe0d0d0c0df19fe1f5ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/nirz6Ufh&quot;&gt;Test case 2&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/nirz6Ufh&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Caso de prueba 2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92450a86cebc52bf0c89fb24add8360ca746b9b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/Traversable&quot;&gt;&lt;code&gt;Traversable&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">&lt;a href=&quot;http://php.net/Traversable&quot;&gt; &lt;code&gt;Traversable&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Objetos&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; transitables&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="908655cd3ea9b530395773a64ca419f237ea537f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$array&lt;/code&gt; have only single element, so as per the foreach execution, 1 assign to &lt;code&gt;$v&lt;/code&gt; and it don't have any other element to move pointer</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene un solo elemento, por lo que seg&amp;uacute;n la ejecuci&amp;oacute;n foreach, 1 asigna a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no tiene ning&amp;uacute;n otro elemento para mover el puntero&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="938010d83c888eb8143f06ce28fb347711f9b87f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$array&lt;/code&gt; have two element, so now $array evaluate the zero indices and move the pointer by one. For first iteration of loop, added &lt;code&gt;$array['baz']=3;&lt;/code&gt; as pass by reference.</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene dos elementos, por lo que ahora $ array eval&amp;uacute;a los &amp;iacute;ndices cero y mueve el puntero por uno. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para la primera iteraci&amp;oacute;n del ciclo, se agreg&amp;oacute; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array['baz']=3;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;como pase por referencia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1affd49fa1fb528431442ca255c166508d81d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; supports iteration over three different kinds of values:</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; admite la iteraci&amp;oacute;n sobre tres tipos diferentes de valores:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abb2ca0c1e4616efa3f2efd4269ebebd90ad1322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation (quote from &lt;a href=&quot;http://www.php.net/manual/en/control-structures.foreach.php&quot;&gt;php.net&lt;/a&gt;):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Explicaci&amp;oacute;n (cita de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;php.net&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a4d3bc1f85063b4a7a1f3955f1173eaa16593fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE FOR PHP 7&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NOTA PARA PHP 7&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1fb7fa83cec2cb2b2385d7b48d3c6aa0f897abb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It does not allow &lt;code&gt;original array indexes&lt;/code&gt; to be used as &lt;code&gt;references&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; No permite que los &lt;/font&gt;&lt;/font&gt; &lt;code&gt;original array indexes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se utilicen como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;references&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e390762dc699d870f965a304fb7cfab2643240d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test case&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Caso de prueba&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="064c7a4ed7767e83cfb50fc272e79514ccda566e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La pregunta&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8eaecf9e823bcd133564dce45ba4540f14164da4" translate="yes" xml:space="preserve">
          <source>A good way to show the various duplication behaviors is to observe the behavior of the  &lt;code&gt;current()&lt;/code&gt; function inside a &lt;code&gt;foreach&lt;/code&gt; loop. Consider this example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una buena manera de mostrar los diversos comportamientos de duplicaci&amp;oacute;n es observar el comportamiento de la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dentro de un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bucle &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Considere este ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="236e1d04f916381e46584894a84e93c220049445" translate="yes" xml:space="preserve">
          <source>Another consequence of the &lt;code&gt;HashPointer&lt;/code&gt; backup+restore mechanism is that changes to the IAP through &lt;code&gt;reset()&lt;/code&gt; etc. usually do not impact &lt;code&gt;foreach&lt;/code&gt;. For example, the following code executes as if the &lt;code&gt;reset()&lt;/code&gt; were not present at all:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otra consecuencia del &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; copia de seguridad + restauraci&amp;oacute;n de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;HashPointer&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es que los cambios en el IAP mediante &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; etc., generalmente no afectan a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, el siguiente c&amp;oacute;digo se ejecuta como si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no estuviera presente en absoluto:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea6e6c9833112d231a15e75686626599f59cf2f4" translate="yes" xml:space="preserve">
          <source>Another important change between PHP 5 and PHP 7 relates to array duplication. Now that the IAP is no longer used, by-value array iteration will only do a &lt;code&gt;refcount&lt;/code&gt; increment (instead of duplication the array) in all cases. If the array is modified during the &lt;code&gt;foreach&lt;/code&gt; loop, at that point a duplication will occur (according to copy-on-write) and &lt;code&gt;foreach&lt;/code&gt; will keep working on the old array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Otro cambio importante entre PHP 5 y PHP 7 se relaciona con la duplicaci&amp;oacute;n de matrices. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora que el IAP ya no se usa, la iteraci&amp;oacute;n de matriz por valor solo har&amp;aacute; un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;incremento de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (en lugar de duplicar la matriz) en todos los casos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si la matriz se modifica durante el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bucle &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , en ese punto se producir&amp;aacute; una duplicaci&amp;oacute;n (de acuerdo con la copia en escritura) y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; seguir&amp;aacute; trabajando en la matriz anterior.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30f8495f70ccc77cad7c101cec7ef97f79d5b290" translate="yes" xml:space="preserve">
          <source>Another small variation, this time we'll assign the array to another variable:</source>
          <target state="translated">Otra pequeña variación,esta vez asignaremos la matriz a otra variable:</target>
        </trans-unit>
        <trans-unit id="6061b59ca687ed0aca907a08cf7627241a0b0ecc" translate="yes" xml:space="preserve">
          <source>Another weird edge case that is fixed now, is the odd effect you get when you remove and add elements that happen to have the same hash:</source>
          <target state="translated">Otro caso raro de borde que está arreglado ahora,es el extraño efecto que se obtiene cuando se quitan y se añaden elementos que por casualidad tienen el mismo hash:</target>
        </trans-unit>
        <trans-unit id="7b3c4b65d9376f8f346fae1a7e1f345e86a60260" translate="yes" xml:space="preserve">
          <source>Any changes from the original can't be notices, actually there are no changes from the original, even though you clearly assigned a value to $item. This is because you are operating on $item as it appears in the copy of $set being worked on. You can override this by grabbing $item by reference, like so:</source>
          <target state="translated">Cualquier cambio con respecto al original no puede ser notado,en realidad no hay cambios con respecto al original,aunque claramente asignó un valor a $item.Esto se debe a que estás operando en $item tal como aparece en la copia de $set en la que se está trabajando.Puedes anular esto tomando $item por referencia,así:</target>
        </trans-unit>
        <trans-unit id="35db9b2dbbaebbc8cf821369cbcf483b3bfde43a" translate="yes" xml:space="preserve">
          <source>Array duplication</source>
          <target state="translated">Duplicación de la matriz</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="823c6eac545f4e9f53730659ec02d448a1a05736" translate="yes" xml:space="preserve">
          <source>Arrays in PHP 5 have one dedicated &quot;internal array pointer&quot; (IAP), which properly supports modifications: Whenever an element is removed, there will be a check whether the IAP points to this element. If it does, it is advanced to the next element instead.</source>
          <target state="translated">Las matrices en PHP 5 tienen un &quot;puntero de matriz interna&quot; (IAP)dedicado,que soporta adecuadamente las modificaciones:Cada vez que un elemento es removido,habrá una verificación de si el IAP apunta a este elemento.Si lo hace,se avanza al siguiente elemento en su lugar.</target>
        </trans-unit>
        <trans-unit id="f75e47ce74e53d29a3f08bdad31252a7f301d27e" translate="yes" xml:space="preserve">
          <source>As a last preliminary, it should be noted that PHP uses reference counting and copy-on-write to manage memory. This means that if you &quot;copy&quot; a value, you actually just reuse the old value and increment its reference count (refcount). Only once you perform some kind of modification a real copy (called a &quot;duplication&quot;) will be done. See &lt;a href=&quot;http://blog.golemon.com/2007/01/youre-being-lied-to.html&quot;&gt;You're being lied to&lt;/a&gt; for a more extensive introduction on this topic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como &amp;uacute;ltimo paso preliminar, debe tenerse en cuenta que PHP usa el conteo de referencias y la copia en escritura para administrar la memoria. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significa que si &quot;copia&quot; un valor, en realidad solo reutiliza el valor anterior e incrementa su recuento de referencia (recuento). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo una vez que realice alg&amp;uacute;n tipo de modificaci&amp;oacute;n, se realizar&amp;aacute; una copia real (llamada &quot;duplicaci&amp;oacute;n&quot;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.golemon.com/2007/01/youre-being-lied-to.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Le est&amp;aacute;n mintiendo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para una introducci&amp;oacute;n m&amp;aacute;s extensa sobre este tema.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="542892a9365ec273fecd375c7e489fa48476131d" translate="yes" xml:space="preserve">
          <source>As foreach relies on the internal array pointer changing it within the loop may lead to unexpected behavior.</source>
          <target state="translated">Como foreach confía en el puntero de la matriz interna,cambiarlo dentro del bucle puede llevar a un comportamiento inesperado.</target>
        </trans-unit>
        <trans-unit id="baa3dd2721745beae2d7d04883df796d03dc88ac" translate="yes" xml:space="preserve">
          <source>As it is shown in the example, PHP copied $set and used it to loop over, but when $set was used inside the loop, PHP added the variables to the original array, not the copied array. Basically, PHP is only using the copied array for the execution of the loop and the assignment of $item. Because of this, the loop above only executes 3 times, and each time it appends another value to the end of the original $set, leaving the original $set with 6 elements, but never entering an infinite loop.</source>
          <target state="translated">Como se muestra en el ejemplo,PHP copió $set y lo usó para hacer un bucle,pero cuando $set se usó dentro del bucle,PHP añadió las variables a la matriz original,no a la matriz copiada.Básicamente,PHP sólo utiliza la matriz copiada para la ejecución del bucle y la asignación de $item.Debido a esto,el bucle anterior sólo se ejecuta 3 veces,y cada vez añade otro valor al final del $set original,dejando el $set original con 6 elementos,pero nunca entrando en un bucle infinito.</target>
        </trans-unit>
        <trans-unit id="ab66544e20bcc6d22c26b016a5bf97297360d4e1" translate="yes" xml:space="preserve">
          <source>As per the documentation provided by PHP manual.</source>
          <target state="translated">Según la documentación proporcionada por el manual de PHP.</target>
        </trans-unit>
        <trans-unit id="9e594b71f6bced954d7ae590b3a25fb57f21e1c4" translate="yes" xml:space="preserve">
          <source>As you can see in this case PHP will just start iterating the other entity from the start once the substitution has happened.</source>
          <target state="translated">Como pueden ver en este caso,PHP comenzará a iterar la otra entidad desde el principio una vez que la sustitución haya ocurrido.</target>
        </trans-unit>
        <trans-unit id="20f262f66c271e4ab3c91dc621f3473494822a99" translate="yes" xml:space="preserve">
          <source>As you can see, the outer loop no longer aborts after the first iteration. The reason is that both loops now have entirely separate hashtable iterators, and there is no longer any cross-contamination of both loops through a shared IAP.</source>
          <target state="translated">Como pueden ver,el bucle exterior ya no aborta después de la primera iteración.La razón es que ambos bucles tienen ahora iteradores hashtable completamente separados,y ya no hay ninguna contaminación cruzada de ambos bucles a través de un IAP compartido.</target>
        </trans-unit>
        <trans-unit id="a96acebafe34ace0cbf6ab97e41de8fa2b59af23" translate="yes" xml:space="preserve">
          <source>Besides this, php does allow to use &lt;code&gt;iterated values as a reference to the original array value&lt;/code&gt; as well. This is demonstrated below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s de esto, php tambi&amp;eacute;n permite usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;iterated values as a reference to the original array value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se demuestra a continuaci&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c1322fef9f585e5e7154becbb7d1228383785b9" translate="yes" xml:space="preserve">
          <source>But in your second example:</source>
          <target state="translated">Pero en su segundo ejemplo:</target>
        </trans-unit>
        <trans-unit id="61cf77a4a315dd7e9e2390f03668bfecb9f6a3df" translate="yes" xml:space="preserve">
          <source>But, those examples are still sane. The real fun starts if you remember that the &lt;code&gt;HashPointer&lt;/code&gt; restore uses a pointer to the element and its hash to determine whether it still exists. But: Hashes have collisions, and pointers can be reused! This means that, with a careful choice of array keys, we can make &lt;code&gt;foreach&lt;/code&gt; believe that an element that has been removed still exists, so it will jump directly to it. An example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero, esos ejemplos siguen siendo cuerdos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La verdadera diversi&amp;oacute;n comienza si recuerda que la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;restauraci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; utiliza un puntero al elemento y su hash para determinar si todav&amp;iacute;a existe. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero: los hashes tienen colisiones, y los punteros se pueden reutilizar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significa que, con una elecci&amp;oacute;n cuidadosa de las teclas de matriz, podemos hacer que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; crea que todav&amp;iacute;a existe un elemento que se ha eliminado, por lo que saltar&amp;aacute; directamente a &amp;eacute;l. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a873ee1119a94396aced11abeb0cd2d2207ad6e6" translate="yes" xml:space="preserve">
          <source>Coming back to your test cases, you can easily imagine that &lt;code&gt;foreach&lt;/code&gt; creates some kind of iterator with a reference to the array. This reference works exactly like the variable &lt;code&gt;$b&lt;/code&gt; in my example. However, the iterator along with the reference live only during the loop and then, they are both discarded. Now you can see that, in all cases but 3, the array is modified during the loop, while this extra reference is alive. This triggers a clone, and that explains what's going on here!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Volviendo a sus casos de prueba, puede imaginar f&amp;aacute;cilmente que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; crea alg&amp;uacute;n tipo de iterador con una referencia a la matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta referencia funciona exactamente como la variable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en mi ejemplo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, el iterador junto con la referencia viven solo durante el ciclo y luego, ambos se descartan. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora puede ver que, en todos los casos excepto 3, la matriz se modifica durante el ciclo, mientras esta referencia adicional est&amp;aacute; activa. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iexcl;Esto dispara un clon, y eso explica lo que est&amp;aacute; pasando aqu&amp;iacute;!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd1908e73fa068ba357e7b95d943c7ecfbd21234" translate="yes" xml:space="preserve">
          <source>Consider these nested loops over the same array (where by-ref iteration is used to make sure it really is the same one):</source>
          <target state="translated">Considere estos bucles anidados sobre la misma matriz (donde se utiliza la iteración por referencia para asegurarse de que realmente es la misma):</target>
        </trans-unit>
        <trans-unit id="befcb9dd75c6dd0a10f8bd95a14d34e8993a4204" translate="yes" xml:space="preserve">
          <source>Consider this code as an example where duplication occurs:</source>
          <target state="translated">Considere este código como un ejemplo de duplicación:</target>
        </trans-unit>
        <trans-unit id="57d82a24fd4de958c3356e0910b2308cb05d3c6e" translate="yes" xml:space="preserve">
          <source>Detailed explanation can be read at &lt;a href=&quot;https://stackoverflow.com/questions/10057671/how-foreach-actually-works&quot;&gt;How does PHP 'foreach' actually work?&lt;/a&gt; which explains the internals behind this behaviour.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se puede leer una explicaci&amp;oacute;n detallada en &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10057671/how-foreach-actually-works&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo funciona realmente PHP 'foreach'? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lo que explica los aspectos internos de este comportamiento.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="7ec6a83aa93501181bc76d815fd97e699db2e256" translate="yes" xml:space="preserve">
          <source>Examples: Effects of &lt;code&gt;current&lt;/code&gt; in foreach</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplos: efectos de la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en foreach&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d80b3f40876bd05acd5f02160f3241ab742c26e" translate="yes" xml:space="preserve">
          <source>Examples: Modification during iteration</source>
          <target state="translated">Ejemplos:Modificación durante la iteración</target>
        </trans-unit>
        <trans-unit id="7014583239968e6f988f3c793a9d2a3bc8292bd9" translate="yes" xml:space="preserve">
          <source>Examples: Your test cases</source>
          <target state="translated">Ejemplos:Sus casos de prueba</target>
        </trans-unit>
        <trans-unit id="eaf82d3114000fbe7543dd6911539ba662528cba" translate="yes" xml:space="preserve">
          <source>For a long time I assumed that &lt;code&gt;foreach&lt;/code&gt; worked with the array itself. Then I found many references to the fact that it works with a &lt;em&gt;copy&lt;/em&gt; of the array, and I have since assumed this to be the end of the story. But I recently got into a discussion on the matter, and after a little experimentation found that this was not in fact 100% true.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Durante mucho tiempo supuse que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcionaba con la matriz misma. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego encontr&amp;eacute; muchas referencias al hecho de que funciona con una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;copia&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la matriz, y desde entonces he asumido que este es el final de la historia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero recientemente tuve una discusi&amp;oacute;n sobre el asunto, y despu&amp;eacute;s de un poco de experimentaci&amp;oacute;n descubr&amp;iacute; que esto no era 100% cierto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99743dc1e1b371509b02b41756d7ef22f8ef3712" translate="yes" xml:space="preserve">
          <source>For internal classes, actual method calls are avoided by using an internal API that essentially just mirrors the &lt;code&gt;Iterator&lt;/code&gt; interface on the C level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para las clases internas, las llamadas a m&amp;eacute;todos reales se evitan mediante el uso de una API interna que esencialmente refleja la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;interfaz &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el nivel C.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96beb39c41bbc50dd98ec331cb5f6ba16ae93074" translate="yes" xml:space="preserve">
          <source>Great question, because many developers, even experienced ones, are confused by the way PHP handles arrays in foreach loops. In the standard foreach loop, PHP makes a copy of the array that is used in the loop. The copy is discarded immediately after the loop finishes. This is transparent in the operation of a simple foreach loop. 
For example:</source>
          <target state="translated">Gran pregunta,porque muchos desarrolladores,incluso los experimentados,están confundidos por la forma en que PHP maneja las matrices en los bucles de foreach.En el bucle foreach estándar,PHP hace una copia de la matriz que se usa en el bucle.La copia es descartada inmediatamente después de que el bucle termina.Esto es transparente en el funcionamiento de un simple bucle foreach.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="75618f2aca443a65c28cb788bdb7a31c7622b2b8" translate="yes" xml:space="preserve">
          <source>Hashtable iterators</source>
          <target state="translated">Iteradores de hachís</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">Aquí hay un ejemplo:</target>
        </trans-unit>
        <trans-unit id="58bc8215af40743629373e4bc4e87df55c794abe" translate="yes" xml:space="preserve">
          <source>Here is an excellent article for another side effect of this copy-on-write behaviour: &lt;a href=&quot;http://fabien.potencier.org/article/48/the-php-ternary-operator-fast-or-not&quot;&gt;The PHP Ternary Operator: Fast or not?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un excelente art&amp;iacute;culo para otro efecto secundario de este comportamiento de copia en escritura: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://fabien.potencier.org/article/48/the-php-ternary-operator-fast-or-not&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El operador ternario de PHP: &amp;iquest;R&amp;aacute;pido o no?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06fc87efa1fa8d9ad8f989a7e8c9d55bd7acc20f" translate="yes" xml:space="preserve">
          <source>Here the important part is that foreach will make &lt;code&gt;$array&lt;/code&gt; an is_ref=1 when it is iterated by reference, so basically you have the same situation as above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; la parte importante es que foreach har&amp;aacute; que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; is_ref = 1 cuando se repita por referencia, por lo que b&amp;aacute;sicamente tiene la misma situaci&amp;oacute;n que la anterior.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ef31c0a3f93f77487b87c511286a358a48ee73" translate="yes" xml:space="preserve">
          <source>Here the refcount of the &lt;code&gt;$array&lt;/code&gt; is 2 when the loop is started, so for once we actually have to do the duplication upfront. Thus &lt;code&gt;$array&lt;/code&gt; and the array used by foreach will be completely separate from the outset. That's why you get the position of the IAP wherever it was before the loop (in this case it was at the first position).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute;, el recuento de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es 2 cuando se inicia el ciclo, por lo que, por una vez, tenemos que hacer la duplicaci&amp;oacute;n por adelantado. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y el conjunto utilizado por foreach estar&amp;aacute;n completamente separados desde el principio. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es por eso que obtiene la posici&amp;oacute;n del IAP donde estaba antes del ciclo (en este caso, estaba en la primera posici&amp;oacute;n).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9320a0e42c4e40c9d72e4f533951976eb7d6cedf" translate="yes" xml:space="preserve">
          <source>Here we have the is_ref=1 case, so the array is not copied (just like above). But now that it is a reference, the array no longer has to be duplicated when passing to the by-ref &lt;code&gt;current()&lt;/code&gt; function. Thus &lt;code&gt;current()&lt;/code&gt; and &lt;code&gt;foreach&lt;/code&gt; work on the same array. You still see the off-by-one behavior though, due to the way &lt;code&gt;foreach&lt;/code&gt; advances the pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; tenemos el caso is_ref = 1, por lo que la matriz no se copia (al igual que arriba). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero ahora que es una referencia, la matriz ya no tiene que duplicarse al pasar a la funci&amp;oacute;n by-ref &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funcionan en la misma matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, todav&amp;iacute;a se ve el comportamiento off-by-one, debido a la forma en que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; avanza el puntero.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c78f9c618fca247dc03a5d8ccd4502643dd21c69" translate="yes" xml:space="preserve">
          <source>Here we should normally expect the output &lt;code&gt;1, 1, 3, 4&lt;/code&gt; according to the previous rules. How what happens is that &lt;code&gt;'FYFY'&lt;/code&gt; has the same hash as the removed element &lt;code&gt;'EzFY'&lt;/code&gt;, and the allocator happens to reuse the same memory location to store the element. So foreach ends up directly jumping to the newly inserted element, thus short-cutting the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; normalmente deber&amp;iacute;amos esperar la salida &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1, 1, 3, 4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; acuerdo con las reglas anteriores. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que sucede es que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'FYFY'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene el mismo hash que el elemento eliminado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'EzFY'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y el asignador reutiliza la misma ubicaci&amp;oacute;n de memoria para almacenar el elemento. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces foreach termina saltando directamente al elemento reci&amp;eacute;n insertado, acortando as&amp;iacute; el bucle.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b09c9e6cdc88c66a96f4f93e25e90ddea554a4e6" translate="yes" xml:space="preserve">
          <source>Here you should know that &lt;code&gt;current()&lt;/code&gt; is a by-ref function (actually: prefer-ref), even though it does not modify the array. It has to be in order to play nice with all the other functions like &lt;code&gt;next&lt;/code&gt; which are all by-ref. By-reference passing implies that the array has to be separated and thus &lt;code&gt;$array&lt;/code&gt; and the &lt;code&gt;foreach-array&lt;/code&gt; will be different. The reason you get &lt;code&gt;2&lt;/code&gt; instead of &lt;code&gt;1&lt;/code&gt; is also mentioned above: &lt;code&gt;foreach&lt;/code&gt; advances the array pointer &lt;em&gt;before&lt;/em&gt; running the user code, not after. So even though the code is at the first element, &lt;code&gt;foreach&lt;/code&gt; already advanced the pointer to the second.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; debe saber que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una funci&amp;oacute;n by-ref (en realidad: prefer-ref), a pesar de que no modifica la matriz. Tiene que ser para jugar bien con todas las otras funciones como la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;next&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que son todas por ref. El paso por referencia implica que la matriz debe estar separada y, por lo tanto, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach-array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ser&amp;aacute;n diferentes. La raz&amp;oacute;n por la que obtiene &lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; en&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tambi&amp;eacute;n se menciona anteriormente: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; avanza el puntero de matriz &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;antes de&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ejecutar el c&amp;oacute;digo de usuario, no despu&amp;eacute;s. Entonces, aunque el c&amp;oacute;digo est&amp;aacute; en el primer elemento, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya avanz&amp;oacute; el puntero al segundo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e2c11296f52e3c33b435c41a2c9058141794dda" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;$arr&lt;/code&gt; will be duplicated to prevent IAP changes on &lt;code&gt;$arr&lt;/code&gt; from leaking to &lt;code&gt;$outerArr&lt;/code&gt;. In terms of the conditions above, the array is not a reference (is_ref=0) and is used in two places (refcount=2). This requirement is unfortunate and an artifact of the suboptimal implementation (there is no concern of modification during iteration here, so we don't really need to use the IAP in the first place).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute;, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se duplicar&amp;aacute; para evitar que los cambios de IAP en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;$outerArr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ outsideArr&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En t&amp;eacute;rminos de las condiciones anteriores, la matriz no es una referencia (is_ref = 0) y se usa en dos lugares (refcount = 2). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este requisito es desafortunado y un artefacto de la implementaci&amp;oacute;n sub&amp;oacute;ptima (no hay preocupaci&amp;oacute;n de modificaci&amp;oacute;n durante la iteraci&amp;oacute;n aqu&amp;iacute;, por lo que realmente no necesitamos usar el IAP en primer lugar).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71f26286c42873f72392d673b048fc981f68e484" translate="yes" xml:space="preserve">
          <source>How does PHP 'foreach' actually work</source>
          <target state="translated">¿Cómo funciona realmente el PHP 'foreach'?</target>
        </trans-unit>
        <trans-unit id="4d7dd5b09fef4fbc13b52490cc8353aa7c961d78" translate="yes" xml:space="preserve">
          <source>However &lt;code&gt;foreach&lt;/code&gt;, being a rather special snowflake, chooses to do things slightly differently:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , al ser un copo de nieve bastante especial, elige hacer las cosas de manera ligeramente diferente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a31efb1a52d63389e065a96d4038859b40f71b1e" translate="yes" xml:space="preserve">
          <source>However, we get some interesting changes when considering modifications during iteration. I hope you will find the new behavior saner. The first example:</source>
          <target state="translated">Sin embargo,obtenemos algunos cambios interesantes al considerar las modificaciones durante la iteración.Espero que encuentre el nuevo comportamiento más cuerdo.El primer ejemplo:</target>
        </trans-unit>
        <trans-unit id="a61c4d96bcc3da5af6ed31ee756e7c946152cca3" translate="yes" xml:space="preserve">
          <source>However, what if we had used $item by reference, as I mentioned before? A single character added to the above test:</source>
          <target state="translated">Sin embargo,¿y si hubiéramos usado $item por referencia,como mencioné antes? Un solo carácter añadido a la prueba anterior:</target>
        </trans-unit>
        <trans-unit id="c00ef429043163e498185705691978c68ce29357" translate="yes" xml:space="preserve">
          <source>I believe that this is all consequence of &lt;strong&gt;On each iteration&lt;/strong&gt; part of the explanation in the documentation, which probably means that &lt;code&gt;foreach&lt;/code&gt; does all logic before it calls the code in &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Creo que todo esto es consecuencia de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En cada iteraci&amp;oacute;n,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; parte de la explicaci&amp;oacute;n en la documentaci&amp;oacute;n, lo que probablemente significa que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hace toda la l&amp;oacute;gica antes de llamar al c&amp;oacute;digo en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4697e7e52d5799d87464f9e9fddb553071695d6" translate="yes" xml:space="preserve">
          <source>If not, what is it really doing?</source>
          <target state="translated">Si no,¿qué está haciendo realmente?</target>
        </trans-unit>
        <trans-unit id="2a829325bc6b57c4325ab8e0937f30c13ff8ee66" translate="yes" xml:space="preserve">
          <source>If the array is not duplicated (is_ref=0, refcount=1), then only its &lt;code&gt;refcount&lt;/code&gt; will be incremented (*). Additionally, if &lt;code&gt;foreach&lt;/code&gt; by reference is used, then the (potentially duplicated) array will be turned into a reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si la matriz no est&amp;aacute; duplicada (is_ref = 0, refcount = 1), solo su &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se incrementar&amp;aacute; (*). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, si &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se utiliza &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por referencia, la matriz (potencialmente duplicada) se convertir&amp;aacute; en una referencia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78dc274491d6ca8054a1f088bedca2ccdc345189" translate="yes" xml:space="preserve">
          <source>If we look in the &lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;manual&lt;/a&gt;, we find this statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si miramos en el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;manual&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , encontramos esta declaraci&amp;oacute;n:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e55a1d14766bac174bfd5d5e0ed5c6eddea5d0fd" translate="yes" xml:space="preserve">
          <source>If you iterate by reference using &lt;code&gt;foreach ($arr as &amp;amp;$v)&lt;/code&gt; then &lt;code&gt;$arr&lt;/code&gt; is turned into a reference and you can change it during iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si itera por referencia usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach ($arr as &amp;amp;$v)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; entonces &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se convierte en una referencia y puede cambiarlo durante la iteraci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f6bafee81d8af7c1d8fe3a7d35b1e1d5276370d" translate="yes" xml:space="preserve">
          <source>If you run this:</source>
          <target state="translated">Si diriges esto:</target>
        </trans-unit>
        <trans-unit id="f1c3d02b13b81fde5e463b3c1e3481a89c040f02" translate="yes" xml:space="preserve">
          <source>If you still remember, the main problem with array iteration was how to handle removal of elements mid-iteration. PHP 5 used a single internal array pointer (IAP) for this purpose, which was somewhat suboptimal, as one array pointer had to be stretched to support multiple simultaneous foreach loops &lt;em&gt;and&lt;/em&gt; interaction with &lt;code&gt;reset()&lt;/code&gt; etc. on top of that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si a&amp;uacute;n recuerda, el principal problema con la iteraci&amp;oacute;n de matriz era c&amp;oacute;mo manejar la eliminaci&amp;oacute;n de elementos a mitad de la iteraci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5 utiliz&amp;oacute; un &amp;uacute;nico puntero de matriz interna (IAP) para este prop&amp;oacute;sito, que era algo sub&amp;oacute;ptimo, ya que un puntero de matriz ten&amp;iacute;a que estirarse para admitir m&amp;uacute;ltiples bucles foreach simult&amp;aacute;neos &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;e&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; interacci&amp;oacute;n con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; etc., adem&amp;aacute;s de eso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02f297f5905381c7400f2b6935063eab3c3035ae" translate="yes" xml:space="preserve">
          <source>In PHP 5 the same applies even if you iterate by value, but the array was a reference beforehand: &lt;code&gt;$ref =&amp;amp; $arr; foreach ($ref as $v)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En PHP 5, lo mismo se aplica incluso si itera por valor, pero la matriz era una referencia de antemano: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$ref =&amp;amp; $arr; foreach ($ref as $v)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c31012f51272cbd314bdcd5bbcfff2fc3b76f9e3" translate="yes" xml:space="preserve">
          <source>In example 3 you don't modify the array. In all other examples you modify either the contents or the internal array pointer. This is important when it comes to &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP&lt;/a&gt; arrays because of the semantics of the assignment operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el ejemplo 3 no modificas la matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En todos los dem&amp;aacute;s ejemplos, modifica el contenido o el puntero interno de la matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto es importante cuando se trata de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;matrices &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debido a la sem&amp;aacute;ntica del operador de asignaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22ede99ce8e51107137227faf74df0b592c69a53" translate="yes" xml:space="preserve">
          <source>In foreach loop, the first thing php does is that it creates a copy of the array which is to be iterated over. PHP then iterates over this new &lt;code&gt;copy&lt;/code&gt; of the array rather than the original one. This is demonstrated in the below example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En foreach loop, lo primero que hace php es crear una copia de la matriz que se debe repetir. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP luego itera sobre esta nueva &lt;/font&gt;&lt;/font&gt; &lt;code&gt;copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la matriz en lugar de la original. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se demuestra en el siguiente ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="134677d03213db70953d47c1bffdab544c9f93e4" translate="yes" xml:space="preserve">
          <source>In most cases, this change is transparent and has no other effect than better performance. However, there is one occasion where it results in different behavior, namely the case where the array was a reference beforehand:</source>
          <target state="translated">En la mayoría de los casos,este cambio es transparente y no tiene otro efecto que un mejor rendimiento.Sin embargo,hay una ocasión en la que da lugar a un comportamiento diferente,a saber,el caso en el que la matriz era una referencia de antemano:</target>
        </trans-unit>
        <trans-unit id="8d13b49c0d0dcf6c67a637aa73c5a0309f5ed373" translate="yes" xml:space="preserve">
          <source>In test case 3, once again the array is not duplicated, thus &lt;code&gt;foreach&lt;/code&gt; will be modifying the IAP of the &lt;code&gt;$array&lt;/code&gt; variable. At the end of the iteration, the IAP is NULL (meaning iteration has done), which &lt;code&gt;each&lt;/code&gt; indicates by returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el caso de prueba 3, una vez m&amp;aacute;s, la matriz no est&amp;aacute; duplicada, por lo tanto, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; modificar&amp;aacute; el IAP de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al final de la iteraci&amp;oacute;n, el IAP es NULL (lo que significa que la iteraci&amp;oacute;n ha terminado), que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; indica devolviendo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33d269e7a4a764b049b79e9cb1f9e20dc83243c4" translate="yes" xml:space="preserve">
          <source>In test cases 1 and 2 &lt;code&gt;$array&lt;/code&gt; starts off with refcount=1, so it will not be duplicated by &lt;code&gt;foreach&lt;/code&gt;: Only the &lt;code&gt;refcount&lt;/code&gt; is incremented. When the loop body subsequently modifies the array (which has refcount=2 at that point), the duplication will occur at that point. Foreach will continue working on an unmodified copy of &lt;code&gt;$array&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En los casos de prueba 1 y 2 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; comienza con refcount = 1, por lo que no ser&amp;aacute; duplicado por &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : S&amp;oacute;lo el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se incrementa. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando el cuerpo del bucle posteriormente modifica la matriz (que tiene refcount = 2 en ese punto), la duplicaci&amp;oacute;n ocurrir&amp;aacute; en ese punto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Foreach continuar&amp;aacute; trabajando en una copia no modificada de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1dbfb1adb9e84f34a26cf1ef4549ca5fdf33e6ac" translate="yes" xml:space="preserve">
          <source>In test cases 4 and 5 both &lt;code&gt;each&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; are by-reference functions. The &lt;code&gt;$array&lt;/code&gt; has a &lt;code&gt;refcount=2&lt;/code&gt; when it is passed to them, so it has to be duplicated. As such &lt;code&gt;foreach&lt;/code&gt; will be working on a separate array again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En los casos de prueba 4 y 5, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; son funciones por referencia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tiene un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount=2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando se les pasa, por lo que debe duplicarse. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como tal &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; estar&amp;aacute; trabajando en una matriz separada nuevamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ed0a58bec9d6612b04799a17cd5f6d6fef8450f" translate="yes" xml:space="preserve">
          <source>In the following, I will try to explain precisely how iteration works in different cases. By far the simplest case is &lt;code&gt;Traversable&lt;/code&gt; objects, as for these &lt;code&gt;foreach&lt;/code&gt; is essentially only syntax sugar for code along these lines:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A continuaci&amp;oacute;n, intentar&amp;eacute; explicar con precisi&amp;oacute;n c&amp;oacute;mo funciona la iteraci&amp;oacute;n en diferentes casos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con mucho, el caso m&amp;aacute;s simple son los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;objetos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Traversable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ya que para estos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es esencialmente solo el az&amp;uacute;car de sintaxis para el c&amp;oacute;digo a lo largo de estas l&amp;iacute;neas:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7339506450bbac19831889ae44122066b7fe107" translate="yes" xml:space="preserve">
          <source>In your second example, you start with two elements, and foreach loop is not at the last element so it evaluates the array on the next iteration and thus realises that there is new element in the array.</source>
          <target state="translated">En su segundo ejemplo,usted comienza con dos elementos,y el bucle frontal no está en el último elemento,por lo que evalúa la matriz en la siguiente iteración y así se da cuenta de que hay un nuevo elemento en la matriz.</target>
        </trans-unit>
        <trans-unit id="fde8dd98d7e3c5d285a56193ed177dd2ac066399" translate="yes" xml:space="preserve">
          <source>Internal array pointer and HashPointer</source>
          <target state="translated">El puntero de la matriz interna y el HashPointer</target>
        </trans-unit>
        <trans-unit id="55351291e1c5fef6a45bef8efd585915f3bd479a" translate="yes" xml:space="preserve">
          <source>Is there any situation where using functions that adjust the array pointer (&lt;code&gt;each()&lt;/code&gt;, &lt;code&gt;reset()&lt;/code&gt; et al.) during a &lt;code&gt;foreach&lt;/code&gt; could affect the outcome of the loop?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Hay alguna situaci&amp;oacute;n en la que el uso de funciones que ajustan el puntero de matriz ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y otros) durante un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; podr&amp;iacute;a afectar el resultado del bucle?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfb1d36860bfa186a30dd861585a17c395ef9f61" translate="yes" xml:space="preserve">
          <source>Is this correct and the whole story?</source>
          <target state="translated">¿Esto es correcto y toda la historia?</target>
        </trans-unit>
        <trans-unit id="7bb8345349d5d2faf3d2e667f6fed8801fadc203" translate="yes" xml:space="preserve">
          <source>It seems to me that &lt;code&gt;foreach&lt;/code&gt; works with a &lt;em&gt;copy&lt;/em&gt; of the array, but sets the array pointer of the source array to the end of the array after the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Me parece que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funciona con una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;copia&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la matriz, pero establece el puntero de la matriz de origen al final de la matriz despu&amp;eacute;s del ciclo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2d00199b28cd212143ebd236537b2023ca47451" translate="yes" xml:space="preserve">
          <source>Iteration of arrays and plain objects is significantly more complicated. First of all, it should be noted that in PHP &quot;arrays&quot; are really ordered dictionaries and they will be traversed according to this order (which matches the insertion order as long as you didn't use something like &lt;code&gt;sort&lt;/code&gt;). This is opposed to iterating by the natural order of the keys (how lists in other languages often work) or having no defined order at all (how dictionaries in other languages often work).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La iteraci&amp;oacute;n de matrices y objetos simples es significativamente m&amp;aacute;s complicada. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En primer lugar, debe tenerse en cuenta que en PHP las &quot;matrices&quot; son diccionarios realmente ordenados y se recorrer&amp;aacute;n de acuerdo con este orden (que coincide con el orden de inserci&amp;oacute;n siempre que no haya utilizado algo as&amp;iacute; como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se opone a iterar por el orden natural de las teclas (c&amp;oacute;mo funcionan a menudo las listas en otros idiomas) o no tener un orden definido (c&amp;oacute;mo funcionan a menudo los diccionarios en otros idiomas).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0d7e336b7b454ce37f9f414661d83e60fed3826" translate="yes" xml:space="preserve">
          <source>Let me prefix this by saying that I know what &lt;code&gt;foreach&lt;/code&gt; is, does and how to use it. This question concerns how it works under the bonnet, and I don't want any answers along the lines of &quot;this is how you loop an array with &lt;code&gt;foreach&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Perm&amp;iacute;tanme prefijar esto diciendo que s&amp;eacute; qu&amp;eacute; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;qu&amp;eacute; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;hace y c&amp;oacute;mo usarlo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta pregunta se refiere a c&amp;oacute;mo funciona bajo el cap&amp;oacute;, y no quiero ninguna respuesta en la l&amp;iacute;nea de &quot;as&amp;iacute; es como se hace un bucle con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b63928b527f92fb71f4104a7bd7acfb52f9d816d" translate="yes" xml:space="preserve">
          <source>Let me show what I mean. For the following test cases, we will be working with the following array:</source>
          <target state="translated">Déjame mostrarte lo que quiero decir.Para los siguientes casos de prueba,trabajaremos con el siguiente conjunto:</target>
        </trans-unit>
        <trans-unit id="f751c6687bfd848ca5a2e2261174f789d8ab95d8" translate="yes" xml:space="preserve">
          <source>Let's consider a few examples, starting with your test cases:</source>
          <target state="translated">Consideremos algunos ejemplos,comenzando con sus casos de prueba:</target>
        </trans-unit>
        <trans-unit id="3097fd5b0d5d815f05c7fe33aaa245060a3bf92e" translate="yes" xml:space="preserve">
          <source>Namely, the array pointer is already moved forward &lt;em&gt;before&lt;/em&gt; the loop body runs. This means that while the loop body is working on element &lt;code&gt;$i&lt;/code&gt;, the IAP is already at element &lt;code&gt;$i+1&lt;/code&gt;. This is the reason why code samples showing modification during iteration will always &lt;code&gt;unset&lt;/code&gt; the &lt;em&gt;next&lt;/em&gt; element, rather than the current one.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;A saber, el puntero de la matriz ya se mueve hacia adelante &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;antes de&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que se ejecute el cuerpo del bucle. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significa que mientras el cuerpo del bucle est&amp;aacute; trabajando en el elemento &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el IAP ya est&amp;aacute; en el elemento &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$i+1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta es la raz&amp;oacute;n por la cual las muestras de c&amp;oacute;digo que muestran modificaciones durante la iteraci&amp;oacute;n siempre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;siguiente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; elemento, en lugar del actual.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40a05dbc2f0a8aa4f92fc60f38c31f2f5d423ec4" translate="yes" xml:space="preserve">
          <source>Normal objects</source>
          <target state="translated">Objetos normales</target>
        </trans-unit>
        <trans-unit id="e08a5016973ce24d28ac18e9fdb6932843bef710" translate="yes" xml:space="preserve">
          <source>Now lets try a small modification:</source>
          <target state="translated">Ahora vamos a intentar una pequeña modificación:</target>
        </trans-unit>
        <trans-unit id="5656010570fbcc2ba537a9c5378cc92d8408d098" translate="yes" xml:space="preserve">
          <source>Objects have by-handle passing semantics, which for most practical purposes means that they behave like references. So objects can always be changed during iteration.</source>
          <target state="translated">Los objetos tienen una semántica pasajera,lo que para la mayoría de los propósitos prácticos significa que se comportan como referencias.Así que los objetos siempre pueden ser cambiados durante la iteración.</target>
        </trans-unit>
        <trans-unit id="7c216b53de040b00d089894dd8ddbc5bde03d966" translate="yes" xml:space="preserve">
          <source>On each iteration, the value of the current element is assigned to $v and the internal</source>
          <target state="translated">En cada iteración,el valor del elemento actual se asigna a $v y el interno</target>
        </trans-unit>
        <trans-unit id="a4f99d71c5a8b263015886cdb2f907d0ce4d1a2e" translate="yes" xml:space="preserve">
          <source>One last odd case that I'd like to mention, it is that PHP allows you to substitute the iterated entity during the loop. So you can start iterating on one array and then replace it with another array halfway through. Or start iterating on an array and then replace it with an object:</source>
          <target state="translated">Un último caso extraño que me gustaría mencionar,es que PHP permite sustituir la entidad iterada durante el bucle.Así que puedes empezar a iterar en una matriz y luego reemplazarla con otra matriz a mitad de camino.O empezar a iterar en una matriz y luego reemplazarla con un objeto:</target>
        </trans-unit>
        <trans-unit id="c242255b4e20b8454762a9c1cfc23f3f6bb8f097" translate="yes" xml:space="preserve">
          <source>PHP 5</source>
          <target state="translated">PHP 5</target>
        </trans-unit>
        <trans-unit id="084c3eec12a7ea0542a27183c70a323878c7d71b" translate="yes" xml:space="preserve">
          <source>PHP 7</source>
          <target state="translated">PHP 7</target>
        </trans-unit>
        <trans-unit id="5845f09d0ec80f31277ff6f4551cfaec806397d0" translate="yes" xml:space="preserve">
          <source>PHP 7 uses a different approach, namely, it supports creating an arbitrary amount of external, safe hashtable iterators. These iterators have to be registered in the array, from which point on they have the same semantics as the IAP: If an array element is removed, all hashtable iterators pointing to that element will be advanced to the next element.</source>
          <target state="translated">PHP 7 utiliza un enfoque diferente,a saber,soporta la creación de una cantidad arbitraria de iteradores externos y seguros de hashtable.Estos iteradores tienen que ser registrados en la matriz,a partir de lo cual tienen la misma semántica que el IAP:Si un elemento de la matriz es eliminado,todos los iteradores hashtable que apuntan a ese elemento serán avanzados al siguiente elemento.</target>
        </trans-unit>
        <trans-unit id="34259c10ebcccdc96f1a84d84d17eb2f067ddea9" translate="yes" xml:space="preserve">
          <source>PHP foreach loop can be used with &lt;code&gt;Indexed arrays&lt;/code&gt;, &lt;code&gt;Associative arrays&lt;/code&gt; and &lt;code&gt;Object public variables&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El bucle foreach de PHP se puede usar con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Indexed arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Associative arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object public variables&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c0047e404d6d99d4b1d7ddc87de51f778964b06" translate="yes" xml:space="preserve">
          <source>Position advancement order</source>
          <target state="translated">Orden de ascenso de posición</target>
        </trans-unit>
        <trans-unit id="758faebc57cf11a657355347e9e4d05b49a43dde" translate="yes" xml:space="preserve">
          <source>Previously by-value iteration of reference-arrays was special cases. In this case, no duplication occurred, so all modifications of the array during iteration would be reflected by the loop. In PHP 7 this special case is gone: A by-value iteration of an array will &lt;strong&gt;always&lt;/strong&gt; keep working on the original elements, disregarding any modifications during the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Anteriormente, la iteraci&amp;oacute;n por valor de las matrices de referencia era casos especiales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En este caso, no se produjo duplicaci&amp;oacute;n, por lo que todas las modificaciones de la matriz durante la iteraci&amp;oacute;n se reflejar&amp;iacute;an en el bucle. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En PHP 7, este caso especial desapareci&amp;oacute;: una iteraci&amp;oacute;n por valor de una matriz &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;siempre&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; seguir&amp;aacute; funcionando en los elementos originales, sin tener en cuenta las modificaciones durante el ciclo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0b70ce3dfe944d7a532ef64d990426ece003306" translate="yes" xml:space="preserve">
          <source>Previously the HashPointer restore mechanism jumped right to the new element because it &quot;looked&quot; like it's the same as the removed element (due to colliding hash and pointer). As we no longer rely on the element hash for anything, this is no longer an issue.</source>
          <target state="translated">Anteriormente,el mecanismo de restauración del HashPointer saltó directamente al nuevo elemento porque &quot;parecía&quot; que era el mismo que el elemento eliminado (debido a la colisión del hash y el puntero).Como ya no dependemos del hash del elemento para nada,esto ya no es un problema.</target>
        </trans-unit>
        <trans-unit id="b2fef7d7e527879e31aa00e11336ca35080be717" translate="yes" xml:space="preserve">
          <source>Results in an infinite loop. Note this actually is an infinite loop, you&amp;rsquo;ll have to either kill the script yourself or wait for your OS to run out of memory. I added the following line to my script so PHP would run out of memory very quickly, I suggest you do the same if you&amp;rsquo;re going to be running these infinite loop tests:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Resultados en un bucle infinito. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que en realidad es un bucle infinito, tendr&amp;aacute; que eliminar el script usted mismo o esperar a que su sistema operativo se quede sin memoria. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Agregu&amp;eacute; la siguiente l&amp;iacute;nea a mi script para que PHP se quedara sin memoria muy r&amp;aacute;pidamente, le sugiero que haga lo mismo si va a ejecutar estas pruebas de bucle infinito:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f485176e25715d83c8d06eb7fb74f9a075ad672" translate="yes" xml:space="preserve">
          <source>Right... this seems to suggest that &lt;code&gt;foreach&lt;/code&gt; relies on the array pointer of the source array. But we've just proved that we're &lt;em&gt;not working with the source array&lt;/em&gt;, right? Well, not entirely.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Correcto ... esto parece sugerir que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; se&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; basa en el puntero de la matriz fuente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero acabamos de demostrar que no estamos &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;trabajando con la matriz fuente&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &amp;iquest;verdad? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bueno, no del todo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26851422c5fa9895c974ae2a35d04d45be56bf30" translate="yes" xml:space="preserve">
          <source>So as per your first example:</source>
          <target state="translated">Así que según su primer ejemplo:</target>
        </trans-unit>
        <trans-unit id="a118c312dcc816d78542af9b056c14047650c765" translate="yes" xml:space="preserve">
          <source>So far, so good. Iterating over a dictionary can't be too hard, right? The problems begin when you realize that an array/object can change during iteration. There are multiple ways this can happen:</source>
          <target state="translated">Hasta ahora,todo bien.Iterar sobre un diccionario no puede ser muy difícil,¿verdad? Los problemas empiezan cuando te das cuenta de que un objeto de la matriz puede cambiar durante la iteración.Hay múltiples formas en que esto puede suceder:</target>
        </trans-unit>
        <trans-unit id="22767625f947aff65dabcdc777a951ea58e15915" translate="yes" xml:space="preserve">
          <source>So in this previous example with the infinite loop, we see the reason why PHP was written to create a copy of the array to loop over. When a copy is created and used only by the structure of the loop construct itself, the array stays static throughout the execution of the loop, so you&amp;rsquo;ll never run into issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, en este ejemplo anterior con el bucle infinito, vemos la raz&amp;oacute;n por la que PHP se escribi&amp;oacute; para crear una copia de la matriz para realizar un bucle. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando se crea una copia y se usa solo por la estructura de la construcci&amp;oacute;n del bucle, la matriz permanece est&amp;aacute;tica durante la ejecuci&amp;oacute;n del bucle, por lo que nunca se encontrar&amp;aacute; con problemas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4810d33897e930efe44a50f6d87f8ce4b8c4edb" translate="yes" xml:space="preserve">
          <source>So it is evident and observable, when $item is operated on by-reference, the changes made to $item are made to the members of the original $set. Using $item by reference also prevents PHP from creating the array copy. To test this, first we&amp;rsquo;ll show a quick script demonstrating the copy:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, es evidente y observable, cuando $ item se opera por referencia, los cambios realizados en $ item se realizan a los miembros del conjunto $ original. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El uso de $ item por referencia tambi&amp;eacute;n evita que PHP cree la copia de la matriz. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para probar esto, primero mostraremos una secuencia de comandos r&amp;aacute;pida que demuestra la copia:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1a42e1f249741b6b1505dd1fe7c48630ed823c6" translate="yes" xml:space="preserve">
          <source>So the copy is created but the developer doesn't notice, because the original array isn&amp;rsquo;t referenced within the loop or after the loop finishes. However, when you attempt to modify the items in a loop, you find that they are unmodified when you finish:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, se crea la copia pero el desarrollador no se da cuenta, porque la matriz original no est&amp;aacute; referenciada dentro del ciclo o despu&amp;eacute;s de que finaliza el ciclo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, cuando intenta modificar los elementos en un bucle, descubre que no se modifican cuando termina:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8607657ed5ac59972cd210308aab7916fb222409" translate="yes" xml:space="preserve">
          <source>So, despite the fact that we are not working directly with the source array, we are working directly with the source array pointer - the fact that the pointer is at the end of the array at the end of the loop shows this. Except this can't be true - if it was, then &lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;test case 1&lt;/a&gt; would loop forever.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, a pesar del hecho de que no estamos trabajando directamente con la matriz fuente, estamos trabajando directamente con el puntero de la matriz fuente; el hecho de que el puntero est&amp;eacute; al final de la matriz al final del ciclo lo demuestra. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Excepto que esto no puede ser cierto: si lo fuera, el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;caso de prueba 1&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se repetir&amp;iacute;a para siempre.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7620823db465a8213cdba392c149d0cffe8cba72" translate="yes" xml:space="preserve">
          <source>So, in your first example you only have one element in the array, and when the pointer is moved the next element does not exist, so after you add new element foreach ends because it already &quot;decided&quot; that it it as the last element.</source>
          <target state="translated">Así,en tu primer ejemplo sólo tienes un elemento en la matriz,y cuando el puntero se mueve el siguiente elemento no existe,así que después de que añadas un nuevo elemento,se termina porque ya &quot;decidió&quot; que era el último elemento.</target>
        </trans-unit>
        <trans-unit id="35d0be98ccd23d238ffd883d44c8e1a3bba9053a" translate="yes" xml:space="preserve">
          <source>Some points to note when working with &lt;code&gt;foreach()&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Algunos puntos a tener en cuenta al trabajar con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57120796a80a08ef6aa8f16cb423a7f2ab9f0a14" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&quot;&gt;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Fuente: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c75dc3f330b31a50042d85df76b4fbc730b896f9" translate="yes" xml:space="preserve">
          <source>Stack&amp;nbsp;Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2728709&quot;&gt;How to make sure the value is reset in a 'foreach' loop in PHP?&lt;/a&gt;&lt;/em&gt; addresses the cases (3,4,5) of your question.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pregunta de desbordamiento de pila &amp;iquest; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2728709&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;oacute;mo asegurarse de que el valor se restablezca en un bucle 'foreach' en PHP? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aborda los casos (3,4,5) de su pregunta.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43ee53a8fd3dd8f60f02f4016979d5c8131c4a41" translate="yes" xml:space="preserve">
          <source>Substituting the iterated entity during the loop</source>
          <target state="translated">Sustitución de la entidad iterada durante el bucle</target>
        </trans-unit>
        <trans-unit id="799e1f85c65dc059f75f6566ee59feb5cfae8d0f" translate="yes" xml:space="preserve">
          <source>Test case 3 changes: &lt;code&gt;Foreach&lt;/code&gt; no longer uses the IAP, so &lt;code&gt;each()&lt;/code&gt; is not affected by the loop. It will have the same output before and after.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cambios en el caso de prueba 3: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya no usa el IAP, por lo que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se ve afectado por el bucle. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tendr&amp;aacute; la misma salida antes y despu&amp;eacute;s.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd92aadc08b97ed5f3daa2ae99864416eaa8183a" translate="yes" xml:space="preserve">
          <source>Test cases 1 and 2 retain the same output: By-value array iteration always keep working on the original elements. (In this case, even &lt;code&gt;refcounting&lt;/code&gt; and duplication behavior is exactly the same between PHP 5 and PHP 7).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los casos de prueba 1 y 2 conservan la misma salida: la iteraci&amp;oacute;n de matriz de valores siempre funciona en los elementos originales. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(En este caso, incluso el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;comportamiento de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcounting&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y duplicaci&amp;oacute;n es exactamente el mismo entre PHP 5 y PHP 7).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5302152a206d4acde3103ec9c65b3fc49d9cde5" translate="yes" xml:space="preserve">
          <source>Test cases 4 and 5 stay the same: &lt;code&gt;each()&lt;/code&gt; and &lt;code&gt;reset()&lt;/code&gt; will duplicate the array before changing the IAP, while &lt;code&gt;foreach&lt;/code&gt; still uses the original array. (Not that the IAP change would have mattered, even if the array was shared.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los casos de prueba 4 y 5 permanecen igual: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; duplicar&amp;aacute;n la matriz antes de cambiar el IAP, mientras que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; todav&amp;iacute;a usa la matriz original. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(No es que el cambio de IAP hubiera importado, incluso si se hubiera compartido la matriz).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9e56b636d04a99b97687e1513e0cfbb1be220f5" translate="yes" xml:space="preserve">
          <source>The IAP is a visible feature of an array (exposed through the &lt;code&gt;current&lt;/code&gt; family of functions), as such changes to the IAP count as modifications under copy-on-write semantics. This, unfortunately, means that &lt;code&gt;foreach&lt;/code&gt; is in many cases forced to duplicate the array it is iterating over. The precise conditions are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El IAP es una caracter&amp;iacute;stica visible de una matriz (expuesta a trav&amp;eacute;s de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;familia &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de funciones), ya que tales cambios en el IAP cuentan como modificaciones bajo la sem&amp;aacute;ntica de copia en escritura. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto, desafortunadamente, significa que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en muchos casos se ve obligado a duplicar la matriz sobre la que est&amp;aacute; iterando. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las condiciones precisas son:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdc4e3aeface141ed50ea2f3a5bb834802fbbc54" translate="yes" xml:space="preserve">
          <source>The PHP manual also states:</source>
          <target state="translated">El manual de PHP también dice:</target>
        </trans-unit>
        <trans-unit id="e2744babbe5f6a155ba4b49e4f30afc0e91f850e" translate="yes" xml:space="preserve">
          <source>The array has refcount&amp;gt;1. If &lt;code&gt;refcount&lt;/code&gt; is 1, then the array is not shared and we're free to modify it directly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La matriz tiene refcount&amp;gt; 1. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es 1, la matriz no se comparte y podemos modificarla directamente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b7837793519155ae58510c7f461d7624338cf8e" translate="yes" xml:space="preserve">
          <source>The array is not a reference (is_ref=0). If it's a reference, then changes to it are &lt;em&gt;supposed&lt;/em&gt; to propagate, so it should not be duplicated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La matriz no es una referencia (is_ref = 0). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se trata de una referencia, se &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;supone&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cambios se &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propaguen, por lo que no debe duplicarse.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f59618d362ad66a77e6991b447adba9675635b9" translate="yes" xml:space="preserve">
          <source>The assignment operator for the arrays in PHP works more like a lazy clone. Assigning one variable to another that contains an array will clone the array, unlike most languages. However, the actual cloning will not be done unless it is needed. This means that the clone will take place only when either of the variables is modified (copy-on-write).</source>
          <target state="translated">El operador de asignación de las matrices en PHP funciona más como un clon perezoso.Asignar una variable a otra que contiene un array clonará el array,a diferencia de la mayoría de los lenguajes.Sin embargo,la clonación real no se hará a menos que sea necesario.Esto significa que el clon se llevará a cabo sólo cuando alguna de las variables se modifique (copy-on-write).</target>
        </trans-unit>
        <trans-unit id="14fa8ff0cf5d61c850805b6e5fb983b36b041d68" translate="yes" xml:space="preserve">
          <source>The behavior of your test cases is simple to explain at this point:</source>
          <target state="translated">El comportamiento de sus casos de prueba es simple de explicar en este punto:</target>
        </trans-unit>
        <trans-unit id="915873c4a3ce154fb4090c25aea28f3a43b43480" translate="yes" xml:space="preserve">
          <source>The expected part here is that &lt;code&gt;(1, 2)&lt;/code&gt; is missing from the output because element &lt;code&gt;1&lt;/code&gt; was removed. What's probably unexpected is that the outer loop stops after the first element. Why is that?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La parte esperada aqu&amp;iacute; es que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; falta en la salida porque &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se elimin&amp;oacute; el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;elemento &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que probablemente sea inesperado es que el bucle externo se detiene despu&amp;eacute;s del primer elemento. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Porqu&amp;eacute; es eso?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="565256f6d92b66af02eea962561abc18319450cb" translate="yes" xml:space="preserve">
          <source>The first form loops over the array given by array_expression. On each
  iteration, the value of the current element is assigned to $value and
  the internal array pointer is advanced by one (so on the next
  iteration, you'll be looking at the next element).</source>
          <target state="translated">La primera forma hace un bucle sobre la matriz dada por array_expression.En cada iteración,el valor del elemento actual se asigna a $value y el puntero interno de la matriz se adelanta en uno (así que en la siguiente iteración,estarás viendo el siguiente elemento).</target>
        </trans-unit>
        <trans-unit id="93a9acd0a95da182c6b4c513a8110aeb3ca36d0e" translate="yes" xml:space="preserve">
          <source>The following example shows that each() and reset() DOES NOT affect &lt;code&gt;SENTINEL&lt;/code&gt; variables
&lt;code&gt;(for example, the current index variable)&lt;/code&gt; of the &lt;code&gt;foreach()&lt;/code&gt; iterator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El siguiente ejemplo muestra que cada () y reset () NO afectan &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SENTINEL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; variables &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SENTINEL &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(for example, the current index variable)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;iterador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87247b8d9ab9cc6541ded942f6c651cfc9dcd41e" translate="yes" xml:space="preserve">
          <source>The problem with allowing modifications during iteration is the case where the element you are currently on is removed. Say you use a pointer to keep track of which array element you are currently at. If this element is now freed, you are left with a dangling pointer (usually resulting in a segfault).</source>
          <target state="translated">El problema de permitir modificaciones durante la iteración es el caso en que el elemento en el que se encuentra actualmente es eliminado.Digamos que usas un puntero para seguir la pista de qué elemento de la matriz estás actualmente.Si este elemento se libera ahora,te quedas con un puntero colgante (normalmente resultando en un fallo de segmento).</target>
        </trans-unit>
        <trans-unit id="9656b1e147952d098aeb672618e2c2a5d55eeaf8" translate="yes" xml:space="preserve">
          <source>The reason behind this is the nested-loop hack described above: Before the loop body runs, the current IAP position and hash is backed up into a &lt;code&gt;HashPointer&lt;/code&gt;. After the loop body it will be restored, but only if the element still exists, otherwise the current IAP position (whatever it may be) is used instead. In the example above this is exactly the case: The current element of the outer loop has been removed, so it will use the IAP, which has already been marked as finished by the inner loop!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La raz&amp;oacute;n detr&amp;aacute;s de esto es el hack de bucle anidado descrito anteriormente: antes de que se ejecute el cuerpo del bucle, la posici&amp;oacute;n IAP actual y el hash se respaldan en un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Despu&amp;eacute;s del cuerpo del bucle, se restaurar&amp;aacute;, pero solo si el elemento a&amp;uacute;n existe, de lo contrario, se usa la posici&amp;oacute;n IAP actual (cualquiera que sea). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En el ejemplo anterior, este es exactamente el caso: el elemento actual del bucle externo se ha eliminado, por lo que utilizar&amp;aacute; el IAP, que ya ha sido marcado como terminado por el bucle interno.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba05429027cb017f1644ed283db2a59b07a096cf" translate="yes" xml:space="preserve">
          <source>The reason is that, while &lt;code&gt;reset()&lt;/code&gt; temporarily modifies the IAP, it will be restored to the current foreach element after the loop body. To force &lt;code&gt;reset()&lt;/code&gt; to make an effect on the loop, you have to additionally remove the current element, so that the backup/restore mechanism fails:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La raz&amp;oacute;n es que, mientras &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; modifica temporalmente el IAP, se restaurar&amp;aacute; al elemento foreach actual despu&amp;eacute;s del cuerpo del bucle. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para forzar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para que tenga efecto en el bucle, debe eliminar adicionalmente el elemento actual, de modo que el mecanismo de copia de seguridad / restauraci&amp;oacute;n falle:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63f9f02be33a648c748f491f47a14295cc7acb13" translate="yes" xml:space="preserve">
          <source>The same also applies to objects, as the object properties can be seen as another (ordered) dictionary mapping property names to their values, plus some visibility handling. In the majority of cases, the object properties are not actually stored in this rather inefficient way. However, if you start iterating over an object, the packed representation that is normally used will be converted to a real dictionary. At that point, iteration of plain objects becomes very similar to iteration of arrays (which is why I'm not discussing plain-object iteration much in here).</source>
          <target state="translated">Lo mismo se aplica a los objetos,ya que las propiedades de los objetos se pueden ver como otro diccionario (ordenado)que asigna los nombres de las propiedades a sus valores,además de cierto manejo de la visibilidad.En la mayoría de los casos,las propiedades de los objetos no se almacenan de esta manera tan ineficiente.Sin embargo,si se comienza a iterar sobre un objeto,la representación empaquetada que se utiliza normalmente se convertirá en un verdadero diccionario.En ese momento,la iteración de objetos simples se vuelve muy similar a la iteración de matrices (por lo que no estoy discutiendo mucho sobre la iteración de objetos simples aquí).</target>
        </trans-unit>
        <trans-unit id="1a0968550b75fdd5a4eacffc8fd75cfc37aab8f9" translate="yes" xml:space="preserve">
          <source>The second set of examples was related to the behavior of &lt;code&gt;current()&lt;/code&gt; under different &lt;code&gt;reference/refcounting&lt;/code&gt; configurations. This no longer makes sense, as &lt;code&gt;current()&lt;/code&gt; is completely unaffected by the loop, so its return value always stays the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El segundo conjunto de ejemplos estaba relacionado con el comportamiento de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bajo diferentes &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;configuraciones de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reference/refcounting&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto ya no tiene sentido, ya que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se ve afectado por el bucle, por lo que su valor de retorno siempre permanece igual.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4db5d7598394dc4efaf2ebddee1152d9a2cb947f" translate="yes" xml:space="preserve">
          <source>The three aspects described above should provide you with a mostly complete impression of the idiosyncrasies of the &lt;code&gt;foreach&lt;/code&gt; implementation and we can move on to discuss some examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los tres aspectos descritos anteriormente deber&amp;iacute;an proporcionarle una impresi&amp;oacute;n mayormente completa de las idiosincrasias de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;implementaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y podemos pasar a discutir algunos ejemplos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20a766900138d9e9e26f7eb059f6b2414363bea0" translate="yes" xml:space="preserve">
          <source>There are different ways of solving this issue. PHP 5 and PHP 7 differ significantly in this regard and I'll describe both behaviors in the following. The summary is that PHP 5's approach was rather dumb and lead to all kinds of weird edge-case issues, while PHP 7's more involved approach results in more predictable and consistent behavior.</source>
          <target state="translated">Hay diferentes maneras de resolver este problema.PHP 5 y PHP 7 difieren significativamente en este aspecto y describiré ambos comportamientos en lo siguiente.El resumen es que el enfoque de PHP 5 fue bastante tonto y condujo a todo tipo de problemas extraños de casos límite,mientras que el enfoque más involucrado de PHP 7 resulta en un comportamiento más predecible y consistente.</target>
        </trans-unit>
        <trans-unit id="1f629149a2bff5b4f1c466133ca920bd33974cdf" translate="yes" xml:space="preserve">
          <source>There is one last implementation detail that you have to be aware of to properly understand the code samples below. The &quot;normal&quot; way of looping through some data structure would look something like this in pseudocode:</source>
          <target state="translated">Hay un último detalle de implementación que hay que tener en cuenta para entender correctamente los ejemplos de código que se muestran a continuación.La forma &quot;normal&quot; de hacer un bucle a través de alguna estructura de datos se vería algo así como esto en pseudocódigo:</target>
        </trans-unit>
        <trans-unit id="b91dabc2f851c9c172de2f74b35ab48cd0251a75" translate="yes" xml:space="preserve">
          <source>This backs up our initial conclusion, we are working with a copy of the source array during the loop, otherwise we would see the modified values during the loop. &lt;em&gt;But...&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto respalda nuestra conclusi&amp;oacute;n inicial, estamos trabajando con una copia de la matriz fuente durante el ciclo, de lo contrario ver&amp;iacute;amos los valores modificados durante el ciclo. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero...&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1b089bdce204bf49714d0cd96aee6fb5deb45f" translate="yes" xml:space="preserve">
          <source>This clearly shows that we are not working directly with the source array - otherwise the loop would continue forever, since we are constantly pushing items onto the array during the loop. But just to be sure this is the case:</source>
          <target state="translated">Esto muestra claramente que no estamos trabajando directamente con el conjunto de la fuente-de lo contrario el bucle continuaría para siempre,ya que estamos constantemente empujando elementos en el conjunto durante el bucle.Pero para estar seguros de que este es el caso:</target>
        </trans-unit>
        <trans-unit id="bd5628afe1d31ff01bbe9de9e91da9996b858397" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;foreach&lt;/code&gt; will no longer use the IAP &lt;strong&gt;at all&lt;/strong&gt;. The &lt;code&gt;foreach&lt;/code&gt; loop will be absolutely no effect on the results of &lt;code&gt;current()&lt;/code&gt; etc. and its own behavior will never be influenced by functions like  &lt;code&gt;reset()&lt;/code&gt; etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significa que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya no usar el IAP &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en absoluto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bucle &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; no&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tendr&amp;aacute; ning&amp;uacute;n efecto en los resultados de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; etc. y su propio comportamiento nunca estar&amp;aacute; influenciado por funciones como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; etc.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f91d4073e1806ac4e46d9be9407b7439ade530c5" translate="yes" xml:space="preserve">
          <source>This outputs:</source>
          <target state="translated">Esto produce:</target>
        </trans-unit>
        <trans-unit id="3d273d739b2b7205fdf68170c768084c1fcdfbc4" translate="yes" xml:space="preserve">
          <source>This reflects the by-handle semantics of objects (i.e. they behave reference-like even in by-value contexts).</source>
          <target state="translated">Esto refleja la semántica de los objetos a mano (es decir,se comportan como referencia,incluso en contextos de valores individuales).</target>
        </trans-unit>
        <trans-unit id="c95f478c775abdcfe2b0089734af8e18efb1ae85" translate="yes" xml:space="preserve">
          <source>This, of course, does not apply to by-reference iteration. If you iterate by-reference all modifications will be reflected by the loop. Interestingly, the same is true for by-value iteration of plain objects:</source>
          <target state="translated">Esto,por supuesto,no se aplica a la iteración por referencia.Si se itera por referencia,todas las modificaciones se reflejarán en el bucle.Curiosamente,lo mismo es cierto para la iteración por valor de objetos simples:</target>
        </trans-unit>
        <trans-unit id="9baca8009051358845df552bcda06556e6c99b61" translate="yes" xml:space="preserve">
          <source>To support two simultaneous loops with only one internal array pointer, &lt;code&gt;foreach&lt;/code&gt; performs the following shenanigans: Before the loop body is executed, &lt;code&gt;foreach&lt;/code&gt; will back up a pointer to the current element and its hash into a per-foreach &lt;code&gt;HashPointer&lt;/code&gt;. After the loop body runs, the IAP will be set back to this element if it still exists. If however the element has been removed, we'll just use wherever the IAP is currently at. This scheme mostly-kinda-sort of works, but there's a lot of weird behavior you can get out of it, some of which I'll demonstrate below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para admitir dos bucles simult&amp;aacute;neos con un solo puntero de matriz interno, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; realiza las siguientes travesuras: antes de ejecutar el cuerpo del bucle, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; har&amp;aacute; una copia de seguridad de un puntero al elemento actual y su hash en un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; por foreach &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. Despu&amp;eacute;s de que se ejecute el cuerpo del bucle, el IAP se restablecer&amp;aacute; en este elemento si a&amp;uacute;n existe. Sin embargo, si el elemento se ha eliminado, solo lo utilizaremos donde sea que est&amp;eacute; actualmente el IAP. Este esquema funciona principalmente, pero hay muchos comportamientos extra&amp;ntilde;os que puedes obtener, algunos de los cuales demostrar&amp;eacute; a continuaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c7e385d1086d82869c2eb01e2cb254a41ea968b" translate="yes" xml:space="preserve">
          <source>To update on this answer as it has gained some popularity: This answer no longer applies as of PHP 7. As explained in the &quot;&lt;a href=&quot;https://secure.php.net/manual/en/migration70.incompatible.php&quot;&gt;Backward incompatible changes&lt;/a&gt;&quot;, in PHP 7 foreach works on copy of the array, so any changes on the array itself are not reflected on foreach loop. More details at the link.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para actualizar esta respuesta, ya que ha ganado cierta popularidad: esta respuesta ya no se aplica a partir de PHP 7. Como se explica en &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://secure.php.net/manual/en/migration70.incompatible.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cambios incompatibles con versiones anteriores&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;, en PHP 7 foreach funciona en la copia de la matriz, por lo que cualquier cambio en la matriz en s&amp;iacute; no se reflejan en el bucle foreach. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;aacute;s detalles en el enlace.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dde4e161f740b1bd3e90639d3dbf341a1b517450" translate="yes" xml:space="preserve">
          <source>Trying to account for modifications during iteration is where all our foreach troubles originated, so it serves to consider some examples for this case.</source>
          <target state="translated">Tratar de tener en cuenta las modificaciones durante la iteración es donde se originaron todos nuestros problemas de frente,por lo que sirve para considerar algunos ejemplos para este caso.</target>
        </trans-unit>
        <trans-unit id="b7169fdc663586782ea538bce150905ae47564ed" translate="yes" xml:space="preserve">
          <source>Well, let's find out what that &quot;unexpected behavior&quot; is (technically, any behavior is unexpected since I no longer know what to expect).</source>
          <target state="translated">Bueno,averigüemos qué es ese &quot;comportamiento inesperado&quot; (técnicamente,cualquier comportamiento es inesperado ya que no sé qué esperar).</target>
        </trans-unit>
        <trans-unit id="1ab0b9b999b26475829ef83e1f0b570dd0b5e77b" translate="yes" xml:space="preserve">
          <source>What is going on here? My C-fu is not good enough for me to able to extract a proper conclusion simply by looking at the PHP source code, I would appreciate it if someone could translate it into English for me.</source>
          <target state="translated">¿Qué está pasando aquí? Mi C-fu no es lo suficientemente bueno para poder extraer una conclusión adecuada simplemente mirando el código fuente de PHP,apreciaría que alguien me lo tradujera al inglés.</target>
        </trans-unit>
        <trans-unit id="95561907a33364750b2b8e1516364f240bfb03a0" translate="yes" xml:space="preserve">
          <source>When foreach first starts executing, the internal array pointer is automatically reset to the first element of the array.</source>
          <target state="translated">Cuando se ejecuta por primera vez,el puntero de la matriz interna se reajusta automáticamente al primer elemento de la matriz.</target>
        </trans-unit>
        <trans-unit id="7a3890dc8a14c3affcfff7a3e17e38a070766491" translate="yes" xml:space="preserve">
          <source>Which means that array was modified, but since we modified it when the &lt;code&gt;foreach&lt;/code&gt; already was at the last element of the array, it &quot;decided&quot; not to loop anymore, and even though we added new element, we added it &quot;too late&quot; and it was not looped through.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo que significa que la matriz se modific&amp;oacute;, pero como la modificamos cuando el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya estaba en el &amp;uacute;ltimo elemento de la matriz, &quot;decidi&amp;oacute;&quot; no seguir en bucle, y aunque agregamos un nuevo elemento, lo agregamos &quot;demasiado tarde&quot; y no fue atravesado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65702a1e70c39355a68fb6833461fd85241d87ae" translate="yes" xml:space="preserve">
          <source>Which means that it accepted the modification and went through it because it was modified &quot;in time&quot;. But if you do this:</source>
          <target state="translated">Lo que significa que aceptó la modificación y pasó por ella porque fue modificada &quot;a tiempo&quot;.Pero si haces esto:</target>
        </trans-unit>
        <trans-unit id="1fd1a4f9962695956b5a0b896fb6ce6683a6dc0f" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;foreach&lt;/code&gt; does make use of the IAP, there is an additional complication: There is only one IAP, but one array can be part of multiple &lt;code&gt;foreach&lt;/code&gt; loops:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si bien &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hace uso del IAP, hay una complicaci&amp;oacute;n adicional: solo hay un IAP, pero una matriz puede ser parte de m&amp;uacute;ltiples &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bucles &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18462cb77b79fe84dcfd1b92f599337e091e34e5" translate="yes" xml:space="preserve">
          <source>You get the same behavior when doing by-ref iteration:</source>
          <target state="translated">Se obtiene el mismo comportamiento cuando se hace la iteración de referencia:</target>
        </trans-unit>
        <trans-unit id="e6a2c66c5caf519fd3145fb125a072e560e5ed25" translate="yes" xml:space="preserve">
          <source>You will get this output:</source>
          <target state="translated">Tendrás esta salida:</target>
        </trans-unit>
        <trans-unit id="3fc54bd7f5ebfc024ec5a1d4f9148e3802ccdaea" translate="yes" xml:space="preserve">
          <source>You will get:</source>
          <target state="translated">Lo conseguirás:</target>
        </trans-unit>
        <trans-unit id="9e5ce9453caf5a9d5d4ebea4a03dcac1ad968aa6" translate="yes" xml:space="preserve">
          <source>a) &lt;code&gt;foreach&lt;/code&gt; works on the &lt;strong&gt;prospected copy&lt;/strong&gt; of the original array.
    It means &lt;code&gt;foreach()&lt;/code&gt; will have SHARED data storage until or unless a &lt;code&gt;prospected copy&lt;/code&gt; is
    not created &lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;foreach Notes/User comments&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a) &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; funciona en la &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;copia prospectiva&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la matriz original. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Significa que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tendr&amp;aacute; almacenamiento de datos COMPARTIDO hasta o a menos que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no se cree &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prospected copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Notas / Comentarios del usuario&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6d778baf7de3191914dd29582064f66af60c2ed" translate="yes" xml:space="preserve">
          <source>array pointer is advanced by one (so on the next iteration, you'll be looking at the next element).</source>
          <target state="translated">El puntero de la matriz se adelanta uno a uno (así que en la siguiente iteración,estarás viendo el siguiente elemento).</target>
        </trans-unit>
        <trans-unit id="31d1af7d4fa62aceb0ae76a9d0de0910cca5e3b6" translate="yes" xml:space="preserve">
          <source>b) What triggers a &lt;strong&gt;prospected copy&lt;/strong&gt;?
    A prospected copy is created based on the policy of &lt;code&gt;copy-on-write&lt;/code&gt;, that is, whenever
    an array passed to &lt;code&gt;foreach()&lt;/code&gt; is changed, a clone of the original array is created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b) &amp;iquest;Qu&amp;eacute; desencadena una &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;copia prospectada&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se crea una copia prospectiva basada en la pol&amp;iacute;tica de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;copy-on-write&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , es decir, cada vez que &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;se cambia &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;una matriz pasada a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , se crea un clon de la matriz original.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e5bef131b548d431cca88634055bf7723f0fe7b" translate="yes" xml:space="preserve">
          <source>c) The original array and &lt;code&gt;foreach()&lt;/code&gt; iterator will have &lt;code&gt;DISTINCT SENTINEL VARIABLES&lt;/code&gt;, that is, one for the original array and other for &lt;code&gt;foreach&lt;/code&gt;; see the test code below. &lt;a href=&quot;http://php.net/manual/en/book.spl.php&quot;&gt;SPL&lt;/a&gt; , &lt;a href=&quot;http://www.php.net/manual/en/spl.iterators.php&quot;&gt;Iterators&lt;/a&gt;, and &lt;a href=&quot;http://www.php.net/manual/en/class.arrayiterator.php&quot;&gt;Array Iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c) La matriz original y el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;iterador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tendr&amp;aacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DISTINCT SENTINEL VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , es decir, una para la matriz original y otra para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ver el c&amp;oacute;digo de prueba a continuaci&amp;oacute;n. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/book.spl.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SPL&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/spl.iterators.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Iteradores&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/class.arrayiterator.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Iterador de matriz&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
