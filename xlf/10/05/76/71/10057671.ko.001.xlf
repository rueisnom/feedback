<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/10057671">
    <body>
      <group id="10057671">
        <trans-unit id="431a49cdeeb4d9cc84db522a2a5c3a2cdef9de47" translate="yes" xml:space="preserve">
          <source>(*) Incrementing the &lt;code&gt;refcount&lt;/code&gt; here sounds innocuous, but violates copy-on-write (COW) semantics: This means that we are going to modify the IAP of a refcount=2 array, while COW dictates that modifications can only be performed on refcount=1 values. This violation results in user-visible behavior change (while a COW is normally transparent) because the IAP change on the iterated array will be observable -- but only until the first non-IAP modification on the array. Instead, the three &quot;valid&quot; options would have been a) to always duplicate, b) do not increment the &lt;code&gt;refcount&lt;/code&gt; and thus allowing the iterated array to be arbitrarily modified in the loop or c) don't use the IAP at all (the PHP 7 solution).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(*) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 참조 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것은 무해한 것으로 들리지만 COW (Copy-On-Write) 의미를 위반합니다. 이는 참조 번호 = 2 배열의 IAP를 수정하는 반면 COW는 수정 사항이 참조 횟수에서만 수행 될 수 있음을 나타냅니다 = 1 값. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 위반은 반복 된 어레이의 IAP 변경이 관찰 가능하지만 어레이의 첫 번째 비 IAP 수정까지만 가능하므로 사용자가 볼 수있는 동작 변경 (일반적으로 COW는 투명)입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신, 세 가지 &quot;유효&quot;옵션은 항상 중복에가), 나)가 증가하지 않는했을 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; 가를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 따라서 반복 한 배열이 임의로 루프 또는 C 수정 될 수 있도록) (모두에서 IAP를 사용하지 않는 PHP 7 솔루션).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d2e82db9cb7a24724aefb22e69a8ef395189a72" translate="yes" xml:space="preserve">
          <source>...nothing that unexpected there, in fact it seems to support the &quot;copy of source&quot; theory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... 예기치 않은 것은 없지만, 실제로는 &quot;소스의 복사&quot;이론을지지하는 것 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f4497a3a12ac079d6abeb450ebe7f0a4fed04110" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/6n20ooMy&quot;&gt;Test case 3&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/6n20ooMy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b69a24985ff01a40a778deb19291c02020c185b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;Test case 1&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 1&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b296351ad09fc5da5b353a825af3c80241645fce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/IfwJyTCL&quot;&gt;Test case 5&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/IfwJyTCL&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9f341ef07206e6d5fe4744f7d24db0a9be7420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/JJp79xSd&quot;&gt;Test case 4&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/JJp79xSd&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4dfe8c8ddf3994b7c27afe0d0d0c0df19fe1f5ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/nirz6Ufh&quot;&gt;Test case 2&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/nirz6Ufh&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92450a86cebc52bf0c89fb24add8360ca746b9b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/Traversable&quot;&gt;&lt;code&gt;Traversable&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">&lt;a href=&quot;http://php.net/Traversable&quot;&gt; &lt;code&gt;Traversable&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="908655cd3ea9b530395773a64ca419f237ea537f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$array&lt;/code&gt; have only single element, so as per the foreach execution, 1 assign to &lt;code&gt;$v&lt;/code&gt; and it don't have any other element to move pointer</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 단일 요소 만 있으므로 foreach 실행에 따라 1은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할당되고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포인터를 이동할 다른 요소는 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="938010d83c888eb8143f06ce28fb347711f9b87f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$array&lt;/code&gt; have two element, so now $array evaluate the zero indices and move the pointer by one. For first iteration of loop, added &lt;code&gt;$array['baz']=3;&lt;/code&gt; as pass by reference.</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 두 가지 요소가 있으므로 이제 $ array는 0 인덱스를 평가하고 포인터를 1 씩 이동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프의 첫 번째 반복을 위해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array['baz']=3;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 전달하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1affd49fa1fb528431442ca255c166508d81d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; supports iteration over three different kinds of values:</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 세 가지 다른 종류의 값에 대한 반복을 지원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abb2ca0c1e4616efa3f2efd4269ebebd90ad1322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation (quote from &lt;a href=&quot;http://www.php.net/manual/en/control-structures.foreach.php&quot;&gt;php.net&lt;/a&gt;):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설명 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;php.net&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 인용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;) :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a4d3bc1f85063b4a7a1f3955f1173eaa16593fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE FOR PHP 7&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 7 참고 사항&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1fb7fa83cec2cb2b2385d7b48d3c6aa0f897abb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It does not allow &lt;code&gt;original array indexes&lt;/code&gt; to be used as &lt;code&gt;references&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 : &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;original array indexes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;references&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 사용할 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e390762dc699d870f965a304fb7cfab2643240d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test case&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="064c7a4ed7767e83cfb50fc272e79514ccda566e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8eaecf9e823bcd133564dce45ba4540f14164da4" translate="yes" xml:space="preserve">
          <source>A good way to show the various duplication behaviors is to observe the behavior of the  &lt;code&gt;current()&lt;/code&gt; function inside a &lt;code&gt;foreach&lt;/code&gt; loop. Consider this example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다양한 복제 동작을 보여주는 좋은 방법 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 &lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루프 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 동작을 관찰하는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. 이 예제를 고려하십시오.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="236e1d04f916381e46584894a84e93c220049445" translate="yes" xml:space="preserve">
          <source>Another consequence of the &lt;code&gt;HashPointer&lt;/code&gt; backup+restore mechanism is that changes to the IAP through &lt;code&gt;reset()&lt;/code&gt; etc. usually do not impact &lt;code&gt;foreach&lt;/code&gt;. For example, the following code executes as if the &lt;code&gt;reset()&lt;/code&gt; were not present at all:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 백업 + 복원 메커니즘 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 또 다른 결과는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 등을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;통해 IAP를 변경하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대개 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 영향을 미치지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, 다음 코드는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 전혀없는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것처럼 실행됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea6e6c9833112d231a15e75686626599f59cf2f4" translate="yes" xml:space="preserve">
          <source>Another important change between PHP 5 and PHP 7 relates to array duplication. Now that the IAP is no longer used, by-value array iteration will only do a &lt;code&gt;refcount&lt;/code&gt; increment (instead of duplication the array) in all cases. If the array is modified during the &lt;code&gt;foreach&lt;/code&gt; loop, at that point a duplication will occur (according to copy-on-write) and &lt;code&gt;foreach&lt;/code&gt; will keep working on the old array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5와 PHP 7의 또 다른 중요한 변경 사항은 배열 복제와 관련이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 IAP는 더 이상 사용되지 않도록에 의해 값 배열 반복 만 할 것 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; 는의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 모든 경우에 증가 (대신 중복 배열). &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루프 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중에 어레이가 수정되면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 시점에서 복사시 복사에 따라 중복이 발생하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 기존 어레이에서 계속 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30f8495f70ccc77cad7c101cec7ef97f79d5b290" translate="yes" xml:space="preserve">
          <source>Another small variation, this time we'll assign the array to another variable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 작은 변형으로 이번에는 배열을 다른 변수에 할당합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6061b59ca687ed0aca907a08cf7627241a0b0ecc" translate="yes" xml:space="preserve">
          <source>Another weird edge case that is fixed now, is the odd effect you get when you remove and add elements that happen to have the same hash:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 고쳐진 또 다른 이상한 경우는 동일한 해시를 갖는 요소를 제거하고 추가 할 때 얻는 이상한 효과입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b3c4b65d9376f8f346fae1a7e1f345e86a60260" translate="yes" xml:space="preserve">
          <source>Any changes from the original can't be notices, actually there are no changes from the original, even though you clearly assigned a value to $item. This is because you are operating on $item as it appears in the copy of $set being worked on. You can override this by grabbing $item by reference, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;$ item에 값을 명확하게 할당하더라도 원본의 변경 사항은 알 수 없습니다. 실제로 원본의 변경 사항은 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작업중인 $ set의 사본에 표시된대로 $ item에서 작업하고 있기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같이 참조로 $ item을 가져 와서 이것을 무시할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35db9b2dbbaebbc8cf821369cbcf483b3bfde43a" translate="yes" xml:space="preserve">
          <source>Array duplication</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 복제&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="823c6eac545f4e9f53730659ec02d448a1a05736" translate="yes" xml:space="preserve">
          <source>Arrays in PHP 5 have one dedicated &quot;internal array pointer&quot; (IAP), which properly supports modifications: Whenever an element is removed, there will be a check whether the IAP points to this element. If it does, it is advanced to the next element instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5의 배열에는 하나의 전용 &quot;IAP (Internal Array Pointer)&quot;가있어 수정을 올바르게 지원합니다. 요소를 제거 할 때마다 IAP가이 요소를 가리키는 지 확인합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇다면 대신 다음 요소로 넘어갑니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f75e47ce74e53d29a3f08bdad31252a7f301d27e" translate="yes" xml:space="preserve">
          <source>As a last preliminary, it should be noted that PHP uses reference counting and copy-on-write to manage memory. This means that if you &quot;copy&quot; a value, you actually just reuse the old value and increment its reference count (refcount). Only once you perform some kind of modification a real copy (called a &quot;duplication&quot;) will be done. See &lt;a href=&quot;http://blog.golemon.com/2007/01/youre-being-lied-to.html&quot;&gt;You're being lied to&lt;/a&gt; for a more extensive introduction on this topic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막으로 PHP는 레퍼런스 카운팅과 COW (Copy-On-Write)를 사용하여 메모리를 관리합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 값을 &quot;복사&quot;하면 실제로는 이전 값을 재사용하고 참조 횟수 (참조 횟수)를 늘리기 만하면됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일종의 수정을 수행 한 후에 만 ​​실제 사본 ( &quot;중복&quot;이라고 함)이 수행됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 주제에 대한보다 광범위한 소개 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.golemon.com/2007/01/youre-being-lied-to.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 거짓말을하고 있음을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="542892a9365ec273fecd375c7e489fa48476131d" translate="yes" xml:space="preserve">
          <source>As foreach relies on the internal array pointer changing it within the loop may lead to unexpected behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foreach는 내부 배열 포인터를 사용하여 루프 내에서 포인터를 변경하면 예기치 않은 동작이 발생할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="baa3dd2721745beae2d7d04883df796d03dc88ac" translate="yes" xml:space="preserve">
          <source>As it is shown in the example, PHP copied $set and used it to loop over, but when $set was used inside the loop, PHP added the variables to the original array, not the copied array. Basically, PHP is only using the copied array for the execution of the loop and the assignment of $item. Because of this, the loop above only executes 3 times, and each time it appends another value to the end of the original $set, leaving the original $set with 6 elements, but never entering an infinite loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예제에서 볼 수 있듯이, PHP는 $ set를 복사하여 루프 오버하는 데 사용되었지만 $ set가 루프 내에서 사용될 때 PHP는 복사 된 배열이 아닌 원래 배열에 변수를 추가했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본적으로 PHP는 루프 실행과 $ item 할당에 복사 된 배열 만 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 때문에 위의 루프는 3 번만 실행되며 원래 $ set의 끝에 다른 값을 추가 할 때마다 원래 $ set에는 6 개의 요소가 남지만 무한 루프에는 들어 가지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab66544e20bcc6d22c26b016a5bf97297360d4e1" translate="yes" xml:space="preserve">
          <source>As per the documentation provided by PHP manual.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 매뉴얼에서 제공하는 문서에 따라.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e594b71f6bced954d7ae590b3a25fb57f21e1c4" translate="yes" xml:space="preserve">
          <source>As you can see in this case PHP will just start iterating the other entity from the start once the substitution has happened.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 알 수 있듯이 PHP는 대체가 발생하면 시작부터 다른 엔티티를 반복하기 시작합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f262f66c271e4ab3c91dc621f3473494822a99" translate="yes" xml:space="preserve">
          <source>As you can see, the outer loop no longer aborts after the first iteration. The reason is that both loops now have entirely separate hashtable iterators, and there is no longer any cross-contamination of both loops through a shared IAP.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보다시피, 첫 번째 반복 후에 외부 루프가 더 이상 중단되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 이유는 두 루프가 이제 완전히 분리 된 해시 테이블 반복자를 갖기 때문에 더 이상 공유 IAP를 통해 두 루프의 교차 오염이 없기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a96acebafe34ace0cbf6ab97e41de8fa2b59af23" translate="yes" xml:space="preserve">
          <source>Besides this, php does allow to use &lt;code&gt;iterated values as a reference to the original array value&lt;/code&gt; as well. This is demonstrated below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 외에도 PHP는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;iterated values as a reference to the original array value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원래 배열 값에 대한 참조로&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래에 설명되어 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c1322fef9f585e5e7154becbb7d1228383785b9" translate="yes" xml:space="preserve">
          <source>But in your second example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 두 번째 예에서 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61cf77a4a315dd7e9e2390f03668bfecb9f6a3df" translate="yes" xml:space="preserve">
          <source>But, those examples are still sane. The real fun starts if you remember that the &lt;code&gt;HashPointer&lt;/code&gt; restore uses a pointer to the element and its hash to determine whether it still exists. But: Hashes have collisions, and pointers can be reused! This means that, with a careful choice of array keys, we can make &lt;code&gt;foreach&lt;/code&gt; believe that an element that has been removed still exists, so it will jump directly to it. An example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이러한 예는 여전히 제정신입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 복원은 요소 및 해당 해시에 대한 포인터를 사용하여 요소가 여전히 존재하는지 확인하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것을 기억하면 재미가 시작됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 그러나 해시에는 충돌이 있으며 포인터를 재사용 할 수 있습니다! 배열 키의 신중한 선택으로, 우리는 할 수 있습니다,이 수단 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그것으로 바로 이동할 수 있도록 제거 된 요소가 여전히 존재한다고 생각합니다. 예를 들면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a873ee1119a94396aced11abeb0cd2d2207ad6e6" translate="yes" xml:space="preserve">
          <source>Coming back to your test cases, you can easily imagine that &lt;code&gt;foreach&lt;/code&gt; creates some kind of iterator with a reference to the array. This reference works exactly like the variable &lt;code&gt;$b&lt;/code&gt; in my example. However, the iterator along with the reference live only during the loop and then, they are both discarded. Now you can see that, in all cases but 3, the array is modified during the loop, while this extra reference is alive. This triggers a clone, and that explains what's going on here!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례로 돌아가서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 배열을 참조하여 일종의 반복자를 생성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다고 쉽게 상상할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 참조는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 예제에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 똑같이 작동합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 반복자와 참조와 함께 반복자는 루프 동안에 만 존재하며 둘 다 버려집니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 3을 제외한 모든 경우에 루프 동안 배열이 수정되는 반면이 추가 참조는 살아 있음을 알 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러면 복제가 시작되고 여기에서 무슨 일이 일어나고 있는지 설명합니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd1908e73fa068ba357e7b95d943c7ecfbd21234" translate="yes" xml:space="preserve">
          <source>Consider these nested loops over the same array (where by-ref iteration is used to make sure it really is the same one):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동일한 배열에 대해 다음과 같은 중첩 루프를 고려하십시오 (참조 기준 반복이 실제로 동일한 지 확인하는 데 사용됨).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="befcb9dd75c6dd0a10f8bd95a14d34e8993a4204" translate="yes" xml:space="preserve">
          <source>Consider this code as an example where duplication occurs:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중복이 발생하는 예제로이 코드를 고려하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57d82a24fd4de958c3356e0910b2308cb05d3c6e" translate="yes" xml:space="preserve">
          <source>Detailed explanation can be read at &lt;a href=&quot;https://stackoverflow.com/questions/10057671/how-foreach-actually-works&quot;&gt;How does PHP 'foreach' actually work?&lt;/a&gt; which explains the internals behind this behaviour.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10057671/how-foreach-actually-works&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 'foreach'는 실제로 어떻게 작동합니까?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 자세한 설명을 읽을 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 행동 뒤에 숨은 내부를 설명합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="7ec6a83aa93501181bc76d815fd97e699db2e256" translate="yes" xml:space="preserve">
          <source>Examples: Effects of &lt;code&gt;current&lt;/code&gt; in foreach</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 : &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foreach에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 영향&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d80b3f40876bd05acd5f02160f3241ab742c26e" translate="yes" xml:space="preserve">
          <source>Examples: Modification during iteration</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 : 반복 중 수정&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7014583239968e6f988f3c793a9d2a3bc8292bd9" translate="yes" xml:space="preserve">
          <source>Examples: Your test cases</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 : 테스트 사례&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eaf82d3114000fbe7543dd6911539ba662528cba" translate="yes" xml:space="preserve">
          <source>For a long time I assumed that &lt;code&gt;foreach&lt;/code&gt; worked with the array itself. Then I found many references to the fact that it works with a &lt;em&gt;copy&lt;/em&gt; of the array, and I have since assumed this to be the end of the story. But I recently got into a discussion on the matter, and after a little experimentation found that this was not in fact 100% true.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오랫동안 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 배열 자체와 함께 작동 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다고 가정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;복사본&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 함께 작동한다는 사실에 대한 많은 참조를 발견했으며 그 후 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 이야기의 끝이라고 가정했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 나는 최근에 그 문제에 관해 토론을했고, 약간의 실험을 한 후에 이것이 실제로 100 % 사실이 아님을 발견했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99743dc1e1b371509b02b41756d7ef22f8ef3712" translate="yes" xml:space="preserve">
          <source>For internal classes, actual method calls are avoided by using an internal API that essentially just mirrors the &lt;code&gt;Iterator&lt;/code&gt; interface on the C level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내부 클래스의 경우 본질적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C 레벨 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 인터페이스를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;미러링하는 내부 API를 사용하여 실제 메소드 호출을 피할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96beb39c41bbc50dd98ec331cb5f6ba16ae93074" translate="yes" xml:space="preserve">
          <source>Great question, because many developers, even experienced ones, are confused by the way PHP handles arrays in foreach loops. In the standard foreach loop, PHP makes a copy of the array that is used in the loop. The copy is discarded immediately after the loop finishes. This is transparent in the operation of a simple foreach loop. 
For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 개발자들, 심지어 경험 많은 개발자들도 PHP가 foreach 루프에서 배열을 처리하는 방식에 혼란을 느끼기 때문에 좋은 질문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표준 foreach 루프에서 PHP는 루프에서 사용되는 배열의 사본을 만듭니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프가 완료되면 즉시 사본이 삭제됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 간단한 foreach 루프 작업에서 투명합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75618f2aca443a65c28cb788bdb7a31c7622b2b8" translate="yes" xml:space="preserve">
          <source>Hashtable iterators</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해시 테이블 반복자&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="58bc8215af40743629373e4bc4e87df55c794abe" translate="yes" xml:space="preserve">
          <source>Here is an excellent article for another side effect of this copy-on-write behaviour: &lt;a href=&quot;http://fabien.potencier.org/article/48/the-php-ternary-operator-fast-or-not&quot;&gt;The PHP Ternary Operator: Fast or not?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은이 기록 중 복사 동작의 또 다른 부작용에 대한 훌륭한 기사입니다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://fabien.potencier.org/article/48/the-php-ternary-operator-fast-or-not&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. PHP Ternary Operator : Fast or not?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06fc87efa1fa8d9ad8f989a7e8c9d55bd7acc20f" translate="yes" xml:space="preserve">
          <source>Here the important part is that foreach will make &lt;code&gt;$array&lt;/code&gt; an is_ref=1 when it is iterated by reference, so basically you have the same situation as above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 중요한 부분은 foreach가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 반복 될 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 is_ref = 1로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만들 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것이므로 기본적으로 위와 동일한 상황이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ef31c0a3f93f77487b87c511286a358a48ee73" translate="yes" xml:space="preserve">
          <source>Here the refcount of the &lt;code&gt;$array&lt;/code&gt; is 2 when the loop is started, so for once we actually have to do the duplication upfront. Thus &lt;code&gt;$array&lt;/code&gt; and the array used by foreach will be completely separate from the outset. That's why you get the position of the IAP wherever it was before the loop (in this case it was at the first position).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프가 시작될 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 refcount &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 2이므로, 실제로 복제를 먼저해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foreach가 사용하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 배열은 처음부터 완전히 분리됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇기 때문에 루프 이전에 IAP 위치를 얻을 수 있습니다 (이 경우 첫 번째 위치에 있음).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9320a0e42c4e40c9d72e4f533951976eb7d6cedf" translate="yes" xml:space="preserve">
          <source>Here we have the is_ref=1 case, so the array is not copied (just like above). But now that it is a reference, the array no longer has to be duplicated when passing to the by-ref &lt;code&gt;current()&lt;/code&gt; function. Thus &lt;code&gt;current()&lt;/code&gt; and &lt;code&gt;foreach&lt;/code&gt; work on the same array. You still see the off-by-one behavior though, due to the way &lt;code&gt;foreach&lt;/code&gt; advances the pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 is_ref = 1이 있으므로 배열은 위와 같이 복사되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이제는 참조이므로 by-ref &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전달할 때 배열을 더 이상 복제 할 필요가 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 동일한 배열에서 작동합니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 포인터를 전진시키는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;방식으로 인해 여전히 off-by-one 동작을 볼 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c78f9c618fca247dc03a5d8ccd4502643dd21c69" translate="yes" xml:space="preserve">
          <source>Here we should normally expect the output &lt;code&gt;1, 1, 3, 4&lt;/code&gt; according to the previous rules. How what happens is that &lt;code&gt;'FYFY'&lt;/code&gt; has the same hash as the removed element &lt;code&gt;'EzFY'&lt;/code&gt;, and the allocator happens to reuse the same memory location to store the element. So foreach ends up directly jumping to the newly inserted element, thus short-cutting the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 우리는 일반적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 규칙에 따라 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;1, 1, 3, 4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기대해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어떻게 무슨 일하는 것입니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'FYFY'&lt;/code&gt; 이&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 제거 된 요소와 동일한 해시가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;'EzFY'&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고, 할당이 요소를 저장하는 동일한 메모리 위치를 재사용 발생합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 foreach는 새로 삽입 된 요소로 직접 점프하여 루프를 단축시킵니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b09c9e6cdc88c66a96f4f93e25e90ddea554a4e6" translate="yes" xml:space="preserve">
          <source>Here you should know that &lt;code&gt;current()&lt;/code&gt; is a by-ref function (actually: prefer-ref), even though it does not modify the array. It has to be in order to play nice with all the other functions like &lt;code&gt;next&lt;/code&gt; which are all by-ref. By-reference passing implies that the array has to be separated and thus &lt;code&gt;$array&lt;/code&gt; and the &lt;code&gt;foreach-array&lt;/code&gt; will be different. The reason you get &lt;code&gt;2&lt;/code&gt; instead of &lt;code&gt;1&lt;/code&gt; is also mentioned above: &lt;code&gt;foreach&lt;/code&gt; advances the array pointer &lt;em&gt;before&lt;/em&gt; running the user code, not after. So even though the code is at the first element, &lt;code&gt;foreach&lt;/code&gt; already advanced the pointer to the second.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 배열을 수정하지 않더라도 by-ref 함수 (실제로 prefer-ref) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라는 것을 알아야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;next&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 같은 다른 모든 기능들과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;잘 어울려야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 기준 전달은 배열이 분리되어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach-array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;달라짐&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 의미합니다. &lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 얻는 이유 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도 위에서 언급했습니다. &lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 이후가 아니라 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자 코드 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 실행 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하기 전에&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열 포인터 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 진행시킵니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 코드가 첫 번째 요소이지만 &lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이미 두 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;번째 요소에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대한 포인터를 진행했습니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e2c11296f52e3c33b435c41a2c9058141794dda" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;$arr&lt;/code&gt; will be duplicated to prevent IAP changes on &lt;code&gt;$arr&lt;/code&gt; from leaking to &lt;code&gt;$outerArr&lt;/code&gt;. In terms of the conditions above, the array is not a reference (is_ref=0) and is used in two places (refcount=2). This requirement is unfortunate and an artifact of the suboptimal implementation (there is no concern of modification during iteration here, so we don't really need to use the IAP in the first place).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; IAP가에 변화 방지하기 위해 중복됩니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하기 누출 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$outerArr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 조건에서 배열은 참조가 아니며 (is_ref = 0) 두 곳에서 사용됩니다 (refcount = 2). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 요구 사항은 불행하고 차선책의 구현물입니다 (여기서 반복하는 동안 수정에 대한 염려가 없으므로 먼저 IAP를 사용할 필요는 없습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71f26286c42873f72392d673b048fc981f68e484" translate="yes" xml:space="preserve">
          <source>How does PHP 'foreach' actually work</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 'foreach'는 실제로 어떻게 작동합니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d7dd5b09fef4fbc13b52490cc8353aa7c961d78" translate="yes" xml:space="preserve">
          <source>However &lt;code&gt;foreach&lt;/code&gt;, being a rather special snowflake, chooses to do things slightly differently:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 다소 특별한 눈송이이기 때문에 약간 다르게 행동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a31efb1a52d63389e065a96d4038859b40f71b1e" translate="yes" xml:space="preserve">
          <source>However, we get some interesting changes when considering modifications during iteration. I hope you will find the new behavior saner. The first example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 반복하는 동안 수정을 고려할 때 몇 가지 흥미로운 변경 사항이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 당신이 새로운 행동이 건전한 것을 찾을 수 있기를 바랍니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a61c4d96bcc3da5af6ed31ee756e7c946152cca3" translate="yes" xml:space="preserve">
          <source>However, what if we had used $item by reference, as I mentioned before? A single character added to the above test:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 앞에서 언급했듯이 $ item을 참조로 사용한 경우 어떻게됩니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 테스트에 추가 된 단일 문자 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c00ef429043163e498185705691978c68ce29357" translate="yes" xml:space="preserve">
          <source>I believe that this is all consequence of &lt;strong&gt;On each iteration&lt;/strong&gt; part of the explanation in the documentation, which probably means that &lt;code&gt;foreach&lt;/code&gt; does all logic before it calls the code in &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문서의 설명의 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 반복&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 부분에 대한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 결과라고 생각합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 이는 아마도 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{}&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 코드를 호출하기 전에 모든 논리를 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다는 것을 의미합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4697e7e52d5799d87464f9e9fddb553071695d6" translate="yes" xml:space="preserve">
          <source>If not, what is it really doing?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않다면 실제로 무엇을하고 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a829325bc6b57c4325ab8e0937f30c13ff8ee66" translate="yes" xml:space="preserve">
          <source>If the array is not duplicated (is_ref=0, refcount=1), then only its &lt;code&gt;refcount&lt;/code&gt; will be incremented (*). Additionally, if &lt;code&gt;foreach&lt;/code&gt; by reference is used, then the (potentially duplicated) array will be turned into a reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;어레이가 중복되지 않은 경우 (is_ref = 0, 참조 카운트 = 1) 만의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 증가 될 것이다 (*). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; by reference가 사용되면 (잠재적으로 복제 된) 배열이 참조로 바뀝니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78dc274491d6ca8054a1f088bedca2ccdc345189" translate="yes" xml:space="preserve">
          <source>If we look in the &lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;manual&lt;/a&gt;, we find this statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매뉴얼&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 보면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, 우리는 다음 진술을 찾습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e55a1d14766bac174bfd5d5e0ed5c6eddea5d0fd" translate="yes" xml:space="preserve">
          <source>If you iterate by reference using &lt;code&gt;foreach ($arr as &amp;amp;$v)&lt;/code&gt; then &lt;code&gt;$arr&lt;/code&gt; is turned into a reference and you can change it during iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;foreach ($arr as &amp;amp;$v)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 참조로 반복하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 참조로 바뀌고 반복 중에이를 변경할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f6bafee81d8af7c1d8fe3a7d35b1e1d5276370d" translate="yes" xml:space="preserve">
          <source>If you run this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 실행하면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f1c3d02b13b81fde5e463b3c1e3481a89c040f02" translate="yes" xml:space="preserve">
          <source>If you still remember, the main problem with array iteration was how to handle removal of elements mid-iteration. PHP 5 used a single internal array pointer (IAP) for this purpose, which was somewhat suboptimal, as one array pointer had to be stretched to support multiple simultaneous foreach loops &lt;em&gt;and&lt;/em&gt; interaction with &lt;code&gt;reset()&lt;/code&gt; etc. on top of that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여전히 기억한다면 배열 반복의 주요 문제는 반복 도중 요소 제거를 처리하는 방법이었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나의 배열 포인터의 foreach 루프 다중 동시 지원 연신했다대로 PHP 5는 다소 최적이었다 이러한 목적을위한 단일의 내부 배열 포인터 (IAP)를 사용 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 상호 작용 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 그 위에 등.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02f297f5905381c7400f2b6935063eab3c3035ae" translate="yes" xml:space="preserve">
          <source>In PHP 5 the same applies even if you iterate by value, but the array was a reference beforehand: &lt;code&gt;$ref =&amp;amp; $arr; foreach ($ref as $v)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5에서는 값으로 반복하더라도 배열이 미리 참조 된 경우에도 동일하게 적용됩니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$ref =&amp;amp; $arr; foreach ($ref as $v)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c31012f51272cbd314bdcd5bbcfff2fc3b76f9e3" translate="yes" xml:space="preserve">
          <source>In example 3 you don't modify the array. In all other examples you modify either the contents or the internal array pointer. This is important when it comes to &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP&lt;/a&gt; arrays because of the semantics of the assignment operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 3에서는 배열을 수정하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 모든 예에서는 내용 또는 내부 배열 포인터를 수정합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대입 연산자의 의미 때문에 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열과 관련하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중요합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22ede99ce8e51107137227faf74df0b592c69a53" translate="yes" xml:space="preserve">
          <source>In foreach loop, the first thing php does is that it creates a copy of the array which is to be iterated over. PHP then iterates over this new &lt;code&gt;copy&lt;/code&gt; of the array rather than the original one. This is demonstrated in the below example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foreach 루프에서 PHP가 가장 먼저하는 일은 반복 될 배열의 복사본을 생성한다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 PHP &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 원래 배열이 아닌 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 반복 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 아래 예에서 설명됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="134677d03213db70953d47c1bffdab544c9f93e4" translate="yes" xml:space="preserve">
          <source>In most cases, this change is transparent and has no other effect than better performance. However, there is one occasion where it results in different behavior, namely the case where the array was a reference beforehand:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 경우이 변경은 투명하며 성능 향상 외에 다른 영향은 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 배열이 사전에 참조 인 경우와 같이 다른 동작이 발생하는 경우가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d13b49c0d0dcf6c67a637aa73c5a0309f5ed373" translate="yes" xml:space="preserve">
          <source>In test case 3, once again the array is not duplicated, thus &lt;code&gt;foreach&lt;/code&gt; will be modifying the IAP of the &lt;code&gt;$array&lt;/code&gt; variable. At the end of the iteration, the IAP is NULL (meaning iteration has done), which &lt;code&gt;each&lt;/code&gt; indicates by returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 3에서 배열은 다시 복제되지 않으므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 IAP를 수정합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반복이 끝날 때 IAP는 NULL (반복이 완료 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되었음을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의미)이며, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 반환 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나타냅니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33d269e7a4a764b049b79e9cb1f9e20dc83243c4" translate="yes" xml:space="preserve">
          <source>In test cases 1 and 2 &lt;code&gt;$array&lt;/code&gt; starts off with refcount=1, so it will not be duplicated by &lt;code&gt;foreach&lt;/code&gt;: Only the &lt;code&gt;refcount&lt;/code&gt; is incremented. When the loop body subsequently modifies the array (which has refcount=2 at that point), the duplication will occur at that point. Foreach will continue working on an unmodified copy of &lt;code&gt;$array&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 1과 2에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 refcount = 1로 시작하므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의해 복제되지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;증가합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 본문이 이후 배열을 수정하면 (그 시점에 refcount = 2가 있음) 해당 시점에서 복제가 발생합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Foreach는 수정되지 않은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사본을 계속 연구 할 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1dbfb1adb9e84f34a26cf1ef4549ca5fdf33e6ac" translate="yes" xml:space="preserve">
          <source>In test cases 4 and 5 both &lt;code&gt;each&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; are by-reference functions. The &lt;code&gt;$array&lt;/code&gt; has a &lt;code&gt;refcount=2&lt;/code&gt; when it is passed to them, so it has to be duplicated. As such &lt;code&gt;foreach&lt;/code&gt; will be working on a separate array again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 4와 5에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 참조 기능입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount=2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 그들에게 전달 될 때이 중복 될 수있다, 그래서. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 별도의 배열에서 다시 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ed0a58bec9d6612b04799a17cd5f6d6fef8450f" translate="yes" xml:space="preserve">
          <source>In the following, I will try to explain precisely how iteration works in different cases. By far the simplest case is &lt;code&gt;Traversable&lt;/code&gt; objects, as for these &lt;code&gt;foreach&lt;/code&gt; is essentially only syntax sugar for code along these lines:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음에서는 다른 경우에 반복이 어떻게 작동하는지 정확하게 설명하려고 노력할 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 간단한 경우는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Traversable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 객체입니다.이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 본질적으로 다음 줄을 따라 코드의 구문 설탕 일뿐입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7339506450bbac19831889ae44122066b7fe107" translate="yes" xml:space="preserve">
          <source>In your second example, you start with two elements, and foreach loop is not at the last element so it evaluates the array on the next iteration and thus realises that there is new element in the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 예에서는 두 요소로 시작하고 foreach 루프는 마지막 요소가 아니므로 다음 반복에서 배열을 평가하여 배열에 새 요소가 있음을 인식합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fde8dd98d7e3c5d285a56193ed177dd2ac066399" translate="yes" xml:space="preserve">
          <source>Internal array pointer and HashPointer</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내부 배열 포인터 및 HashPointer&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="55351291e1c5fef6a45bef8efd585915f3bd479a" translate="yes" xml:space="preserve">
          <source>Is there any situation where using functions that adjust the array pointer (&lt;code&gt;each()&lt;/code&gt;, &lt;code&gt;reset()&lt;/code&gt; et al.) during a &lt;code&gt;foreach&lt;/code&gt; could affect the outcome of the loop?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 중에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 포인터 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 등 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;)&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 조정하는 함수를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 루프의 결과에 영향을 줄 수있는 상황이 있습니까?&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfb1d36860bfa186a30dd861585a17c395ef9f61" translate="yes" xml:space="preserve">
          <source>Is this correct and the whole story?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 정확하고 전체적인 이야기입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bb8345349d5d2faf3d2e667f6fed8801fadc203" translate="yes" xml:space="preserve">
          <source>It seems to me that &lt;code&gt;foreach&lt;/code&gt; works with a &lt;em&gt;copy&lt;/em&gt; of the array, but sets the array pointer of the source array to the end of the array after the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 나에게 보인다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; A의 작품 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사본&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열을하지만, 루프 후 배열의 마지막에 소스 배열의 배열 포인터를 설정합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2d00199b28cd212143ebd236537b2023ca47451" translate="yes" xml:space="preserve">
          <source>Iteration of arrays and plain objects is significantly more complicated. First of all, it should be noted that in PHP &quot;arrays&quot; are really ordered dictionaries and they will be traversed according to this order (which matches the insertion order as long as you didn't use something like &lt;code&gt;sort&lt;/code&gt;). This is opposed to iterating by the natural order of the keys (how lists in other languages often work) or having no defined order at all (how dictionaries in other languages often work).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열과 일반 객체의 반복은 훨씬 더 복잡합니다. 우선, PHP에서 &quot;배열&quot;은 실제로 정렬 된 사전이며이 순서에 따라 순회됩니다 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것을 사용하지 않는 한 삽입 순서와 일치 함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). 이는 키의 자연스러운 순서 (다른 언어로 된 목록이 자주 작동하는 방식)에 의해 반복되거나 전혀 정의 된 순서가없는 경우 (다른 언어로 된 사전이 자주 작동하는 방식)와 반대됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0d7e336b7b454ce37f9f414661d83e60fed3826" translate="yes" xml:space="preserve">
          <source>Let me prefix this by saying that I know what &lt;code&gt;foreach&lt;/code&gt; is, does and how to use it. This question concerns how it works under the bonnet, and I don't want any answers along the lines of &quot;this is how you loop an array with &lt;code&gt;foreach&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;무엇인지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, 어떻게 사용하는지, 어떻게 사용하는지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아는 것으로 접두사를 붙 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 질문은 그것이 보닛에서 어떻게 작동하는지에 관한 것이며, &quot; &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하여 배열을 루프하는 방법 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&quot;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b63928b527f92fb71f4104a7bd7acfb52f9d816d" translate="yes" xml:space="preserve">
          <source>Let me show what I mean. For the following test cases, we will be working with the following array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;무슨 뜻인지 보여 드리겠습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 테스트 사례의 경우 다음 배열로 작업합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f751c6687bfd848ca5a2e2261174f789d8ab95d8" translate="yes" xml:space="preserve">
          <source>Let's consider a few examples, starting with your test cases:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례로 시작하여 몇 가지 예를 살펴 보겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3097fd5b0d5d815f05c7fe33aaa245060a3bf92e" translate="yes" xml:space="preserve">
          <source>Namely, the array pointer is already moved forward &lt;em&gt;before&lt;/em&gt; the loop body runs. This means that while the loop body is working on element &lt;code&gt;$i&lt;/code&gt;, the IAP is already at element &lt;code&gt;$i+1&lt;/code&gt;. This is the reason why code samples showing modification during iteration will always &lt;code&gt;unset&lt;/code&gt; the &lt;em&gt;next&lt;/em&gt; element, rather than the current one.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 본체가 실행 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되기 전에&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 배열 포인터가 이미 앞으로 이동 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 루프 본문이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 요소에서 작업하는 동안 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IAP는 이미 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;$i+1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 요소에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있음을 의미합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 반복 중 수정을 보여주는 코드 샘플은 항상 것입니다 이유입니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 오히려 현재보다 요소를.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40a05dbc2f0a8aa4f92fc60f38c31f2f5d423ec4" translate="yes" xml:space="preserve">
          <source>Normal objects</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반 객체&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e08a5016973ce24d28ac18e9fdb6932843bef710" translate="yes" xml:space="preserve">
          <source>Now lets try a small modification:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 약간의 수정을 해보자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5656010570fbcc2ba537a9c5378cc92d8408d098" translate="yes" xml:space="preserve">
          <source>Objects have by-handle passing semantics, which for most practical purposes means that they behave like references. So objects can always be changed during iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체는 처리 시맨틱 시맨틱을 가지고 있는데, 이는 대부분의 실제 목적을 위해 레퍼런스처럼 행동한다는 것을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 반복 중에 객체를 항상 변경할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c216b53de040b00d089894dd8ddbc5bde03d966" translate="yes" xml:space="preserve">
          <source>On each iteration, the value of the current element is assigned to $v and the internal</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 반복에서 현재 요소의 값은 $ v 및 내부에 지정됩니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4f99d71c5a8b263015886cdb2f907d0ce4d1a2e" translate="yes" xml:space="preserve">
          <source>One last odd case that I'd like to mention, it is that PHP allows you to substitute the iterated entity during the loop. So you can start iterating on one array and then replace it with another array halfway through. Or start iterating on an array and then replace it with an object:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 언급하고 싶은 마지막 이상한 사례 중 하나는 PHP가 루프 동안 반복 엔티티를 대체 할 수 있다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 한 배열에서 반복을 시작한 다음 중간에 다른 배열로 바꿀 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 배열에서 반복을 시작한 다음 객체로 바꿉니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c242255b4e20b8454762a9c1cfc23f3f6bb8f097" translate="yes" xml:space="preserve">
          <source>PHP 5</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="084c3eec12a7ea0542a27183c70a323878c7d71b" translate="yes" xml:space="preserve">
          <source>PHP 7</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 7&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5845f09d0ec80f31277ff6f4551cfaec806397d0" translate="yes" xml:space="preserve">
          <source>PHP 7 uses a different approach, namely, it supports creating an arbitrary amount of external, safe hashtable iterators. These iterators have to be registered in the array, from which point on they have the same semantics as the IAP: If an array element is removed, all hashtable iterators pointing to that element will be advanced to the next element.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 7은 다른 접근 방식을 사용합니다. 즉, 임의의 양의 안전한 외부 해시 테이블 반복자를 만드는 것을 지원합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 반복자는 배열에 등록되어야하며,이 시점에서 IAP와 동일한 의미를 갖습니다. 배열 요소가 제거되면 해당 요소를 가리키는 모든 해시 테이블 반복자가 다음 요소로 진행됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="34259c10ebcccdc96f1a84d84d17eb2f067ddea9" translate="yes" xml:space="preserve">
          <source>PHP foreach loop can be used with &lt;code&gt;Indexed arrays&lt;/code&gt;, &lt;code&gt;Associative arrays&lt;/code&gt; and &lt;code&gt;Object public variables&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP foreach 루프는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Indexed arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Associative arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object public variables&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함께 사용할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c0047e404d6d99d4b1d7ddc87de51f778964b06" translate="yes" xml:space="preserve">
          <source>Position advancement order</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;직급 진행 순서&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="758faebc57cf11a657355347e9e4d05b49a43dde" translate="yes" xml:space="preserve">
          <source>Previously by-value iteration of reference-arrays was special cases. In this case, no duplication occurred, so all modifications of the array during iteration would be reflected by the loop. In PHP 7 this special case is gone: A by-value iteration of an array will &lt;strong&gt;always&lt;/strong&gt; keep working on the original elements, disregarding any modifications during the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전에는 기준 배열의 값별 반복이 특별한 경우였습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 경우 중복이 발생하지 않으므로 반복 중에 배열의 모든 수정 사항이 루프에 반영됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 7에서는이 특별한 경우가 사라졌습니다. 배열의 값별 반복은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 동안 수정 사항을 무시하고 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항상&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 원래 요소에서 계속 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0b70ce3dfe944d7a532ef64d990426ece003306" translate="yes" xml:space="preserve">
          <source>Previously the HashPointer restore mechanism jumped right to the new element because it &quot;looked&quot; like it's the same as the removed element (due to colliding hash and pointer). As we no longer rely on the element hash for anything, this is no longer an issue.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전에는 HashPointer 복원 메커니즘이 해시와 포인터 충돌로 인해 제거 된 요소와 같은 것처럼 &quot;보여&quot;새 요소로 바로 이동했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 이상 요소 해시에 의존하지 않기 때문에 더 이상 문제가되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2fef7d7e527879e31aa00e11336ca35080be717" translate="yes" xml:space="preserve">
          <source>Results in an infinite loop. Note this actually is an infinite loop, you&amp;rsquo;ll have to either kill the script yourself or wait for your OS to run out of memory. I added the following line to my script so PHP would run out of memory very quickly, I suggest you do the same if you&amp;rsquo;re going to be running these infinite loop tests:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;무한 루프가 발생합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 실제로 무한 루프이므로 스크립트를 직접 종료하거나 OS에 메모리가 부족할 때까지 기다려야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP에 메모리가 매우 빨리 소모되도록 다음 줄을 스크립트에 추가했습니다.이 무한 루프 테스트를 실행하려면 동일한 작업을 수행하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f485176e25715d83c8d06eb7fb74f9a075ad672" translate="yes" xml:space="preserve">
          <source>Right... this seems to suggest that &lt;code&gt;foreach&lt;/code&gt; relies on the array pointer of the source array. But we've just proved that we're &lt;em&gt;not working with the source array&lt;/em&gt;, right? Well, not entirely.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;맞습니다 ... 이것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 소스 배열의 배열 포인터에 의존 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한다는 것을 암시하는 것 같습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 우리는 우리가 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스 배열로 작업&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있지 않다는&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것을 증명 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;글쎄요.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26851422c5fa9895c974ae2a35d04d45be56bf30" translate="yes" xml:space="preserve">
          <source>So as per your first example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 첫 번째 예에 따라 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a118c312dcc816d78542af9b056c14047650c765" translate="yes" xml:space="preserve">
          <source>So far, so good. Iterating over a dictionary can't be too hard, right? The problems begin when you realize that an array/object can change during iteration. There are multiple ways this can happen:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여태까지는 그런대로 잘됐다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사전을 반복하는 것은 너무 어려울 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반복 중에 배열 / 객체가 변경 될 수 있음을 인식하면 문제가 시작됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 가지 방법이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22767625f947aff65dabcdc777a951ea58e15915" translate="yes" xml:space="preserve">
          <source>So in this previous example with the infinite loop, we see the reason why PHP was written to create a copy of the array to loop over. When a copy is created and used only by the structure of the loop construct itself, the array stays static throughout the execution of the loop, so you&amp;rsquo;ll never run into issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 무한 루프가있는이 이전 예제에서 루프 할 배열의 사본을 작성하기 위해 PHP가 작성된 이유를 알 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 구조 자체의 구조에 의해서만 복사본이 만들어지고 사용될 때, 루프가 실행되는 동안 배열은 정적 상태를 유지하므로 결코 문제가 발생하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4810d33897e930efe44a50f6d87f8ce4b8c4edb" translate="yes" xml:space="preserve">
          <source>So it is evident and observable, when $item is operated on by-reference, the changes made to $item are made to the members of the original $set. Using $item by reference also prevents PHP from creating the array copy. To test this, first we&amp;rsquo;ll show a quick script demonstrating the copy:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 $ item이 참조로 작동 될 때 $ item에 대한 변경 사항은 원래 $ set의 구성원에게 적용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조로 $ item을 사용하면 PHP가 배열 사본을 작성하지 못하게됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 테스트하기 위해 먼저 사본을 보여주는 빠른 스크립트를 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1a42e1f249741b6b1505dd1fe7c48630ed823c6" translate="yes" xml:space="preserve">
          <source>So the copy is created but the developer doesn't notice, because the original array isn&amp;rsquo;t referenced within the loop or after the loop finishes. However, when you attempt to modify the items in a loop, you find that they are unmodified when you finish:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 원본 배열이 루프 내에서 또는 루프가 끝난 후에 참조되지 않기 때문에 복사본이 생성되지만 개발자는 알지 못합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 루프에서 항목을 수정하려고하면 다음을 수행해도 해당 항목이 수정되지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8607657ed5ac59972cd210308aab7916fb222409" translate="yes" xml:space="preserve">
          <source>So, despite the fact that we are not working directly with the source array, we are working directly with the source array pointer - the fact that the pointer is at the end of the array at the end of the loop shows this. Except this can't be true - if it was, then &lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;test case 1&lt;/a&gt; would loop forever.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 소스 배열로 직접 작업하지 않고 소스 배열 포인터로 직접 작업한다는 사실에도 불구하고 포인터가 루프의 끝에 배열의 끝에 있다는 사실이 이것을 보여줍니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 사실이 아니라면 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 케이스 1&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 영원히 반복 될 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7620823db465a8213cdba392c149d0cffe8cba72" translate="yes" xml:space="preserve">
          <source>So, in your first example you only have one element in the array, and when the pointer is moved the next element does not exist, so after you add new element foreach ends because it already &quot;decided&quot; that it it as the last element.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 첫 번째 예제에서는 배열에 하나의 요소 만 있고 포인터를 이동할 때 다음 요소가 존재하지 않으므로 새 요소를 추가 한 후에는 각 요소를 이미 마지막 요소로 &quot;결정&quot;했기 때문에 각 요소를 추가 한 후 끝납니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35d0be98ccd23d238ffd883d44c8e1a3bba9053a" translate="yes" xml:space="preserve">
          <source>Some points to note when working with &lt;code&gt;foreach()&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 작업시 참고할 사항 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57120796a80a08ef6aa8f16cb423a7f2ab9f0a14" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&quot;&gt;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출처 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c75dc3f330b31a50042d85df76b4fbc730b896f9" translate="yes" xml:space="preserve">
          <source>Stack&amp;nbsp;Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2728709&quot;&gt;How to make sure the value is reset in a 'foreach' loop in PHP?&lt;/a&gt;&lt;/em&gt; addresses the cases (3,4,5) of your question.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스택 오버플로 질문 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2728709&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP의 'foreach'루프에서 값을 재설정하는 방법은 무엇입니까? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문의 사례 (3,4,5)를 다룹니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43ee53a8fd3dd8f60f02f4016979d5c8131c4a41" translate="yes" xml:space="preserve">
          <source>Substituting the iterated entity during the loop</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 동안 반복 된 엔티티 대체&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="799e1f85c65dc059f75f6566ee59feb5cfae8d0f" translate="yes" xml:space="preserve">
          <source>Test case 3 changes: &lt;code&gt;Foreach&lt;/code&gt; no longer uses the IAP, so &lt;code&gt;each()&lt;/code&gt; is not affected by the loop. It will have the same output before and after.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 3 변경 사항 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 더 이상 IAP를 사용하지 않으므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 루프의 영향을받지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전후의 출력이 동일합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd92aadc08b97ed5f3daa2ae99864416eaa8183a" translate="yes" xml:space="preserve">
          <source>Test cases 1 and 2 retain the same output: By-value array iteration always keep working on the original elements. (In this case, even &lt;code&gt;refcounting&lt;/code&gt; and duplication behavior is exactly the same between PHP 5 and PHP 7).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 1과 2는 동일한 출력을 유지합니다. 값 배열 반복은 항상 원래 요소에서 계속 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이 경우에도 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcounting&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 복제 문제 정확히 PHP 5와 7 사이 PHP 동일하다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5302152a206d4acde3103ec9c65b3fc49d9cde5" translate="yes" xml:space="preserve">
          <source>Test cases 4 and 5 stay the same: &lt;code&gt;each()&lt;/code&gt; and &lt;code&gt;reset()&lt;/code&gt; will duplicate the array before changing the IAP, while &lt;code&gt;foreach&lt;/code&gt; still uses the original array. (Not that the IAP change would have mattered, even if the array was shared.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 사례 4와 5는 동일하게 유지됩니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 IAP를 변경하기 전에 배열을 복제하지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여전히 원래 배열을 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(어레이가 공유 되더라도 IAP 변경은 중요하지 않습니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9e56b636d04a99b97687e1513e0cfbb1be220f5" translate="yes" xml:space="preserve">
          <source>The IAP is a visible feature of an array (exposed through the &lt;code&gt;current&lt;/code&gt; family of functions), as such changes to the IAP count as modifications under copy-on-write semantics. This, unfortunately, means that &lt;code&gt;foreach&lt;/code&gt; is in many cases forced to duplicate the array it is iterating over. The precise conditions are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IAP는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쓰기-쓰기 시맨틱 (copy-on-write) 시맨틱의 수정으로 IAP 카운트를 변경하는 것과 같이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열의 가시적 인 기능 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기능 군을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;통해 노출됨 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;)입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;불행히도 이것은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 반복하는 배열을 복제 해야하는 경우가 많습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정확한 조건은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdc4e3aeface141ed50ea2f3a5bb834802fbbc54" translate="yes" xml:space="preserve">
          <source>The PHP manual also states:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 매뉴얼은 또한 다음과 같이 말합니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e2744babbe5f6a155ba4b49e4f30afc0e91f850e" translate="yes" xml:space="preserve">
          <source>The array has refcount&amp;gt;1. If &lt;code&gt;refcount&lt;/code&gt; is 1, then the array is not shared and we're free to modify it directly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열의 참조 횟수는 1입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; 는이&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 1, 다음 배열은 공유되지 않고 우리가 직접 자유롭게 변경할 수있어.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b7837793519155ae58510c7f461d7624338cf8e" translate="yes" xml:space="preserve">
          <source>The array is not a reference (is_ref=0). If it's a reference, then changes to it are &lt;em&gt;supposed&lt;/em&gt; to propagate, so it should not be duplicated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열이 참조가 아닙니다 (is_ref = 0). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 인 경우 변경 사항 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 전파 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되는 것으로 간주&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되므로 복제해서는 안됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f59618d362ad66a77e6991b447adba9675635b9" translate="yes" xml:space="preserve">
          <source>The assignment operator for the arrays in PHP works more like a lazy clone. Assigning one variable to another that contains an array will clone the array, unlike most languages. However, the actual cloning will not be done unless it is needed. This means that the clone will take place only when either of the variables is modified (copy-on-write).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP에서 배열의 할당 연산자는 게으른 클론과 비슷합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열을 포함하는 하나의 변수를 다른 변수에 지정하면 대부분의 언어와 달리 배열이 복제됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 실제 복제는 필요하지 않으면 수행되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 변수 중 하나가 수정 된 경우 (복사시 복사) 복제가 수행됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="14fa8ff0cf5d61c850805b6e5fb983b36b041d68" translate="yes" xml:space="preserve">
          <source>The behavior of your test cases is simple to explain at this point:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;테스트 케이스의 동작은이 시점에서 간단하게 설명 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="915873c4a3ce154fb4090c25aea28f3a43b43480" translate="yes" xml:space="preserve">
          <source>The expected part here is that &lt;code&gt;(1, 2)&lt;/code&gt; is missing from the output because element &lt;code&gt;1&lt;/code&gt; was removed. What's probably unexpected is that the outer loop stops after the first element. Why is that?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 예상되는 부분은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요소 &lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 제거 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 출력에서 ​​누락 된 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상치 못한 것은 외부 루프가 첫 번째 요소 다음에 중지된다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜 그런 겁니까?&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="565256f6d92b66af02eea962561abc18319450cb" translate="yes" xml:space="preserve">
          <source>The first form loops over the array given by array_expression. On each
  iteration, the value of the current element is assigned to $value and
  the internal array pointer is advanced by one (so on the next
  iteration, you'll be looking at the next element).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;첫 번째 형식은 array_expression이 제공 한 배열을 반복합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 반복에서 현재 요소의 값이 $ value에 할당되고 내부 배열 포인터가 1 씩 올라갑니다 (따라서 다음 반복에서는 다음 요소를 보게됩니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="93a9acd0a95da182c6b4c513a8110aeb3ca36d0e" translate="yes" xml:space="preserve">
          <source>The following example shows that each() and reset() DOES NOT affect &lt;code&gt;SENTINEL&lt;/code&gt; variables
&lt;code&gt;(for example, the current index variable)&lt;/code&gt; of the &lt;code&gt;foreach()&lt;/code&gt; iterator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 예제는 each () 및 reset () &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 &lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반복자의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;SENTINEL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(for example, the current index variable)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;영향을 미치지 않음을 보여줍니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87247b8d9ab9cc6541ded942f6c651cfc9dcd41e" translate="yes" xml:space="preserve">
          <source>The problem with allowing modifications during iteration is the case where the element you are currently on is removed. Say you use a pointer to keep track of which array element you are currently at. If this element is now freed, you are left with a dangling pointer (usually resulting in a segfault).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반복하는 동안 수정을 허용하는 문제는 현재 사용중인 요소가 제거 된 경우입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 배열 요소를 추적하기 위해 포인터를 사용한다고 가정 해보십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 요소가 해제되면 매달려있는 포인터가 남습니다 (보통 segfault가 발생 함).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9656b1e147952d098aeb672618e2c2a5d55eeaf8" translate="yes" xml:space="preserve">
          <source>The reason behind this is the nested-loop hack described above: Before the loop body runs, the current IAP position and hash is backed up into a &lt;code&gt;HashPointer&lt;/code&gt;. After the loop body it will be restored, but only if the element still exists, otherwise the current IAP position (whatever it may be) is used instead. In the example above this is exactly the case: The current element of the outer loop has been removed, so it will use the IAP, which has already been marked as finished by the inner loop!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 이유는 위에서 설명한 중첩 루프 핵입니다. 루프 본문이 실행되기 전에 현재 IAP 위치와 해시가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 백업됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 본문 후에는 요소가 여전히 존재하는 경우에만 복원되며, 그렇지 않으면 현재 IAP 위치 (무엇이든)가 대신 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예에서 이것은 정확히 그렇습니다. 외부 루프의 현재 요소가 제거되었으므로 이미 내부 루프에 의해 완료된 것으로 표시된 IAP를 사용합니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba05429027cb017f1644ed283db2a59b07a096cf" translate="yes" xml:space="preserve">
          <source>The reason is that, while &lt;code&gt;reset()&lt;/code&gt; temporarily modifies the IAP, it will be restored to the current foreach element after the loop body. To force &lt;code&gt;reset()&lt;/code&gt; to make an effect on the loop, you have to additionally remove the current element, so that the backup/restore mechanism fails:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 이유는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 IAP를 일시적으로 수정하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동안 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 본문 다음에 현재 foreach 요소로 복원되기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;강제로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루프에 영향을 만들기 위해, 당신은 너무 백업 / 메커니즘을 복원하는 것이 실패, 추가로 현재 요소를 제거해야합니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63f9f02be33a648c748f491f47a14295cc7acb13" translate="yes" xml:space="preserve">
          <source>The same also applies to objects, as the object properties can be seen as another (ordered) dictionary mapping property names to their values, plus some visibility handling. In the majority of cases, the object properties are not actually stored in this rather inefficient way. However, if you start iterating over an object, the packed representation that is normally used will be converted to a real dictionary. At that point, iteration of plain objects becomes very similar to iteration of arrays (which is why I'm not discussing plain-object iteration much in here).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 속성은 값에 대한 다른 (정렬 된) 사전 매핑 속성 이름과 가시성 처리로 볼 수 있으므로 객체에도 동일하게 적용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 경우 객체 속성은 실제로이 비효율적 인 방식으로 저장되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 객체 반복을 시작하면 일반적으로 사용되는 압축 표현이 실제 사전으로 변환됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 시점에서 일반 객체의 반복은 배열의 반복과 매우 유사합니다 (여기서 일반 객체 반복에 대해 많이 논의하지 않는 이유).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a0968550b75fdd5a4eacffc8fd75cfc37aab8f9" translate="yes" xml:space="preserve">
          <source>The second set of examples was related to the behavior of &lt;code&gt;current()&lt;/code&gt; under different &lt;code&gt;reference/refcounting&lt;/code&gt; configurations. This no longer makes sense, as &lt;code&gt;current()&lt;/code&gt; is completely unaffected by the loop, so its return value always stays the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 번째 예제 세트는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;서로 다른 &lt;/font&gt; &lt;code&gt;reference/refcounting&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 동작과 관련이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 루프의 영향을받지 않으므로 반환 값이 항상 동일하게 유지되므로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 이상 의미가 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4db5d7598394dc4efaf2ebddee1152d9a2cb947f" translate="yes" xml:space="preserve">
          <source>The three aspects described above should provide you with a mostly complete impression of the idiosyncrasies of the &lt;code&gt;foreach&lt;/code&gt; implementation and we can move on to discuss some examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위에서 설명한 세 가지 측면은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 특유성에 대한 완전한 인상을 제공해야하며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;몇 가지 예를 계속 논의 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20a766900138d9e9e26f7eb059f6b2414363bea0" translate="yes" xml:space="preserve">
          <source>There are different ways of solving this issue. PHP 5 and PHP 7 differ significantly in this regard and I'll describe both behaviors in the following. The summary is that PHP 5's approach was rather dumb and lead to all kinds of weird edge-case issues, while PHP 7's more involved approach results in more predictable and consistent behavior.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문제를 해결하는 방법에는 여러 가지가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5와 PHP 7은 이와 관련하여 크게 다르므로 다음에서 두 가지 동작을 모두 설명하겠습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요약하면 PHP 5의 접근 방식은 다소 바보이며 모든 종류의 이상한 경우가 발생하지만 PHP 7의 접근 방식은 예측 가능하고 일관된 동작을 낳습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1f629149a2bff5b4f1c466133ca920bd33974cdf" translate="yes" xml:space="preserve">
          <source>There is one last implementation detail that you have to be aware of to properly understand the code samples below. The &quot;normal&quot; way of looping through some data structure would look something like this in pseudocode:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 코드 샘플을 제대로 이해하려면 알아야 할 마지막 구현 세부 사항이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 데이터 구조를 반복하는 &quot;정상적인&quot;방법은 유사 코드에서 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b91dabc2f851c9c172de2f74b35ab48cd0251a75" translate="yes" xml:space="preserve">
          <source>This backs up our initial conclusion, we are working with a copy of the source array during the loop, otherwise we would see the modified values during the loop. &lt;em&gt;But...&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 우리의 초기 결론을 뒷받침합니다. 루프 중에 소스 배열의 사본으로 작업하고 있습니다. 그렇지 않으면 루프 중에 수정 된 값이 표시됩니다. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나...&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1b089bdce204bf49714d0cd96aee6fb5deb45f" translate="yes" xml:space="preserve">
          <source>This clearly shows that we are not working directly with the source array - otherwise the loop would continue forever, since we are constantly pushing items onto the array during the loop. But just to be sure this is the case:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 우리가 소스 어레이와 직접 작업하고 있지 않다는 것을 분명히 보여줍니다. 그렇지 않으면 루프 중에 항목을 어레이에 지속적으로 푸시하기 때문에 루프는 영원히 계속됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이것이 사실인지 확인하기 위해 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd5628afe1d31ff01bbe9de9e91da9996b858397" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;foreach&lt;/code&gt; will no longer use the IAP &lt;strong&gt;at all&lt;/strong&gt;. The &lt;code&gt;foreach&lt;/code&gt; loop will be absolutely no effect on the results of &lt;code&gt;current()&lt;/code&gt; etc. and its own behavior will never be influenced by functions like  &lt;code&gt;reset()&lt;/code&gt; etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 더 이상 IAP &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하지 않음을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의미 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루프의 결과에 전혀 효과가 없습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 같은 함수에 의해 영향을하지 않을 것 등을 그 자신의 행동 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 등&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f91d4073e1806ac4e46d9be9407b7439ade530c5" translate="yes" xml:space="preserve">
          <source>This outputs:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 결과는 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d273d739b2b7205fdf68170c768084c1fcdfbc4" translate="yes" xml:space="preserve">
          <source>This reflects the by-handle semantics of objects (i.e. they behave reference-like even in by-value contexts).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 객체의 핸들 별 의미를 반영합니다 (즉, 값별 컨텍스트에서도 참조처럼 동작 함).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c95f478c775abdcfe2b0089734af8e18efb1ae85" translate="yes" xml:space="preserve">
          <source>This, of course, does not apply to by-reference iteration. If you iterate by-reference all modifications will be reflected by the loop. Interestingly, the same is true for by-value iteration of plain objects:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 이것은 참조 별 반복에는 적용되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조별로 반복하면 모든 수정 사항이 루프에 반영됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;흥미롭게도 일반 객체의 값별 반복에 대해서도 마찬가지입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9baca8009051358845df552bcda06556e6c99b61" translate="yes" xml:space="preserve">
          <source>To support two simultaneous loops with only one internal array pointer, &lt;code&gt;foreach&lt;/code&gt; performs the following shenanigans: Before the loop body is executed, &lt;code&gt;foreach&lt;/code&gt; will back up a pointer to the current element and its hash into a per-foreach &lt;code&gt;HashPointer&lt;/code&gt;. After the loop body runs, the IAP will be set back to this element if it still exists. If however the element has been removed, we'll just use wherever the IAP is currently at. This scheme mostly-kinda-sort of works, but there's a lot of weird behavior you can get out of it, some of which I'll demonstrate below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나의 내부 배열 포인터 개의 동시 루프를 지원하기 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 행한다 다음 속임 : 루프 본체가 실행되기 전에, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; 는이&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 별의 foreach로 현재 요소와 해시 포인터를 백업 할 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;루프 본문이 실행 된 후에도 IAP는 여전히 존재하는 경우이 요소로 다시 설정됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 요소가 제거 된 경우 IAP가 현재 어디에 있든지 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 계획은 대부분 킨다 종류의 작품이지만, 당신이 그것을 빠져 나올 수있는 이상한 행동이 많이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c7e385d1086d82869c2eb01e2cb254a41ea968b" translate="yes" xml:space="preserve">
          <source>To update on this answer as it has gained some popularity: This answer no longer applies as of PHP 7. As explained in the &quot;&lt;a href=&quot;https://secure.php.net/manual/en/migration70.incompatible.php&quot;&gt;Backward incompatible changes&lt;/a&gt;&quot;, in PHP 7 foreach works on copy of the array, so any changes on the array itself are not reflected on foreach loop. More details at the link.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 답변은 어느 정도 인기를 얻음에 따라 업데이트하려면 :이 답변은 더 이상 PHP 7부터 적용되지 않습니다. &quot; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://secure.php.net/manual/en/migration70.incompatible.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 버전과 호환되지 않는 변경 사항&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설명 된대로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, PHP 7의 foreach는 어레이의 복사본에 대해 작동하므로 어레이 자체의 모든 변경 사항 foreach 루프에는 반영되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;링크에서 자세한 내용을 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dde4e161f740b1bd3e90639d3dbf341a1b517450" translate="yes" xml:space="preserve">
          <source>Trying to account for modifications during iteration is where all our foreach troubles originated, so it serves to consider some examples for this case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반복하는 동안 수정을 고려하는 것은 모든 foreach 문제가 발생한 부분이므로이 경우에 대한 몇 가지 예를 고려하는 역할을합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7169fdc663586782ea538bce150905ae47564ed" translate="yes" xml:space="preserve">
          <source>Well, let's find out what that &quot;unexpected behavior&quot; is (technically, any behavior is unexpected since I no longer know what to expect).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자, &quot;예기치 않은 행동&quot;이 무엇인지 알아 봅시다 (기술적으로는 더 이상 무엇을 기대해야하는지 알 수 없기 때문에 어떤 행동도 예상치 못한 것입니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ab0b9b999b26475829ef83e1f0b570dd0b5e77b" translate="yes" xml:space="preserve">
          <source>What is going on here? My C-fu is not good enough for me to able to extract a proper conclusion simply by looking at the PHP source code, I would appreciate it if someone could translate it into English for me.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;무슨 일이야? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 C-fu는 PHP 소스 코드를 보면서 간단히 적절한 결론을 도출 할 수있을만큼 충분하지 않습니다. 누군가 나를 위해 영어로 번역 할 수 있다면 감사하겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95561907a33364750b2b8e1516364f240bfb03a0" translate="yes" xml:space="preserve">
          <source>When foreach first starts executing, the internal array pointer is automatically reset to the first element of the array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foreach가 처음 실행을 시작하면 내부 배열 포인터가 배열의 첫 번째 요소로 자동 재설정됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7a3890dc8a14c3affcfff7a3e17e38a070766491" translate="yes" xml:space="preserve">
          <source>Which means that array was modified, but since we modified it when the &lt;code&gt;foreach&lt;/code&gt; already was at the last element of the array, it &quot;decided&quot; not to loop anymore, and even though we added new element, we added it &quot;too late&quot; and it was not looped through.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;즉, 배열이 수정되었지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이미 배열의 마지막 요소에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있을 때 수정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했으므로 더 이상 반복하지 않기로 결정했으며 새 요소를 추가했지만 &quot;너무 늦게&quot;추가했습니다. 반복되지 않았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65702a1e70c39355a68fb6833461fd85241d87ae" translate="yes" xml:space="preserve">
          <source>Which means that it accepted the modification and went through it because it was modified &quot;in time&quot;. But if you do this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 &quot;시간 내에&quot;수정 되었기 때문에 수정을 수락하고 통과했음을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이렇게하면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fd1a4f9962695956b5a0b896fb6ce6683a6dc0f" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;foreach&lt;/code&gt; does make use of the IAP, there is an additional complication: There is only one IAP, but one array can be part of multiple &lt;code&gt;foreach&lt;/code&gt; loops:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 IAP를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가적인 문제가 있습니다. 하나의 IAP 만 있지만 하나의 배열은 여러 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루프의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부일 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18462cb77b79fe84dcfd1b92f599337e091e34e5" translate="yes" xml:space="preserve">
          <source>You get the same behavior when doing by-ref iteration:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;by-ref 반복을 수행 할 때 동일한 동작을 얻습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e6a2c66c5caf519fd3145fb125a072e560e5ed25" translate="yes" xml:space="preserve">
          <source>You will get this output:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 출력을 얻을 수 있습니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fc54bd7f5ebfc024ec5a1d4f9148e3802ccdaea" translate="yes" xml:space="preserve">
          <source>You will get:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 얻을 것이다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e5ce9453caf5a9d5d4ebea4a03dcac1ad968aa6" translate="yes" xml:space="preserve">
          <source>a) &lt;code&gt;foreach&lt;/code&gt; works on the &lt;strong&gt;prospected copy&lt;/strong&gt; of the original array.
    It means &lt;code&gt;foreach()&lt;/code&gt; will have SHARED data storage until or unless a &lt;code&gt;prospected copy&lt;/code&gt; is
    not created &lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;foreach Notes/User comments&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a) &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 원본 어레이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상 사본&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대해 작동합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 각 &lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Notes / 사용자 주석에 대해 &lt;/font&gt;&lt;/a&gt; &lt;code&gt;prospected copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 작성되지 않을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때까지 또는 그렇지 않을 때까지 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 공유 데이터 스토리지가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있음을 의미 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6d778baf7de3191914dd29582064f66af60c2ed" translate="yes" xml:space="preserve">
          <source>array pointer is advanced by one (so on the next iteration, you'll be looking at the next element).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 포인터는 하나씩 진행됩니다 (따라서 다음 반복에서는 다음 요소를 볼 것입니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31d1af7d4fa62aceb0ae76a9d0de0910cca5e3b6" translate="yes" xml:space="preserve">
          <source>b) What triggers a &lt;strong&gt;prospected copy&lt;/strong&gt;?
    A prospected copy is created based on the policy of &lt;code&gt;copy-on-write&lt;/code&gt;, that is, whenever
    an array passed to &lt;code&gt;foreach()&lt;/code&gt; is changed, a clone of the original array is created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b) &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상 사본을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유발하는 요인은 무엇입니까 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예상 사본은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;copy-on-write&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정책을 기반으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작성됩니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . 즉, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전달 된 배열 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 변경 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;될 때마다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원래 배열의 복제본이 작성됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e5bef131b548d431cca88634055bf7723f0fe7b" translate="yes" xml:space="preserve">
          <source>c) The original array and &lt;code&gt;foreach()&lt;/code&gt; iterator will have &lt;code&gt;DISTINCT SENTINEL VARIABLES&lt;/code&gt;, that is, one for the original array and other for &lt;code&gt;foreach&lt;/code&gt;; see the test code below. &lt;a href=&quot;http://php.net/manual/en/book.spl.php&quot;&gt;SPL&lt;/a&gt; , &lt;a href=&quot;http://www.php.net/manual/en/spl.iterators.php&quot;&gt;Iterators&lt;/a&gt;, and &lt;a href=&quot;http://www.php.net/manual/en/class.arrayiterator.php&quot;&gt;Array Iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c) 원의 배열과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 반복자 것이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DISTINCT SENTINEL VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , 원래 하나의 어레이 등이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래 테스트 코드를 참조하십시오. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/book.spl.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SPL&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/spl.iterators.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반복자&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/class.arrayiterator.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;배열 반복자&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
