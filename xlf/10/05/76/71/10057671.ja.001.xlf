<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/10057671">
    <body>
      <group id="10057671">
        <trans-unit id="431a49cdeeb4d9cc84db522a2a5c3a2cdef9de47" translate="yes" xml:space="preserve">
          <source>(*) Incrementing the &lt;code&gt;refcount&lt;/code&gt; here sounds innocuous, but violates copy-on-write (COW) semantics: This means that we are going to modify the IAP of a refcount=2 array, while COW dictates that modifications can only be performed on refcount=1 values. This violation results in user-visible behavior change (while a COW is normally transparent) because the IAP change on the iterated array will be observable -- but only until the first non-IAP modification on the array. Instead, the three &quot;valid&quot; options would have been a) to always duplicate, b) do not increment the &lt;code&gt;refcount&lt;/code&gt; and thus allowing the iterated array to be arbitrarily modified in the loop or c) don't use the IAP at all (the PHP 7 solution).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（*）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでの参照&lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;増加は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;無害に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;聞こえ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが、コピーオンライト（COW）セマンティクスに違反しています：これは、refcount = 2配列のIAPを変更しようとしているのに対し、COWは変更が参照カウントに対してのみ実行できることを示しています値= 1。反復された配列のIAPの変化は観察可能であるため、この違反はユーザーに見える動作の変化（COWは通常は透過的です）をもたらしますが、配列の最初の非IAPの変更までのみです。代わりに、3つの「有効な」オプションは、a）常に複製すること、b）&lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インクリメントしない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こと、したがって反復配列をループで任意に変更できるようにすること、またはc）IAPをまったく使用しないこと（ PHP 7ソリ​​ューション）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0d2e82db9cb7a24724aefb22e69a8ef395189a72" translate="yes" xml:space="preserve">
          <source>...nothing that unexpected there, in fact it seems to support the &quot;copy of source&quot; theory.</source>
          <target state="translated">...予想外のことは何もありませんが、実際には「ソースのコピー」説を支持しているようです。</target>
        </trans-unit>
        <trans-unit id="f4497a3a12ac079d6abeb450ebe7f0a4fed04110" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/6n20ooMy&quot;&gt;Test case 3&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/6n20ooMy&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース3&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b69a24985ff01a40a778deb19291c02020c185b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;Test case 1&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース1&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b296351ad09fc5da5b353a825af3c80241645fce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/IfwJyTCL&quot;&gt;Test case 5&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/IfwJyTCL&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e9f341ef07206e6d5fe4744f7d24db0a9be7420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/JJp79xSd&quot;&gt;Test case 4&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/JJp79xSd&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース4&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4dfe8c8ddf3994b7c27afe0d0d0c0df19fe1f5ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://codepad.org/nirz6Ufh&quot;&gt;Test case 2&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://codepad.org/nirz6Ufh&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース2&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="92450a86cebc52bf0c89fb24add8360ca746b9b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://php.net/Traversable&quot;&gt;&lt;code&gt;Traversable&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">&lt;a href=&quot;http://php.net/Traversable&quot;&gt; &lt;code&gt;Traversable&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="908655cd3ea9b530395773a64ca419f237ea537f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$array&lt;/code&gt; have only single element, so as per the foreach execution, 1 assign to &lt;code&gt;$v&lt;/code&gt; and it don't have any other element to move pointer</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は単一の要素しかないため、foreachの実行に従って、1は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$v&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;割り当てられ、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ポインターを移動するための他の要素はありません&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="938010d83c888eb8143f06ce28fb347711f9b87f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$array&lt;/code&gt; have two element, so now $array evaluate the zero indices and move the pointer by one. For first iteration of loop, added &lt;code&gt;$array['baz']=3;&lt;/code&gt; as pass by reference.</source>
          <target state="translated">&lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は2つの要素があるため、$ arrayはゼロのインデックスを評価し、ポインターを1つ移動します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループの最初の反復で、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array['baz']=3;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;追加しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照渡し。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1affd49fa1fb528431442ca255c166508d81d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foreach&lt;/code&gt; supports iteration over three different kinds of values:</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、3種類の値の反復をサポートしています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="abb2ca0c1e4616efa3f2efd4269ebebd90ad1322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Explanation (quote from &lt;a href=&quot;http://www.php.net/manual/en/control-structures.foreach.php&quot;&gt;php.net&lt;/a&gt;):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;php.net&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からの引用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a4d3bc1f85063b4a7a1f3955f1173eaa16593fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE FOR PHP 7&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 7に関する注意&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1fb7fa83cec2cb2b2385d7b48d3c6aa0f897abb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It does not allow &lt;code&gt;original array indexes&lt;/code&gt; to be used as &lt;code&gt;references&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;original array indexes&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt; &lt;code&gt;references&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として使用すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はできません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e390762dc699d870f965a304fb7cfab2643240d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Test case&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="064c7a4ed7767e83cfb50fc272e79514ccda566e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Question&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;質問&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8eaecf9e823bcd133564dce45ba4540f14164da4" translate="yes" xml:space="preserve">
          <source>A good way to show the various duplication behaviors is to observe the behavior of the  &lt;code&gt;current()&lt;/code&gt; function inside a &lt;code&gt;foreach&lt;/code&gt; loop. Consider this example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さまざまな複製動作を示す良い方法は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動作を観察すること &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この例を考えてみましょう：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="236e1d04f916381e46584894a84e93c220049445" translate="yes" xml:space="preserve">
          <source>Another consequence of the &lt;code&gt;HashPointer&lt;/code&gt; backup+restore mechanism is that changes to the IAP through &lt;code&gt;reset()&lt;/code&gt; etc. usually do not impact &lt;code&gt;foreach&lt;/code&gt;. For example, the following code executes as if the &lt;code&gt;reset()&lt;/code&gt; were not present at all:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バックアップ+復元メカニズムの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;もう1つの結果は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によるIAPの変更が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;影響を与えないこと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、次のコードは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がまったく存在しない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かのように実行さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea6e6c9833112d231a15e75686626599f59cf2f4" translate="yes" xml:space="preserve">
          <source>Another important change between PHP 5 and PHP 7 relates to array duplication. Now that the IAP is no longer used, by-value array iteration will only do a &lt;code&gt;refcount&lt;/code&gt; increment (instead of duplication the array) in all cases. If the array is modified during the &lt;code&gt;foreach&lt;/code&gt; loop, at that point a duplication will occur (according to copy-on-write) and &lt;code&gt;foreach&lt;/code&gt; will keep working on the old array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5とPHP 7の間のもう1つの重要な変更は、配列の複製に関するものです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IAPが使用されなくなったため、値による配列の反復は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、すべての場合に（配列の複製ではなく）&lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;増分&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみを実行し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中に配列が変更された場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その時点で複製が発生し（copy-on-writeに応じて）、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は古い配列で動作し続けます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30f8495f70ccc77cad7c101cec7ef97f79d5b290" translate="yes" xml:space="preserve">
          <source>Another small variation, this time we'll assign the array to another variable:</source>
          <target state="translated">もう一つの小さなバリエーションとして、今回は配列を別の変数に代入します。</target>
        </trans-unit>
        <trans-unit id="6061b59ca687ed0aca907a08cf7627241a0b0ecc" translate="yes" xml:space="preserve">
          <source>Another weird edge case that is fixed now, is the odd effect you get when you remove and add elements that happen to have the same hash:</source>
          <target state="translated">現在修正されているもう一つの奇妙なエッジケースは、同じハッシュを持っている要素を削除して追加したときに得られる奇妙な効果です。</target>
        </trans-unit>
        <trans-unit id="7b3c4b65d9376f8f346fae1a7e1f345e86a60260" translate="yes" xml:space="preserve">
          <source>Any changes from the original can't be notices, actually there are no changes from the original, even though you clearly assigned a value to $item. This is because you are operating on $item as it appears in the copy of $set being worked on. You can override this by grabbing $item by reference, like so:</source>
          <target state="translated">オリジナルからの変更は通知できません。実際には、明らかに $item に値を代入したにもかかわらず、オリジナルからの変更はありません。これは、作業中の $set のコピーに表示されている $item を操作しているからです。これを上書きするには、次のように $item を参照して取得します。</target>
        </trans-unit>
        <trans-unit id="35db9b2dbbaebbc8cf821369cbcf483b3bfde43a" translate="yes" xml:space="preserve">
          <source>Array duplication</source>
          <target state="translated">配列の複製</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="823c6eac545f4e9f53730659ec02d448a1a05736" translate="yes" xml:space="preserve">
          <source>Arrays in PHP 5 have one dedicated &quot;internal array pointer&quot; (IAP), which properly supports modifications: Whenever an element is removed, there will be a check whether the IAP points to this element. If it does, it is advanced to the next element instead.</source>
          <target state="translated">PHP 5の配列には専用の「内部配列ポインタ」(IAP)が1つあり、これが適切に修正をサポートしています。ある要素が削除されるたびに、IAPがその要素を指しているかどうかのチェックが行われます。もし指している場合は、次の要素に移動します。</target>
        </trans-unit>
        <trans-unit id="f75e47ce74e53d29a3f08bdad31252a7f301d27e" translate="yes" xml:space="preserve">
          <source>As a last preliminary, it should be noted that PHP uses reference counting and copy-on-write to manage memory. This means that if you &quot;copy&quot; a value, you actually just reuse the old value and increment its reference count (refcount). Only once you perform some kind of modification a real copy (called a &quot;duplication&quot;) will be done. See &lt;a href=&quot;http://blog.golemon.com/2007/01/youre-being-lied-to.html&quot;&gt;You're being lied to&lt;/a&gt; for a more extensive introduction on this topic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最後の予備知識として、PHPは参照カウントとコピーオンライトを使用してメモリを管理することに注意してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、値を「コピー」すると、実際には古い値を再利用し、その参照カウント（refcount）をインクリメントするだけです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ある種の変更を実行すると、実際のコピー（「複製」と呼ばれます）が実行されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このトピックのより広範な紹介については、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blog.golemon.com/2007/01/youre-being-lied-to.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;嘘をついているを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="542892a9365ec273fecd375c7e489fa48476131d" translate="yes" xml:space="preserve">
          <source>As foreach relies on the internal array pointer changing it within the loop may lead to unexpected behavior.</source>
          <target state="translated">foreachは内部配列ポインタに依存しているので、ループ内でポインタを変更すると予期せぬ動作をする可能性があります。</target>
        </trans-unit>
        <trans-unit id="baa3dd2721745beae2d7d04883df796d03dc88ac" translate="yes" xml:space="preserve">
          <source>As it is shown in the example, PHP copied $set and used it to loop over, but when $set was used inside the loop, PHP added the variables to the original array, not the copied array. Basically, PHP is only using the copied array for the execution of the loop and the assignment of $item. Because of this, the loop above only executes 3 times, and each time it appends another value to the end of the original $set, leaving the original $set with 6 elements, but never entering an infinite loop.</source>
          <target state="translated">例にあるように、PHPは$setをコピーしてループオーバーに使用していましたが、ループ内で$setを使用した場合、PHPはコピーした配列ではなく、元の配列に変数を追加していました。基本的に、PHPはループの実行と$itemの代入にはコピーした配列しか使っていません。このため、上のループは3回しか実行されず、その都度、元の$setの末尾に別の値を追加して、元の$setを6つの要素で残していますが、無限ループに入ることはありません。</target>
        </trans-unit>
        <trans-unit id="ab66544e20bcc6d22c26b016a5bf97297360d4e1" translate="yes" xml:space="preserve">
          <source>As per the documentation provided by PHP manual.</source>
          <target state="translated">PHPのマニュアルに記載されている通りです。</target>
        </trans-unit>
        <trans-unit id="9e594b71f6bced954d7ae590b3a25fb57f21e1c4" translate="yes" xml:space="preserve">
          <source>As you can see in this case PHP will just start iterating the other entity from the start once the substitution has happened.</source>
          <target state="translated">このケースでは、置換が行われると PHP は最初から他のエンティティの反復処理を開始します。</target>
        </trans-unit>
        <trans-unit id="20f262f66c271e4ab3c91dc621f3473494822a99" translate="yes" xml:space="preserve">
          <source>As you can see, the outer loop no longer aborts after the first iteration. The reason is that both loops now have entirely separate hashtable iterators, and there is no longer any cross-contamination of both loops through a shared IAP.</source>
          <target state="translated">ご覧のように、外側のループは最初のイテレータの後にアボートしなくなりました。その理由は、両方のループが完全に別個のハッシュテーブルイテレータを持つようになり、共有の IAP を通じて両方のループがクロスコンタミネーションすることがなくなったからです。</target>
        </trans-unit>
        <trans-unit id="a96acebafe34ace0cbf6ab97e41de8fa2b59af23" translate="yes" xml:space="preserve">
          <source>Besides this, php does allow to use &lt;code&gt;iterated values as a reference to the original array value&lt;/code&gt; as well. This is demonstrated below:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これに加えて、phpは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;iterated values as a reference to the original array value&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用することもでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これを以下に示します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9c1322fef9f585e5e7154becbb7d1228383785b9" translate="yes" xml:space="preserve">
          <source>But in your second example:</source>
          <target state="translated">しかし、2つ目の例では</target>
        </trans-unit>
        <trans-unit id="61cf77a4a315dd7e9e2390f03668bfecb9f6a3df" translate="yes" xml:space="preserve">
          <source>But, those examples are still sane. The real fun starts if you remember that the &lt;code&gt;HashPointer&lt;/code&gt; restore uses a pointer to the element and its hash to determine whether it still exists. But: Hashes have collisions, and pointers can be reused! This means that, with a careful choice of array keys, we can make &lt;code&gt;foreach&lt;/code&gt; believe that an element that has been removed still exists, so it will jump directly to it. An example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、それらの例はまだ正気です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;本当に楽しいのは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;復元が要素へのポインターとそのハッシュを使用して、それがまだ存在するかどうかを判断すること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を覚えている場合です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし：ハッシュには衝突があり、ポインターは再利用できます！&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、配列キーを慎重に選択することで、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;削除された要素がまだ存在していると&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;信じさせること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ができるため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、直接要素にジャンプします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a873ee1119a94396aced11abeb0cd2d2207ad6e6" translate="yes" xml:space="preserve">
          <source>Coming back to your test cases, you can easily imagine that &lt;code&gt;foreach&lt;/code&gt; creates some kind of iterator with a reference to the array. This reference works exactly like the variable &lt;code&gt;$b&lt;/code&gt; in my example. However, the iterator along with the reference live only during the loop and then, they are both discarded. Now you can see that, in all cases but 3, the array is modified during the loop, while this extra reference is alive. This triggers a clone, and that explains what's going on here!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケースに戻ると、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が配列への参照を持つある種のイテレーターを作成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することは簡単に想像できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、私の例の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まったく同じように機能します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、イテレータと参照はループ中にのみ有効であり、両方とも破棄されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これで、3つを除くすべてのケースで、配列がループ中に変更され、この余分な参照が有効であることがわかります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはクローンをトリガーし、それがここで何が起こっているかを説明します！&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd1908e73fa068ba357e7b95d943c7ecfbd21234" translate="yes" xml:space="preserve">
          <source>Consider these nested loops over the same array (where by-ref iteration is used to make sure it really is the same one):</source>
          <target state="translated">同じ配列に対するこれらの入れ子になったループを考えてみましょう(ここでは,本当に同じ配列であることを確認するために参照による反復が使用されます).</target>
        </trans-unit>
        <trans-unit id="befcb9dd75c6dd0a10f8bd95a14d34e8993a4204" translate="yes" xml:space="preserve">
          <source>Consider this code as an example where duplication occurs:</source>
          <target state="translated">重複が発生する例として、このコードを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="57d82a24fd4de958c3356e0910b2308cb05d3c6e" translate="yes" xml:space="preserve">
          <source>Detailed explanation can be read at &lt;a href=&quot;https://stackoverflow.com/questions/10057671/how-foreach-actually-works&quot;&gt;How does PHP 'foreach' actually work?&lt;/a&gt; which explains the internals behind this behaviour.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細な説明はで読むことができます&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10057671/how-foreach-actually-works&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPのforeachのは、「実際の仕事はどのよう？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、この動作の背後にある内部を説明しています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="7ec6a83aa93501181bc76d815fd97e699db2e256" translate="yes" xml:space="preserve">
          <source>Examples: Effects of &lt;code&gt;current&lt;/code&gt; in foreach</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例：&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foreach &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;current&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;影響&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d80b3f40876bd05acd5f02160f3241ab742c26e" translate="yes" xml:space="preserve">
          <source>Examples: Modification during iteration</source>
          <target state="translated">例を挙げます。イテレーション中の修正</target>
        </trans-unit>
        <trans-unit id="7014583239968e6f988f3c793a9d2a3bc8292bd9" translate="yes" xml:space="preserve">
          <source>Examples: Your test cases</source>
          <target state="translated">例。テストケース</target>
        </trans-unit>
        <trans-unit id="eaf82d3114000fbe7543dd6911539ba662528cba" translate="yes" xml:space="preserve">
          <source>For a long time I assumed that &lt;code&gt;foreach&lt;/code&gt; worked with the array itself. Then I found many references to the fact that it works with a &lt;em&gt;copy&lt;/em&gt; of the array, and I have since assumed this to be the end of the story. But I recently got into a discussion on the matter, and after a little experimentation found that this was not in fact 100% true.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;長い間、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はアレイ自体で機能すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;想定して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それから私はそれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が配列の&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピー&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動作するという事実への多くの参照を見つけました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、そして私はこれが物語の終わりであるとそれ以来仮定しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、私は最近この問題について話し合い、少し実験したところ、これは実際には100％真実ではないことがわかりました。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99743dc1e1b371509b02b41756d7ef22f8ef3712" translate="yes" xml:space="preserve">
          <source>For internal classes, actual method calls are avoided by using an internal API that essentially just mirrors the &lt;code&gt;Iterator&lt;/code&gt; interface on the C level.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部クラスの場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、Cレベルの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インターフェースを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ミラーリングする&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だけの内部APIを使用することにより、実際のメソッド呼び出しが回避され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="96beb39c41bbc50dd98ec331cb5f6ba16ae93074" translate="yes" xml:space="preserve">
          <source>Great question, because many developers, even experienced ones, are confused by the way PHP handles arrays in foreach loops. In the standard foreach loop, PHP makes a copy of the array that is used in the loop. The copy is discarded immediately after the loop finishes. This is transparent in the operation of a simple foreach loop. 
For example:</source>
          <target state="translated">多くの開発者は、経験豊富な開発者でさえも PHP が foreach ループで配列を扱う方法に戸惑っているからです。標準的な foreach ループでは、PHP はループで使用する配列のコピーを作成します。このコピーは、ループが終了した直後に破棄されます。これは、単純な foreach ループの操作では透過的です。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="75618f2aca443a65c28cb788bdb7a31c7622b2b8" translate="yes" xml:space="preserve">
          <source>Hashtable iterators</source>
          <target state="translated">ハッシュテーブルイテレータ</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">ここでは一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="58bc8215af40743629373e4bc4e87df55c794abe" translate="yes" xml:space="preserve">
          <source>Here is an excellent article for another side effect of this copy-on-write behaviour: &lt;a href=&quot;http://fabien.potencier.org/article/48/the-php-ternary-operator-fast-or-not&quot;&gt;The PHP Ternary Operator: Fast or not?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このコピーオンライト動作の別の副作用に関する優れた記事を&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://fabien.potencier.org/article/48/the-php-ternary-operator-fast-or-not&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に示します。PHPの3項演算子：高速かどうか。&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06fc87efa1fa8d9ad8f989a7e8c9d55bd7acc20f" translate="yes" xml:space="preserve">
          <source>Here the important part is that foreach will make &lt;code&gt;$array&lt;/code&gt; an is_ref=1 when it is iterated by reference, so basically you have the same situation as above.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで重要な部分は、foreachが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を参照によって反復されるときにis_ref = 1にすることです。そのため、基本的には上記と同じ状況になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10ef31c0a3f93f77487b87c511286a358a48ee73" translate="yes" xml:space="preserve">
          <source>Here the refcount of the &lt;code&gt;$array&lt;/code&gt; is 2 when the loop is started, so for once we actually have to do the duplication upfront. Thus &lt;code&gt;$array&lt;/code&gt; and the array used by foreach will be completely separate from the outset. That's why you get the position of the IAP wherever it was before the loop (in this case it was at the first position).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ループが開始されたときの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; refcount &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は2であるため、実際には、前もって複製を行う必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とforeachによって使用される配列は、最初から完全に分離されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、ループの前のどこにでもIAPの位置を取得します（この場合は、最初の位置にあります）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9320a0e42c4e40c9d72e4f533951976eb7d6cedf" translate="yes" xml:space="preserve">
          <source>Here we have the is_ref=1 case, so the array is not copied (just like above). But now that it is a reference, the array no longer has to be duplicated when passing to the by-ref &lt;code&gt;current()&lt;/code&gt; function. Thus &lt;code&gt;current()&lt;/code&gt; and &lt;code&gt;foreach&lt;/code&gt; work on the same array. You still see the off-by-one behavior though, due to the way &lt;code&gt;foreach&lt;/code&gt; advances the pointer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここにはis_ref = 1のケースがあるため、配列はコピーされません（上記と同様）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、これが参照であるため、参照による&lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に渡すときに配列を複製する必要がなくなりました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は同じ配列で機能します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がポインターを進める&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;方法が原因で、1つずれた動作が表示され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c78f9c618fca247dc03a5d8ccd4502643dd21c69" translate="yes" xml:space="preserve">
          <source>Here we should normally expect the output &lt;code&gt;1, 1, 3, 4&lt;/code&gt; according to the previous rules. How what happens is that &lt;code&gt;'FYFY'&lt;/code&gt; has the same hash as the removed element &lt;code&gt;'EzFY'&lt;/code&gt;, and the allocator happens to reuse the same memory location to store the element. So foreach ends up directly jumping to the newly inserted element, thus short-cutting the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでは、正常に出力期待するべきである&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1, 1, 3, 4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、前のルールに従って。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何が起こると、その方法である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;'FYFY'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;削除される要素と同じハッシュを有する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;'EzFY'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、及びアロケータは、要素を格納するために同じメモリ位置を再利用するために起こります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、foreachは新しく挿入された要素に直接ジャンプすることになり、ループが短縮されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b09c9e6cdc88c66a96f4f93e25e90ddea554a4e6" translate="yes" xml:space="preserve">
          <source>Here you should know that &lt;code&gt;current()&lt;/code&gt; is a by-ref function (actually: prefer-ref), even though it does not modify the array. It has to be in order to play nice with all the other functions like &lt;code&gt;next&lt;/code&gt; which are all by-ref. By-reference passing implies that the array has to be separated and thus &lt;code&gt;$array&lt;/code&gt; and the &lt;code&gt;foreach-array&lt;/code&gt; will be different. The reason you get &lt;code&gt;2&lt;/code&gt; instead of &lt;code&gt;1&lt;/code&gt; is also mentioned above: &lt;code&gt;foreach&lt;/code&gt; advances the array pointer &lt;em&gt;before&lt;/em&gt; running the user code, not after. So even though the code is at the first element, &lt;code&gt;foreach&lt;/code&gt; already advanced the pointer to the second.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、配列を変更しなくても、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が参照関数（実際には優先参照）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;であることを知っておく必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;next&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような他のすべての関数（すべて参照）とうまく機能するために必要です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。参照渡しでは、配列を分離する必要があるため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach-array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は異なります。&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を取得する理由&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も上記で説明しています&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、ユーザーコードを実行する&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく、実行する&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前に&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列ポインターを進めます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。したがって、コードは最初の要素にありますが、&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;既に2番目の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要素に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ポインターを進めています。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e2c11296f52e3c33b435c41a2c9058141794dda" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;$arr&lt;/code&gt; will be duplicated to prevent IAP changes on &lt;code&gt;$arr&lt;/code&gt; from leaking to &lt;code&gt;$outerArr&lt;/code&gt;. In terms of the conditions above, the array is not a reference (is_ref=0) and is used in two places (refcount=2). This requirement is unfortunate and an artifact of the suboptimal implementation (there is no concern of modification during iteration here, so we don't really need to use the IAP in the first place).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; IAPは、上の変更を防止するために複製されます&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に漏れるの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$outerArr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の条件に関して、配列は参照（is_ref = 0）ではなく、2つの場所（refcount = 2）で使用されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この要件は残念であり、次善の実装の成果物です（ここでの反復中の変更の心配はないので、最初から実際にIAPを使用する必要はありません）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="71f26286c42873f72392d673b048fc981f68e484" translate="yes" xml:space="preserve">
          <source>How does PHP 'foreach' actually work</source>
          <target state="translated">PHP の 'foreach' は実際にどのように動作するのか</target>
        </trans-unit>
        <trans-unit id="4d7dd5b09fef4fbc13b52490cc8353aa7c961d78" translate="yes" xml:space="preserve">
          <source>However &lt;code&gt;foreach&lt;/code&gt;, being a rather special snowflake, chooses to do things slightly differently:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はかなり特別なスノーフレークであるため、少し異なる方法で処理を実行します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a31efb1a52d63389e065a96d4038859b40f71b1e" translate="yes" xml:space="preserve">
          <source>However, we get some interesting changes when considering modifications during iteration. I hope you will find the new behavior saner. The first example:</source>
          <target state="translated">しかし、イテレーション中の修正を考えると面白い変化が得られます。新しい挙動をより正気に近いものにしてほしいと思います。最初の例です。</target>
        </trans-unit>
        <trans-unit id="a61c4d96bcc3da5af6ed31ee756e7c946152cca3" translate="yes" xml:space="preserve">
          <source>However, what if we had used $item by reference, as I mentioned before? A single character added to the above test:</source>
          <target state="translated">しかし、先ほどのように参照で$itemを使っていたとしたらどうでしょうか?上記のテストで追加された一文字。</target>
        </trans-unit>
        <trans-unit id="c00ef429043163e498185705691978c68ce29357" translate="yes" xml:space="preserve">
          <source>I believe that this is all consequence of &lt;strong&gt;On each iteration&lt;/strong&gt; part of the explanation in the documentation, which probably means that &lt;code&gt;foreach&lt;/code&gt; does all logic before it calls the code in &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはすべて&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ドキュメント内の説明の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;各反復&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;部分の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;結果であると考えています。これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、おそらく&lt;/font&gt; &lt;code&gt;{}&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コードを呼び出す前に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がすべてのロジックを実行することを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b4697e7e52d5799d87464f9e9fddb553071695d6" translate="yes" xml:space="preserve">
          <source>If not, what is it really doing?</source>
          <target state="translated">そうでない場合、実際には何をしているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="2a829325bc6b57c4325ab8e0937f30c13ff8ee66" translate="yes" xml:space="preserve">
          <source>If the array is not duplicated (is_ref=0, refcount=1), then only its &lt;code&gt;refcount&lt;/code&gt; will be incremented (*). Additionally, if &lt;code&gt;foreach&lt;/code&gt; by reference is used, then the (potentially duplicated) array will be turned into a reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列が複製されていない場合（is_ref = 0、refcount = 1）、その&lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がインクリメントされます（*）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; by referenceを使用すると、（重複する可能性のある）配列が参照に変換されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="78dc274491d6ca8054a1f088bedca2ccdc345189" translate="yes" xml:space="preserve">
          <source>If we look in the &lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;manual&lt;/a&gt;, we find this statement:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;マニュアル&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を見ると、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のステートメントが見つかります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e55a1d14766bac174bfd5d5e0ed5c6eddea5d0fd" translate="yes" xml:space="preserve">
          <source>If you iterate by reference using &lt;code&gt;foreach ($arr as &amp;amp;$v)&lt;/code&gt; then &lt;code&gt;$arr&lt;/code&gt; is turned into a reference and you can change it during iteration.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;foreach ($arr as &amp;amp;$v)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して参照によって反復する場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$arr&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は参照に変換され、反復中に変更できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f6bafee81d8af7c1d8fe3a7d35b1e1d5276370d" translate="yes" xml:space="preserve">
          <source>If you run this:</source>
          <target state="translated">これを実行すると</target>
        </trans-unit>
        <trans-unit id="f1c3d02b13b81fde5e463b3c1e3481a89c040f02" translate="yes" xml:space="preserve">
          <source>If you still remember, the main problem with array iteration was how to handle removal of elements mid-iteration. PHP 5 used a single internal array pointer (IAP) for this purpose, which was somewhat suboptimal, as one array pointer had to be stretched to support multiple simultaneous foreach loops &lt;em&gt;and&lt;/em&gt; interaction with &lt;code&gt;reset()&lt;/code&gt; etc. on top of that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まだ覚えているかもしれませんが、配列反復の主な問題は、反復中の要素の削除をどのように処理するかでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5はこの目的のために単一の内部配列ポインター（IAP）を使用しましたが、複数の同時foreachループ&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その上での&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;との&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相互作用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をサポートするために1つの配列ポインターを拡張する必要があったため、これはやや最適ではありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でした。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02f297f5905381c7400f2b6935063eab3c3035ae" translate="yes" xml:space="preserve">
          <source>In PHP 5 the same applies even if you iterate by value, but the array was a reference beforehand: &lt;code&gt;$ref =&amp;amp; $arr; foreach ($ref as $v)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 5では、値で反復しても同じことが当てはまりますが、配列は事前に参照でした。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$ref =&amp;amp; $arr; foreach ($ref as $v)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c31012f51272cbd314bdcd5bbcfff2fc3b76f9e3" translate="yes" xml:space="preserve">
          <source>In example 3 you don't modify the array. In all other examples you modify either the contents or the internal array pointer. This is important when it comes to &lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;PHP&lt;/a&gt; arrays because of the semantics of the assignment operator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例3では、配列を変更しません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他のすべての例では、内容または内部配列ポインターを変更します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、代入演算子のセマンティクスのため、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/PHP&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に関しては重要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="22ede99ce8e51107137227faf74df0b592c69a53" translate="yes" xml:space="preserve">
          <source>In foreach loop, the first thing php does is that it creates a copy of the array which is to be iterated over. PHP then iterates over this new &lt;code&gt;copy&lt;/code&gt; of the array rather than the original one. This is demonstrated in the below example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;foreachループで、phpが最初に行うことは、繰り返し処理される配列のコピーを作成することです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、PHP &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は元の配列ではなく、この配列の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しい&lt;/font&gt;&lt;/font&gt; &lt;code&gt;copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;反復処理し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、以下の例で示されています。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="134677d03213db70953d47c1bffdab544c9f93e4" translate="yes" xml:space="preserve">
          <source>In most cases, this change is transparent and has no other effect than better performance. However, there is one occasion where it results in different behavior, namely the case where the array was a reference beforehand:</source>
          <target state="translated">ほとんどの場合、この変更は透過的であり、パフォーマンスを向上させる以外の効果はありません。しかし、1つだけ異なる動作をする場合があります。</target>
        </trans-unit>
        <trans-unit id="8d13b49c0d0dcf6c67a637aa73c5a0309f5ed373" translate="yes" xml:space="preserve">
          <source>In test case 3, once again the array is not duplicated, thus &lt;code&gt;foreach&lt;/code&gt; will be modifying the IAP of the &lt;code&gt;$array&lt;/code&gt; variable. At the end of the iteration, the IAP is NULL (meaning iteration has done), which &lt;code&gt;each&lt;/code&gt; indicates by returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース3では、配列が重複していないため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IAPを変更し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;反復の最後に、IAPはNULL（反復が完了したことを意味します）であり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;each&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;/font&gt; &lt;code&gt;false&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を返すことによって示し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33d269e7a4a764b049b79e9cb1f9e20dc83243c4" translate="yes" xml:space="preserve">
          <source>In test cases 1 and 2 &lt;code&gt;$array&lt;/code&gt; starts off with refcount=1, so it will not be duplicated by &lt;code&gt;foreach&lt;/code&gt;: Only the &lt;code&gt;refcount&lt;/code&gt; is incremented. When the loop body subsequently modifies the array (which has refcount=2 at that point), the duplication will occur at that point. Foreach will continue working on an unmodified copy of &lt;code&gt;$array&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース1および2では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はrefcount = 1で始まるため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって複製されません&lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がインクリメントされます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その後、ループ本体が配列（その時点でrefcount = 2を持つ）を変更すると、その時点で重複が発生します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Foreachは、変更されていない&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーで引き続き作業し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1dbfb1adb9e84f34a26cf1ef4549ca5fdf33e6ac" translate="yes" xml:space="preserve">
          <source>In test cases 4 and 5 both &lt;code&gt;each&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; are by-reference functions. The &lt;code&gt;$array&lt;/code&gt; has a &lt;code&gt;refcount=2&lt;/code&gt; when it is passed to them, so it has to be duplicated. As such &lt;code&gt;foreach&lt;/code&gt; will be working on a separate array again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース4と5の両方に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;each&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;によって参照関数です。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持っている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount=2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが重複する必要があるので、それは、彼らに渡されたとき。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は別のアレイで再び動作します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ed0a58bec9d6612b04799a17cd5f6d6fef8450f" translate="yes" xml:space="preserve">
          <source>In the following, I will try to explain precisely how iteration works in different cases. By far the simplest case is &lt;code&gt;Traversable&lt;/code&gt; objects, as for these &lt;code&gt;foreach&lt;/code&gt; is essentially only syntax sugar for code along these lines:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下では、さまざまなケースでイテレーションがどのように機能するかを正確に説明します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は基本的にこれらの行に沿ったコードの構文糖衣でしかない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これまでで最も単純なケースは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Traversable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c7339506450bbac19831889ae44122066b7fe107" translate="yes" xml:space="preserve">
          <source>In your second example, you start with two elements, and foreach loop is not at the last element so it evaluates the array on the next iteration and thus realises that there is new element in the array.</source>
          <target state="translated">2つ目の例では、2つの要素から始まり、foreachループは最後の要素にはないので、次の反復で配列を評価し、その結果、配列に新しい要素があることを認識しています。</target>
        </trans-unit>
        <trans-unit id="fde8dd98d7e3c5d285a56193ed177dd2ac066399" translate="yes" xml:space="preserve">
          <source>Internal array pointer and HashPointer</source>
          <target state="translated">内部配列ポインタとHashPointer</target>
        </trans-unit>
        <trans-unit id="55351291e1c5fef6a45bef8efd585915f3bd479a" translate="yes" xml:space="preserve">
          <source>Is there any situation where using functions that adjust the array pointer (&lt;code&gt;each()&lt;/code&gt;, &lt;code&gt;reset()&lt;/code&gt; et al.) during a &lt;code&gt;foreach&lt;/code&gt; could affect the outcome of the loop?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;中に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列ポインターを調整する関数（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; など)&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用すると、ループの結果に影響を与える可能性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がある状況はあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますか？&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bfb1d36860bfa186a30dd861585a17c395ef9f61" translate="yes" xml:space="preserve">
          <source>Is this correct and the whole story?</source>
          <target state="translated">これが正しくて全容なのか?</target>
        </trans-unit>
        <trans-unit id="7bb8345349d5d2faf3d2e667f6fed8801fadc203" translate="yes" xml:space="preserve">
          <source>It seems to me that &lt;code&gt;foreach&lt;/code&gt; works with a &lt;em&gt;copy&lt;/em&gt; of the array, but sets the array pointer of the source array to the end of the array after the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ように私には思える&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で動作する&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピー&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列のが、ループの後に配列の最後にソース配列の配列ポインタを設定します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d2d00199b28cd212143ebd236537b2023ca47451" translate="yes" xml:space="preserve">
          <source>Iteration of arrays and plain objects is significantly more complicated. First of all, it should be noted that in PHP &quot;arrays&quot; are really ordered dictionaries and they will be traversed according to this order (which matches the insertion order as long as you didn't use something like &lt;code&gt;sort&lt;/code&gt;). This is opposed to iterating by the natural order of the keys (how lists in other languages often work) or having no defined order at all (how dictionaries in other languages often work).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列とプレーンオブジェクトの反復は、かなり複雑です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まず第一に、PHPでは「配列」は実際に順序付けられたディクショナリであり、これらはこの順序に従ってトラバースされます（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sort&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ような&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ものを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用しない限り、挿入順序と一致し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、キーの自然な順序による反復（他の言語のリストがよく機能する方法）またはまったく定義されていない順序（他の言語の辞書がよく機能する方法）による反復とは対照的です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0d7e336b7b454ce37f9f414661d83e60fed3826" translate="yes" xml:space="preserve">
          <source>Let me prefix this by saying that I know what &lt;code&gt;foreach&lt;/code&gt; is, does and how to use it. This question concerns how it works under the bonnet, and I don't want any answers along the lines of &quot;this is how you loop an array with &lt;code&gt;foreach&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何であるか&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、何をするか、そしてどのように使用するかを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;知っていると言って、これの前に付けましょう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この質問は、それがボンネットの下でどのように機能するかに関するものであり、「これが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列をループする方法です」という言葉に沿って回答したくありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b63928b527f92fb71f4104a7bd7acfb52f9d816d" translate="yes" xml:space="preserve">
          <source>Let me show what I mean. For the following test cases, we will be working with the following array:</source>
          <target state="translated">どういうことなのかを示してみましょう。以下のテストケースでは、次のような配列で作業を行います。</target>
        </trans-unit>
        <trans-unit id="f751c6687bfd848ca5a2e2261174f789d8ab95d8" translate="yes" xml:space="preserve">
          <source>Let's consider a few examples, starting with your test cases:</source>
          <target state="translated">テストケースから始めて、いくつかの例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="3097fd5b0d5d815f05c7fe33aaa245060a3bf92e" translate="yes" xml:space="preserve">
          <source>Namely, the array pointer is already moved forward &lt;em&gt;before&lt;/em&gt; the loop body runs. This means that while the loop body is working on element &lt;code&gt;$i&lt;/code&gt;, the IAP is already at element &lt;code&gt;$i+1&lt;/code&gt;. This is the reason why code samples showing modification during iteration will always &lt;code&gt;unset&lt;/code&gt; the &lt;em&gt;next&lt;/em&gt; element, rather than the current one.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループ本体が実行さ&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れる前&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に、配列ポインターがすでに前方&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;移動され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、ループ本体が要素&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動作している間、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IAPはすでに要素&lt;/font&gt;&lt;/font&gt; &lt;code&gt;$i+1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを意味し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これが、反復中の変更を示すコードサンプル&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、現在の要素ではなく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要素の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;unset&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;理由です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40a05dbc2f0a8aa4f92fc60f38c31f2f5d423ec4" translate="yes" xml:space="preserve">
          <source>Normal objects</source>
          <target state="translated">通常のオブジェクト</target>
        </trans-unit>
        <trans-unit id="e08a5016973ce24d28ac18e9fdb6932843bef710" translate="yes" xml:space="preserve">
          <source>Now lets try a small modification:</source>
          <target state="translated">では、ちょっとした改造をしてみましょう。</target>
        </trans-unit>
        <trans-unit id="5656010570fbcc2ba537a9c5378cc92d8408d098" translate="yes" xml:space="preserve">
          <source>Objects have by-handle passing semantics, which for most practical purposes means that they behave like references. So objects can always be changed during iteration.</source>
          <target state="translated">オブジェクトはバイハンドルパッシングのセマンティクスを持っており、ほとんどの実用的な目的では参照のように振る舞うことを意味します。つまり、オブジェクトは繰り返しの間に常に変更することができます。</target>
        </trans-unit>
        <trans-unit id="7c216b53de040b00d089894dd8ddbc5bde03d966" translate="yes" xml:space="preserve">
          <source>On each iteration, the value of the current element is assigned to $v and the internal</source>
          <target state="translated">各反復では、現在の要素の値が$vに代入され、内部の</target>
        </trans-unit>
        <trans-unit id="a4f99d71c5a8b263015886cdb2f907d0ce4d1a2e" translate="yes" xml:space="preserve">
          <source>One last odd case that I'd like to mention, it is that PHP allows you to substitute the iterated entity during the loop. So you can start iterating on one array and then replace it with another array halfway through. Or start iterating on an array and then replace it with an object:</source>
          <target state="translated">最後の奇妙なケースとして言及しておきたいのは、PHPではループ中に反復処理された実体を置換することができるということです。つまり、ある配列の反復処理を開始し、途中で別の配列に置き換えることができます。あるいは、配列の反復処理を開始してからオブジェクトに置き換えることもできます。</target>
        </trans-unit>
        <trans-unit id="c242255b4e20b8454762a9c1cfc23f3f6bb8f097" translate="yes" xml:space="preserve">
          <source>PHP 5</source>
          <target state="translated">ピーエッチピーエルファイブ</target>
        </trans-unit>
        <trans-unit id="084c3eec12a7ea0542a27183c70a323878c7d71b" translate="yes" xml:space="preserve">
          <source>PHP 7</source>
          <target state="translated">ピーエッチピーエルセブン</target>
        </trans-unit>
        <trans-unit id="5845f09d0ec80f31277ff6f4551cfaec806397d0" translate="yes" xml:space="preserve">
          <source>PHP 7 uses a different approach, namely, it supports creating an arbitrary amount of external, safe hashtable iterators. These iterators have to be registered in the array, from which point on they have the same semantics as the IAP: If an array element is removed, all hashtable iterators pointing to that element will be advanced to the next element.</source>
          <target state="translated">それは、安全な外部のハッシュテーブルイテレータを任意の数だけ作成することをサポートしているということです。これらのイテレータは配列に登録しなければなりません。配列の要素が削除された場合、その要素を指すすべてのハッシュタブルイテレータは次の要素に進みます。</target>
        </trans-unit>
        <trans-unit id="34259c10ebcccdc96f1a84d84d17eb2f067ddea9" translate="yes" xml:space="preserve">
          <source>PHP foreach loop can be used with &lt;code&gt;Indexed arrays&lt;/code&gt;, &lt;code&gt;Associative arrays&lt;/code&gt; and &lt;code&gt;Object public variables&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP foreachループは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Indexed arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Associative arrays&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object public variables&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で使用でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c0047e404d6d99d4b1d7ddc87de51f778964b06" translate="yes" xml:space="preserve">
          <source>Position advancement order</source>
          <target state="translated">ポジション昇格の順番</target>
        </trans-unit>
        <trans-unit id="758faebc57cf11a657355347e9e4d05b49a43dde" translate="yes" xml:space="preserve">
          <source>Previously by-value iteration of reference-arrays was special cases. In this case, no duplication occurred, so all modifications of the array during iteration would be reflected by the loop. In PHP 7 this special case is gone: A by-value iteration of an array will &lt;strong&gt;always&lt;/strong&gt; keep working on the original elements, disregarding any modifications during the loop.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以前は、参照配列の値による反復は特殊なケースでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この場合、重複は発生しなかったため、反復中の配列のすべての変更はループによって反映されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 7では、この特別なケースはなくなりました。配列の値による反復は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ループ中の変更を無視して、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元の要素で動作し続けます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0b70ce3dfe944d7a532ef64d990426ece003306" translate="yes" xml:space="preserve">
          <source>Previously the HashPointer restore mechanism jumped right to the new element because it &quot;looked&quot; like it's the same as the removed element (due to colliding hash and pointer). As we no longer rely on the element hash for anything, this is no longer an issue.</source>
          <target state="translated">以前は、ハッシュポインタ復元機構は、削除された要素と同じであるかのように &quot;見えた &quot;ため、新しい要素に右にジャンプしていました(ハッシュとポインタが衝突しているため)。もう何も要素のハッシュに頼らなくなったので、これはもう問題ではありません。</target>
        </trans-unit>
        <trans-unit id="b2fef7d7e527879e31aa00e11336ca35080be717" translate="yes" xml:space="preserve">
          <source>Results in an infinite loop. Note this actually is an infinite loop, you&amp;rsquo;ll have to either kill the script yourself or wait for your OS to run out of memory. I added the following line to my script so PHP would run out of memory very quickly, I suggest you do the same if you&amp;rsquo;re going to be running these infinite loop tests:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;無限ループになります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは実際には無限ループであることに注意してください。自分でスクリプトを強制終了するか、OSがメモリ不足になるのを待つ必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スクリプトに次の行を追加して、PHPでメモリがすぐに不足するようにしました。これらの無限ループテストを実行する場合は、同じようにすることをお勧めします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f485176e25715d83c8d06eb7fb74f9a075ad672" translate="yes" xml:space="preserve">
          <source>Right... this seems to suggest that &lt;code&gt;foreach&lt;/code&gt; relies on the array pointer of the source array. But we've just proved that we're &lt;em&gt;not working with the source array&lt;/em&gt;, right? Well, not entirely.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そう...これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がソース配列の配列ポインタに依存し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ていることを示唆しているよう&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ソース配列&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を操作してい&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを証明しただけですよね&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完全にではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26851422c5fa9895c974ae2a35d04d45be56bf30" translate="yes" xml:space="preserve">
          <source>So as per your first example:</source>
          <target state="translated">だから最初の例のように</target>
        </trans-unit>
        <trans-unit id="a118c312dcc816d78542af9b056c14047650c765" translate="yes" xml:space="preserve">
          <source>So far, so good. Iterating over a dictionary can't be too hard, right? The problems begin when you realize that an array/object can change during iteration. There are multiple ways this can happen:</source>
          <target state="translated">ここまでは順調だ 辞書の反復処理はそれほど難しくないでしょう?問題は、配列オブジェクトが反復処理中に変更される可能性があることに気付いたときに始まります。これには複数の方法があります。</target>
        </trans-unit>
        <trans-unit id="22767625f947aff65dabcdc777a951ea58e15915" translate="yes" xml:space="preserve">
          <source>So in this previous example with the infinite loop, we see the reason why PHP was written to create a copy of the array to loop over. When a copy is created and used only by the structure of the loop construct itself, the array stays static throughout the execution of the loop, so you&amp;rsquo;ll never run into issues.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、この前の無限ループの例では、ループする配列のコピーを作成するためにPHPが作成された理由がわかります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーが作成され、ループ構造自体の構造によってのみ使用される場合、配列はループの実行中は静的なままなので、問題が発生することはありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a4810d33897e930efe44a50f6d87f8ce4b8c4edb" translate="yes" xml:space="preserve">
          <source>So it is evident and observable, when $item is operated on by-reference, the changes made to $item are made to the members of the original $set. Using $item by reference also prevents PHP from creating the array copy. To test this, first we&amp;rsquo;ll show a quick script demonstrating the copy:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、$ itemが参照で操作される場合、$ itemに加えられた変更は元の$ setのメンバーに加えられることが明白であり、観察可能です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照で$ itemを使用すると、PHPが配列のコピーを作成することもできなくなります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これをテストするには、まずコピーを示す簡単なスクリプトを表示します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e1a42e1f249741b6b1505dd1fe7c48630ed823c6" translate="yes" xml:space="preserve">
          <source>So the copy is created but the developer doesn't notice, because the original array isn&amp;rsquo;t referenced within the loop or after the loop finishes. However, when you attempt to modify the items in a loop, you find that they are unmodified when you finish:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、コピーは作成されますが、元の配列がループ内またはループの終了後に参照されないため、開発者は気付きません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ただし、アイテムをループで変更しようとすると、終了時に変更されていないことがわかります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8607657ed5ac59972cd210308aab7916fb222409" translate="yes" xml:space="preserve">
          <source>So, despite the fact that we are not working directly with the source array, we are working directly with the source array pointer - the fact that the pointer is at the end of the array at the end of the loop shows this. Except this can't be true - if it was, then &lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;test case 1&lt;/a&gt; would loop forever.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、ソース配列を直接操作していないという事実にもかかわらず、ソース配列ポインターを直接操作しています。ポインターがループの最後の配列の最後にあるという事実は、これを示しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは当てはまりませんが、そうでない&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://codepad.org/7DIeObk9&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース1&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は永久にループします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7620823db465a8213cdba392c149d0cffe8cba72" translate="yes" xml:space="preserve">
          <source>So, in your first example you only have one element in the array, and when the pointer is moved the next element does not exist, so after you add new element foreach ends because it already &quot;decided&quot; that it it as the last element.</source>
          <target state="translated">だから、あなたの最初の例では、配列内の1つの要素を持っているだけで、ポインタが移動されたときに、次の要素が存在しないので、新しい要素を追加した後、それが最後の要素としてそれがすでにそれを &quot;決定 &quot;したので、foreachは終了します。</target>
        </trans-unit>
        <trans-unit id="35d0be98ccd23d238ffd883d44c8e1a3bba9053a" translate="yes" xml:space="preserve">
          <source>Some points to note when working with &lt;code&gt;foreach()&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する際の注意点&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="57120796a80a08ef6aa8f16cb423a7f2ab9f0a14" translate="yes" xml:space="preserve">
          <source>Source: &lt;a href=&quot;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&quot;&gt;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ソース：&lt;/font&gt;&lt;a href=&quot;http://dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//dwellupper.io/post/47/understanding-php-foreach-loop-with-examples&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c75dc3f330b31a50042d85df76b4fbc730b896f9" translate="yes" xml:space="preserve">
          <source>Stack&amp;nbsp;Overflow question &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2728709&quot;&gt;How to make sure the value is reset in a 'foreach' loop in PHP?&lt;/a&gt;&lt;/em&gt; addresses the cases (3,4,5) of your question.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スタックオーバーフローの質問&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/2728709&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値がPHPの「foreach」ループでリセットされることを確認するにはどうすればよいですか？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;質問のケース（3、4、5）に対処します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43ee53a8fd3dd8f60f02f4016979d5c8131c4a41" translate="yes" xml:space="preserve">
          <source>Substituting the iterated entity during the loop</source>
          <target state="translated">ループ中の反復実体の代入</target>
        </trans-unit>
        <trans-unit id="799e1f85c65dc059f75f6566ee59feb5cfae8d0f" translate="yes" xml:space="preserve">
          <source>Test case 3 changes: &lt;code&gt;Foreach&lt;/code&gt; no longer uses the IAP, so &lt;code&gt;each()&lt;/code&gt; is not affected by the loop. It will have the same output before and after.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース3の変更：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はIAPを使用しないため、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はループの影響を受けません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;前後で同じ出力になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cd92aadc08b97ed5f3daa2ae99864416eaa8183a" translate="yes" xml:space="preserve">
          <source>Test cases 1 and 2 retain the same output: By-value array iteration always keep working on the original elements. (In this case, even &lt;code&gt;refcounting&lt;/code&gt; and duplication behavior is exactly the same between PHP 5 and PHP 7).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース1と2は同じ出力を保持します。値による配列の反復は、常に元の要素で機能し続けます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（この場合、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcounting&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と複製の動作&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;でさえ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、PHP 5とPHP 7でまったく同じです）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5302152a206d4acde3103ec9c65b3fc49d9cde5" translate="yes" xml:space="preserve">
          <source>Test cases 4 and 5 stay the same: &lt;code&gt;each()&lt;/code&gt; and &lt;code&gt;reset()&lt;/code&gt; will duplicate the array before changing the IAP, while &lt;code&gt;foreach&lt;/code&gt; still uses the original array. (Not that the IAP change would have mattered, even if the array was shared.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テストケース4と5は同じままです&lt;/font&gt;&lt;/font&gt; &lt;code&gt;each()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、IAPを変更する前に配列を複製し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は元の配列を使用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（配列が共有されている場合でも、IAPの変更が問題になることはありません。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9e56b636d04a99b97687e1513e0cfbb1be220f5" translate="yes" xml:space="preserve">
          <source>The IAP is a visible feature of an array (exposed through the &lt;code&gt;current&lt;/code&gt; family of functions), as such changes to the IAP count as modifications under copy-on-write semantics. This, unfortunately, means that &lt;code&gt;foreach&lt;/code&gt; is in many cases forced to duplicate the array it is iterating over. The precise conditions are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IAPは、配列の可視機能（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;current&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の関数ファミリ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を通じて公開&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）であり、IAPに対するこのような変更は、コピーオンライトセマンティクスでの変更としてカウントされます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;残念ながら、これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が多くの場合、反復している配列の複製を余儀なくされることを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;意味&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正確な条件は次のとおりです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fdc4e3aeface141ed50ea2f3a5bb834802fbbc54" translate="yes" xml:space="preserve">
          <source>The PHP manual also states:</source>
          <target state="translated">PHPのマニュアルにも書いてあります。</target>
        </trans-unit>
        <trans-unit id="e2744babbe5f6a155ba4b49e4f30afc0e91f850e" translate="yes" xml:space="preserve">
          <source>The array has refcount&amp;gt;1. If &lt;code&gt;refcount&lt;/code&gt; is 1, then the array is not shared and we're free to modify it directly.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列のrefcount&amp;gt; 1です。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;refcount&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が1の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、配列は共有されず、自由に直接変更できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b7837793519155ae58510c7f461d7624338cf8e" translate="yes" xml:space="preserve">
          <source>The array is not a reference (is_ref=0). If it's a reference, then changes to it are &lt;em&gt;supposed&lt;/em&gt; to propagate, so it should not be duplicated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列は参照ではありません（is_ref = 0）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照の場合、変更は反映される&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はずな&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、複製しないでください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9f59618d362ad66a77e6991b447adba9675635b9" translate="yes" xml:space="preserve">
          <source>The assignment operator for the arrays in PHP works more like a lazy clone. Assigning one variable to another that contains an array will clone the array, unlike most languages. However, the actual cloning will not be done unless it is needed. This means that the clone will take place only when either of the variables is modified (copy-on-write).</source>
          <target state="translated">PHP の配列の代入演算子は、遅延クローンのように動作します。ほとんどの言語とは異なり、ある変数を配列を含む別の変数に代入すると、 配列のクローンが作成されます。しかし、実際の複製は必要な場合を除いては行われません。これは、どちらかの変数が変更されたときにのみクローンが行われることを意味します (コピーオンライト)。</target>
        </trans-unit>
        <trans-unit id="14fa8ff0cf5d61c850805b6e5fb983b36b041d68" translate="yes" xml:space="preserve">
          <source>The behavior of your test cases is simple to explain at this point:</source>
          <target state="translated">テストケースの動作は、この時点で簡単に説明することができます。</target>
        </trans-unit>
        <trans-unit id="915873c4a3ce154fb4090c25aea28f3a43b43480" translate="yes" xml:space="preserve">
          <source>The expected part here is that &lt;code&gt;(1, 2)&lt;/code&gt; is missing from the output because element &lt;code&gt;1&lt;/code&gt; was removed. What's probably unexpected is that the outer loop stops after the first element. Why is that?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで予想される部分は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要素&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が削除された&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、出力から&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(1, 2)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が欠落していること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;おそらく予期しないことは、最初の要素の後に外側のループが停止することです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;何故ですか？&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="565256f6d92b66af02eea962561abc18319450cb" translate="yes" xml:space="preserve">
          <source>The first form loops over the array given by array_expression. On each
  iteration, the value of the current element is assigned to $value and
  the internal array pointer is advanced by one (so on the next
  iteration, you'll be looking at the next element).</source>
          <target state="translated">最初のフォームは、array_expressionで与えられた配列をループします。反復のたびに、現在の要素の値が $value に代入され、内部配列ポインタが 1 つ進みます (つまり、次の反復では次の要素を見ることになります)。</target>
        </trans-unit>
        <trans-unit id="93a9acd0a95da182c6b4c513a8110aeb3ca36d0e" translate="yes" xml:space="preserve">
          <source>The following example shows that each() and reset() DOES NOT affect &lt;code&gt;SENTINEL&lt;/code&gt; variables
&lt;code&gt;(for example, the current index variable)&lt;/code&gt; of the &lt;code&gt;foreach()&lt;/code&gt; iterator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次の例は、each（）およびreset（）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;イテレータの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SENTINEL&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(for example, the current index variable)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;影響を与えないこと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を示してい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87247b8d9ab9cc6541ded942f6c651cfc9dcd41e" translate="yes" xml:space="preserve">
          <source>The problem with allowing modifications during iteration is the case where the element you are currently on is removed. Say you use a pointer to keep track of which array element you are currently at. If this element is now freed, you are left with a dangling pointer (usually resulting in a segfault).</source>
          <target state="translated">イテレーション中に変更を許可する場合の問題点は、現在位置にある要素が削除されてしまう場合です。現在どの配列の要素にいるかを追跡するためにポインタを使用しているとします。この要素が解放されると、ポインタがぶら下がったままになってしまいます(通常はセグメンテーションフォールになります)。</target>
        </trans-unit>
        <trans-unit id="9656b1e147952d098aeb672618e2c2a5d55eeaf8" translate="yes" xml:space="preserve">
          <source>The reason behind this is the nested-loop hack described above: Before the loop body runs, the current IAP position and hash is backed up into a &lt;code&gt;HashPointer&lt;/code&gt;. After the loop body it will be restored, but only if the element still exists, otherwise the current IAP position (whatever it may be) is used instead. In the example above this is exactly the case: The current element of the outer loop has been removed, so it will use the IAP, which has already been marked as finished by the inner loop!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この背後にある理由は、上記の入れ子ループハックです。ループ本体が実行される前に、現在のIAP位置とハッシュが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バックアップされ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループ本体の後は、要素がまだ存在する場合にのみ復元されます。それ以外の場合は、代わりに現在のIAP位置（何であれ）が代わりに使用されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の例では、これがまさに当てはまります。外側のループの現在の要素が削除されているため、内側のループによって既に終了としてマークされているIAPが使用されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba05429027cb017f1644ed283db2a59b07a096cf" translate="yes" xml:space="preserve">
          <source>The reason is that, while &lt;code&gt;reset()&lt;/code&gt; temporarily modifies the IAP, it will be restored to the current foreach element after the loop body. To force &lt;code&gt;reset()&lt;/code&gt; to make an effect on the loop, you have to additionally remove the current element, so that the backup/restore mechanism fails:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その理由は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; が&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一時的にIAPを変更する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、ループ本体の後で現在のforeach要素に復元されるためです。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がループに影響を与えるように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;強制&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;するには、現在の要素をさらに削除して、バックアップ/復元メカニズムが失敗するようにする必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63f9f02be33a648c748f491f47a14295cc7acb13" translate="yes" xml:space="preserve">
          <source>The same also applies to objects, as the object properties can be seen as another (ordered) dictionary mapping property names to their values, plus some visibility handling. In the majority of cases, the object properties are not actually stored in this rather inefficient way. However, if you start iterating over an object, the packed representation that is normally used will be converted to a real dictionary. At that point, iteration of plain objects becomes very similar to iteration of arrays (which is why I'm not discussing plain-object iteration much in here).</source>
          <target state="translated">オブジェクトのプロパティは、プロパティ名をその値にマッピングする別の(順序付けされた)ディクショナリと見ることができ、さらにいくつかの可視性の処理も含まれているからです。大抵の場合、オブジェクトのプロパティはこのような非効率的な方法では実際には保存されません。しかし、オブジェクトの反復処理を開始すると、通常使用されるパックされた表現が実際の辞書に変換されます。その時点で、プレーンオブジェクトの反復処理は配列の反復処理に非常に似ています(ここではプレーンオブジェクトの反復処理についてはあまり触れません)。</target>
        </trans-unit>
        <trans-unit id="1a0968550b75fdd5a4eacffc8fd75cfc37aab8f9" translate="yes" xml:space="preserve">
          <source>The second set of examples was related to the behavior of &lt;code&gt;current()&lt;/code&gt; under different &lt;code&gt;reference/refcounting&lt;/code&gt; configurations. This no longer makes sense, as &lt;code&gt;current()&lt;/code&gt; is completely unaffected by the loop, so its return value always stays the same.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2番目の例のセットは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、さまざまな&lt;/font&gt; &lt;code&gt;reference/refcounting&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;構成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;での&lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動作に関連していました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;はループの影響をまったく受けないので、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これはもはや意味&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がありません。そのため、戻り値は常に同じままです。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4db5d7598394dc4efaf2ebddee1152d9a2cb947f" translate="yes" xml:space="preserve">
          <source>The three aspects described above should provide you with a mostly complete impression of the idiosyncrasies of the &lt;code&gt;foreach&lt;/code&gt; implementation and we can move on to discuss some examples.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の3つの側面により、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実装の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特異性のほぼ完全な印象が得られるはずです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。次に、いくつかの例について説明します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20a766900138d9e9e26f7eb059f6b2414363bea0" translate="yes" xml:space="preserve">
          <source>There are different ways of solving this issue. PHP 5 and PHP 7 differ significantly in this regard and I'll describe both behaviors in the following. The summary is that PHP 5's approach was rather dumb and lead to all kinds of weird edge-case issues, while PHP 7's more involved approach results in more predictable and consistent behavior.</source>
          <target state="translated">この問題を解決するには、さまざまな方法があります。PHP 5 と PHP 7 はこの点で大きく異なりますので、以下で両方の動作を説明します。要約すると、PHP 5 のアプローチはかなり間抜けで、あらゆる種類の奇妙なエッジケースの問題を引き起こしていたのに対し、PHP 7 のアプローチは、より予測可能で一貫性のある挙動をもたらしていたということです。</target>
        </trans-unit>
        <trans-unit id="1f629149a2bff5b4f1c466133ca920bd33974cdf" translate="yes" xml:space="preserve">
          <source>There is one last implementation detail that you have to be aware of to properly understand the code samples below. The &quot;normal&quot; way of looping through some data structure would look something like this in pseudocode:</source>
          <target state="translated">以下のコードサンプルを正しく理解するためには、最後に一つだけ実装の詳細を知っておく必要があります。データ構造体をループする「通常の」方法は、擬似コードでは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b91dabc2f851c9c172de2f74b35ab48cd0251a75" translate="yes" xml:space="preserve">
          <source>This backs up our initial conclusion, we are working with a copy of the source array during the loop, otherwise we would see the modified values during the loop. &lt;em&gt;But...&lt;/em&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにより、最初の結論が裏付けられます。ループ中にソース配列のコピーを操作します。そうしないと、ループ中に変更された値が表示されます。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;だが...&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1b089bdce204bf49714d0cd96aee6fb5deb45f" translate="yes" xml:space="preserve">
          <source>This clearly shows that we are not working directly with the source array - otherwise the loop would continue forever, since we are constantly pushing items onto the array during the loop. But just to be sure this is the case:</source>
          <target state="translated">これは明らかに,ソース配列を直接操作していないことを示しています-そうでなければ,ループは永遠に続きます.しかし、これがそうであることを確認するために、次のようにします。</target>
        </trans-unit>
        <trans-unit id="bd5628afe1d31ff01bbe9de9e91da9996b858397" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;foreach&lt;/code&gt; will no longer use the IAP &lt;strong&gt;at all&lt;/strong&gt;. The &lt;code&gt;foreach&lt;/code&gt; loop will be absolutely no effect on the results of &lt;code&gt;current()&lt;/code&gt; etc. and its own behavior will never be influenced by functions like  &lt;code&gt;reset()&lt;/code&gt; etc.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はIAP &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をまったく&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用しなくなります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループは結果に全く影響しないであろう&lt;/font&gt;&lt;/font&gt; &lt;code&gt;current()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のような関数の影響を受けすることはありませんなどと、自身の行動 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;など&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f91d4073e1806ac4e46d9be9407b7439ade530c5" translate="yes" xml:space="preserve">
          <source>This outputs:</source>
          <target state="translated">これを出力します。</target>
        </trans-unit>
        <trans-unit id="3d273d739b2b7205fdf68170c768084c1fcdfbc4" translate="yes" xml:space="preserve">
          <source>This reflects the by-handle semantics of objects (i.e. they behave reference-like even in by-value contexts).</source>
          <target state="translated">これはオブジェクトのバイハンドルセマンティクスを反映しています(つまり、値によるコンテキストでも参照のような振る舞いをします)。</target>
        </trans-unit>
        <trans-unit id="c95f478c775abdcfe2b0089734af8e18efb1ae85" translate="yes" xml:space="preserve">
          <source>This, of course, does not apply to by-reference iteration. If you iterate by-reference all modifications will be reflected by the loop. Interestingly, the same is true for by-value iteration of plain objects:</source>
          <target state="translated">もちろん、これは参照による反復には適用されません。参照による反復を行うと、すべての変更がループに反映されます。興味深いことに、プレーンオブジェクトの値による反復処理についても同じことが言えます。</target>
        </trans-unit>
        <trans-unit id="9baca8009051358845df552bcda06556e6c99b61" translate="yes" xml:space="preserve">
          <source>To support two simultaneous loops with only one internal array pointer, &lt;code&gt;foreach&lt;/code&gt; performs the following shenanigans: Before the loop body is executed, &lt;code&gt;foreach&lt;/code&gt; will back up a pointer to the current element and its hash into a per-foreach &lt;code&gt;HashPointer&lt;/code&gt;. After the loop body runs, the IAP will be set back to this element if it still exists. If however the element has been removed, we'll just use wherever the IAP is currently at. This scheme mostly-kinda-sort of works, but there's a lot of weird behavior you can get out of it, some of which I'll demonstrate below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内部配列ポインターが1つだけの2つの同時ループをサポートするために、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は次の不正操作を実行します：ループ本体が実行される前に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在の要素へのポインターとそのハッシュをforeach &lt;/font&gt;&lt;/font&gt; &lt;code&gt;HashPointer&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。ループ本体の実行後、IAPはまだ存在する場合、この要素に設定されます。ただし、要素が削除されている場合は、IAPが現在ある場所でのみ使用します。このスキームは主にちょっとした種類の作品ですが、あなたがそれから得ることができる多くの奇妙な振る舞いがあります。そのうちのいくつかを以下に示します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1c7e385d1086d82869c2eb01e2cb254a41ea968b" translate="yes" xml:space="preserve">
          <source>To update on this answer as it has gained some popularity: This answer no longer applies as of PHP 7. As explained in the &quot;&lt;a href=&quot;https://secure.php.net/manual/en/migration70.incompatible.php&quot;&gt;Backward incompatible changes&lt;/a&gt;&quot;, in PHP 7 foreach works on copy of the array, so any changes on the array itself are not reflected on foreach loop. More details at the link.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;人気が高まったため、この回答を更新するには：この回答はPHP 7以降では適用されません。「&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://secure.php.net/manual/en/migration70.incompatible.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下位互換性のない変更&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明したように、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHP 7ではforeachは配列のコピーで機能するため、配列自体の変更foreachループには反映されません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細はリンク先をご覧ください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dde4e161f740b1bd3e90639d3dbf341a1b517450" translate="yes" xml:space="preserve">
          <source>Trying to account for modifications during iteration is where all our foreach troubles originated, so it serves to consider some examples for this case.</source>
          <target state="translated">イテレーション中の変更を考慮しようとすることは、すべてのforeachのトラブルの発端となっているので、この場合のためにいくつかの例を考えるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="b7169fdc663586782ea538bce150905ae47564ed" translate="yes" xml:space="preserve">
          <source>Well, let's find out what that &quot;unexpected behavior&quot; is (technically, any behavior is unexpected since I no longer know what to expect).</source>
          <target state="translated">さて、その「想定外の行動」とは何かを探ってみましょう(厳密には、何を想定しているのかわからなくなったので、どんな行動も想定外です)。</target>
        </trans-unit>
        <trans-unit id="1ab0b9b999b26475829ef83e1f0b570dd0b5e77b" translate="yes" xml:space="preserve">
          <source>What is going on here? My C-fu is not good enough for me to able to extract a proper conclusion simply by looking at the PHP source code, I would appreciate it if someone could translate it into English for me.</source>
          <target state="translated">何が起こっているのでしょうか?私のC-fuは、PHPのソースコードを見ただけで適切な結論を導き出すことができないので、誰かが英語に翻訳してくれるとありがたいです。</target>
        </trans-unit>
        <trans-unit id="95561907a33364750b2b8e1516364f240bfb03a0" translate="yes" xml:space="preserve">
          <source>When foreach first starts executing, the internal array pointer is automatically reset to the first element of the array.</source>
          <target state="translated">foreachが最初に実行を開始すると、内部配列ポインタは配列の最初の要素に自動的にリセットされます。</target>
        </trans-unit>
        <trans-unit id="7a3890dc8a14c3affcfff7a3e17e38a070766491" translate="yes" xml:space="preserve">
          <source>Which means that array was modified, but since we modified it when the &lt;code&gt;foreach&lt;/code&gt; already was at the last element of the array, it &quot;decided&quot; not to loop anymore, and even though we added new element, we added it &quot;too late&quot; and it was not looped through.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、配列が変更されたことを意味しますが、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が配列の最後の要素にある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ときに変更したため、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループしないことを「決定」し、新しい要素を追加したにもかかわらず、「遅すぎ」て追加しました。ループされませんでした。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="65702a1e70c39355a68fb6833461fd85241d87ae" translate="yes" xml:space="preserve">
          <source>Which means that it accepted the modification and went through it because it was modified &quot;in time&quot;. But if you do this:</source>
          <target state="translated">つまり修正を受け入れて「間に合わせ」で修正されたのでスルーしたということです しかし、これをやってしまうと</target>
        </trans-unit>
        <trans-unit id="1fd1a4f9962695956b5a0b896fb6ce6683a6dc0f" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;foreach&lt;/code&gt; does make use of the IAP, there is an additional complication: There is only one IAP, but one array can be part of multiple &lt;code&gt;foreach&lt;/code&gt; loops:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方で&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; のが&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;唯一のIAPがありますが、1つのアレイは、複数の一部にすることができます：IAPのメイク使用を行い、そこに追加の合併症である&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループ：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="18462cb77b79fe84dcfd1b92f599337e091e34e5" translate="yes" xml:space="preserve">
          <source>You get the same behavior when doing by-ref iteration:</source>
          <target state="translated">参照による反復を行っても同じ動作になります。</target>
        </trans-unit>
        <trans-unit id="e6a2c66c5caf519fd3145fb125a072e560e5ed25" translate="yes" xml:space="preserve">
          <source>You will get this output:</source>
          <target state="translated">このような出力が得られます。</target>
        </trans-unit>
        <trans-unit id="3fc54bd7f5ebfc024ec5a1d4f9148e3802ccdaea" translate="yes" xml:space="preserve">
          <source>You will get:</source>
          <target state="translated">得ることができます。</target>
        </trans-unit>
        <trans-unit id="9e5ce9453caf5a9d5d4ebea4a03dcac1ad968aa6" translate="yes" xml:space="preserve">
          <source>a) &lt;code&gt;foreach&lt;/code&gt; works on the &lt;strong&gt;prospected copy&lt;/strong&gt; of the original array.
    It means &lt;code&gt;foreach()&lt;/code&gt; will have SHARED data storage until or unless a &lt;code&gt;prospected copy&lt;/code&gt; is
    not created &lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;foreach Notes/User comments&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;a）は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上で動作する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見込みコピー&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;元の配列の。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;prospected copy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が各&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/control-structures.foreach.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Notes / Userコメントに対して&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない限り、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はSHAREDデータストレージを保持し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b6d778baf7de3191914dd29582064f66af60c2ed" translate="yes" xml:space="preserve">
          <source>array pointer is advanced by one (so on the next iteration, you'll be looking at the next element).</source>
          <target state="translated">配列ポインタは1つ進められます (つまり、次の反復では次の要素を見ることになります)。</target>
        </trans-unit>
        <trans-unit id="31d1af7d4fa62aceb0ae76a9d0de0910cca5e3b6" translate="yes" xml:space="preserve">
          <source>b) What triggers a &lt;strong&gt;prospected copy&lt;/strong&gt;?
    A prospected copy is created based on the policy of &lt;code&gt;copy-on-write&lt;/code&gt;, that is, whenever
    an array passed to &lt;code&gt;foreach()&lt;/code&gt; is changed, a clone of the original array is created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b）&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;予想されるコピーを&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;トリガーするものは何&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;予想されるコピーは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;copy-on-write&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ポリシーに基づいて作成され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。つまり、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;渡された配列&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が変更さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れるたび&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に、元の配列のクローンが作成されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8e5bef131b548d431cca88634055bf7723f0fe7b" translate="yes" xml:space="preserve">
          <source>c) The original array and &lt;code&gt;foreach()&lt;/code&gt; iterator will have &lt;code&gt;DISTINCT SENTINEL VARIABLES&lt;/code&gt;, that is, one for the original array and other for &lt;code&gt;foreach&lt;/code&gt;; see the test code below. &lt;a href=&quot;http://php.net/manual/en/book.spl.php&quot;&gt;SPL&lt;/a&gt; , &lt;a href=&quot;http://www.php.net/manual/en/spl.iterators.php&quot;&gt;Iterators&lt;/a&gt;, and &lt;a href=&quot;http://www.php.net/manual/en/class.arrayiterator.php&quot;&gt;Array Iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;c）元の配列と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;イテレータには&lt;/font&gt;&lt;/font&gt; &lt;code&gt;DISTINCT SENTINEL VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、1つは元の配列用で、もう1つは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;foreach&lt;/code&gt; 用&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のテストコードを参照してください。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://php.net/manual/en/book.spl.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SPL&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/spl.iterators.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;イテレーター&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、および&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.php.net/manual/en/class.arrayiterator.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;配列イテレーター&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
