<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/1005073">
    <body>
      <group id="1005073">
        <trans-unit id="56ec0b1a7fd14df4b96fb67153c52ba1add9abdb" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;ll&lt;/code&gt;&quot; stands for &quot;literal list&quot;.</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;ll&lt;/code&gt; &amp;rdquo;代表&amp;ldquo;文字列表&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2cda416852be201e905e8bdba5fd3fbb00ce251f" translate="yes" xml:space="preserve">
          <source>(Should be a comment, but too long, so new reply).  As others have mentioned, the &lt;code&gt;Arrays.asList&lt;/code&gt; method is fixed size, but that's not the only issue with it.  It also doesn't handle inheritance very well.  For instance, suppose you have the following:</source>
          <target state="translated">（应该是评论，但时间太长，因此需要重新回复）。 正如其他人所提到的， &lt;code&gt;Arrays.asList&lt;/code&gt; 方法是固定大小的，但这不是唯一的问题。 它也不能很好地处理继承。 例如，假设您具有以下条件：</target>
        </trans-unit>
        <trans-unit id="64eb86db4b22824230f5e6f0e811018032d4b628" translate="yes" xml:space="preserve">
          <source>(You probably don't.)</source>
          <target state="translated">(你可能不知道)</target>
        </trans-unit>
        <trans-unit id="6cab0ddd87f0d3c319929df63d5236ca0dd5da4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List.of&lt;/code&gt; is already short enough and reads well.</source>
          <target state="translated">&lt;code&gt;List.of&lt;/code&gt; 已经足够短了，而且读起来也不错。</target>
        </trans-unit>
        <trans-unit id="1a7fbc08e693d7e9bb96a9ac8613bd810dcc087e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Collections&lt;/em&gt; is from &lt;em&gt;java.util&lt;/em&gt; package.</source>
          <target state="translated">&lt;em&gt;集合&lt;/em&gt;来自&lt;em&gt;java.util&lt;/em&gt;包。</target>
        </trans-unit>
        <trans-unit id="0efc8bd899f2cc0b12dd362533fd170ec7b6e217" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;interestingly no one-liner with the other overloaded&lt;/em&gt;&lt;code&gt;Stream::collect&lt;/code&gt;&lt;em&gt;method is listed&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;有趣的是，没有&lt;/em&gt; &lt;em&gt;列出&lt;/em&gt; &lt;em&gt;其他重载的&lt;/em&gt; &lt;code&gt;Stream::collect&lt;/code&gt; &lt;em&gt;方法&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9cedf480140b7fd99a88233a9cb257f263de29d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Alternatives&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Alternatives&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb33563a72610ed34b6b91ac165e4604be35ec62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; I am a committer for Eclipse Collections.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;我是Eclipse Collections的提交者。</target>
        </trans-unit>
        <trans-unit id="64ed263eedc1081c0f11cb69072bc2c98263ea96" translate="yes" xml:space="preserve">
          <source>A similar approach would apply to &lt;code&gt;Map&lt;/code&gt; as well -</source>
          <target state="translated">类似的方法也适用于 &lt;code&gt;Map&lt;/code&gt; -</target>
        </trans-unit>
        <trans-unit id="71a8126708466d7f2a248bf5e2f2d583ae8c3781" translate="yes" xml:space="preserve">
          <source>About the most compact way to do this is:</source>
          <target state="translated">大约最紧凑的方法是。</target>
        </trans-unit>
        <trans-unit id="bd4d12d2120ea16122816d5d4aa240d11947d5ce" translate="yes" xml:space="preserve">
          <source>Actually, it's possible to do it in one line:</source>
          <target state="translated">其实,其实是可以做到一气呵成的。</target>
        </trans-unit>
        <trans-unit id="c0df0fe59677cc90036d4e5e0e021923691bff22" translate="yes" xml:space="preserve">
          <source>Actually, probably the &quot;best&quot; way to initialize the &lt;code&gt;ArrayList&lt;/code&gt; is the method you wrote, as it does not need to create a new &lt;code&gt;List&lt;/code&gt; in any way:</source>
          <target state="translated">实际上，初始化 &lt;code&gt;ArrayList&lt;/code&gt; 的&amp;ldquo;最佳&amp;rdquo;方法可能是您编写的方法，因为它不需要以任何方式创建新的 &lt;code&gt;List&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="64e340ed5a78167a541af91ef02198569768144e" translate="yes" xml:space="preserve">
          <source>Also according to javadoc you should be able to do this:</source>
          <target state="translated">另外根据javadoc的说法,你应该可以这样做。</target>
        </trans-unit>
        <trans-unit id="2453317b85568650b062b4c5eb5195a81655105e" translate="yes" xml:space="preserve">
          <source>Alternatively you can do</source>
          <target state="translated">另外,你也可以做</target>
        </trans-unit>
        <trans-unit id="a61f572fa91f377dcc72c5161a3a76d6e9348668" translate="yes" xml:space="preserve">
          <source>Although, that might make you complain of 'performance'.</source>
          <target state="translated">虽然,这可能会让你抱怨 &quot;业绩&quot;。</target>
        </trans-unit>
        <trans-unit id="71d41e823be64a91ab03308379fcbea28a969e64" translate="yes" xml:space="preserve">
          <source>Another example would be always declaring variable an &lt;code&gt;InputStream&lt;/code&gt; even though it is usually a &lt;code&gt;FileInputStream&lt;/code&gt; or a &lt;code&gt;BufferedInputStream&lt;/code&gt;, because one day soon you or somebody else will want to use some other kind of &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">另一个示例将始终将变量声明为 &lt;code&gt;InputStream&lt;/code&gt; ,即使它通常是 &lt;code&gt;FileInputStream&lt;/code&gt; 或 &lt;code&gt;BufferedInputStream&lt;/code&gt; ，因为有一天您或其他人将想要使用其他类型的 &lt;code&gt;InputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc9191520f87e909f6b51a0bb781b4bb3b6bc352" translate="yes" xml:space="preserve">
          <source>As was pointed out, you'd need to do a double brace initialization:</source>
          <target state="translated">如前所述,你需要做一个双支架的初始化。</target>
        </trans-unit>
        <trans-unit id="2a3057ce4cb7bb4fef9fb605694c3cb7dde8c225" translate="yes" xml:space="preserve">
          <source>But I'm not able to get it to compile with JDK 1.6.</source>
          <target state="translated">但我无法让它与JDK 1.6一起编译。</target>
        </trans-unit>
        <trans-unit id="71bacba4e63720fc812489bf0cd92832ecf75d06" translate="yes" xml:space="preserve">
          <source>But again, it's better to just use the &lt;code&gt;Stream&lt;/code&gt; directly instead of collecting it to a &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">但是同样，最好直接使用 &lt;code&gt;Stream&lt;/code&gt; 而不是将其收集到 &lt;code&gt;List&lt;/code&gt; 中 。</target>
        </trans-unit>
        <trans-unit id="e4bb8f6a4e650c58576b360c92fc7b28cb59ef5c" translate="yes" xml:space="preserve">
          <source>But it's not much better than your first refactoring.</source>
          <target state="translated">但是,这比你的第一次重构好不了多少。</target>
        </trans-unit>
        <trans-unit id="c7e4c7ddb42fb9d6c7a416f732233873f56dc3c6" translate="yes" xml:space="preserve">
          <source>But preferably, just use the &lt;code&gt;Stream&lt;/code&gt; without collecting it to a &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">但最好只是使用 &lt;code&gt;Stream&lt;/code&gt; 而不将其收集到 &lt;code&gt;List&lt;/code&gt; 中 。</target>
        </trans-unit>
        <trans-unit id="96f66557ee99a2e4139b47e10a44a33bcf52697b" translate="yes" xml:space="preserve">
          <source>But since you complained of wanting an ArrayList, you should firstly know that ArrayList is a subclass of List and you could simply add this line:</source>
          <target state="translated">但既然你抱怨要一个ArrayList,首先你应该知道ArrayList是List的一个子类,你可以简单地加上这一行。</target>
        </trans-unit>
        <trans-unit id="c83eb5f20e65636eee11043b7da59db10c95c68b" translate="yes" xml:space="preserve">
          <source>But this may force you into adding an annotation &lt;code&gt;@SuppressWarnings(&quot;serial&quot;)&lt;/code&gt; or generate a serial UUID which is annoying. Also most code formatters will unwrap that into multiple statements/lines.</source>
          <target state="translated">但这可能会迫使您添加注释 &lt;code&gt;@SuppressWarnings(&quot;serial&quot;)&lt;/code&gt; 或生成令人讨厌的串行UUID。 同样，大多数代码格式化程序会将其展开为多个语句/行。</target>
        </trans-unit>
        <trans-unit id="475f72467e5c66317bb6de486b4bd97e0035a5da" translate="yes" xml:space="preserve">
          <source>But you can call &lt;code&gt;List.set&lt;/code&gt;, so it's still &lt;em&gt;mutable&lt;/em&gt;.</source>
          <target state="translated">但是您可以调用 &lt;code&gt;List.set&lt;/code&gt; ，所以它仍然是&lt;em&gt;可变的&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="c161343d24997ae14063155d4fc6541162e58207" translate="yes" xml:space="preserve">
          <source>Code Snippet:</source>
          <target state="translated">代码片段。</target>
        </trans-unit>
        <trans-unit id="a3bda458f7ad4885dc3918062aaa41e00e1775c4" translate="yes" xml:space="preserve">
          <source>Collection literals didn't make it into Java 8, but it is possible to use the Stream API to initialize a list in one rather long line:</source>
          <target state="translated">集合字库没有进入Java 8,但可以使用Stream API来初始化一个相当长的列表。</target>
        </trans-unit>
        <trans-unit id="fb30e19eb1dba1e4fc4a9e0d117a6dbc5fed76ef" translate="yes" xml:space="preserve">
          <source>Declaration： I'm the developer of AbacusUtil.</source>
          <target state="translated">声明:我是AbacusUtil的开发者。</target>
        </trans-unit>
        <trans-unit id="10e6fdf16b35c2923b57beaac15410a527e66ddd" translate="yes" xml:space="preserve">
          <source>Enum's have a static &lt;code&gt;values&lt;/code&gt; method that returns an array containing all of the values of the enum in the order they are declared, e.g.:</source>
          <target state="translated">枚举有一个静态 &lt;code&gt;values&lt;/code&gt; 方法，该方法按声明顺序返回包含枚举的所有值的数组，例如：</target>
        </trans-unit>
        <trans-unit id="a2c8b175972a72f732becd21cd60482bad9e52ac" translate="yes" xml:space="preserve">
          <source>For example in IntelliJ IDEA you press &lt;code&gt;Alt+Enter&lt;/code&gt; and select &lt;code&gt;Static import method...&lt;/code&gt;.</source>
          <target state="translated">例如，在IntelliJ IDEA中，按 &lt;code&gt;Alt+Enter&lt;/code&gt; 并选择&amp;ldquo; &lt;code&gt;Static import method...&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a6c109134fd0f897e3e03fca15b77fe2cfbc309" translate="yes" xml:space="preserve">
          <source>For example, if you're passing an &lt;code&gt;ArrayList&lt;/code&gt; to a &lt;code&gt;void method(...)&lt;/code&gt;:</source>
          <target state="translated">例如，如果要将 &lt;code&gt;ArrayList&lt;/code&gt; 传递给 &lt;code&gt;void method(...)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ee4b1417c88ae81bc6b74af0201e1bb995bcaed7" translate="yes" xml:space="preserve">
          <source>For greater flexibility, it can be generic:</source>
          <target state="translated">为了更加灵活,可以采用通用的方式。</target>
        </trans-unit>
        <trans-unit id="593ba839ec6f98d8c50f77ccae2a7c45739ee49a" translate="yes" xml:space="preserve">
          <source>For me Arrays.asList() is the best and convenient one. I always like to initialize that way.
If you are a beginner into Java Collections then I would like you to refer &lt;a href=&quot;http://www.gitarani.com/classified.htm?classifiedId=3011&quot;&gt;ArrayList initialization&lt;/a&gt;</source>
          <target state="translated">对我来说，Arrays.asList（）是最好，最方便的一种。 我一直喜欢用这种方式初始化。 如果您是Java Collections的初学者，那么我希望您参考&lt;a href=&quot;http://www.gitarani.com/classified.htm?classifiedId=3011&quot;&gt;ArrayList初始化&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbbd62438703210ba4113cf77bfd04ffb3ec1aa2" translate="yes" xml:space="preserve">
          <source>Here is another way:</source>
          <target state="translated">这里是另一种方式。</target>
        </trans-unit>
        <trans-unit id="3dbc3e49f97a0f26c2d5c0f614e919d574affa59" translate="yes" xml:space="preserve">
          <source>Here is code by &lt;a href=&quot;https://github.com/landawn/AbacusUtil&quot;&gt;AbacusUtil&lt;/a&gt;</source>
          <target state="translated">这是&lt;a href=&quot;https://github.com/landawn/AbacusUtil&quot;&gt;AbacusUtil的&lt;/a&gt;代码</target>
        </trans-unit>
        <trans-unit id="27adac0249320a1409e9f3cae67b43df453e8a85" translate="yes" xml:space="preserve">
          <source>However, I'm not too fond of that method because what you end up with is a subclass of &lt;code&gt;ArrayList&lt;/code&gt; which has an instance initializer, and that class is created just to create one object -- that just seems like a little bit overkill to me.</source>
          <target state="translated">但是，我不太喜欢这种方法，因为最终得到的是 &lt;code&gt;ArrayList&lt;/code&gt; 的子类，该子类具有实例初始化程序，并且创建该类只是为了创建一个对象-对我来说似乎有点过头了。</target>
        </trans-unit>
        <trans-unit id="9e0c3c23d4e6276e2dd03fe8f909eb61cd1da80d" translate="yes" xml:space="preserve">
          <source>However, i don't recommend shortening the &lt;code&gt;List.of&lt;/code&gt; method to &lt;code&gt;of&lt;/code&gt;, because that becomes confusing.</source>
          <target state="translated">但是，我不建议将 &lt;code&gt;List.of&lt;/code&gt; 方法缩短为 &lt;code&gt;of&lt;/code&gt; ，因为这会造成混淆。</target>
        </trans-unit>
        <trans-unit id="47920951b896dd080c05a99fef9592f7f1b73bde" translate="yes" xml:space="preserve">
          <source>I wanted to create a list of options for testing purposes. At first, I did this:</source>
          <target state="translated">我想建立一个选项列表,以备测试之用。起初,我是这样做的。</target>
        </trans-unit>
        <trans-unit id="3b12625ffc0e01524f8f535c14d770759bd8d84e" translate="yes" xml:space="preserve">
          <source>If you &lt;em&gt;really&lt;/em&gt; specifically need a &lt;code&gt;java.util.ArrayList&lt;/code&gt;</source>
          <target state="translated">如果您&lt;em&gt;确实确实&lt;/em&gt;需要 &lt;code&gt;java.util.ArrayList&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07cad2b7475e54f475f594e2d238b2d673befb81" translate="yes" xml:space="preserve">
          <source>If you need a list of several objects:</source>
          <target state="translated">如果你需要多个对象的列表。</target>
        </trans-unit>
        <trans-unit id="bcbe10baa513f81e95867a4622adcb43af46f0b4" translate="yes" xml:space="preserve">
          <source>If you need a simple list of size 1:</source>
          <target state="translated">如果你需要一个简单的尺寸清单,1。</target>
        </trans-unit>
        <trans-unit id="e8f8c3ee562d4440f7a6ca0a070f15f6c7db4e51" translate="yes" xml:space="preserve">
          <source>If you need to ensure that your &lt;code&gt;List&lt;/code&gt; is an &lt;code&gt;ArrayList&lt;/code&gt;:</source>
          <target state="translated">如果需要确保您的 &lt;code&gt;List&lt;/code&gt; 是 &lt;code&gt;ArrayList&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5ad480b32191c755b5c66aaf6ba154c561c8d58e" translate="yes" xml:space="preserve">
          <source>If you want to &lt;em&gt;both&lt;/em&gt; prepopulate an &lt;code&gt;ArrayList&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; add to it afterwards (why?), use</source>
          <target state="translated">如果您&lt;em&gt;既&lt;/em&gt;要预填充一个 &lt;code&gt;ArrayList&lt;/code&gt; &lt;em&gt;，&lt;/em&gt;然后又添加到它（为什么？），请使用</target>
        </trans-unit>
        <trans-unit id="7787224f15721dde6a49b8dc5ce3877974d6779c" translate="yes" xml:space="preserve">
          <source>If you'd need to have a list of &lt;strong&gt;one item&lt;/strong&gt;!</source>
          <target state="translated">如果您需要列出&lt;strong&gt;一项&lt;/strong&gt;的清单！</target>
        </trans-unit>
        <trans-unit id="70af22099196223b8485c95684bbf8824a9afa2b" translate="yes" xml:space="preserve">
          <source>Immutability</source>
          <target state="translated">Immutability</target>
        </trans-unit>
        <trans-unit id="cdcf755340de2249810aa42b0048040f7de39957" translate="yes" xml:space="preserve">
          <source>In &lt;strong&gt;Java 9&lt;/strong&gt; or later, after &lt;code&gt;List.of()&lt;/code&gt; was added:</source>
          <target state="translated">在&lt;strong&gt;Java 9&lt;/strong&gt;或更高版本中，添加 &lt;code&gt;List.of()&lt;/code&gt; 之后：</target>
        </trans-unit>
        <trans-unit id="83989159cc62de9f84851c1c218edaa1ceab59af" translate="yes" xml:space="preserve">
          <source>In Guava there are also other useful static constructors. You can read about them &lt;a href=&quot;https://github.com/google/guava/wiki/CollectionUtilitiesExplained&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">在Guava中，还有其他有用的静态构造函数。 您可以&lt;a href=&quot;https://github.com/google/guava/wiki/CollectionUtilitiesExplained&quot;&gt;在这里&lt;/a&gt;阅读有关它们的信息 。</target>
        </trans-unit>
        <trans-unit id="a5acdbb1df46463d18d6ccf100acb6dd8e103222" translate="yes" xml:space="preserve">
          <source>In Java 9 we can easily initialize an &lt;code&gt;ArrayList&lt;/code&gt; in a single line:</source>
          <target state="translated">在Java 9中，我们可以轻松地在一行中初始化 &lt;code&gt;ArrayList&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="15ce2f8fbef77036544f95ac7d0f29baa8419bd0" translate="yes" xml:space="preserve">
          <source>In Java, you can't do</source>
          <target state="translated">在Java中,你不能做</target>
        </trans-unit>
        <trans-unit id="2a2ace2fba3250601746f1bd5949233bca714675" translate="yes" xml:space="preserve">
          <source>In case you don't care of the minor performance differences then you can also copy an array to an ArrayList very simply:</source>
          <target state="translated">如果你不关心这些小的性能差异,那么你也可以非常简单地将一个数组复制到一个ArrayList。</target>
        </trans-unit>
        <trans-unit id="cc75a5e1657ed58347995f5dc2e097429ed2cdef" translate="yes" xml:space="preserve">
          <source>In that case I guess you wouldn't need your ArrayList.</source>
          <target state="translated">这样的话,我想你就不需要你的ArrayList了。</target>
        </trans-unit>
        <trans-unit id="eb41f0ed2bee961ea0f4d0513beb5c55cd57cd5d" translate="yes" xml:space="preserve">
          <source>In that case it doesn't make sense to me, why, since your list is predefined it wasn't defined as an array (since the size is known at time of initialisation). And if that's an option for you:</source>
          <target state="translated">在这种情况下,我觉得没有意义,为什么你的列表是预先定义的,它没有被定义为数组(因为大小在初始化时已经知道了)。如果这对你来说是一个选项的话。</target>
        </trans-unit>
        <trans-unit id="1578bf43b3be3bb922f301d83eb33195f580bee1" translate="yes" xml:space="preserve">
          <source>Initialization of an ArrayList in one line</source>
          <target state="translated">在一行中初始化一个ArrayList</target>
        </trans-unit>
        <trans-unit id="af6f049079d351361113682d3285bfe7c586a4e0" translate="yes" xml:space="preserve">
          <source>Is there a better way to do this?</source>
          <target state="translated">有没有更好的方法?</target>
        </trans-unit>
        <trans-unit id="086a4fe3047b3d5bc4c4223b684e6694ce62688e" translate="yes" xml:space="preserve">
          <source>It would be simpler if you were to just declare it as a &lt;code&gt;List&lt;/code&gt; - does it have to be an ArrayList?</source>
          <target state="translated">如果仅将其声明为 &lt;code&gt;List&lt;/code&gt; ，则会更简单-它必须是ArrayList吗？</target>
        </trans-unit>
        <trans-unit id="252f160a8676ebc15acf2bfb2585dd985b71a7c1" translate="yes" xml:space="preserve">
          <source>JEP 186 discussion on lambda-dev, January-March 2014</source>
          <target state="translated">JEP186关于lambda-dev的讨论,2014年1月至3月</target>
        </trans-unit>
        <trans-unit id="aaf28d5ab16980ca3f6dc1aef578a8121f9d871a" translate="yes" xml:space="preserve">
          <source>Java 8 or earlier:</source>
          <target state="translated">Java 8或更早的版本。</target>
        </trans-unit>
        <trans-unit id="a674bb106f3a757c49582f18225d695a3138c1f5" translate="yes" xml:space="preserve">
          <source>Java 9 has the following method to create an &lt;em&gt;immutable&lt;/em&gt; list:</source>
          <target state="translated">Java 9具有以下创建&lt;em&gt;不可变&lt;/em&gt;列表的方法：</target>
        </trans-unit>
        <trans-unit id="c01fe57ca87e0fc1639be3ac0070eb44a12a43b4" translate="yes" xml:space="preserve">
          <source>Just create a function that can have as many elements as you want and call it to add them in one line.</source>
          <target state="translated">只要创建一个函数,可以有多少元素就有多少元素,然后在一行中调用它来添加。</target>
        </trans-unit>
        <trans-unit id="59d0c48ff21ec42a86e69e9ed68621ba2719dfec" translate="yes" xml:space="preserve">
          <source>Language changes have been considered several times, and rejected:</source>
          <target state="translated">曾多次考虑过语言的改变,也曾被拒绝。</target>
        </trans-unit>
        <trans-unit id="732900a880cd3d5255400f3f49401c5752087b22" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://stackoverflow.com/a/1005089/1031312&quot;&gt;Tom said&lt;/a&gt;:</source>
          <target state="translated">就像&lt;a href=&quot;https://stackoverflow.com/a/1005089/1031312&quot;&gt;汤姆说的&lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="d30a295814705ec0993426e514645a21b33b2df0" translate="yes" xml:space="preserve">
          <source>Okay, but in future you need a bit more than just the place name, you need a country code too. Assuming this is still a predefined list which will never change during run-time, then it's fitting to use an &lt;code&gt;enum&lt;/code&gt; set, which would require re-compilation if the list needed to be changed in the future.</source>
          <target state="translated">好的，但是将来您不仅需要更多地名，还需要一个国家代码。 假设这仍然是一个预定义的列表，在运行时不会更改，那么使用 &lt;code&gt;enum&lt;/code&gt; 集是合适的，如果将来需要更改列表，则需要重新编译。</target>
        </trans-unit>
        <trans-unit id="fed49588cb60a2fdf075c5c1cb61ba72de97270c" translate="yes" xml:space="preserve">
          <source>Or if you have only one element:</source>
          <target state="translated">或者说,如果你只有一个元素。</target>
        </trans-unit>
        <trans-unit id="760f74c178f697a91e2a984891840dc78f9bfda1" translate="yes" xml:space="preserve">
          <source>Or you can go from a &lt;code&gt;Stream&lt;/code&gt; to a &lt;code&gt;List&lt;/code&gt;:</source>
          <target state="translated">或者，您可以从 &lt;code&gt;Stream&lt;/code&gt; 转到 &lt;code&gt;List&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cba444a1fbeb711843d2fa26102445c184efa105" translate="yes" xml:space="preserve">
          <source>Otherwise you're limiting your code to that specific type, and it'll be harder to change when you want to.</source>
          <target state="translated">否则你的代码被限制在那个特定的类型,想改的时候就更难了。</target>
        </trans-unit>
        <trans-unit id="9ebc8b13f98ab9e588d6c10af86e037e6c835afd" translate="yes" xml:space="preserve">
          <source>P.S. &lt;a href=&quot;https://stackoverflow.com/a/7238739/1031312&quot;&gt;Randyaa demonstrated&lt;/a&gt; another nice way using the static utility method &lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Collections.html&quot;&gt;Collections.addAll&lt;/a&gt;.</source>
          <target state="translated">PS &lt;a href=&quot;https://stackoverflow.com/a/7238739/1031312&quot;&gt;Randyaa&lt;/a&gt;使用静态实用程序方法&lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Collections.html&quot;&gt;Collections.addAll&lt;/a&gt; 演示了另一种不错的方法。</target>
        </trans-unit>
        <trans-unit id="afeb39640bcb26b5d6cdf92410bbd752a3722fbb" translate="yes" xml:space="preserve">
          <source>Program to interfaces, not to implementations</source>
          <target state="translated">程序到接口,不到实现</target>
        </trans-unit>
        <trans-unit id="6aa5b97f3bb9d230f115636d8e55fd98c48c4b6b" translate="yes" xml:space="preserve">
          <source>Project Coin Proposal, 29 March 2009</source>
          <target state="translated">2009年3月29日的钱币项目提案</target>
        </trans-unit>
        <trans-unit id="fa7eef680f9460477c783d26d22b69ecaf2100b5" translate="yes" xml:space="preserve">
          <source>Project Coin Proposal, 30 March 2009</source>
          <target state="translated">2009年3月30日的钱币项目提案</target>
        </trans-unit>
        <trans-unit id="45855ce383212ce7b311e9d7c4680ab6c2660d0e" translate="yes" xml:space="preserve">
          <source>Related: &lt;a href=&quot;https://stackoverflow.com/questions/41918934/what-is-the-point-of-overloaded-convenience-factory-methods-for-collections-in-j/41918976#41918976&quot;&gt;What is the point of overloaded Convenience Factory Methods for Collections in Java 9&lt;/a&gt;</source>
          <target state="translated">相关： &lt;a href=&quot;https://stackoverflow.com/questions/41918934/what-is-the-point-of-overloaded-convenience-factory-methods-for-collections-in-j/41918976#41918976&quot;&gt;Java 9中用于集合的重载便利工厂方法的重点是什么？&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="361fdda7d27928c81534804592bb2030c180faf2" translate="yes" xml:space="preserve">
          <source>See this post for more details -&amp;gt; &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/46579074/what-is-the-difference-between-list-of-and-arrays-aslist&quot;&gt;What is the difference between List.of and Arrays.asList?&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">请参阅此帖子以获取更多详细信息-&amp;gt; &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/questions/46579074/what-is-the-difference-between-list-of-and-arrays-aslist&quot;&gt;List.of和Arrays.asList有什么区别？&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8968c89994be5c4f4228796381b8363120a5822a" translate="yes" xml:space="preserve">
          <source>Similar methods are available for &lt;code&gt;Set&lt;/code&gt; and &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; 和 &lt;code&gt;Map&lt;/code&gt; 也可以使用类似的方法。</target>
        </trans-unit>
        <trans-unit id="6199331505bbfc0819fc04f3ade084ec72d352cd" translate="yes" xml:space="preserve">
          <source>Simply use below code as follows.</source>
          <target state="translated">只需使用以下代码即可。</target>
        </trans-unit>
        <trans-unit id="f03af1f33ef25549b34440d101a4394cc8c55cf2" translate="yes" xml:space="preserve">
          <source>Space Efficiency</source>
          <target state="translated">空间效率</target>
        </trans-unit>
        <trans-unit id="4e002298c697d7cc81d5426eca7c1bb4ff43d176" translate="yes" xml:space="preserve">
          <source>The above results in a compiler error, because &lt;code&gt;List&amp;lt;B&amp;gt;&lt;/code&gt;(which is what is returned by Arrays.asList) is not a subclass of &lt;code&gt;List&amp;lt;A&amp;gt;&lt;/code&gt;, even though you can add Objects of type B to a &lt;code&gt;List&amp;lt;A&amp;gt;&lt;/code&gt; object.  To get around this, you need to do something like:</source>
          <target state="translated">上面的结果导致编译器错误，因为 &lt;code&gt;List&amp;lt;B&amp;gt;&lt;/code&gt; （这是Arrays.asList返回的）不是 &lt;code&gt;List&amp;lt;A&amp;gt;&lt;/code&gt; 的子类，即使您可以将B类型的对象添加到 &lt;code&gt;List&amp;lt;A&amp;gt;&lt;/code&gt; 对象中。 要解决此问题，您需要执行以下操作：</target>
        </trans-unit>
        <trans-unit id="7e5c9c2a63a765a7903f244db15951457a781e08" translate="yes" xml:space="preserve">
          <source>The best way to do it:</source>
          <target state="translated">最好的方法是。</target>
        </trans-unit>
        <trans-unit id="6d19d1caaf800a838d88e5c756e8e6b8c128a070" translate="yes" xml:space="preserve">
          <source>The catch is that there is quite a bit of typing required to refer to that &lt;code&gt;list&lt;/code&gt; instance.</source>
          <target state="translated">问题是引用该 &lt;code&gt;list&lt;/code&gt; 实例需要大量输入。</target>
        </trans-unit>
        <trans-unit id="fc3a1aa98b9251d777b950a3d768121c4ab7eb8e" translate="yes" xml:space="preserve">
          <source>The language
  proposals were set aside in preference to a library-based proposal as
  summarized in this &lt;a href=&quot;http://mail.openjdk.java.net/pipermail/lambda-dev/2014-March/011938.html&quot;&gt;message.&lt;/a&gt;</source>
          <target state="translated">语言建议比本&lt;a href=&quot;http://mail.openjdk.java.net/pipermail/lambda-dev/2014-March/011938.html&quot;&gt;消息中&lt;/a&gt;概述的基于图书馆的建议优先放置。</target>
        </trans-unit>
        <trans-unit id="dce1df393ceba33d6fc2d898c0d150ea123edac2" translate="yes" xml:space="preserve">
          <source>The simple answer</source>
          <target state="translated">简单的答案是</target>
        </trans-unit>
        <trans-unit id="a01b20ee2acf8f1aa70d706b468a29bea1502284" translate="yes" xml:space="preserve">
          <source>The static import:</source>
          <target state="translated">的静态导入。</target>
        </trans-unit>
        <trans-unit id="470c4010f58ab69db4f11c88dc6635d662a20059" translate="yes" xml:space="preserve">
          <source>Then, I refactored the code as follows:</source>
          <target state="translated">然后,我对代码进行了如下重构。</target>
        </trans-unit>
        <trans-unit id="6374dfd70d9d4056f72eba8a1923de801d409e62" translate="yes" xml:space="preserve">
          <source>There are alternatives, such as making an anonymous inner class with an instance initializer (also known as an &quot;double brace initialization&quot;):</source>
          <target state="translated">还有其他方法,比如用实例初始化器(也叫 &quot;双括号初始化&quot;)做一个匿名内部类。</target>
        </trans-unit>
        <trans-unit id="585e23cf519065f499c845e9fbfb7516be5060ba" translate="yes" xml:space="preserve">
          <source>There is a &lt;strong&gt;small set&lt;/strong&gt; of use cases for initializing a mutable collection instance with a predefined set of values. It's usually preferable to have those predefined values be in an immutable collection, and then to initialize the mutable collection via a copy constructor.</source>
          <target state="translated">有&lt;strong&gt;很少&lt;/strong&gt;的用例&lt;strong&gt;集&lt;/strong&gt; ，用于初始化具有预定义值集的可变集合实例。 通常最好将这些预定义值放在不可变的集合中，然后通过复制构造函数初始化可变集合。</target>
        </trans-unit>
        <trans-unit id="72984b6b0e0dcd40fd00e8ec67e6198619539098" translate="yes" xml:space="preserve">
          <source>This is probably the best way to go about doing this, esp. if you need an unbounded list or need to use inheritance.</source>
          <target state="translated">这可能是最好的方法,特别是当你需要一个无限制的列表或者需要使用继承的时候。</target>
        </trans-unit>
        <trans-unit id="824af5a6f096e0be677aa31f737c1c782e66bdde" translate="yes" xml:space="preserve">
          <source>This new approach of Java 9 has many advantages over the previous ones:</source>
          <target state="translated">Java 9的这种新方法与以前相比,有很多优点。</target>
        </trans-unit>
        <trans-unit id="21635656cf4c6d24ed677688c001ff01bd5a9840" translate="yes" xml:space="preserve">
          <source>This will give you a &lt;code&gt;List&lt;/code&gt; backed by an array, so it cannot change length.</source>
          <target state="translated">这将为您提供由数组支持的 &lt;code&gt;List&lt;/code&gt; ，因此它不能更改长度。</target>
        </trans-unit>
        <trans-unit id="c116a36f56fc1976c541d1e16c2753149b4b383e" translate="yes" xml:space="preserve">
          <source>This will give you an &lt;em&gt;immutable&lt;/em&gt;&lt;code&gt;List&lt;/code&gt;, so it cannot be changed.</source>
          <target state="translated">这将为您提供一个&lt;em&gt;不变的&lt;/em&gt; &lt;code&gt;List&lt;/code&gt; ，因此无法更改。</target>
        </trans-unit>
        <trans-unit id="d33763f9cd92f1e1f817d76a1a7aa24280def11d" translate="yes" xml:space="preserve">
          <source>This would mean that &lt;code&gt;places&lt;/code&gt; is &lt;strong&gt;immutable&lt;/strong&gt; (trying to change it will cause an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; exception to be thrown).</source>
          <target state="translated">这意味着 &lt;code&gt;places&lt;/code&gt; 是&lt;strong&gt;不可变的&lt;/strong&gt; （尝试更改位置将导致引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 异常）。</target>
        </trans-unit>
        <trans-unit id="a296f5b91c80ba482b78548c800efb77600e735a" translate="yes" xml:space="preserve">
          <source>Thread Safe</source>
          <target state="translated">螺纹安全</target>
        </trans-unit>
        <trans-unit id="4ae85037897f0059dbf869eb55a84fd1f2a36439" translate="yes" xml:space="preserve">
          <source>To make a mutable list that is a concrete &lt;code&gt;ArrayList&lt;/code&gt; you can create an &lt;code&gt;ArrayList&lt;/code&gt; from the immutable list:</source>
          <target state="translated">要创建一个具体的 &lt;code&gt;ArrayList&lt;/code&gt; 可变列表，您可以从不可变列表创建 &lt;code&gt;ArrayList&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="959206a198e8a676ed2920739822c1319714081c" translate="yes" xml:space="preserve">
          <source>To quote &lt;a href=&quot;http://openjdk.java.net/jeps/269&quot;&gt;JEP 269&lt;/a&gt; (emphasis mine):</source>
          <target state="translated">引用&lt;a href=&quot;http://openjdk.java.net/jeps/269&quot;&gt;JEP 269&lt;/a&gt; （重点为我）：</target>
        </trans-unit>
        <trans-unit id="0676ca3b3f32a37556f22bb9bb39ad84434befad" translate="yes" xml:space="preserve">
          <source>Try with this code line:</source>
          <target state="translated">用这行代码试试。</target>
        </trans-unit>
        <trans-unit id="af67c53839f1a7f4a6cd1fda384c6c3f6ab05447" translate="yes" xml:space="preserve">
          <source>Unfortunately it won't help you here, as it will initialize an immutable &lt;code&gt;List&lt;/code&gt; rather than an &lt;code&gt;ArrayList&lt;/code&gt;, and furthermore, it's not available yet, if it ever will be.</source>
          <target state="translated">不幸的是，它对您没有帮助，因为它将初始化一个不可变的 &lt;code&gt;List&lt;/code&gt; 而不是一个 &lt;code&gt;ArrayList&lt;/code&gt; ，而且，如果可以的话，它还不可用。</target>
        </trans-unit>
        <trans-unit id="ab3ec2dd24a912b7ee44dea510cfc728fdc460e4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Stream&lt;/code&gt;s</source>
          <target state="translated">使用 &lt;code&gt;Stream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edf272a4e42d3f24b71da23fd332452881a0211c" translate="yes" xml:space="preserve">
          <source>Usually you should just declare variables by the most general interface that you are going to use (e.g. &lt;code&gt;Iterable&lt;/code&gt;, &lt;code&gt;Collection&lt;/code&gt;, or &lt;code&gt;List&lt;/code&gt;), and initialize them with the specific implementation (e.g. &lt;code&gt;ArrayList&lt;/code&gt;, &lt;code&gt;LinkedList&lt;/code&gt; or &lt;code&gt;Arrays.asList()&lt;/code&gt;).</source>
          <target state="translated">通常，您只应通过将要使用的最通用的接口（例如 &lt;code&gt;Iterable&lt;/code&gt; ， &lt;code&gt;Collection&lt;/code&gt; 或 &lt;code&gt;List&lt;/code&gt; ）声明变量，并使用特定的实现（例如 &lt;code&gt;ArrayList&lt;/code&gt; ， &lt;code&gt;LinkedList&lt;/code&gt; 或 &lt;code&gt;Arrays.asList()&lt;/code&gt; ）对其进行初始化。</target>
        </trans-unit>
        <trans-unit id="48dea6c9e21d80c7705a1b661fc6222e0b19a081" translate="yes" xml:space="preserve">
          <source>What would have been nice was if the &lt;a href=&quot;http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html&quot;&gt;Collection Literals proposal&lt;/a&gt; for &lt;a href=&quot;http://openjdk.java.net/projects/coin&quot;&gt;Project Coin&lt;/a&gt; was accepted (it was slated to be introduced in Java 7, but it's not likely to be part of Java 8 either.):</source>
          <target state="translated">如果接受了针对&lt;a href=&quot;http://openjdk.java.net/projects/coin&quot;&gt;Project Coin&lt;/a&gt;的&lt;a href=&quot;http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html&quot;&gt;Collection Literals提案&lt;/a&gt; （原定于Java 7中引入，但也不太可能成为Java 8的一部分），那将是一个很好的选择：</target>
        </trans-unit>
        <trans-unit id="7057ae39ccc68ef410e38f2dac4f5e725dc5bb1f" translate="yes" xml:space="preserve">
          <source>Which any modern IDE will suggest and automatically do for you.</source>
          <target state="translated">任何现代的IDE都会建议并自动为你做。</target>
        </trans-unit>
        <trans-unit id="3f9aae185d5fd73ac41c81b5a6b942e8ca0caf7b" translate="yes" xml:space="preserve">
          <source>Which is what you want in most cases where you're prepopulating it.</source>
          <target state="translated">这是你想要的,在大多数情况下,你想要的是预装。</target>
        </trans-unit>
        <trans-unit id="10bbe897df15db81fa095f5ca9fda801e7304ec3" translate="yes" xml:space="preserve">
          <source>Which you are most likely not doing.</source>
          <target state="translated">而你很可能没有这样做。</target>
        </trans-unit>
        <trans-unit id="f08b09a56085d82702eefac26e41bf9ad590adfe" translate="yes" xml:space="preserve">
          <source>Why does it have to be a &lt;code&gt;List&lt;/code&gt;?</source>
          <target state="translated">为什么它必须是 &lt;code&gt;List&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="975bacb2afa9f2745543b8fb771f8bcfb44e8960" translate="yes" xml:space="preserve">
          <source>Why not make a simple utility function that does this?</source>
          <target state="translated">为什么不做一个简单的效用函数来做这个呢?</target>
        </trans-unit>
        <trans-unit id="bcdccdb47fef3d92288947087321c671678c5f20" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;/questions/tagged/java-9&quot;&gt;java-9&lt;/a&gt; and above, as suggested in &lt;a href=&quot;http://openjdk.java.net/jeps/269&quot;&gt;JDK Enhancement Proposal - 269&lt;/a&gt;, this could be achieved using &lt;em&gt;collection literals&lt;/em&gt; now with -</source>
          <target state="translated">使用&lt;a href=&quot;/questions/tagged/java-9&quot;&gt;Java-9&lt;/a&gt;及更高版本（如&lt;a href=&quot;http://openjdk.java.net/jeps/269&quot;&gt;JDK增强建议-269中所建议）&lt;/a&gt; ，可以使用现在带有-的&lt;em&gt;集合文字&lt;/em&gt;来实现此目的。</target>
        </trans-unit>
        <trans-unit id="4bedfaecd6bf6c39bb530e65537dde74279d47c4" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Guava&quot;&gt;Guava&lt;/a&gt; you can write:</source>
          <target state="translated">使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Google_Guava&quot;&gt;番石榴，&lt;/a&gt;您可以编写：</target>
        </trans-unit>
        <trans-unit id="be540c5ba930e7ba97b8287c64504f75c6f74941" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections&lt;/a&gt; you can write the following:</source>
          <target state="translated">使用&lt;a href=&quot;https://www.eclipse.org/collections/&quot;&gt;Eclipse Collections，&lt;/a&gt;您可以编写以下内容：</target>
        </trans-unit>
        <trans-unit id="47ce7cd7170c77d356893b4a061231cf7ae35f68" translate="yes" xml:space="preserve">
          <source>With &lt;strong&gt;Java 10&lt;/strong&gt; or later, this can be shortened with the &lt;code&gt;var&lt;/code&gt; keyword.</source>
          <target state="translated">在&lt;strong&gt;Java 10&lt;/strong&gt;或更高版本中，可以使用 &lt;code&gt;var&lt;/code&gt; 关键字将其缩短。</target>
        </trans-unit>
        <trans-unit id="b88d8a340b6a0a895f6cdca934ef3f65f36a774e" translate="yes" xml:space="preserve">
          <source>With Java 8 or later you can use a &lt;code&gt;Stream&lt;/code&gt; which is more flexible:</source>
          <target state="translated">在Java 8或更高版本中，您可以使用更灵活的 &lt;code&gt;Stream&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="21d17c70ca49dd6b99626a7c4b790d8fcd1c8fe3" translate="yes" xml:space="preserve">
          <source>Yes with the help of Arrays you can initialize array list in one line,</source>
          <target state="translated">是的,在Arrays的帮助下,你可以在一行中初始化数组列表。</target>
        </trans-unit>
        <trans-unit id="3026d57b333e2cfccaab5d152ab6c02dde05fe4e" translate="yes" xml:space="preserve">
          <source>You can also be more specific about the types and whether they are Mutable or Immutable.</source>
          <target state="translated">你还可以更具体地说明类型,以及它们是Mutable还是Immutable。</target>
        </trans-unit>
        <trans-unit id="e11fbd5da63912d50f746e5f2408089dea59e087" translate="yes" xml:space="preserve">
          <source>You can also do the same with Sets and Bags:</source>
          <target state="translated">你也可以用套装和袋子来做同样的事情。</target>
        </trans-unit>
        <trans-unit id="d8b2581855b7f671e12499c5bc02ae0d74ebedcf" translate="yes" xml:space="preserve">
          <source>You can concatenate &lt;code&gt;Stream&lt;/code&gt;s:</source>
          <target state="translated">您可以串联 &lt;code&gt;Stream&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="43e37c99695a3f295fd5d6fa8ebddd91e96b273b" translate="yes" xml:space="preserve">
          <source>You can make &lt;code&gt;Arrays.asList&lt;/code&gt; even shorter with a static import:</source>
          <target state="translated">您可以使用静态导入使 &lt;code&gt;Arrays.asList&lt;/code&gt; 变得更短：</target>
        </trans-unit>
        <trans-unit id="7504f2d226217613b4681a79469a16175bc56a6e" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;StickyList&lt;/code&gt; from &lt;a href=&quot;http://www.cactoos.org&quot;&gt;Cactoos&lt;/a&gt;:</source>
          <target state="translated">您可以从&lt;a href=&quot;http://www.cactoos.org&quot;&gt;Cactoos&lt;/a&gt;使用StickyList ：</target>
        </trans-unit>
        <trans-unit id="827fa3838bdc345dc679a9e867cf1226e6b8eac3" translate="yes" xml:space="preserve">
          <source>You can use the below statements:</source>
          <target state="translated">你可以使用下面的语句。</target>
        </trans-unit>
        <trans-unit id="419c9fa7ecd4d939c55bac85e90184727c9e4e11" translate="yes" xml:space="preserve">
          <source>You could create a factory method:</source>
          <target state="translated">你可以创建一个工厂方法。</target>
        </trans-unit>
        <trans-unit id="901ae3945d2c28746ddcaa542c4f1b819cffbf87" translate="yes" xml:space="preserve">
          <source>You said you've declared the list as an &lt;code&gt;ArrayList&lt;/code&gt; in your code, but you should only do that if you're using some member of &lt;code&gt;ArrayList&lt;/code&gt; that's not in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">您说过已在代码中将列表声明为 &lt;code&gt;ArrayList&lt;/code&gt; ，但是仅当使用的不是 &lt;code&gt;List&lt;/code&gt; 的 &lt;code&gt;ArrayList&lt;/code&gt; 成员时，才应该这样做。</target>
        </trans-unit>
        <trans-unit id="2e5f6c722a68207c5d8a2ae16584826fa4c5ab96" translate="yes" xml:space="preserve">
          <source>but then you may want to do a &lt;code&gt;@SuppressWarnings(&quot;unchecked&quot;)&lt;/code&gt;.</source>
          <target state="translated">但是您可能想要执行 &lt;code&gt;@SuppressWarnings(&quot;unchecked&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="8b174becb33fa5312e2a553fe2a5f2950acdfcb3" translate="yes" xml:space="preserve">
          <source>or in Java 8 or earlier:</source>
          <target state="translated">或在Java 8或更早的版本中。</target>
        </trans-unit>
        <trans-unit id="9dd834e2f6cf9110f59154309870f5e06f9a2052" translate="yes" xml:space="preserve">
          <source>or using &lt;code&gt;Stream&lt;/code&gt;:</source>
          <target state="translated">或使用 &lt;code&gt;Stream&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="85dd1bacb3d83f88fed6056f8b7e7690797529cc" translate="yes" xml:space="preserve">
          <source>which is easily adapted to create a mutable list, if required:</source>
          <target state="translated">如果需要的话,可以很容易地调整为创建一个可变的列表。</target>
        </trans-unit>
        <trans-unit id="852f28ab72384f006e65d484501112a5cc3d8ea9" translate="yes" xml:space="preserve">
          <source>which is similar to &lt;a href=&quot;http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html&quot;&gt;Collection Literals proposal&lt;/a&gt; as stated by @coobird. Further clarified in the JEP as well -</source>
          <target state="translated">这类似于@coobird所说的Collection Literals &lt;a href=&quot;http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html&quot;&gt;建议&lt;/a&gt; 。 JEP中也进一步阐明了-</target>
        </trans-unit>
        <trans-unit id="ee71ebda44e2dc671943d14d6333655aa8766836" translate="yes" xml:space="preserve">
          <source>would become:</source>
          <target state="translated">将成为:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
