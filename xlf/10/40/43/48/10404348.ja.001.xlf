<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/10404348">
    <body>
      <group id="10404348">
        <trans-unit id="6b1b12e790c4787d3fcf4a86cbac74f401fd5da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OUTPUT :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;出力：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c72235376d99078e608449c5740fb6f756febb8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table creation and data insertion:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テーブルの作成とデータの挿入：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d95b0a48db8db0c8a3d3af749644083aa0f1f96a" translate="yes" xml:space="preserve">
          <source>Different approach for creating columns string</source>
          <target state="translated">カラム文字列を作成するための異なるアプローチ</target>
        </trans-unit>
        <trans-unit id="22b22d10199fad2e991da6bab06720836dd3c59f" translate="yes" xml:space="preserve">
          <source>Dynamic SQL PIVOT</source>
          <target state="translated">動的SQL PIVOT</target>
        </trans-unit>
        <trans-unit id="2481e5b07397459d668f9b9cecfe643ad32aeeda" translate="yes" xml:space="preserve">
          <source>Dynamic SQL PIVOT:</source>
          <target state="translated">動的SQL PIVOT。</target>
        </trans-unit>
        <trans-unit id="78efeae9b689544e385dbf2d3fc8acf050def373" translate="yes" xml:space="preserve">
          <source>First and foremost I built this solution to solve a problem a couple of coworkers were having with inconstant and large data sets needing to be pivoted quickly.</source>
          <target state="translated">何よりもまず第一に、私がこのソリューションを構築したのは、何人かの同僚が抱えていた問題を解決するためでした。</target>
        </trans-unit>
        <trans-unit id="27bd68248ee31e3316ae82336154b5086b53df37" translate="yes" xml:space="preserve">
          <source>I know this question is older but I was looking thru the answers and thought that I might be able to expand on the &quot;dynamic&quot; portion of the problem and possibly help someone out.</source>
          <target state="translated">この質問が古いことは知っていますが、私は答えを見ていて、私は問題の「動的」な部分を拡大して、おそらく誰かを助けることができるかもしれないと考えました。</target>
        </trans-unit>
        <trans-unit id="29ed3a73befbdfa4b816d9191e7d2d32ae7cd669" translate="yes" xml:space="preserve">
          <source>I've been tasked with coming up with a means of translating the following data:</source>
          <target state="translated">以下のデータを翻訳する手段を思いつくことになった。</target>
        </trans-unit>
        <trans-unit id="f700c06766c7d54a2d8f580241d1f3856706f162" translate="yes" xml:space="preserve">
          <source>Lets start with the code to create the stored procedure. This code should work in all versions of SSMS 2005 and above but I have not tested it in 2005 or 2016 but I can not see why it would not work.</source>
          <target state="translated">ストアドプロシージャを作成するコードから始めましょう。このコードはSSMS 2005以上のすべてのバージョンで動作するはずですが、私は2005年と2016年でテストしていませんが、なぜ動作しないのかがわかりません。</target>
        </trans-unit>
        <trans-unit id="e5b4b1a4b371092503774a307be0665e1e5194ab" translate="yes" xml:space="preserve">
          <source>Next we will get our data ready for the example. I have taken the data example from the accepted answer with the addition of a couple of data elements to use in this proof of concept to show the varied outputs of the aggregate change.</source>
          <target state="translated">次に、例題のためにデータを準備します。私は、この概念実証で使用するデータ要素をいくつか追加して、受け入れられた回答からデータの例を取りましたが、集約された変化の多様な出力を示すために使用します。</target>
        </trans-unit>
        <trans-unit id="0b097a51197a221cf1bf8b3c7b376e45b49aff2b" translate="yes" xml:space="preserve">
          <source>Obligatory reference to&lt;a href=&quot;http://www.sommarskog.se/dynamic_sql.html&quot;&gt; The Curse and Blessings of Dynamic SQL&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;http://www.sommarskog.se/dynamic_sql.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;動的SQLの呪いと祝福&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;へ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;義務的な言及&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ad13de5cd0e8244d1c31b251ad072f22296a42f" translate="yes" xml:space="preserve">
          <source>Pivots with Dynamic Columns in SQL Server 2005</source>
          <target state="translated">SQL Server 2005 での動的カラムを使用したピボット</target>
        </trans-unit>
        <trans-unit id="6f0c566d71b15800d15b47f0c350f2065dc8595b" translate="yes" xml:space="preserve">
          <source>Query to generate the exact results which also replaces NULL with zeros:</source>
          <target state="translated">NULLをゼロに置き換えて正確な結果を生成するクエリです。</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="fd19e6d6cb4b26b0ef86cb95d8b5872a311f4828" translate="yes" xml:space="preserve">
          <source>Results:</source>
          <target state="translated">Results:</target>
        </trans-unit>
        <trans-unit id="1410432e97c12f1104d9a729286bd2ceeab4b227" translate="yes" xml:space="preserve">
          <source>SQL Server - Dynamic PIVOT Table - SQL Injection</source>
          <target state="translated">SQL Server-ダイナミックPIVOTテーブル-SQLインジェクション</target>
        </trans-unit>
        <trans-unit id="f5a4f0886b7755994ab69d208c740bba62adf577" translate="yes" xml:space="preserve">
          <source>SQL Server dynamic PIVOT query</source>
          <target state="translated">SQL Server動的PIVOTクエリ</target>
        </trans-unit>
        <trans-unit id="d2b6f173055a4d05fc8d71ab5a33c9cc1df75b9f" translate="yes" xml:space="preserve">
          <source>The below code provides the results which replaces &lt;strong&gt;NULL&lt;/strong&gt; to &lt;strong&gt;zero&lt;/strong&gt; in the output.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のコードは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、出力で&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NULL&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ゼロ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;置き換える結果を提供&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d29e4912b9cae7ea236d222c2bccf518b67ab69" translate="yes" xml:space="preserve">
          <source>The blank spots can be NULLs or blanks, either is fine, and the categories would need to be dynamic. Another possible caveat to this is that we'll be running the query in a limited capacity, which means temp tables are out. I've tried to research and have landed on &lt;code&gt;PIVOT&lt;/code&gt; but as I've never used that before I really don't understand it, despite my best efforts to figure it out. Can anyone point me in the right direction?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空白のスポットはNULLまたは空白のどちらでもかまいませんが、カテゴリは動的である必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これに対するもう1つの可能性のある警告は、制限された容量でクエリを実行することです。つまり、一時テーブルが停止します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は研究して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;PIVOT&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;着陸しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、理解するために最善の努力をしたにもかかわらず、私は本当にそれを理解する前にそれを使用したことがないので。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誰かが私を正しい方向に向けることができますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c2bf313c5303630f0e153884422b26d30c8890e" translate="yes" xml:space="preserve">
          <source>The following examples show the varied execution statements showing the varied aggregates as a simple example. I did not opt to change the static, pivot, and value columns to keep the example simple. You should be able to just copy and paste the code to start messing with it yourself</source>
          <target state="translated">以下の例では、単純な例として、様々な集約を示す様々な実行文を示しています。例をシンプルに保つために、スタティックカラム、ピボットカラム、および値カラムを変更することを選びませんでした。コードをコピー&amp;ペーストするだけで、自分でいじってみることができるはずです。</target>
        </trans-unit>
        <trans-unit id="59021cf6affd8312d35b72ea852497d633025293" translate="yes" xml:space="preserve">
          <source>There's my solution cleaning up the unnecesary null values</source>
          <target state="translated">不必要なヌル値を一掃する解決策があります</target>
        </trans-unit>
        <trans-unit id="252b9d8b0ea6bbc7274570b525d0168dc7ded7a4" translate="yes" xml:space="preserve">
          <source>This execution returns the following data sets respectively.</source>
          <target state="translated">この実行により、それぞれ以下のデータセットが返されます。</target>
        </trans-unit>
        <trans-unit id="df314795f0787c27d40ac024e393792d36f10943" translate="yes" xml:space="preserve">
          <source>This procedure is going to take in the key variables of a pivot statement to dynamically create pivot statements for varying tables, column names and aggregates. The Static column is used as the group by / identity column for the pivot(this can be stripped out of the code if not necessary but is pretty common in pivot statements and was necessary to solve the original issue), the pivot column is where the end resultant column names will be generated from, and the value column is what the aggregate will be applied to. The Table parameter is the name of the table including the schema (schema.tablename) this portion of the code could use some love because it is not as clean as I would like it to be. It worked for me because my usage was not publicly facing and sql injection was not a concern. The Aggregate parameter will accept any standard sql aggregate 'AVG', 'SUM', 'MAX' etc. The code also defaults to MAX as an aggregate this is not necessary but the audience this was originally built for did not understand pivots and were typically using max as an aggregate.</source>
          <target state="translated">このプロシージャはピボット文のキー変数を取り込んで、様々なテーブル、カラム名、集約のためのピボット文を動的に作成します。Static カラムはピボットの identity カラムによるグループとして使用されます(必要でなければコードから削除することもできますが、ピボット文では非常に一般的なものであり、元の問題を解決するために必要でした)。Tableパラメータはスキーマを含むテーブルの名前です (schema.tablename)このコードのこの部分は、私が望むほどすっきりしていないので、多少の改良が必要です。私の使用法は公開されておらず、SQLインジェクションの心配がなかったので、これは私のために機能しました。Aggregateパラメータは、任意の標準的なSQL集約'AVG'、'SUM'、'MAX'などを受け入れます。これは必要ありませんが、このコードは元々ピボットを理解しておらず、一般的にはmaxを集約として使用していました。</target>
        </trans-unit>
        <trans-unit id="93338e5f2fb0f0825e84d9a46510e44c5a2a50bd" translate="yes" xml:space="preserve">
          <source>This solution requires the creation of a stored procedure so if that is out of the question for your needs please stop reading now.</source>
          <target state="translated">このソリューションではストアドプロシージャを作成する必要があるので、もしそれがあなたのニーズに合わないのであれば、今すぐ読むのを止めてください。</target>
        </trans-unit>
        <trans-unit id="2ab66c773b9dadb497bf36a83af266b8b0f57ccc" translate="yes" xml:space="preserve">
          <source>Updated version for SQL Server 2017 using STRING_AGG function to construct the pivot column list:</source>
          <target state="translated">STRING_AGG関数を使用してピボット列リストを構築するSQL Server 2017用のバージョンを更新しました。</target>
        </trans-unit>
        <trans-unit id="38e6f51a7808c92e256819a0872b3b689516a843" translate="yes" xml:space="preserve">
          <source>You can achieve this using dynamic TSQL (remember to use QUOTENAME to avoid SQL injection attacks):</source>
          <target state="translated">動的な TSQL を使用してこれを実現することができます(SQL インジェクション攻撃を避けるために QUOTENAME を使用することを忘れないでください)。</target>
        </trans-unit>
        <trans-unit id="f321bb51407fecc5d2801890431ad1e0f9922dbf" translate="yes" xml:space="preserve">
          <source>into the following:</source>
          <target state="translated">を以下のように変更します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
