<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/10636611">
    <body>
      <group id="10636611">
        <trans-unit id="79b3ba11b449f653cf94ea42d31d8665cb70305e" translate="yes" xml:space="preserve">
          <source>&quot;How do we get around it?&quot; Have the server tell the request that CORS is OK.</source>
          <target state="translated">&quot;¿Cómo lo evitamos?&quot; Haz que el servidor le diga al pedido que el CORS está bien.</target>
        </trans-unit>
        <trans-unit id="922d106809a27f5ea5725cbecf04bcf0394fbc75" translate="yes" xml:space="preserve">
          <source>&quot;Why don't we just block the browser from doing that?&quot; Yep. CORS.</source>
          <target state="translated">&quot;¿Por qué no bloqueamos el navegador para que no haga eso?&quot; Sí.CORS.</target>
        </trans-unit>
        <trans-unit id="8cce81f32d4f3933a9d189ba04d55f2214ac9ccf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;Wikipedia&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;Wikipedia&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="a4a8b5194f78b6038b34fcb3aaefa3c75ec70357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; is a &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot;&gt;CORS (Cross-Origin Resource Sharing) header&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; es un &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/&quot;&gt;encabezado CORS (Cross-Origin Resource Sharing)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c09130b0fcfe3404570f3cf7d450decda7ec406d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-Type&lt;/code&gt; (this is only simple when its value is &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, or &lt;code&gt;text/plain&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Content-Type&lt;/code&gt; (esto solo es simple cuando su valor es &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; , &lt;code&gt;multipart/form-data&lt;/code&gt; o &lt;code&gt;text/plain&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="31c8c8b02a31794b56f4026cc609f63ad40bb60d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;https://cors-anywhere.herokuapp.com/&lt;/code&gt; + &lt;code&gt;Your API URL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;https://cors-anywhere.herokuapp.com/&lt;/code&gt; + &lt;code&gt;Your API URL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85bb5e6604df9c285a25a74cf794fab003bbd6a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;1. A client downloads javascript code MyCode.js from &lt;a href=&quot;http://siteA&quot;&gt;http://siteA&lt;/a&gt; - the origin.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;1. Un cliente descarga el c&amp;oacute;digo de JavaScript MyCode.js desde &lt;a href=&quot;http://siteA&quot;&gt;http: // siteA&lt;/a&gt; - el origen.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e67c2a45dcc374cf1513c3c3847ca0329605f44f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;2. The response header of MyCode.js contains Access-Control-Allow-Origin: &lt;a href=&quot;http://siteB&quot;&gt;http://siteB&lt;/a&gt;, which I thought meant that MyCode.js was allowed to make cross-origin references to the site B.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;2. El encabezado de respuesta de MyCode.js contiene Access-Control-Allow-Origin: &lt;a href=&quot;http://siteB&quot;&gt;http: // siteB&lt;/a&gt; , que pens&amp;eacute; que significaba que MyCode.js pod&amp;iacute;a hacer referencias de origen cruzado al sitio B.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e72ad7b755a692bece6c7ac0d6f5e50584dca43a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DomainA AJAX request headers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Dominio Un encabezado de solicitud AJAX&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d140b20d9bc077421ada900ec804924f2dd7508c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DomainB response headers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Encabezados de respuesta de DomainB&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43b44e358ed9ab663aff14a7eb3cb779b17abc1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Key point:&lt;/strong&gt; When a client makes a request to the server, it will send the cookies stored under that domain.</source>
          <target state="translated">&lt;strong&gt;Punto clave:&lt;/strong&gt; cuando un cliente realiza una solicitud al servidor, enviar&amp;aacute; las cookies almacenadas en ese dominio.</target>
        </trans-unit>
        <trans-unit id="451ed0d1faeb007761b9f1f6e5c819251b69932c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Mechanism&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;El mecanismo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="458265a655ab105933b08a0c271497ca9d12a196" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;this must have before all router&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Esto debe tener antes de todo el enrutador&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3144daeec601dcd1b43f2a37773bb3e0722f2c8f" translate="yes" xml:space="preserve">
          <source>A client downloads javascript code MyCode.js from http://siteA - &lt;strong&gt;the origin&lt;/strong&gt;.</source>
          <target state="translated">Un cliente descarga el c&amp;oacute;digo de JavaScript MyCode.js desde http: // siteA - &lt;strong&gt;el origen&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b487ed479c5653fe0a2624288946f1c8ef051bd4" translate="yes" xml:space="preserve">
          <source>A resource makes a &lt;strong&gt;cross-origin HTTP request&lt;/strong&gt; when it requests a resource from a different domain, or port than the one which the first resource itself serves.</source>
          <target state="translated">Un recurso realiza una &lt;strong&gt;solicitud HTTP de origen cruzado&lt;/strong&gt; cuando solicita un recurso de un dominio o puerto diferente al que sirve el primer recurso.</target>
        </trans-unit>
        <trans-unit id="ce0f87926e811ddf23f0d196ca75fb63d5c3ead6" translate="yes" xml:space="preserve">
          <source>A response that tells the browser to allow code from any origin to
  access a resource will include the following:</source>
          <target state="translated">Una respuesta que le dice al navegador que permita el acceso a un recurso con un código de cualquier origen incluirá lo siguiente:</target>
        </trans-unit>
        <trans-unit id="ba3428e2ff13f1e68025f1c48520f8917410ea5c" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;this&lt;/a&gt; Mozilla Developer Network article,</source>
          <target state="translated">De acuerdo con &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;este&lt;/a&gt; art&amp;iacute;culo de Mozilla Developer Network,</target>
        </trans-unit>
        <trans-unit id="bf23c326dd333575e69254167b04cd66436a8ddf" translate="yes" xml:space="preserve">
          <source>Although some validation and authorization can be performed by the server, &lt;strong&gt;it is generally the browser's responsibility&lt;/strong&gt; to support these headers and honor the restrictions they impose.</source>
          <target state="translated">Aunque el servidor puede realizar alguna validaci&amp;oacute;n y autorizaci&amp;oacute;n, &lt;strong&gt;generalmente es responsabilidad del navegador&lt;/strong&gt; admitir estos encabezados y cumplir con las restricciones que imponen.</target>
        </trans-unit>
        <trans-unit id="35cb55e5ed57188c2c958286ec803a59b4bb54db" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; (ACAO) header in its response indicating which origin sites are allowed.</source>
          <target state="translated">Un encabezado &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; (ACAO) en su respuesta que indica qu&amp;eacute; sitios de origen est&amp;aacute;n permitidos.</target>
        </trans-unit>
        <trans-unit id="4a79c7e5f70a613673420444f94f034d8ff57aa2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; (ACAO) header with a wildcard that allows all domains:</source>
          <target state="translated">Un encabezado &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; (ACAO) con un comod&amp;iacute;n que permite todos los dominios:</target>
        </trans-unit>
        <trans-unit id="181e454044a5f8794317a9184ef7086fe1502149" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;HTML page&lt;/strong&gt; served from &lt;code&gt;http://domain-a.com&lt;/code&gt; makes an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; src request for &lt;code&gt;http://domain-b.com/image.jpg&lt;/code&gt;.</source>
          <target state="translated">Una &lt;strong&gt;p&amp;aacute;gina HTML&lt;/strong&gt; servida desde &lt;code&gt;http://domain-a.com&lt;/code&gt; realiza una solicitud src &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; para &lt;code&gt;http://domain-b.com/image.jpg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b609b5a98435feed729bf00208beca36f266c405" translate="yes" xml:space="preserve">
          <source>An error page if the server does not allow the cross-origin request</source>
          <target state="translated">Una página de error si el servidor no permite la solicitud de origen cruzado</target>
        </trans-unit>
        <trans-unit id="2aa81cf349bfa1a844c8cd05dff5a9ad245bf1b1" translate="yes" xml:space="preserve">
          <source>An example story: On your computer, there's a cookie for &lt;code&gt;yourbank.com&lt;/code&gt;. Maybe your session is in there.</source>
          <target state="translated">Una historia de ejemplo: en su computadora, hay una cookie para &lt;code&gt;yourbank.com&lt;/code&gt; . Tal vez tu sesi&amp;oacute;n est&amp;eacute; ah&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="b97580e9a4d93057941cecbf72a8e5d77baa599d" translate="yes" xml:space="preserve">
          <source>And the server sends back an &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;, just as it would for a simple request:</source>
          <target state="translated">Y el servidor devuelve un &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; , tal como lo har&amp;iacute;a para una simple solicitud:</target>
        </trans-unit>
        <trans-unit id="bbcce9482362cd9d846f8ef9260df5096f61aefb" translate="yes" xml:space="preserve">
          <source>Apparently, I have completely misunderstood its semantics. I thought of something like this:</source>
          <target state="translated">Aparentemente,he malinterpretado completamente su semántica.Pensé en algo como esto:</target>
        </trans-unit>
        <trans-unit id="9c0a94e83fa3f4a9ba8e76553be179ce0c84ddf9" translate="yes" xml:space="preserve">
          <source>As I mentioned above, W3 recommended browser to implement a &quot;&lt;strong&gt;preflight request&lt;/strong&gt;&quot; before submiting the actually Cross-Origin HTTP request, in a nutshell it is an HTTP &lt;code&gt;OPTIONS&lt;/code&gt; request:</source>
          <target state="translated">Como mencion&amp;eacute; anteriormente, W3 recomend&amp;oacute; al navegador implementar una &quot; &lt;strong&gt;solicitud de verificaci&amp;oacute;n previa&lt;/strong&gt; &quot; antes de enviar la solicitud HTTP Cross-Origin, en pocas palabras, es una solicitud de &lt;code&gt;OPTIONS&lt;/code&gt; HTTP:</target>
        </trans-unit>
        <trans-unit id="18fc2f97599c6123f77e230a7df453afa9545e6c" translate="yes" xml:space="preserve">
          <source>Cross-Origin Resource Sharing (CORS)</source>
          <target state="translated">Intercambio de Recursos de Origen Cruzado (CORS)</target>
        </trans-unit>
        <trans-unit id="cd4c33b899fc233fd73d75ce9074d02da1ac4b4d" translate="yes" xml:space="preserve">
          <source>Cross-Origin Resource Sharing - &lt;code&gt;CORS&lt;/code&gt; (A.K.A. Cross-Domain AJAX request) is an issue that most web developers might encounter, according to Same-Origin-Policy, browsers restrict client JavaScript in a security sandbox, usually JS cannot directly communicate with a remote server from a different domain. In the past developers created many tricky ways to achieve Cross-Domain resource request, most commonly using ways are:</source>
          <target state="translated">Intercambio de recursos de origen cruzado: &lt;code&gt;CORS&lt;/code&gt; (solicitud AKA de dominio cruzado AJAX) es un problema que la mayor&amp;iacute;a de los desarrolladores web pueden encontrar, de acuerdo con la Pol&amp;iacute;tica de Mismo Origen, los navegadores restringen el JavaScript del cliente en un entorno limitado de seguridad, generalmente JS no puede comunicarse directamente con un control remoto servidor de un dominio diferente. En el pasado, los desarrolladores crearon muchas formas dif&amp;iacute;ciles de lograr la solicitud de recursos entre dominios, las formas m&amp;aacute;s comunes de uso son:</target>
        </trans-unit>
        <trans-unit id="011fc91df492b0380e17a87ee2e66441e70c4e0f" translate="yes" xml:space="preserve">
          <source>Embeds remote server in an iframe and communicate through fragment or window.name, refer &lt;a href=&quot;http://www.ibm.com/developerworks/library/wa-crossdomaincomm/#N10120&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Incruste el servidor remoto en un iframe y comun&amp;iacute;quese a trav&amp;eacute;s de fragment o window.name, consulte &lt;a href=&quot;http://www.ibm.com/developerworks/library/wa-crossdomaincomm/#N10120&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="c55d6bc880c85b7ddccab1864214b1926c931775" translate="yes" xml:space="preserve">
          <source>For cross origin sharing, set header: &lt;code&gt;'Access-Control-Allow-Origin':'*';&lt;/code&gt;</source>
          <target state="translated">Para compartir el origen cruzado, configure el encabezado: &lt;code&gt;'Access-Control-Allow-Origin':'*';&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d1c001eb437a4a4ce15ecea22bb7619b01e35aa" translate="yes" xml:space="preserve">
          <source>For each resource/page that Site B wants to make accessible to Site A, Site B should serve its pages with the response header:</source>
          <target state="translated">Por cada recurso que el Sitio B quiera hacer accesible al Sitio A,el Sitio B debe servir sus páginas con el encabezamiento de respuesta:</target>
        </trans-unit>
        <trans-unit id="448733166bdf64413416b6944ad16b39bf49185a" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;XMLHttpRequest&lt;/code&gt; and &lt;code&gt;Fetch&lt;/code&gt; follow the &lt;strong&gt;same-origin policy&lt;/strong&gt;.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;XMLHttpRequest&lt;/code&gt; y &lt;code&gt;Fetch&lt;/code&gt; siguen la &lt;strong&gt;pol&amp;iacute;tica&lt;/strong&gt; del &lt;strong&gt;mismo origen&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2ac76251686f22fcdbe32b54806e17b5c620fa63" translate="yes" xml:space="preserve">
          <source>For more info, visit &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin&quot;&gt;here&lt;/a&gt;....</source>
          <target state="translated">Para m&amp;aacute;s informaci&amp;oacute;n, visite &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin&quot;&gt;aqu&amp;iacute;&lt;/a&gt; ...</target>
        </trans-unit>
        <trans-unit id="c434a7a5f602c383de2c018c1b0444a3ea8fbb96" translate="yes" xml:space="preserve">
          <source>For more specific examples see the documentation. I have used the simple example above to get around the CORS issue in an ionic application I am building that has to access a separate flask server.</source>
          <target state="translated">Para ejemplos más específicos,véase la documentación.He usado el simple ejemplo anterior para evitar el problema del CORS en una aplicación iónica que estoy construyendo y que tiene que acceder a un servidor de frascos separado.</target>
        </trans-unit>
        <trans-unit id="da1bd7e32d017921022d548d7ad4d638f61ae61e" translate="yes" xml:space="preserve">
          <source>For security reasons, browsers restrict &lt;strong&gt;cross-origin HTTP&lt;/strong&gt; requests &lt;strong&gt;initiated from within scripts&lt;/strong&gt;.</source>
          <target state="translated">Por razones de seguridad, los navegadores restringen &lt;strong&gt;las&lt;/strong&gt; solicitudes &lt;strong&gt;HTTP de origen cruzado&lt;/strong&gt; &lt;strong&gt;iniciadas desde scripts&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d6d0578bc5e77903d01a8d5a163a1d8888a0ad92" translate="yes" xml:space="preserve">
          <source>From a high level we can simply deem CORS is a contract between client AJAX call from domain A and a page hosted on domain B, a typical Cross-Origin request/response would be:</source>
          <target state="translated">Desde un alto nivel podemos simplemente considerar que CORS es un contrato entre el cliente AJAX llamado desde el dominio A y una página alojada en el dominio B,una típica respuesta de origen cruzado sería:</target>
        </trans-unit>
        <trans-unit id="6edd5efadce6bfaad382d3cb5bd545a64ef9e2c0" translate="yes" xml:space="preserve">
          <source>From my own experience, it's hard to find a simple explanation why CORS is even a concern.</source>
          <target state="translated">Desde mi propia experiencia,es difícil encontrar una simple explicación de por qué el CORS es siquiera una preocupación.</target>
        </trans-unit>
        <trans-unit id="1727a759182c88301c3e81d2fbbe9997d5ed21c4" translate="yes" xml:space="preserve">
          <source>How CORS works (&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header)</source>
          <target state="translated">C&amp;oacute;mo funciona CORS (encabezado &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c8cc4076ef7542bc5aed83b4de859cfb8a1094e1" translate="yes" xml:space="preserve">
          <source>How does Access-Control-Allow-Origin header work</source>
          <target state="translated">¿Cómo funciona el encabezado &quot;Acceso,Control y Autorización de Origen&quot;?</target>
        </trans-unit>
        <trans-unit id="7ababbc9fc0b6cccf17b2439c963b15cce41b12d" translate="yes" xml:space="preserve">
          <source>I blogged about CORS three years ago: &lt;a href=&quot;http://wayneye.com/Blog/Ajax-Cross-Origin-HTTP-request&quot;&gt;AJAX Cross-Origin HTTP request&lt;/a&gt;</source>
          <target state="translated">Hace un blog escrib&amp;iacute; sobre CORS hace tres a&amp;ntilde;os: &lt;a href=&quot;http://wayneye.com/Blog/Ajax-Cross-Origin-HTTP-request&quot;&gt;solicitud HTTP AJAX Cross-Origin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6d70cc5a4760303b495e7652f8245f1fe3b0fb9" translate="yes" xml:space="preserve">
          <source>I do not want to utilize JSONP.</source>
          <target state="translated">No quiero utilizar el JSONP.</target>
        </trans-unit>
        <trans-unit id="d09fde375f0cd87d20979405e3d38cb1e221db9d" translate="yes" xml:space="preserve">
          <source>I have full control of both site A and site B. How do I enable the javascript code downloaded from the site A to access resources on the site B using this header?</source>
          <target state="translated">Tengo el control total tanto del sitio A como del sitio B.¿Cómo puedo habilitar el código javascript descargado del sitio A para acceder a los recursos del sitio B usando este encabezado?</target>
        </trans-unit>
        <trans-unit id="9ab469e49ab007a1f4aca272e24988f133d0239d" translate="yes" xml:space="preserve">
          <source>I saw a lot of added this headers:</source>
          <target state="translated">Vi un montón de cabeceras añadidas:</target>
        </trans-unit>
        <trans-unit id="bcfe019fd908beb42af7ba76dea547996805d921" translate="yes" xml:space="preserve">
          <source>I think the reason for my bad intuition is the point of view I have when developing a site. It's &lt;strong&gt;my&lt;/strong&gt; site, with all &lt;strong&gt;my&lt;/strong&gt; JavaScript, therefore it isn't doing anything malicious and it should be up to &lt;strong&gt;me&lt;/strong&gt; to specify which other sites &lt;strong&gt;my&lt;/strong&gt; JavaScript can interact with. When in fact I should be thinking which &lt;strong&gt;other&lt;/strong&gt; sites JavaScript are trying to interact with my site and should I use CORS to allow them?</source>
          <target state="translated">Creo que la raz&amp;oacute;n de mi mala intuici&amp;oacute;n es el punto de vista que tengo al desarrollar un sitio. Es &lt;strong&gt;mi&lt;/strong&gt; sitio, con todo &lt;strong&gt;mi&lt;/strong&gt; JavaScript, por lo tanto, no est&amp;aacute; haciendo nada malicioso y deber&amp;iacute;a depender de &lt;strong&gt;m&amp;iacute;&lt;/strong&gt; especificar con qu&amp;eacute; otros sitios puede interactuar &lt;strong&gt;mi&lt;/strong&gt; JavaScript. &amp;iquest;Cu&amp;aacute;ndo debo pensar qu&amp;eacute; &lt;strong&gt;otros&lt;/strong&gt; sitios JavaScript est&amp;aacute; tratando de interactuar con mi sitio y debo usar CORS para permitirlos?</target>
        </trans-unit>
        <trans-unit id="ea75fc450491732817d81c5e6ba7c55e53aaaf8c" translate="yes" xml:space="preserve">
          <source>If another client makes a &lt;em&gt;cross origin&lt;/em&gt; request to a server, those cookies are sent along, just as before.  Ruh roh.</source>
          <target state="translated">Si otro cliente realiza una solicitud de &lt;em&gt;origen cruzado&lt;/em&gt; a un servidor, esas cookies se env&amp;iacute;an junto, como antes. Ruh Roh.</target>
        </trans-unit>
        <trans-unit id="0fbef03b48408fe4be85b4fd43c89fcb90ea9874" translate="yes" xml:space="preserve">
          <source>If foo.aspx supports OPTIONS HTTP verb, it might return response like below:</source>
          <target state="translated">Si foo.aspx soporta el verbo HTTP OPTIONS,podría devolver una respuesta como la siguiente:</target>
        </trans-unit>
        <trans-unit id="82d42f9e57a8e7c74c1875653db07a225efbc513" translate="yes" xml:space="preserve">
          <source>If the server responds to the OPTIONS preflight with appropriate response headers (&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; for non-simple headers, &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; for non-simple verbs) that match the non-simple verb and/or non-simple headers, then the browser sends the actual request.</source>
          <target state="translated">Si el servidor responde a la verificaci&amp;oacute;n previa de OPTIONS con encabezados de respuesta apropiados ( &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; para encabezados no simples, &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; para verbos no simples) que coinciden con el verbo no simple y / o no encabezados simples, entonces el navegador env&amp;iacute;a la solicitud real.</target>
        </trans-unit>
        <trans-unit id="b209912bc039e43f1ba2a6ad10304105e971e755" translate="yes" xml:space="preserve">
          <source>If you are using PHP, try adding the following code at the beginning of the php file:</source>
          <target state="translated">Si estás usando PHP,intenta añadir el siguiente código al principio del archivo php:</target>
        </trans-unit>
        <trans-unit id="012b5bc6588408b5759125ca431dc0ee67a011c5" translate="yes" xml:space="preserve">
          <source>If you are using external domains such as server, try this:</source>
          <target state="translated">Si estás usando dominios externos como un servidor,prueba esto:</target>
        </trans-unit>
        <trans-unit id="fac656ade96604b1bb74bdc54813902f91db4ff2" translate="yes" xml:space="preserve">
          <source>If you are using localhost, try this:</source>
          <target state="translated">Si estás usando un localhost,prueba esto:</target>
        </trans-unit>
        <trans-unit id="fa242605a7d86095b9190396fd9364feb7753098" translate="yes" xml:space="preserve">
          <source>If you want just to test a cross domain application in which the browser blocks your request, then you can just open your browser in unsafe mode and test your application without changing your code and without making your code unsafe.
From MAC OS you can do this from the terminal line:</source>
          <target state="translated">Si sólo quiere probar una aplicación de dominio cruzado en la que el navegador bloquea su solicitud,entonces puede abrir su navegador en modo inseguro y probar su aplicación sin cambiar su código y sin hacer que su código sea inseguro.Desde MAC OS puedes hacer esto desde la línea de terminal:</target>
        </trans-unit>
        <trans-unit id="511761e5536cf8f170218acc8981aa0ecce25b0b" translate="yes" xml:space="preserve">
          <source>In Python I have been using the &lt;a href=&quot;https://flask-cors.readthedocs.io/en/latest/&quot;&gt;&lt;code&gt;Flask-CORS&lt;/code&gt; library&lt;/a&gt; with great success. It makes dealing with CORS super easy and painless. I added some code from the library's documentation below.</source>
          <target state="translated">En Python, he estado usando la &lt;a href=&quot;https://flask-cors.readthedocs.io/en/latest/&quot;&gt;biblioteca &lt;code&gt;Flask-CORS&lt;/code&gt; &lt;/a&gt; con gran &amp;eacute;xito. Hace que tratar con CORS sea s&amp;uacute;per f&amp;aacute;cil e indoloro. Agregu&amp;eacute; un c&amp;oacute;digo de la documentaci&amp;oacute;n de la biblioteca a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ecb9b7c454fe20235af87d4ec8e149d40f0c3d94" translate="yes" xml:space="preserve">
          <source>Installing:</source>
          <target state="translated">Installing:</target>
        </trans-unit>
        <trans-unit id="59923435fe33e2e35eb67133c1bb2118e8264bb1" translate="yes" xml:space="preserve">
          <source>It's all about cookies. Cookies are stored on a client by their domain.</source>
          <target state="translated">Todo se trata de galletas.Las cookies se almacenan en un cliente por su dominio.</target>
        </trans-unit>
        <trans-unit id="036bc79e753677ceaeb2e07cdc182e7630df8ef3" translate="yes" xml:space="preserve">
          <source>JSON With Padding (&lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt;).</source>
          <target state="translated">JSON con relleno ( &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ca44019ded082daf451d8d84c802691d29ea6475" translate="yes" xml:space="preserve">
          <source>Just by adding the Proxy link will work, but it can also throw error for No Access again. Hence better to add header as shown below.</source>
          <target state="translated">Con sólo añadir el enlace del Proxy funcionará,pero también puede arrojar error por No Acceso de nuevo.Por lo tanto,es mejor añadir el encabezado como se muestra a continuación.</target>
        </trans-unit>
        <trans-unit id="990982cfd7f5181c1c4b59985f6c17c7572a78da" translate="yes" xml:space="preserve">
          <source>Many pages on the web today load resources like &lt;strong&gt;CSS stylesheets&lt;/strong&gt;, &lt;strong&gt;images&lt;/strong&gt; and &lt;strong&gt;scripts&lt;/strong&gt; from separate domains (thus it should be cool).</source>
          <target state="translated">Muchas p&amp;aacute;ginas en la web actualmente cargan recursos como &lt;strong&gt;hojas de estilo CSS&lt;/strong&gt; , &lt;strong&gt;im&amp;aacute;genes&lt;/strong&gt; y &lt;strong&gt;scripts&lt;/strong&gt; de dominios separados (por lo tanto, deber&amp;iacute;a ser genial).</target>
        </trans-unit>
        <trans-unit id="42aa7d0d1e4cb56cb1cdea6f9ad0ab375346d78d" translate="yes" xml:space="preserve">
          <source>Modern browsers use &lt;strong&gt;CORS&lt;/strong&gt; in an &lt;strong&gt;API container&lt;/strong&gt; - such as &lt;code&gt;XMLHttpRequest&lt;/code&gt; or &lt;code&gt;Fetch&lt;/code&gt; - to mitigate risks of cross-origin HTTP requests.</source>
          <target state="translated">Los navegadores modernos usan &lt;strong&gt;CORS&lt;/strong&gt; en un &lt;strong&gt;contenedor API&lt;/strong&gt; , como &lt;code&gt;XMLHttpRequest&lt;/code&gt; o &lt;code&gt;Fetch&lt;/code&gt; , para mitigar los riesgos de solicitudes HTTP de origen cruzado.</target>
        </trans-unit>
        <trans-unit id="c158f1129e2a1e2d82881627004ee2f4629d1c66" translate="yes" xml:space="preserve">
          <source>Modern browsers will not block cross-domain requests outright.  If Site A requests a page from Site B, the browser will actually fetch the requested page &lt;em&gt;on the network level&lt;/em&gt; and check if the response headers list Site A as a permitted requester domain.  If Site B has not indicated that Site A is allowed to access this page, the browser will trigger the &lt;code&gt;XMLHttpRequest&lt;/code&gt;'s &lt;code&gt;error&lt;/code&gt; event and  deny the response data to the requesting JavaScript code.</source>
          <target state="translated">Los navegadores modernos no bloquear&amp;aacute;n directamente las solicitudes de dominio cruzado. Si el sitio A solicita una p&amp;aacute;gina del sitio B, el navegador realmente buscar&amp;aacute; la p&amp;aacute;gina solicitada &lt;em&gt;en el nivel de red&lt;/em&gt; y comprobar&amp;aacute; si los encabezados de respuesta enumeran el sitio A como un dominio solicitante permitido. Si el sitio B no ha indicado que el sitio A puede acceder a esta p&amp;aacute;gina, el navegador activar&amp;aacute; el evento de &lt;code&gt;error&lt;/code&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; y denegar&amp;aacute; los datos de respuesta al c&amp;oacute;digo JavaScript que lo solicita.</target>
        </trans-unit>
        <trans-unit id="76e7b7d6dbafadc7d02482466d004be762003b16" translate="yes" xml:space="preserve">
          <source>Node: &lt;code&gt;app.use('Access-Control-Allow-Origin':'*');&lt;/code&gt;</source>
          <target state="translated">Nodo: &lt;code&gt;app.use('Access-Control-Allow-Origin':'*');&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0774d4e9c921c6d51ae15b2d71eb985b886205bd" translate="yes" xml:space="preserve">
          <source>Non-simple requests</source>
          <target state="translated">Solicitudes no simples</target>
        </trans-unit>
        <trans-unit id="c17d4be261192d21bdacbfa184e2f727114899f3" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Access-Control-Request-Method&lt;/code&gt; and &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; are added by the browser automatically; you do not need to add them. This OPTIONS preflight gets the successful response headers:</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;Access-Control-Request-Method&lt;/code&gt; y &lt;code&gt;Access-Control-Request-Headers&lt;/code&gt; son agregados autom&amp;aacute;ticamente por el navegador; No es necesario agregarlos. Esta verificaci&amp;oacute;n previa de OPCIONES obtiene los encabezados de respuesta exitosos:</target>
        </trans-unit>
        <trans-unit id="bca29b4c27957d6c5a6dfc00cdfff94aa12e7ae5" translate="yes" xml:space="preserve">
          <source>Noted that, you have to paste the following code under &lt;code&gt;&amp;lt;system.webServer&amp;gt;&lt;/code&gt; tag</source>
          <target state="translated">Not&amp;oacute; que, debe pegar el siguiente c&amp;oacute;digo en la etiqueta &lt;code&gt;&amp;lt;system.webServer&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2b757a60b81b0610f7e0143768cb1bf5f5771cb" translate="yes" xml:space="preserve">
          <source>Once you understand why it's there, the headers and discussion becomes a lot clearer.  I'll give it a shot in a few lines.</source>
          <target state="translated">Una vez que entiendes por qué está ahí,los encabezados y la discusión se vuelven mucho más claros.Lo intentaré en unas pocas líneas.</target>
        </trans-unit>
        <trans-unit id="b9fd5fe1077f37c5e40b6997c12d1c88618c93ec" translate="yes" xml:space="preserve">
          <source>One thing is sure - I still do not understand how am I supposed to use this header.</source>
          <target state="translated">Una cosa es segura,todavía no entiendo cómo se supone que voy a usar este encabezado.</target>
        </trans-unit>
        <trans-unit id="0c524bfd8fb631d16e1066def5e7ed1f33a402d3" translate="yes" xml:space="preserve">
          <source>Only if the response contains &quot;Access-Control-Allow-Origin&quot; AND its value is &quot;*&quot; or contain the domain who submitted the CORS request, by satisfying this mandtory condition browser will submit the actual Cross-Domain request, and cache the result in &quot;&lt;strong&gt;Preflight-Result-Cache&lt;/strong&gt;&quot;.</source>
          <target state="translated">Solo si la respuesta contiene &quot;Access-Control-Allow-Origin&quot; Y su valor es &quot;*&quot; o contiene el dominio que envi&amp;oacute; la solicitud CORS, al satisfacer esta condici&amp;oacute;n obligatoria, el navegador enviar&amp;aacute; la solicitud Cross-Domain real y almacenar&amp;aacute; en cach&amp;eacute; el resultado en &quot; &lt;strong&gt;Preflight-Result-Cache&lt;/strong&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="cba4c2393e21aee27e3e96781ebdf9c4f329b911" translate="yes" xml:space="preserve">
          <source>Origin: &lt;a href=&quot;http://www.example.com&quot;&gt;http://www.example.com&lt;/a&gt;</source>
          <target state="translated">Origen: &lt;a href=&quot;http://www.example.com&quot;&gt;http://www.example.com&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42682c0cef7e29104cf2fb7a57155baed6c873a6" translate="yes" xml:space="preserve">
          <source>P.S.</source>
          <target state="translated">P.S.</target>
        </trans-unit>
        <trans-unit id="ef3b9fb63ad4f41fc921c9eb7daaa16c866b787c" translate="yes" xml:space="preserve">
          <source>Php: &lt;code&gt;header('Access-Control-Allow-Origin':'*');&lt;/code&gt;</source>
          <target state="translated">Php: &lt;code&gt;header('Access-Control-Allow-Origin':'*');&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="092830db2ae0b848e4a7fbe6ebb0dd4a586af9c1" translate="yes" xml:space="preserve">
          <source>Question is a bit too old to answer, but I am posting this for any future reference to this question.</source>
          <target state="translated">La pregunta es demasiado vieja para responderla,pero la publico para cualquier referencia futura a esta pregunta.</target>
        </trans-unit>
        <trans-unit id="e8424d8bb7f11a8cc4b3389cc51d65e5c14d8fe2" translate="yes" xml:space="preserve">
          <source>Same-Origin Policy</source>
          <target state="translated">Política del mismo origen</target>
        </trans-unit>
        <trans-unit id="d8f49b02b468a270ab421e2d51f5d4263f1bb933" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/a/13400954/710446&quot;&gt;Understanding XMLHttpRequest over CORS&lt;/a&gt; for a little more information about non-simple requests.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://stackoverflow.com/a/13400954/710446&quot;&gt;Comprender XMLHttpRequest sobre CORS&lt;/a&gt; para obtener un poco m&amp;aacute;s de informaci&amp;oacute;n sobre solicitudes no simples.</target>
        </trans-unit>
        <trans-unit id="4e327445570f452b897677d54af70e33b468e526" translate="yes" xml:space="preserve">
          <source>Simple example that allows CORS for all domains on all routes:</source>
          <target state="translated">Un ejemplo simple que permite el CORS para todos los dominios en todas las rutas:</target>
        </trans-unit>
        <trans-unit id="034a38a06dec45075704e4adb13cbb4ae9f733ba" translate="yes" xml:space="preserve">
          <source>Simply paste the following code in your web.config file.</source>
          <target state="translated">Simplemente pegue el siguiente código en su archivo web.config.</target>
        </trans-unit>
        <trans-unit id="ff6537b92aed8439a00dd653b603494c0e54b0aa" translate="yes" xml:space="preserve">
          <source>Since the cookies are validated as expected, the server will authorize the response.</source>
          <target state="translated">Como las cookies se validan como se esperaba,el servidor autorizará la respuesta.</target>
        </trans-unit>
        <trans-unit id="3d6a778de145e7651342fa186ec3e751766e4556" translate="yes" xml:space="preserve">
          <source>So now, a few questions and answers become apparent:</source>
          <target state="translated">Así que ahora,unas cuantas preguntas y respuestas se hacen evidentes:</target>
        </trans-unit>
        <trans-unit id="168634b8d2a054313c9a1ffe3818f5e07f300afc" translate="yes" xml:space="preserve">
          <source>So, a web application using &lt;code&gt;XMLHttpRequest&lt;/code&gt; or &lt;code&gt;Fetch&lt;/code&gt; could only make &lt;strong&gt;HTTP requests&lt;/strong&gt; to &lt;strong&gt;its own domain&lt;/strong&gt;.</source>
          <target state="translated">Por lo tanto, una aplicaci&amp;oacute;n web que utiliza &lt;code&gt;XMLHttpRequest&lt;/code&gt; o &lt;code&gt;Fetch&lt;/code&gt; solo puede realizar &lt;strong&gt;solicitudes HTTP&lt;/strong&gt; a &lt;strong&gt;su propio dominio&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d82b9a3c342873a23c4fab6db3c55ef4ea6a66cc" translate="yes" xml:space="preserve">
          <source>Sometimes you need to work cross domain, which is where CORS comes in. CORS relaxes the same origin policy for domainA.com, using the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header to list other domains (domainB.com) that are trusted to run JavaScript that can interact with domainA.com.</source>
          <target state="translated">A veces necesita trabajar entre dominios, que es donde entra CORS. CORS relaja la misma pol&amp;iacute;tica de origen para domainA.com, utilizando el encabezado &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; para enumerar otros dominios (domainB.com) en los que se conf&amp;iacute;a para ejecutarse JavaScript que puede interactuar con domainA.com.</target>
        </trans-unit>
        <trans-unit id="d8284b007aa1410cee38f4acd287058a3c7a25bb" translate="yes" xml:space="preserve">
          <source>Supposing that Site A wants to send a PUT request for &lt;code&gt;/somePage&lt;/code&gt;, with a non-simple &lt;code&gt;Content-Type&lt;/code&gt; value of &lt;code&gt;application/json&lt;/code&gt;, the browser would first send a preflight request:</source>
          <target state="translated">Suponiendo que el sitio A desea enviar una solicitud PUT para &lt;code&gt;/somePage&lt;/code&gt; , con un valor de &lt;code&gt;Content-Type&lt;/code&gt; no simple de &lt;code&gt;application/json&lt;/code&gt; , el navegador primero enviar&amp;aacute; una solicitud de verificaci&amp;oacute;n previa:</target>
        </trans-unit>
        <trans-unit id="da390ae4eac8720e9ebf822a8c4b20180f117363" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Cross-Origin Resource Sharing (CORS)&lt;/strong&gt; mechanism gives web servers &lt;strong&gt;cross-domain access controls&lt;/strong&gt;, which enable secure cross-domain data transfers.</source>
          <target state="translated">El mecanismo de &lt;strong&gt;intercambio de recursos de origen cruzado (CORS)&lt;/strong&gt; brinda a los servidores web &lt;strong&gt;controles de acceso entre dominios&lt;/strong&gt; , que permiten transferencias seguras de datos entre dominios.</target>
        </trans-unit>
        <trans-unit id="3f523716bd882432eaaceb8c667a9d5d0f98dab8" translate="yes" xml:space="preserve">
          <source>The Access-Control-Allow-Origin response header indicates whether the
  response can be shared with requesting code from the given origin.</source>
          <target state="translated">El encabezado de respuesta &quot;Acceso-Control-Autorización-Origen&quot; indica si la respuesta puede ser compartida con el código de solicitud del origen dado.</target>
        </trans-unit>
        <trans-unit id="64becf81c730d7ddecadf5494d020a3051823f23" translate="yes" xml:space="preserve">
          <source>The CORS standard describes new HTTP headers which provide browsers and servers a way to request remote URLs only when they have permission.</source>
          <target state="translated">El estándar CORS describe nuevos encabezados HTTP que proporcionan a los navegadores y servidores una forma de solicitar URLs remotas sólo cuando tienen permiso.</target>
        </trans-unit>
        <trans-unit id="7579024e9c6a9814e5d551a9eae975f7eb6243e4" translate="yes" xml:space="preserve">
          <source>The blue parts I marked above were the kernal facts, &quot;Origin&quot; request header &quot;indicates where the cross-origin request or preflight request originates from&quot;, the &quot;Access-Control-Allow-Origin&quot; response header indicates this page allows remote request from DomainA (if the value is * indicate allows remote requests from any domain).</source>
          <target state="translated">Las partes azules que marqué arriba eran los hechos del núcleo,el encabezado de solicitud &quot;Origen&quot; &quot;indica de dónde procede la solicitud de origen cruzado o la solicitud de pre-vuelo&quot;,el encabezado de respuesta &quot;Acceso-Control-Autorización-Origen&quot; indica que esta página permite la solicitud remota desde el DominioA (si el valor es*indique que permite solicitudes remotas desde cualquier dominio).</target>
        </trans-unit>
        <trans-unit id="b65de9513f32a4c4cc6825021c061136c01a69dd" translate="yes" xml:space="preserve">
          <source>The browser sends the &lt;code&gt;OPTIONS&lt;/code&gt; request with an &lt;code&gt;Origin HTTP&lt;/code&gt; header.</source>
          <target state="translated">El navegador env&amp;iacute;a la solicitud de &lt;code&gt;OPTIONS&lt;/code&gt; con un encabezado &lt;code&gt;Origin HTTP&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d531bbe49a2d68cdc67d51711b7278da9b33732" translate="yes" xml:space="preserve">
          <source>The browsers sends the actual request:</source>
          <target state="translated">Los navegadores envían la solicitud real:</target>
        </trans-unit>
        <trans-unit id="a934d256e0a980eeb9f6c444da2f62c93f8bf7b4" translate="yes" xml:space="preserve">
          <source>The client triggers some functionality of MyCode.js, which in turn make requests to http://siteB, which should be fine, despite being cross-origin requests.</source>
          <target state="translated">El cliente activa alguna funcionalidad de MyCode.js,que a su vez hace peticiones a http:/siteB,lo que debería estar bien,a pesar de ser peticiones de origen cruzado.</target>
        </trans-unit>
        <trans-unit id="dbf7b1541a715c0443009d1f4641e7a2ee11f024" translate="yes" xml:space="preserve">
          <source>The code that does the downloading - your html script tag or xhr from javascript or whatever - came from, let's say, &lt;a href=&quot;http://siteZ&quot;&gt;http://siteZ&lt;/a&gt;.  And, when the browser requests MyCode.js, it sends an Origin: header saying &quot;Origin: &lt;a href=&quot;http://siteZ&quot;&gt;http://siteZ&lt;/a&gt;&quot;, because it can see that you're requesting to siteA and siteZ != siteA.  (You cannot stop or interfere with this.)</source>
          <target state="translated">El c&amp;oacute;digo que realiza la descarga, su etiqueta de script html o xhr de javascript o lo que sea, proviene de, digamos, &lt;a href=&quot;http://siteZ&quot;&gt;http: // siteZ&lt;/a&gt; . Y, cuando el navegador solicita MyCode.js, env&amp;iacute;a un encabezado Origin: que dice &quot;Origin: &lt;a href=&quot;http://siteZ&quot;&gt;http: // siteZ&lt;/a&gt; &quot;, porque puede ver que est&amp;aacute; solicitando siteA y siteZ! = SiteA. (No puede parar o interferir con esto).</target>
        </trans-unit>
        <trans-unit id="e26172510c48c8b57c33a3ae16c5818426df4b74" translate="yes" xml:space="preserve">
          <source>The purpose of the same origin policy is to protect you from malicious JavaScript on siteA.com accessing private information you've chosen to share only with siteB.com. Without the same origin policy, JavaScript written by the authors of siteA.com could make your browser make requests to siteB.com, using your authentication cookies for siteB.com. In this way, siteA.com could steal the secret information you share with siteB.com.</source>
          <target state="translated">El propósito de la política del mismo origen es protegerlo de JavaScript malicioso en siteA.com accediendo a información privada que ha elegido compartir sólo con siteB.com.Sin la misma política de origen,el JavaScript escrito por los autores de siteA.com podría hacer que su navegador haga peticiones a siteB.com,usando sus cookies de autenticación para siteB.com.De esta manera,siteA.com podría robar la información secreta que comparte con siteB.com.</target>
        </trans-unit>
        <trans-unit id="61bc29dae0f332e323eadbd6d92b28a19615ab02" translate="yes" xml:space="preserve">
          <source>The response header of MyCode.js contains &lt;strong&gt;Access-Control-Allow-Origin: http://siteB&lt;/strong&gt;, which I thought meant that MyCode.js was allowed to make cross-origin references to the site B.</source>
          <target state="translated">El encabezado de respuesta de MyCode.js contiene &lt;strong&gt;Access-Control-Allow-Origin: http: // siteB&lt;/strong&gt; , que pens&amp;eacute; que significaba que MyCode.js pod&amp;iacute;a hacer referencias de origen cruzado al sitio B.</target>
        </trans-unit>
        <trans-unit id="7da85dccb097c912fea1e023dcaa3cbcbacfb502" translate="yes" xml:space="preserve">
          <source>The server at &lt;code&gt;service.example.com&lt;/code&gt; may respond with:</source>
          <target state="translated">El servidor en &lt;code&gt;service.example.com&lt;/code&gt; puede responder con:</target>
        </trans-unit>
        <trans-unit id="f9366f7ceb9098513bc618100e4a166fb851ac2d" translate="yes" xml:space="preserve">
          <source>The value of this header is the domain that served the parent page. When a page from &lt;code&gt;http://www.example.com&lt;/code&gt; attempts to access a user's data in &lt;code&gt;service.example.com&lt;/code&gt;, the following request header would be sent to &lt;code&gt;service.example.com&lt;/code&gt;:</source>
          <target state="translated">El valor de este encabezado es el dominio que sirvi&amp;oacute; a la p&amp;aacute;gina principal. Cuando una p&amp;aacute;gina de &lt;code&gt;http://www.example.com&lt;/code&gt; intenta acceder a los datos de un usuario en &lt;code&gt;service.example.com&lt;/code&gt; , el siguiente encabezado de solicitud se enviar&amp;aacute; a &lt;code&gt;service.example.com&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="657f30c61187db82d87b65e6ce81f0467605fd0d" translate="yes" xml:space="preserve">
          <source>Then, MyCode.js comes from siteA.  When it makes requests to siteB, they are all cross-origin, the browser sends Origin: siteA, and siteB has to take the siteA, recognize it's on the short list of allowed requesters, and send back A-C-A-O: siteA.  Only then will the browser let your script get the result of those requests.</source>
          <target state="translated">Entonces,MyCode.js viene del sitio A.Cuando hace solicitudes a siteB,todas son de origen cruzado,el navegador envía Origen:siteA,y siteB tiene que tomar el siteA,reconocer que está en la corta lista de solicitantes permitidos,y enviar de vuelta A-C-A-O:siteA.Sólo entonces el navegador dejará que su script obtenga el resultado de esas solicitudes.</target>
        </trans-unit>
        <trans-unit id="cc9aabc473d7e2d21950303f057e3358802271a9" translate="yes" xml:space="preserve">
          <source>This will allow to share content for different domain.</source>
          <target state="translated">Esto permitirá compartir el contenido para diferentes dominios.</target>
        </trans-unit>
        <trans-unit id="4503c23a82401d11ba63cd20aeb3e7ecf9db4793" translate="yes" xml:space="preserve">
          <source>Those cookies get gathered up and sent along - and now, &lt;code&gt;malicious.com&lt;/code&gt; has a response from &lt;code&gt;yourbank&lt;/code&gt;.</source>
          <target state="translated">Esas cookies se recogen y se env&amp;iacute;an, y ahora, &lt;code&gt;malicious.com&lt;/code&gt; tiene una respuesta de su &lt;code&gt;yourbank&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa4d6d318719d478d3206b9a5fe136b655674ae9" translate="yes" xml:space="preserve">
          <source>Those tricky ways have more or less some issues, for example JSONP might result in security hole if developers simply &quot;eval&quot; it, and #3 above, although it works, both domains should build strict contract between each other, it neither flexible nor elegant IMHO:)</source>
          <target state="translated">Esas formas complicadas tienen más o menos algunos problemas,por ejemplo JSONP podría resultar en un agujero de seguridad si los desarrolladores simplemente lo &quot;evalúan&quot;,y #3 arriba,aunque funciona,ambos dominios deben construir un contrato estricto entre sí,no es ni flexible ni elegante IMHO:)</target>
        </trans-unit>
        <trans-unit id="9ca094af81bfc3826ed4436cf83d45cb4a2e4d44" translate="yes" xml:space="preserve">
          <source>To improve web applications, developers asked browser vendors to allow cross-domain requests.</source>
          <target state="translated">Para mejorar las aplicaciones web,los desarrolladores pidieron a los proveedores de navegadores que permitieran las solicitudes de dominios cruzados.</target>
        </trans-unit>
        <trans-unit id="dec4c5b25b8efa7a70ca001140b06f9b4fc9abc0" translate="yes" xml:space="preserve">
          <source>To understand which domain should serve the CORS headers, consider this. You visit malicious.com, which contains some JavaScript that tries to make a cross domain request to mybank.com. It should be up to mybank.com, not malicious.com, to decide whether or not it sets CORS headers that relax the same origin policy allowing the JavaScript from malicious.com to interact with it. If malicous.com could set its own CORS headers allowing its own JavaScript access to mybank.com, this would completely nullify the same origin policy.</source>
          <target state="translated">Para entender qué dominio debería servir a los encabezados del CORS,considere esto.Usted visita malicioso.com,que contiene algún Javascript que intenta hacer una solicitud de dominio cruzado a mybank.com.Debería ser mybank.com,no malicioso.com,quien decida si establece o no los encabezados CORS que relajan la misma política de origen permitiendo que el JavaScript de malicioso.com interactúe con él.Si malicous.com pudiera establecer sus propios encabezados CORS permitiendo su propio acceso de JavaScript a mybank.com,esto anularía completamente la misma política de origen.</target>
        </trans-unit>
        <trans-unit id="7bf85d7014db5e0169f6a290c30265c13b955563" translate="yes" xml:space="preserve">
          <source>Use Flash/Silverlight or server side as a &quot;proxy&quot; to communicate
with remote.</source>
          <target state="translated">Usar FlashSilverlight o el lado del servidor como &quot;proxy&quot; para comunicarse con el remoto.</target>
        </trans-unit>
        <trans-unit id="54542703a4403c62702b623ce59c580d816c24ad" translate="yes" xml:space="preserve">
          <source>Using &lt;strong&gt;React&lt;/strong&gt; and &lt;strong&gt;Axios&lt;/strong&gt;, join proxy link to the URL and add header as shown below</source>
          <target state="translated">Usando &lt;strong&gt;React&lt;/strong&gt; y &lt;strong&gt;Axios&lt;/strong&gt; , une el enlace proxy a la URL y agrega el encabezado como se muestra a continuaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="a44858f05242a7b455ce62fdc8df88a473321dc7" translate="yes" xml:space="preserve">
          <source>W3C had introduced Cross-Origin Resource Sharing (CORS) as a standard solution to provide a safe, flexible and a recommended standard way to solve this issue.</source>
          <target state="translated">El W3C había introducido el Cross-Origin Resource Sharing (CORS)como una solución estándar para proporcionar una forma segura,flexible y recomendada para resolver este problema.</target>
        </trans-unit>
        <trans-unit id="f1278b75a70fd6c5b6a83f2408abb534e43d6ca3" translate="yes" xml:space="preserve">
          <source>Well, I am wrong. It does not work like this at all. So, I have read &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;Cross-origin resource sharing&lt;/a&gt; and attempted to read &lt;a href=&quot;http://www.w3.org/TR/cors/.&quot;&gt;Cross-Origin Resource Sharing in w3c recommendation&lt;/a&gt;</source>
          <target state="translated">Pues estoy equivocado. No funciona as&amp;iacute; en absoluto. Entonces, le&amp;iacute; el &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;uso compartido de recursos de origen cruzado&lt;/a&gt; e intent&amp;eacute; leer el uso compartido de recursos de origen &lt;a href=&quot;http://www.w3.org/TR/cors/.&quot;&gt;cruzado en la recomendaci&amp;oacute;n de w3c&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="acd1d52dcbd73103ac06849984a12c77293f662b" translate="yes" xml:space="preserve">
          <source>What happens on the network level can be &lt;em&gt;slightly&lt;/em&gt; more complex than explained above. If the request is a &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/#toc-handling-a-not-so-simple-request&quot;&gt;&quot;non-simple&quot; request&lt;/a&gt;, the browser first sends a data-less &quot;preflight&quot; OPTIONS request, to verify that the server will accept the request. A request is non-simple when either (or both):</source>
          <target state="translated">Lo que sucede a nivel de red puede ser un &lt;em&gt;poco&lt;/em&gt; m&amp;aacute;s complejo que lo explicado anteriormente. Si la solicitud es una solicitud &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/cors/#toc-handling-a-not-so-simple-request&quot;&gt;&quot;no simple&quot;&lt;/a&gt; , el navegador primero env&amp;iacute;a una solicitud de OPCIONES &quot;previa al vuelo&quot; sin datos, para verificar que el servidor aceptar&amp;aacute; la solicitud. Una solicitud no es simple cuando cualquiera (o ambos):</target>
        </trans-unit>
        <trans-unit id="69b9ebc5edfe8d1c244868c40d9107fcf6856520" translate="yes" xml:space="preserve">
          <source>When Site A tries to fetch content from Site B,  Site B can send an &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; response header to tell the browser that the content of this page is accessible to certain origins. (An &lt;em&gt;origin&lt;/em&gt; is a &lt;a href=&quot;https://stackoverflow.com/a/19542686/710446&quot;&gt;domain, plus a scheme and port number&lt;/a&gt;.)  By default, Site B's pages are &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;not accessible to any other origin&lt;/a&gt;; using the &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header opens a door for cross-origin access by specific requesting origins.</source>
          <target state="translated">Cuando el sitio A intenta obtener contenido del sitio B, el sitio B puede enviar un encabezado de respuesta &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; para decirle al navegador que el contenido de esta p&amp;aacute;gina es accesible para ciertos or&amp;iacute;genes. (Un &lt;em&gt;origen&lt;/em&gt; es un &lt;a href=&quot;https://stackoverflow.com/a/19542686/710446&quot;&gt;dominio, m&amp;aacute;s un esquema y un n&amp;uacute;mero de puerto&lt;/a&gt; ). Por defecto, las p&amp;aacute;ginas del Sitio B &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;no&lt;/a&gt; son accesibles a ning&amp;uacute;n otro origen ; El uso del encabezado &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; abre una puerta para el acceso de origen cruzado por or&amp;iacute;genes solicitantes espec&amp;iacute;ficos.</target>
        </trans-unit>
        <trans-unit id="e9af21b6fffa981c22773bf6561ab52a3a2c16ad" translate="yes" xml:space="preserve">
          <source>When sending the actual request (after preflight is done), the behavior is identical to how a simple request is handled. In other words, a non-simple request whose preflight is successful is treated the same as a simple request (i.e., the server must still send &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; again for the actual response).</source>
          <target state="translated">Al enviar la solicitud real (despu&amp;eacute;s de que se realiza la verificaci&amp;oacute;n previa), el comportamiento es id&amp;eacute;ntico a c&amp;oacute;mo se maneja una solicitud simple. En otras palabras, una solicitud no simple cuya verificaci&amp;oacute;n previa es exitosa se trata de la misma manera que una solicitud simple (es decir, el servidor a&amp;uacute;n debe enviar &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; nuevamente para la respuesta real).</target>
        </trans-unit>
        <trans-unit id="5c2243f9a6f92171c8e09c8e839ba5cb7bfc4bc2" translate="yes" xml:space="preserve">
          <source>Whenever I start thinking about CORS, my intuition about which site hosts the headers is incorrect, just as you described in your question. For me, it helps to think about the purpose of the same origin policy.</source>
          <target state="translated">Siempre que empiezo a pensar en el CORS,mi intuición sobre qué sitio alberga los encabezados es incorrecta,tal como describiste en tu pregunta.Para mí,ayuda pensar en el propósito de la política del mismo origen.</target>
        </trans-unit>
        <trans-unit id="bd36019344446d4d78cea760c6728f16f73a6008" translate="yes" xml:space="preserve">
          <source>Yikes.</source>
          <target state="translated">Yikes.</target>
        </trans-unit>
        <trans-unit id="0df105fca3eb53e9f6af003aa2f59e35fafdf39f" translate="yes" xml:space="preserve">
          <source>You browse to &lt;code&gt;malicious.com&lt;/code&gt;. Malicious makes a bunch of requests to different banks, including &lt;code&gt;yourbank.com&lt;/code&gt;.</source>
          <target state="translated">Usted navega a &lt;code&gt;malicious.com&lt;/code&gt; . Malicious hace un mont&amp;oacute;n de solicitudes a diferentes bancos, incluido &lt;code&gt;yourbank.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="575553b8514f130229077f4c265369eae6418abf" translate="yes" xml:space="preserve">
          <source>You're logged in on your browser to &lt;code&gt;yourbank.com&lt;/code&gt;.  You request to see all your accounts.  &lt;code&gt;yourbank.com&lt;/code&gt; receives the pile of cookies and sends back its response (your accounts).</source>
          <target state="translated">Ha iniciado sesi&amp;oacute;n en su navegador en &lt;code&gt;yourbank.com&lt;/code&gt; . Solicita ver todas sus cuentas. &lt;code&gt;yourbank.com&lt;/code&gt; recibe la pila de cookies y env&amp;iacute;a su respuesta (sus cuentas).</target>
        </trans-unit>
        <trans-unit id="76203283d6535a8379e646ae6b32fcc30abf3986" translate="yes" xml:space="preserve">
          <source>a) server side: in file app.js i give headers to all response like:</source>
          <target state="translated">a)lado del servidor:en el archivo app.js doy cabeceras a todas las respuestas como:</target>
        </trans-unit>
        <trans-unit id="5131eb102c64e7b1977894cc40c9e5ca9c90ab5d" translate="yes" xml:space="preserve">
          <source>b) client side: in send ajax you need add: &quot;withCredentials: true,&quot; like:</source>
          <target state="translated">b)lado del cliente:en el envío de ajax hay que añadir:&quot;conCredenciales:verdadero&quot;,como:</target>
        </trans-unit>
        <trans-unit id="b20f0919247dbc58bf2955f34f20d7033015f132" translate="yes" xml:space="preserve">
          <source>but i dont need that,</source>
          <target state="translated">pero no necesito eso,</target>
        </trans-unit>
        <trans-unit id="2897789ee2c19bf53c9dc2e8e84ef213689a1c9b" translate="yes" xml:space="preserve">
          <source>good luck.</source>
          <target state="translated">buena suerte.</target>
        </trans-unit>
        <trans-unit id="24178e1d2a641a4fcfd1e7606989c6d425edc0c4" translate="yes" xml:space="preserve">
          <source>i work with express 4 and node 7.4 and angular,I had the same problem me help this:</source>
          <target state="translated">Trabajo con el expreso 4 y el nodo 7.4 y el angular,tuve el mismo problema que yo para ayudar a esto:</target>
        </trans-unit>
        <trans-unit id="d066fab57be4b00b3b31353f308ec42e5e698855" translate="yes" xml:space="preserve">
          <source>no.  It means, Only siteB is allowed to do this request.  So your request for MyCode.js from siteZ gets an error instead, and the browser typically gives you nothing.  But if you make your server return A-C-A-O: siteZ instead, you'll get MyCode.js .  Or if it sends '*', that'll work, that'll let everybody in.  Or if the server always sends the string from the Origin: header... but... for security, if you're afraid of hackers, your server should only allow origins on a shortlist, that are allowed to make those requests.</source>
          <target state="translated">No.Significa que sólo el sitio B puede hacer esta solicitud.Así que su solicitud de MyCode.js de siteZ recibe un error en su lugar,y el navegador normalmente no le da nada.Pero si haces que tu servidor devuelva A-C-A-O:siteZ en su lugar,obtendrás MyCode.js.O si envía '*',eso funcionará,eso dejará entrar a todo el mundo.O si el servidor siempre envía la cadena del encabezado Origin:...pero...por seguridad,si temes a los hackers,tu servidor sólo debe permitir a los orígenes en una lista corta,que están autorizados a hacer esas peticiones.</target>
        </trans-unit>
        <trans-unit id="58403ccfa5556c2cca1135361e0a2e51ef732b2a" translate="yes" xml:space="preserve">
          <source>using an HTTP verb other than GET or POST (e.g. PUT, DELETE)</source>
          <target state="translated">usando un verbo HTTP que no sea GET o POST (por ejemplo,PUT,DELETE)</target>
        </trans-unit>
        <trans-unit id="13a2ea31f53ce7d7d241eaebbc7aa4ec4fd25d28" translate="yes" xml:space="preserve">
          <source>using non-simple request headers; the only simple requests headers are:</source>
          <target state="translated">usando cabeceras de petición no simples;las únicas cabeceras de petición simples son:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
