<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1068834">
    <body>
      <group id="1068834">
        <trans-unit id="f537abe60a2d56f3eb6f2d641133e78785e36c02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1) Fast and limited.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1) R&amp;aacute;pido y limitado.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67d9c6541745025f4a435a47305fd29760d6a693" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2) Slow and more generic.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2) Lento y m&amp;aacute;s gen&amp;eacute;rico.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a39d70b8fd84a410ae8b60aeffb6e629d146460d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Functions&lt;/strong&gt; are not considered identical by function text.  This test is insufficient because functions may have differing closures.  Functions are only considered equal if &lt;code&gt;===&lt;/code&gt; says so (but you could easily extend that equivalent relation should you choose to do so).</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las funciones&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se consideran id&amp;eacute;nticas por el texto de la funci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta prueba es insuficiente porque las funciones pueden tener diferentes cierres. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las funciones solo se consideran iguales si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; lo&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; dice (pero podr&amp;iacute;a extender f&amp;aacute;cilmente esa relaci&amp;oacute;n equivalente si decide hacerlo).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="590d1b6d707dfeca8f2672ed6d7a01489e2427ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Infinite loops&lt;/strong&gt;, potentially caused by circular datastructures, are avoided.  When &lt;code&gt;areEquivalent&lt;/code&gt; attempts to disprove equality and recurses into an object's properties to do so, it keeps track of the objects for which this sub-comparison is needed.  If equality can be disproved, then some reachable property path differs between the objects, and then there must be a shortest such reachable path, and that shortest reachable path cannot contain cycles present in both paths; i.e. it is OK to assume equality when recursively comparing objects.  The assumption is stored in a property &lt;code&gt;areEquivalent_Eq_91_2_34&lt;/code&gt;, which is deleted after use, but if the object graph already contains such a property, behavior is undefined.  The use of such a marker property is necessary because javascript doesn't support dictionaries using arbitrary objects as keys.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se evitan &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;bucles infinitos&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , potencialmente causados ​​por estructuras de datos circulares. Cuando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;areEquivalent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; intenta refutar la igualdad y recurre a las propiedades de un objeto para hacerlo, realiza un seguimiento de los objetos para los que se necesita esta sub-comparaci&amp;oacute;n. Si la igualdad puede ser refutada, entonces alguna ruta de propiedad alcanzable difiere entre los objetos, y luego debe haber una ruta accesible m&amp;aacute;s corta, y esa ruta accesible m&amp;aacute;s corta no puede contener ciclos presentes en ambas rutas; es decir, est&amp;aacute; bien asumir la igualdad al comparar objetos recursivamente. El supuesto se almacena en una propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;areEquivalent_Eq_91_2_34&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, que se elimina despu&amp;eacute;s de su uso, pero si el gr&amp;aacute;fico del objeto ya contiene dicha propiedad, el comportamiento no est&amp;aacute; definido. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El uso de dicha propiedad de marcador es necesario porque JavaScript no admite diccionarios que utilizan objetos arbitrarios como claves.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d1e852d3767ce7b26d1e032df80b28ddc8ac7f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tests:&lt;/strong&gt; passes tests are from &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/16788517/139361&quot;&gt;How to determine equality for two JavaScript objects?&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pruebas: las&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pruebas aprobadas provienen de &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/16788517/139361&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo determinar la igualdad para dos objetos JavaScript? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="979e971205e3e808fc4e9597df8e3ab9f75057fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update (8/13/2015)&lt;/strong&gt;. I have implemented a better version, as the function &lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/lib/util/value_equals.js&quot;&gt;value_equals()&lt;/a&gt; that is faster, handles properly corner cases such as NaN and 0 different than -0, optionally enforcing objects' properties order and testing for cyclic references, backed by more than &lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/test/src/value_equals.coffee&quot;&gt;100 automated tests&lt;/a&gt; as part of the &lt;a href=&quot;https://github.com/ReactiveSets/toubkal&quot;&gt;Toubkal&lt;/a&gt; project test suite.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Actualizaci&amp;oacute;n (8/13/2015)&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;He implementado una versi&amp;oacute;n mejor, ya que la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/lib/util/value_equals.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;value_equals ()&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que es m&amp;aacute;s r&amp;aacute;pida, maneja correctamente los casos de esquina como NaN y 0 diferentes a -0, opcionalmente aplica el orden de propiedades de los objetos y prueba de referencias c&amp;iacute;clicas, respaldado por m&amp;aacute;s de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/test/src/value_equals.coffee&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;100 pruebas automatizadas&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como parte del &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;conjunto de pruebas del proyecto &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ReactiveSets/toubkal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Toubkal&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ced498bf3e2c2b4b55b57b30eab77dedac02853" translate="yes" xml:space="preserve">
          <source>Certainly not the only way - you could prototype a method (against Object here but I certainly wouldn't suggest using Object for live code) to replicate C#/Java style comparison methods.</source>
          <target state="translated">Ciertamente no es la única manera-usted podría hacer un prototipo de un método (contra el objeto aquí pero ciertamente no sugeriría usar el objeto para el código vivo)para replicar los métodos de comparación del estilo C#Java.</target>
        </trans-unit>
        <trans-unit id="55219b48cffc30535f00621b248bf07007a656ca" translate="yes" xml:space="preserve">
          <source>Compares objects without digging into prototypes, then compares properties' projections recursively, and also compares constructors.</source>
          <target state="translated">Compara los objetos sin excavar en los prototipos,luego compara las proyecciones de las propiedades de forma recursiva,y también compara los constructores.</target>
        </trans-unit>
        <trans-unit id="a3a664115fa0a2bb00a29ef557b6cbc531054ea0" translate="yes" xml:space="preserve">
          <source>Edit, since a general example seems to be expected:</source>
          <target state="translated">Editar,ya que parece esperarse un ejemplo general:</target>
        </trans-unit>
        <trans-unit id="3c740021f2c39afe5be11acb93e48f958f016061" translate="yes" xml:space="preserve">
          <source>Efficiency considerations lead me to compare for equality of properties as soon as possible. Then, only if that failed, look for the &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; these properties. The speed boost could be significant on large objects with lots of scalar properties.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Las consideraciones de eficiencia me llevan a comparar la igualdad de propiedades lo antes posible. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Entonces, s&amp;oacute;lo si eso fallaba, busca el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeof&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; estas propiedades. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El aumento de velocidad podr&amp;iacute;a ser significativo en objetos grandes con muchas propiedades escalares.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="abc88e00df0de286f549e328a9ce99486dd4b7da" translate="yes" xml:space="preserve">
          <source>First I have chosen to extend &lt;strong&gt;&lt;em&gt;Object&lt;/em&gt;&lt;/strong&gt; instead of &lt;strong&gt;&lt;em&gt;Object.prototype&lt;/em&gt;&lt;/strong&gt;, mostly because &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; could not be one of the objects of the comparison and that I believe that &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; should be a valid object to compare with another. There are also other legitimate concerns noted by others regarding the extension of &lt;strong&gt;&lt;em&gt;Object.prototype&lt;/em&gt;&lt;/strong&gt; regarding possible side effects on other's code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Primero, he elegido extender &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object en&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.prototype&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , principalmente porque &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nulo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no podr&amp;iacute;a ser uno de los objetos de la comparaci&amp;oacute;n y que creo que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nulo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; deber&amp;iacute;a ser un objeto v&amp;aacute;lido para comparar con otro. Tambi&amp;eacute;n hay otras preocupaciones leg&amp;iacute;timas observadas por otros con respecto a la extensi&amp;oacute;n de &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.prototype con&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; respecto a los posibles efectos secundarios en el c&amp;oacute;digo de otros.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0935e3809d0392bdda778efee263fc320be1ec0" translate="yes" xml:space="preserve">
          <source>Functions should be considered equal only if they share the same reference, not just the same code, because this would not take into account these functions prototype. So comparing the code string does not work to guaranty that they have the same prototype object.</source>
          <target state="translated">Las funciones deben considerarse iguales sólo si comparten la misma referencia,no sólo el mismo código,porque esto no tendría en cuenta el prototipo de estas funciones.Así que comparar la cadena de código no funciona para garantizar que tienen el mismo objeto prototipo.</target>
        </trans-unit>
        <trans-unit id="22b111b46a3361c249b44539dac1d1e100d1faa6" translate="yes" xml:space="preserve">
          <source>Here is my TestCase:</source>
          <target state="translated">Aquí está mi maletín de pruebas:</target>
        </trans-unit>
        <trans-unit id="a0bc695ce661864fce9243dd7b9e2e211df62e2d" translate="yes" xml:space="preserve">
          <source>Here is my commented solution in &lt;strong&gt;ES3&lt;/strong&gt; (gory details after the code):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; est&amp;aacute; mi soluci&amp;oacute;n comentada en &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES3&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (detalles sangrientos despu&amp;eacute;s del c&amp;oacute;digo):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be316566b8d9548696747983039edce712c7adcc" translate="yes" xml:space="preserve">
          <source>Here is my version, pretty much stuff from this thread is integrated (same counts for the test cases):</source>
          <target state="translated">Aquí está mi versión,casi todo lo de este hilo está integrado (lo mismo cuenta para los casos de prueba):</target>
        </trans-unit>
        <trans-unit id="b6154261db50cdfe96da6a8715e55620ea858848" translate="yes" xml:space="preserve">
          <source>I have modified a bit the code above. for me &lt;em&gt;0 !== false&lt;/em&gt; and &lt;em&gt;null !== undefined&lt;/em&gt;. If you do not need such strict check remove one &quot;&lt;em&gt;=&lt;/em&gt;&quot; sign in &quot;&lt;em&gt;this[p] !== x[p]&lt;/em&gt;&quot; inside the code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;He modificado un poco el c&amp;oacute;digo anterior. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para m&amp;iacute; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0! == falso&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nulo! == indefinido&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no necesita una verificaci&amp;oacute;n tan estricta, elimine un &quot; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;=&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; inicio de sesi&amp;oacute;n &quot; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;this [p]! == x [p]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; dentro del c&amp;oacute;digo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d671a0d6cef10dc994d06a7d7b332c5418489e07" translate="yes" xml:space="preserve">
          <source>I know that &lt;strong&gt;two objects are equal if they refer to the exact same object&lt;/strong&gt;, but is there a way to check if they have the same attributes' values?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;eacute; que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dos objetos son iguales si se refieren exactamente al mismo objeto&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero &amp;iquest;hay alguna manera de verificar si tienen los mismos valores de atributos?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3815f340fe05a2235f1faa3ab596446f40c46b1" translate="yes" xml:space="preserve">
          <source>I wrote this piece of code for object comparison, and it seems to work. check the assertions:</source>
          <target state="translated">Escribí este pedazo de código para la comparación de objetos,y parece que funciona.Comprueba las afirmaciones:</target>
        </trans-unit>
        <trans-unit id="6abc86ff6dbe56f0085f393d930c217fc4981950" translate="yes" xml:space="preserve">
          <source>If you work without the JSON library, maybe this will help you out:</source>
          <target state="translated">Si trabajas sin la biblioteca JSON,tal vez esto te ayude:</target>
        </trans-unit>
        <trans-unit id="88f16545d1ef50f4c7384c91f37e7a97f416c398" translate="yes" xml:space="preserve">
          <source>In developing this solution, I took a particular look at corner cases, efficiency, yet trying to yield a simple solution that works, hopefully with some elegance. JavaScript allows both &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; properties and objects have &lt;strong&gt;&lt;em&gt;prototypes chains&lt;/em&gt;&lt;/strong&gt; that can lead to very different behaviors if not checked.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Al desarrollar esta soluci&amp;oacute;n, ech&amp;eacute; un vistazo particular a las esquinas, la eficiencia, y al mismo tiempo trat&amp;eacute; de obtener una soluci&amp;oacute;n simple que funcione, con un poco de elegancia. JavaScript permite que las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedades y objetos &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nulos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; e &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indefinidos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; tengan &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadenas de prototipos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que pueden conducir a comportamientos muy diferentes si no se verifica.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf5a66fd2fd59ff487ed4947c43eadab478ceffd" translate="yes" xml:space="preserve">
          <source>Known issues (well, they have very low priority, probably you'll never notice them):</source>
          <target state="translated">Temas conocidos (bueno,tienen una prioridad muy baja,probablemente nunca los notará):</target>
        </trans-unit>
        <trans-unit id="535a89c16056f42bb46170394b4e3b33b0c28df0" translate="yes" xml:space="preserve">
          <source>No more that two loops are required, the first to check properties from the left object, the second to check properties from the right and verify only existence (not value), to catch these properties which are defined with the &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No se requieren m&amp;aacute;s de dos bucles, el primero para verificar las propiedades del objeto izquierdo, el segundo para verificar las propiedades desde el derecho y verificar solo la existencia (no el valor), para capturar estas propiedades que se definen con el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;valor &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indefinido&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="062f458df97e929f81cab9d11823312e5fceac2f" translate="yes" xml:space="preserve">
          <source>Note that testing methods with toString() is &lt;em&gt;absolutely not good enough&lt;/em&gt; but a method which would be acceptable is very hard because of the problem of whitespace having meaning or not, never mind synonym methods and methods producing the same result with different implementations. &lt;em&gt;And&lt;/em&gt; the problems of prototyping against Object in general.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta que los m&amp;eacute;todos de prueba con toString () &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no son lo suficientemente buenos,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pero un m&amp;eacute;todo que ser&amp;iacute;a aceptable es muy dif&amp;iacute;cil debido al problema de que el espacio en blanco tenga significado o no, no importa los m&amp;eacute;todos sin&amp;oacute;nimo y los m&amp;eacute;todos que producen el mismo resultado con diferentes implementaciones. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Y&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; los problemas de creaci&amp;oacute;n de prototipos contra Objeto en general.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b05ba4574611b5457addbc65acbe02a48ea29d00" translate="yes" xml:space="preserve">
          <source>Object comparison in JavaScript</source>
          <target state="translated">Comparación de objetos en JavaScript</target>
        </trans-unit>
        <trans-unit id="d8cc71082ba178a91e232172f85881190d9623c5" translate="yes" xml:space="preserve">
          <source>Objects are considered equivalent when</source>
          <target state="translated">Los objetos se consideran equivalentes cuando</target>
        </trans-unit>
        <trans-unit id="3f98f7989edc34a4c0f0b52b87d89c1f7175c8d3" translate="yes" xml:space="preserve">
          <source>Overall this code handles most corner cases in only 16 lines of code (without comments).</source>
          <target state="translated">En general,este código maneja la mayoría de los casos de esquina en sólo 16 líneas de código (sin comentarios).</target>
        </trans-unit>
        <trans-unit id="e797c7051568dacb3a4a42c92e3188ea6098f5c3" translate="yes" xml:space="preserve">
          <source>Simple way to compare ONE-LEVEL only objects.</source>
          <target state="translated">Una forma sencilla de comparar objetos de un solo nivel.</target>
        </trans-unit>
        <trans-unit id="cc6c829ce39167f8bc14f89a607c21f56fff659c" translate="yes" xml:space="preserve">
          <source>So the best I can do is to guess usage scenarios.</source>
          <target state="translated">Así que lo mejor que puedo hacer es adivinar los escenarios de uso.</target>
        </trans-unit>
        <trans-unit id="0d7703dd40c8f525ed006420cd574d13381f0573" translate="yes" xml:space="preserve">
          <source>Special care must taken to deal the possibility that JavaScript allows object properties can be set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, i.e. there exists properties which values are set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;. The above solution verifies that both objects have the same properties set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; to report equality. This can only be accomplished by checking the existence of properties using &lt;strong&gt;&lt;em&gt;Object.hasOwnProperty( property_name )&lt;/em&gt;&lt;/strong&gt;. Also note that &lt;strong&gt;&lt;em&gt;JSON.stringify()&lt;/em&gt;&lt;/strong&gt; removes properties that are set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, and that therefore comparisons using this form will ignore properties set to the value &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se debe tener especial cuidado para tratar la posibilidad de que JavaScript permita que las propiedades de los objetos se puedan establecer como &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indefinidas&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , es decir, existen propiedades cuyos valores se establecen como &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indefinidos&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . La soluci&amp;oacute;n anterior verifica que ambos objetos tienen las mismas propiedades establecidas en &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indefinido&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para informar la igualdad. Esto solo se puede lograr verificando la existencia de propiedades usando &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.hasOwnProperty (property_name)&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Tambi&amp;eacute;n tenga en cuenta que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.stringify ()&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; elimina las propiedades que est&amp;aacute;n configuradas como &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indefinidas&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y que, por lo tanto, las comparaciones que utilizan este formulario ignorar&amp;aacute;n las propiedades establecidas en el valor &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indefinido&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17873ed4a94c83339758abe3e46c7333007ebaab" translate="yes" xml:space="preserve">
          <source>The ORDER of the properties IS IMPORTANT, so this method will return false for following objects:</source>
          <target state="translated">El ORDEN de las propiedades ES IMPORTANTE,por lo que este método devolverá falso para los siguientes objetos:</target>
        </trans-unit>
        <trans-unit id="1e3370c17f063dd5710f157f323fcf2fd297dbd5" translate="yes" xml:space="preserve">
          <source>The following algorithm will deal with self-referential data structures, numbers, strings, dates, and of course plain nested javascript objects:</source>
          <target state="translated">El siguiente algoritmo se ocupará de las estructuras de datos autorreferenciales,números,cadenas,fechas y,por supuesto,de los objetos javascript anidados:</target>
        </trans-unit>
        <trans-unit id="45f6373f2e8775fc82beba90ebd886545741b3d0" translate="yes" xml:space="preserve">
          <source>The following way works for me, but is it the only possibility?</source>
          <target state="translated">La siguiente forma funciona para mí,pero ¿es la única posibilidad?</target>
        </trans-unit>
        <trans-unit id="e38d6b49ff07f1fc47b9b70014a0879d2b252cb9" translate="yes" xml:space="preserve">
          <source>The two objects should have the same &lt;strong&gt;&lt;em&gt;prototype chain&lt;/em&gt;&lt;/strong&gt;, not just the same properties. This can only be tested cross-browser by comparing the &lt;strong&gt;&lt;em&gt;constructor&lt;/em&gt;&lt;/strong&gt; of both objects for strict equality. ECMAScript 5 would allow to test their actual prototype using &lt;strong&gt;&lt;em&gt;Object.getPrototypeOf()&lt;/em&gt;&lt;/strong&gt;. Some web browsers also offer a &lt;strong&gt;__proto__&lt;/strong&gt; property that does the same thing. A possible improvement of the above code would allow to use one of these methods whenever available.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los dos objetos deben tener la misma &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cadena de prototipo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , no solo las mismas propiedades. Esto solo se puede probar entre navegadores comparando el &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constructor&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de ambos objetos para lograr una igualdad estricta. ECMAScript 5 permitir&amp;iacute;a probar su prototipo real usando &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.getPrototypeOf ()&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Algunos navegadores web tambi&amp;eacute;n ofrecen una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que hace lo mismo. Una posible mejora del c&amp;oacute;digo anterior permitir&amp;iacute;a usar uno de estos m&amp;eacute;todos siempre que est&amp;eacute; disponible.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f93f79c39c3f9b050c3a0bf8938c55c68ecfeb" translate="yes" xml:space="preserve">
          <source>The use of strict comparisons is paramount here because &lt;strong&gt;&lt;em&gt;2&lt;/em&gt;&lt;/strong&gt; should not be considered equal to &lt;strong&gt;&lt;em&gt;&quot;2.0000&quot;&lt;/em&gt;&lt;/strong&gt;, nor &lt;strong&gt;&lt;em&gt;false&lt;/em&gt;&lt;/strong&gt; should be considered equal to &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;em&gt;0&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El uso de comparaciones estrictas es primordial aqu&amp;iacute; porque &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no debe considerarse igual a &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;2.0000&quot;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ni &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;falso&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe considerarse igual a &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nulo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indefinido&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d24a2c8b63484aa5afad325ca858258cb32d5a1d" translate="yes" xml:space="preserve">
          <source>Then I have tested it with next objects:</source>
          <target state="translated">Entonces lo he probado con los siguientes objetos:</target>
        </trans-unit>
        <trans-unit id="f888bf1367f031cb254ca8d8e14e4417239ae8be" translate="yes" xml:space="preserve">
          <source>They are exactly equal per &lt;code&gt;===&lt;/code&gt; (String and Number are unwrapped first to ensure &lt;code&gt;42&lt;/code&gt; is equivalent to &lt;code&gt;Number(42)&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Son exactamente iguales por &lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (la cadena y el n&amp;uacute;mero se desenvuelven primero para garantizar que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;42&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sea ​​equivalente al &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(42)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30cd9fac81e2078ab625ca6182458f590bed8ffa" translate="yes" xml:space="preserve">
          <source>This is almost correct algorithm:</source>
          <target state="translated">Este es un algoritmo casi correcto:</target>
        </trans-unit>
        <trans-unit id="26e2d6d8c2f9705568a487e16ee03d106c3af563" translate="yes" xml:space="preserve">
          <source>Unfortunately there is no perfect way, unless you use &lt;code&gt;_proto_&lt;/code&gt; recursively and access all non-enumerable properties, but this works in Firefox only.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desafortunadamente, no hay una manera perfecta, a menos que use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_proto_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; recursivamente y acceda a todas las propiedades no enumerables, pero esto solo funciona en Firefox.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6350b1ccee2bb1ff8c723e5fc6339164c9828eae" translate="yes" xml:space="preserve">
          <source>What is the best way to compare objects in JavaScript?</source>
          <target state="translated">¿Cuál es la mejor manera de comparar objetos en JavaScript?</target>
        </trans-unit>
        <trans-unit id="9ed7307d04f8411fb4f775347b330fa5a5b517a0" translate="yes" xml:space="preserve">
          <source>Works when you have simple JSON-style objects without methods and DOM nodes inside:</source>
          <target state="translated">Funciona cuando tienes objetos simples al estilo JSON sin métodos y nodos DOM en su interior:</target>
        </trans-unit>
        <trans-unit id="6fe1cc79845bb2ec2662b3c4e3ced92064b7cc8d" translate="yes" xml:space="preserve">
          <source>a==b expected true; returned true</source>
          <target state="translated">a==b esperado verdadero;devuelto verdadero</target>
        </trans-unit>
        <trans-unit id="6ad2d80c6a66cc37e48733e605ce1da763ec3ba2" translate="yes" xml:space="preserve">
          <source>a==c expected false; returned false</source>
          <target state="translated">a==c esperada falsa;devuelta falsa</target>
        </trans-unit>
        <trans-unit id="c99017b5b35e2d32c91f769e19a63ddea3afe8dd" translate="yes" xml:space="preserve">
          <source>a==e expected false; returned false</source>
          <target state="translated">a==e esperado falso;devuelto falso</target>
        </trans-unit>
        <trans-unit id="ca60107f90be558705729ef40653e9518c7fd04d" translate="yes" xml:space="preserve">
          <source>c==d expected false; returned false</source>
          <target state="translated">c==d esperada falsa;devuelta falsa</target>
        </trans-unit>
        <trans-unit id="bb8683b0e905a7a38eaa291a65c82e0114fa2553" translate="yes" xml:space="preserve">
          <source>d==k expected false; returned false</source>
          <target state="translated">d==k esperada falsa;devuelta falsa</target>
        </trans-unit>
        <trans-unit id="24673fe81acbbdfefc21c902370e4a4cd2adb3d2" translate="yes" xml:space="preserve">
          <source>f==g expected true; returned true</source>
          <target state="translated">f==g esperado verdadero;devuelto verdadero</target>
        </trans-unit>
        <trans-unit id="f596f1a8f9b28d7602b180a0ee2ba7f1698dcdf0" translate="yes" xml:space="preserve">
          <source>functions may have identical text but refer to different closures</source>
          <target state="translated">Las funciones pueden tener un texto idéntico pero se refieren a cierres diferentes</target>
        </trans-unit>
        <trans-unit id="6ce4313e29bb7a5e697578f21097a584046a7c54" translate="yes" xml:space="preserve">
          <source>h==g expected false; returned false</source>
          <target state="translated">h==g esperada falsa;devuelta falsa</target>
        </trans-unit>
        <trans-unit id="8081369f92d01802ddacdd5d2133398dec3822fe" translate="yes" xml:space="preserve">
          <source>i==j expected true; returned true</source>
          <target state="translated">i==j esperado verdadero;devuelto verdadero</target>
        </trans-unit>
        <trans-unit id="f502dfad6f7642014bb96ff50f07e138105ec6ba" translate="yes" xml:space="preserve">
          <source>if you want to check for methods explicitly you can use the method.toSource() or method.toString() methods.</source>
          <target state="translated">si quieres comprobar los métodos explícitamente puedes usar los métodos method.toSource()o method.toString().</target>
        </trans-unit>
        <trans-unit id="7e265ea59aabc12ce2db974c07440f91817192c2" translate="yes" xml:space="preserve">
          <source>k==l expected false; returned false</source>
          <target state="translated">k==l esperado falso;devuelto falso</target>
        </trans-unit>
        <trans-unit id="8cadb7ecaff4eb3a29ce543aeea15209312eb59e" translate="yes" xml:space="preserve">
          <source>objects with different prototype structure but same projection</source>
          <target state="translated">objetos con diferente estructura de prototipo pero la misma proyección</target>
        </trans-unit>
        <trans-unit id="c59eb8f2cc72c05c4c499d231c96a338943a11fc" translate="yes" xml:space="preserve">
          <source>or they are both dates and have the same &lt;code&gt;valueOf()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;o son ambas fechas y tienen el mismo valor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;valueOf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b7b124725e8c02e554326ae76f50b1e03fec4c3" translate="yes" xml:space="preserve">
          <source>or they are both of the same type and not null and...</source>
          <target state="translated">o ambos son del mismo tipo y no son nulos y...</target>
        </trans-unit>
        <trans-unit id="3e0b5a3ad461e4f4886eda2d60aee23997e5771d" translate="yes" xml:space="preserve">
          <source>or, ignoring properties with &lt;code&gt;undefined&lt;/code&gt; value they have the same properties all of which are considered recursively equivalent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;o, ignorando las propiedades con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; valor &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;indefinido&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , tienen las mismas propiedades, todas las cuales se consideran recursivamente equivalentes.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bc52768b0ca8a8954223efcb6765f223bcbb0c2" translate="yes" xml:space="preserve">
          <source>they are not objects and are equal per &lt;code&gt;==&lt;/code&gt; (catches numbers/strings/booleans)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no son objetos y son iguales por &lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (captura n&amp;uacute;meros / cadenas / booleanos)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
