<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/1068834">
    <body>
      <group id="1068834">
        <trans-unit id="f537abe60a2d56f3eb6f2d641133e78785e36c02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1) Fast and limited.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1）快速且有限。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67d9c6541745025f4a435a47305fd29760d6a693" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2) Slow and more generic.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2）速度较慢，通用性更高。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a39d70b8fd84a410ae8b60aeffb6e629d146460d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Functions&lt;/strong&gt; are not considered identical by function text.  This test is insufficient because functions may have differing closures.  Functions are only considered equal if &lt;code&gt;===&lt;/code&gt; says so (but you could easily extend that equivalent relation should you choose to do so).</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文本不认为功能相同。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该测试不足，因为函数可能具有不同的闭包。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅当&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样说时，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数才被视为相等&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（但如果选择这样做，则可以轻松扩展该等效关系）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="590d1b6d707dfeca8f2672ed6d7a01489e2427ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Infinite loops&lt;/strong&gt;, potentially caused by circular datastructures, are avoided.  When &lt;code&gt;areEquivalent&lt;/code&gt; attempts to disprove equality and recurses into an object's properties to do so, it keeps track of the objects for which this sub-comparison is needed.  If equality can be disproved, then some reachable property path differs between the objects, and then there must be a shortest such reachable path, and that shortest reachable path cannot contain cycles present in both paths; i.e. it is OK to assume equality when recursively comparing objects.  The assumption is stored in a property &lt;code&gt;areEquivalent_Eq_91_2_34&lt;/code&gt;, which is deleted after use, but if the object graph already contains such a property, behavior is undefined.  The use of such a marker property is necessary because javascript doesn't support dictionaries using arbitrary objects as keys.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;避免了可能由循环数据结构引起的&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;无限循环&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。当&lt;/font&gt;&lt;/font&gt; &lt;code&gt;areEquivalent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尝试反证相等性并递归到对象的属性中时，它会跟踪需要进行子比较的对象。如果可以证明相等性，则对象之间的某些可达属性路径会有所不同，因此必须有一条最短的此类可达路径，并且最短的可达路径不能包含两个路径中都存在的循环；即，递归比较对象时可以假定相等。假设存储在属性&lt;/font&gt;&lt;/font&gt; &lt;code&gt;areEquivalent_Eq_91_2_34&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，使用后将其删除，但是如果对象图已经包含此类属性，则行为未定义。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必须使用这种marker属性，因为javascript不支持使用任意对象作为键的字典。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d1e852d3767ce7b26d1e032df80b28ddc8ac7f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tests:&lt;/strong&gt; passes tests are from &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/16788517/139361&quot;&gt;How to determine equality for two JavaScript objects?&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通过测试来自于&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/16788517/139361&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如何确定两个JavaScript对象的相等性？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="979e971205e3e808fc4e9597df8e3ab9f75057fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update (8/13/2015)&lt;/strong&gt;. I have implemented a better version, as the function &lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/lib/util/value_equals.js&quot;&gt;value_equals()&lt;/a&gt; that is faster, handles properly corner cases such as NaN and 0 different than -0, optionally enforcing objects' properties order and testing for cyclic references, backed by more than &lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/test/src/value_equals.coffee&quot;&gt;100 automated tests&lt;/a&gt; as part of the &lt;a href=&quot;https://github.com/ReactiveSets/toubkal&quot;&gt;Toubkal&lt;/a&gt; project test suite.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新（8/13/2015）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我实现了更好的版本，因为函数&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/lib/util/value_equals.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;value_equals（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更快，可以正确处理&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特殊&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;情况，例如NaN和0而不是-0，可以选择强制对象的属性顺序和测试循环引用，并由&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/test/src/value_equals.coffee&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;100多个自动测试支持&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ReactiveSets/toubkal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Toubkal&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;项目测试套件的一部分。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ced498bf3e2c2b4b55b57b30eab77dedac02853" translate="yes" xml:space="preserve">
          <source>Certainly not the only way - you could prototype a method (against Object here but I certainly wouldn't suggest using Object for live code) to replicate C#/Java style comparison methods.</source>
          <target state="translated">当然不是唯一的方法----你可以用一个方法(在这里针对Object,但我当然不建议用Object来做活代码)来复制C#Java风格的比较方法。</target>
        </trans-unit>
        <trans-unit id="55219b48cffc30535f00621b248bf07007a656ca" translate="yes" xml:space="preserve">
          <source>Compares objects without digging into prototypes, then compares properties' projections recursively, and also compares constructors.</source>
          <target state="translated">在不挖掘原型的情况下对对象进行比较,然后递归地比较属性的投影,同时也比较构造函数。</target>
        </trans-unit>
        <trans-unit id="a3a664115fa0a2bb00a29ef557b6cbc531054ea0" translate="yes" xml:space="preserve">
          <source>Edit, since a general example seems to be expected:</source>
          <target state="translated">编辑,因为一般的例子似乎是可以期待的。</target>
        </trans-unit>
        <trans-unit id="3c740021f2c39afe5be11acb93e48f958f016061" translate="yes" xml:space="preserve">
          <source>Efficiency considerations lead me to compare for equality of properties as soon as possible. Then, only if that failed, look for the &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; these properties. The speed boost could be significant on large objects with lots of scalar properties.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出于效率方面的考虑，我希望尽快比较性能是否相等。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后，只有失败，认准&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的typeof&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于具有许多标量属性的大型对象，速度提升可能非常重要。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="abc88e00df0de286f549e328a9ce99486dd4b7da" translate="yes" xml:space="preserve">
          <source>First I have chosen to extend &lt;strong&gt;&lt;em&gt;Object&lt;/em&gt;&lt;/strong&gt; instead of &lt;strong&gt;&lt;em&gt;Object.prototype&lt;/em&gt;&lt;/strong&gt;, mostly because &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; could not be one of the objects of the comparison and that I believe that &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; should be a valid object to compare with another. There are also other legitimate concerns noted by others regarding the extension of &lt;strong&gt;&lt;em&gt;Object.prototype&lt;/em&gt;&lt;/strong&gt; regarding possible side effects on other's code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先，我选择扩展&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.prototype&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，主要是因为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不能是比较的对象之一，而且我认为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;应该是可以与另一个对象进行比较的有效对象。其他人还注意到其他有关&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.prototype&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;扩展的合法问题，涉及对其他人&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码的可能副作用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0935e3809d0392bdda778efee263fc320be1ec0" translate="yes" xml:space="preserve">
          <source>Functions should be considered equal only if they share the same reference, not just the same code, because this would not take into account these functions prototype. So comparing the code string does not work to guaranty that they have the same prototype object.</source>
          <target state="translated">只有当函数共享相同的引用时,才应该被认为是平等的,而不仅仅是相同的代码,因为这将不会考虑到这些函数的原型。所以比较代码字符串并不能保证它们有相同的原型对象。</target>
        </trans-unit>
        <trans-unit id="22b111b46a3361c249b44539dac1d1e100d1faa6" translate="yes" xml:space="preserve">
          <source>Here is my TestCase:</source>
          <target state="translated">下面是我的TestCase。</target>
        </trans-unit>
        <trans-unit id="a0bc695ce661864fce9243dd7b9e2e211df62e2d" translate="yes" xml:space="preserve">
          <source>Here is my commented solution in &lt;strong&gt;ES3&lt;/strong&gt; (gory details after the code):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是我在&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES3中的&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;评论解决方案&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（代码后有详细信息）：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be316566b8d9548696747983039edce712c7adcc" translate="yes" xml:space="preserve">
          <source>Here is my version, pretty much stuff from this thread is integrated (same counts for the test cases):</source>
          <target state="translated">这是我的版本,基本上这个线程中的东西都集成了(测试用例也一样)。</target>
        </trans-unit>
        <trans-unit id="b6154261db50cdfe96da6a8715e55620ea858848" translate="yes" xml:space="preserve">
          <source>I have modified a bit the code above. for me &lt;em&gt;0 !== false&lt;/em&gt; and &lt;em&gt;null !== undefined&lt;/em&gt;. If you do not need such strict check remove one &quot;&lt;em&gt;=&lt;/em&gt;&quot; sign in &quot;&lt;em&gt;this[p] !== x[p]&lt;/em&gt;&quot; inside the code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我已经修改了上面的代码。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对我来说&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0！== false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null！== undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不需要这样严格的检查，请在代码中删除一个&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;=&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;登录&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;this [p]！== x [p]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;rdquo;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d671a0d6cef10dc994d06a7d7b332c5418489e07" translate="yes" xml:space="preserve">
          <source>I know that &lt;strong&gt;two objects are equal if they refer to the exact same object&lt;/strong&gt;, but is there a way to check if they have the same attributes' values?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我知道如果&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两个对象引用的是完全相同的对象&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则它们相等&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但是有没有办法检查它们是否具有相同的属性值？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3815f340fe05a2235f1faa3ab596446f40c46b1" translate="yes" xml:space="preserve">
          <source>I wrote this piece of code for object comparison, and it seems to work. check the assertions:</source>
          <target state="translated">我写的这段代码用于对象比较,似乎还能用。</target>
        </trans-unit>
        <trans-unit id="6abc86ff6dbe56f0085f393d930c217fc4981950" translate="yes" xml:space="preserve">
          <source>If you work without the JSON library, maybe this will help you out:</source>
          <target state="translated">如果你在没有JSON库的情况下工作,也许这个可以帮到你。</target>
        </trans-unit>
        <trans-unit id="88f16545d1ef50f4c7384c91f37e7a97f416c398" translate="yes" xml:space="preserve">
          <source>In developing this solution, I took a particular look at corner cases, efficiency, yet trying to yield a simple solution that works, hopefully with some elegance. JavaScript allows both &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; properties and objects have &lt;strong&gt;&lt;em&gt;prototypes chains&lt;/em&gt;&lt;/strong&gt; that can lead to very different behaviors if not checked.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在开发此解决方案时，我特别关注了极端情况，效率，但尝试产生一个可行的简单解决方案，希望它能带来一些优雅。 JavaScript允许&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，并且对象具有&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型链&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，如果不进行检查，它们会导致非常不同的行为。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf5a66fd2fd59ff487ed4947c43eadab478ceffd" translate="yes" xml:space="preserve">
          <source>Known issues (well, they have very low priority, probably you'll never notice them):</source>
          <target state="translated">已知的问题(嗯,它们的优先级很低,可能你永远不会注意到它们)。</target>
        </trans-unit>
        <trans-unit id="535a89c16056f42bb46170394b4e3b33b0c28df0" translate="yes" xml:space="preserve">
          <source>No more that two loops are required, the first to check properties from the left object, the second to check properties from the right and verify only existence (not value), to catch these properties which are defined with the &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不再需要两个循环，第一个循环检查左侧对象的属性，第二个循环从右侧检查属性并仅验证存在性（不是值），以捕获使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义的这些属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="062f458df97e929f81cab9d11823312e5fceac2f" translate="yes" xml:space="preserve">
          <source>Note that testing methods with toString() is &lt;em&gt;absolutely not good enough&lt;/em&gt; but a method which would be acceptable is very hard because of the problem of whitespace having meaning or not, never mind synonym methods and methods producing the same result with different implementations. &lt;em&gt;And&lt;/em&gt; the problems of prototyping against Object in general.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请注意，使用toString（）进行测试的方法&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;绝对不够好，&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但由于空白是否有意义，问题是很难接受的，不要介意同义词方法和使用不同实现产生相同结果的方法。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以及&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一般针对对象的原型问题。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b05ba4574611b5457addbc65acbe02a48ea29d00" translate="yes" xml:space="preserve">
          <source>Object comparison in JavaScript</source>
          <target state="translated">JavaScript中的对象比较</target>
        </trans-unit>
        <trans-unit id="d8cc71082ba178a91e232172f85881190d9623c5" translate="yes" xml:space="preserve">
          <source>Objects are considered equivalent when</source>
          <target state="translated">在下列情况下,物体被视为等价物</target>
        </trans-unit>
        <trans-unit id="3f98f7989edc34a4c0f0b52b87d89c1f7175c8d3" translate="yes" xml:space="preserve">
          <source>Overall this code handles most corner cases in only 16 lines of code (without comments).</source>
          <target state="translated">总的来说,这段代码只用16行代码(没有注释)就处理了大部分的转角情况。</target>
        </trans-unit>
        <trans-unit id="e797c7051568dacb3a4a42c92e3188ea6098f5c3" translate="yes" xml:space="preserve">
          <source>Simple way to compare ONE-LEVEL only objects.</source>
          <target state="translated">只比较单层对象的简单方法。</target>
        </trans-unit>
        <trans-unit id="cc6c829ce39167f8bc14f89a607c21f56fff659c" translate="yes" xml:space="preserve">
          <source>So the best I can do is to guess usage scenarios.</source>
          <target state="translated">所以,我能做的最好的就是猜测使用场景。</target>
        </trans-unit>
        <trans-unit id="0d7703dd40c8f525ed006420cd574d13381f0573" translate="yes" xml:space="preserve">
          <source>Special care must taken to deal the possibility that JavaScript allows object properties can be set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, i.e. there exists properties which values are set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;. The above solution verifies that both objects have the same properties set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; to report equality. This can only be accomplished by checking the existence of properties using &lt;strong&gt;&lt;em&gt;Object.hasOwnProperty( property_name )&lt;/em&gt;&lt;/strong&gt;. Also note that &lt;strong&gt;&lt;em&gt;JSON.stringify()&lt;/em&gt;&lt;/strong&gt; removes properties that are set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, and that therefore comparisons using this form will ignore properties set to the value &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必须特别注意处理JavaScript允许将对象属性设置为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的可能性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，即存在将值设置为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。上面的解决方案验证了两个对象都具有设置为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的相同属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以报告相等性。这只能通过使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.hasOwnProperty（property_name）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;检查属性是否存在来实现&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。还要注意，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.stringify（）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会删除设置为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此使用这种形式的比较将忽略设置为&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined的&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17873ed4a94c83339758abe3e46c7333007ebaab" translate="yes" xml:space="preserve">
          <source>The ORDER of the properties IS IMPORTANT, so this method will return false for following objects:</source>
          <target state="translated">属性的顺序很重要,所以这个方法对于以下对象将返回false。</target>
        </trans-unit>
        <trans-unit id="1e3370c17f063dd5710f157f323fcf2fd297dbd5" translate="yes" xml:space="preserve">
          <source>The following algorithm will deal with self-referential data structures, numbers, strings, dates, and of course plain nested javascript objects:</source>
          <target state="translated">下面的算法将处理自引用数据结构、数字、字符串、日期,当然还有纯嵌套的javascript对象。</target>
        </trans-unit>
        <trans-unit id="45f6373f2e8775fc82beba90ebd886545741b3d0" translate="yes" xml:space="preserve">
          <source>The following way works for me, but is it the only possibility?</source>
          <target state="translated">下面的方法对我来说是可行的,但这是唯一的可能性吗?</target>
        </trans-unit>
        <trans-unit id="e38d6b49ff07f1fc47b9b70014a0879d2b252cb9" translate="yes" xml:space="preserve">
          <source>The two objects should have the same &lt;strong&gt;&lt;em&gt;prototype chain&lt;/em&gt;&lt;/strong&gt;, not just the same properties. This can only be tested cross-browser by comparing the &lt;strong&gt;&lt;em&gt;constructor&lt;/em&gt;&lt;/strong&gt; of both objects for strict equality. ECMAScript 5 would allow to test their actual prototype using &lt;strong&gt;&lt;em&gt;Object.getPrototypeOf()&lt;/em&gt;&lt;/strong&gt;. Some web browsers also offer a &lt;strong&gt;__proto__&lt;/strong&gt; property that does the same thing. A possible improvement of the above code would allow to use one of these methods whenever available.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这两个对象应该具有相同的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;原型链&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而不仅仅是相同的属性。只能通过比较&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两个对象&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;构造函数&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是否严格相等&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;才能跨浏览器进行测试&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 ECMAScript 5将允许使用&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.getPrototypeOf（）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;测试其实际原型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。某些Web浏览器还提供了&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;具有相同功能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性。对上述代码的可能改进将允许在可用时使用这些方法之一。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f93f79c39c3f9b050c3a0bf8938c55c68ecfeb" translate="yes" xml:space="preserve">
          <source>The use of strict comparisons is paramount here because &lt;strong&gt;&lt;em&gt;2&lt;/em&gt;&lt;/strong&gt; should not be considered equal to &lt;strong&gt;&lt;em&gt;&quot;2.0000&quot;&lt;/em&gt;&lt;/strong&gt;, nor &lt;strong&gt;&lt;em&gt;false&lt;/em&gt;&lt;/strong&gt; should be considered equal to &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;em&gt;0&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这里使用严格比较是最重要的，因为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不应将&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;视为等于&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo; 2.0000&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，也不&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;应将&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;视为等于&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d24a2c8b63484aa5afad325ca858258cb32d5a1d" translate="yes" xml:space="preserve">
          <source>Then I have tested it with next objects:</source>
          <target state="translated">然后我用下一个对象进行了测试。</target>
        </trans-unit>
        <trans-unit id="f888bf1367f031cb254ca8d8e14e4417239ae8be" translate="yes" xml:space="preserve">
          <source>They are exactly equal per &lt;code&gt;===&lt;/code&gt; (String and Number are unwrapped first to ensure &lt;code&gt;42&lt;/code&gt; is equivalent to &lt;code&gt;Number(42)&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们完全相等&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（首先解开字符串和数字以确保&lt;/font&gt;&lt;/font&gt; &lt;code&gt;42&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(42)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30cd9fac81e2078ab625ca6182458f590bed8ffa" translate="yes" xml:space="preserve">
          <source>This is almost correct algorithm:</source>
          <target state="translated">这个算法几乎是正确的算法。</target>
        </trans-unit>
        <trans-unit id="26e2d6d8c2f9705568a487e16ee03d106c3af563" translate="yes" xml:space="preserve">
          <source>Unfortunately there is no perfect way, unless you use &lt;code&gt;_proto_&lt;/code&gt; recursively and access all non-enumerable properties, but this works in Firefox only.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不幸的是，没有完美的方法，除非您&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;递归&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_proto_&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并访问所有不可枚举的属性，但这仅在Firefox中有效。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6350b1ccee2bb1ff8c723e5fc6339164c9828eae" translate="yes" xml:space="preserve">
          <source>What is the best way to compare objects in JavaScript?</source>
          <target state="translated">JavaScript中比较对象的最佳方法是什么?</target>
        </trans-unit>
        <trans-unit id="9ed7307d04f8411fb4f775347b330fa5a5b517a0" translate="yes" xml:space="preserve">
          <source>Works when you have simple JSON-style objects without methods and DOM nodes inside:</source>
          <target state="translated">当你有简单的JSON风格的对象,而没有方法和DOM节点的时候,可以使用。</target>
        </trans-unit>
        <trans-unit id="6fe1cc79845bb2ec2662b3c4e3ced92064b7cc8d" translate="yes" xml:space="preserve">
          <source>a==b expected true; returned true</source>
          <target state="translated">a===b 预期为true;返回true</target>
        </trans-unit>
        <trans-unit id="6ad2d80c6a66cc37e48733e605ce1da763ec3ba2" translate="yes" xml:space="preserve">
          <source>a==c expected false; returned false</source>
          <target state="translated">a===c 预期为false;返回false</target>
        </trans-unit>
        <trans-unit id="c99017b5b35e2d32c91f769e19a63ddea3afe8dd" translate="yes" xml:space="preserve">
          <source>a==e expected false; returned false</source>
          <target state="translated">a===e 预期为false;返回false</target>
        </trans-unit>
        <trans-unit id="ca60107f90be558705729ef40653e9518c7fd04d" translate="yes" xml:space="preserve">
          <source>c==d expected false; returned false</source>
          <target state="translated">c===d 预期为false;返回false</target>
        </trans-unit>
        <trans-unit id="bb8683b0e905a7a38eaa291a65c82e0114fa2553" translate="yes" xml:space="preserve">
          <source>d==k expected false; returned false</source>
          <target state="translated">d===k预期为false;返回false</target>
        </trans-unit>
        <trans-unit id="24673fe81acbbdfefc21c902370e4a4cd2adb3d2" translate="yes" xml:space="preserve">
          <source>f==g expected true; returned true</source>
          <target state="translated">f===g 预期为true;返回true</target>
        </trans-unit>
        <trans-unit id="f596f1a8f9b28d7602b180a0ee2ba7f1698dcdf0" translate="yes" xml:space="preserve">
          <source>functions may have identical text but refer to different closures</source>
          <target state="translated">函数可能有相同的文字,但指的是不同的闭合点。</target>
        </trans-unit>
        <trans-unit id="6ce4313e29bb7a5e697578f21097a584046a7c54" translate="yes" xml:space="preserve">
          <source>h==g expected false; returned false</source>
          <target state="translated">h===g预期为false;返回false</target>
        </trans-unit>
        <trans-unit id="8081369f92d01802ddacdd5d2133398dec3822fe" translate="yes" xml:space="preserve">
          <source>i==j expected true; returned true</source>
          <target state="translated">i===j 预期为true;返回true</target>
        </trans-unit>
        <trans-unit id="f502dfad6f7642014bb96ff50f07e138105ec6ba" translate="yes" xml:space="preserve">
          <source>if you want to check for methods explicitly you can use the method.toSource() or method.toString() methods.</source>
          <target state="translated">如果你想明确地检查方法,你可以使用 method.toSource()或 method.toString()方法。</target>
        </trans-unit>
        <trans-unit id="7e265ea59aabc12ce2db974c07440f91817192c2" translate="yes" xml:space="preserve">
          <source>k==l expected false; returned false</source>
          <target state="translated">k===l 预期为false;返回false</target>
        </trans-unit>
        <trans-unit id="8cadb7ecaff4eb3a29ce543aeea15209312eb59e" translate="yes" xml:space="preserve">
          <source>objects with different prototype structure but same projection</source>
          <target state="translated">不同原型结构但相同投影的对象</target>
        </trans-unit>
        <trans-unit id="c59eb8f2cc72c05c4c499d231c96a338943a11fc" translate="yes" xml:space="preserve">
          <source>or they are both dates and have the same &lt;code&gt;valueOf()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或者它们都是日期，并且具有相同的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;valueOf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b7b124725e8c02e554326ae76f50b1e03fec4c3" translate="yes" xml:space="preserve">
          <source>or they are both of the same type and not null and...</source>
          <target state="translated">或者它们都是同一类型的,而不是空的和.....</target>
        </trans-unit>
        <trans-unit id="3e0b5a3ad461e4f4886eda2d60aee23997e5771d" translate="yes" xml:space="preserve">
          <source>or, ignoring properties with &lt;code&gt;undefined&lt;/code&gt; value they have the same properties all of which are considered recursively equivalent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或者，忽略具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;值的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;属性，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们具有相同的属性，所有这些属性都被视为递归等效。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bc52768b0ca8a8954223efcb6765f223bcbb0c2" translate="yes" xml:space="preserve">
          <source>they are not objects and are equal per &lt;code&gt;==&lt;/code&gt; (catches numbers/strings/booleans)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们不是对象，并且每个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;相等&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（捕获数字/字符串/布尔值）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
