<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1068834">
    <body>
      <group id="1068834">
        <trans-unit id="f537abe60a2d56f3eb6f2d641133e78785e36c02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;1) Fast and limited.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1）高速で制限があります。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67d9c6541745025f4a435a47305fd29760d6a693" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;2) Slow and more generic.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2）遅く、より一般的です。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a39d70b8fd84a410ae8b60aeffb6e629d146460d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Functions&lt;/strong&gt; are not considered identical by function text.  This test is insufficient because functions may have differing closures.  Functions are only considered equal if &lt;code&gt;===&lt;/code&gt; says so (but you could easily extend that equivalent relation should you choose to do so).</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、関数テキストでは同一とは見なされません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数のクロージャーが異なる可能性があるため、このテストは不十分です。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がそうである&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合にのみ、関数は等しいと見なされ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます（ただし、そうすることを選択した場合、同等の関係を簡単に拡張できます）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="590d1b6d707dfeca8f2672ed6d7a01489e2427ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Infinite loops&lt;/strong&gt;, potentially caused by circular datastructures, are avoided.  When &lt;code&gt;areEquivalent&lt;/code&gt; attempts to disprove equality and recurses into an object's properties to do so, it keeps track of the objects for which this sub-comparison is needed.  If equality can be disproved, then some reachable property path differs between the objects, and then there must be a shortest such reachable path, and that shortest reachable path cannot contain cycles present in both paths; i.e. it is OK to assume equality when recursively comparing objects.  The assumption is stored in a property &lt;code&gt;areEquivalent_Eq_91_2_34&lt;/code&gt;, which is deleted after use, but if the object graph already contains such a property, behavior is undefined.  The use of such a marker property is necessary because javascript doesn't support dictionaries using arbitrary objects as keys.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;循環データ構造によって潜在的に引き起こされる&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;無限ループ&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は回避されます。とき&lt;/font&gt;&lt;/font&gt; &lt;code&gt;areEquivalent&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのプロパティへの反証平等と再帰的に試行がそうするように、それはこのサブ比較が必要とされているオブジェクトを追跡します。同等性が証明できない場合、到達可能なプロパティパスの一部がオブジェクト間で異なり、到達可能な最短のパスが存在する必要があり、その最短の到達可能なパスには両方のパスに存在するサイクルを含めることはできません。つまり、オブジェクトを再帰的に比較する場合、同等であると想定しても問題ありません。仮定はプロパティ&lt;/font&gt; &lt;code&gt;areEquivalent_Eq_91_2_34&lt;/code&gt; に&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保存されます&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、使用後に削除されますが、オブジェクトグラフにそのようなプロパティがすでに含まれている場合、動作は未定義です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptは任意のオブジェクトをキーとして使用する辞書をサポートしていないため、このようなマーカープロパティの使用が必要です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d1e852d3767ce7b26d1e032df80b28ddc8ac7f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tests:&lt;/strong&gt; passes tests are from &lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/16788517/139361&quot;&gt;How to determine equality for two JavaScript objects?&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テスト：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;パステストは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://stackoverflow.com/a/16788517/139361&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、2つのJavaScriptオブジェクトの等価性を判断する方法からのものですか？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="979e971205e3e808fc4e9597df8e3ab9f75057fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update (8/13/2015)&lt;/strong&gt;. I have implemented a better version, as the function &lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/lib/util/value_equals.js&quot;&gt;value_equals()&lt;/a&gt; that is faster, handles properly corner cases such as NaN and 0 different than -0, optionally enforcing objects' properties order and testing for cyclic references, backed by more than &lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/test/src/value_equals.coffee&quot;&gt;100 automated tests&lt;/a&gt; as part of the &lt;a href=&quot;https://github.com/ReactiveSets/toubkal&quot;&gt;Toubkal&lt;/a&gt; project test suite.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;更新（2015年8月13日）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;より高速な&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/lib/util/value_equals.js&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;value_equals（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がNaNや-0とは異なる0などのコーナーケースを適切に処理し、オプションでオブジェクトのプロパティの順序を適用し、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ReactiveSets/toubkal/blob/master/test/src/value_equals.coffee&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;100を超える自動テストに&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;裏打ちされた循環参照をテストするため&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、より良いバージョンを実装しました&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/ReactiveSets/toubkal&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Toubkal&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロジェクトテストスイートの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一部として&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5ced498bf3e2c2b4b55b57b30eab77dedac02853" translate="yes" xml:space="preserve">
          <source>Certainly not the only way - you could prototype a method (against Object here but I certainly wouldn't suggest using Object for live code) to replicate C#/Java style comparison methods.</source>
          <target state="translated">確かに唯一の方法ではありません-C#Java スタイルの比較メソッドを複製するために、メソッドをプロトタイプ化することができます (ここでは Object に対してですが、ライブコードに Object を使用することは確かにお勧めしません)。</target>
        </trans-unit>
        <trans-unit id="55219b48cffc30535f00621b248bf07007a656ca" translate="yes" xml:space="preserve">
          <source>Compares objects without digging into prototypes, then compares properties' projections recursively, and also compares constructors.</source>
          <target state="translated">プロトタイプを掘り下げずにオブジェクトを比較し、プロパティの投影を再帰的に比較し、コンストラクタも比較します。</target>
        </trans-unit>
        <trans-unit id="a3a664115fa0a2bb00a29ef557b6cbc531054ea0" translate="yes" xml:space="preserve">
          <source>Edit, since a general example seems to be expected:</source>
          <target state="translated">一般的な例が予想されるようなので編集。</target>
        </trans-unit>
        <trans-unit id="3c740021f2c39afe5be11acb93e48f958f016061" translate="yes" xml:space="preserve">
          <source>Efficiency considerations lead me to compare for equality of properties as soon as possible. Then, only if that failed, look for the &lt;strong&gt;&lt;em&gt;typeof&lt;/em&gt;&lt;/strong&gt; these properties. The speed boost could be significant on large objects with lots of scalar properties.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;効率を考慮して、できるだけ早くプロパティの同等性を比較します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、それが失敗した場合にのみ、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらのプロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typeofを&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;探し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多くのスカラープロパティを持つ大きなオブジェクトでは、速度が大幅に向上する可能性があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="abc88e00df0de286f549e328a9ce99486dd4b7da" translate="yes" xml:space="preserve">
          <source>First I have chosen to extend &lt;strong&gt;&lt;em&gt;Object&lt;/em&gt;&lt;/strong&gt; instead of &lt;strong&gt;&lt;em&gt;Object.prototype&lt;/em&gt;&lt;/strong&gt;, mostly because &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; could not be one of the objects of the comparison and that I believe that &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; should be a valid object to compare with another. There are also other legitimate concerns noted by others regarding the extension of &lt;strong&gt;&lt;em&gt;Object.prototype&lt;/em&gt;&lt;/strong&gt; regarding possible side effects on other's code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まず、私は延長することを選択した&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の代わり&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のObject.prototypeを&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主な理由は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nullが&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較の目的の一つであることができなかったと私は信じていることを&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nullは&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他と比較するための有効なオブジェクトでなければなりません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;他のコードへの起こり得る副作用に関する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.prototype&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の拡張に関して他の人が指摘した他の正当な懸念もあり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e0935e3809d0392bdda778efee263fc320be1ec0" translate="yes" xml:space="preserve">
          <source>Functions should be considered equal only if they share the same reference, not just the same code, because this would not take into account these functions prototype. So comparing the code string does not work to guaranty that they have the same prototype object.</source>
          <target state="translated">関数は、同じコードではなく、同じ参照を共有している場合にのみ等しいとみなされるべきであり、それはこれらの関数のプロトタイプを考慮しないからです。そのため、コードの文字列を比較しても、同じプロトタイプオブジェクトを持っていることを保証することはできません。</target>
        </trans-unit>
        <trans-unit id="22b111b46a3361c249b44539dac1d1e100d1faa6" translate="yes" xml:space="preserve">
          <source>Here is my TestCase:</source>
          <target state="translated">これが私のテストケースです。</target>
        </trans-unit>
        <trans-unit id="a0bc695ce661864fce9243dd7b9e2e211df62e2d" translate="yes" xml:space="preserve">
          <source>Here is my commented solution in &lt;strong&gt;ES3&lt;/strong&gt; (gory details after the code):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES3の&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コメント付きソリューションは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のとおりです（コードの後に​​詳細が表示されます）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="be316566b8d9548696747983039edce712c7adcc" translate="yes" xml:space="preserve">
          <source>Here is my version, pretty much stuff from this thread is integrated (same counts for the test cases):</source>
          <target state="translated">ここに私のバージョンは、このスレッドからかなり多くのものが統合されています(テストケースのための同じカウント)。</target>
        </trans-unit>
        <trans-unit id="b6154261db50cdfe96da6a8715e55620ea858848" translate="yes" xml:space="preserve">
          <source>I have modified a bit the code above. for me &lt;em&gt;0 !== false&lt;/em&gt; and &lt;em&gt;null !== undefined&lt;/em&gt;. If you do not need such strict check remove one &quot;&lt;em&gt;=&lt;/em&gt;&quot; sign in &quot;&lt;em&gt;this[p] !== x[p]&lt;/em&gt;&quot; inside the code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記のコードを少し変更しました。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私にとって&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;！== false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;および&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null！== undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このような厳格なチェックが必要ない場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、コード内の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;=&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」サインイン「&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;this [p]！== x [p]&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;削除してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d671a0d6cef10dc994d06a7d7b332c5418489e07" translate="yes" xml:space="preserve">
          <source>I know that &lt;strong&gt;two objects are equal if they refer to the exact same object&lt;/strong&gt;, but is there a way to check if they have the same attributes' values?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つのオブジェクトがまったく同じオブジェクトを参照している場合は等しい&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことを知ってい&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ますが&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、同じ属性の値があるかどうかを確認する方法はありますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3815f340fe05a2235f1faa3ab596446f40c46b1" translate="yes" xml:space="preserve">
          <source>I wrote this piece of code for object comparison, and it seems to work. check the assertions:</source>
          <target state="translated">オブジェクト比較のためにこのコードを書いてみました。</target>
        </trans-unit>
        <trans-unit id="6abc86ff6dbe56f0085f393d930c217fc4981950" translate="yes" xml:space="preserve">
          <source>If you work without the JSON library, maybe this will help you out:</source>
          <target state="translated">JSONライブラリを使わずに仕事をしている方は、これを使えば解決するかもしれません。</target>
        </trans-unit>
        <trans-unit id="88f16545d1ef50f4c7384c91f37e7a97f416c398" translate="yes" xml:space="preserve">
          <source>In developing this solution, I took a particular look at corner cases, efficiency, yet trying to yield a simple solution that works, hopefully with some elegance. JavaScript allows both &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; properties and objects have &lt;strong&gt;&lt;em&gt;prototypes chains&lt;/em&gt;&lt;/strong&gt; that can lead to very different behaviors if not checked.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このソリューションを開発するにあたり、私はコーナーケース、効率性に特に注意を払いましたが、うまくいけば、上品にうまくいくシンプルなソリューションを生み出そうとしました。 JavaScriptでは、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未定義の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;両方の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が許可され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、オブジェクトには&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプチェーン&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;があり、チェックしないと非常に異なる動作を引き起こす可能性があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bf5a66fd2fd59ff487ed4947c43eadab478ceffd" translate="yes" xml:space="preserve">
          <source>Known issues (well, they have very low priority, probably you'll never notice them):</source>
          <target state="translated">既知の問題(まあ、優先順位が非常に低いので、おそらく気づくことはないでしょう)。</target>
        </trans-unit>
        <trans-unit id="535a89c16056f42bb46170394b4e3b33b0c28df0" translate="yes" xml:space="preserve">
          <source>No more that two loops are required, the first to check properties from the left object, the second to check properties from the right and verify only existence (not value), to catch these properties which are defined with the &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つ以上のループは必要ありません。1つ目は左のオブジェクトからプロパティをチェックし、2つ目は右からプロパティをチェックして存在（値ではなく）のみを確認し、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未定義の&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定義されているこれらのプロパティをキャッチし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="062f458df97e929f81cab9d11823312e5fceac2f" translate="yes" xml:space="preserve">
          <source>Note that testing methods with toString() is &lt;em&gt;absolutely not good enough&lt;/em&gt; but a method which would be acceptable is very hard because of the problem of whitespace having meaning or not, never mind synonym methods and methods producing the same result with different implementations. &lt;em&gt;And&lt;/em&gt; the problems of prototyping against Object in general.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;toString（）を使用したメソッドのテストは&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;完全に十分で&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はあり&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、空白の意味があるかどうかの問題があるため、許容できるメソッドは非常に難しいことに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、一般的にオブジェクトに対するプロトタイピングの問題。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b05ba4574611b5457addbc65acbe02a48ea29d00" translate="yes" xml:space="preserve">
          <source>Object comparison in JavaScript</source>
          <target state="translated">JavaScriptでのオブジェクト比較</target>
        </trans-unit>
        <trans-unit id="d8cc71082ba178a91e232172f85881190d9623c5" translate="yes" xml:space="preserve">
          <source>Objects are considered equivalent when</source>
          <target state="translated">オブジェクトは以下の場合に等価とみなされます。</target>
        </trans-unit>
        <trans-unit id="3f98f7989edc34a4c0f0b52b87d89c1f7175c8d3" translate="yes" xml:space="preserve">
          <source>Overall this code handles most corner cases in only 16 lines of code (without comments).</source>
          <target state="translated">全体的にこのコードは、わずか16行のコード(コメントなし)でほとんどのコーナーケースを処理します。</target>
        </trans-unit>
        <trans-unit id="e797c7051568dacb3a4a42c92e3188ea6098f5c3" translate="yes" xml:space="preserve">
          <source>Simple way to compare ONE-LEVEL only objects.</source>
          <target state="translated">ONE-LEVELのみのオブジェクトを比較するシンプルな方法。</target>
        </trans-unit>
        <trans-unit id="cc6c829ce39167f8bc14f89a607c21f56fff659c" translate="yes" xml:space="preserve">
          <source>So the best I can do is to guess usage scenarios.</source>
          <target state="translated">だから私にできることは、利用シーンを推測することです。</target>
        </trans-unit>
        <trans-unit id="0d7703dd40c8f525ed006420cd574d13381f0573" translate="yes" xml:space="preserve">
          <source>Special care must taken to deal the possibility that JavaScript allows object properties can be set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, i.e. there exists properties which values are set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;. The above solution verifies that both objects have the same properties set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; to report equality. This can only be accomplished by checking the existence of properties using &lt;strong&gt;&lt;em&gt;Object.hasOwnProperty( property_name )&lt;/em&gt;&lt;/strong&gt;. Also note that &lt;strong&gt;&lt;em&gt;JSON.stringify()&lt;/em&gt;&lt;/strong&gt; removes properties that are set to &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, and that therefore comparisons using this form will ignore properties set to the value &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptがオブジェクトプロパティを&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定できる可能性がある&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、つまり値が&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefinedに&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定されているプロパティが存在する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能性に対処するために特別な注意が必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。上記のソリューションは、両方のオブジェクトが同じプロパティを&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等しいことを報告&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;することを確認します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。これは、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.hasOwnProperty（property_name）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してプロパティの存在を確認することによってのみ達成でき&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。また、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSON.stringify（）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定されたプロパティを削除する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、このフォームを使用した比較では、値&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefinedに&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定されたプロパティは無視されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="17873ed4a94c83339758abe3e46c7333007ebaab" translate="yes" xml:space="preserve">
          <source>The ORDER of the properties IS IMPORTANT, so this method will return false for following objects:</source>
          <target state="translated">プロパティの順序は重要なので、このメソッドは以下のオブジェクトに対してはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="1e3370c17f063dd5710f157f323fcf2fd297dbd5" translate="yes" xml:space="preserve">
          <source>The following algorithm will deal with self-referential data structures, numbers, strings, dates, and of course plain nested javascript objects:</source>
          <target state="translated">次のアルゴリズムは、自己参照的なデータ構造、数値、文字列、日付、そしてもちろんプレーンな入れ子になったjavascriptのオブジェクトを処理します。</target>
        </trans-unit>
        <trans-unit id="45f6373f2e8775fc82beba90ebd886545741b3d0" translate="yes" xml:space="preserve">
          <source>The following way works for me, but is it the only possibility?</source>
          <target state="translated">以下の方法が私には合っているのですが、それ以外の可能性はないのでしょうか?</target>
        </trans-unit>
        <trans-unit id="e38d6b49ff07f1fc47b9b70014a0879d2b252cb9" translate="yes" xml:space="preserve">
          <source>The two objects should have the same &lt;strong&gt;&lt;em&gt;prototype chain&lt;/em&gt;&lt;/strong&gt;, not just the same properties. This can only be tested cross-browser by comparing the &lt;strong&gt;&lt;em&gt;constructor&lt;/em&gt;&lt;/strong&gt; of both objects for strict equality. ECMAScript 5 would allow to test their actual prototype using &lt;strong&gt;&lt;em&gt;Object.getPrototypeOf()&lt;/em&gt;&lt;/strong&gt;. Some web browsers also offer a &lt;strong&gt;__proto__&lt;/strong&gt; property that does the same thing. A possible improvement of the above code would allow to use one of these methods whenever available.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つのオブジェクトは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、同じプロパティだけでなく&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、同じ&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロトタイプチェーンを&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持つ必要があり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。これは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、厳密な等価性について両方のオブジェクト&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コンストラクター&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;比較することによってブラウザー間でのみテストでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。 ECMAScript 5では、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.getPrototypeOf（）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用して実際のプロトタイプをテストでき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。一部のWebブラウザー&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、同じことを行う&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;__proto__&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も提供し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。上記のコードを改善すると、可能な場合はいつでもこれらのメソッドのいずれかを使用できるようになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20f93f79c39c3f9b050c3a0bf8938c55c68ecfeb" translate="yes" xml:space="preserve">
          <source>The use of strict comparisons is paramount here because &lt;strong&gt;&lt;em&gt;2&lt;/em&gt;&lt;/strong&gt; should not be considered equal to &lt;strong&gt;&lt;em&gt;&quot;2.0000&quot;&lt;/em&gt;&lt;/strong&gt;, nor &lt;strong&gt;&lt;em&gt;false&lt;/em&gt;&lt;/strong&gt; should be considered equal to &lt;strong&gt;&lt;em&gt;null&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;em&gt;0&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;2.0000&quot;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と見なしてはならず&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;false&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;null&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;undefined&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、または&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;0&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と見なしてはならない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、厳密な比較を使用することがここで最も重要です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d24a2c8b63484aa5afad325ca858258cb32d5a1d" translate="yes" xml:space="preserve">
          <source>Then I have tested it with next objects:</source>
          <target state="translated">その後、次のオブジェクトでテストしてみました。</target>
        </trans-unit>
        <trans-unit id="f888bf1367f031cb254ca8d8e14e4417239ae8be" translate="yes" xml:space="preserve">
          <source>They are exactly equal per &lt;code&gt;===&lt;/code&gt; (String and Number are unwrapped first to ensure &lt;code&gt;42&lt;/code&gt; is equivalent to &lt;code&gt;Number(42)&lt;/code&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;彼らはあたり正確に等しい&lt;/font&gt;&lt;/font&gt; &lt;code&gt;===&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（文字列と番号が確実にするために最初の開封されている&lt;/font&gt;&lt;/font&gt; &lt;code&gt;42&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に相当する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Number(42)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30cd9fac81e2078ab625ca6182458f590bed8ffa" translate="yes" xml:space="preserve">
          <source>This is almost correct algorithm:</source>
          <target state="translated">これはほぼ正しいアルゴリズムです。</target>
        </trans-unit>
        <trans-unit id="26e2d6d8c2f9705568a487e16ee03d106c3af563" translate="yes" xml:space="preserve">
          <source>Unfortunately there is no perfect way, unless you use &lt;code&gt;_proto_&lt;/code&gt; recursively and access all non-enumerable properties, but this works in Firefox only.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;残念ながら、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;_proto_&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;再帰的に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;列挙&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できないすべてのプロパティにアクセスし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない限り、完璧な方法はありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が、これはFirefoxでのみ機能します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6350b1ccee2bb1ff8c723e5fc6339164c9828eae" translate="yes" xml:space="preserve">
          <source>What is the best way to compare objects in JavaScript?</source>
          <target state="translated">JavaScriptでオブジェクトを比較するのに最適な方法は何ですか?</target>
        </trans-unit>
        <trans-unit id="9ed7307d04f8411fb4f775347b330fa5a5b517a0" translate="yes" xml:space="preserve">
          <source>Works when you have simple JSON-style objects without methods and DOM nodes inside:</source>
          <target state="translated">メソッドを持たないシンプルな JSON スタイルのオブジェクトで、内部に DOM ノードがある場合に動作します。</target>
        </trans-unit>
        <trans-unit id="6fe1cc79845bb2ec2662b3c4e3ced92064b7cc8d" translate="yes" xml:space="preserve">
          <source>a==b expected true; returned true</source>
          <target state="translated">a==b 期待された真の値であり、真を返しました。</target>
        </trans-unit>
        <trans-unit id="6ad2d80c6a66cc37e48733e605ce1da763ec3ba2" translate="yes" xml:space="preserve">
          <source>a==c expected false; returned false</source>
          <target state="translated">a==c 期待される false;返された false</target>
        </trans-unit>
        <trans-unit id="c99017b5b35e2d32c91f769e19a63ddea3afe8dd" translate="yes" xml:space="preserve">
          <source>a==e expected false; returned false</source>
          <target state="translated">a==e 予想される false;false を返しました。</target>
        </trans-unit>
        <trans-unit id="ca60107f90be558705729ef40653e9518c7fd04d" translate="yes" xml:space="preserve">
          <source>c==d expected false; returned false</source>
          <target state="translated">c==d 予想される false;false を返しました。</target>
        </trans-unit>
        <trans-unit id="bb8683b0e905a7a38eaa291a65c82e0114fa2553" translate="yes" xml:space="preserve">
          <source>d==k expected false; returned false</source>
          <target state="translated">d==k 予想される false;false を返しました。</target>
        </trans-unit>
        <trans-unit id="24673fe81acbbdfefc21c902370e4a4cd2adb3d2" translate="yes" xml:space="preserve">
          <source>f==g expected true; returned true</source>
          <target state="translated">f==g 期待された真を返し、真を返しました。</target>
        </trans-unit>
        <trans-unit id="f596f1a8f9b28d7602b180a0ee2ba7f1698dcdf0" translate="yes" xml:space="preserve">
          <source>functions may have identical text but refer to different closures</source>
          <target state="translated">関数は同じテキストを持っていても、異なるクロージャを参照している場合があります。</target>
        </trans-unit>
        <trans-unit id="6ce4313e29bb7a5e697578f21097a584046a7c54" translate="yes" xml:space="preserve">
          <source>h==g expected false; returned false</source>
          <target state="translated">h==g 期待値はfalse;返されたのはfalse</target>
        </trans-unit>
        <trans-unit id="8081369f92d01802ddacdd5d2133398dec3822fe" translate="yes" xml:space="preserve">
          <source>i==j expected true; returned true</source>
          <target state="translated">i==j 期待された真であり、真を返しました。</target>
        </trans-unit>
        <trans-unit id="f502dfad6f7642014bb96ff50f07e138105ec6ba" translate="yes" xml:space="preserve">
          <source>if you want to check for methods explicitly you can use the method.toSource() or method.toString() methods.</source>
          <target state="translated">メソッドを明示的にチェックしたい場合は method.toSource()メソッドや method.toString()メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="7e265ea59aabc12ce2db974c07440f91817192c2" translate="yes" xml:space="preserve">
          <source>k==l expected false; returned false</source>
          <target state="translated">k==l 予想される false;false を返しました。</target>
        </trans-unit>
        <trans-unit id="8cadb7ecaff4eb3a29ce543aeea15209312eb59e" translate="yes" xml:space="preserve">
          <source>objects with different prototype structure but same projection</source>
          <target state="translated">異なったプロトタイプ構造を持つが、同じ射影を持つオブジェクト</target>
        </trans-unit>
        <trans-unit id="c59eb8f2cc72c05c4c499d231c96a338943a11fc" translate="yes" xml:space="preserve">
          <source>or they are both dates and have the same &lt;code&gt;valueOf()&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、両方とも日付であり、同じ&lt;/font&gt; &lt;code&gt;valueOf()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;を持っている&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b7b124725e8c02e554326ae76f50b1e03fec4c3" translate="yes" xml:space="preserve">
          <source>or they are both of the same type and not null and...</source>
          <target state="translated">または両方とも同じ型でヌルではなく、...</target>
        </trans-unit>
        <trans-unit id="3e0b5a3ad461e4f4886eda2d60aee23997e5771d" translate="yes" xml:space="preserve">
          <source>or, ignoring properties with &lt;code&gt;undefined&lt;/code&gt; value they have the same properties all of which are considered recursively equivalent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値を持つ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを無視すると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、同じプロパティがすべて再帰的に同等と見なされます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bc52768b0ca8a8954223efcb6765f223bcbb0c2" translate="yes" xml:space="preserve">
          <source>they are not objects and are equal per &lt;code&gt;==&lt;/code&gt; (catches numbers/strings/booleans)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それらはオブジェクトではなく、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;==&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等しい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（数値/文字列/ブール値をキャッチ）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
