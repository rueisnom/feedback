<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/400212">
    <body>
      <group id="400212">
        <trans-unit id="e96265ca08352edfa32340b6268ab393f44a98ab" translate="yes" xml:space="preserve">
          <source>(When you attempt to do this outside of a system cut, copy, or paste event, however, IE will prompt the user to grant the web application clipboard permission.)</source>
          <target state="translated">(Однако,когда вы пытаетесь сделать это за пределами системного события вырезания,копирования или вставки,IE предложит пользователю разрешить буфер обмена веб-приложений).</target>
        </trans-unit>
        <trans-unit id="e75d4528da466a3f3a6b52f228adf83ca40595a4" translate="yes" xml:space="preserve">
          <source>(codepen.io example may not work, read &quot;important&quot; note above)
Note that this snippet is not working well in Stack Overflow's embedded preview you can try it here: &lt;a href=&quot;https://codepen.io/DeanMarkTaylor/pen/RMRaJX?editors=1011&quot;&gt;https://codepen.io/DeanMarkTaylor/pen/RMRaJX?editors=1011&lt;/a&gt;</source>
          <target state="translated">(пример codepen.io может не работать, прочитайте &amp;laquo;важное&amp;raquo; примечание выше). Обратите внимание, что этот фрагмент плохо работает во встроенном предварительном просмотре Stack Overflow, вы можете попробовать его здесь: &lt;a href=&quot;https://codepen.io/DeanMarkTaylor/pen/RMRaJX?editors=1011&quot;&gt;https://codepen.io/DeanMarkTaylor/pen/RMRaJX?editors = 1011&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1fb518efe4067aac236903a3806a7cd6e532e917" translate="yes" xml:space="preserve">
          <source>(may not work embedded in this site, read &quot;important&quot; note above)</source>
          <target state="translated">(может не работать,встроенный в этот сайт,читайте &quot;важное&quot; примечание выше).</target>
        </trans-unit>
        <trans-unit id="6e1d86c4f47dc109e9dc3341481977c9eb0c4f4d" translate="yes" xml:space="preserve">
          <source>(to close the box) -- and voila!</source>
          <target state="translated">(закрыть коробку)--и вуаля!</target>
        </trans-unit>
        <trans-unit id="dcda7580dd706e3a97aa3af104c1ceef61336907" translate="yes" xml:space="preserve">
          <source>) and select the whole text.</source>
          <target state="translated">)и выделите весь текст.</target>
        </trans-unit>
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="6e59b1e479a3507b1b429a7a5ca97870076d4c70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/clipboard-js&quot;&gt;clipboard.js&lt;/a&gt; is a small, non-Flash, utility that allows copying of text or HTML data to the clipboard. It's very easy to use, just include the .js and use something like this:</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/clipboard-js&quot;&gt;clipboard.js&lt;/a&gt; - это небольшая, не Flash, утилита, которая позволяет копировать текстовые или HTML-данные в буфер обмена. Это очень легко использовать, просто включите .js и используйте что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="21d27b63ba67cbc2ef3a06687792bd29f5d3beb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3.org/TR/clipboard-apis/#async-clipboard-api&quot;&gt;Async Clipboard API&lt;/a&gt;&lt;code&gt;[navigator.clipboard.writeText]&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/clipboard-apis/#async-clipboard-api&quot;&gt;API асинхронного буфера обмена&lt;/a&gt; &lt;code&gt;[navigator.clipboard.writeText]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b17956a95dc62ccc551f30b9bde03106544a715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.queryCommandSupported('copy')&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt; if the command &quot;is supported by the browser&quot;.</source>
          <target state="translated">&lt;code&gt;document.queryCommandSupported('copy')&lt;/code&gt; должен возвращать &lt;code&gt;true&lt;/code&gt; , если команда &quot;поддерживается браузером&quot;.</target>
        </trans-unit>
        <trans-unit id="9dee8f56e317d9e1f26e426598fce6c9643776e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/clipboardapi&quot;&gt;Unblocking Clipboard Access&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/clipboardapi&quot;&gt;Разблокировка доступа к буферу обмена&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ba9a7d3abc89a175ca501248abe55ef2e6cad77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Warning&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="491f65549f02309068c86c19484bdf480ea8414b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT&lt;/strong&gt; (noted here 2020/02/20)</source>
          <target state="translated">&lt;strong&gt;ВАЖНО&lt;/strong&gt; (отмечено здесь 2020/02/20)</target>
        </trans-unit>
        <trans-unit id="fcf52df4659a40030c57b9de8fc95a86ebb7b90b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This has been deprecated now. Migrate to &lt;a href=&quot;https://github.com/lgarron/clipboard-polyfill&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Это устарело. Мигрируй &lt;a href=&quot;https://github.com/lgarron/clipboard-polyfill&quot;&gt;сюда&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb2dad28be75fee151e85e9c1acf1490c5cc8584" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;The &lt;code&gt;document.execCommand()&lt;/code&gt; method is not supported in Internet Explorer 9 and earlier.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; &lt;em&gt;Метод &lt;code&gt;document.execCommand()&lt;/code&gt; не поддерживается в Internet Explorer 9 и более ранних версиях.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="73c0cf44d26fb97edb64bb0aca4fb18f4ec6dde8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source&lt;/strong&gt;: &lt;a href=&quot;https://www.w3schools.com/howto/howto_js_copy_clipboard.asp&quot;&gt;W3Schools - &lt;em&gt;Copy Text to Clipboard&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Источник&lt;/strong&gt; : &lt;a href=&quot;https://www.w3schools.com/howto/howto_js_copy_clipboard.asp&quot;&gt;W3Schools - &lt;em&gt;Скопировать текст в буфер обмена&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b55b3f305d5787fd2eb96ce9506e83fb2dfad23" translate="yes" xml:space="preserve">
          <source>@korayem: Note that using html &lt;code&gt;input&lt;/code&gt; field won't respect line breaks &lt;code&gt;\n&lt;/code&gt; and will flatten any text into a single line.</source>
          <target state="translated">@korayem: обратите внимание, что использование поля &lt;code&gt;input&lt;/code&gt; html не учитывает разрывы строк &lt;code&gt;\n&lt;/code&gt; и сведет любой текст в одну строку.</target>
        </trans-unit>
        <trans-unit id="67c421ebd761fa59a8235480e325252af646a300" translate="yes" xml:space="preserve">
          <source>A nice trick without flash: &lt;a href=&quot;https://stackoverflow.com/questions/17527870/how-does-trello-access-the-users-clipboard&quot;&gt;How does Trello access the user's clipboard?&lt;/a&gt;</source>
          <target state="translated">Хороший трюк без вспышки: &lt;a href=&quot;https://stackoverflow.com/questions/17527870/how-does-trello-access-the-users-clipboard&quot;&gt;как Trello получает доступ к буферу обмена пользователя?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="856d306566ddd4dcad729102f7f41d26f5f71ec0" translate="yes" xml:space="preserve">
          <source>Access is asynchronous and uses &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/promises&quot;&gt;JavaScript Promises&lt;/a&gt;, can be written so security user prompts (if displayed) don't interrupt the JavaScript in page.</source>
          <target state="translated">Доступ асинхронный и использует &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/promises&quot;&gt;обещания JavaScript&lt;/a&gt; , может быть написан таким образом, чтобы запросы безопасности пользователя (если отображаются) не прерывали JavaScript на странице.</target>
        </trans-unit>
        <trans-unit id="32d6539eb3cb225eaaf1c2f918ecde419feaed0c" translate="yes" xml:space="preserve">
          <source>Access is synchronous, i.e. stops JavaScript in the page until complete including displaying and user interacting with any security prompts.</source>
          <target state="translated">Доступ синхронизирован,т.е.останавливает JavaScript на странице до завершения,включая отображение и взаимодействие пользователя с любыми подсказками безопасности.</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">Дополнительные примечания</target>
        </trans-unit>
        <trans-unit id="8225c019b26f4a9de1e9728e509c5133a235f100" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;document.execCommand('copy')&lt;/code&gt; calls must take place as a direct result of a user action, e.g. click event handler. This is a measure to prevent messing with the user's clipboard when they don't expect it.</source>
          <target state="translated">Все вызовы &lt;code&gt;document.execCommand('copy')&lt;/code&gt; должны выполняться как прямой результат действий пользователя, например, обработчик события click. Это мера, позволяющая избежать путаницы с буфером обмена пользователя, когда он этого не ожидает.</target>
        </trans-unit>
        <trans-unit id="acf1ba18187e59703bde0e9bdb9a34c3dc35dea0" translate="yes" xml:space="preserve">
          <source>Allows you to modify what appears on the clipboard from any copy event, can include other formats of data other than plain text.</source>
          <target state="translated">Позволяет изменять то,что появляется в буфере обмена из любого события копирования,может включать в себя другие форматы данных,отличные от простого текста.</target>
        </trans-unit>
        <trans-unit id="c385ea5eb927cc1c6219db7ea47412df630f7933" translate="yes" xml:space="preserve">
          <source>And also on &lt;a href=&quot;https://bower.io/&quot;&gt;Bower&lt;/a&gt;</source>
          <target state="translated">А также на &lt;a href=&quot;https://bower.io/&quot;&gt;Bower&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55bc94285ac46dcaf58b2bbefd041e1746065f58" translate="yes" xml:space="preserve">
          <source>And if you need you may be set the timeout for function for restoring previous selection. My implementation on Mootools:</source>
          <target state="translated">И при необходимости можно установить тайм-аут для функции восстановления предыдущего выбора.Моя реализация на Mootools:</target>
        </trans-unit>
        <trans-unit id="32f881cc6ba6e48100b4e5da0aa60f8169934e6b" translate="yes" xml:space="preserve">
          <source>Any call to &lt;code&gt;document.execCommand&lt;/code&gt;, &lt;code&gt;document.queryCommandSupported&lt;/code&gt; or &lt;code&gt;document.queryCommandEnabled&lt;/code&gt; should be wrapped in a &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; block.</source>
          <target state="translated">Любой вызов &lt;code&gt;document.execCommand&lt;/code&gt; , &lt;code&gt;document.queryCommandSupported&lt;/code&gt; или &lt;code&gt;document.queryCommandEnabled&lt;/code&gt; должен быть заключен в блок &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26d0e98fe2bcb7cc7b175d7915bc8309e4ca7ff5" translate="yes" xml:space="preserve">
          <source>Append the textarea to the DOM.</source>
          <target state="translated">Добавьте текстария на DOM.</target>
        </trans-unit>
        <trans-unit id="68bcd8b744e2ec804f09412a959f90b18b569ca8" translate="yes" xml:space="preserve">
          <source>As mentioned by @nikksan in the comments, using &lt;code&gt;textarea&lt;/code&gt; will fix the problem as follows:</source>
          <target state="translated">Как упомянуто @nikksan в комментариях, использование &lt;code&gt;textarea&lt;/code&gt; решит проблему следующим образом:</target>
        </trans-unit>
        <trans-unit id="a1598e8aed758a6728c7fb478f53b10ad524fd2b" translate="yes" xml:space="preserve">
          <source>As of Flash 10, you can only copy to clipboard if the action originates from user interaction with a Flash object. (&lt;a href=&quot;http://www.adobe.com/devnet/flashplayer/articles/fplayer10_security_changes_02.html#head31&quot;&gt;Read related section from Adobe's Flash 10 announcement&lt;/a&gt;)</source>
          <target state="translated">Начиная с Flash 10, вы можете копировать в буфер обмена только в том случае, если действие происходит от взаимодействия пользователя с объектом Flash. ( &lt;a href=&quot;http://www.adobe.com/devnet/flashplayer/articles/fplayer10_security_changes_02.html#head31&quot;&gt;Прочитайте соответствующий раздел из объявления Adobe Flash 10&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="9834bc520e4a3d79cdacd2836542d974b65eea37" translate="yes" xml:space="preserve">
          <source>Async + Fallback</source>
          <target state="translated">Async+Fallback</target>
        </trans-unit>
        <trans-unit id="e8982a208f6308653ea4601ca5affa8f4edada81" translate="yes" xml:space="preserve">
          <source>Async Clipboard API</source>
          <target state="translated">Async API буфера обмена</target>
        </trans-unit>
        <trans-unit id="5a1033034be2c962601239fa8b9fad424724f57e" translate="yes" xml:space="preserve">
          <source>Auto copy to clipboard</source>
          <target state="translated">Автоматическое копирование в буфер обмена</target>
        </trans-unit>
        <trans-unit id="d970c27652652d6344e43e1ae8089db42550a170" translate="yes" xml:space="preserve">
          <source>Automatic copying to clipboard may be dangerous, therefore most browsers (except IE) make it very difficult. Personally, I use the following simple trick:</source>
          <target state="translated">Автоматическое копирование в буфер обмена может быть опасно,поэтому большинство браузеров (за исключением IE)делают это очень сложным.Лично я использую следующий простой трюк:</target>
        </trans-unit>
        <trans-unit id="2464a46af3bc6def3dfe2724b5e3fac23922690b" translate="yes" xml:space="preserve">
          <source>Browser Compatibility Detail</source>
          <target state="translated">Совместимость с браузером Детали</target>
        </trans-unit>
        <trans-unit id="02a8c960030f2f9457b2f49cecd3b0e346163641" translate="yes" xml:space="preserve">
          <source>Browser Support</source>
          <target state="translated">Поддержка браузера</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="fc1ddd1fa4e0d9b8931e660ae31c11ef1c1f8999" translate="yes" xml:space="preserve">
          <source>Call document.execCommand(&quot;copy&quot;)</source>
          <target state="translated">Вызвать документ.execCommand(&quot;копия&quot;).</target>
        </trans-unit>
        <trans-unit id="f0eeff0d8b325dfbf6d9acdbe62d0b35dfc87061" translate="yes" xml:space="preserve">
          <source>Chrome 66 announcement post (March 2018)</source>
          <target state="translated">Пост объявления Chrome 66 (март 2018 г.)</target>
        </trans-unit>
        <trans-unit id="e048451cc6753ab456b5e3b1a7c4bc5d5e7bb3ff" translate="yes" xml:space="preserve">
          <source>Clipboard API</source>
          <target state="translated">API буфера обмена</target>
        </trans-unit>
        <trans-unit id="560a5acaae3a950849068f68836522e4b60eca5e" translate="yes" xml:space="preserve">
          <source>Code from GitHub:</source>
          <target state="translated">Код от GitHub:</target>
        </trans-unit>
        <trans-unit id="1e9fe90b0108a403efdb3d5753637abb2eddc389" translate="yes" xml:space="preserve">
          <source>Complex Example: Copy to clipboard without displaying input</source>
          <target state="translated">Сложный пример:Скопировать в буфер обмена без отображения входных данных</target>
        </trans-unit>
        <trans-unit id="1f9fd959c733298081d99378186853f50833c3ea" translate="yes" xml:space="preserve">
          <source>Copy text from HTML input to the clipboard:</source>
          <target state="translated">Скопируйте текст из HTML-входа в буфер обмена:</target>
        </trans-unit>
        <trans-unit id="c9e1ab00b00b8f1d4ade2421d1366b3384e9274f" translate="yes" xml:space="preserve">
          <source>Copying plain text to the clipboard is relatively simple, assuming you want to do it during a system copy event (user presses</source>
          <target state="translated">Копирование простого текста в буфер обмена относительно просто,предполагая,что вы хотите сделать это во время события копирования системы (пользователь нажимает на кнопку</target>
        </trans-unit>
        <trans-unit id="3421219dee9df20a58e105115b618942d922a453" translate="yes" xml:space="preserve">
          <source>Create a textarea and set its contents to the text you want copied to the clipboard.</source>
          <target state="translated">Создайте текстовое поле и установите его содержимое в соответствии с текстом,который вы хотите скопировать в буфер обмена.</target>
        </trans-unit>
        <trans-unit id="dd6a02a553da4cb247f914011dd67c37487ec082" translate="yes" xml:space="preserve">
          <source>Ctrl</source>
          <target state="translated">Ctrl</target>
        </trans-unit>
        <trans-unit id="aed5b4d8e351ae74e3ace403f868fc20762ffdcc" translate="yes" xml:space="preserve">
          <source>Different browser implementations and browser versions throw differing types of exceptions when called instead of returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Различные реализации браузера и версии браузера выдают разные типы исключений при вызове вместо возврата &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a226ccf6af51fb95b675284c85897bb89775745" translate="yes" xml:space="preserve">
          <source>Different browser implementations are still in flux and the &lt;a href=&quot;https://w3c.github.io/clipboard-apis/&quot;&gt;Clipboard API&lt;/a&gt; is still in draft, so remember to do your testing.</source>
          <target state="translated">Различные реализации браузеров все еще находятся в движении, а &lt;a href=&quot;https://w3c.github.io/clipboard-apis/&quot;&gt;API буфера обмена&lt;/a&gt; все еще находится в стадии разработки, поэтому не забудьте провести тестирование.</target>
        </trans-unit>
        <trans-unit id="28740c6842d7eb88bad092a74e279396ffcd3536" translate="yes" xml:space="preserve">
          <source>Don't expect clipboard related commands to work whilst you are testing code in the console. Generally the page is required to be active (Async Clipboard API) or requires user interaction (e.g. a user click) to allow (&lt;code&gt;document.execCommand('copy')&lt;/code&gt;) to access the clipboard see below for more detail.</source>
          <target state="translated">Не ожидайте, что команды, связанные с буфером обмена, будут работать, пока вы тестируете код в консоли. Обычно страница должна быть активной (Async Clipboard API) или требует взаимодействия с пользователем (например, щелчок пользователя), чтобы разрешить ( &lt;code&gt;document.execCommand('copy')&lt;/code&gt; ) доступ к буферу обмена, подробнее см. Ниже.</target>
        </trans-unit>
        <trans-unit id="9a1d594eb2d8591a4d909166f374bda0554437bb" translate="yes" xml:space="preserve">
          <source>Due to the level of browser support for the new Async Clipboard API you will likely want to fallback to the &lt;code&gt;document.execCommand('copy')&lt;/code&gt; method to get good browser coverage.</source>
          <target state="translated">Из-за уровня поддержки браузером нового Async Clipboard API вы, вероятно, захотите использовать метод &lt;code&gt;document.execCommand('copy')&lt;/code&gt; для получения хорошего покрытия браузера.</target>
        </trans-unit>
        <trans-unit id="5a22dc9f176d880860261392386d3fa4eee3c704" translate="yes" xml:space="preserve">
          <source>During testing ~April 2015 only Internet Explorer was noted as displaying permissions prompts whilst writing to the clipboard.</source>
          <target state="translated">Во время тестирования ~April 2015 только Internet Explorer был отмечен как отображающий подсказки разрешений во время записи в буфер обмена.</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="92098df6a3dbfbc7a91d4337f6c353653b8dddf1" translate="yes" xml:space="preserve">
          <source>For security reasons, this can only called from an event handler such as click (Just as with opening windows).</source>
          <target state="translated">По соображениям безопасности,это может быть вызвано только обработчиком события,например,щелчком мыши (так же,как и при открытии окон).</target>
        </trans-unit>
        <trans-unit id="ca83a58af2fa61f2776c5410eefb27139675814c" translate="yes" xml:space="preserve">
          <source>From one of the projects I've been working on, a jQuery copy-to-clipboard plugin that utilizes the &lt;a href=&quot;https://github.com/patricklodder/jquery-zclip&quot;&gt;Zero Clipboard&lt;/a&gt; library.</source>
          <target state="translated">В одном из проектов, над которым я работал, плагин jQuery для копирования в буфер обмена, использующий библиотеку &lt;a href=&quot;https://github.com/patricklodder/jquery-zclip&quot;&gt;Zero Clipboard&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec15b457aaa9f705d48240bfff948700326decbe" translate="yes" xml:space="preserve">
          <source>General development notes</source>
          <target state="translated">Общие примечания по развитию</target>
        </trans-unit>
        <trans-unit id="de606c275ead21eb18671a59a0197493aa4e6707" translate="yes" xml:space="preserve">
          <source>Google Chrome 43+ (~April 2015)</source>
          <target state="translated">Google Chrome 43+(~апрель 2015 г.)</target>
        </trans-unit>
        <trans-unit id="6cd83e1c00736c966907a051dca51ccecd49dd23" translate="yes" xml:space="preserve">
          <source>Has a workaround for iOS so that it actually works as it normally blocks execCommand.</source>
          <target state="translated">Имеет обходной путь для iOS,так что на самом деле она работает так,как обычно блокирует execCommand.</target>
        </trans-unit>
        <trans-unit id="027e4d51af3a2706d15e492657818f5ff727db7d" translate="yes" xml:space="preserve">
          <source>Here is a simple example (may not work embedded in this site, read &quot;important&quot; note above):</source>
          <target state="translated">Вот простой пример (может не сработать встроенный в этот сайт,читайте &quot;важное&quot; примечание выше):</target>
        </trans-unit>
        <trans-unit id="ff28e34c7b269519a1250c40752aa30a3f526707" translate="yes" xml:space="preserve">
          <source>Here is a test/demo page which demonstrates the code working:
&lt;a href=&quot;https://deanmarktaylor.github.io/clipboard-test/&quot;&gt;https://deanmarktaylor.github.io/clipboard-test/&lt;/a&gt;</source>
          <target state="translated">Вот тестовая / демонстрационная страница, которая демонстрирует работающий код: &lt;a href=&quot;https://deanmarktaylor.github.io/clipboard-test/&quot;&gt;https://deanmarktaylor.github.io/clipboard-test/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1e57f745fbd5cae8d9184892ad97542e92eeb37" translate="yes" xml:space="preserve">
          <source>Here is my take on that one...</source>
          <target state="translated">Вот моя версия...</target>
        </trans-unit>
        <trans-unit id="5ef0e3e404407e991996a23ad4564c3121299baa" translate="yes" xml:space="preserve">
          <source>Here it is:</source>
          <target state="translated">Вот оно:</target>
        </trans-unit>
        <trans-unit id="dd1e3d1c363e66eba074ecf268f04fd481a7afa3" translate="yes" xml:space="preserve">
          <source>Here's yet another way to copy text:</source>
          <target state="translated">Вот еще один способ скопировать текст:</target>
        </trans-unit>
        <trans-unit id="dd25b1528c9013edbcd817487ed6b4308279b170" translate="yes" xml:space="preserve">
          <source>How do I copy to the clipboard in JavaScript</source>
          <target state="translated">Как скопировать в буфер обмена на JavaScript</target>
        </trans-unit>
        <trans-unit id="de2f217cb34a22e24f2bffb160103b608e9bc84f" translate="yes" xml:space="preserve">
          <source>However as an example of browser compatibility issues, Google Chrome from ~April to ~October 2015 only returned &lt;code&gt;true&lt;/code&gt; from &lt;code&gt;document.queryCommandSupported('copy')&lt;/code&gt; if the command was called from a user-initiated thread.</source>
          <target state="translated">Однако в качестве примера проблем совместимости браузера Google Chrome с ~ апреля по октябрь 2015 года возвращал &lt;code&gt;true&lt;/code&gt; из &lt;code&gt;document.queryCommandSupported('copy')&lt;/code&gt; если команда была вызвана из потока, инициированного пользователем.</target>
        </trans-unit>
        <trans-unit id="6e1dffcce04f8999377bb8326748a74053499dcb" translate="yes" xml:space="preserve">
          <source>I can't paste an example (commercial project), but you get the idea.</source>
          <target state="translated">Я не могу вставить пример (коммерческий проект),но вы поняли идею.</target>
        </trans-unit>
        <trans-unit id="f4cfd5a7996a41f2b20dd8a8092cf36b01c950c6" translate="yes" xml:space="preserve">
          <source>I do realize this code will show a 1-pixel wide component visibly on the screen for a millisecond, but decided not to worry about that, which is something that others can address if a real problem.</source>
          <target state="translated">Я понимаю,что этот код будет показывать на экране 1-пиксельную компоненту видимым образом в течение миллисекунды,но решил не беспокоиться об этом,а это то,что другие могут решить в случае возникновения реальной проблемы.</target>
        </trans-unit>
        <trans-unit id="966d38c44a502d4b0016776551e4db97e6a2ed53" translate="yes" xml:space="preserve">
          <source>I found the following solution:</source>
          <target state="translated">Я нашел следующее решение:</target>
        </trans-unit>
        <trans-unit id="ce5daa652636410cf2a6d446548fd88417b8875d" translate="yes" xml:space="preserve">
          <source>I had the same problem building a custom grid edit from (something like Excel) and compatibility with Excel. I had to support selecting multiple cells, copying and pasting.</source>
          <target state="translated">У меня была та же проблема с построением пользовательского редактирования сетки из (что-то вроде Excel)и совместимостью с Excel.Я должен был поддерживать выбор нескольких ячеек,копирование и вставку.</target>
        </trans-unit>
        <trans-unit id="c1505e7216dbf9bc253cc27dac1792b424a2ddf7" translate="yes" xml:space="preserve">
          <source>I have recently written a &lt;a href=&quot;https://www.lucidchart.com/techblog/2014/12/02/definitive-guide-copying-pasting-javascript/&quot;&gt;technical blog post&lt;/a&gt; on this very problem (I work at Lucidchart and we recently did an overhaul on our clipboard).</source>
          <target state="translated">Я недавно написал &lt;a href=&quot;https://www.lucidchart.com/techblog/2014/12/02/definitive-guide-copying-pasting-javascript/&quot;&gt;технический пост в блоге&lt;/a&gt; об этой самой проблеме (я работаю в Lucidchart, и мы недавно сделали капитальный ремонт нашего буфера обмена).</target>
        </trans-unit>
        <trans-unit id="23c9189db1ff6e2cb688c016c58d203404607422" translate="yes" xml:space="preserve">
          <source>I have the text in a hidden input. Because &lt;code&gt;setSelectionRange&lt;/code&gt; doesn't work on hidden inputs, I changed temporarily the type to text, copied the text, and then made it hidden again. If you want to copy the text from an element, you can pass it to the function and save its content in the target variable.</source>
          <target state="translated">У меня есть текст в скрытом входе. Поскольку &lt;code&gt;setSelectionRange&lt;/code&gt; не работает со скрытыми входами, я временно изменил тип на текст, скопировал текст, а затем снова скрыл его. Если вы хотите скопировать текст из элемента, вы можете передать его в функцию и сохранить его содержимое в целевой переменной.</target>
        </trans-unit>
        <trans-unit id="f481599de8d99219c663f80ada085d861d69693b" translate="yes" xml:space="preserve">
          <source>I have tried:</source>
          <target state="translated">Я пытался:</target>
        </trans-unit>
        <trans-unit id="64142f87f6143dab6c09288596e96559aa538097" translate="yes" xml:space="preserve">
          <source>I have used clipboard.js.</source>
          <target state="translated">Я использовал буфер обмена.</target>
        </trans-unit>
        <trans-unit id="9b29eb5b35b06915e3d30e952d28183777874ef9" translate="yes" xml:space="preserve">
          <source>I use this very successfully (&lt;strong&gt;without&lt;/strong&gt; jQuery or any other framework).</source>
          <target state="translated">Я использую это очень успешно ( &lt;strong&gt;без&lt;/strong&gt; JQuery или каких-либо других фреймворков).</target>
        </trans-unit>
        <trans-unit id="86507cb1f625e6ba89de2744cb4e96b28a353d90" translate="yes" xml:space="preserve">
          <source>I've put together what I think is the best one.</source>
          <target state="translated">Я собрал то,что считаю лучшим.</target>
        </trans-unit>
        <trans-unit id="4df3900a6902efb269b256f49cc9d0d373811b00" translate="yes" xml:space="preserve">
          <source>If I pass in a string, it copies it. If nothing, it copies the page's URL.</source>
          <target state="translated">Если я передаю строку,она копирует ее.Если ничего,он копирует URL страницы.</target>
        </trans-unit>
        <trans-unit id="a7bd28b63858fcaef5224254159907ac6e11fdcb" translate="yes" xml:space="preserve">
          <source>If you need non-flash support for iOS you just add a fall-back:</source>
          <target state="translated">Если вам нужна поддержка не флэш-памяти для iOS,просто добавьте откат:</target>
        </trans-unit>
        <trans-unit id="9abe680fe97b16c6e82c89dff562f3400328d404" translate="yes" xml:space="preserve">
          <source>If you want a really simple solution (takes less than 5 minutes to integrate) and looks good right out of the box, then &lt;a href=&quot;http://github.com/mojombo/clippy&quot;&gt;Clippy&lt;/a&gt; is a nice alternative to some of the more complex solutions.</source>
          <target state="translated">Если вы хотите действительно простое решение (занимает меньше 5 минут для интеграции) и хорошо выглядят прямо из коробки, то &lt;a href=&quot;http://github.com/mojombo/clippy&quot;&gt;Clippy&lt;/a&gt; - хорошая альтернатива некоторым из более сложных решений.</target>
        </trans-unit>
        <trans-unit id="4396c7460b71e5e545861f3498efc7f2eb5bbcab" translate="yes" xml:space="preserve">
          <source>In 2018, here's how you can go about it:</source>
          <target state="translated">В 2018 году,вот как ты можешь это сделать:</target>
        </trans-unit>
        <trans-unit id="0fedc44c66a04946bf8e28caa225fdb62cd5f049" translate="yes" xml:space="preserve">
          <source>In Chrome 66 pages in active tabs can write to the clipboard without a permissions prompt.</source>
          <target state="translated">В Chrome 66 страницы в активных вкладках могут записываться в буфер обмена без запроса разрешения.</target>
        </trans-unit>
        <trans-unit id="73b010066e6f44a5460adad9f3979ad8675fd165" translate="yes" xml:space="preserve">
          <source>In Chrome, you can create a Chrome extension that will give you &lt;a href=&quot;https://developer.chrome.com/extensions/declare_permissions&quot;&gt;clipboard permissions&lt;/a&gt; (this is what we do for Lucidchart). Then for users with your extension installed you'll just need to fire the system event yourself:</source>
          <target state="translated">В Chrome вы можете создать расширение Chrome, которое даст вам &lt;a href=&quot;https://developer.chrome.com/extensions/declare_permissions&quot;&gt;разрешения для буфера обмена&lt;/a&gt; (это то, что мы делаем для Lucidchart). Тогда для пользователей с установленным расширением вам просто нужно самостоятельно запустить системное событие:</target>
        </trans-unit>
        <trans-unit id="49f262928b98e36cd63398cec562fecf01d84221" translate="yes" xml:space="preserve">
          <source>In Internet Explorer system administrators can disable the clipboard API.</source>
          <target state="translated">В Internet Explorer системные администраторы могут отключить API буфера обмена.</target>
        </trans-unit>
        <trans-unit id="83ff207cfb83713fb2ef2b79ffb028407adfdd8e" translate="yes" xml:space="preserve">
          <source>In browsers other than IE you need to use a small flash object to manipulate the clipboard, e.g.</source>
          <target state="translated">В браузерах,отличных от IE,для работы с буфером обмена необходимо использовать небольшой флэш-объект,например</target>
        </trans-unit>
        <trans-unit id="68ac2ff338f18b8b5638d72d2d2203e5b3e4bccf" translate="yes" xml:space="preserve">
          <source>In some cases you might wish to copy text to the clipboard without displaying an &lt;code&gt;input&lt;/code&gt; / &lt;code&gt;textarea&lt;/code&gt; element. This is one example of a way to work around this (basically insert element, copy to clipboard, remove element):</source>
          <target state="translated">В некоторых случаях вы можете скопировать текст в буфер обмена без отображения элемента &lt;code&gt;input&lt;/code&gt; / &lt;code&gt;textarea&lt;/code&gt; . Это один из примеров способа обойти это (в основном вставка элемента, копирование в буфер обмена, удаление элемента):</target>
        </trans-unit>
        <trans-unit id="8ecb52c26a6938186a46b1d9150c2a5dd74c9795" translate="yes" xml:space="preserve">
          <source>In your code:</source>
          <target state="translated">В вашем коде:</target>
        </trans-unit>
        <trans-unit id="27a69b4385439a997a62e9cb23e586860f6223ea" translate="yes" xml:space="preserve">
          <source>Internet Explorer 10+ (although &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms537834(v=vs.85).aspx&quot;&gt;this document&lt;/a&gt; indicates some support was there from Internet Explorer 5.5+).</source>
          <target state="translated">Internet Explorer 10+ (хотя &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms537834(v=vs.85).aspx&quot;&gt;этот документ&lt;/a&gt; указывает, что некоторая поддержка была из Internet Explorer 5.5+).</target>
        </trans-unit>
        <trans-unit id="7e997557e991caeb301608c9fda59641c80d4330" translate="yes" xml:space="preserve">
          <source>Internet Explorer will show a permission dialog the first time the clipboard is updated.</source>
          <target state="translated">При первом обновлении буфера обмена Internet Explorer покажет диалоговое окно прав доступа.</target>
        </trans-unit>
        <trans-unit id="728327ee84bb45dd11d26a1df620614852b5525d" translate="yes" xml:space="preserve">
          <source>Internet Explorer, and Edge will scroll when the textarea is focused.</source>
          <target state="translated">Internet Explorer,и Граница будет прокручиваться,когда текстовое поле сфокусировано.</target>
        </trans-unit>
        <trans-unit id="441ff165a02d4e7f3eb647afcb7398332b18c655" translate="yes" xml:space="preserve">
          <source>Is it supported?</source>
          <target state="translated">Поддерживается ли это?</target>
        </trans-unit>
        <trans-unit id="e74e3a7cc7789c6f3d7604c48dc36fdee9238c62" translate="yes" xml:space="preserve">
          <source>It is easier to use than the native Zero Clipboard plugin if you're a heavy jQuery user.</source>
          <target state="translated">Он проще в использовании,чем родной плагин Zero Clipboard,если вы тяжелый пользователь jQuery.</target>
        </trans-unit>
        <trans-unit id="226c7fa1748f131d84f8d07c57ea3bdff356c116" translate="yes" xml:space="preserve">
          <source>It is used in my Angular 6+ code like so:</source>
          <target state="translated">Он используется в моем коде Angular 6+вот так:</target>
        </trans-unit>
        <trans-unit id="5dfdac7976c65268a5fb891b4e5959cf4425c7ea" translate="yes" xml:space="preserve">
          <source>It looks like Firefox has &lt;a href=&quot;http://kb.mozillazine.org/Granting_JavaScript_access_to_the_clipboard&quot;&gt;some options&lt;/a&gt; that allow users to grant permissions to certain sites to access the clipboard, but I haven't tried any of these personally.</source>
          <target state="translated">Похоже, что у Firefox есть &lt;a href=&quot;http://kb.mozillazine.org/Granting_JavaScript_access_to_the_clipboard&quot;&gt;некоторые параметры,&lt;/a&gt; которые позволяют пользователям предоставлять разрешения определенным сайтам для доступа к буферу обмена, но я не пробовал ничего из этого лично.</target>
        </trans-unit>
        <trans-unit id="edc927f430f24f6f35f3e4a7227a3084dedfccfd" translate="yes" xml:space="preserve">
          <source>It seems I misread the question, but for reference, you can extract a range of the DOM (not to clipboard; compatible with all modern browsers), and combine it with the oncopy and onpaste and onbeforepaste events to get clipboard behaviour. Here's the code to achieve this:</source>
          <target state="translated">Кажется,я неправильно понял вопрос,но для справки,вы можете извлечь ряд DOM (не в буфер обмена;совместим со всеми современными браузерами),и объединить его с oncopy и onpaste и onbeforepaste событий,чтобы получить поведение буфера обмена.Вот код для достижения этого:</target>
        </trans-unit>
        <trans-unit id="9d8f3a46c7fca6b1daabdc13d2f6d760d93b3dd1" translate="yes" xml:space="preserve">
          <source>It uses jQuery, but it doesn't have to of course. You can change that if you want. I just had jQuery to my disposal. You can also add some CSS to make sure the input doesn't show. For instance something like:</source>
          <target state="translated">Он использует jQuery,но это не обязательно.Ты можешь изменить это,если хочешь.Я только что получил JQuery в свое распоряжение.Вы также можете добавить некоторые CSS,чтобы убедиться,что ввод не отображается.Например,что-то вроде:</target>
        </trans-unit>
        <trans-unit id="a4bd86a7c3a15079063de885c80184a6dee56820" translate="yes" xml:space="preserve">
          <source>It was written by a co-founder of GitHub. Example Flash embed code below:</source>
          <target state="translated">Это было написано соучредителем GitHub.Пример кода встраивания Flash ниже:</target>
        </trans-unit>
        <trans-unit id="441ae2489be0504cddd656371b3fb468ee094840" translate="yes" xml:space="preserve">
          <source>More gymnastics to the clipboard stuff can be done too. See more information here:</source>
          <target state="translated">Больше гимнастики можно делать и с клипбордами.Дополнительную информацию смотрите здесь:</target>
        </trans-unit>
        <trans-unit id="613745a19c347fa2918416da66368874d3291283" translate="yes" xml:space="preserve">
          <source>Most browsers support this as of ~April 2015 (see Browser Support below).</source>
          <target state="translated">Большинство браузеров поддерживают это с ~ апреля 2015 года (см.ниже раздел Поддержка браузеров).</target>
        </trans-unit>
        <trans-unit id="84555820fbed1808e740204d9805dcd4ba8631d3" translate="yes" xml:space="preserve">
          <source>Mozilla Firefox 41+ (shipping ~September 2015)</source>
          <target state="translated">Mozilla Firefox 41+(доставка ~сентябрь 2015 г.)</target>
        </trans-unit>
        <trans-unit id="fb59b73ab89aa6fcc2a6a665e9fafa20988a3e9c" translate="yes" xml:space="preserve">
          <source>My bad. This only works in IE.</source>
          <target state="translated">Виноват.Это работает только в IE.</target>
        </trans-unit>
        <trans-unit id="b6bb6bb9992b6ac79a47b50009a23dab447749b3" translate="yes" xml:space="preserve">
          <source>NOTE: This code will only work when executed as direct synchronous code to something like an 'onClick' method. If you call in an asynchronous response to Ajax or in any other asynchronous way it will not work.</source>
          <target state="translated">ЗАМЕЧАНИЕ:Этот код будет работать только при выполнении в виде прямого синхронного кода к чему-то вроде метода 'onClick'.Если вы вызываете асинхронный ответ на Ajax или любым другим асинхронным способом,то он не будет работать.</target>
        </trans-unit>
        <trans-unit id="7113c6cd944b357a68fb150c1b8d2ab7d55ee8a6" translate="yes" xml:space="preserve">
          <source>Newlines and tabs can get swallowed unless you use a textarea. (Most articles seem to recommend using a div)</source>
          <target state="translated">Новые строки и вкладки могут быть проглочены,если вы не используете текстовое поле.(Большинство статей,похоже,рекомендуют использовать div)</target>
        </trans-unit>
        <trans-unit id="dc1ff63f306cbf40cda95e11831244d5ad29aef3" translate="yes" xml:space="preserve">
          <source>Not covered here as it doesn't directly answer the question.</source>
          <target state="translated">Здесь не сказано,так как он не дает прямого ответа на вопрос.</target>
        </trans-unit>
        <trans-unit id="507551cf40759bea0c3e8450706b180596ff4384" translate="yes" xml:space="preserve">
          <source>Note compatibility detail below.</source>
          <target state="translated">Обратите внимание на приведенную ниже информацию о совместимости.</target>
        </trans-unit>
        <trans-unit id="0ac312cbf7d21f2a877d3d921532b8a51b38d7e3" translate="yes" xml:space="preserve">
          <source>Note that since this post was originally written &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/Home/chromium-security/deprecating-permissions-in-cross-origin-iframes&quot;&gt;deprecation of permissions in cross-origin IFRAMEs&lt;/a&gt; and other &lt;a href=&quot;https://blog.chromium.org/2010/05/security-in-depth-html5s-sandbox.html&quot;&gt;IFRAME &quot;sandboxing&quot;&lt;/a&gt; prevents the embedded demos &quot;Run code snippet&quot; buttons and &quot;codepen.io example&quot; from working in some browsers (including Chrome and Microsoft Edge).</source>
          <target state="translated">Обратите внимание, что поскольку в этом посте изначально было написано об &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/Home/chromium-security/deprecating-permissions-in-cross-origin-iframes&quot;&gt;устаревании разрешений в перекрестных источниках IFRAME&lt;/a&gt; и других &lt;a href=&quot;https://blog.chromium.org/2010/05/security-in-depth-html5s-sandbox.html&quot;&gt;&amp;laquo;песочницах&amp;raquo; IFRAME,&lt;/a&gt; в некоторых браузерах (включая Chrome и Microsoft Edge) не работают встроенные демонстрационные кнопки &amp;laquo;Выполнить фрагмент кода&amp;raquo; и &amp;laquo;пример codepen.io&amp;raquo;. ).</target>
        </trans-unit>
        <trans-unit id="09828435c936cfcb5084dcd64aa12bee70f98413" translate="yes" xml:space="preserve">
          <source>Note that there is an ability to &quot;request permission&quot; and test for access to the clipboard via the permissions API in Chrome 66.</source>
          <target state="translated">Обратите внимание,что в Chrome 66 существует возможность &quot;запрашивать разрешения&quot; и тестировать доступ к буферу обмена через API разрешений.</target>
        </trans-unit>
        <trans-unit id="601f2a5ad2b8b2eabbb300f2a9c49908f8729821" translate="yes" xml:space="preserve">
          <source>Note the full Clipboard API draft specification can be found here:
&lt;a href=&quot;https://w3c.github.io/clipboard-apis/&quot;&gt;https://w3c.github.io/clipboard-apis/&lt;/a&gt;</source>
          <target state="translated">Обратите внимание, что полный проект спецификации API буфера обмена можно найти здесь: &lt;a href=&quot;https://w3c.github.io/clipboard-apis/&quot;&gt;https://w3c.github.io/clipboard-apis/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1724bc61bec938c298ab72b89792982749c08955" translate="yes" xml:space="preserve">
          <source>Note: you will not see the textarea, as it is added and removed within the same synchronous invocation of Javascript code.</source>
          <target state="translated">Замечание:вы не увидите текстовое поле,так как оно добавляется и удаляется в рамках одного и того же синхронного вызова кода на Javascript.</target>
        </trans-unit>
        <trans-unit id="4e0b45197aee7fa10a7b6954f08be2be44cf4e16" translate="yes" xml:space="preserve">
          <source>Now the clipboard copy operation is SAFE, because the user does it manually (but in a pretty straightforward way). Of course, works in all browsers.</source>
          <target state="translated">Теперь операция копирования буфера обмена является БЕЗОПАСНОЙ,потому что пользователь делает это вручную (но довольно простым способом).Конечно,работает во всех браузерах.</target>
        </trans-unit>
        <trans-unit id="2585fb3016c95ff7aeb8916dd1ebf51ad2062e9b" translate="yes" xml:space="preserve">
          <source>On key down handler creates &quot;pre&quot; tag. We set the content to copy to this tag, then make a selection on this tag and return true in handler. This calls standard handler of chrome and copies selected text.</source>
          <target state="translated">Обработчик вниз по клавишам создает тэг &quot;pre&quot;.Мы устанавливаем содержимое для копирования в этот тэг,затем делаем выделение на этом тэге и возвращаем true в обработчике.При этом вызывается стандартный обработчик хрома и копируется выделенный текст.</target>
        </trans-unit>
        <trans-unit id="b1a133a9ad7ca178ad4930dcdeec6fc3fe0602d5" translate="yes" xml:space="preserve">
          <source>On paste it creates textarea and works the same way.</source>
          <target state="translated">На вставке он создает текстуру и работает таким же образом.</target>
        </trans-unit>
        <trans-unit id="c1007c17f6dc10dab2e3ea8f3a5784f767a6245c" translate="yes" xml:space="preserve">
          <source>Only supported on pages served over HTTPS.</source>
          <target state="translated">Поддерживается только на страницах,обслуживаемых по HTTPS.</target>
        </trans-unit>
        <trans-unit id="0ed1055849b20d70dc2ed4193b22de29e88836df" translate="yes" xml:space="preserve">
          <source>Only works if the user takes an action</source>
          <target state="translated">Работает только в том случае,если пользователь совершает действие</target>
        </trans-unit>
        <trans-unit id="a7afa2821b7787ebaf599441badb8b1df7aae2aa" translate="yes" xml:space="preserve">
          <source>Opera 29+ (based on Chromium 42, ~April 2015)</source>
          <target state="translated">Опера 29+(по Хрому 42,~Апрель 2015)</target>
        </trans-unit>
        <trans-unit id="8ed17881879518d1be4e7fea88c90c20a9ea713e" translate="yes" xml:space="preserve">
          <source>Or of course you could also do some inline styling</source>
          <target state="translated">Или,конечно,вы также можете сделать некоторые поточной стайлинг.</target>
        </trans-unit>
        <trans-unit id="986c083d75d6e86c5f64dcf0876f7daff3af314b" translate="yes" xml:space="preserve">
          <source>Other than that, there are some options on a browser-by-browser basis.</source>
          <target state="translated">Кроме того,есть некоторые опции для каждого браузера.</target>
        </trans-unit>
        <trans-unit id="6606a3209277f2145cdabd7418aa62d5f3a3957e" translate="yes" xml:space="preserve">
          <source>Overriding the copy event</source>
          <target state="translated">Переопределение события копирования</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="cdb12b3325a10ea3e26fdd906fdb66610b511d6f" translate="yes" xml:space="preserve">
          <source>PS may be this solution can be used for creating fully cross-browser solution without flash. Its works in FF and Chrome.</source>
          <target state="translated">PS может быть использовано для создания полностью кросс-браузерного решения без прошивки.Оно работает в FF и Chrome.</target>
        </trans-unit>
        <trans-unit id="b977e67f26c9373cea5fc3c8d5791d14b0282a49" translate="yes" xml:space="preserve">
          <source>Pasting - you could do same like this (differs on your target) - keep focus on textarea and catch paste events using onpaste (in my project I use textareas in cells to edit).</source>
          <target state="translated">Вставка-вы можете сделать то же самое (отличается от вашей цели)-продолжайте фокусироваться на тексттаре и ловить события вставки,используя онпаст (в моем проекте я использую тексттарею в ячейках для редактирования).</target>
        </trans-unit>
        <trans-unit id="bc617eddef5808a05fa13304523293335138e8a9" translate="yes" xml:space="preserve">
          <source>Putting text on the clipboard not during a system copy event is much more difficult. It looks like some of these other answers reference ways to do it via Flash, which is the only cross-browser way to do it (so far as I understand).</source>
          <target state="translated">Помещение текста в буфер обмена не во время события копирования системы намного сложнее.Похоже,что некоторые из этих ответов ссылаются на способ сделать это через Flash,который является единственным кросс-браузерным способом (насколько я понимаю).</target>
        </trans-unit>
        <trans-unit id="7ec8f1a665fd8b69db741b7ffd946d7d0344fb65" translate="yes" xml:space="preserve">
          <source>Reading and modifying the clipboard from a webpage raises security and privacy concerns. However, in Internet&amp;nbsp;Explorer, it is possible to do it. I found this &lt;a href=&quot;http://www.sajithmr.com/onclick-select-all-and-copy-to-clipboard-javascript/&quot;&gt;example snippet&lt;/a&gt;:</source>
          <target state="translated">Чтение и изменение буфера обмена с веб-страницы вызывает проблемы безопасности и конфиденциальности. Однако в Internet Explorer это можно сделать. Я нашел этот &lt;a href=&quot;http://www.sajithmr.com/onclick-select-all-and-copy-to-clipboard-javascript/&quot;&gt;фрагмент кода&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="6132b1e7bd98981e34c215e72361efa4a2b6bcff" translate="yes" xml:space="preserve">
          <source>Reference &lt;a href=&quot;https://www.w3.org/TR/clipboard-apis/#async-clipboard-api&quot;&gt;Async Clipboard API&lt;/a&gt; draft documentation</source>
          <target state="translated">Ссылка на проект документации &lt;a href=&quot;https://www.w3.org/TR/clipboard-apis/#async-clipboard-api&quot;&gt;Async Clipboard API&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bed2e12478c21d156c18cb0c4bde0904d90484aa" translate="yes" xml:space="preserve">
          <source>Remember to replace &lt;code&gt;#{text}&lt;/code&gt; with the text you need copied, and &lt;code&gt;#{bgcolor}&lt;/code&gt; with a color.</source>
          <target state="translated">Не забудьте заменить &lt;code&gt;#{text}&lt;/code&gt; текстом, который вам нужно скопировать, а &lt;code&gt;#{bgcolor}&lt;/code&gt; цветом.</target>
        </trans-unit>
        <trans-unit id="9fe24af2a1a161e47e3f8895c3b2f12e0826984f" translate="yes" xml:space="preserve">
          <source>Remove the textarea from the dom.</source>
          <target state="translated">Удалить текстуру из домена.</target>
        </trans-unit>
        <trans-unit id="d68c3601eb81dc5cf99c8da938d16b2d048b0131" translate="yes" xml:space="preserve">
          <source>Restores selection if there was one</source>
          <target state="translated">Восстанавливает выбор,если он был</target>
        </trans-unit>
        <trans-unit id="747f1ecccad6b2a084f6c678d408f86946e1e113" translate="yes" xml:space="preserve">
          <source>See Clipboard API documentation on &lt;a href=&quot;https://w3c.github.io/clipboard-apis/#override-copy&quot;&gt;Overriding the copy event&lt;/a&gt;.</source>
          <target state="translated">См. Документацию Clipboard API по &lt;a href=&quot;https://w3c.github.io/clipboard-apis/#override-copy&quot;&gt;переопределению события копирования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc0fe9c56b8fc9f864a0f6dc096e14c1c8158387" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en&quot;&gt;Google Developers post here&lt;/a&gt; for more info.</source>
          <target state="translated">Смотрите &lt;a href=&quot;https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en&quot;&gt;пост разработчиков Google здесь&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="e88631214c45040d1409550aaaf82c5a9d10e6f8" translate="yes" xml:space="preserve">
          <source>Select the text in the textarea.</source>
          <target state="translated">Выберите текст в текстовом поле.</target>
        </trans-unit>
        <trans-unit id="fdc1cd394cbb1374f1ef102987329fec493a4f9a" translate="yes" xml:space="preserve">
          <source>Sets readonly so keyboard doesn't come up on mobile devices</source>
          <target state="translated">Устанавливается только для чтения,чтобы клавиатура не появлялась на мобильных устройствах.</target>
        </trans-unit>
        <trans-unit id="c15fa4b758d35cc97d9959bcc45edd294156d605" translate="yes" xml:space="preserve">
          <source>Simple Example</source>
          <target state="translated">Простой пример</target>
        </trans-unit>
        <trans-unit id="8135c235c31a98216defa8fbb8f938c86e13ef37" translate="yes" xml:space="preserve">
          <source>Since Chrome 42+ and Firefox 41+ now support the &lt;strong&gt;document.execCommand('copy')&lt;/strong&gt; command. So I created a couple of functions for a cross-browser copy-to-clipboard ability using a combination of &lt;a href=&quot;https://stackoverflow.com/a/8024509/4307527&quot;&gt;Tim Down's old answer&lt;/a&gt; and &lt;a href=&quot;https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en&quot;&gt;Google Developer's answer&lt;/a&gt;:</source>
          <target state="translated">Поскольку Chrome 42+ и Firefox 41+ теперь поддерживают команду &lt;strong&gt;document.execCommand ('copy')&lt;/strong&gt; . Поэтому я создал несколько функций для кросс-браузерной функции копирования в буфер обмена, используя комбинацию &lt;a href=&quot;https://stackoverflow.com/a/8024509/4307527&quot;&gt;старого ответа Тима Дауна и ответа&lt;/a&gt; &lt;a href=&quot;https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en&quot;&gt;Google Developer&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c8078f72c2940b8113477cd71feeca2d02b12354" translate="yes" xml:space="preserve">
          <source>So, when the user hit</source>
          <target state="translated">Итак,когда пользователь ударил</target>
        </trans-unit>
        <trans-unit id="32f78d4e0fdf53e7c927fcaaa0dbc582004ccba3" translate="yes" xml:space="preserve">
          <source>Solution: create a textarea where you will be inserting data for the user to copy (for me when the user is selecting cells), set focus on it (for example, when user press</source>
          <target state="translated">Решение:создайте текстовое поле,в которое вы будете вставлять данные для копирования пользователем (для меня,когда пользователь выбирает ячейки),установите на них фокус (например,когда пользователь нажимает кнопку</target>
        </trans-unit>
        <trans-unit id="72627fc713699d0a267314a9ad6ac17847b218d9" translate="yes" xml:space="preserve">
          <source>Some things to watch out for if you are implementing this yourself:</source>
          <target state="translated">На некоторые вещи стоит обратить внимание,если вы сами это реализуете:</target>
        </trans-unit>
        <trans-unit id="60f4d295332d2122f5d508b59a4671e7697b6d56" translate="yes" xml:space="preserve">
          <source>Tabs are converted to spaces (at least in Chrome).</source>
          <target state="translated">Вкладки преобразуются в пробелы (по крайней мере,в хром).</target>
        </trans-unit>
        <trans-unit id="ae5d7f403f0699079fdb21de9b538eae649a06c0" translate="yes" xml:space="preserve">
          <source>Tested with Google Chrome 44, Firefox 42.0a1 and Internet Explorer 11.0.8600.17814.</source>
          <target state="translated">Протестировано с Google Chrome 44,Firefox 42.0a1 и Internet Explorer 11.0.8600.17814.</target>
        </trans-unit>
        <trans-unit id="9386753d3626e0e79d3472cf71af89387e43c1cb" translate="yes" xml:space="preserve">
          <source>Text can be copied to the clipboard directly from a variable.</source>
          <target state="translated">Текст может быть скопирован в буфер обмена непосредственно из переменной.</target>
        </trans-unit>
        <trans-unit id="bc77d6ce85abd20c078b3651ccabfe7a1c44f6ce" translate="yes" xml:space="preserve">
          <source>Text is read from the DOM and placed on the clipboard.</source>
          <target state="translated">Текст считывается с флэш-накопителя и помещается в буфер обмена.</target>
        </trans-unit>
        <trans-unit id="2bf84f1c589fa0e64d18fad37a18f439b0ffc3ae" translate="yes" xml:space="preserve">
          <source>Text-focused portion available in &lt;a href=&quot;https://developers.google.com/web/updates/2018/03/clipboardapi&quot;&gt;Chrome 66 (March 2018)&lt;/a&gt;</source>
          <target state="translated">Текстовая часть доступна в &lt;a href=&quot;https://developers.google.com/web/updates/2018/03/clipboardapi&quot;&gt;Chrome 66 (март 2018)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="508dbcc82c35b0a2d3417deeb2456de3548adefb" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&quot;&gt;&lt;code&gt;document.execCommand('copy')&lt;/code&gt;&lt;/a&gt; support has grown, see the links below for browser updates:</source>
          <target state="translated">Поддержка JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&quot;&gt; &lt;code&gt;document.execCommand('copy')&lt;/code&gt; &lt;/a&gt; возросла, см. Ссылки ниже для обновлений браузера:</target>
        </trans-unit>
        <trans-unit id="d8bbd68d529d00d4053d53061389f1306fe9736c" translate="yes" xml:space="preserve">
          <source>The above simple example works great if there is a &lt;code&gt;textarea&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt; element visible on screen.</source>
          <target state="translated">Приведенный выше простой пример прекрасно работает, если на экране видна &lt;code&gt;textarea&lt;/code&gt; или элемент &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15906d76c75f558b48333733c2480be23e8817c2" translate="yes" xml:space="preserve">
          <source>The following approach works in Chrome, Firefox, Internet Explorer and Edge, and in recent versions of Safari (copy support was added in version 10 which was released Oct 2016).</source>
          <target state="translated">Следующий подход работает в Chrome,Firefox,Internet Explorer и Edge,а также в последних версиях Safari (поддержка копирования была добавлена в версии 10,которая была выпущена в октябре 2016 года).</target>
        </trans-unit>
        <trans-unit id="8b67de39df34127a60b5e61678de7d1ad2da8b79" translate="yes" xml:space="preserve">
          <source>The function below should handle all of the following issues as cleanly as possible. Please leave a comment if you find any problems or have any suggestions for improving it.</source>
          <target state="translated">Функция,описанная ниже,должна решать все перечисленные ниже вопросы как можно более чисто.Пожалуйста,оставьте свой комментарий,если у Вас возникли какие-либо проблемы или предложения по улучшению работы функции.</target>
        </trans-unit>
        <trans-unit id="8f442eece98029b4afac29d398c7570cd2ac0fae" translate="yes" xml:space="preserve">
          <source>The other methods will copy plain text to the clipboard. To copy HTML (ie, you can paste results into a WSIWYG editor), you can do the following in &lt;strong&gt;IE ONLY&lt;/strong&gt;. This is is fundamentally different from the other methods, as the browser actually visibly selects the content.</source>
          <target state="translated">Другие методы будут копировать обычный текст в буфер обмена. Чтобы скопировать HTML (т.е. вы можете вставить результаты в редактор WSIWYG), вы можете сделать следующее только в &lt;strong&gt;IE&lt;/strong&gt; . Это принципиально отличается от других методов, поскольку браузер фактически визуально выбирает контент.</target>
        </trans-unit>
        <trans-unit id="b8e1994f9cc3b72a15f33aa0f25f3a5e041f7cbf" translate="yes" xml:space="preserve">
          <source>The rest of this post goes into the nuances and detail of the &lt;code&gt;document.execCommand('copy')&lt;/code&gt; API.</source>
          <target state="translated">Остальная часть этой статьи посвящена нюансам и деталям API &lt;code&gt;document.execCommand('copy')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebc63cf665aa02bf5e804dad09fafdcd5901b71f" translate="yes" xml:space="preserve">
          <source>The solution is to overly a flash object above the Copy button, or whatever element initiates the copy. Zero Clipboard is currently the best library with this implementation. Experienced Flash developers may just want to make their own library.</source>
          <target state="translated">Решение заключается в том,чтобы перекрыть флэш-объект над кнопкой Copy или любым другим элементом,инициирующим копирование.Нулевой буфер обмена на данный момент является лучшей библиотекой с этой реализацией.Опытные разработчики Flash могут просто захотеть создать свою собственную библиотеку.</target>
        </trans-unit>
        <trans-unit id="4c825b892ef628587c4987a6d89570fad751f926" translate="yes" xml:space="preserve">
          <source>The textarea will be visible while the Internet Explorer dialog is shown, you either need to hide it, or use the Internet Explorer specific clipboardData API.</source>
          <target state="translated">Текстовое поле будет видно во время отображения диалога Internet Explorer,его нужно либо скрыть,либо использовать API ClipboardData,специфичный для Internet Explorer.</target>
        </trans-unit>
        <trans-unit id="c6c429f2097e26821cf68086962d8263a67b50c9" translate="yes" xml:space="preserve">
          <source>The user is presented with the prompt box, where the text to be copied is already selected. Now it's enough to press</source>
          <target state="translated">У пользователя появляется окно запроса,в котором уже выбран текст для копирования.Теперь достаточно нажать</target>
        </trans-unit>
        <trans-unit id="d5d9a9c73c2b7750c0eb54a396cc46a0c85fc19b" translate="yes" xml:space="preserve">
          <source>There are many answers already, however like to add one (jQuery). Works great on any browser, also mobile ones (i.e., prompts about security, but when you accept it just works fine).</source>
          <target state="translated">Ответов уже много,однако хотелось бы добавить один (jQuery).Отлично работает на любом браузере,в том числе и на мобильном (т.е.подсказки о безопасности,но когда вы принимаете их,они просто отлично работают).</target>
        </trans-unit>
        <trans-unit id="f72dba8dec71e6aa36c0d357f3e56e593d830816" translate="yes" xml:space="preserve">
          <source>There are three primary browser APIs for copying to the clipboard:</source>
          <target state="translated">Есть три основных API браузера для копирования в буфер обмена:</target>
        </trans-unit>
        <trans-unit id="4723f87aee0ab1683356a1aa853597e1dae53825" translate="yes" xml:space="preserve">
          <source>This is a bit of a combination between the other answers.</source>
          <target state="translated">Это небольшая комбинация между другими ответами.</target>
        </trans-unit>
        <trans-unit id="7e0d0403fb6e441244b5a78579484dce4a04ef34" translate="yes" xml:space="preserve">
          <source>This is an expansion of @Chase's answer, with the advantage that it will work for IMAGE and TABLE elements, not just DIVs on IE9.</source>
          <target state="translated">Это расширение ответа @Chase,с тем преимуществом,что он будет работать для элементов IMAGE и TABLE,а не только для DIV на IE9.</target>
        </trans-unit>
        <trans-unit id="27b64e569ebd1c2b5923ac49b03c5f5a2d9369dd" translate="yes" xml:space="preserve">
          <source>This is the most simple in IE, where you can access the clipboardData object at anytime from JavaScript via:</source>
          <target state="translated">Это самое простое в IE,где вы можете получить доступ к объекту clipboardData в любое время с помощью JavaScript:</target>
        </trans-unit>
        <trans-unit id="f4a2e16c9979f1f5b053b7555cbc434f9551aeaf" translate="yes" xml:space="preserve">
          <source>This was the only thing I ever got working, after looking up various ways all around the Internet. This is a messy topic. There are lots of solutions posted around the world and most of them do &lt;em&gt;not&lt;/em&gt; work. This worked for me:</source>
          <target state="translated">Это была единственная вещь, которую я когда-либо получал, после того, как искал разные способы поиска по всему Интернету. Это грязная тема. По всему миру опубликовано множество решений, и большинство из них &lt;em&gt;не&lt;/em&gt; работают. Это сработало для меня:</target>
        </trans-unit>
        <trans-unit id="a05967935c50ad730650f42dda5b40885cafa8f9" translate="yes" xml:space="preserve">
          <source>To copy a selected text ('Text To Copy') to your clipboard, create a Bookmarklet (browser bookmark that executes JavaScript) and execute it (click on it). It will create a temporary textarea.</source>
          <target state="translated">Чтобы скопировать выделенный текст (&quot;Текст для копирования&quot;)в буфер обмена,создайте букмарклет (закладку браузера,которая выполняет JavaScript)и выполните его (щелкните по ней).Это создаст временную текстовую область.</target>
        </trans-unit>
        <trans-unit id="eb5880b39bfefd35310fd92b9ec3b91268199751" translate="yes" xml:space="preserve">
          <source>To develop create your own web page, serve that page over HTTPS connection to test and develop against.</source>
          <target state="translated">Чтобы создать свою собственную веб-страницу,обслуживать эту страницу по HTTPS соединения для тестирования и разработки против.</target>
        </trans-unit>
        <trans-unit id="4d9f2128a20a0c320cec0e36ba3b5138c7f697e5" translate="yes" xml:space="preserve">
          <source>Usage &amp;amp; examples are at &lt;a href=&quot;https://zenorocha.github.io/clipboard.js/&quot;&gt;https://zenorocha.github.io/clipboard.js/&lt;/a&gt;.</source>
          <target state="translated">Использование и примеры на &lt;a href=&quot;https://zenorocha.github.io/clipboard.js/&quot;&gt;https://zenorocha.github.io/clipboard.js/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="1156a1c9a8d87e54a6af37927cd1b5b00937db3d" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;copyToClipboard('some text')&lt;/code&gt;</source>
          <target state="translated">Использование: &lt;code&gt;copyToClipboard('some text')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39fd3332ce20ebc85822b1a117a4705328b2806f" translate="yes" xml:space="preserve">
          <source>Uses cssText to avoid exceptions in Internet&amp;nbsp;Explorer as opposed to style directly.</source>
          <target state="translated">Использует cssText, чтобы избежать исключений в Internet Explorer, в отличие от стиля напрямую.</target>
        </trans-unit>
        <trans-unit id="75eb7a68828d4e8cb80b6749b235c1a598e8fc74" translate="yes" xml:space="preserve">
          <source>We can get it on npm:</source>
          <target state="translated">Мы можем сделать это в вечернее время:</target>
        </trans-unit>
        <trans-unit id="a049d6da97830a21b630abe9c8de5f32fdb468ec" translate="yes" xml:space="preserve">
          <source>What is the best way to copy text to the clipboard? (multi-browser)</source>
          <target state="translated">Как лучше всего скопировать текст в буфер обмена? (многобраузерный)</target>
        </trans-unit>
        <trans-unit id="4273378585f392a795e93da5cbd3c51d633af541" translate="yes" xml:space="preserve">
          <source>Whilst a simple call to &lt;code&gt;document.execCommand('copy')&lt;/code&gt; wrapped in a &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; block called as a result of a user click will get you the most compatibility use the following has some provisos:</source>
          <target state="translated">В то время как простой вызов &lt;code&gt;document.execCommand('copy')&lt;/code&gt; заключенный в блок &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;catch&lt;/code&gt; , вызываемый в результате щелчка пользователя, обеспечит вам наибольшую совместимость, используйте следующие условия:</target>
        </trans-unit>
        <trans-unit id="1f7ba45752ccdc6a13661633b09ac1ba6c77fa69" translate="yes" xml:space="preserve">
          <source>ZeroClipboard is the best cross-browser solution I've found:</source>
          <target state="translated">ZeroClipboard-лучшее кросс-браузерное решение,которое я нашел:</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="332e94c9515c242af1486fca7150abe944335f1c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;document.queryCommandEnabled('copy')&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;document.execCommand('copy')&lt;/code&gt; will succeed if called now. Checking to ensure the command was called from a user-initiated thread and other requirements are met.</source>
          <target state="translated">и &lt;code&gt;document.queryCommandEnabled('copy')&lt;/code&gt; возвращают &lt;code&gt;true&lt;/code&gt; , если &lt;code&gt;document.execCommand('copy')&lt;/code&gt; будет успешным, если вызывается сейчас. Проверка того, что команда была вызвана из потока, инициированного пользователем, и выполнены ли другие требования.</target>
        </trans-unit>
        <trans-unit id="390cc0729a1e15ac403e88d49c76a495778dfb20" translate="yes" xml:space="preserve">
          <source>but in Internet Explorer it gives a syntax error. In Firefox, it says &lt;code&gt;unsafeWindow is not defined&lt;/code&gt;.</source>
          <target state="translated">но в Internet Explorer выдает синтаксическую ошибку. В Firefox говорится, что &lt;code&gt;unsafeWindow is not defined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c82ae62f59b07f9377d33b857781fbc0462e3e9" translate="yes" xml:space="preserve">
          <source>clipboard.js is also on &lt;a href=&quot;https://github.com/lgarron/clipboard.js&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">clipboard.js также есть на &lt;a href=&quot;https://github.com/lgarron/clipboard.js&quot;&gt;GitHub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="506de0e2e3e9145a78cd5152e58c530f2478a6df" translate="yes" xml:space="preserve">
          <source>document.execCommand('copy')</source>
          <target state="translated">document.execCommand('copy')</target>
        </trans-unit>
        <trans-unit id="e100de9d38a3f62eeca5021fb664afcfdce1a12a" translate="yes" xml:space="preserve">
          <source>execCommand() may throw in some cases.</source>
          <target state="translated">В некоторых случаях функция execCommand()может бросать.</target>
        </trans-unit>
        <trans-unit id="4d662d0f04bc742c958f773b286715d45788cd96" translate="yes" xml:space="preserve">
          <source>he/she gets copied cells he/she selected. After testing just resizing the textarea to one pixel (I didn't test if it will be working on display:none). It works nicely on all browsers, and it is transparent to the user.</source>
          <target state="translated">она не может скопировать клетки,не может быть выбрана.После тестирования просто изменил размер тексттереи на один пиксель (я не тестировал,будет ли он работать на display:none).Он хорошо работает на всех браузерах и прозрачен для пользователя.</target>
        </trans-unit>
        <trans-unit id="24040123f74614cf029df86ab2a4e90e958b5bb9" translate="yes" xml:space="preserve">
          <source>or uses the browser's menu).</source>
          <target state="translated">или использует меню браузера).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
