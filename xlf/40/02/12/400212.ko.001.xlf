<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/400212">
    <body>
      <group id="400212">
        <trans-unit id="e96265ca08352edfa32340b6268ab393f44a98ab" translate="yes" xml:space="preserve">
          <source>(When you attempt to do this outside of a system cut, copy, or paste event, however, IE will prompt the user to grant the web application clipboard permission.)</source>
          <target state="translated">그러나 시스템 잘라 내기, 복사 또는 붙여 넣기 이벤트 이외의 작업을 수행하려고 시도하면 IE는 사용자에게 웹 응용 프로그램 클립 보드 권한을 부여하라는 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e75d4528da466a3f3a6b52f228adf83ca40595a4" translate="yes" xml:space="preserve">
          <source>(codepen.io example may not work, read &quot;important&quot; note above)
Note that this snippet is not working well in Stack Overflow's embedded preview you can try it here: &lt;a href=&quot;https://codepen.io/DeanMarkTaylor/pen/RMRaJX?editors=1011&quot;&gt;https://codepen.io/DeanMarkTaylor/pen/RMRaJX?editors=1011&lt;/a&gt;</source>
          <target state="translated">(codepen.io 예제가 작동하지 않을 수 있습니다. 위의 &quot;중요한&quot;참고 사항을 읽으십시오.)이 스 니펫은 Stack Overflow의 내장 미리보기에서 제대로 작동하지 않습니다. &lt;a href=&quot;https://codepen.io/DeanMarkTaylor/pen/RMRaJX?editors=1011&quot;&gt;https://codepen.io/DeanMarkTaylor/pen/RMRaJX?editors = 1011&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1fb518efe4067aac236903a3806a7cd6e532e917" translate="yes" xml:space="preserve">
          <source>(may not work embedded in this site, read &quot;important&quot; note above)</source>
          <target state="translated">(이 사이트에 포함되어 있지 않을 수 있습니다. 위의 &quot;중요&quot;참고 사항을 읽으십시오)</target>
        </trans-unit>
        <trans-unit id="6e1d86c4f47dc109e9dc3341481977c9eb0c4f4d" translate="yes" xml:space="preserve">
          <source>(to close the box) -- and voila!</source>
          <target state="translated">(상자를 닫으려면)-그리고 짜잔!</target>
        </trans-unit>
        <trans-unit id="dcda7580dd706e3a97aa3af104c1ceef61336907" translate="yes" xml:space="preserve">
          <source>) and select the whole text.</source>
          <target state="translated">) 전체 텍스트를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="6e59b1e479a3507b1b429a7a5ca97870076d4c70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/clipboard-js&quot;&gt;clipboard.js&lt;/a&gt; is a small, non-Flash, utility that allows copying of text or HTML data to the clipboard. It's very easy to use, just include the .js and use something like this:</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/clipboard-js&quot;&gt;clipboard.js&lt;/a&gt; 는 텍스트 나 HTML 데이터를 클립 보드에 복사 할 수있는 플래시가 아닌 작은 유틸리티입니다. 사용하기가 매우 쉽습니다. .js를 포함하고 다음과 같이 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="21d27b63ba67cbc2ef3a06687792bd29f5d3beb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3.org/TR/clipboard-apis/#async-clipboard-api&quot;&gt;Async Clipboard API&lt;/a&gt;&lt;code&gt;[navigator.clipboard.writeText]&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/clipboard-apis/#async-clipboard-api&quot;&gt;비동기 클립 보드 API&lt;/a&gt; &lt;code&gt;[navigator.clipboard.writeText]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b17956a95dc62ccc551f30b9bde03106544a715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.queryCommandSupported('copy')&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt; if the command &quot;is supported by the browser&quot;.</source>
          <target state="translated">&quot;브라우저에서 지원하는&quot;명령 인 경우 &lt;code&gt;document.queryCommandSupported('copy')&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="9dee8f56e317d9e1f26e426598fce6c9643776e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/clipboardapi&quot;&gt;Unblocking Clipboard Access&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/clipboardapi&quot;&gt;클립 보드 액세스 차단 해제&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ba9a7d3abc89a175ca501248abe55ef2e6cad77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Warning&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="491f65549f02309068c86c19484bdf480ea8414b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT&lt;/strong&gt; (noted here 2020/02/20)</source>
          <target state="translated">&lt;strong&gt;중요&lt;/strong&gt; (여기에서 2020/02/20으로 표시)</target>
        </trans-unit>
        <trans-unit id="fcf52df4659a40030c57b9de8fc95a86ebb7b90b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This has been deprecated now. Migrate to &lt;a href=&quot;https://github.com/lgarron/clipboard-polyfill&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 이것은 더 이상 사용되지 않습니다. &lt;a href=&quot;https://github.com/lgarron/clipboard-polyfill&quot;&gt;여기로&lt;/a&gt; 마이그레이션 하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb2dad28be75fee151e85e9c1acf1490c5cc8584" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;The &lt;code&gt;document.execCommand()&lt;/code&gt; method is not supported in Internet Explorer 9 and earlier.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; &lt;em&gt;Internet Explorer 9 및 이전 버전에서는 &lt;code&gt;document.execCommand()&lt;/code&gt; 메서드가 지원되지 않습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="73c0cf44d26fb97edb64bb0aca4fb18f4ec6dde8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source&lt;/strong&gt;: &lt;a href=&quot;https://www.w3schools.com/howto/howto_js_copy_clipboard.asp&quot;&gt;W3Schools - &lt;em&gt;Copy Text to Clipboard&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;출처&lt;/strong&gt; : &lt;a href=&quot;https://www.w3schools.com/howto/howto_js_copy_clipboard.asp&quot;&gt;W3Schools- &lt;em&gt;클립 보드에 텍스트 복사&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b55b3f305d5787fd2eb96ce9506e83fb2dfad23" translate="yes" xml:space="preserve">
          <source>@korayem: Note that using html &lt;code&gt;input&lt;/code&gt; field won't respect line breaks &lt;code&gt;\n&lt;/code&gt; and will flatten any text into a single line.</source>
          <target state="translated">@korayem : html &lt;code&gt;input&lt;/code&gt; 필드를 사용하면 줄 바꿈을 고려하지 않으며 &lt;code&gt;\n&lt;/code&gt; 텍스트를 한 줄로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="67c421ebd761fa59a8235480e325252af646a300" translate="yes" xml:space="preserve">
          <source>A nice trick without flash: &lt;a href=&quot;https://stackoverflow.com/questions/17527870/how-does-trello-access-the-users-clipboard&quot;&gt;How does Trello access the user's clipboard?&lt;/a&gt;</source>
          <target state="translated">플래시가없는 좋은 &lt;a href=&quot;https://stackoverflow.com/questions/17527870/how-does-trello-access-the-users-clipboard&quot;&gt;방법&lt;/a&gt; : Trello는 어떻게 사용자의 클립 보드에 액세스합니까?</target>
        </trans-unit>
        <trans-unit id="856d306566ddd4dcad729102f7f41d26f5f71ec0" translate="yes" xml:space="preserve">
          <source>Access is asynchronous and uses &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/promises&quot;&gt;JavaScript Promises&lt;/a&gt;, can be written so security user prompts (if displayed) don't interrupt the JavaScript in page.</source>
          <target state="translated">액세스는 비동기식이며 &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/promises&quot;&gt;JavaScript Promises를&lt;/a&gt; 사용하므로 보안 사용자 프롬프트 (표시되는 경우)가 페이지의 JavaScript를 방해하지 않도록 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="32d6539eb3cb225eaaf1c2f918ecde419feaed0c" translate="yes" xml:space="preserve">
          <source>Access is synchronous, i.e. stops JavaScript in the page until complete including displaying and user interacting with any security prompts.</source>
          <target state="translated">액세스는 동 기적입니다. 즉 표시 및 사용자가 보안 프롬프트와 상호 작용하는 등 완료 될 때까지 페이지에서 JavaScript를 중지합니다.</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">추가 사항</target>
        </trans-unit>
        <trans-unit id="8225c019b26f4a9de1e9728e509c5133a235f100" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;document.execCommand('copy')&lt;/code&gt; calls must take place as a direct result of a user action, e.g. click event handler. This is a measure to prevent messing with the user's clipboard when they don't expect it.</source>
          <target state="translated">모든 &lt;code&gt;document.execCommand('copy')&lt;/code&gt; 호출은 클릭 이벤트 핸들러와 같은 사용자 작업의 직접적인 결과로 발생해야합니다. 이는 사용자 클립 보드가 예상하지 못한 경우 사용자의 클립 보드를 엉망으로 만드는 것을 방지하기위한 조치입니다.</target>
        </trans-unit>
        <trans-unit id="acf1ba18187e59703bde0e9bdb9a34c3dc35dea0" translate="yes" xml:space="preserve">
          <source>Allows you to modify what appears on the clipboard from any copy event, can include other formats of data other than plain text.</source>
          <target state="translated">복사 이벤트에서 클립 보드에 표시되는 내용을 수정하고 일반 텍스트 이외의 다른 형식의 데이터를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c385ea5eb927cc1c6219db7ea47412df630f7933" translate="yes" xml:space="preserve">
          <source>And also on &lt;a href=&quot;https://bower.io/&quot;&gt;Bower&lt;/a&gt;</source>
          <target state="translated">그리고 &lt;a href=&quot;https://bower.io/&quot;&gt;Bower&lt;/a&gt; 에서도</target>
        </trans-unit>
        <trans-unit id="55bc94285ac46dcaf58b2bbefd041e1746065f58" translate="yes" xml:space="preserve">
          <source>And if you need you may be set the timeout for function for restoring previous selection. My implementation on Mootools:</source>
          <target state="translated">그리고 필요한 경우 이전 선택을 복원하기위한 기능의 시간 초과를 설정할 수 있습니다. Mootools에 대한 구현 :</target>
        </trans-unit>
        <trans-unit id="32f881cc6ba6e48100b4e5da0aa60f8169934e6b" translate="yes" xml:space="preserve">
          <source>Any call to &lt;code&gt;document.execCommand&lt;/code&gt;, &lt;code&gt;document.queryCommandSupported&lt;/code&gt; or &lt;code&gt;document.queryCommandEnabled&lt;/code&gt; should be wrapped in a &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; block.</source>
          <target state="translated">&lt;code&gt;document.execCommand&lt;/code&gt; , &lt;code&gt;document.queryCommandSupported&lt;/code&gt; 또는 &lt;code&gt;document.queryCommandEnabled&lt;/code&gt; 에 대한 모든 호출은 &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;catch&lt;/code&gt; 블록에 래핑되어야합니다.</target>
        </trans-unit>
        <trans-unit id="26d0e98fe2bcb7cc7b175d7915bc8309e4ca7ff5" translate="yes" xml:space="preserve">
          <source>Append the textarea to the DOM.</source>
          <target state="translated">텍스트 영역을 DOM에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="68bcd8b744e2ec804f09412a959f90b18b569ca8" translate="yes" xml:space="preserve">
          <source>As mentioned by @nikksan in the comments, using &lt;code&gt;textarea&lt;/code&gt; will fix the problem as follows:</source>
          <target state="translated">주석에서 @nikksan이 언급했듯이 &lt;code&gt;textarea&lt;/code&gt; 를 사용하면 다음과 같이 문제가 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="a1598e8aed758a6728c7fb478f53b10ad524fd2b" translate="yes" xml:space="preserve">
          <source>As of Flash 10, you can only copy to clipboard if the action originates from user interaction with a Flash object. (&lt;a href=&quot;http://www.adobe.com/devnet/flashplayer/articles/fplayer10_security_changes_02.html#head31&quot;&gt;Read related section from Adobe's Flash 10 announcement&lt;/a&gt;)</source>
          <target state="translated">Flash 10부터 액션이 Flash 객체와의 사용자 상호 작용에서 비롯된 경우에만 클립 보드로 복사 할 수 있습니다. ( &lt;a href=&quot;http://www.adobe.com/devnet/flashplayer/articles/fplayer10_security_changes_02.html#head31&quot;&gt;Adobe의 Flash 10 발표에서 관련 섹션 읽기&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="9834bc520e4a3d79cdacd2836542d974b65eea37" translate="yes" xml:space="preserve">
          <source>Async + Fallback</source>
          <target state="translated">비동기 + 폴백</target>
        </trans-unit>
        <trans-unit id="e8982a208f6308653ea4601ca5affa8f4edada81" translate="yes" xml:space="preserve">
          <source>Async Clipboard API</source>
          <target state="translated">비동기 클립 보드 API</target>
        </trans-unit>
        <trans-unit id="5a1033034be2c962601239fa8b9fad424724f57e" translate="yes" xml:space="preserve">
          <source>Auto copy to clipboard</source>
          <target state="translated">클립 보드로 자동 복사</target>
        </trans-unit>
        <trans-unit id="d970c27652652d6344e43e1ae8089db42550a170" translate="yes" xml:space="preserve">
          <source>Automatic copying to clipboard may be dangerous, therefore most browsers (except IE) make it very difficult. Personally, I use the following simple trick:</source>
          <target state="translated">클립 보드로 자동 복사하는 것은 위험 할 수 있으므로 대부분의 브라우저 (IE 제외)는 매우 어렵습니다. 개인적으로 다음과 같은 간단한 트릭을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2464a46af3bc6def3dfe2724b5e3fac23922690b" translate="yes" xml:space="preserve">
          <source>Browser Compatibility Detail</source>
          <target state="translated">브라우저 호환성 세부 사항</target>
        </trans-unit>
        <trans-unit id="02a8c960030f2f9457b2f49cecd3b0e346163641" translate="yes" xml:space="preserve">
          <source>Browser Support</source>
          <target state="translated">브라우저 지원</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="fc1ddd1fa4e0d9b8931e660ae31c11ef1c1f8999" translate="yes" xml:space="preserve">
          <source>Call document.execCommand(&quot;copy&quot;)</source>
          <target state="translated">document.execCommand ( &quot;copy&quot;)를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="f0eeff0d8b325dfbf6d9acdbe62d0b35dfc87061" translate="yes" xml:space="preserve">
          <source>Chrome 66 announcement post (March 2018)</source>
          <target state="translated">Chrome 66 공지 게시물 (2018 년 3 월)</target>
        </trans-unit>
        <trans-unit id="e048451cc6753ab456b5e3b1a7c4bc5d5e7bb3ff" translate="yes" xml:space="preserve">
          <source>Clipboard API</source>
          <target state="translated">클립 보드 API</target>
        </trans-unit>
        <trans-unit id="560a5acaae3a950849068f68836522e4b60eca5e" translate="yes" xml:space="preserve">
          <source>Code from GitHub:</source>
          <target state="translated">GitHub의 코드 :</target>
        </trans-unit>
        <trans-unit id="1e9fe90b0108a403efdb3d5753637abb2eddc389" translate="yes" xml:space="preserve">
          <source>Complex Example: Copy to clipboard without displaying input</source>
          <target state="translated">복잡한 예 : 입력을 표시하지 않고 클립 보드에 복사</target>
        </trans-unit>
        <trans-unit id="1f9fd959c733298081d99378186853f50833c3ea" translate="yes" xml:space="preserve">
          <source>Copy text from HTML input to the clipboard:</source>
          <target state="translated">HTML 입력에서 클립 보드로 텍스트를 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="c9e1ab00b00b8f1d4ade2421d1366b3384e9274f" translate="yes" xml:space="preserve">
          <source>Copying plain text to the clipboard is relatively simple, assuming you want to do it during a system copy event (user presses</source>
          <target state="translated">시스템 복사 이벤트 중에 사용자가 원한다고 가정하면 일반 텍스트를 클립 보드에 복사하는 것은 비교적 간단합니다.</target>
        </trans-unit>
        <trans-unit id="3421219dee9df20a58e105115b618942d922a453" translate="yes" xml:space="preserve">
          <source>Create a textarea and set its contents to the text you want copied to the clipboard.</source>
          <target state="translated">텍스트 영역을 만들고 그 내용을 클립 보드에 복사 할 텍스트로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="dd6a02a553da4cb247f914011dd67c37487ec082" translate="yes" xml:space="preserve">
          <source>Ctrl</source>
          <target state="translated">Ctrl</target>
        </trans-unit>
        <trans-unit id="aed5b4d8e351ae74e3ace403f868fc20762ffdcc" translate="yes" xml:space="preserve">
          <source>Different browser implementations and browser versions throw differing types of exceptions when called instead of returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">다른 브라우저 구현과 브라우저 버전은 &lt;code&gt;false&lt;/code&gt; 를 반환하는 대신 호출 될 때 다른 유형의 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="5a226ccf6af51fb95b675284c85897bb89775745" translate="yes" xml:space="preserve">
          <source>Different browser implementations are still in flux and the &lt;a href=&quot;https://w3c.github.io/clipboard-apis/&quot;&gt;Clipboard API&lt;/a&gt; is still in draft, so remember to do your testing.</source>
          <target state="translated">다른 브라우저 구현은 여전히 ​​유동적이며 &lt;a href=&quot;https://w3c.github.io/clipboard-apis/&quot;&gt;클립 보드 API&lt;/a&gt; 는 아직 초안이므로 테스트를 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="28740c6842d7eb88bad092a74e279396ffcd3536" translate="yes" xml:space="preserve">
          <source>Don't expect clipboard related commands to work whilst you are testing code in the console. Generally the page is required to be active (Async Clipboard API) or requires user interaction (e.g. a user click) to allow (&lt;code&gt;document.execCommand('copy')&lt;/code&gt;) to access the clipboard see below for more detail.</source>
          <target state="translated">콘솔에서 코드를 테스트하는 동안 클립 보드 관련 명령이 작동하지 않아도됩니다. 일반적으로 페이지가 활성화되어 있거나 (Async Clipboard API) ( &lt;code&gt;document.execCommand('copy')&lt;/code&gt; ) 클립 보드에 액세스 할 수 있도록 사용자 상호 작용 (예 : 사용자 클릭)이 필요합니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9a1d594eb2d8591a4d909166f374bda0554437bb" translate="yes" xml:space="preserve">
          <source>Due to the level of browser support for the new Async Clipboard API you will likely want to fallback to the &lt;code&gt;document.execCommand('copy')&lt;/code&gt; method to get good browser coverage.</source>
          <target state="translated">새로운 Async Clipboard API에 대한 브라우저 지원 수준으로 인해 &lt;code&gt;document.execCommand('copy')&lt;/code&gt; 메소드로 대체하여 브라우저 범위를 넓히고 싶을 것입니다.</target>
        </trans-unit>
        <trans-unit id="5a22dc9f176d880860261392386d3fa4eee3c704" translate="yes" xml:space="preserve">
          <source>During testing ~April 2015 only Internet Explorer was noted as displaying permissions prompts whilst writing to the clipboard.</source>
          <target state="translated">~ 2015 년 4 월 ~ 테스트 동안 클립 보드에 쓰는 동안 Internet Explorer 만 권한 프롬프트를 표시하는 것으로 나타났습니다.</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="92098df6a3dbfbc7a91d4337f6c353653b8dddf1" translate="yes" xml:space="preserve">
          <source>For security reasons, this can only called from an event handler such as click (Just as with opening windows).</source>
          <target state="translated">보안상의 이유로, 클릭과 같은 이벤트 핸들러에서만 호출 할 수 있습니다 (창을 여는 경우와 동일).</target>
        </trans-unit>
        <trans-unit id="ca83a58af2fa61f2776c5410eefb27139675814c" translate="yes" xml:space="preserve">
          <source>From one of the projects I've been working on, a jQuery copy-to-clipboard plugin that utilizes the &lt;a href=&quot;https://github.com/patricklodder/jquery-zclip&quot;&gt;Zero Clipboard&lt;/a&gt; library.</source>
          <target state="translated">내가 작업 한 프로젝트 중 하나에서 &lt;a href=&quot;https://github.com/patricklodder/jquery-zclip&quot;&gt;Zero Clipboard&lt;/a&gt; 라이브러리를 사용하는 jQuery 클립 보드 클립 보드 플러그인.</target>
        </trans-unit>
        <trans-unit id="ec15b457aaa9f705d48240bfff948700326decbe" translate="yes" xml:space="preserve">
          <source>General development notes</source>
          <target state="translated">일반적인 개발 노트</target>
        </trans-unit>
        <trans-unit id="de606c275ead21eb18671a59a0197493aa4e6707" translate="yes" xml:space="preserve">
          <source>Google Chrome 43+ (~April 2015)</source>
          <target state="translated">Chrome 43 이상 (2015 년 4 월 ~)</target>
        </trans-unit>
        <trans-unit id="6cd83e1c00736c966907a051dca51ccecd49dd23" translate="yes" xml:space="preserve">
          <source>Has a workaround for iOS so that it actually works as it normally blocks execCommand.</source>
          <target state="translated">iOS에 대한 해결 방법이 있으므로 실제로는 execCommand를 차단하는 것처럼 실제로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="027e4d51af3a2706d15e492657818f5ff727db7d" translate="yes" xml:space="preserve">
          <source>Here is a simple example (may not work embedded in this site, read &quot;important&quot; note above):</source>
          <target state="translated">다음은 간단한 예입니다 (이 사이트에 포함되지 않은 경우 위의 &quot;중요&quot;참고 사항 참조).</target>
        </trans-unit>
        <trans-unit id="ff28e34c7b269519a1250c40752aa30a3f526707" translate="yes" xml:space="preserve">
          <source>Here is a test/demo page which demonstrates the code working:
&lt;a href=&quot;https://deanmarktaylor.github.io/clipboard-test/&quot;&gt;https://deanmarktaylor.github.io/clipboard-test/&lt;/a&gt;</source>
          <target state="translated">다음은 코드 작동을 보여주는 테스트 / 데모 페이지입니다. &lt;a href=&quot;https://deanmarktaylor.github.io/clipboard-test/&quot;&gt;https://deanmarktaylor.github.io/clipboard-test/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1e57f745fbd5cae8d9184892ad97542e92eeb37" translate="yes" xml:space="preserve">
          <source>Here is my take on that one...</source>
          <target state="translated">여기에 내가 가져가는 것이 있습니다 ...</target>
        </trans-unit>
        <trans-unit id="5ef0e3e404407e991996a23ad4564c3121299baa" translate="yes" xml:space="preserve">
          <source>Here it is:</source>
          <target state="translated">여기있어:</target>
        </trans-unit>
        <trans-unit id="dd1e3d1c363e66eba074ecf268f04fd481a7afa3" translate="yes" xml:space="preserve">
          <source>Here's yet another way to copy text:</source>
          <target state="translated">텍스트를 복사하는 또 다른 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dd25b1528c9013edbcd817487ed6b4308279b170" translate="yes" xml:space="preserve">
          <source>How do I copy to the clipboard in JavaScript</source>
          <target state="translated">JavaScript로 클립 보드에 복사하는 방법</target>
        </trans-unit>
        <trans-unit id="de2f217cb34a22e24f2bffb160103b608e9bc84f" translate="yes" xml:space="preserve">
          <source>However as an example of browser compatibility issues, Google Chrome from ~April to ~October 2015 only returned &lt;code&gt;true&lt;/code&gt; from &lt;code&gt;document.queryCommandSupported('copy')&lt;/code&gt; if the command was called from a user-initiated thread.</source>
          <target state="translated">그러나 브라우저 호환성 문제의 예로, ~ 4 월에서 ~ 10 월 2015까지 Chrome은 명령이 사용자 시작 스레드에서 호출 된 경우 &lt;code&gt;document.queryCommandSupported('copy')&lt;/code&gt; 에서만 &lt;code&gt;true&lt;/code&gt; 를 반환했습니다.</target>
        </trans-unit>
        <trans-unit id="6e1dffcce04f8999377bb8326748a74053499dcb" translate="yes" xml:space="preserve">
          <source>I can't paste an example (commercial project), but you get the idea.</source>
          <target state="translated">예제 (상업 프로젝트)를 붙여 넣을 수는 없지만 아이디어는 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f4cfd5a7996a41f2b20dd8a8092cf36b01c950c6" translate="yes" xml:space="preserve">
          <source>I do realize this code will show a 1-pixel wide component visibly on the screen for a millisecond, but decided not to worry about that, which is something that others can address if a real problem.</source>
          <target state="translated">이 코드는 1 픽셀 너비의 구성 요소를 화면에 1 밀리 초 동안 시각적으로 표시하지만 그 문제에 대해 걱정하지 않기로 결정했습니다. 실제 문제가 발생하면 다른 사람들이 해결할 수있는 것입니다.</target>
        </trans-unit>
        <trans-unit id="966d38c44a502d4b0016776551e4db97e6a2ed53" translate="yes" xml:space="preserve">
          <source>I found the following solution:</source>
          <target state="translated">다음 해결책을 찾았습니다.</target>
        </trans-unit>
        <trans-unit id="ce5daa652636410cf2a6d446548fd88417b8875d" translate="yes" xml:space="preserve">
          <source>I had the same problem building a custom grid edit from (something like Excel) and compatibility with Excel. I had to support selecting multiple cells, copying and pasting.</source>
          <target state="translated">Excel에서 사용자 정의 그리드 편집을 작성하고 Excel과 호환성을 유지하는 것과 동일한 문제가있었습니다. 여러 셀 선택, 복사 및 붙여 넣기를 지원해야했습니다.</target>
        </trans-unit>
        <trans-unit id="c1505e7216dbf9bc253cc27dac1792b424a2ddf7" translate="yes" xml:space="preserve">
          <source>I have recently written a &lt;a href=&quot;https://www.lucidchart.com/techblog/2014/12/02/definitive-guide-copying-pasting-javascript/&quot;&gt;technical blog post&lt;/a&gt; on this very problem (I work at Lucidchart and we recently did an overhaul on our clipboard).</source>
          <target state="translated">나는 최근 에이 문제에 대한 &lt;a href=&quot;https://www.lucidchart.com/techblog/2014/12/02/definitive-guide-copying-pasting-javascript/&quot;&gt;기술 블로그 게시물&lt;/a&gt; 을 작성했습니다 (나는 Lucidchart에서 일하고 있으며 최근 클립 보드를 점검했습니다).</target>
        </trans-unit>
        <trans-unit id="23c9189db1ff6e2cb688c016c58d203404607422" translate="yes" xml:space="preserve">
          <source>I have the text in a hidden input. Because &lt;code&gt;setSelectionRange&lt;/code&gt; doesn't work on hidden inputs, I changed temporarily the type to text, copied the text, and then made it hidden again. If you want to copy the text from an element, you can pass it to the function and save its content in the target variable.</source>
          <target state="translated">숨겨진 입력에 텍스트가 있습니다. 숨겨진 입력에서 &lt;code&gt;setSelectionRange&lt;/code&gt; 가 작동하지 않기 때문에 일시적으로 유형을 텍스트로 변경하고 텍스트를 복사 한 다음 다시 숨겼습니다. 요소에서 텍스트를 복사하려는 경우 텍스트를 함수에 전달하고 해당 내용을 대상 변수에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f481599de8d99219c663f80ada085d861d69693b" translate="yes" xml:space="preserve">
          <source>I have tried:</source>
          <target state="translated">나는 시도했다 :</target>
        </trans-unit>
        <trans-unit id="64142f87f6143dab6c09288596e96559aa538097" translate="yes" xml:space="preserve">
          <source>I have used clipboard.js.</source>
          <target state="translated">clipboard.js를 사용했습니다.</target>
        </trans-unit>
        <trans-unit id="9b29eb5b35b06915e3d30e952d28183777874ef9" translate="yes" xml:space="preserve">
          <source>I use this very successfully (&lt;strong&gt;without&lt;/strong&gt; jQuery or any other framework).</source>
          <target state="translated">나는 이것을 jQuery 또는 다른 프레임 워크 &lt;strong&gt;없이&lt;/strong&gt; 매우 성공적으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="86507cb1f625e6ba89de2744cb4e96b28a353d90" translate="yes" xml:space="preserve">
          <source>I've put together what I think is the best one.</source>
          <target state="translated">나는 내가 생각하는 것을 가장 잘 정리했다.</target>
        </trans-unit>
        <trans-unit id="4df3900a6902efb269b256f49cc9d0d373811b00" translate="yes" xml:space="preserve">
          <source>If I pass in a string, it copies it. If nothing, it copies the page's URL.</source>
          <target state="translated">문자열을 전달하면 복사합니다. 아무것도 없으면 페이지의 URL을 복사합니다.</target>
        </trans-unit>
        <trans-unit id="a7bd28b63858fcaef5224254159907ac6e11fdcb" translate="yes" xml:space="preserve">
          <source>If you need non-flash support for iOS you just add a fall-back:</source>
          <target state="translated">iOS에 비 플래시 지원이 필요한 경우 대체를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9abe680fe97b16c6e82c89dff562f3400328d404" translate="yes" xml:space="preserve">
          <source>If you want a really simple solution (takes less than 5 minutes to integrate) and looks good right out of the box, then &lt;a href=&quot;http://github.com/mojombo/clippy&quot;&gt;Clippy&lt;/a&gt; is a nice alternative to some of the more complex solutions.</source>
          <target state="translated">정말 간단한 솔루션을 원하고 (통합하는 데 5 분도 걸리지 않음) 즉시 사용 가능한 것처럼 보이는 경우 &lt;a href=&quot;http://github.com/mojombo/clippy&quot;&gt;Clippy&lt;/a&gt; 는 좀 더 복잡한 솔루션을 대체 할 수있는 훌륭한 대안입니다.</target>
        </trans-unit>
        <trans-unit id="4396c7460b71e5e545861f3498efc7f2eb5bbcab" translate="yes" xml:space="preserve">
          <source>In 2018, here's how you can go about it:</source>
          <target state="translated">2018 년에는 다음을 수행 할 수있는 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fedc44c66a04946bf8e28caa225fdb62cd5f049" translate="yes" xml:space="preserve">
          <source>In Chrome 66 pages in active tabs can write to the clipboard without a permissions prompt.</source>
          <target state="translated">Chrome 66에서 활성 탭의 페이지는 권한 프롬프트없이 클립 보드에 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73b010066e6f44a5460adad9f3979ad8675fd165" translate="yes" xml:space="preserve">
          <source>In Chrome, you can create a Chrome extension that will give you &lt;a href=&quot;https://developer.chrome.com/extensions/declare_permissions&quot;&gt;clipboard permissions&lt;/a&gt; (this is what we do for Lucidchart). Then for users with your extension installed you'll just need to fire the system event yourself:</source>
          <target state="translated">Chrome에서 &lt;a href=&quot;https://developer.chrome.com/extensions/declare_permissions&quot;&gt;클립 보드 권한&lt;/a&gt; 을 제공하는 Chrome 확장 프로그램을 만들 수 있습니다 (이것이 Lucidchart에서 수행하는 작업입니다). 그런 다음 확장이 설치된 사용자의 경우 시스템 이벤트를 직접 시작하면됩니다.</target>
        </trans-unit>
        <trans-unit id="49f262928b98e36cd63398cec562fecf01d84221" translate="yes" xml:space="preserve">
          <source>In Internet Explorer system administrators can disable the clipboard API.</source>
          <target state="translated">Internet Explorer 시스템 관리자는 클립 보드 API를 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83ff207cfb83713fb2ef2b79ffb028407adfdd8e" translate="yes" xml:space="preserve">
          <source>In browsers other than IE you need to use a small flash object to manipulate the clipboard, e.g.</source>
          <target state="translated">IE 이외의 브라우저에서는 작은 플래시 객체를 사용하여 클립 보드를 조작해야합니다. 예 :</target>
        </trans-unit>
        <trans-unit id="68ac2ff338f18b8b5638d72d2d2203e5b3e4bccf" translate="yes" xml:space="preserve">
          <source>In some cases you might wish to copy text to the clipboard without displaying an &lt;code&gt;input&lt;/code&gt; / &lt;code&gt;textarea&lt;/code&gt; element. This is one example of a way to work around this (basically insert element, copy to clipboard, remove element):</source>
          <target state="translated">경우에 따라 &lt;code&gt;input&lt;/code&gt; / &lt;code&gt;textarea&lt;/code&gt; 요소를 표시하지 않고 클립 보드에 텍스트를 복사 할 수 있습니다. 이 문제를 해결하는 방법의 한 예입니다 (기본적으로 요소 삽입, 클립 보드에 복사, 요소 제거).</target>
        </trans-unit>
        <trans-unit id="8ecb52c26a6938186a46b1d9150c2a5dd74c9795" translate="yes" xml:space="preserve">
          <source>In your code:</source>
          <target state="translated">귀하의 코드에서 :</target>
        </trans-unit>
        <trans-unit id="27a69b4385439a997a62e9cb23e586860f6223ea" translate="yes" xml:space="preserve">
          <source>Internet Explorer 10+ (although &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms537834(v=vs.85).aspx&quot;&gt;this document&lt;/a&gt; indicates some support was there from Internet Explorer 5.5+).</source>
          <target state="translated">Internet Explorer 10 이상 ( &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms537834(v=vs.85).aspx&quot;&gt;이 문서&lt;/a&gt; 는 Internet Explorer 5.5 이상에서 일부 지원이 있었음에도 불구하고)</target>
        </trans-unit>
        <trans-unit id="7e997557e991caeb301608c9fda59641c80d4330" translate="yes" xml:space="preserve">
          <source>Internet Explorer will show a permission dialog the first time the clipboard is updated.</source>
          <target state="translated">Internet Explorer는 클립 보드를 처음 업데이트 할 때 권한 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="728327ee84bb45dd11d26a1df620614852b5525d" translate="yes" xml:space="preserve">
          <source>Internet Explorer, and Edge will scroll when the textarea is focused.</source>
          <target state="translated">텍스트 영역에 초점이 맞춰지면 Internet Explorer 및 Edge가 스크롤됩니다.</target>
        </trans-unit>
        <trans-unit id="441ff165a02d4e7f3eb647afcb7398332b18c655" translate="yes" xml:space="preserve">
          <source>Is it supported?</source>
          <target state="translated">지원됩니까?</target>
        </trans-unit>
        <trans-unit id="e74e3a7cc7789c6f3d7604c48dc36fdee9238c62" translate="yes" xml:space="preserve">
          <source>It is easier to use than the native Zero Clipboard plugin if you're a heavy jQuery user.</source>
          <target state="translated">jQuery 사용자가 많으면 기본 Zero Clipboard 플러그인보다 사용하기가 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="226c7fa1748f131d84f8d07c57ea3bdff356c116" translate="yes" xml:space="preserve">
          <source>It is used in my Angular 6+ code like so:</source>
          <target state="translated">내 Angular 6 + 코드에서 다음과 같이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5dfdac7976c65268a5fb891b4e5959cf4425c7ea" translate="yes" xml:space="preserve">
          <source>It looks like Firefox has &lt;a href=&quot;http://kb.mozillazine.org/Granting_JavaScript_access_to_the_clipboard&quot;&gt;some options&lt;/a&gt; that allow users to grant permissions to certain sites to access the clipboard, but I haven't tried any of these personally.</source>
          <target state="translated">Firefox에는 사용자가 특정 사이트에 클립 보드에 액세스 할 수있는 권한을 부여 할 수있는 &lt;a href=&quot;http://kb.mozillazine.org/Granting_JavaScript_access_to_the_clipboard&quot;&gt;몇 가지 옵션&lt;/a&gt; 이 있지만 개인적으로는 시도하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="edc927f430f24f6f35f3e4a7227a3084dedfccfd" translate="yes" xml:space="preserve">
          <source>It seems I misread the question, but for reference, you can extract a range of the DOM (not to clipboard; compatible with all modern browsers), and combine it with the oncopy and onpaste and onbeforepaste events to get clipboard behaviour. Here's the code to achieve this:</source>
          <target state="translated">질문을 잘못 읽은 것 같지만 참고로 다양한 DOM (클립 보드가 아닌 모든 최신 브라우저와 호환 가능)을 추출하여 oncopy 및 onpaste 및 onbeforepaste 이벤트와 결합하여 클립 보드 동작을 얻을 수 있습니다. 이를 달성하기위한 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9d8f3a46c7fca6b1daabdc13d2f6d760d93b3dd1" translate="yes" xml:space="preserve">
          <source>It uses jQuery, but it doesn't have to of course. You can change that if you want. I just had jQuery to my disposal. You can also add some CSS to make sure the input doesn't show. For instance something like:</source>
          <target state="translated">jQuery를 사용하지만 물론 필요하지는 않습니다. 원하는 경우 변경할 수 있습니다. 방금 jQuery를 처리했습니다. 입력 내용이 표시되지 않도록 CSS를 추가 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a4bd86a7c3a15079063de885c80184a6dee56820" translate="yes" xml:space="preserve">
          <source>It was written by a co-founder of GitHub. Example Flash embed code below:</source>
          <target state="translated">GitHub의 공동 설립자에 의해 작성되었습니다. 아래의 플래시 임베드 코드 예 :</target>
        </trans-unit>
        <trans-unit id="441ae2489be0504cddd656371b3fb468ee094840" translate="yes" xml:space="preserve">
          <source>More gymnastics to the clipboard stuff can be done too. See more information here:</source>
          <target state="translated">클립 보드에 더 많은 체조를 할 수도 있습니다. 자세한 내용은 여기를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="613745a19c347fa2918416da66368874d3291283" translate="yes" xml:space="preserve">
          <source>Most browsers support this as of ~April 2015 (see Browser Support below).</source>
          <target state="translated">대부분의 브라우저는 2015 년 4 월 ~ 현재이를 지원합니다 (아래 브라우저 지원 참조).</target>
        </trans-unit>
        <trans-unit id="84555820fbed1808e740204d9805dcd4ba8631d3" translate="yes" xml:space="preserve">
          <source>Mozilla Firefox 41+ (shipping ~September 2015)</source>
          <target state="translated">Mozilla Firefox 41 이상 (배송 ~ 2015 년 9 월)</target>
        </trans-unit>
        <trans-unit id="fb59b73ab89aa6fcc2a6a665e9fafa20988a3e9c" translate="yes" xml:space="preserve">
          <source>My bad. This only works in IE.</source>
          <target state="translated">내 잘못이야. 이것은 IE에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b6bb6bb9992b6ac79a47b50009a23dab447749b3" translate="yes" xml:space="preserve">
          <source>NOTE: This code will only work when executed as direct synchronous code to something like an 'onClick' method. If you call in an asynchronous response to Ajax or in any other asynchronous way it will not work.</source>
          <target state="translated">참고 :이 코드는 'onClick'메소드와 같은 직접 동기 코드로 실행될 때만 작동합니다. Ajax에 대한 비동기 응답을 호출하거나 다른 비동기 방식으로 호출하면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7113c6cd944b357a68fb150c1b8d2ab7d55ee8a6" translate="yes" xml:space="preserve">
          <source>Newlines and tabs can get swallowed unless you use a textarea. (Most articles seem to recommend using a div)</source>
          <target state="translated">텍스트 영역을 사용하지 않으면 줄 바꿈 및 탭이 삼킬 수 있습니다. (대부분의 기사는 div를 사용하는 것이 좋습니다)</target>
        </trans-unit>
        <trans-unit id="dc1ff63f306cbf40cda95e11831244d5ad29aef3" translate="yes" xml:space="preserve">
          <source>Not covered here as it doesn't directly answer the question.</source>
          <target state="translated">질문에 직접 대답하지 않으므로 여기에서 다루지 않습니다.</target>
        </trans-unit>
        <trans-unit id="507551cf40759bea0c3e8450706b180596ff4384" translate="yes" xml:space="preserve">
          <source>Note compatibility detail below.</source>
          <target state="translated">아래의 호환성 세부 사항에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="0ac312cbf7d21f2a877d3d921532b8a51b38d7e3" translate="yes" xml:space="preserve">
          <source>Note that since this post was originally written &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/Home/chromium-security/deprecating-permissions-in-cross-origin-iframes&quot;&gt;deprecation of permissions in cross-origin IFRAMEs&lt;/a&gt; and other &lt;a href=&quot;https://blog.chromium.org/2010/05/security-in-depth-html5s-sandbox.html&quot;&gt;IFRAME &quot;sandboxing&quot;&lt;/a&gt; prevents the embedded demos &quot;Run code snippet&quot; buttons and &quot;codepen.io example&quot; from working in some browsers (including Chrome and Microsoft Edge).</source>
          <target state="translated">이 게시물은 원래 &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/Home/chromium-security/deprecating-permissions-in-cross-origin-iframes&quot;&gt;출처 간 IFRAME&lt;/a&gt; 및 기타 &lt;a href=&quot;https://blog.chromium.org/2010/05/security-in-depth-html5s-sandbox.html&quot;&gt;IFRAME &quot;샌드 박스&quot;&lt;/a&gt; 에서 사용 권한이 더 이상 사용되지 않기 때문에 임베디드 데모 &quot;Run code snippet&quot;버튼 및 &quot;codepen.io example&quot;이 일부 브라우저 (Chrome 및 Microsoft Edge 포함)에서 작동하지 못하게합니다. ).</target>
        </trans-unit>
        <trans-unit id="09828435c936cfcb5084dcd64aa12bee70f98413" translate="yes" xml:space="preserve">
          <source>Note that there is an ability to &quot;request permission&quot; and test for access to the clipboard via the permissions API in Chrome 66.</source>
          <target state="translated">Chrome 66의 권한 API를 통해 '권한을 요청'하고 클립 보드에 대한 액세스를 테스트하는 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="601f2a5ad2b8b2eabbb300f2a9c49908f8729821" translate="yes" xml:space="preserve">
          <source>Note the full Clipboard API draft specification can be found here:
&lt;a href=&quot;https://w3c.github.io/clipboard-apis/&quot;&gt;https://w3c.github.io/clipboard-apis/&lt;/a&gt;</source>
          <target state="translated">전체 클립 보드 API 초안 사양은 &lt;a href=&quot;https://w3c.github.io/clipboard-apis/&quot;&gt;https://w3c.github.io/clipboard-apis/&lt;/a&gt; 에서 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1724bc61bec938c298ab72b89792982749c08955" translate="yes" xml:space="preserve">
          <source>Note: you will not see the textarea, as it is added and removed within the same synchronous invocation of Javascript code.</source>
          <target state="translated">참고 : Javascript 코드의 동일한 동기 호출 내에서 텍스트 영역이 추가 및 제거되므로 텍스트 영역이 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e0b45197aee7fa10a7b6954f08be2be44cf4e16" translate="yes" xml:space="preserve">
          <source>Now the clipboard copy operation is SAFE, because the user does it manually (but in a pretty straightforward way). Of course, works in all browsers.</source>
          <target state="translated">이제 클립 보드 복사 작업은 사용자가 수동으로 수행하기 때문에 안전하지만 매우 간단합니다. 물론 모든 브라우저에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2585fb3016c95ff7aeb8916dd1ebf51ad2062e9b" translate="yes" xml:space="preserve">
          <source>On key down handler creates &quot;pre&quot; tag. We set the content to copy to this tag, then make a selection on this tag and return true in handler. This calls standard handler of chrome and copies selected text.</source>
          <target state="translated">키 다운 핸들러에서 &quot;pre&quot;태그를 작성합니다. 이 태그에 복사 할 내용을 설정 한 다음이 태그를 선택하고 핸들러에서 true를 반환합니다. 크롬의 표준 핸들러를 호출하고 선택한 텍스트를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="b1a133a9ad7ca178ad4930dcdeec6fc3fe0602d5" translate="yes" xml:space="preserve">
          <source>On paste it creates textarea and works the same way.</source>
          <target state="translated">붙여 넣을 때 텍스트 영역이 생성되고 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c1007c17f6dc10dab2e3ea8f3a5784f767a6245c" translate="yes" xml:space="preserve">
          <source>Only supported on pages served over HTTPS.</source>
          <target state="translated">HTTPS를 통해 제공되는 페이지에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0ed1055849b20d70dc2ed4193b22de29e88836df" translate="yes" xml:space="preserve">
          <source>Only works if the user takes an action</source>
          <target state="translated">사용자가 조치를 취한 경우에만 작동</target>
        </trans-unit>
        <trans-unit id="a7afa2821b7787ebaf599441badb8b1df7aae2aa" translate="yes" xml:space="preserve">
          <source>Opera 29+ (based on Chromium 42, ~April 2015)</source>
          <target state="translated">Opera 29+ (2015 년 4 월 ~ Chromium 42 기반)</target>
        </trans-unit>
        <trans-unit id="8ed17881879518d1be4e7fea88c90c20a9ea713e" translate="yes" xml:space="preserve">
          <source>Or of course you could also do some inline styling</source>
          <target state="translated">또는 물론 인라인 스타일링을 수행 할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="986c083d75d6e86c5f64dcf0876f7daff3af314b" translate="yes" xml:space="preserve">
          <source>Other than that, there are some options on a browser-by-browser basis.</source>
          <target state="translated">그 외에도 브라우저별로 몇 가지 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6606a3209277f2145cdabd7418aa62d5f3a3957e" translate="yes" xml:space="preserve">
          <source>Overriding the copy event</source>
          <target state="translated">복사 이벤트 재정의</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="cdb12b3325a10ea3e26fdd906fdb66610b511d6f" translate="yes" xml:space="preserve">
          <source>PS may be this solution can be used for creating fully cross-browser solution without flash. Its works in FF and Chrome.</source>
          <target state="translated">PS는이 솔루션이 플래시없이 완벽한 크로스 브라우저 솔루션을 만드는 데 사용될 수 있습니다. FF와 Chrome에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b977e67f26c9373cea5fc3c8d5791d14b0282a49" translate="yes" xml:space="preserve">
          <source>Pasting - you could do same like this (differs on your target) - keep focus on textarea and catch paste events using onpaste (in my project I use textareas in cells to edit).</source>
          <target state="translated">붙여 넣기-이와 같이 할 수 있습니다 (대상에 따라 다름)-텍스트 영역에 계속 집중하고 onpaste를 사용하여 붙여 넣기 이벤트를 잡으십시오 (프로젝트에서 셀의 텍스트 영역을 사용하여 편집).</target>
        </trans-unit>
        <trans-unit id="bc617eddef5808a05fa13304523293335138e8a9" translate="yes" xml:space="preserve">
          <source>Putting text on the clipboard not during a system copy event is much more difficult. It looks like some of these other answers reference ways to do it via Flash, which is the only cross-browser way to do it (so far as I understand).</source>
          <target state="translated">시스템 복사 이벤트 중에 클립 보드에 텍스트를 입력하는 것은 훨씬 어렵습니다. 이 다른 답변 중 일부는 Flash를 통해 수행하는 방법을 참조하는 것처럼 보입니다.이 방법은 브라우저 간 유일한 방법입니다 (내가 이해하는 한).</target>
        </trans-unit>
        <trans-unit id="7ec8f1a665fd8b69db741b7ffd946d7d0344fb65" translate="yes" xml:space="preserve">
          <source>Reading and modifying the clipboard from a webpage raises security and privacy concerns. However, in Internet&amp;nbsp;Explorer, it is possible to do it. I found this &lt;a href=&quot;http://www.sajithmr.com/onclick-select-all-and-copy-to-clipboard-javascript/&quot;&gt;example snippet&lt;/a&gt;:</source>
          <target state="translated">웹 페이지에서 클립 보드를 읽고 수정하면 보안 및 개인 정보 보호 문제가 발생합니다. 그러나 Internet Explorer에서는이를 수행 할 수 있습니다. 이 &lt;a href=&quot;http://www.sajithmr.com/onclick-select-all-and-copy-to-clipboard-javascript/&quot;&gt;예제 스 니펫을&lt;/a&gt; 발견했습니다.</target>
        </trans-unit>
        <trans-unit id="6132b1e7bd98981e34c215e72361efa4a2b6bcff" translate="yes" xml:space="preserve">
          <source>Reference &lt;a href=&quot;https://www.w3.org/TR/clipboard-apis/#async-clipboard-api&quot;&gt;Async Clipboard API&lt;/a&gt; draft documentation</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/clipboard-apis/#async-clipboard-api&quot;&gt;비동기 클립 보드 API&lt;/a&gt; 초안 참조 문서</target>
        </trans-unit>
        <trans-unit id="bed2e12478c21d156c18cb0c4bde0904d90484aa" translate="yes" xml:space="preserve">
          <source>Remember to replace &lt;code&gt;#{text}&lt;/code&gt; with the text you need copied, and &lt;code&gt;#{bgcolor}&lt;/code&gt; with a color.</source>
          <target state="translated">&lt;code&gt;#{text}&lt;/code&gt; 를 복사해야하는 텍스트 로 바꾸고 # &lt;code&gt;#{bgcolor}&lt;/code&gt; 를 색상으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="9fe24af2a1a161e47e3f8895c3b2f12e0826984f" translate="yes" xml:space="preserve">
          <source>Remove the textarea from the dom.</source>
          <target state="translated">돔에서 텍스트 영역을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="d68c3601eb81dc5cf99c8da938d16b2d048b0131" translate="yes" xml:space="preserve">
          <source>Restores selection if there was one</source>
          <target state="translated">선택이있는 경우 선택을 복원합니다</target>
        </trans-unit>
        <trans-unit id="747f1ecccad6b2a084f6c678d408f86946e1e113" translate="yes" xml:space="preserve">
          <source>See Clipboard API documentation on &lt;a href=&quot;https://w3c.github.io/clipboard-apis/#override-copy&quot;&gt;Overriding the copy event&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://w3c.github.io/clipboard-apis/#override-copy&quot;&gt;복사 이벤트 재정의에 대한&lt;/a&gt; 클립 보드 API 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fc0fe9c56b8fc9f864a0f6dc096e14c1c8158387" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en&quot;&gt;Google Developers post here&lt;/a&gt; for more info.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en&quot;&gt;여기&lt;/a&gt; 에서 Google 개발자 게시물 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e88631214c45040d1409550aaaf82c5a9d10e6f8" translate="yes" xml:space="preserve">
          <source>Select the text in the textarea.</source>
          <target state="translated">텍스트 영역에서 텍스트를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="fdc1cd394cbb1374f1ef102987329fec493a4f9a" translate="yes" xml:space="preserve">
          <source>Sets readonly so keyboard doesn't come up on mobile devices</source>
          <target state="translated">휴대 기기에서 키보드가 표시되지 않도록 읽기 전용으로 설정</target>
        </trans-unit>
        <trans-unit id="c15fa4b758d35cc97d9959bcc45edd294156d605" translate="yes" xml:space="preserve">
          <source>Simple Example</source>
          <target state="translated">간단한 예</target>
        </trans-unit>
        <trans-unit id="8135c235c31a98216defa8fbb8f938c86e13ef37" translate="yes" xml:space="preserve">
          <source>Since Chrome 42+ and Firefox 41+ now support the &lt;strong&gt;document.execCommand('copy')&lt;/strong&gt; command. So I created a couple of functions for a cross-browser copy-to-clipboard ability using a combination of &lt;a href=&quot;https://stackoverflow.com/a/8024509/4307527&quot;&gt;Tim Down's old answer&lt;/a&gt; and &lt;a href=&quot;https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en&quot;&gt;Google Developer's answer&lt;/a&gt;:</source>
          <target state="translated">Chrome 42 이상과 Firefox 41 이상은 이제 &lt;strong&gt;document.execCommand ( 'copy')&lt;/strong&gt; 명령을 지원합니다. 그래서 &lt;a href=&quot;https://stackoverflow.com/a/8024509/4307527&quot;&gt;Tim Down의 이전 답변&lt;/a&gt; 과 &lt;a href=&quot;https://developers.google.com/web/updates/2015/04/cut-and-copy-commands?hl=en&quot;&gt;Google 개발자의 답변을&lt;/a&gt; 조합하여 브라우저 간 클립 보드로 복사 기능을위한 몇 가지 기능을 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="c8078f72c2940b8113477cd71feeca2d02b12354" translate="yes" xml:space="preserve">
          <source>So, when the user hit</source>
          <target state="translated">따라서 사용자가</target>
        </trans-unit>
        <trans-unit id="32f78d4e0fdf53e7c927fcaaa0dbc582004ccba3" translate="yes" xml:space="preserve">
          <source>Solution: create a textarea where you will be inserting data for the user to copy (for me when the user is selecting cells), set focus on it (for example, when user press</source>
          <target state="translated">솔루션 : 사용자가 복사 할 데이터를 삽입 할 텍스트 영역을 작성하고 (사용자가 셀을 선택할 때 나에게) 포커스를 설정하십시오 (예 : 사용자가 누를 때)</target>
        </trans-unit>
        <trans-unit id="72627fc713699d0a267314a9ad6ac17847b218d9" translate="yes" xml:space="preserve">
          <source>Some things to watch out for if you are implementing this yourself:</source>
          <target state="translated">직접 구현하는 경우주의해야 할 사항 :</target>
        </trans-unit>
        <trans-unit id="60f4d295332d2122f5d508b59a4671e7697b6d56" translate="yes" xml:space="preserve">
          <source>Tabs are converted to spaces (at least in Chrome).</source>
          <target state="translated">탭은 공백으로 변환됩니다 (적어도 Chrome에서는).</target>
        </trans-unit>
        <trans-unit id="ae5d7f403f0699079fdb21de9b538eae649a06c0" translate="yes" xml:space="preserve">
          <source>Tested with Google Chrome 44, Firefox 42.0a1 and Internet Explorer 11.0.8600.17814.</source>
          <target state="translated">Chrome 44, Firefox 42.0a1 및 Internet Explorer 11.0.8600.17814에서 테스트되었습니다.</target>
        </trans-unit>
        <trans-unit id="9386753d3626e0e79d3472cf71af89387e43c1cb" translate="yes" xml:space="preserve">
          <source>Text can be copied to the clipboard directly from a variable.</source>
          <target state="translated">변수에서 직접 텍스트를 클립 보드로 복사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc77d6ce85abd20c078b3651ccabfe7a1c44f6ce" translate="yes" xml:space="preserve">
          <source>Text is read from the DOM and placed on the clipboard.</source>
          <target state="translated">DOM에서 텍스트를 읽고 클립 보드에 배치합니다.</target>
        </trans-unit>
        <trans-unit id="2bf84f1c589fa0e64d18fad37a18f439b0ffc3ae" translate="yes" xml:space="preserve">
          <source>Text-focused portion available in &lt;a href=&quot;https://developers.google.com/web/updates/2018/03/clipboardapi&quot;&gt;Chrome 66 (March 2018)&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/web/updates/2018/03/clipboardapi&quot;&gt;Chrome 66&lt;/a&gt; 에서 제공되는 텍스트 중심 부분 (2018 년 3 월)</target>
        </trans-unit>
        <trans-unit id="508dbcc82c35b0a2d3417deeb2456de3548adefb" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&quot;&gt;&lt;code&gt;document.execCommand('copy')&lt;/code&gt;&lt;/a&gt; support has grown, see the links below for browser updates:</source>
          <target state="translated">JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&quot;&gt; &lt;code&gt;document.execCommand('copy')&lt;/code&gt; &lt;/a&gt; 지원이 증가했습니다. 브라우저 업데이트는 아래 링크를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d8bbd68d529d00d4053d53061389f1306fe9736c" translate="yes" xml:space="preserve">
          <source>The above simple example works great if there is a &lt;code&gt;textarea&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt; element visible on screen.</source>
          <target state="translated">위의 간단한 예제는 화면에 &lt;code&gt;textarea&lt;/code&gt; 이나 &lt;code&gt;input&lt;/code&gt; 요소가 보이는 경우 효과적입니다.</target>
        </trans-unit>
        <trans-unit id="15906d76c75f558b48333733c2480be23e8817c2" translate="yes" xml:space="preserve">
          <source>The following approach works in Chrome, Firefox, Internet Explorer and Edge, and in recent versions of Safari (copy support was added in version 10 which was released Oct 2016).</source>
          <target state="translated">다음 접근 방식은 Chrome, Firefox, Internet Explorer 및 Edge 및 최신 버전의 Safari에서 작동합니다 (2016 년 10 월에 릴리스 된 버전 10에서 복사 지원이 추가됨).</target>
        </trans-unit>
        <trans-unit id="8b67de39df34127a60b5e61678de7d1ad2da8b79" translate="yes" xml:space="preserve">
          <source>The function below should handle all of the following issues as cleanly as possible. Please leave a comment if you find any problems or have any suggestions for improving it.</source>
          <target state="translated">아래의 기능은 다음 문제를 가능한 한 깨끗하게 처리해야합니다. 문제가 있거나 개선을위한 제안이 있으면 의견을 남겨주십시오.</target>
        </trans-unit>
        <trans-unit id="8f442eece98029b4afac29d398c7570cd2ac0fae" translate="yes" xml:space="preserve">
          <source>The other methods will copy plain text to the clipboard. To copy HTML (ie, you can paste results into a WSIWYG editor), you can do the following in &lt;strong&gt;IE ONLY&lt;/strong&gt;. This is is fundamentally different from the other methods, as the browser actually visibly selects the content.</source>
          <target state="translated">다른 방법은 일반 텍스트를 클립 보드에 복사합니다. HTML을 복사하려면 (즉, 결과를 WSIWYG 편집기에 붙여 넣기) &lt;strong&gt;IE에서만&lt;/strong&gt; 다음을 수행 할 수 있습니다. 브라우저가 실제로 내용을 눈에 띄게 선택하기 때문에 이것은 다른 방법과 근본적으로 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b8e1994f9cc3b72a15f33aa0f25f3a5e041f7cbf" translate="yes" xml:space="preserve">
          <source>The rest of this post goes into the nuances and detail of the &lt;code&gt;document.execCommand('copy')&lt;/code&gt; API.</source>
          <target state="translated">이 포스트의 나머지 부분은 &lt;code&gt;document.execCommand('copy')&lt;/code&gt; API의 미묘한 차이와 세부 사항에 대해 설명 합니다.</target>
        </trans-unit>
        <trans-unit id="ebc63cf665aa02bf5e804dad09fafdcd5901b71f" translate="yes" xml:space="preserve">
          <source>The solution is to overly a flash object above the Copy button, or whatever element initiates the copy. Zero Clipboard is currently the best library with this implementation. Experienced Flash developers may just want to make their own library.</source>
          <target state="translated">해결책은 복사 버튼 위의 플래시 객체 또는 복사를 시작하는 모든 요소를 ​​과도하게하는 것입니다. Zero Clipboard는 현재이 구현에서 가장 좋은 라이브러리입니다. 숙련 된 Flash 개발자는 자신 만의 라이브러리를 만들고 싶을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c825b892ef628587c4987a6d89570fad751f926" translate="yes" xml:space="preserve">
          <source>The textarea will be visible while the Internet Explorer dialog is shown, you either need to hide it, or use the Internet Explorer specific clipboardData API.</source>
          <target state="translated">텍스트 영역은 Internet Explorer 대화 상자가 표시되는 동안 표시되며 숨기거나 Internet Explorer 특정 clipboardData API를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c6c429f2097e26821cf68086962d8263a67b50c9" translate="yes" xml:space="preserve">
          <source>The user is presented with the prompt box, where the text to be copied is already selected. Now it's enough to press</source>
          <target state="translated">복사 할 텍스트가 이미 선택된 프롬프트 상자가 사용자에게 표시됩니다. 이제는 충분합니다</target>
        </trans-unit>
        <trans-unit id="d5d9a9c73c2b7750c0eb54a396cc46a0c85fc19b" translate="yes" xml:space="preserve">
          <source>There are many answers already, however like to add one (jQuery). Works great on any browser, also mobile ones (i.e., prompts about security, but when you accept it just works fine).</source>
          <target state="translated">이미 많은 답변이 있지만 하나를 추가하고 싶습니다 (jQuery). 모든 브라우저, 모바일 브라우저에서도 잘 작동합니다 (예 : 보안에 대한 프롬프트가 표시되지만 동의하면 잘 작동 함).</target>
        </trans-unit>
        <trans-unit id="f72dba8dec71e6aa36c0d357f3e56e593d830816" translate="yes" xml:space="preserve">
          <source>There are three primary browser APIs for copying to the clipboard:</source>
          <target state="translated">클립 보드에 복사하기위한 세 가지 기본 브라우저 API가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4723f87aee0ab1683356a1aa853597e1dae53825" translate="yes" xml:space="preserve">
          <source>This is a bit of a combination between the other answers.</source>
          <target state="translated">이것은 다른 답변 사이의 약간의 조합입니다.</target>
        </trans-unit>
        <trans-unit id="7e0d0403fb6e441244b5a78579484dce4a04ef34" translate="yes" xml:space="preserve">
          <source>This is an expansion of @Chase's answer, with the advantage that it will work for IMAGE and TABLE elements, not just DIVs on IE9.</source>
          <target state="translated">이것은 @Chase의 답변을 확장 한 것으로 IE9의 DIV뿐만 아니라 IMAGE 및 TABLE 요소에서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="27b64e569ebd1c2b5923ac49b03c5f5a2d9369dd" translate="yes" xml:space="preserve">
          <source>This is the most simple in IE, where you can access the clipboardData object at anytime from JavaScript via:</source>
          <target state="translated">이것은 IE에서 가장 간단합니다. JavaScript를 통해 언제든지 clipboardData 객체에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4a2e16c9979f1f5b053b7555cbc434f9551aeaf" translate="yes" xml:space="preserve">
          <source>This was the only thing I ever got working, after looking up various ways all around the Internet. This is a messy topic. There are lots of solutions posted around the world and most of them do &lt;em&gt;not&lt;/em&gt; work. This worked for me:</source>
          <target state="translated">이것은 인터넷에서 여러 가지 방법을 찾은 후에 내가 일한 유일한 것입니다. 지저분한 주제입니다. 전 세계에 많은 솔루션이 게시되어 있으며 대부분 작동하지 &lt;em&gt;않습니다&lt;/em&gt; . 이것은 나를 위해 일했다 :</target>
        </trans-unit>
        <trans-unit id="a05967935c50ad730650f42dda5b40885cafa8f9" translate="yes" xml:space="preserve">
          <source>To copy a selected text ('Text To Copy') to your clipboard, create a Bookmarklet (browser bookmark that executes JavaScript) and execute it (click on it). It will create a temporary textarea.</source>
          <target state="translated">선택한 텍스트 ( '텍스트 복사')를 클립 보드에 복사하려면 책갈피 릿 (JavaScript를 실행하는 브라우저 책갈피)을 작성하고 실행하십시오 (클릭). 임시 텍스트 영역을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="eb5880b39bfefd35310fd92b9ec3b91268199751" translate="yes" xml:space="preserve">
          <source>To develop create your own web page, serve that page over HTTPS connection to test and develop against.</source>
          <target state="translated">자체 웹 페이지를 개발하려면 HTTPS 연결을 통해 해당 페이지를 제공하여 테스트 및 개발하십시오.</target>
        </trans-unit>
        <trans-unit id="4d9f2128a20a0c320cec0e36ba3b5138c7f697e5" translate="yes" xml:space="preserve">
          <source>Usage &amp;amp; examples are at &lt;a href=&quot;https://zenorocha.github.io/clipboard.js/&quot;&gt;https://zenorocha.github.io/clipboard.js/&lt;/a&gt;.</source>
          <target state="translated">사용법 및 예제는 &lt;a href=&quot;https://zenorocha.github.io/clipboard.js/&quot;&gt;https://zenorocha.github.io/clipboard.js/에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="1156a1c9a8d87e54a6af37927cd1b5b00937db3d" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;copyToClipboard('some text')&lt;/code&gt;</source>
          <target state="translated">사용법 : &lt;code&gt;copyToClipboard('some text')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39fd3332ce20ebc85822b1a117a4705328b2806f" translate="yes" xml:space="preserve">
          <source>Uses cssText to avoid exceptions in Internet&amp;nbsp;Explorer as opposed to style directly.</source>
          <target state="translated">직접 스타일이 아닌 Internet Explorer에서 예외를 피하기 위해 cssText를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="75eb7a68828d4e8cb80b6749b235c1a598e8fc74" translate="yes" xml:space="preserve">
          <source>We can get it on npm:</source>
          <target state="translated">우리는 npm에 그것을 얻을 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a049d6da97830a21b630abe9c8de5f32fdb468ec" translate="yes" xml:space="preserve">
          <source>What is the best way to copy text to the clipboard? (multi-browser)</source>
          <target state="translated">텍스트를 클립 보드에 복사하는 가장 좋은 방법은 무엇입니까? (멀티 브라우저)</target>
        </trans-unit>
        <trans-unit id="4273378585f392a795e93da5cbd3c51d633af541" translate="yes" xml:space="preserve">
          <source>Whilst a simple call to &lt;code&gt;document.execCommand('copy')&lt;/code&gt; wrapped in a &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt; block called as a result of a user click will get you the most compatibility use the following has some provisos:</source>
          <target state="translated">사용자 클릭의 결과로 호출 된 &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;catch&lt;/code&gt; 블록에 래핑 된 &lt;code&gt;document.execCommand('copy')&lt;/code&gt; 에 대한 간단한 호출은 다음과 같은 몇 가지 조항을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1f7ba45752ccdc6a13661633b09ac1ba6c77fa69" translate="yes" xml:space="preserve">
          <source>ZeroClipboard is the best cross-browser solution I've found:</source>
          <target state="translated">ZeroClipboard는 내가 찾은 최고의 크로스 브라우저 솔루션입니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="332e94c9515c242af1486fca7150abe944335f1c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;document.queryCommandEnabled('copy')&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;document.execCommand('copy')&lt;/code&gt; will succeed if called now. Checking to ensure the command was called from a user-initiated thread and other requirements are met.</source>
          <target state="translated">&lt;code&gt;document.execCommand('copy')&lt;/code&gt; 는 지금 호출하면 document.execCommand ( 'copy') 가 성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 사용자 시작 스레드에서 명령이 호출되었고 다른 요구 사항이 충족되는지 확인</target>
        </trans-unit>
        <trans-unit id="390cc0729a1e15ac403e88d49c76a495778dfb20" translate="yes" xml:space="preserve">
          <source>but in Internet Explorer it gives a syntax error. In Firefox, it says &lt;code&gt;unsafeWindow is not defined&lt;/code&gt;.</source>
          <target state="translated">그러나 Internet Explorer에서는 구문 오류가 발생합니다. Firefox에서는 &lt;code&gt;unsafeWindow is not defined&lt;/code&gt; 라고 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="9c82ae62f59b07f9377d33b857781fbc0462e3e9" translate="yes" xml:space="preserve">
          <source>clipboard.js is also on &lt;a href=&quot;https://github.com/lgarron/clipboard.js&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">clipboard.js도 &lt;a href=&quot;https://github.com/lgarron/clipboard.js&quot;&gt;GitHub&lt;/a&gt; 에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="506de0e2e3e9145a78cd5152e58c530f2478a6df" translate="yes" xml:space="preserve">
          <source>document.execCommand('copy')</source>
          <target state="translated">document.execCommand('copy')</target>
        </trans-unit>
        <trans-unit id="e100de9d38a3f62eeca5021fb664afcfdce1a12a" translate="yes" xml:space="preserve">
          <source>execCommand() may throw in some cases.</source>
          <target state="translated">경우에 따라 execCommand ()가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d662d0f04bc742c958f773b286715d45788cd96" translate="yes" xml:space="preserve">
          <source>he/she gets copied cells he/she selected. After testing just resizing the textarea to one pixel (I didn't test if it will be working on display:none). It works nicely on all browsers, and it is transparent to the user.</source>
          <target state="translated">선택한 셀을 복사합니다. 테스트 후 텍스트 영역의 크기를 1 픽셀로 조정하면 디스플레이에서 작동하는지 테스트하지 않았습니다. 모든 브라우저에서 잘 작동하며 사용자에게 투명합니다.</target>
        </trans-unit>
        <trans-unit id="24040123f74614cf029df86ab2a4e90e958b5bb9" translate="yes" xml:space="preserve">
          <source>or uses the browser's menu).</source>
          <target state="translated">또는 브라우저 메뉴를 사용).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
