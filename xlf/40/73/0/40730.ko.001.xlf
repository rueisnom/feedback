<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/40730">
    <body>
      <group id="40730">
        <trans-unit id="714e23cefc2e2c4e15d341e680dbcaf0530eb447" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.defaultvalueattribute?view=netframework-4.8&quot;&gt;&lt;code&gt;DefaultValueAttribute&lt;/code&gt;&lt;/a&gt; is intended to be used by the VS designer (or any other consumer) to specify a default value, not an initial value. (Even if in designed object, initial value is the default value).</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.defaultvalueattribute?view=netframework-4.8&quot;&gt; &lt;code&gt;DefaultValueAttribute&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 VS 디자이너 (또는 다른 소비자)가 초기 값이 아닌 기본값을 지정하는 데 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(설계된 객체 일지라도 초기 값이 기본값입니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="91842727647d30c8647d83eb1dbf9308f4db7931" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Using the Constructor:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 생성자를 사용하여 :&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da10f12617f9bec055d9b4ccac1cc16f87520df2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 5 and below&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 5 이하&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5a6ce186c51205303005da54e527d8acd63e4a19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C# 6&lt;/strong&gt; :</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90a18f397ed6c6e8a27d3edbfd5d9d95f744e446" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edited on 1/2/15&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;1/2/15에 편집 됨&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7509bc8dcc7e153bb827962523c606fa13d6bec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For Readonly properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;읽기 전용 속성&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33b80ebb07d3fbca29ac0d15f8c2311c9d67b4ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For both Writable &amp;amp; Readable properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쓰기 가능 및 읽기 가능 속성 모두&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d77461559aa347ae48d83005e2901613b5f71aa4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starting with C# 6.0&lt;/strong&gt;, We can assign default value to auto-implemented properties.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6.0부터는&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자동 구현 속성에 기본값을 할당 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3a926a3213825a97af03fdf67a6cec6845034df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using normal property syntax&lt;/strong&gt;  (with an initial value)</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반 속성 구문 사용&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (초기 값)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9118205298b983e6310161824394e853c61f8c58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can simple put like this&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게 간단하게 넣을 수 있습니다&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="818427766702b1db479e9fd15cd05b94417964ec" translate="yes" xml:space="preserve">
          <source>@Darren Kopp - good answer, clean, and correct.  And to reiterate, you CAN write constructors for Abstract methods.  You just need to access them from the base class when writing the constructor:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Darren Kopp-정답, 깨끗하고 정확합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 반복해서 Abstract 메소드의 생성자를 작성할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자를 작성할 때 기본 클래스에서 액세스해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0bd4be029e7bf1974649a54feb60cd9efa26eb9" translate="yes" xml:space="preserve">
          <source>As of C#6 there is a new way:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6부터 새로운 방법이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b91018ede0c5c2b781446e479554a284a8f85d77" translate="yes" xml:space="preserve">
          <source>As this gives you clear control of the order values are assigned.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이를 통해 할당 된 주문 값을 명확하게 제어 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7fd2fc4fdbbfd55e9459e6c92366521e68f2b3e7" translate="yes" xml:space="preserve">
          <source>At compile time &lt;code&gt;DefaultValueAttribute&lt;/code&gt; will not impact the generated IL and it will not be read to initialize the property to that value (see &lt;a href=&quot;https://stackoverflow.com/questions/1980520/defaultvalue-attribute-is-not-working-with-my-auto-property&quot;&gt;DefaultValue attribute is not working with my Auto Property&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일 타임에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DefaultValueAttribute&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 생성 된 IL에 영향을 미치지 않으며 속성을 해당 값으로 초기화하기 위해 읽히지 않습니다 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1980520/defaultvalue-attribute-is-not-working-with-my-auto-property&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DefaultValue 속성이 내 자동 속성에서 작동하지 않음&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 참조 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad560ce299dc32f1b789984854c98f49f8027bf6" translate="yes" xml:space="preserve">
          <source>Constructor at Base Class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 클래스의 생성자 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64e3d768483703c127e3347f2d07542b52db2543" translate="yes" xml:space="preserve">
          <source>Constructor at Derived / Concrete / Sub-Class:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파생 / 콘크리트 / 하위 클래스의 생성자 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="81c1a5f25e1ffcc8fbcad8254b14fe40037ab92c" translate="yes" xml:space="preserve">
          <source>Details on &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/x9fsa0sw.aspx&quot;&gt;MSDN&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/x9fsa0sw.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MSDN&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 세부 사항&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3e78a156db6ecbed17e0e062fd60e26d6115b348" translate="yes" xml:space="preserve">
          <source>Example of attributes that impact the IL are &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threadstaticattribute?view=netframework-4.8&quot;&gt;&lt;code&gt;ThreadStaticAttribute&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.callermembernameattribute?view=netframework-4.8&quot;&gt;&lt;code&gt;CallerMemberNameAttribute&lt;/code&gt;&lt;/a&gt;, ...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;IL에 영향을주는 속성의 예는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.threadstaticattribute?view=netframework-4.8&quot;&gt; &lt;code&gt;ThreadStaticAttribute&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.callermembernameattribute?view=netframework-4.8&quot;&gt; &lt;code&gt;CallerMemberNameAttribute&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ...입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="72a72fc0587dbd7b54f70217f6f0bb56d5026639" translate="yes" xml:space="preserve">
          <source>Have you tried using the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.defaultvalueattribute.aspx&quot;&gt;DefaultValueAttribute&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/53b8022e%28VS.71%29.aspx&quot;&gt;ShouldSerialize and Reset methods&lt;/a&gt; in conjunction with the constructor?  I feel like one of these two methods is necessary if you're making a class that might show up on the designer surface or in a property grid.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자와 함께 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.defaultvalueattribute.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DefaultValueAttribute&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/53b8022e%28VS.71%29.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ShouldSerialize 및 Reset 메소드&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용해 보셨습니까 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;디자이너 화면이나 속성 표에 나타날 수있는 클래스를 만드는 경우이 두 가지 방법 중 하나가 필요하다고 생각합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9ffcb42672def6cb234f448a552018f2b802fa4e" translate="yes" xml:space="preserve">
          <source>Hmm... maybe this will be the subject of it's own question later</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;흠 ... 어쩌면 이것은 나중에 자체 질문의 주제가 될 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb1cc6a87045d53086bd7c6363212085e878e92d" translate="yes" xml:space="preserve">
          <source>Hope that helps!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;희망이 도움이됩니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc5160f1f43c6af1b685486a44a3df63bfb710c7" translate="yes" xml:space="preserve">
          <source>How do you give a C# auto-property an initial value?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 자동 속성에 초기 값을 어떻게 부여합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30f1eac29f8fadccf9e9ea2f92599614c1a524ef" translate="yes" xml:space="preserve">
          <source>I either use the constructor, or revert to the old syntax.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자를 사용하거나 이전 구문으로 되돌립니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="294a19adc842bd40c122613a4bf38fcafd45e131" translate="yes" xml:space="preserve">
          <source>I think this would do it for ya givng SomeFlag a default of false.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것이 SomeFlag를 기본값으로 false로 설정한다고 생각합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e3e16819c3e1e3a7fc5d692d2c867b961f8d0f77" translate="yes" xml:space="preserve">
          <source>I would argue that this syntax was best practice in C# up to 5:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 구문은 C #에서 최대 5까지 모범 사례라고 주장합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d1da389e3d408009426ff5f0bc9e48b657d3427" translate="yes" xml:space="preserve">
          <source>I'd avoid adding a default to the constructor; leave that for dynamic assignments and avoid having two points at which the variable is assigned (i.e. the type default and in the constructor). Typically I'd simply write a normal property in such cases.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자에 기본값을 추가하지 마십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동적 할당의 경우에는 그대로두고 변수가 할당되는 두 지점 (예 : 유형 기본값 및 생성자)을 피하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 그런 경우에는 보통 일반 속성을 작성합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba44dec5e099eae52109afed430816c62175ba10" translate="yes" xml:space="preserve">
          <source>In C# 5 and earlier, to give auto implemented properties an initial value, you have to do it in a constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 5 및 이전 버전에서는 자동 구현 속성에 초기 값을 부여하려면 생성자에서 수행해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66210d0d26b5f4286f5559b26b20d16dcd2e307b" translate="yes" xml:space="preserve">
          <source>In C# 6 and above you can simply use the syntax:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6 이상에서는 다음 구문을 간단하게 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7101bf65be0d5524bb0ea25e418d4e3d845db035" translate="yes" xml:space="preserve">
          <source>In C# 6.0 this is a breeze!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6.0에서는 이것이 산들 ​​바람입니다!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b5d68322ad4675fc0f70d7107c9320d74b1ea8de" translate="yes" xml:space="preserve">
          <source>In Version of &lt;em&gt;C# (6.0) &amp;amp; greater&lt;/em&gt;, you can do :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # (6.0)&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이상의 버전에서는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음을 수행 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="60401e067e3786ee3e16d62f9950ef4f7ed81104" translate="yes" xml:space="preserve">
          <source>In addition to the answer already accepted, for the scenario when you want to define a default property as a &lt;em&gt;function&lt;/em&gt; of other properties you can use &lt;strong&gt;&lt;em&gt;expression body notation&lt;/em&gt;&lt;/strong&gt; on C#6.0 (and higher) for even more elegant and concise constructs like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이미 수락 된 답변 외에도 기본 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 다른 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 정의하려는 시나리오의 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6.0 (및 그 이상)에서 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표현식 본문 표기법&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;보다 우아하고 간결한 구문을 만들 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5cd6d774f5a030e671b23830fab91011d48ee807" translate="yes" xml:space="preserve">
          <source>In current Version of &lt;em&gt;C# (7.0)&lt;/em&gt;, you can do : (The snippet rather displays how you can use expression bodied get/set accessors to make is more compact when using with backing fields)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 버전의 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # (7.0)&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서는 다음을 수행 할 수 있습니다. (스 니펫은 식 본문 get / set 접근자를 사용하여 백업 필드와 함께 사용할 때 더 간결하게 만드는 방법을 표시합니다)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="794fb949df187b39811af6d7644259ba7e4660c7" translate="yes" xml:space="preserve">
          <source>In order to be able to use the above &quot;=&amp;gt;&quot; notation, the property must be read only, and you do not use the get accessor keyword.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 &quot;=&amp;gt;&quot;표기법을 사용하려면 속성을 읽기 전용이어야하며 get 접근 자 키워드를 사용하지 않아야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7d54a7be1c5622cb4ea0a8043a79e2217d9ebf59" translate="yes" xml:space="preserve">
          <source>In the constructor.  The constructor's purpose is to initialized it's data members.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자에서. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자의 목적은 데이터 멤버를 초기화하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ba65ad098f85ce8e0fcd83fdc5b9cf9c3fab4426" translate="yes" xml:space="preserve">
          <source>Is there a better way?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 좋은 방법이 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="11a986f617d07e6dbee601ec64a3f0b8c88b33ad" translate="yes" xml:space="preserve">
          <source>My solution is to use a custom attribute that provides default value property initialization by constant or using property type initializer.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 솔루션은 상수 또는 속성 유형 이니셜 라이저를 사용하여 기본값 속성 초기화를 제공하는 사용자 정의 속성을 사용하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8d717461faef04d94163ab001c93419cd0902fef" translate="yes" xml:space="preserve">
          <source>Note that to have a &lt;code&gt;readonly&lt;/code&gt; property simply omit the set, as so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;readonly&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 속성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 가지려면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단순히 다음과 같이 세트를 생략하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45f49c79ea5cc5e16b0d4619b13d5c736cdd7f8e" translate="yes" xml:space="preserve">
          <source>Obviously if it's not a string then I might make the object nullable ( double?, int? ) and check if it's null, return a default, or return the value it's set to.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분명히 문자열이 아닌 경우 객체를 nullable (double ?, int?)로 만들고 null인지 확인하거나 기본값을 반환하거나 설정된 값을 반환 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="467b26f52af02e8a2806378b66e8797a53065fab" translate="yes" xml:space="preserve">
          <source>One other option is to do what ASP.Net does and define defaults via an attribute:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 옵션은 ASP.Net이 수행하는 작업을 수행하고 속성을 통해 기본값을 정의하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="b3a5cb824ff9aadde5b30af03d3dbb2b5f994af4" translate="yes" xml:space="preserve">
          <source>Personally, I don't see the point of making it a property at all if you're not going to do  anything at all beyond the auto-property.  Just leave it as a field.  The encapsulation benefit for these item are just red herrings, because there's nothing behind them to encapsulate.  If you ever need to change the underlying implementation you're still free to refactor them as properties without breaking any dependent code.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;개인적으로, 나는 당신이 자동 속성을 넘어서 아무것도하지 않을 경우 그것을 재산으로 만드는 요점을 전혀 보지 못합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;필드로 남겨 두십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 품목에 대한 캡슐화 이점은 캡슐화 할 뒤에 아무것도 없기 때문에 단지 빨간 청어입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 구현을 변경해야 할 경우 종속 코드를 손상시키지 않고 속성으로 리팩터링 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ceb09e6d8bf290034dd33caa29f2f4530d4bcf27" translate="yes" xml:space="preserve">
          <source>Prior to this I responded as below.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 전에 나는 아래와 같이 응답했다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="930b3b23cff0eb68b2882853b258c5a52353c09b" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;http://blogs.msmvps.com/jonskeet/2014/04/04/c-6-first-reactions/&quot;&gt;C# 6: First reactions , Initializers for automatically implemented properties - By Jon Skeet&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://blogs.msmvps.com/jonskeet/2014/04/04/c-6-first-reactions/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6 : 첫 반응, 자동 구현 속성 초기화 기-Jon Skeet 작성&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae9966c7d7daf8ce67ffe3300908a118efbb770e" translate="yes" xml:space="preserve">
          <source>Since C# 6.0, you can specify initial value in-line. The syntax is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6.0부터는 초기 값을 인라인으로 지정할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구문은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7e43a357d3a0c38b1a995cd068429d833232155f" translate="yes" xml:space="preserve">
          <source>Sometimes I use this, if I don't want it to be actually set and persisted in my db:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 DB에서 실제로 설정하고 유지하지 않으려는 경우이를 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="20fc53e44f54098334182398215f384c4ffc06da" translate="yes" xml:space="preserve">
          <source>The point here is that the instance variable drawn from the base class may bury your base field name.  Setting the current instantiated object value using &quot;this.&quot; will allow you to correctly form your object with respect to the current instance and required permission levels (access modifiers) where you are instantiating it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요점은 기본 클래스에서 가져온 인스턴스 변수가 기본 필드 이름을 묻을 수 있다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;this&quot;를 사용하여 현재 인스턴스화 된 객체 값 설정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 인스턴스 및 인스턴스를 생성하는 필수 권한 수준 (액세스 수정 자)과 관련하여 개체를 올바르게 구성 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b85aa3eee23d0718bceae9396501c0c468d1fbef" translate="yes" xml:space="preserve">
          <source>Then I can make a check in my repository to see if it's my default and not persist, or make a backdoor check in to see the true status of the backing value, before saving.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 저장소에서 내 기본값인지 확인하고 지속되지 않는지 확인하거나 백도어를 확인하여 백킹 값의 실제 상태를 확인한 후 저장합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="51d0c44fe22f09c90e085c9e3757dd10e83ef1de" translate="yes" xml:space="preserve">
          <source>Though the intended use of the attribute is not to actually set the values of the properties, you can use reflection to always set them anyway...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속성의 의도 된 사용은 실제로 속성 값을 설정하는 것이 아니지만 리플렉션을 사용하여 항상 속성을 설정할 수 있습니다 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d057a1a916d855d00d2f4f9dbf3b8e67e04d7ff6" translate="yes" xml:space="preserve">
          <source>To clarify, yes, you need to set default values in the constructor for class derived objects.  You will need to ensure the constructor exists with the proper access modifier for construction where used.  If the object is not instantiated, e.g. it has no constructor (e.g. static methods) then the default value can be set by the field.  The reasoning here is that the object itself will be created only once and you do not instantiate it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명확히하기 위해 클래스 파생 객체의 생성자에서 기본값을 설정해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자가 사용되는 구성에 적합한 액세스 수정 자와 함께 생성자가 존재하는지 확인해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체가 인스턴스화되지 않은 경우 (예 : 생성자가없는 경우 (예 : 정적 메서드)) 필드에서 기본값을 설정할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서의 이유는 객체 자체가 한 번만 생성되고 인스턴스화하지 않기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6dcc6663115112d3b2ea940d2425b20386b0f4dc" translate="yes" xml:space="preserve">
          <source>To use this attribute it's necessary to inherit a class from special base class-initializer or use a static helper method:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 속성을 사용하려면 특수 기본 클래스 이니셜 라이저에서 클래스를 상속하거나 정적 도우미 메소드를 사용해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 예 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="324d1df68a2a46d27e8d85317d55003c4831e2cf" translate="yes" xml:space="preserve">
          <source>Use the constructor because &quot;When the constructor is finished, Construction should be finished&quot;. properties are like states your classes hold, if you had to initialize a default state, you would do that in your constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;생성자가 완료되면 구성을 완료해야합니다&quot;때문에 생성자를 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속성은 클래스가 보유한 상태와 같습니다. 기본 상태를 초기화해야하는 경우 생성자에서 수행합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a7394bd66ec0dce7553b773603f227220dada72" translate="yes" xml:space="preserve">
          <source>We can also create read-only auto implemented property like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 읽기 전용 자동 구현 속성을 만들 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a081ef4ca8b1b23e21bbb4bca004ca4172051c0" translate="yes" xml:space="preserve">
          <source>What is the best way to give a C# auto-property an initial value</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 자동 속성에 초기 값을 부여하는 가장 좋은 방법은 무엇입니까&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="29a9336308d4fedeca1f9c87d1abe7a51487dbc0" translate="yes" xml:space="preserve">
          <source>When you inline an initial value for a variable it will be done implicitly in the constructor anyway.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수의 초기 값을 인라인하면 어쨌든 생성자에서 암시 적으로 수행됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="85fba9a98cbb523590e8691a9c6900b1aa9233bb" translate="yes" xml:space="preserve">
          <source>With C# 6 you can initialize auto-properties directly (finally!), there are now other answers in the thread that describe that.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C # 6을 사용하면 자동 속성을 직접 (최종!) 초기화 할 수 있으며 이제 스레드에이를 설명하는 다른 답변이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="450c27608618b95b7f54a7e888cad79a09a79fbb" translate="yes" xml:space="preserve">
          <source>You can also assign &lt;code&gt;readonly&lt;/code&gt; auto-properties from the constructor.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성자에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;readonly&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자동 속성을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할당 할 수도 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43ef8484820fc9fd0489207cfa17de705c94f53c" translate="yes" xml:space="preserve">
          <source>You can do it in the &lt;code&gt;Class&lt;/code&gt; declaration itself, in the property declaration statements.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;속성 선언문에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Class&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선언 자체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서이를 수행 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f6b49685c242a4eaa3cdb8af7ed7923149df4ae6" translate="yes" xml:space="preserve">
          <source>You can use the above in the following fashion</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위와 같은 방식으로 사용할 수 있습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6335bceb1baad72e8a610cc0144ed8bef27a988d" translate="yes" xml:space="preserve">
          <source>little complete sample:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;작은 완전한 샘플 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
