<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/409286">
    <body>
      <group id="409286">
        <trans-unit id="593a02a118c1f362caa2e58db6d6664e3f576b7f" translate="yes" xml:space="preserve">
          <source>(Unless you are likely to change the timezone of your servers)</source>
          <target state="translated">(サーバーのタイムゾーンを変更する可能性がある場合を除く)</target>
        </trans-unit>
        <trans-unit id="d27bbad1be4b90f3efb7c75a4b43f6fa388fae5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime&lt;/code&gt; = application supports 1 timezone (for both inserting and selecting)</source>
          <target state="translated">&lt;code&gt;datetime&lt;/code&gt; =アプリケーションは1つのタイムゾーンをサポートします（挿入と選択の両方）</target>
        </trans-unit>
        <trans-unit id="20905d1d1b479330793c32af9ed0fa9beb9adb03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timestamp&lt;/code&gt; = application supports any timezone (for both inserting and selecting)</source>
          <target state="translated">&lt;code&gt;timestamp&lt;/code&gt; =アプリケーションは任意のタイムゾーンをサポートします（挿入と選択の両方）</target>
        </trans-unit>
        <trans-unit id="349a08ae5d6ed4659b0bcd3ec7c70e280bab22c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;2016 +&lt;/em&gt;: what I advise is to set your Mysql timezone to UTC and use DATETIME:</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2016 +&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：私のアドバイスは、MysqlタイムゾーンをUTCに設定し、DATETIMEを使用することです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="331d547d2d77f302ef10428b2a9addf2ef86e968" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This answer is only for putting some highlight on the flexibility and ease of timestamps when it comes to time zones , it is not covering any other differences like the &lt;a href=&quot;https://stackoverflow.com/a/45632196/5407848&quot;&gt;column size or range or fraction&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;この回答は、タイムゾーンに関してタイムスタンプの柔軟性と使いやすさを強調するためのものであり、 &lt;a href=&quot;https://stackoverflow.com/a/45632196/5407848&quot;&gt;列のサイズや範囲、割合&lt;/a&gt;などの他の違いについては説明していません。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8d39d205db25f2106a7af756b95fdfef76c9718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The main differences:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主な違い：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34da79ccaf9b8c0d6c96a398c7de54c386c7c5d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is that [.fraction]?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[.fraction]とは何ですか？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2ccacfe5d1464a272d0161bc29e81b58fd87fa55" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TIMESTAMP&lt;/code&gt; requires 4 bytes, whereas a &lt;code&gt;DATETIME&lt;/code&gt; requires 8 bytes.</source>
          <target state="translated">&lt;code&gt;TIMESTAMP&lt;/code&gt; には4バイトが必要ですが、 &lt;code&gt;DATETIME&lt;/code&gt; には8バイトが必要です。</target>
        </trans-unit>
        <trans-unit id="6f86f9e143c43e826773e4340f28d06abfa21196" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;timestamp&lt;/code&gt; field is a special case of the &lt;code&gt;datetime&lt;/code&gt; field. You can create &lt;code&gt;timestamp&lt;/code&gt; columns to have special properties; it can be set to update itself on either create and/or update.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;timestamp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールドは、特殊なケースである&lt;/font&gt;&lt;/font&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールド。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;timestamp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;列を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、特別なプロパティを持つ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことができます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成時または更新時に自身を更新するように設定できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23afe721d17e7bce6561ecac0c0767557c18f3e2" translate="yes" xml:space="preserve">
          <source>A DATETIME or TIMESTAMP value can include a trailing fractional
seconds part in up to microseconds (6 digits) precision. In
particular, any fractional part in a value inserted into a DATETIME
or TIMESTAMP column is stored rather than discarded. This is of course optional.</source>
          <target state="translated">DATETIMEまたはTIMESTAMP値は、最大マイクロ秒(6桁)の精度で、末尾の端数秒の部分を含むことができます。特に、DATETIMEまたはTIMESTAMP列に挿入された値の端数部分は、破棄されるのではなく保存されます。これはもちろんオプションです。</target>
        </trans-unit>
        <trans-unit id="105e72149319d74d06cd9e179968cd6895c674de" translate="yes" xml:space="preserve">
          <source>A great example of DATETIME being used where TIMESTAMP should have been used is in Facebook, where their servers are never quite sure what time stuff happened across time zones. Once I was having a conversation in which the time said I was replying to messages before the message was actually sent. (This, of course, could also have been caused by bad time zone translation in the messaging software if the times were being posted rather than synchronized.)</source>
          <target state="translated">DATETIMEがTIMESTAMPが使用されるべきところで使用されている素晴らしい例は、Facebookのサーバーがタイムゾーンをまたいで何が起こったのかを正確に把握していないところにあります。一度、私は会話をしていて、メッセージが実際に送信される前に、時間が私がメッセージに返信していると言っていたことがありました。(もちろん、時刻が同期されているのではなく、投稿されている場合は、メッセージングソフトウェアのタイムゾーンの変換が悪かったことが原因である可能性もあります)。</target>
        </trans-unit>
        <trans-unit id="ac1d2a76e849b1b5833ee66f2036219c73ed4239" translate="yes" xml:space="preserve">
          <source>Additionally:</source>
          <target state="translated">Additionally:</target>
        </trans-unit>
        <trans-unit id="a1f945cbe8c29cec65da8e8eab6c4e28b4f16229" translate="yes" xml:space="preserve">
          <source>All localised time format available here:
&lt;a href=&quot;https://docs.angularjs.org/api/ng/filter/date&quot;&gt;https://docs.angularjs.org/api/ng/filter/date&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで利用可能なすべてのローカライズされた時刻形式：&lt;/font&gt;&lt;a href=&quot;https://docs.angularjs.org/api/ng/filter/date&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//docs.angularjs.org/api/ng/filter/date&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03f4ab0cfb5116acacf82c79980bbc4c1538ca3f" translate="yes" xml:space="preserve">
          <source>Another difference between Timestamp and Datetime is in Timestamp you can't default value to NULL.</source>
          <target state="translated">また、TimestampとDatetimeのもう一つの違いは、Timestampではデフォルト値をNULLにすることができないことです。</target>
        </trans-unit>
        <trans-unit id="8649432b65d482601d32ced47b86cec528e6f13e" translate="yes" xml:space="preserve">
          <source>Another thing worth considering:</source>
          <target state="translated">もう一つ、検討する価値のあるものがあります。</target>
        </trans-unit>
        <trans-unit id="7e4bc976d9f0aa9df498da0d674146848c45e317" translate="yes" xml:space="preserve">
          <source>Any recent front-end framework (Angular 1/2, react, Vue,...) can easily and automatically convert your UTC datetime to local time.</source>
          <target state="translated">最近のフロントエンドフレームワーク(Angular 12,react,Vueなど)であれば、簡単かつ自動的にUTCの日付をローカルタイムに変換することができます。</target>
        </trans-unit>
        <trans-unit id="1f02b723ecb30f7a7b86943f5693d1a105ed169a" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.1/en/datetime.html&quot;&gt;mentioned&lt;/a&gt; in the MySQL documentation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下のよう&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.1/en/datetime.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に述べた&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; MySQLのマニュアルに：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30a7616be2ba7d64b9561fa7bcf55829ad69bc78" translate="yes" xml:space="preserve">
          <source>As a plus, in the case of a migration of the database to a system with another timezone, I would feel more confident using timestamps. Not to say possible issues when calculating differences between two moments with a sumer time change in between and needing a precision of 1 hour or less.</source>
          <target state="translated">プラスとして、データベースを別のタイムゾーンのシステムに移行する場合、私はタイムスタンプを使用してより自信を持っています。2つの瞬間の差を計算する際に、1時間以下の精度が必要になることは言うまでもありません。</target>
        </trans-unit>
        <trans-unit id="75c9379a28896ce9890676a1ef0ca87e210c0b0c" translate="yes" xml:space="preserve">
          <source>Beware of timestamp changing when you do a UPDATE statement on a table.  If you have a table with columns 'Name' (varchar), 'Age' (int), and 'Date_Added' (timestamp) and you run the following DML statement</source>
          <target state="translated">テーブルのUPDATE文を実行した時のタイムスタンプの変化に注意してください。テーブルに 'Name' (varchar),'Age' (int),'Date_Added' (timestamp)カラムを持つテーブルがあり、以下のような DML ステートメントを実行したとします。</target>
        </trans-unit>
        <trans-unit id="048fad409fc302137354247e34dd35f44fb43704" translate="yes" xml:space="preserve">
          <source>But like scronide said it does have a lower limit of the year 1970. It's great for anything that might happen in the future though ;)</source>
          <target state="translated">しかし、scronideが言ったように、それは1970年の下限を持っています。将来起こるかもしれないことを考えると、これは素晴らしいことだと思います。)</target>
        </trans-unit>
        <trans-unit id="0b3bafc7f7ed6d1609b9c2c4fd043e820e24cc01" translate="yes" xml:space="preserve">
          <source>By default, the current time zone for each connection is the server's time. The time zone can be set on a per-connection basis, as described in &lt;em&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en//time-zone-support.html&quot;&gt;MySQL Server Time Zone Support&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトでは、各接続の現在のタイムゾーンはサーバーの時間です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;時間帯は、&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.5/en//time-zone-support.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLサーバーの時間帯サポートで&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;説明されているように、接続ごとに設定できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46e754d5823f336c6879ab95356aa5286d30a861" translate="yes" xml:space="preserve">
          <source>Comparison between DATETIME, TIMESTAMP and DATE</source>
          <target state="translated">DATETIME、TIMESTAMP、DATEの比較</target>
        </trans-unit>
        <trans-unit id="dfa016c1ac5a15d6be12e485338468f1d8936cd6" translate="yes" xml:space="preserve">
          <source>Consider setting a timestamp by a user to a server in New York, for an appointment in Sanghai. Now when the user connects in Sanghai, he accesses the same appointment timestamp from a mirrored server in Tokyo. He will see the appointment in Tokyo time, offset from the original New York time.</source>
          <target state="translated">ユーザーがニューヨークのサーバーにタイムスタンプを設定して、上海でのアポイントメントのためにタイムスタンプを設定したとします。ユーザーが上海で接続すると、東京のミラーリングされたサーバーから同じアポイントメントのタイムスタンプにアクセスします。この場合、ユーザーは元のニューヨーク時間からオフセットした東京時間でのアポイントメントを見ることになります。</target>
        </trans-unit>
        <trans-unit id="36abbe8686064b87032b977c64e9037a1ab43ae2" translate="yes" xml:space="preserve">
          <source>Contrary to what one might think, DATETIME is &lt;strong&gt;FASTER&lt;/strong&gt; THAN TIMESTAMP,
&lt;a href=&quot;http://gpshumano.blogs.dri.pt/2009/07/06/mysql-datetime-vs-timestamp-vs-int-performance-and-benchmarking-with-myisam/&quot;&gt;http://gpshumano.blogs.dri.pt/2009/07/06/mysql-datetime-vs-timestamp-vs-int-performance-and-benchmarking-with-myisam/&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;思っていることとは逆に、DATETIMEは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TIMESTAMPより&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;速い&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://gpshumano.blogs.dri.pt/2009/07/06/mysql-datetime-vs-timestamp-vs-int-performance-and-benchmarking-with-myisam/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http：//gpshumano.blogs.dri.pt/2009/07/06/mysql-datetime-vs-timestamp-vs-int-performance-and-benchmarking-with -myisam /&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cd06d5b91f44e6c7d8bb5a9e4b6c53eb080b994" translate="yes" xml:space="preserve">
          <source>DATETIME can now be &lt;strong&gt;automatically&lt;/strong&gt; set to the current time value &lt;a href=&quot;https://stackoverflow.com/questions/168736/how-do-you-set-a-default-value-for-a-mysql-datetime-column/10603198#10603198&quot;&gt;How do you set a default value for a MySQL Datetime column?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DATETIMEに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在の時刻値を&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自動的に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できるようになり&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/168736/how-do-you-set-a-default-value-for-a-mysql-datetime-column/10603198#10603198&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ましたMySQLの日時列のデフォルト値をどのように設定しますか？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bb751509c73535fc71ab28078b2a2cd7cff076c" translate="yes" xml:space="preserve">
          <source>DATETIME is constant while TIMESTAMP is effected by the time_zone setting.</source>
          <target state="translated">DATETIMEは一定ですが、TIMESTAMPはtime_zone設定の影響を受けます。</target>
        </trans-unit>
        <trans-unit id="e606ed7f8ffdfa79456bda0bab96b69794b076de" translate="yes" xml:space="preserve">
          <source>Depends on application, really.</source>
          <target state="translated">用途によりますね、本当に。</target>
        </trans-unit>
        <trans-unit id="793dba92e4fad48f46012613b16dac7b1259878a" translate="yes" xml:space="preserve">
          <source>Example with AngularJs</source>
          <target state="translated">AngularJsでの例</target>
        </trans-unit>
        <trans-unit id="b632b31f3430f0f42e92741a8e59ca31ba0a5461" translate="yes" xml:space="preserve">
          <source>For all this reasons, I choose UTC &amp;amp; timestamp fields where posible. And I avoid headaches ;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このすべての理由から、可能な場合はUTCおよびタイムスタンプフィールドを選択します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そして私は頭痛を避けます;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b6dd3a87f08f57887386997d7393798f29857fa" translate="yes" xml:space="preserve">
          <source>For example, consider a &lt;code&gt;user&lt;/code&gt; table with a &lt;strong&gt;REGISTRATION DATE&lt;/strong&gt; field. In that &lt;code&gt;user&lt;/code&gt; table, if you want to know the last logged in time of a particular user, go with a field of &lt;strong&gt;timestamp&lt;/strong&gt; type so that the field gets updated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;REGISTRATION DATE&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;持つ&lt;/font&gt;&lt;/font&gt; &lt;code&gt;user&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;テーブルを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;考えてみ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その&lt;/font&gt; &lt;code&gt;user&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;テーブルで、特定のユーザーが最後にログインした時刻を知りたい場合は、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイムスタンプ&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイプの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールドを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して、フィールドが更新されるようにします。&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4911c2a3fb22efedb0166e219e1c072fdeeb59f1" translate="yes" xml:space="preserve">
          <source>For more details you can read the blog post &lt;em&gt;&lt;a href=&quot;http://codebucket.co.in/timestamp-vs-datetime/&quot;&gt;Timestamp Vs Datetime &lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細については、ブログ投稿&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;http://codebucket.co.in/timestamp-vs-datetime/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Timestamp Vs Datetimeを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ご覧&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dc856e5e23919033bd72ab59467477a0e61ba03c" translate="yes" xml:space="preserve">
          <source>For your clients comfort you want to show them the times based on their preferred time zones without making them doing the math and convert the time to their meaningful timezone. all you need is to change the timezone and all your application code will be the same.&lt;em&gt;(Actually you should always define the timezone at the start of the application, or request processing in case of PHP applications)&lt;/em&gt;</source>
          <target state="translated">クライアントが快適に過ごせるように、計算を行わずに時間を意味のあるタイムゾーンに変換せずに、希望するタイムゾーンに基づいて時間を表示したいとします。 タイムゾーンを変更するだけで、すべてのアプリケーションコードが同じになります。 &lt;em&gt;（実際には、アプリケーションの開始時に常にタイムゾーンを定義するか、PHPアプリケーションの場合はリクエスト処理を行う必要があります）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64e254cfc8fee4a9ead40861b1246312894ba70c" translate="yes" xml:space="preserve">
          <source>From my experiences, if you want a date field in which insertion happens only once and you don't want to have any update or any other action on that particular field, go with &lt;strong&gt;date time&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の経験から、挿入が1回だけ行われる日付フィールドが必要で、その特定のフィールドで更新やその他のアクションを実行したくない場合は、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;日付時刻を使用し&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d1dbdfeac2373ec7aa37785a932e7c4d2c25cbb" translate="yes" xml:space="preserve">
          <source>Here are some cases that will make you regret using &lt;code&gt;datetime&lt;/code&gt; and wish that you stored your data in timestamps.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここでは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して後悔し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、データをタイムスタンプに格納したい場合があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2da35bc820a81a1cb5374406c62ccc9e358ccf59" translate="yes" xml:space="preserve">
          <source>I almost always prefer timestamps rather than datetime fields, because timestamps include the timezone implicitly. So, since the moment that the app will be accessed from users from different time zones and you want them to see dates and times in their local timezone, this field type makes it pretty easy to do it than if the data were saved in datetime fields.</source>
          <target state="translated">私はほとんどの場合、datetimeフィールドよりもtimestampsフィールドの方が好きです。そのため、アプリが異なるタイムゾーンのユーザーからアクセスされ、ローカルタイムゾーンの日付と時刻を表示したい瞬間に、このフィールドタイプは、データがdatetimeフィールドに保存されている場合よりも、かなり簡単にそれを行うことができます。</target>
        </trans-unit>
        <trans-unit id="a5cd89f5ee8f947b442b15a5e503fefe94df935b" translate="yes" xml:space="preserve">
          <source>I always use DATETIME fields for anything other than row metadata (date created or modified).</source>
          <target state="translated">私は、行のメタデータ(作成日や変更日)以外には、常にDATETIMEフィールドを使用しています。</target>
        </trans-unit>
        <trans-unit id="a678e945f8d1f6465d392193c4faf6646c4cece9" translate="yes" xml:space="preserve">
          <source>I always use a Unix timestamp, simply to maintain sanity when dealing with a lot of datetime information, especially when performing adjustments for timezones, adding/subtracting dates, and the like. When comparing timestamps, this excludes the complicating factors of timezone and allows you to spare resources in your server side processing (Whether it be application code or database queries) in that you make use of light weight arithmetic rather then heavier date-time add/subtract functions.</source>
          <target state="translated">私はいつもUnixのタイムスタンプを使っていますが、これは多くの日付情報を扱う時、特にタイムゾーンの調整や日付の追加・削除などを行う時に、正気を保つためです。タイムスタンプを比較する時に、タイムゾーンの複雑な要素を排除して、重い日付時間の加算減算関数ではなく、軽い演算を使うことで、サーバー側の処理(アプリケーションコードでもデータベースクエリでも)にリソースを割くことができます。</target>
        </trans-unit>
        <trans-unit id="206c1f2009ec676fc4a9eec50d54024944901e95" translate="yes" xml:space="preserve">
          <source>I found unsurpassed usefulness in TIMESTAMP's ability to auto update itself based on the current time without the use of unnecessary triggers. That's just me though, although TIMESTAMP is UTC like it was said.</source>
          <target state="translated">余計なトリガーを使わずに、現在の時刻を元に自動更新してくれるTIMESTAMPの機能には、他に類を見ない便利さを感じました。とはいえ、TIMESTAMPは言われているようにUTCなのですが、それは私だけでしょうか。</target>
        </trans-unit>
        <trans-unit id="d570a1bc95ba8702c39af942cff99df7742bb2be" translate="yes" xml:space="preserve">
          <source>I like a Unix timestamp, because you can convert to numbers and just worry about the number. Plus you add/subtract and get durations, etc. Then convert the result to Date in whatever format. This code finds out how much time in minutes passed between a timestamp from a document, and the current time.</source>
          <target state="translated">Unixのタイムスタンプが好きなのは、数字に変換できて、数字だけを気にすることができるからです。さらに、減算して持続時間などを得ることができます。そして、その結果を任意の形式でDateに変換します。このコードは、ドキュメントからのタイムスタンプと現在の時刻との間にどれだけの時間が経過したかを分単位で調べます。</target>
        </trans-unit>
        <trans-unit id="cf4a40b7b0f9f34fbb16456724075a43d2ce0f45" translate="yes" xml:space="preserve">
          <source>I make this decision on a semantic base.</source>
          <target state="translated">私はこの判断をセマンティックベースで行っています。</target>
        </trans-unit>
        <trans-unit id="5ef7e671798c6131c697e0f63b12c62ab2bfa381" translate="yes" xml:space="preserve">
          <source>I prefer using timestamp so to keep everything in one common raw format and format the data in PHP code or in your SQL query. There are instances where it comes in handy in your code to keep everything in plain seconds.</source>
          <target state="translated">私はタイムスタンプを使用して、すべてのものを共通の生のフォーマットに保ち、PHPコードやSQLクエリでデータをフォーマットすることを好みます。あなたのコードの中で、すべてのものを平易な秒数で保持するのに便利な例があります。</target>
        </trans-unit>
        <trans-unit id="e23b06243c6572b6cfb0e3cffcf474b9fa8522b8" translate="yes" xml:space="preserve">
          <source>I recommend using &lt;strong&gt;neither&lt;/strong&gt; a DATETIME or a TIMESTAMP field.  If you want to represent a specific day as a whole (like a birthday), then use a DATE type, but if you're being more specific than that, you're probably interested in recording an actual moment as opposed to a unit of time (day,week,month,year).  Instead of using a DATETIME or TIMESTAMP, use a BIGINT, and simply store the number of milliseconds since the epoch (System.currentTimeMillis() if you're using Java).  This has several advantages:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DATETIMEフィールドもTIMESTAMPフィールド&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用し&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ない&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ことをお勧めし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特定の日全体（誕生日など）を表す場合は、DATE型を使用しますが、それよりも具体的である場合は、単位の単位ではなく実際の瞬間を記録することにおそらく興味があります。時間（日、週、月、年）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DATETIMEまたはTIMESTAMPを使用する代わりに、BIGINTを使用し、エポック（Javaを使用している場合はSystem.currentTimeMillis（））からのミリ秒数を格納します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにはいくつかの利点があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32b22a379070f7ef416fd882ae9907f4cafcabff" translate="yes" xml:space="preserve">
          <source>I stopped using &lt;code&gt;datetime&lt;/code&gt; in my applications after facing many problems and bugs related to time zones. &lt;strong&gt;IMHO using &lt;code&gt;timestamp&lt;/code&gt; is better than &lt;code&gt;datetime&lt;/code&gt; in most of the cases&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイムゾーンに関連する多くの問題やバグに直面した後、アプリケーションで&lt;/font&gt;&lt;/font&gt; &lt;code&gt;datetime&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用をやめました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの場合、&lt;/font&gt;&lt;/strong&gt;&lt;strong&gt; &lt;code&gt;timestamp&lt;/code&gt; &lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用した私見&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は&lt;/font&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;より優れてい&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac3e0f03321593d604ad3daae773b9b9de690bc1" translate="yes" xml:space="preserve">
          <source>I use a datetime field when the date/time can be set and changed arbitrarily. For example when a user can save later change appointments.</source>
          <target state="translated">私はdatetimeフィールドを使用しています。例えば、ユーザーが後から変更した予定を保存することができる場合などです。</target>
        </trans-unit>
        <trans-unit id="8b5833e1a61fb755b21f93ca6d1707ba3c9eb38b" translate="yes" xml:space="preserve">
          <source>I use a timestamp when I need to record a (more or less) fixed point in time. For example when a record was inserted into the database or when some user action took place.</source>
          <target state="translated">私は、(多かれ少なかれ)一定の時点を記録する必要がある場合にタイムスタンプを使用します。例えば、レコードがデータベースに挿入された時や、ユーザーのアクションが行われた時などです。</target>
        </trans-unit>
        <trans-unit id="f86d1b7817db590f627374a0bcb90e6b5ff9a671" translate="yes" xml:space="preserve">
          <source>I would always use a Unix timestamp when working with MySQL and PHP. The main reason for this being the the default &lt;a href=&quot;http://uk3.php.net/manual/en/function.date.php&quot;&gt;date&lt;/a&gt; method in PHP uses a timestamp as the parameter, so there would be no parsing needed.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLとPHPを使用する場合は、常にUnixタイムスタンプを使用します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これの主な理由は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、PHPの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;デフォルトの&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://uk3.php.net/manual/en/function.date.php&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;日付&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドがタイムスタンプをパラメーターとして使用するため、解析は必要ありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9364c12edb1f9c9f5ec70d22a2e2dd682193867" translate="yes" xml:space="preserve">
          <source>I'm working with PHP on the server side.</source>
          <target state="translated">サーバー側でPHPを使って仕事をしています。</target>
        </trans-unit>
        <trans-unit id="a45ff0bb3a329fa67ebd8832f5d0546cb7f2251d" translate="yes" xml:space="preserve">
          <source>I've converted my answer into article so more people can find this useful, &lt;em&gt;&lt;a href=&quot;http://www.tech-recipes.com/rx/22599/mysql-datetime-vs-timestamp-data-type/&quot;&gt;MySQL: Datetime Versus Timestamp Data Types&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私は私の回答を記事に変換したので、より多くの人がこの便利な&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;http://www.tech-recipes.com/rx/22599/mysql-datetime-vs-timestamp-data-type/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;見つけることができ&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます：MySQL：日時とタイムスタンプのデータ型&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31489a4469658ad39dd5d8120b54ba1d823877db" translate="yes" xml:space="preserve">
          <source>If you are creating the table from &lt;a href=&quot;http://en.wikipedia.org/wiki/PhpMyAdmin&quot;&gt;phpMyAdmin&lt;/a&gt; the default setting will update the &lt;strong&gt;timestamp&lt;/strong&gt; field when a row update happens. If your timestamp filed is not updating with row update, you can use the following query to make a &lt;strong&gt;timestamp&lt;/strong&gt; field get auto updated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/PhpMyAdmin&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;phpMyAdmin&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;からテーブルを作成している場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、デフォルト設定では&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、行の更新が発生したときに&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイムスタンプ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が更新されます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ファイルされたタイムスタンプが行更新で更新されない場合は、次のクエリを使用して、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイムスタンプ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールドを自動更新できます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b1bb522d65d67e7cdbb1d7601b2e95f9a523514" translate="yes" xml:space="preserve">
          <source>If you meant that you want to decide between using a UNIX timestamp or a native MySQL datetime field, go with the native format. You can do calculations within MySQL that way 
&lt;code&gt;(&quot;SELECT DATE_ADD(my_datetime, INTERVAL 1 DAY)&quot;)&lt;/code&gt; and it is simple to change the format of the value to a UNIX timestamp &lt;code&gt;(&quot;SELECT UNIX_TIMESTAMP(my_datetime)&quot;)&lt;/code&gt; when you query the record if you want to operate on it with PHP.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;UNIXタイムスタンプを使用するかネイティブMySQL日時フィールドを使用するかを決定したい場合は、ネイティブ形式を使用してください。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL内でそのように計算することができ &lt;/font&gt;&lt;/font&gt; &lt;code&gt;(&quot;SELECT DATE_ADD(my_datetime, INTERVAL 1 DAY)&quot;)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、レコードをクエリするときに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値の形式をUNIXタイムスタンプに変更する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;(&quot;SELECT UNIX_TIMESTAMP(my_datetime)&quot;)&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は簡単&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ですPHPで操作したい場合。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ffcc29ae487aa623bebb0ee1e8f86561c675d52d" translate="yes" xml:space="preserve">
          <source>If you're building an application, you never know how your data might have to be used down the line. If you wind up having to, say, compare a bunch of records in your data set, with, say, a bunch of items from a third-party API, and say, put them in chronological order, you'll be happy to have Unix timestamps for your rows. Even if you decide to use MySQL timestamps, store a Unix timestamp as insurance.</source>
          <target state="translated">アプリケーションを構築している場合、自分のデータがどのように使用されなければならないかは決してわかりません。例えば、データセット内のレコードの束を、サードパーティのAPIからのアイテムの束と比較し、時系列に並べる必要がある場合、Unixのタイムスタンプがあると嬉しいでしょう。MySQLのタイムスタンプを使うことにしたとしても、保険としてUnixのタイムスタンプを保存しておきましょう。</target>
        </trans-unit>
        <trans-unit id="c7995d4761522909b7214e1601ee4a9bbe7b4a1f" translate="yes" xml:space="preserve">
          <source>In &quot;bigger&quot; database terms, &lt;code&gt;timestamp&lt;/code&gt; has a couple of special-case triggers on it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「より大きな」データベース用語では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;timestamp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;には2つの特殊なケースのトリガーがあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2b0d5700a614a6da306f30adf05aaca5b64dbbf1" translate="yes" xml:space="preserve">
          <source>In MySQL 5 and above, &lt;strong&gt;TIMESTAMP&lt;/strong&gt; values are converted from the current time zone to UTC for storage, and converted back from UTC to the current time zone for retrieval. (This occurs only for the TIMESTAMP data type, and &lt;em&gt;not&lt;/em&gt; for other types such as DATETIME.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQL 5以降では、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TIMESTAMP&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;値は現在のタイムゾーンからUTCに変換されて格納され、取得のためにUTCから現在のタイムゾーンに変換されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（これは、TIMESTAMPデータ型でのみ発生し、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DATETIMEなどの他の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;型では発生し&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ません&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e195894f50db5526afc2ab1bf4e1d5658cbea95" translate="yes" xml:space="preserve">
          <source>In my case, I set UTC as a time zone for everything: the system, the database server, etc. every time that I can. If my customer requires another time zone, then I configure it on the app.</source>
          <target state="translated">私の場合、システム、データベースサーバーなど、すべてのタイムゾーンにUTCを設定しています。顧客が別のタイムゾーンを必要とする場合は、アプリ上で設定します。</target>
        </trans-unit>
        <trans-unit id="7b0a223418a395464ae8da509f57c18c6c1d324c" translate="yes" xml:space="preserve">
          <source>In short</source>
          <target state="translated">要するに</target>
        </trans-unit>
        <trans-unit id="998430940a1cf51fc5ec051819a568638be1a42b" translate="yes" xml:space="preserve">
          <source>In simpler words: &lt;strong&gt;If I have a database in Australia, and take a dump of that database to synchronize/populate a database in America, then the TIMESTAMP would update to reflect the real time of the event in the new time zone, while DATETIME would still reflect the time of the event in the au time zone&lt;/strong&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;簡単&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に言うと、オーストラリアにデータベースがあり、そのデータベースのダンプを取得してアメリカのデータベースと同期/設定する場合、TIMESTAMPは新しいタイムゾーンでのイベントのリアルタイムを反映するように更新され、DATETIMEはまだauタイムゾーンのイベントの時刻を反映しています&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="880e081828ff1887a05d731a268374d23ecff5d5" translate="yes" xml:space="preserve">
          <source>It can keep track across different timezones, so if you need to display a relative time for instance, UTC time is what you would want.</source>
          <target state="translated">異なるタイムゾーンにまたがって追跡することができるので、例えば相対的な時間を表示する必要がある場合は、UTC時間が必要になります。</target>
        </trans-unit>
        <trans-unit id="a41918ecbc3f538d35b22cc423624607a058a62e" translate="yes" xml:space="preserve">
          <source>It is worth noting in MySQL you can use something along the lines of the below when creating your table columns:</source>
          <target state="translated">MySQLでは、テーブルのカラムを作成する際に以下のようなラインに沿ったものを使用することができます。</target>
        </trans-unit>
        <trans-unit id="e551a0a9f5cec988bad0e24f623506d90ef7f587" translate="yes" xml:space="preserve">
          <source>MySQL Date/Time data types reference</source>
          <target state="translated">MySQL の DateTime データ型は</target>
        </trans-unit>
        <trans-unit id="ca1edfc72a341b43b90b702098e1f76bdd4e6abc" translate="yes" xml:space="preserve">
          <source>MySQL Storage Requirements reference</source>
          <target state="translated">MySQLのストレージ要件リファレンス</target>
        </trans-unit>
        <trans-unit id="6a4d8a0f46ff5193d118cc038fb1704445a83d9a" translate="yes" xml:space="preserve">
          <source>No timezone issues.  There's been some insightful comments on here on what happens with timezones with the different data types.  But is this common knowledge, and will your co-workers all take the time to learn it?  On the other hand, it's pretty hard to mess up changing a BigINT into a java.util.Date.  Using a BIGINT causes a lot of issues with timezones to fall by the wayside.</source>
          <target state="translated">タイムゾーンの問題はありません。ここでは、異なるデータタイプのタイムゾーンで何が起こるかについて、洞察に富んだコメントがいくつかありました。しかし、これは一般的な知識であり、あなたの同僚はみんな時間をかけてそれを学ぶことができるのでしょうか?一方で、BIGINTをjava.util.Dateに変更するのはかなり難しいです。BIGINTを使用すると、タイムゾーンに関する多くの問題が脇道にそれてしまいます。</target>
        </trans-unit>
        <trans-unit id="c435dd392d33aad96f73d02a6a3f30f54ccc0a19" translate="yes" xml:space="preserve">
          <source>No worries about ranges or precision.  You don't have to worry about what being cut short by future date ranges (TIMESTAMP only goes to 2038).</source>
          <target state="translated">範囲や精度の心配はありません。未来の日付の範囲(TIMESTAMPは2038年までしか行かない)で何が削られているのかを気にする必要はありません。</target>
        </trans-unit>
        <trans-unit id="91545e23ede1ee1fd22dcf98f82ebe9134aa6fe6" translate="yes" xml:space="preserve">
          <source>Note: default connection timezone is the server timezone, but this can (should) be changed per session (see &lt;code&gt;SET time_zone = ...&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注：デフォルトの接続タイムゾーンはサーバーのタイムゾーンですが、これはセッションごとに変更できます（設定する必要があります）（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SET time_zone = ...&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="db07d9be995e80601a3b13b3376307c58b5426b7" translate="yes" xml:space="preserve">
          <source>On the other hand, for values that represent system time like payment transactions, table modifications or logging, always use timestamps. The system will not be affected by moving the server to another time zone, or when comparing between servers in different timezones.</source>
          <target state="translated">一方、支払いトランザクションやテーブルの変更、ロギングのようにシステムの時間を表す値には、常にタイムスタンプを使用します。サーバを別のタイムゾーンに移動しても、異なるタイムゾーンのサーバ間で比較しても、システムに影響はありません。</target>
        </trans-unit>
        <trans-unit id="ba1d189b28f2abf9d56261768ea0e3c3b0ad4737" translate="yes" xml:space="preserve">
          <source>Reference taken from this Article:</source>
          <target state="translated">参考文献はこの記事から引用しています。</target>
        </trans-unit>
        <trans-unit id="8b05b05f99d45086cfec2bd40e0912d41a40c935" translate="yes" xml:space="preserve">
          <source>Should I use the datetime or timestamp data type in MySQL</source>
          <target state="translated">MySQL で datetime と timestamp のどちらのデータ型を使用するか?</target>
        </trans-unit>
        <trans-unit id="045177b57f199536798f7602f5e2b8d9dcff5e1f" translate="yes" xml:space="preserve">
          <source>So for values that represent user time like an appointment or a schedule, datetime is better. It allows the user to control the exact date and time desired, regardless of the server settings. The set time is the set time, not affected by the server's time zone, the user's time zone, or by changes in the way daylight savings time is calculated (yes it does change).</source>
          <target state="translated">そのため、予定やスケジュールのようにユーザーの時間を表す値にはdatetimeが適しています。これにより、サーバーの設定に関係なく、ユーザーが希望する正確な日時を制御することができます。設定された時間は設定された時間であり、サーバのタイムゾーン、ユーザのタイムゾーン、サマータイムの計算方法の変更には影響されません(はい、変更されます)。</target>
        </trans-unit>
        <trans-unit id="73a5a457c16ecd2093862684ea7c13eae5a14ea1" translate="yes" xml:space="preserve">
          <source>So it only matters when you have &amp;mdash; or may in the future have &amp;mdash; synchronized clusters across time zones.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;したがって、タイムゾーン間でクラスターを同期している場合、または将来的には同期している場合にのみ問題になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1653f1ba6251a7f548790a533e1efa888bef4509" translate="yes" xml:space="preserve">
          <source>So suppose you are in USA and getting data from a server which has a time zone of USA. Then you will get the date and time according to the USA time zone. The timestamp data type column always get updated automatically when its row gets updated. So it can be useful to track when a particular row was updated last time.</source>
          <target state="translated">あなたがアメリカにいて、アメリカのタイムゾーンを持つサーバーからデータを取得しているとします。そうすると、アメリカのタイムゾーンに応じた日付と時刻を取得することができます。タイムスタンプデータ型のカラムは、その行が更新されると常に自動的に更新されます。そのため、特定の行がいつ最後に更新されたかを追跡するのに便利です。</target>
        </trans-unit>
        <trans-unit id="eb10daa25dc60f8b1daad8f8e387e8e83eaf144b" translate="yes" xml:space="preserve">
          <source>So, to summarize, I value this advantages of timestamp:</source>
          <target state="translated">というわけで、要約すると、私はこのtimestampのメリットを大切にしています。</target>
        </trans-unit>
        <trans-unit id="ada52d888ccf16d2711b8a6377768a782af5c30e" translate="yes" xml:space="preserve">
          <source>Sources:</source>
          <target state="translated">Sources:</target>
        </trans-unit>
        <trans-unit id="77f90354221d8a67dd1969d6e644c499a0514a52" translate="yes" xml:space="preserve">
          <source>TIMESTAMP also affected by different TIME ZONE related setting.
DATETIME is constant.</source>
          <target state="translated">TIMESTAMPは、異なるTIME ZONE関連の設定にも影響されます。DATETIMEは一定です。</target>
        </trans-unit>
        <trans-unit id="c94a072eac65be71cfc849f9037072f6247474bd" translate="yes" xml:space="preserve">
          <source>TIMESTAMP internally converted current time zone to UTC for storage, and during retrieval converted back to the current time zone.
DATETIME can not do this.</source>
          <target state="translated">TIMESTAMPは内部的に現在のタイムゾーンをUTCに変換して保存し、検索中に現在のタイムゾーンに戻しています。DATETIMEではこれができません。</target>
        </trans-unit>
        <trans-unit id="dacee252d7b14073e849682cd79a8a03ac04c316" translate="yes" xml:space="preserve">
          <source>TIMESTAMP is 4 bytes Vs 8 bytes for DATETIME.</source>
          <target state="translated">TIMESTAMPは4バイト、DATETIMEは8バイトです。</target>
        </trans-unit>
        <trans-unit id="a410814a3011c5943a3034941f92663affe3da22" translate="yes" xml:space="preserve">
          <source>TIMESTAMP is always in UTC (that is, elapsed seconds since 1970-01-01, in UTC), and your MySQL server auto-converts it to the date/time for the connection timezone. In the long-term, TIMESTAMP is the way to go because you know your temporal data will always be in UTC. For example, you won't screw your dates up if you migrate to a different server or if you change the timezone settings on your server.</source>
          <target state="translated">TIMESTAMPは常にUTC(1970-01-01-01からの経過秒、UTC)であり、MySQLサーバはこれを接続タイムゾーンの日時に自動変換します。長期的には、時間データは常にUTCであることがわかっているため、TIMESTAMPを使用することをお勧めします。例えば、別のサーバに移行したり、サーバのタイムゾーン設定を変更したりしても、日付がおかしくなることはありません。</target>
        </trans-unit>
        <trans-unit id="e8ac59d0c9ad21fe5948cec9369a8f0b45667f55" translate="yes" xml:space="preserve">
          <source>TIMESTAMP is four bytes vs eight bytes for DATETIME.</source>
          <target state="translated">TIMESTAMPは4バイトで、DATETIMEは8バイトです。</target>
        </trans-unit>
        <trans-unit id="5d4df6053b746ece86d95685245755662b29cc96" translate="yes" xml:space="preserve">
          <source>TIMESTAMP is still limited to 1970-2038</source>
          <target state="translated">TIMESTAMPはまだ1970年から2038年までに限定されています。</target>
        </trans-unit>
        <trans-unit id="f9eb6fe6031fa5a60529bcb98828a895865741b2" translate="yes" xml:space="preserve">
          <source>TIMESTAMP supported range:
&amp;lsquo;1970-01-01 00:00:01&amp;prime; UTC to &amp;lsquo;2038-01-19 03:14:07&amp;prime; UTC
DATETIME supported range:
&amp;lsquo;1000-01-01 00:00:00&amp;prime; to &amp;lsquo;9999-12-31 23:59:59&amp;prime;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TIMESTAMPがサポートする範囲： '1970-01-01 00:00:01' UTCから '2038-01-19 03:14:07' UTC DATETIMEがサポートする範囲： '1000-01-01 00:00:00'から '9999 -12-31 23:59:59 &amp;prime;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1e8cfe79f87e9cf415a34e5da6160ec0183062d4" translate="yes" xml:space="preserve">
          <source>TIMESTAMP used to track changes to records, and update every time when the record is changed.
DATETIME used to store specific and static value which is not affected by any changes in records.</source>
          <target state="translated">TIMESTAMP は、レコードの変更を追跡するために使用され、レコードが変更されるたびに更新されます。DATETIMEは、レコードの変更に影響されない特定の静的な値を格納するために使用されます。</target>
        </trans-unit>
        <trans-unit id="f5f7ca32f1c995965b4caae3c7b57bf8c446174e" translate="yes" xml:space="preserve">
          <source>The DATETIME type is used when you need values that contain both date and time information. MySQL retrieves and displays DATETIME values in &amp;lsquo;YYYY-MM-DD HH:MM:SS&amp;rsquo; format. The supported range is &amp;rsquo;1000-01-01 00:00:00&amp;prime; to &amp;rsquo;9999-12-31 23:59:59&amp;prime;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;DATETIMEタイプは、日付と時刻の両方の情報を含む値が必要な場合に使用されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLは 'YYYY-MM-DD HH：MM：SS'形式でDATETIME値を取得して表示します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サポートされる範囲は「1000-01-01 00:00:00」から「9999-12-31 23:59:59」です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d995c3fc457d2a486d56301383483a0c59cd6c55" translate="yes" xml:space="preserve">
          <source>The DATETIME type is used when you need values that contain both date and time information. MySQL retrieves and displays DATETIME values in 'YYYY-MM-DD HH:MM:SS' format. The supported range is '1000-01-01 00:00:00' to '9999-12-31 23:59:59'.</source>
          <target state="translated">DATETIME タイプは、日付と時刻の両方の情報を含む値が必要な場合に使用されます。MySQLは、「YYYY-MM-DD HH:MM:SS」形式のDATETIME値を取得して表示します。サポートされている範囲は、「1000-01-01 00:00:00」から「9999-12-31 23:59:59」です。</target>
        </trans-unit>
        <trans-unit id="d1d182272c9e749c480b203f44a7403a8e892e56" translate="yes" xml:space="preserve">
          <source>The TIMESTAMP data type has a range of &amp;rsquo;1970-01-01 00:00:01&amp;prime; UTC to &amp;rsquo;2038-01-09 03:14:07&amp;prime; UTC. It has varying properties, depending on the MySQL version and the SQL mode the server is running in.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;TIMESTAMPデータ型の範囲は、 '1970-01-01 00:00:01' UTCから '2038-01-09 03:14:07' UTCです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLのバージョンとサーバーが実行されているSQLモードに応じて、さまざまなプロパティがあります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="451a1b7a95752b8704aa14620a0ff8e1af0081b8" translate="yes" xml:space="preserve">
          <source>The TIMESTAMP data type has a range of '1970-01-01 00:00:01' UTC to '2038-01-09 03:14:07' UTC. It has varying properties, depending on the MySQL version and the SQL mode the server is running in.</source>
          <target state="translated">TIMESTAMP データ型は、'1970-01-01 00:00:00:01' UTC から '2038-01-09 03:14:07' UTC までの範囲を持ちます。これは、MySQL のバージョンとサーバが実行している SQL モードによってプロパティが異なります。</target>
        </trans-unit>
        <trans-unit id="5dbacf6cd847f9d41776bc72041128127e5dd977" translate="yes" xml:space="preserve">
          <source>The below examples show how the &lt;code&gt;TIMESTAMP&lt;/code&gt; date type changed the values after changing the &lt;code&gt;time-zone to 'america/new_york'&lt;/code&gt; where &lt;code&gt;DATETIME&lt;/code&gt;is unchanged.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下の例は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;time-zone to 'america/new_york'&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;に変更した後に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;TIMESTAMP&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;日付タイプが値を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どのように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更した&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;かを示してい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここで、&lt;/font&gt; &lt;code&gt;DATETIME&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は変更されていません。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e0ed57105ef0f58a736d7ff36ae9c629f9e488a" translate="yes" xml:space="preserve">
          <source>The main difference is that DATETIME is constant while TIMESTAMP is affected by the &lt;code&gt;time_zone&lt;/code&gt; setting.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;主な違いは、TIMESTAMPが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;time_zone&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;設定の&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;影響を受ける一方で、DATETIMEは定数であること&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b2f50d2734b460f0fadb92162062e81c8ec1ffbb" translate="yes" xml:space="preserve">
          <source>The major difference is</source>
          <target state="translated">大きな違いは</target>
        </trans-unit>
        <trans-unit id="c26db8d70224fe926b15eb61a7302596d74d511e" translate="yes" xml:space="preserve">
          <source>The timestamp data type stores date and time, but in UTC format, not in the current timezone format as datetime does. And when you fetch data, timestamp again converts that into the current timezone time.</source>
          <target state="translated">timestampデータ型は日付と時刻を保存しますが、datetimeのように現在のタイムゾーンのフォーマットではなく、UTCフォーマットで保存されます。そして、データを取得するときには、Timestampはそれを現在のタイムゾーンの時間に変換します。</target>
        </trans-unit>
        <trans-unit id="cf32d1d08b4bc2bc4010812ed8c9ae1f696d2151" translate="yes" xml:space="preserve">
          <source>Third-party tool integration.  By using an integer, it's trivial for 3rd party tools (e.g. EclipseLink) to interface with the database.  Not every third-party tool is going to have the same understanding of a &quot;datetime&quot; as MySQL does.  Want to try and figure out in Hibernate whether you should use a java.sql.TimeStamp or java.util.Date object if you're using these custom data types?  Using your base data types make's use with 3rd-party tools trivial.</source>
          <target state="translated">サードパーティツールの統合。整数を使用することで、サードパーティのツール(EclipseLinkなど)がデータベースとのインターフェースを取るのは簡単です。すべてのサードパーティツールがMySQLと同じように「日付」を理解しているわけではありません。これらのカスタム・データ型を使用している場合、java.sql.TimeStampとjava.util.Dateオブジェクトのどちらを使用すべきかをHibernateで試してみたいと思いませんか?基本データ型を使用することで、サードパーティのツールを使用するのが簡単になります。</target>
        </trans-unit>
        <trans-unit id="10c80400b73324c73575938e491d735cda350d3b" translate="yes" xml:space="preserve">
          <source>This issue is closely related how you should store a money value (i.e. $1.99) in a database.  Should you use a Decimal, or the database's Money type, or worst of all a Double? All 3 of these options are terrible, for many of the same reasons listed above.  The solution is to store the value of money in cents using BIGINT, and then convert cents to dollars when you display the value to the user.  The database's job is to store data, and NOT to intrepret that data.  All these fancy data-types you see in databases(especially Oracle) add little, and start you down the road to vendor lock-in.</source>
          <target state="translated">この問題は、データベースにお金の値(例:$1.99)をどのように格納するかに密接に関係しています。10進数を使うべきなのか、データベースのお金の型を使うべきなのか、それとも最悪の場合はダブルを使うべきなのか?これらの3つの選択肢はすべて、上記に挙げた理由と同じ理由で、ひどいものです。解決策は、BIGINTを使用してお金の値をセントで保存し、ユーザーに値を表示するときにセントをドルに変換することです。データベースの仕事はデータを保存することであり、そのデータを解釈することではありません。データベース(特にOracle)で目にするこれらの派手なデータ型は何の役にも立たず、ベンダーのロックインへの道を歩み始めます。</target>
        </trans-unit>
        <trans-unit id="7209c28d9c054e86435df0e23a3343e8a1f40ced" translate="yes" xml:space="preserve">
          <source>This will update the time at each instance you modify a row and is sometimes very helpful for stored last edit information. This only works with timestamp, not datetime however.</source>
          <target state="translated">これは、行を変更した各インスタンスの時刻を更新し、保存された最後の編集情報に非常に役立つことがあります。ただし、これはtimestampでのみ動作し、datetimeではありません。</target>
        </trans-unit>
        <trans-unit id="04cfc0761251068bf684bad9ba6e3db23f02b537" translate="yes" xml:space="preserve">
          <source>Timestamps are also lighter on the database and indexed faster.</source>
          <target state="translated">タイムスタンプもデータベースが軽くなり、インデックスが速くなりました。</target>
        </trans-unit>
        <trans-unit id="39b7c7fd16c84befdb2fbc7842a2f1b007beb800" translate="yes" xml:space="preserve">
          <source>Timestamps in MySQL are generally used to track changes to records, and are often updated every time the record is changed. If you want to store a specific value you should use a datetime field.</source>
          <target state="translated">MySQLのタイムスタンプは一般的にレコードの変更を追跡するために使用され、レコードが変更されるたびに更新されることが多いです。特定の値を保存したい場合は、datetimeフィールドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="0cdbc16fb39ccae8f270c66140498641e37ffbff" translate="yes" xml:space="preserve">
          <source>To get the current Unix timestamp in PHP, just do &lt;code&gt;time();&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PHPで現在のUnixタイムスタンプを取得するには、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;time();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cd063cd0d9b6c24ab996012840118b6a4b97e0b" translate="yes" xml:space="preserve">
          <source>Using datetimes without the timezone means that your application is dealing with only 1 timezone, however timestamps give you the benefits of &lt;code&gt;datetime&lt;/code&gt; plus the flexibility of showing the same exact point of time in different timezones.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイムゾーンなしで日時を使用するということは、アプリケーションが扱うタイムゾーンが1つだけであることを意味しますが、タイムスタンプは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の利点に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;加えて、異なるタイムゾーンで同じ正確な時点を表示できるという柔軟性をもたらします。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6679d8851bfecb41edd8ddf8dff3f76a03f04b74" translate="yes" xml:space="preserve">
          <source>What the right one is depends entirely on what you want to do.</source>
          <target state="translated">何が正しいかは、あなたが何をしたいかにかかっています。</target>
        </trans-unit>
        <trans-unit id="15e16ae2b3038140af7aae3650d4e538db2056d5" translate="yes" xml:space="preserve">
          <source>When you ask what is the time ? and the answer comes as something like '2019-02-05 21:18:30', that is not completed, not defined answer because it lacks another part, in which timezone  ? Washington ? Moscow ? Beijing ?</source>
          <target state="translated">あなたが尋ねるときは何ですか時間は ? と答えは '2019-02-05 21:18:30' のようなものとして来る、それが完了していない、定義されていない答えは、別の部分を欠いているので、どのタイムゾーンで ? ワシントン ? モスクワ ? 北京 ?</target>
        </trans-unit>
        <trans-unit id="0b3ff16b336587556b1fa0fdb27cf08aee358bed" translate="yes" xml:space="preserve">
          <source>Would you recommend using a &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.0/en/datetime.html&quot;&gt;datetime&lt;/a&gt; or a &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.0/en/datetime.html&quot;&gt;timestamp&lt;/a&gt; field, and why (using MySQL)?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.0/en/datetime.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;日時&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;または&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.0/en/datetime.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;タイムスタンプ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;フィールド&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用することをお勧めしますか&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、またその理由（MySQLを使用）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="99ccf3adb5db0d31246743ae82d394360ce5b265" translate="yes" xml:space="preserve">
          <source>You avoid vendor lock-in.  Pretty much every database supports integers in the relatively similar fashion.  Suppose you want to move to another database.  Do you want to worry about the differences between MySQL's DATETIME values and how Oracle defines them?  Even among different versions of MySQL, TIMESTAMPS have a different level of precision.  It was only just recently that MySQL supported milliseconds in the timestamps.</source>
          <target state="translated">ベンダーのロックインを避けることができます。ほとんどのデータベースは、比較的似たような方法で整数をサポートしています。別のデータベースに移行したいとします。MySQLのDATETIME値とOracleが定義するDATETIME値の違いを心配することはありませんか?MySQLの異なるバージョン間でも、TIMESTAMPSの精度は異なります。MySQLがタイムスタンプにミリ秒をサポートしたのはつい最近のことです。</target>
        </trans-unit>
        <trans-unit id="8b4895f794a8283459ca4a088274ede5b50f7a7f" translate="yes" xml:space="preserve">
          <source>You're quite likely to hit the lower limit on TIMESTAMPs in general use -- e.g. storing birthdate.</source>
          <target state="translated">一般的な使い方ではTIMESTAMPの下限値に当たる可能性がかなり高いです --例えば、生年月日の保存など。</target>
        </trans-unit>
        <trans-unit id="fe7b915adc41c235ae2019a5d63666bcb6f784aa" translate="yes" xml:space="preserve">
          <source>a INDEX's on Datetime   - &lt;a href=&quot;https://stackoverflow.com/questions/4013301/mysql-datetime-index-is-not-working&quot;&gt;Does not work&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;INDEXの日時- &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/4013301/mysql-datetime-index-is-not-working&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能しません&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c058c66e16779f3e5d87b80818f4e54711ee832a" translate="yes" xml:space="preserve">
          <source>a INDEX's on Timestamp  - works</source>
          <target state="translated">タイムスタンプ上のINDEXの動作</target>
        </trans-unit>
        <trans-unit id="14c88ff2f0e7f0d7d01802892756e11f40be03b1" translate="yes" xml:space="preserve">
          <source>and in MySQL do &lt;code&gt;SELECT UNIX_TIMESTAMP();&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MySQLでは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;SELECT UNIX_TIMESTAMP();&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bef63f4643b53c0e6c20553bb1f0543b403021b5" translate="yes" xml:space="preserve">
          <source>easy migrations between time zones</source>
          <target state="translated">時間帯間の移行が容易</target>
        </trans-unit>
        <trans-unit id="7ae8438fcf4f03e1bbb55d35dceda8efa0bd317f" translate="yes" xml:space="preserve">
          <source>look at this &lt;a href=&quot;https://stackoverflow.com/questions/95183/how-does-one-create-an-index-on-the-date-part-of-datetime-field-in-mysql&quot;&gt;post to see problems with Datetime indexing&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/95183/how-does-one-create-an-index-on-the-date-part-of-datetime-field-in-mysql&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;投稿を見て、日時インデックスの問題を確認してください&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="944e5c03bdda873f2d9a030910c0d94089a1d341" translate="yes" xml:space="preserve">
          <source>no worry about dates in/out a summer time period</source>
          <target state="translated">夏場のデートにも安心</target>
        </trans-unit>
        <trans-unit id="68c2634f494de50ae1701c5c57288cb89cec17cd" translate="yes" xml:space="preserve">
          <source>pretty easy to calculate diferences (just subtract both timestamps)</source>
          <target state="translated">差異を計算するのは簡単です。</target>
        </trans-unit>
        <trans-unit id="d38547cfd2b4a24917f0893ead653bf6ef1602f3" translate="yes" xml:space="preserve">
          <source>ready to use on international (multi time zone) apps</source>
          <target state="translated">国際的な(複数のタイムゾーン)アプリですぐに使える</target>
        </trans-unit>
        <trans-unit id="18f605dfe1380d283d7c7607e5798ee1e187bbce" translate="yes" xml:space="preserve">
          <source>then every single value in your 'Date_Added' column would be changed to the current timestamp.</source>
          <target state="translated">とすると、'Date_Added' カラムのすべての値が現在のタイムスタンプに変更されます。</target>
        </trans-unit>
        <trans-unit id="9b99af1d5f813e03b16069c39a0d4de32de49280" translate="yes" xml:space="preserve">
          <source>you accept data from different clients around the world, each of them inserts the time in his timezone.</source>
          <target state="translated">あなたは世界中の異なるクライアントからのデータを受け入れ、それらのそれぞれが彼のタイムゾーンの時間を挿入します。</target>
        </trans-unit>
        <trans-unit id="a1900144dd02e0b44d98690cdbca12f939cbf4a9" translate="yes" xml:space="preserve">
          <source>you changed the country you stay in, and continue your work of maintaining the data while seeing it in a different timezone (without changing the actual data).</source>
          <target state="translated">あなたが滞在している国を変更し、異なるタイムゾーンで見ながら(実際のデータは変えずに)データを維持する作業を続けています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
