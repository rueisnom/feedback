<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/4057440">
    <body>
      <group id="4057440">
        <trans-unit id="dfac36759ba6a3f95e7a7743bcec7691cf009b99" translate="yes" xml:space="preserve">
          <source>A function that you can use instead of &lt;code&gt;console.log&lt;/code&gt; that doesn't have this problem is as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una funci&amp;oacute;n que puede usar en lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;console.log&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que no tiene este problema es la siguiente:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46801e45c481b06aa23ea3b7bfd6d72a4435af94" translate="yes" xml:space="preserve">
          <source>All of these methods are obviously very slow, so even more so than with normal &lt;code&gt;console.log&lt;/code&gt;s, you have to strip them off after you're done debugging.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Obviamente, todos estos m&amp;eacute;todos son muy lentos, por lo que incluso m&amp;aacute;s que con los &lt;/font&gt;&lt;/font&gt; &lt;code&gt;console.log&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; s &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;normales &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, debe quitarlos una vez que haya terminado la depuraci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd65c6ffd8e610e4c64388e76f5b52a210ca020a" translate="yes" xml:space="preserve">
          <source>By calling toString, you create a representation in memory that will not be altered by following statements, which the console will read when it is ready.  The console output is slightly different from passing the object directly, but it seems acceptable:</source>
          <target state="translated">Al llamar aString,se crea una representación en la memoria que no será alterada por las siguientes declaraciones,que la consola leerá cuando esté lista.La salida de la consola es ligeramente diferente de pasar el objeto directamente,pero parece aceptable:</target>
        </trans-unit>
        <trans-unit id="c00fed7d19d1ddcc3784cd4653fda344d37b24b2" translate="yes" xml:space="preserve">
          <source>For the case of objects, unfortunately, the best method appears to be to debug first with a non-WebKit browser, or to write a complicated function to clone. If you are only working with simple objects, where order of keys doesn't matter and there are no functions, you could always do:</source>
          <target state="translated">En el caso de los objetos,lamentablemente,el mejor método parece ser depurar primero con un navegador que no sea WebKit,o escribir una función complicada para clonar.Si sólo trabajas con objetos simples,donde el orden de las teclas no importa y no hay funciones,siempre puedes hacerlo:</target>
        </trans-unit>
        <trans-unit id="7143996aa80d4b17ab85316f4d8b15e71aa30215" translate="yes" xml:space="preserve">
          <source>From Eric's explanation, it is due to &lt;code&gt;console.log()&lt;/code&gt; being queued up, and it prints a later value of the array (or object).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Seg&amp;uacute;n la explicaci&amp;oacute;n de Eric, se debe a que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;console.log()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; est&amp;aacute; en cola e imprime un valor posterior de la matriz (u objeto).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e55d6088cfc78eafa0356b97f68cb93fa5f96b52" translate="yes" xml:space="preserve">
          <source>Have I done something wrong, or is Chrome's JavaScript console being exceptionally lazy about evaluating my array?</source>
          <target state="translated">¿He hecho algo malo,o la consola de JavaScript de Chrome está siendo excepcionalmente perezosa en la evaluación de mi matriz?</target>
        </trans-unit>
        <trans-unit id="d08780f45676c03081fb8d0a10465082ea26573a" translate="yes" xml:space="preserve">
          <source>However, there is a simple way to avoid this in your code:</source>
          <target state="translated">Sin embargo,hay una forma sencilla de evitar esto en su código:</target>
        </trans-unit>
        <trans-unit id="551310e2a055ee7e4f986ef6893696f43a8ae42f" translate="yes" xml:space="preserve">
          <source>I'll start with the code:</source>
          <target state="translated">Empezaré con el código:</target>
        </trans-unit>
        <trans-unit id="f93b3a870510dbb38750055d8b6671a4c8cfd339" translate="yes" xml:space="preserve">
          <source>Is Chrome's JavaScript console lazy about evaluating arrays</source>
          <target state="translated">¿La consola de JavaScript de Chrome es perezosa en cuanto a la evaluación de las matrices</target>
        </trans-unit>
        <trans-unit id="b8eafe551c86572f61817853df2367a798d9931f" translate="yes" xml:space="preserve">
          <source>It implements only &lt;code&gt;log&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; methods, you will have to add some more in order for it to be interchangeable with a regular &lt;code&gt;console&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Implementa solo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;log&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;warn&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;error&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , tendr&amp;aacute; que agregar un poco m&amp;aacute;s para que sea intercambiable con una &lt;/font&gt;&lt;/font&gt; &lt;code&gt;console&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; normal &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d0ecaf1bfb15ecda4242790da87ea0d34169c3ec" translate="yes" xml:space="preserve">
          <source>Looks like Chrome is replacing in its &quot;pre compile&quot; phase any instance of &quot;s&quot; with &lt;strong&gt;pointer&lt;/strong&gt; to the actual array.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Parece que Chrome est&amp;aacute; reemplazando en su fase de &quot;precompilaci&amp;oacute;n&quot; cualquier instancia de &quot;s&quot; con un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;puntero&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a la matriz real.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46d085fa5d0bcf90ef68c2d344df09d7323abf45" translate="yes" xml:space="preserve">
          <source>One way around is by cloning the array, logging fresh copy instead:</source>
          <target state="translated">Una forma de evitarlo es clonar la matriz,registrando una copia nueva en su lugar:</target>
        </trans-unit>
        <trans-unit id="cb862e4c0ea2813151a3e63adf8319812bf52cf6" translate="yes" xml:space="preserve">
          <source>Simple, right?  In response to this, Firebug says:</source>
          <target state="translated">Simple,¿verdad? En respuesta a esto,Firebug dice:</target>
        </trans-unit>
        <trans-unit id="1e0d11a4965cbb38da51e9549fd4985b1f51a7d9" translate="yes" xml:space="preserve">
          <source>Thanks for the comment, tec.  I was able to find an existing unconfirmed Webkit bug that explains this issue: &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=35801&quot;&gt;https://bugs.webkit.org/show_bug.cgi?id=35801&lt;/a&gt; (EDIT: now fixed!)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Gracias por el comentario, tec. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pude encontrar un error existente de Webkit sin confirmar que explica este problema: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=35801&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://bugs.webkit.org/show_bug.cgi?id=35801&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (EDITAR: &amp;iexcl;ahora solucionado!)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66547a93299957e8f648aae1ef2479c90900df5f" translate="yes" xml:space="preserve">
          <source>There appears to be some debate regarding just how much of a bug it is and whether it's fixable.  It does seem like bad behavior to me.  It was especially troubling to me because, in Chrome at least, it occurs when the code resides in scripts that are executed immediately (before the page is loaded), even when the console is open, whenever the page is refreshed.  Calling console.log when the console is not yet active only results in a reference to the object being queued, not the output the console will contain.  Therefore, the array (or any object), will not be evaluated until the console is ready.  It really is a case of lazy evaluation.</source>
          <target state="translated">Parece que hay un debate en cuanto a cuánto bicho es y si se puede arreglar.A mí me parece un mal comportamiento.Fue especialmente preocupante para mí porque,al menos en Chrome,ocurre cuando el código reside en scripts que se ejecutan inmediatamente (antes de que se cargue la página),incluso cuando la consola está abierta,siempre que se refresca la página.Llamar a console.log cuando la consola aún no está activa sólo resulta en una referencia al objeto que está en cola,no a la salida que contendrá la consola.Por lo tanto,la matriz (o cualquier objeto),no será evaluada hasta que la consola esté lista.Realmente es un caso de evaluación perezosa.</target>
        </trans-unit>
        <trans-unit id="78bf50d986df4987666c7eaf2049448bd7b786aa" translate="yes" xml:space="preserve">
          <source>There can be 5 solutions:</source>
          <target state="translated">Puede haber 5 soluciones:</target>
        </trans-unit>
        <trans-unit id="5c53c54aecd095bd154cc4da40d1bf08df79b32e" translate="yes" xml:space="preserve">
          <source>This has been patched in Webkit, however when using the React framework this happens for me in some circumstances, if you have such problems just use as others suggest:</source>
          <target state="translated">Esto ha sido parcheado en Webkit,sin embargo cuando se utiliza el marco de React,esto me sucede en algunas circunstancias,si usted tiene tales problemas sólo use como otros sugieren:</target>
        </trans-unit>
        <trans-unit id="ba9c2ac42c28a6ec590e6d9d2845779b86672b34" translate="yes" xml:space="preserve">
          <source>This is already answered, but I'll drop my answer anyway. I implemented a simple console wrapper which doesn't suffer from this issue. Requires jQuery.</source>
          <target state="translated">Esto ya está contestado,pero dejaré mi respuesta de todos modos.He implementado un simple envoltorio de consola que no sufre de este problema.Requiere jQuery.</target>
        </trans-unit>
        <trans-unit id="ce33359dc7ab2a58aaf0141b14a70e82a29e0c2d" translate="yes" xml:space="preserve">
          <source>Wonderful, but Chrome's JavaScript console (7.0.517.41 beta) says:</source>
          <target state="translated">Maravilloso,pero la consola de JavaScript de Chrome (7.0.517.41 beta)dice:</target>
        </trans-unit>
        <trans-unit id="75f8d3e048b888caa0c0af21fc8ea1853307476c" translate="yes" xml:space="preserve">
          <source>You can clone an array with &lt;code&gt;Array#slice&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede clonar una matriz con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Array#slice&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b23bd8ea2f47a29e3bbcb47e7b9feb91c051760d" translate="yes" xml:space="preserve">
          <source>however be warned as it does a shallow copy, so any deep nested non-primitive values will not be cloned and thus shown in their modified state in the console</source>
          <target state="translated">sin embargo se advierte como lo hace una copia superficial,por lo que cualquier valor no primitivo anidado profundamente no será clonado y por lo tanto se mostrará en su estado modificado en la consola</target>
        </trans-unit>
        <trans-unit id="3df08187b5b266b9bcfcc4527fb5c5efc48f1a20" translate="yes" xml:space="preserve">
          <source>the shortest solution so far is to use array or object spread syntax to get a clone of values to be preserved as in time of logging, ie:</source>
          <target state="translated">la solución más corta hasta el momento es utilizar la sintaxis de matriz o dispersión de objetos para obtener un clon de valores a preservar como en el tiempo de registro,es decir:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
