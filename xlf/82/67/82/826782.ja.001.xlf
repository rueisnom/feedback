<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/826782">
    <body>
      <group id="826782">
        <trans-unit id="d105903ee9ebe6335210c65582ad0927706619c9" translate="yes" xml:space="preserve">
          <source>...all other browser fixes. It will work in &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_9&quot;&gt;Internet&amp;nbsp;Explorer&amp;nbsp;9&lt;/a&gt; or later.</source>
          <target state="translated">...他のすべてのブラウザの修正。 &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_Explorer_9&quot;&gt;Internet Explorer 9&lt;/a&gt;以降で動作します。</target>
        </trans-unit>
        <trans-unit id="66e0d4fbd1b69dd0ed3e4ea7d4110c7eeeed198f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://api.jqueryui.com/disableSelection/&quot;&gt;jQuery UI Disable Selection&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://api.jqueryui.com/disableSelection/&quot;&gt;jQuery UI Disable Selection&lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="0cc7483f7754b56281fba47d583d985c7016c975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/WebKit&quot;&gt;WebKit&lt;/a&gt; still allows the text to be copied, if you select elements around it.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/WebKit&quot;&gt;WebKit&lt;/a&gt;では、周囲の要素を選択した場合でも、テキストをコピーできます。</target>
        </trans-unit>
        <trans-unit id="3ab93b4f21508cef6a40c2ffdec9f7790f6ac3c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you are using an &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;autoprefixer&lt;/a&gt; you can remove other prefix.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;自動&lt;/a&gt;プレフィックスを使用している場合は、他のプレフィックスを削除できます。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e5dbd756c2bd9cd2999b901d1ecd078fb39b879" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A Quick Hack Update&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;クイックハックアップデート&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53f3a629a3c2542012f904b91d7447b81a987f8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML/CSS:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML/CSS:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3105690059d9c0be159ba31df6db32da734c696" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML/JavaScript:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HTML/JavaScript:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f35097e2b1b38de5ec88177ea2b0967e5b0e99a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;NOTE:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0bed1e6f7e79e1201ecb8992c7df80c1e3dfc09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Try it&lt;/strong&gt; in this &lt;a href=&quot;https://codepen.io/alessandroinfo/pen/eYNNQNv&quot;&gt;CodePen&lt;/a&gt;.</source>
          <target state="translated">この&lt;a href=&quot;https://codepen.io/alessandroinfo/pen/eYNNQNv&quot;&gt;CodePenでお&lt;/a&gt; &lt;strong&gt;試しください&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="b87cb5363ff93fc0254a35e58fd42a493305443f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE January, 2017:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;2017年1月の更新：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="153cabb5f9818e1f07acc4533af79235ecd9aed7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update 30 April 2014&lt;/strong&gt;: This tree traversal needs to be rerun whenever a new element is added to the tree, but it seems from a comment by @Han that it is possible to avoid this by adding a &lt;code&gt;mousedown&lt;/code&gt; event handler that sets &lt;code&gt;unselectable&lt;/code&gt; on the target of the event. See &lt;a href=&quot;http://jsbin.com/yagekiji/1&quot;&gt;http://jsbin.com/yagekiji/1&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;2014年4月30日更新&lt;/strong&gt; ：このツリートラバーサルは、新しい要素がツリーに追加されるたびに再実行する必要がありますが、@ Hanのコメントから、ターゲットで &lt;code&gt;unselectable&lt;/code&gt; &lt;code&gt;mousedown&lt;/code&gt; 設定するmousedownイベントハンドラーを追加することでこれを回避できるようですイベントの。 詳細については、 &lt;a href=&quot;http://jsbin.com/yagekiji/1&quot;&gt;http：//jsbin.com/yagekiji/1&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f566c64a4b353e60f7f20e3326573b286aa7d111" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Working&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Working&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8da066a3894ccf5ecf9ecd76cde6a3875012e4c2" translate="yes" xml:space="preserve">
          <source>A JavaScript solution for Internet&amp;nbsp;Explorer is:</source>
          <target state="translated">Internet ExplorerのJavaScriptソリューションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1549dec53c6011c9bbef64f9bf71e03d1edb245a" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;http://caniuse.com/#feat=user-select-none&quot;&gt;Can I use&lt;/a&gt;, the &lt;code&gt;user-select&lt;/code&gt; is currently supported in all browsers except Internet&amp;nbsp;Explorer 9 and earlier versions (but sadly &lt;em&gt;still&lt;/em&gt; needs a vendor prefix).</source>
          <target state="translated">&lt;a href=&quot;http://caniuse.com/#feat=user-select-none&quot;&gt;Can I useに&lt;/a&gt;よると、 &lt;code&gt;user-select&lt;/code&gt; は現在、Internet Explorer 9以前のバージョンを除くすべてのブラウザーでサポートされています（ただし、残念ながらベンダープレフィックスが必要です）。</target>
        </trans-unit>
        <trans-unit id="67a941a9e1e5daa075eda9c4904d00cddb545067" translate="yes" xml:space="preserve">
          <source>Add this to the first div in which you want to disable the selection for text:</source>
          <target state="translated">テキストの選択を無効にしたい最初の div に追加します。</target>
        </trans-unit>
        <trans-unit id="d841669299f2943074353aa9e4c12283db881f5f" translate="yes" xml:space="preserve">
          <source>All of the correct CSS variations are:</source>
          <target state="translated">正しいCSSのバリエーションはすべて</target>
        </trans-unit>
        <trans-unit id="c85c58dec99e5ab948d510b95570ff7548c7b434" translate="yes" xml:space="preserve">
          <source>Alternatively:</source>
          <target state="translated">Alternatively:</target>
        </trans-unit>
        <trans-unit id="71d96890766ce9a90a60f8343bbd18c35e587bd6" translate="yes" xml:space="preserve">
          <source>And then, if you're using jQuery, add this inside a &lt;code&gt;$(document).ready()&lt;/code&gt; block:</source>
          <target state="translated">そして、jQueryを使用している場合は、これを &lt;code&gt;$(document).ready()&lt;/code&gt; ブロック内に追加します。</target>
        </trans-unit>
        <trans-unit id="e5b8f24a60025922ebd52a79cd9eb42854f23187" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;https://css-tricks.com/almanac/properties/u/user-select/&quot;&gt;CSS-Tricks&lt;/a&gt; says, the &lt;strong&gt;problem&lt;/strong&gt; is:</source>
          <target state="translated">&lt;a href=&quot;https://css-tricks.com/almanac/properties/u/user-select/&quot;&gt;CSS-Tricksが&lt;/a&gt;言うように、 &lt;strong&gt;問題&lt;/strong&gt;は：</target>
        </trans-unit>
        <trans-unit id="0e889ff6509d7e0bbb68dbd97aca1bc01f238c5d" translate="yes" xml:space="preserve">
          <source>As you can see, we were unable to select the numbers, but we were able to copy them.</source>
          <target state="translated">ご覧の通り、数字を選択することはできませんでしたが、コピーすることはできました。</target>
        </trans-unit>
        <trans-unit id="030502f6190705bf8cae29250fc81c61c3ff7220" translate="yes" xml:space="preserve">
          <source>Aside from the Mozilla-only property, no, there is no way to disable text selection with just standard CSS (as of now).</source>
          <target state="translated">Mozilla 専用のプロパティはともかくとして、いや、標準の CSS だけでテキスト選択を無効にする方法はありません(今のところ)。</target>
        </trans-unit>
        <trans-unit id="2a9aeb746a06e0844284ee2d4008adbf2fd73b36" translate="yes" xml:space="preserve">
          <source>CSS:</source>
          <target state="translated">CSS:</target>
        </trans-unit>
        <trans-unit id="20ad96e7d65e0639d3130bfe7c09cb05ab69813d" translate="yes" xml:space="preserve">
          <source>Caveat: Internet&amp;nbsp;Explorer&amp;nbsp;9 may not need this extra jQuery piece, so you may want to add a version check in there.</source>
          <target state="translated">警告：Internet Explorer 9はこの追加のjQueryピースを必要としない場合があるため、そこにバージョンチェックを追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="171e075d3ace45b8a01a77942349b15db0aff7b2" translate="yes" xml:space="preserve">
          <source>Check my solution without JavaScript:</source>
          <target state="translated">JavaScriptを使用せずに私のソリューションを確認してください。</target>
        </trans-unit>
        <trans-unit id="dc514b317014c526645027771d7793257d40adb5" translate="yes" xml:space="preserve">
          <source>Despite it is being implemented in browsers, you can make an illusion of text not being selected by using the same color and background color on selection as of the tab design (in your case).</source>
          <target state="translated">ブラウザに実装されているにもかかわらず、タブデザイン(あなたの場合)と同じ色や背景色を選択時に使用することで、テキストが選択されていないように錯覚させることができます。</target>
        </trans-unit>
        <trans-unit id="cd084d1537593c0f426f44d6a4ee2f21a7c0cc75" translate="yes" xml:space="preserve">
          <source>Disallowing users to select the text will raise usability issues.</source>
          <target state="translated">ユーザーがテキストを選択できないようにすることは、ユーザビリティに問題がある。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="2235d23c68e642e3ca10095748eab3e8ea80e441" translate="yes" xml:space="preserve">
          <source>For Internet Explorer &amp;lt; 10 and &lt;a href=&quot;http://en.wikipedia.org/wiki/Opera_%28web_browser%29&quot;&gt;Opera&lt;/a&gt; &amp;lt; 15, you will need to use the &lt;code&gt;unselectable&lt;/code&gt; attribute of the element you wish to be unselectable. You can set this using an attribute in HTML:</source>
          <target state="translated">Internet Explorer &amp;lt;10および&lt;a href=&quot;http://en.wikipedia.org/wiki/Opera_%28web_browser%29&quot;&gt;Opera&lt;/a&gt; &amp;lt;15の場合、 &lt;code&gt;unselectable&lt;/code&gt; 不可にする要素の選択不可属性を使用する必要があります。 これは、HTMLの属性を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="406019cd32db2e721997f4c436db739ff3a5d0e6" translate="yes" xml:space="preserve">
          <source>For Internet Explorer in addition, you need to add &lt;strong&gt;pseudo class &lt;code&gt;focus&lt;/code&gt;&lt;/strong&gt; (.ClassName:focus) and &lt;code&gt;outline-style: none&lt;/code&gt;.</source>
          <target state="translated">さらにInternet Explorerの場合は、 &lt;strong&gt;疑似クラス &lt;code&gt;focus&lt;/code&gt; &lt;/strong&gt; （.ClassName：focus）と &lt;code&gt;outline-style: none&lt;/code&gt; を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="2140b5647cce4147fd6b5b18f8886deee2cdd2d8" translate="yes" xml:space="preserve">
          <source>For anchors that act like buttons (for example, &lt;em&gt;Questions&lt;/em&gt;, &lt;em&gt;Tags&lt;/em&gt;, &lt;em&gt;Users&lt;/em&gt;, etc. at the top of the Stack&amp;nbsp;Overflow page) or tabs, is there a CSS standard way to disable the highlighting effect if the user accidentally selects the text?</source>
          <target state="translated">ボタン（たとえば、スタックオーバーフローページの上部にある[ &lt;em&gt;質問]&lt;/em&gt; 、[ &lt;em&gt;タグ]&lt;/em&gt; 、[ &lt;em&gt;ユーザー]&lt;/em&gt;など）またはタブのように機能するアンカーの場合、ユーザーが誤ってテキストを選択した場合に強調表示効果を無効にするCSS標準の方法はありますか？</target>
        </trans-unit>
        <trans-unit id="629dea75f12f9a59c29e53a393e6f82259e69f6e" translate="yes" xml:space="preserve">
          <source>For those who have trouble achieving the same in the Android browser with the touch event, use:</source>
          <target state="translated">Androidブラウザでタッチイベントで同じことが実現できない方は、こちらをご利用ください。</target>
        </trans-unit>
        <trans-unit id="07451bd26f6eba903aad2ab8db3f81f1452e633f" translate="yes" xml:space="preserve">
          <source>How to disable text selection highlighting</source>
          <target state="translated">テキスト選択のハイライト表示を無効にする方法</target>
        </trans-unit>
        <trans-unit id="ab7061f8297a0b603be5bf433764cc997ff8dd34" translate="yes" xml:space="preserve">
          <source>I figure you still want any input elements to be interactable, hence the &lt;code&gt;:not()&lt;/code&gt; pseudo-selector. You could use &lt;code&gt;'*'&lt;/code&gt; instead if you don't care.</source>
          <target state="translated">入力要素を操作可能にしたいので、 &lt;code&gt;:not()&lt;/code&gt; 疑似セレクターが必要だと思います。 気にしない場合は、代わりに &lt;code&gt;'*'&lt;/code&gt; 使用できます。</target>
        </trans-unit>
        <trans-unit id="62711a8bebde3fefa39043fe6d5c86b14d58b9fe" translate="yes" xml:space="preserve">
          <source>I found it in a CardFlip example.</source>
          <target state="translated">CardFlipの例で見つけました。</target>
        </trans-unit>
        <trans-unit id="fe4f60e3d9123868e385e741a66ab726e9ccc083" translate="yes" xml:space="preserve">
          <source>I like the hybrid CSS + jQuery solution.</source>
          <target state="translated">CSS+jQueryのハイブリッドソリューションがいいですね。</target>
        </trans-unit>
        <trans-unit id="154bdb4a1ff15997cb926a0d35095a08a2161d31" translate="yes" xml:space="preserve">
          <source>I realize this could be done with JavaScript, and a little googling yielded the Mozilla-only &lt;code&gt;-moz-user-select&lt;/code&gt; option.</source>
          <target state="translated">これはJavaScriptで実行できることを理解 &lt;code&gt;-moz-user-select&lt;/code&gt; ます。少しグーグルするとMozillaのみの-moz-user-selectオプションが生成されました。</target>
        </trans-unit>
        <trans-unit id="9d5182bd5f0e7c392742a8617e72b6e3868f090b" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://en.wikipedia.org/wiki/Less_%28stylesheet_language%29&quot;&gt;Less&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrap_%28front-end_framework%29&quot;&gt;Bootstrap&lt;/a&gt; you could write:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Less_%28stylesheet_language%29&quot;&gt;Less&lt;/a&gt;と&lt;a href=&quot;https://en.wikipedia.org/wiki/Bootstrap_%28front-end_framework%29&quot;&gt;Bootstrap&lt;/a&gt;を使用している場合は、次のように記述できます。</target>
        </trans-unit>
        <trans-unit id="0c8027e5df222fd1c03cbe4895c8806bb72b32c2" translate="yes" xml:space="preserve">
          <source>If you notice, Stack Overflow doesn't disable text selection for their navigation buttons, and I would recommend against doing so in most cases, since it modifies normal selection behavior and makes it conflict with a user's expectations.</source>
          <target state="translated">気づいたかもしれませんが、Stack Overflow はナビゲーションボタンのテキスト選択を無効にしていません。</target>
        </trans-unit>
        <trans-unit id="ff97ffdd55818d8c28e46d1059b265b15ec52ab9" translate="yes" xml:space="preserve">
          <source>If you use the value &lt;code&gt;none&lt;/code&gt; for all the CSS &lt;code&gt;user-select&lt;/code&gt; properties (including browser prefixes of it), there is a problem which can be still occurred by this.</source>
          <target state="translated">すべてのCSS &lt;code&gt;user-select&lt;/code&gt; プロパティ（そのブラウザープレフィックスを含む）に値 &lt;code&gt;none&lt;/code&gt; を使用する場合、これによって引き続き発生する可能性がある問題があります。</target>
        </trans-unit>
        <trans-unit id="842b9a39a95687e16dd9a6ea2e4fd3ddf7e01d5d" translate="yes" xml:space="preserve">
          <source>If you want to disable text selection on everything except on &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements, you can do this in CSS (watch out for the &lt;code&gt;-moz-none&lt;/code&gt; which allows override in sub-elements, which is allowed in other browsers with &lt;code&gt;none&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 要素以外のすべてのテキスト選択を無効にする場合は、CSSでこれを行うことができます（サブ要素のオーバーライドを許可する &lt;code&gt;-moz-none&lt;/code&gt; に注意してください。これにより、他のブラウザーでは &lt;code&gt;none&lt;/code&gt; が許可されます）。</target>
        </trans-unit>
        <trans-unit id="565b7e041ced594a08f92ed1b42e7dd59a313d7c" translate="yes" xml:space="preserve">
          <source>In an HTML tag:</source>
          <target state="translated">HTMLタグの中で</target>
        </trans-unit>
        <trans-unit id="06b6bd4e9a7d458bd2ea5acae303a7c40a31fb8c" translate="yes" xml:space="preserve">
          <source>In most browsers, this can be achieved using proprietary variations on the CSS &lt;code&gt;user-select&lt;/code&gt; property, &lt;a href=&quot;http://www.w3.org/TR/2000/WD-css3-userint-20000216#user-select&quot;&gt;originally proposed and then abandoned in CSS&amp;nbsp;3&lt;/a&gt; and now proposed in &lt;a href=&quot;https://drafts.csswg.org/css-ui-4/#content-selection&quot;&gt;CSS UI Level 4&lt;/a&gt;:</source>
          <target state="translated">ほとんどのブラウザでは、これはCSSの &lt;code&gt;user-select&lt;/code&gt; プロパティの独自のバリエーションを使用して実現できます。これは、 &lt;a href=&quot;http://www.w3.org/TR/2000/WD-css3-userint-20000216#user-select&quot;&gt;当初は提案され、その後CSS 3で放棄され&lt;/a&gt; 、現在は&lt;a href=&quot;https://drafts.csswg.org/css-ui-4/#content-selection&quot;&gt;CSS UI Level 4で&lt;/a&gt;提案されています。</target>
        </trans-unit>
        <trans-unit id="c25ddea0aa4f963fe545bbefcd27d73b5f0358ef" translate="yes" xml:space="preserve">
          <source>In the solutions in previous answers selection is stopped, but the user still thinks you can select text because the cursor still changes. To keep it static, you'll have to set your CSS cursor:</source>
          <target state="translated">以前の回答のソリューションでは、選択は停止されていますが、カーソルがまだ変化しているので、ユーザーはまだテキストを選択できると思っています。静止させるには、CSSのカーソルを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c40bfb4b86381427fc42e511689fb06c0bc5a93" translate="yes" xml:space="preserve">
          <source>Is there a standard-compliant way to accomplish this with CSS, and if not, what is the &quot;best practice&quot; approach?</source>
          <target state="translated">CSSでこれを達成するための標準に準拠した方法はありますか?</target>
        </trans-unit>
        <trans-unit id="f6d3bf0a6d30856347ab198969fdb87289e29f58" translate="yes" xml:space="preserve">
          <source>It is easily done with:</source>
          <target state="translated">で簡単にできます。</target>
        </trans-unit>
        <trans-unit id="2cf8b411b46eee22e8788d61182b2c4cb6e53fbb" translate="yes" xml:space="preserve">
          <source>It's being discussed in &lt;em&gt;&lt;a href=&quot;http://lists.w3.org/Archives/Public/www-style/2008Oct/0268.html&quot;&gt;How ::selection works on nested elements&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;http://lists.w3.org/Archives/Public/www-style/2008Oct/0268.html&quot;&gt;ネストされた要素での::選択の仕組みで説明されています&lt;/a&gt;&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cb4fbb3d7415a392e68456296d74f69ddec5efe" translate="yes" xml:space="preserve">
          <source>It's not the best way, though.</source>
          <target state="translated">ベストな方法ではありませんが。</target>
        </trans-unit>
        <trans-unit id="ce73210a99f40152950974e9ecdabfc508e5da47" translate="yes" xml:space="preserve">
          <source>Let's say you have a &lt;code&gt;&amp;lt;h1 id=&quot;example&quot;&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;&lt;/code&gt;. You will have to remove the innerHTML of that &lt;code&gt;h1&lt;/code&gt;, in this case &lt;strong&gt;Hello, World&lt;/strong&gt;. Then you will have to go to CSS and do this:</source>
          <target state="translated">&lt;code&gt;&amp;lt;h1 id=&quot;example&quot;&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;&lt;/code&gt; ます。 その &lt;code&gt;h1&lt;/code&gt; のinnerHTML（この場合は&lt;strong&gt;Hello、World）&lt;/strong&gt;を削除する必要があります。 次に、CSSに移動してこれを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="afb1a6900535838ec959d1b9bfa8301aa49d93c2" translate="yes" xml:space="preserve">
          <source>More information can be found in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/user-select&quot;&gt;Mozilla Developer Network documentation&lt;/a&gt;.</source>
          <target state="translated">詳細については、 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/user-select&quot;&gt;Mozilla Developer Networkのドキュメントを参照してください&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5cc49ffbec4e70afc0d7035033fe7d4e175d516" translate="yes" xml:space="preserve">
          <source>Normal CSS Design</source>
          <target state="translated">通常のCSSデザイン</target>
        </trans-unit>
        <trans-unit id="affd2c79d972840c77577be0c7907dd164782db8" translate="yes" xml:space="preserve">
          <source>Note that it's a &lt;strong&gt;non-standard feature&lt;/strong&gt; (i.e. not a part of any specification). It is not guaranteed to work everywhere, and there might be differences in implementation among browsers and in the future browsers can drop support for it.</source>
          <target state="translated">これは&lt;strong&gt;非標準の機能です&lt;/strong&gt; （つまり、仕様の一部ではありません）。 すべての場所での動作が保証されているわけではありません。また、ブラウザ間での実装に違いがある可能性があり、将来のブラウザではサポートが終了する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d246124f3d53c4e3f51bc2c97214e8096f03b031" translate="yes" xml:space="preserve">
          <source>Now it simply thinks it is a block-element, and not text.</source>
          <target state="translated">今では単にテキストではなくブロック要素だと思っているだけです。</target>
        </trans-unit>
        <trans-unit id="3d4819c2e4deef929971d30633f9d36ae9fe5718" translate="yes" xml:space="preserve">
          <source>On selection</source>
          <target state="translated">選択時</target>
        </trans-unit>
        <trans-unit id="668bdf5ade35c5f2241eed9de84d0612d9034d25" translate="yes" xml:space="preserve">
          <source>Popup menu with my technique applied: &lt;a href=&quot;http://jsfiddle.net/y4Lac/2/&quot;&gt;http://jsfiddle.net/y4Lac/2/&lt;/a&gt;</source>
          <target state="translated">私のテクニックを適用したポップアップメニュー： &lt;a href=&quot;http://jsfiddle.net/y4Lac/2/&quot;&gt;http&lt;/a&gt; : //jsfiddle.net/y4Lac/2/</target>
        </trans-unit>
        <trans-unit id="218d9880bef122d25f3c4e55fb310235e49e6001" translate="yes" xml:space="preserve">
          <source>Prefix need to be used to support it in all browsers. Without a prefix this may not work in all the answers.</source>
          <target state="translated">すべてのブラウザでサポートするためには、接頭辞を使用する必要があります。プレフィックスがない場合は、すべての回答で動作しない場合があります。</target>
        </trans-unit>
        <trans-unit id="95c1c5ab394530b22832b371a064cb5c559176cc" translate="yes" xml:space="preserve">
          <source>Sadly this property isn't inherited, meaning you have to put an attribute in the start tag of every element inside the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. If this is a problem, you could instead use JavaScript to do this recursively for an element's descendants:</source>
          <target state="translated">残念ながら、このプロパティは継承されません。つまり、 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 内のすべての要素の開始タグに属性を配置する必要があります。 これが問題の場合は、代わりにJavaScriptを使用して、要素の子孫に対してこれを再帰的に行うことができます。</target>
        </trans-unit>
        <trans-unit id="935b906436af0bca253e843ddfc9e555b2d13344" translate="yes" xml:space="preserve">
          <source>Set cursor to default so that it will give a unselectable feel to the user.</source>
          <target state="translated">カーソルをデフォルトに設定して、ユーザーに非選択感を与えるようにします。</target>
        </trans-unit>
        <trans-unit id="9838354c70c155e942070bf6907efd338a39b19b" translate="yes" xml:space="preserve">
          <source>Simply add your desired elements/ids in front of the selectors separated by commas without spaces, like so:</source>
          <target state="translated">セレクタの前に、スペースを入れずにカンマで区切って、必要なelementsidを追加するだけです。</target>
        </trans-unit>
        <trans-unit id="37b2e1c4e13de7608de6daf5a5b83bb8b5cbf565" translate="yes" xml:space="preserve">
          <source>Suppose there are two &lt;code&gt;div&lt;/code&gt;s like this:</source>
          <target state="translated">次のような2つの &lt;code&gt;div&lt;/code&gt; があるとします。</target>
        </trans-unit>
        <trans-unit id="8bde3c5f49f4f6f679f2dd715a2b4b1da5f37dc1" translate="yes" xml:space="preserve">
          <source>Tested on: &lt;a href=&quot;http://en.wikipedia.org/wiki/Ubuntu_%28operating_system%29&quot;&gt;Ubuntu&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Google_Chrome&quot;&gt;Google Chrome&lt;/a&gt; 38.0.2125.111.</source>
          <target state="translated">テスト済み： &lt;a href=&quot;http://en.wikipedia.org/wiki/Ubuntu_%28operating_system%29&quot;&gt;Ubuntu&lt;/a&gt; 、 &lt;a href=&quot;http://en.wikipedia.org/wiki/Google_Chrome&quot;&gt;Google Chrome&lt;/a&gt; 38.0.2125.111。</target>
        </trans-unit>
        <trans-unit id="37cd1bd67192bfded6f08ab65830754630ca2bc6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;JavaScript&lt;/strong&gt; way is supported in &lt;em&gt;older&lt;/em&gt; browsers, like &lt;em&gt;old&lt;/em&gt; versions of Internet&amp;nbsp;Explorer as well, but if it's not your case, use the CSS way then:</source>
          <target state="translated">&lt;strong&gt;JavaScriptの&lt;/strong&gt;方法は、 &lt;em&gt;古い&lt;/em&gt;バージョンのInternet Explorerなどの&lt;em&gt;古い&lt;/em&gt;ブラウザーでもサポートされて&lt;em&gt;い&lt;/em&gt;ますが、そうでない場合は、CSSの方法を使用してください。</target>
        </trans-unit>
        <trans-unit id="34c1272d3e43d90eba8156c119c727053f297c22" translate="yes" xml:space="preserve">
          <source>The correct answer is correct in that it prevents you from being able to select the text. However, it does not prevent you from being able to copy the text, as I'll show with the next couple of screenshots (as of 7th Nov 2014).</source>
          <target state="translated">テキストを選択することができなくなるという点では正解です。しかし、次のスクリーンショット(2014年11月7日現在)でご紹介するように、テキストをコピーすることができなくなるわけではありません。</target>
        </trans-unit>
        <trans-unit id="cca3fd4c644ec8ea2327799f6978d5fd23c467ac" translate="yes" xml:space="preserve">
          <source>The only place I could see this being useful is if you have buttons for forms that should not be copy and pasted if a user copy and pasted the website.</source>
          <target state="translated">私がこれが役に立つと思うのは、ユーザーがウェブサイトをコピー&amp;ペーストした場合にコピー&amp;ペーストしてはいけないフォーム用のボタンがある場合だけです。</target>
        </trans-unit>
        <trans-unit id="97680873c60c907a0e85126425f0382d945b6b8d" translate="yes" xml:space="preserve">
          <source>The other answers are better; this should probably be seen as a last resort/catchall.</source>
          <target state="translated">他の回答の方が良いですが、これはおそらく最後のリゾートキャッチオールと見るべきでしょう。</target>
        </trans-unit>
        <trans-unit id="df30f02220a270b59ae02bd43c71f59eee0f09f3" translate="yes" xml:space="preserve">
          <source>The real question is, why do you want users to not be able to highlight and presumably copy and paste certain elements? I have not come across a single time that I wanted to not let users highlight a certain portion of my website. Several of my friends, after spending many hours reading and writing code will use the highlight feature as a way to remember where on the page they were, or providing a marker so that their eyes know where to look next.</source>
          <target state="translated">本当の疑問は、なぜユーザーが特定の要素をハイライトしてコピー&amp;ペーストできないようにしたいのかということです。私は、ユーザーに私のウェブサイトの特定の部分をハイライトしないようにしたいと思ったことは一度もありません。私の友人の何人かは、何時間もコードを読んだり書いたりした後に、ページのどこにいたかを覚えていたり、目が次にどこを見たらいいかを知るためのマーカーとしてハイライト機能を使用しています。</target>
        </trans-unit>
        <trans-unit id="b99cd91efcf3e93aa670a89dc1b9cab95f67ed07" translate="yes" xml:space="preserve">
          <source>There is no &quot;standards&quot; compliant quick-and-easy way to do it; using JavaScript is an option.</source>
          <target state="translated">標準」に準拠した簡単で迅速な方法はありません。</target>
        </trans-unit>
        <trans-unit id="95079d8efcb4030b769eb836a15819f3ba173a79" translate="yes" xml:space="preserve">
          <source>This is not CSS, but it is worth a mention:</source>
          <target state="translated">これはCSSではありませんが、特筆すべき点があります。</target>
        </trans-unit>
        <trans-unit id="62ce59708c4773f36431daf767cd38fb71cb354e" translate="yes" xml:space="preserve">
          <source>This of course is not supported in browsers that do not use the Gecko rendering engine.</source>
          <target state="translated">もちろん、Gecko レンダリングエンジンを使用していないブラウザではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="bfafc0f6917fdf56e2c45356ae03542fcd454ec8" translate="yes" xml:space="preserve">
          <source>This should work, but it won't work for the old browsers. There is a browser compatibility issue.</source>
          <target state="translated">これで動くはずなのですが、古いブラウザでは動作しません。ブラウザの互換性の問題があります。</target>
        </trans-unit>
        <trans-unit id="85b0e144ed352e40d16f4870968a743df5524a62" translate="yes" xml:space="preserve">
          <source>This still doesn't cover all possibilities. While it is impossible to initiate selections in unselectable elements, in some browsers (Internet&amp;nbsp;Explorer and Firefox, for example) it's still impossible to prevent selections that start before and end after the unselectable element without making the whole document unselectable.</source>
          <target state="translated">これはまだすべての可能性をカバーしていません。 選択不可能な要素で選択を開始することは不可能ですが、一部のブラウザー（Internet ExplorerやFirefoxなど）では、ドキュメント全体を選択不可にせずに、選択不可能な要素の前後で開始する選択を防ぐことは依然として不可能です。</target>
        </trans-unit>
        <trans-unit id="c6090c92cd03718e1a77176383e95c985cb2d83e" translate="yes" xml:space="preserve">
          <source>This will be useful if color selection is also not needed:</source>
          <target state="translated">色の選択も不要な場合に便利です。</target>
        </trans-unit>
        <trans-unit id="33aeddb7f93e21adc3aefa2c73141176e0d5c6cb" translate="yes" xml:space="preserve">
          <source>This will make your text totally flat, like it would be in a desktop application.</source>
          <target state="translated">これにより、デスクトップアプリケーションのように、テキストを完全にフラットにすることができます。</target>
        </trans-unit>
        <trans-unit id="1501097f5908088eaf231554326344d34e03aa4d" translate="yes" xml:space="preserve">
          <source>This works in &lt;em&gt;some&lt;/em&gt; browsers:</source>
          <target state="translated">これは&lt;em&gt;一部の&lt;/em&gt;ブラウザーで機能します。</target>
        </trans-unit>
        <trans-unit id="a7720c4757ec8163ba1b339593199264d5b55293" translate="yes" xml:space="preserve">
          <source>Though this pseudo-element was in drafts of CSS Selectors Level 3, it was removed during the Candidate Recommendation phase, as it appeared that its behavior was under-specified, especially with nested elements, and interoperability wasn't achieved.</source>
          <target state="translated">この疑似要素はCSS Selectors Level 3の草稿にあったが、特にネストされた要素での挙動が不明確であり、相互運用性が達成されていないと思われたため、Candidate Recommendationの段階で削除された。</target>
        </trans-unit>
        <trans-unit id="778a04b1db81b93917357cfd273e829f074bf70c" translate="yes" xml:space="preserve">
          <source>To get the result I needed, I found I had to use both &lt;strong&gt;&lt;code&gt;::selection&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;user-select&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">必要な結果を得るには、 &lt;strong&gt; &lt;code&gt;::selection&lt;/code&gt; &lt;/strong&gt;と&lt;strong&gt; &lt;code&gt;user-select&lt;/code&gt; の&lt;/strong&gt;両方を使用する必要があることがわかりました</target>
        </trans-unit>
        <trans-unit id="6c76e250a7ebbd7e499dfb0213501ae9de3c5199" translate="yes" xml:space="preserve">
          <source>To make all elements inside &lt;code&gt;&amp;lt;div class=&quot;draggable&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; unselectable, use this CSS:</source>
          <target state="translated">&lt;code&gt;&amp;lt;div class=&quot;draggable&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; 内のすべての要素を選択不可にするには、次のCSSを使用します。</target>
        </trans-unit>
        <trans-unit id="72d11c8df7de8c4688d5d7bfa525572178d988fd" translate="yes" xml:space="preserve">
          <source>Try to insert these rows into the CSS and call the &quot;disHighlight&quot; at class property:</source>
          <target state="translated">これらの行をCSSに挿入して、クラスプロパティで「disHighlight」を呼び出してみてください。</target>
        </trans-unit>
        <trans-unit id="dcbba936a0e1eef8b48a00e488f9851d6ab86433" translate="yes" xml:space="preserve">
          <source>Until CSS 3's &lt;a href=&quot;http://www.w3.org/TR/1999/WD-css3-userint-19990916#user-select&quot;&gt;user-select&lt;/a&gt; property becomes available, &lt;a href=&quot;http://en.wikipedia.org/wiki/Gecko_%28layout_engine%29&quot;&gt;Gecko&lt;/a&gt;-based browsers support the &lt;code&gt;-moz-user-select&lt;/code&gt; property you already found. &lt;a href=&quot;https://en.wikipedia.org/wiki/WebKit&quot;&gt;WebKit&lt;/a&gt; and Blink-based browsers support the &lt;code&gt;-webkit-user-select&lt;/code&gt; property.</source>
          <target state="translated">CSS 3の&lt;a href=&quot;http://www.w3.org/TR/1999/WD-css3-userint-19990916#user-select&quot;&gt;user-select&lt;/a&gt;プロパティが利用可能になるまで、 &lt;a href=&quot;http://en.wikipedia.org/wiki/Gecko_%28layout_engine%29&quot;&gt;Gecko&lt;/a&gt;ベースのブラウザーはすでに見つけた &lt;code&gt;-moz-user-select&lt;/code&gt; プロパティをサポートします。 &lt;a href=&quot;https://en.wikipedia.org/wiki/WebKit&quot;&gt;WebKit&lt;/a&gt;およびBlinkベースのブラウザーは、 &lt;code&gt;-webkit-user-select&lt;/code&gt; プロパティをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ea71d0078a20c91f8af50cbe47c38ed3cf5d53c2" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://sass-lang.com/&quot;&gt;SASS&lt;/a&gt; (SCSS syntax)</source>
          <target state="translated">&lt;a href=&quot;https://sass-lang.com/&quot;&gt;SASS&lt;/a&gt; （SCSS構文）</target>
        </trans-unit>
        <trans-unit id="0e03f858b363006a26f85d2cb542c7bf3f325a33" translate="yes" xml:space="preserve">
          <source>Workaround for &lt;a href=&quot;http://en.wikipedia.org/wiki/WebKit&quot;&gt;WebKit&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/WebKit&quot;&gt;WebKitの&lt;/a&gt;回避策：</target>
        </trans-unit>
        <trans-unit id="4083122996233d5c2a19fb31ffd552ca7e81f977" translate="yes" xml:space="preserve">
          <source>You can also use the below one to &lt;code&gt;enforce&lt;/code&gt; that an entire element gets selected which means if you click on an element, all the text wrapped in that element will get selected. For this all you have to do is changing the value &lt;code&gt;none&lt;/code&gt; to &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">以下のものを使用 &lt;code&gt;enforce&lt;/code&gt; て、要素全体が選択されるように強制することもできます。つまり、要素をクリックすると、その要素にラップされているすべてのテキストが選択されます。 このために必要なのは、値 &lt;code&gt;none&lt;/code&gt; を &lt;code&gt;all&lt;/code&gt; に変更することだけです。</target>
        </trans-unit>
        <trans-unit id="d65c374bc6bde1ee398ad2767acc0fe125babd66" translate="yes" xml:space="preserve">
          <source>You can do so in Firefox and Safari (Chrome also?)</source>
          <target state="translated">FirefoxやSafari(Chromeも?</target>
        </trans-unit>
        <trans-unit id="27979dc253312d749dadc76bd88090d90ef843c7" translate="yes" xml:space="preserve">
          <source>You can do this with a &lt;a href=&quot;https://sass-lang.com/documentation/at-rules/mixin&quot;&gt;mixin&lt;/a&gt;:</source>
          <target state="translated">あなたは&lt;a href=&quot;https://sass-lang.com/documentation/at-rules/mixin&quot;&gt;ミックスインで&lt;/a&gt;これを行うことができます：</target>
        </trans-unit>
        <trans-unit id="25dc28e2d4cb5f989515c9a28e35cc1658792cdc" translate="yes" xml:space="preserve">
          <source>You can use &lt;strong&gt;CSS&lt;/strong&gt; or &lt;strong&gt;JavaScript&lt;/strong&gt; for that.</source>
          <target state="translated">そのために&lt;strong&gt;CSS&lt;/strong&gt;または&lt;strong&gt;JavaScript&lt;/strong&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="de873d4bf1ac12c3470094c9888a2e0eda22977a" translate="yes" xml:space="preserve">
          <source>jsFiddle</source>
          <target state="translated">jsFiddle</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
