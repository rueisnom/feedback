<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/82831">
    <body>
      <group id="82831">
        <trans-unit id="c57a62c684c9ba50ef4276461ac8271cc4409e22" translate="yes" xml:space="preserve">
          <source>(&lt;strong&gt;&lt;em&gt;Win&lt;/em&gt;&lt;/strong&gt; specific): Since &lt;em&gt;vcruntime*&lt;/em&gt; (&lt;em&gt;msvcr*&lt;/em&gt;) &lt;em&gt;.dll&lt;/em&gt; exports a &lt;a href=&quot;https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/access-waccess?view=vs-2015&quot;&gt;[MS.Docs]: _access, _waccess&lt;/a&gt; function family as well, here's an example:</source>
          <target state="translated">( &lt;strong&gt;&lt;em&gt;Win&lt;/em&gt;&lt;/strong&gt; espec&amp;iacute;fico): dado que &lt;em&gt;vcruntime *&lt;/em&gt; ( &lt;em&gt;msvcr *&lt;/em&gt; ) &lt;em&gt;.dll&lt;/em&gt; exporta una &lt;a href=&quot;https://docs.microsoft.com/en-us/cpp/c-runtime-library/reference/access-waccess?view=vs-2015&quot;&gt;[MS.Docs]: _access, _waccess&lt;/a&gt; function family tambi&amp;eacute;n, aqu&amp;iacute; hay un ejemplo:</target>
        </trans-unit>
        <trans-unit id="40424e2404c07b5e06b147f732d917ab30140356" translate="yes" xml:space="preserve">
          <source>([Errno 2] No such file or directory:
  'whatever.txt')</source>
          <target state="translated">([Errno 2]No existe tal archivo o directorio:'lo que sea.txt')</target>
        </trans-unit>
        <trans-unit id="47357201492ecc28a3c7f77186ebaf58446769e4" translate="yes" xml:space="preserve">
          <source>...test if the invoking user has the specified access to &lt;em&gt;path&lt;/em&gt;. &lt;em&gt;mode&lt;/em&gt; should be &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.F_OK&quot;&gt;F_OK&lt;/a&gt; to test the existence of path...</source>
          <target state="translated">... prueba si el usuario que invoca tiene el acceso especificado a la &lt;em&gt;ruta&lt;/em&gt; . &lt;em&gt;el modo&lt;/em&gt; debe ser &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.F_OK&quot;&gt;F_OK&lt;/a&gt; para probar la existencia de ruta ...</target>
        </trans-unit>
        <trans-unit id="787fad3e2ffee45a57341c551ccca124f8b07869" translate="yes" xml:space="preserve">
          <source>1.1. &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_file&quot;&gt;[Python 3]: Path.&lt;strong&gt;is_file&lt;/strong&gt;()&lt;/a&gt;</source>
          <target state="translated">1.1. &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_file&quot;&gt;[Python 3]: Camino.&lt;/a&gt; &lt;strong&gt;is_file&lt;/strong&gt; ()</target>
        </trans-unit>
        <trans-unit id="84da2f4e22fc9c7b904c3bcfae38c0e0ce23d934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/glob.html#glob.iglob&quot;&gt;[Python 3]: glob.&lt;strong&gt;iglob&lt;/strong&gt;(&lt;em&gt;pathname, *, recursive=False&lt;/em&gt;)&lt;/a&gt; (or its predecessor: &lt;code&gt;glob.glob&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/glob.html#glob.iglob&quot;&gt;[Python 3]: glob.&lt;/a&gt; &lt;strong&gt;iglob&lt;/strong&gt; ( &lt;em&gt;pathname, *, recursive = False&lt;/em&gt; ) (o su predecesor: &lt;code&gt;glob.glob&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a32d328d73882905860fd2807cd7c44ceaaa3322" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/os.html#os.access&quot;&gt;[Python 3]: os.&lt;strong&gt;access&lt;/strong&gt;(&lt;em&gt;path, mode, *, dir_fd=None, effective_ids=False, follow_symlinks=True&lt;/em&gt;)&lt;/a&gt; whose behavior is close to &lt;code&gt;os.path.exists&lt;/code&gt; (actually it's wider, mainly because of the 2&lt;sup&gt;nd&lt;/sup&gt; argument)</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/os.html#os.access&quot;&gt;[Python 3]: os.&lt;/a&gt; &lt;strong&gt;acceso&lt;/strong&gt; ( &lt;em&gt;ruta, modo, *, dir_fd = Ninguno, eficaz_id = Falso, follow_symlinks = Verdadero&lt;/em&gt; ) cuyo comportamiento es cercano a &lt;code&gt;os.path.exists&lt;/code&gt; (en realidad es m&amp;aacute;s amplio, principalmente debido al segundo argumento)</target>
        </trans-unit>
        <trans-unit id="4156cef8783a6c3af93cebc9154ef17488855064" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/os.html#os.listdir&quot;&gt;[Python 3]: os.&lt;strong&gt;listdir&lt;/strong&gt;(&lt;em&gt;path='.'&lt;/em&gt;)&lt;/a&gt; (or &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.scandir&quot;&gt;[Python 3]: os.&lt;strong&gt;scandir&lt;/strong&gt;(&lt;em&gt;path='.'&lt;/em&gt;)&lt;/a&gt; on &lt;em&gt;Python v&lt;strong&gt;3.5&lt;/strong&gt;&lt;/em&gt;+, backport: &lt;a href=&quot;https://pypi.org/project/scandir&quot;&gt;[PyPI]: scandir&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/os.html#os.listdir&quot;&gt;[Python 3]: os.&lt;/a&gt; &lt;strong&gt;listdir&lt;/strong&gt; ( &lt;em&gt;ruta = '.'&lt;/em&gt; ) (o &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.scandir&quot;&gt;[Python 3]: os. &lt;strong&gt;scandir&lt;/strong&gt; ( &lt;em&gt;ruta = '.'&lt;/em&gt; )&lt;/a&gt; en &lt;em&gt;Python v &lt;strong&gt;3.5&lt;/strong&gt;&lt;/em&gt; +, backport: &lt;a href=&quot;https://pypi.org/project/scandir&quot;&gt;[PyPI]: scandir&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="881c94c992f5c2704f7aea54c69305fd8520f3b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/os.path.html#os.path.exists&quot;&gt;[Python 3]: os.path.&lt;strong&gt;exists&lt;/strong&gt;(&lt;em&gt;path&lt;/em&gt;)&lt;/a&gt; (also check other function family members like &lt;code&gt;os.path.isfile&lt;/code&gt;, &lt;code&gt;os.path.isdir&lt;/code&gt;, &lt;code&gt;os.path.lexists&lt;/code&gt; for slightly different behaviors)</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/library/os.path.html#os.path.exists&quot;&gt;[Python 3]: os.path.&lt;/a&gt; &lt;strong&gt;existe&lt;/strong&gt; ( &lt;em&gt;ruta&lt;/em&gt; ) (tambi&amp;eacute;n verifique otros miembros de la familia de funciones como &lt;code&gt;os.path.isfile&lt;/code&gt; , &lt;code&gt;os.path.isdir&lt;/code&gt; , &lt;code&gt;os.path.lexists&lt;/code&gt; para comportamientos ligeramente diferentes)</target>
        </trans-unit>
        <trans-unit id="16a9582fc6e61500a615bb32272726f039a6dea9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#context-managers&quot;&gt;[Python 3]: With Statement Context Managers&lt;/a&gt;. Either:</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3/reference/datamodel.html#context-managers&quot;&gt;[Python 3]: con gestores de contexto de declaraci&amp;oacute;n&lt;/a&gt; . Ya sea:</target>
        </trans-unit>
        <trans-unit id="e7facdf0dc4a8e14a1a54deddc2ccf73d6d27185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isfile&lt;/code&gt; is actually just a helper method that internally uses &lt;code&gt;os.stat&lt;/code&gt; and &lt;code&gt;stat.S_ISREG(mode)&lt;/code&gt; underneath. This &lt;code&gt;os.stat&lt;/code&gt; is a lower-level method that will provide you with detailed information about files, directories, sockets, buffers, and more. &lt;a href=&quot;https://docs.python.org/2/library/os.html#os.stat&quot;&gt;More about os.stat here&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;isfile&lt;/code&gt; es en realidad solo un m&amp;eacute;todo auxiliar que usa internamente &lt;code&gt;os.stat&lt;/code&gt; y &lt;code&gt;stat.S_ISREG(mode)&lt;/code&gt; debajo. Este &lt;code&gt;os.stat&lt;/code&gt; es un m&amp;eacute;todo de nivel inferior que le proporcionar&amp;aacute; informaci&amp;oacute;n detallada sobre archivos, directorios, sockets, buffers y m&amp;aacute;s. &lt;a href=&quot;https://docs.python.org/2/library/os.html#os.stat&quot;&gt;M&amp;aacute;s acerca de os.stat aqu&amp;iacute;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56f16f3fd911d49aaf5aa425fc05be5bcc4d128b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os.path&lt;/code&gt; - &lt;em&gt;posixpath.py&lt;/em&gt; (&lt;em&gt;ntpath.py&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;os.path&lt;/code&gt; - &lt;em&gt;posixpath.py&lt;/em&gt; ( &lt;em&gt;ntpath.py&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="c213153b48aa1adfe737e87d17e184e0df446764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suppress&lt;/code&gt; is part of Python 3.4. In older releases you can quickly write your own suppress:</source>
          <target state="translated">&lt;code&gt;suppress&lt;/code&gt; es parte de Python 3.4. En versiones anteriores, puede escribir r&amp;aacute;pidamente su propia supresi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="7341feac8a06399cdfbd59912dc1807dd4972e4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Nix&lt;/em&gt; (&lt;em&gt;Lnx&lt;/em&gt; (&lt;em&gt;Ubtu&lt;/em&gt;)):</source>
          <target state="translated">&lt;em&gt;Nix&lt;/em&gt; ( &lt;em&gt;Lnx&lt;/em&gt; ( &lt;em&gt;Ubtu&lt;/em&gt; )):</target>
        </trans-unit>
        <trans-unit id="bcc27befb6f3b8f2dfa82be82a68582f296622aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Nix&lt;/em&gt;: &lt;a href=&quot;http://man7.org/linux/man-pages/man2/access.2.html&quot;&gt;[man7]: ACCESS(2)&lt;/a&gt; (!!! pay attention to the note about the &lt;strong&gt;security hole&lt;/strong&gt; its usage might introduce !!!)</source>
          <target state="translated">&lt;em&gt;Nix&lt;/em&gt; : &lt;a href=&quot;http://man7.org/linux/man-pages/man2/access.2.html&quot;&gt;[man7]: ACCESS (2)&lt;/a&gt; (&amp;iexcl;&amp;iexcl;&amp;iexcl;presta atenci&amp;oacute;n a la nota sobre el &lt;strong&gt;agujero de seguridad que&lt;/strong&gt; su uso podr&amp;iacute;a introducir !!!)</target>
        </trans-unit>
        <trans-unit id="a16adeeb8960035b0fa48ff747e9036d84b7fac1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Nix&lt;/em&gt;: &lt;a href=&quot;http://man7.org/linux/man-pages/man3/opendir.3.html&quot;&gt;[man7]: OPENDIR(3)&lt;/a&gt; / &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;[man7]: READDIR(3)&lt;/a&gt; / &lt;a href=&quot;http://man7.org/linux/man-pages/man3/closedir.3.html&quot;&gt;[man7]: CLOSEDIR(3)&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;Nix&lt;/em&gt; : &lt;a href=&quot;http://man7.org/linux/man-pages/man3/opendir.3.html&quot;&gt;[man7]: OPENDIR (3)&lt;/a&gt; / &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;[man7]: READDIR (3)&lt;/a&gt; / &lt;a href=&quot;http://man7.org/linux/man-pages/man3/closedir.3.html&quot;&gt;[man7]: CERRADO (3)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e3e7e3a1bf52b57f359fffd279b3063aa9c1eab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Win&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;Win&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="672cf7faded202b7034a24292acbf961c1694c7b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Win&lt;/em&gt;: &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/fileapi/nf-fileapi-findfirstfilew&quot;&gt;[MS.Docs]: FindFirstFileW function&lt;/a&gt; / &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/fileapi/nf-fileapi-findnextfilew&quot;&gt;[MS.Docs]: FindNextFileW function&lt;/a&gt; / &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/fileapi/nf-fileapi-findclose&quot;&gt;[MS.Docs]: FindClose function&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;Win&lt;/em&gt; : &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/fileapi/nf-fileapi-findfirstfilew&quot;&gt;[MS.Docs]: funci&amp;oacute;n FindFirstFileW&lt;/a&gt; / &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/fileapi/nf-fileapi-findnextfilew&quot;&gt;[MS.Docs]: funci&amp;oacute;n&lt;/a&gt; &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/fileapi/nf-fileapi-findclose&quot;&gt;FindNextFileW&lt;/a&gt; / [MS.Docs]: funci&amp;oacute;n FindClose</target>
        </trans-unit>
        <trans-unit id="918e9fb58193867f89f5a410d74811d1771b2724" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Win&lt;/em&gt;: &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/fileapi/nf-fileapi-getfileattributesw&quot;&gt;[MS.Docs]: GetFileAttributesW function&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;Win&lt;/em&gt; : &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/fileapi/nf-fileapi-getfileattributesw&quot;&gt;[MS.Docs]: funci&amp;oacute;n GetFileAttributesW&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d6ed7dbc3e0f962103d4c625797662e29aa9184" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;genericpath.py&lt;/em&gt;, line &lt;em&gt;~#20+&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;genericpath.py&lt;/em&gt; , l&amp;iacute;nea &lt;em&gt;~ # 20 +&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="423d8236f9dc3da510581f0ee3fbcd477ede396d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bottom line&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;L&amp;iacute;nea inferior&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="2b621694fd99fa555aa2279458b5f4cee2e246ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;else&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;finally&lt;/em&gt;&lt;/strong&gt; blocks, because they can prevent you running into a series of nasty problems. A counter-example that I can think of, is performance: such blocks are costly, so try not to place them in code that it's supposed to run hundreds of thousands times per second (but since (in most cases) it involves disk access, it won't be the case).</source>
          <target state="translated">Utilice los bloques &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;else&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;finally&lt;/em&gt;&lt;/strong&gt; , ya que pueden evitar que se encuentre con una serie de problemas desagradables. Un contraejemplo en el que puedo pensar es el rendimiento: tales bloques son costosos, as&amp;iacute; que trate de no colocarlos en el c&amp;oacute;digo que se supone que debe ejecutarse cientos de miles de veces por segundo (pero dado que (en la mayor&amp;iacute;a de los casos) implica acceso al disco, No ser&amp;aacute; el caso).</target>
        </trans-unit>
        <trans-unit id="114c46c58943d0d3fb01ce5a2dbc7e5146a8eddf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Final note(s)&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Nota (s) final (es)&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="4ae1be26b6f0138302a179e64d43a2067887f700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How do I check whether a file exists, without using the try statement?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iquest;C&amp;oacute;mo verifico si existe un archivo, sin usar la instrucci&amp;oacute;n try?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d629d8e59823d5bde2e04f68edf40981e144ca70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; However, this approach will not lock the file in any way and therefore your code can become vulnerable to &quot;&lt;strong&gt;time of check to time of use&lt;/strong&gt;&quot; (&lt;em&gt;TOCTTOU&lt;/em&gt;) bugs.</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; Sin embargo, este enfoque no bloquear&amp;aacute; el archivo de ninguna manera y, por lo tanto, su c&amp;oacute;digo puede volverse vulnerable a errores de &quot; &lt;strong&gt;tiempo de verificaci&amp;oacute;n a tiempo de uso&lt;/strong&gt; &quot; ( &lt;em&gt;TOCTTOU&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="55fac486326161bbbcc381844be9edd879071502" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: calling native &lt;em&gt;API&lt;/em&gt;s is also possible via &lt;a href=&quot;https://docs.python.org/3/library/ctypes.html#module-ctypes&quot;&gt;[Python 3]: &lt;em&gt;ctypes&lt;/em&gt; - A foreign function library for Python&lt;/a&gt;, but in most cases it's more complicated.</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : tambi&amp;eacute;n es posible llamar a las &lt;em&gt;API&lt;/em&gt; nativas a trav&amp;eacute;s de &lt;a href=&quot;https://docs.python.org/3/library/ctypes.html#module-ctypes&quot;&gt;[Python 3]: &lt;em&gt;ctypes&lt;/em&gt; : una biblioteca de funciones for&amp;aacute;neas para Python&lt;/a&gt; , pero en la mayor&amp;iacute;a de los casos es m&amp;aacute;s complicada.</target>
        </trans-unit>
        <trans-unit id="49d34f653b3f7b18395aa530bbca320ea65fe2bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: every piece of &lt;em&gt;Python&lt;/em&gt; standard library code that I'm going to post, belongs to version &lt;strong&gt;3.5.3&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Nota&lt;/strong&gt; : cada parte del c&amp;oacute;digo de la biblioteca est&amp;aacute;ndar de &lt;em&gt;Python&lt;/em&gt; que voy a publicar pertenece a la versi&amp;oacute;n &lt;strong&gt;3.5.3&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f69af187844f3307c7ac46ebb6a50af4199d0748" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Notes&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="0429ce3fc368572fdbb918ae180fcce64fed32ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible solutions&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Posibles soluciones&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="5fed05e805aed79ae5e47afbe0cb8a973df01183" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Problem statement&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Declaraci&amp;oacute;n del problema&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="06e40dece35eaf987428ae55c6db9c12f565c3c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Python 3.4+&lt;/strong&gt; has an object-oriented path module: &lt;a href=&quot;http://docs.python.org/3.4/library/pathlib.html&quot;&gt;&lt;strong&gt;pathlib&lt;/strong&gt;&lt;/a&gt;.  Using this new module, you can check whether a file exists like this:</source>
          <target state="translated">&lt;strong&gt;Python 3.4+&lt;/strong&gt; tiene un m&amp;oacute;dulo de ruta orientado a objetos: &lt;a href=&quot;http://docs.python.org/3.4/library/pathlib.html&quot;&gt;&lt;strong&gt;pathlib&lt;/strong&gt;&lt;/a&gt; . Con este nuevo m&amp;oacute;dulo, puede verificar si existe un archivo como este:</target>
        </trans-unit>
        <trans-unit id="0a648cd0606cca5d79438d4f156e8c36af2fbb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UPDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;UPDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e849d6a4eb1c3b48df71118000704a6892341f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;isfile&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;isfile&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ccfc4989519ffe46e24bb53066a5a14a735987c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;os.access&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;os.access&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cbfe01e7936d0de4ea51c3c0558f1bb48b1f30e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;user permissions&lt;/strong&gt; might restrict the file &quot;visibility&quot; as the doc states:</source>
          <target state="translated">&lt;strong&gt;los permisos de usuario&lt;/strong&gt; pueden restringir la &quot;visibilidad&quot; del archivo como dice el documento:</target>
        </trans-unit>
        <trans-unit id="aa65b1dac98f13533fe2f70426ca413eff63c4b0" translate="yes" xml:space="preserve">
          <source>Adding a variant based on suggestion from Peter Wood</source>
          <target state="translated">Añadiendo una variante basada en la sugerencia de Peter Wood</target>
        </trans-unit>
        <trans-unit id="80c015f2d056c575939357b34c73484f4d21f408" translate="yes" xml:space="preserve">
          <source>Adding a variant based on suggestion from Shahbaz</source>
          <target state="translated">Añadiendo una variante basada en la sugerencia de Shahbaz</target>
        </trans-unit>
        <trans-unit id="8dcd1e3788c9558ded09b3960d94517b78c07f15" translate="yes" xml:space="preserve">
          <source>Adding one more slight variation which isn't exactly reflected in the other answers.</source>
          <target state="translated">Añadiendo una ligera variación más que no se refleja exactamente en las otras respuestas.</target>
        </trans-unit>
        <trans-unit id="d8fa576e19bc4318ac6a981c7b91c8f2cbbb0f5c" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;os.access()&lt;/code&gt;:</source>
          <target state="translated">Adem&amp;aacute;s, &lt;code&gt;os.access()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="77d1962860d37265160d4636c2fd603e0de75d36" translate="yes" xml:space="preserve">
          <source>All good, but if following the import tree:</source>
          <target state="translated">Todo bien,pero si se sigue el árbol de importación:</target>
        </trans-unit>
        <trans-unit id="78f3ec46f0be71b55c60a634c5c232244a44c6d0" translate="yes" xml:space="preserve">
          <source>All it's doing is using the given path to see if it can get stats on it,  catching &lt;code&gt;OSError&lt;/code&gt; and then checking if it's a file if it didn't raise the exception.</source>
          <target state="translated">Todo lo que est&amp;aacute; haciendo es usar la ruta dada para ver si puede obtener estad&amp;iacute;sticas, capturar &lt;code&gt;OSError&lt;/code&gt; y luego verificar si es un archivo si no gener&amp;oacute; la excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9b23ce4faf3bf6e817d02cdbe090fd916f4c40e3" translate="yes" xml:space="preserve">
          <source>Although I always recommend using &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; statements, here are a few possibilities for you (my personal favourite is using &lt;code&gt;os.access&lt;/code&gt;):</source>
          <target state="translated">Aunque siempre recomiendo usar las declaraciones &lt;code&gt;try&lt;/code&gt; y &lt;code&gt;except&lt;/code&gt; , aqu&amp;iacute; hay algunas posibilidades para usted (mi favorito personal es usar &lt;code&gt;os.access&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="c28a1b9efeed16f3cc15a65fe06dbf2005ac95c5" translate="yes" xml:space="preserve">
          <source>Although almost every possible way has been listed in (at least one of) the existing answers (e.g. &lt;em&gt;Python 3.4&lt;/em&gt; specific stuff was added), I'll try to group everything together.</source>
          <target state="translated">Aunque casi todas las formas posibles se han enumerado en (al menos una de) las respuestas existentes (por ejemplo, se agregaron cosas espec&amp;iacute;ficas de &lt;em&gt;Python 3.4&lt;/em&gt; ), intentar&amp;eacute; agrupar todo.</target>
        </trans-unit>
        <trans-unit id="16295a749dac9ed45033fdbc3aac9a2b96843f1d" translate="yes" xml:space="preserve">
          <source>Although it's not a good practice, I'm using &lt;code&gt;os.F_OK&lt;/code&gt; in the call, but that's just for clarity (its value is &lt;strong&gt;0&lt;/strong&gt;)</source>
          <target state="translated">Aunque no es una buena pr&amp;aacute;ctica, estoy usando &lt;code&gt;os.F_OK&lt;/code&gt; en la llamada, pero eso es solo por claridad (su valor es &lt;strong&gt;0&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="3f08a8328b4d7fdf72d3c29093a5ec904d34940a" translate="yes" xml:space="preserve">
          <source>Although this targets a very specific area, &lt;strong&gt;it was not mentioned in any of the previous answers&lt;/strong&gt;</source>
          <target state="translated">Aunque esto se dirige a un &amp;aacute;rea muy espec&amp;iacute;fica, &lt;strong&gt;no se mencion&amp;oacute; en ninguna de las respuestas anteriores&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="78f96d0ac535b29f25a666e1fd59d59ef2274f92" translate="yes" xml:space="preserve">
          <source>An intuitive and arguable way to check if a file exists is the following:</source>
          <target state="translated">Una forma intuitiva y discutible de comprobar si un archivo existe es la siguiente:</target>
        </trans-unit>
        <trans-unit id="5e11bbf35099c5b98a84a5e51e2b22a25ec14116" translate="yes" xml:space="preserve">
          <source>And its usage - I'll replicate the &lt;code&gt;os.path.isfile&lt;/code&gt; behavior (note that this is just for demonstrating purposes, do &lt;strong&gt;not&lt;/strong&gt; attempt to write such code for &lt;em&gt;production&lt;/em&gt;):</source>
          <target state="translated">Y su uso: replicar&amp;eacute; el comportamiento del &lt;code&gt;os.path.isfile&lt;/code&gt; (tenga en cuenta que esto es solo para fines de demostraci&amp;oacute;n, &lt;strong&gt;no&lt;/strong&gt; intente escribir dicho c&amp;oacute;digo para la &lt;em&gt;producci&amp;oacute;n&lt;/em&gt; ):</target>
        </trans-unit>
        <trans-unit id="c242f95ca1e5451cdad6a7e633a8bef0a286e761" translate="yes" xml:space="preserve">
          <source>And the doc&amp;hellip;</source>
          <target state="translated">Y el doctor ...</target>
        </trans-unit>
        <trans-unit id="a2e22103d7193a6b3e153c897e9be19320669858" translate="yes" xml:space="preserve">
          <source>Another (lame) workaround (&lt;em&gt;gainarie&lt;/em&gt;) is (as I like to call it,) the &lt;em&gt;sysadmin&lt;/em&gt; approach: use &lt;em&gt;Python&lt;/em&gt; as a wrapper to execute shell commands</source>
          <target state="translated">Otra soluci&amp;oacute;n (poco &lt;em&gt;convincente&lt;/em&gt; ) ( &lt;em&gt;gainarie&lt;/em&gt; ) es (como me gusta llamarlo) el enfoque &lt;em&gt;sysadmin&lt;/em&gt; : use &lt;em&gt;Python&lt;/em&gt; como envoltorio para ejecutar comandos de shell</target>
        </trans-unit>
        <trans-unit id="9fe49da0dcd83e20fd5dd80ebdfbe1ed9a2c2eae" translate="yes" xml:space="preserve">
          <source>Another answer says this about &lt;code&gt;os.access&lt;/code&gt;:</source>
          <target state="translated">Otra respuesta dice esto sobre &lt;code&gt;os.access&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dd57f8a5f3007d7bb9aa43a930b678df495e7817" translate="yes" xml:space="preserve">
          <source>Anyway, here:</source>
          <target state="translated">De todos modos,aquí:</target>
        </trans-unit>
        <trans-unit id="9a06af54a07db4e5735e851faae4a0df7e12350c" translate="yes" xml:space="preserve">
          <source>Assuming that the &quot;path&quot; is a valid path, this table shows what is returned by each function for files and folders:</source>
          <target state="translated">Asumiendo que el &quot;camino&quot; es un camino válido,esta tabla muestra lo que devuelve cada función para los archivos y carpetas:</target>
        </trans-unit>
        <trans-unit id="4aa4567b6cd6712a2f7dedeecffb310d4fb8efca" translate="yes" xml:space="preserve">
          <source>Available for Unix and Windows is &lt;code&gt;os.access&lt;/code&gt;, but to use you must pass flags, and it does not differentiate between files and directories. This is more used to test if the real invoking user has access in an elevated privilege environment:</source>
          <target state="translated">Disponible para Unix y Windows es &lt;code&gt;os.access&lt;/code&gt; , pero para usarlo debe pasar banderas, y no diferencia entre archivos y directorios. Esto se usa m&amp;aacute;s para probar si el usuario real que invoca tiene acceso en un entorno de privilegios elevados:</target>
        </trans-unit>
        <trans-unit id="f939845f218e32c170faf5bf6f1cac2c41d8816a" translate="yes" xml:space="preserve">
          <source>Available since Python 3.4, use the new &lt;code&gt;Path&lt;/code&gt; object in &lt;code&gt;pathlib&lt;/code&gt;. Note that &lt;code&gt;.exists&lt;/code&gt; is not quite right, because directories are not files (except in the unix sense that &lt;em&gt;everything&lt;/em&gt; is a file).</source>
          <target state="translated">Disponible desde Python 3.4, use el nuevo objeto &lt;code&gt;Path&lt;/code&gt; en &lt;code&gt;pathlib&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;.exists&lt;/code&gt; no es del todo correcto, porque los directorios no son archivos (excepto en el sentido de Unix de que &lt;em&gt;todo&lt;/em&gt; es un archivo).</target>
        </trans-unit>
        <trans-unit id="afb7ff96e854e0041ec75564f5fe00e9c8f882e0" translate="yes" xml:space="preserve">
          <source>Avoid using &lt;code&gt;os.access&lt;/code&gt;. It is a low level function that has more opportunities for user error than the higher level objects and functions discussed above.</source>
          <target state="translated">Evite usar &lt;code&gt;os.access&lt;/code&gt; . Es una funci&amp;oacute;n de bajo nivel que tiene m&amp;aacute;s oportunidades para el error del usuario que los objetos y funciones de nivel superior discutidos anteriormente.</target>
        </trans-unit>
        <trans-unit id="da6dd21459c0ea82eef4c904638259335de797c6" translate="yes" xml:space="preserve">
          <source>Avoiding Race Conditions</source>
          <target state="translated">Evitar las condiciones de la raza</target>
        </trans-unit>
        <trans-unit id="65d799a4d67e40f1718bc28bc5741a7784d3dc98" translate="yes" xml:space="preserve">
          <source>Avoiding race conditions without a try statement: &lt;code&gt;suppress&lt;/code&gt;</source>
          <target state="translated">Evitar condiciones de carrera sin una declaraci&amp;oacute;n de prueba: &lt;code&gt;suppress&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16914c6434145a06ea234b60fc7371e4a7fa25c2" translate="yes" xml:space="preserve">
          <source>Because Python uses &lt;code&gt;try&lt;/code&gt; everywhere, there's really no reason to avoid an implementation that uses it.</source>
          <target state="translated">Debido a que Python usa &lt;code&gt;try&lt;/code&gt; en todas partes, realmente no hay raz&amp;oacute;n para evitar una implementaci&amp;oacute;n que lo use.</target>
        </trans-unit>
        <trans-unit id="1360085308b5fa42bcc299eba73a082684f6297d" translate="yes" xml:space="preserve">
          <source>Being &lt;code&gt;R_OK&lt;/code&gt;, &lt;code&gt;W_OK&lt;/code&gt;, and &lt;code&gt;X_OK&lt;/code&gt; the flags to test for permissions (&lt;a href=&quot;https://docs.python.org/3/library/os.html#os.access&quot;&gt;doc&lt;/a&gt;).</source>
          <target state="translated">Siendo &lt;code&gt;R_OK&lt;/code&gt; , &lt;code&gt;W_OK&lt;/code&gt; y &lt;code&gt;X_OK&lt;/code&gt; las banderas para probar los permisos ( &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.access&quot;&gt;doc&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b5ce4b99d290844609883481eafaef7da7bec38b" translate="yes" xml:space="preserve">
          <source>But if this is your motivation, you &lt;em&gt;can&lt;/em&gt; get the value of a &lt;code&gt;try&lt;/code&gt; statement by using the &lt;code&gt;suppress&lt;/code&gt; context manager.</source>
          <target state="translated">Pero si esta es su motivaci&amp;oacute;n, &lt;em&gt;puede&lt;/em&gt; obtener el valor de una declaraci&amp;oacute;n de &lt;code&gt;try&lt;/code&gt; utilizando el administrador de contexto de &lt;code&gt;suppress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f386f26a018b39932ce810bfed8462f4b3a47009" translate="yes" xml:space="preserve">
          <source>But if you examine the &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Lib/genericpath.py#l25&quot;&gt;source&lt;/a&gt; of this function, you'll see it actually does use a try statement:</source>
          <target state="translated">Pero si examina el &lt;a href=&quot;https://hg.python.org/cpython/file/tip/Lib/genericpath.py#l25&quot;&gt;origen&lt;/a&gt; de esta funci&amp;oacute;n, ver&amp;aacute; que en realidad usa una instrucci&amp;oacute;n try:</target>
        </trans-unit>
        <trans-unit id="892805ad4977b8e4cbbb93d3b769716f4bf55e28" translate="yes" xml:space="preserve">
          <source>But if you just wanted to rename a file if it exists, and therefore don't need to open it, do</source>
          <target state="translated">Pero si sólo quieres renombrar un archivo si existe,y por lo tanto no necesitas abrirlo,hazlo</target>
        </trans-unit>
        <trans-unit id="e6de42189ae24dbf3535041c097ece060e47ed05" translate="yes" xml:space="preserve">
          <source>But the rest of this answer attempts to consider these caveats.</source>
          <target state="translated">Pero el resto de esta respuesta intenta considerar estas advertencias.</target>
        </trans-unit>
        <trans-unit id="a80baeb2d0654bc11cd6d4521f34ce4502d6e633" translate="yes" xml:space="preserve">
          <source>But, since this is more like a workaround, I'm stopping here.</source>
          <target state="translated">Pero,como esto es más bien una solución alternativa,me detendré aquí.</target>
        </trans-unit>
        <trans-unit id="a4baa59ded747be901cc0484a5e9a9c22477fa86" translate="yes" xml:space="preserve">
          <source>But, they seem to be wrappers over &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;else&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;finally&lt;/em&gt;&lt;/strong&gt; blocks, as &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#with&quot;&gt;[Python 3]: The &lt;em&gt;with&lt;/em&gt; statement&lt;/a&gt; states:</source>
          <target state="translated">Pero, parecen ser envoltorios sobre bloques &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;else&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;finally&lt;/em&gt;&lt;/strong&gt; , como &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#with&quot;&gt;[Python 3]: La declaraci&amp;oacute;n &lt;em&gt;with&lt;/em&gt;&lt;/a&gt; dice:</target>
        </trans-unit>
        <trans-unit id="3f1992230a0a514077c62160f7120bcc185acd4c" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;NamedTemporaryFile&lt;/code&gt; deletes the file when closed (and will automatically close when no more references exist to it).</source>
          <target state="translated">De forma predeterminada, &lt;code&gt;NamedTemporaryFile&lt;/code&gt; elimina el archivo cuando se cierra (y se cerrar&amp;aacute; autom&amp;aacute;ticamente cuando no existan m&amp;aacute;s referencias).</target>
        </trans-unit>
        <trans-unit id="680c3a0a04488efb0a6669d23ed46dff42487746" translate="yes" xml:space="preserve">
          <source>Check file (&lt;em&gt;arguable&lt;/em&gt;: also folder (&quot;special&quot; file) ?) existence</source>
          <target state="translated">Comprobar existencia de archivo ( &lt;em&gt;discutible&lt;/em&gt; : tambi&amp;eacute;n carpeta (archivo &quot;especial&quot;))</target>
        </trans-unit>
        <trans-unit id="00069321f9bac6a3e2758c45a988eb1af4ffe84c" translate="yes" xml:space="preserve">
          <source>Check file or directory exists</source>
          <target state="translated">Comprobar que el archivo o directorio existe</target>
        </trans-unit>
        <trans-unit id="2148c4248cab3850cba5ecc20309317f0af37946" translate="yes" xml:space="preserve">
          <source>Create one:</source>
          <target state="translated">Crea uno:</target>
        </trans-unit>
        <trans-unit id="23c1fa17d5809322d5e9a7c843e9604caa61cdff" translate="yes" xml:space="preserve">
          <source>Criticism of another answer:</source>
          <target state="translated">Crítica de otra respuesta:</target>
        </trans-unit>
        <trans-unit id="3b40241a5f2c37e0887dd4f6954b744ced57b1ec" translate="yes" xml:space="preserve">
          <source>Date:2017-12-04</source>
          <target state="translated">Date:2017-12-04</target>
        </trans-unit>
        <trans-unit id="87444639b77f489e7dc7f1684a2c815d05e6b641" translate="yes" xml:space="preserve">
          <source>Doesn't seem a traversing function &lt;em&gt;per se&lt;/em&gt; (at least in some cases), but it still uses &lt;code&gt;os.listdir&lt;/code&gt;</source>
          <target state="translated">No parece una funci&amp;oacute;n de desplazamiento &lt;em&gt;per se&lt;/em&gt; (al menos en algunos casos), pero a&amp;uacute;n usa &lt;code&gt;os.listdir&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d521195617328a431dabe6deacc4cc8e93939de" translate="yes" xml:space="preserve">
          <source>Don't take my word for it. There's plenty of support for this theory. Here's a couple:</source>
          <target state="translated">No me creas.Hay mucho apoyo para esta teoría.Aquí hay un par:</target>
        </trans-unit>
        <trans-unit id="2df06b2d468838548ea913f49b8c7912e8ab2b96" translate="yes" xml:space="preserve">
          <source>Don't use &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;else&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;finally&lt;/em&gt;&lt;/strong&gt; blocks</source>
          <target state="translated">No use los bloques &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;else&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;finally&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9461aa6e4a1d297ac2448ad2f40004dd46970c5" translate="yes" xml:space="preserve">
          <source>Every possible solution has been listed in other answers.</source>
          <target state="translated">Cada posible solución se ha enumerado en otras respuestas.</target>
        </trans-unit>
        <trans-unit id="57f676484ad86c6f592e0200b1bc9abf4d27bc4a" translate="yes" xml:space="preserve">
          <source>Filesystem traversal functions (and search the results for matching item(s))</source>
          <target state="translated">Funciones de desplazamiento del sistema de archivos (y búsqueda de los resultados de los elementos coincidentes)</target>
        </trans-unit>
        <trans-unit id="2482b1dfd54ac893308e090998a270fa3acccec9" translate="yes" xml:space="preserve">
          <source>For earlier Pythons, you could roll your own &lt;code&gt;suppress&lt;/code&gt;, but without a &lt;code&gt;try&lt;/code&gt; will be more verbose than with. I do believe &lt;strong&gt;this actually is the only answer that doesn't use &lt;code&gt;try&lt;/code&gt; at any level in the Python&lt;/strong&gt; that can be applied to prior to Python 3.4 because it uses a context manager instead:</source>
          <target state="translated">Para Pythons anteriores, podr&amp;iacute;a lanzar su propia &lt;code&gt;suppress&lt;/code&gt; , pero sin un &lt;code&gt;try&lt;/code&gt; ser&amp;aacute; m&amp;aacute;s detallado que con. Creo que &lt;strong&gt;esta es la &amp;uacute;nica respuesta que no utiliza &lt;code&gt;try&lt;/code&gt; en ning&amp;uacute;n nivel en Python&lt;/strong&gt; que se pueda aplicar antes de Python 3.4 porque en su lugar utiliza un administrador de contexto:</target>
        </trans-unit>
        <trans-unit id="55f79bf0ba7b0375b8d3143950e1a90ab89796a4" translate="yes" xml:space="preserve">
          <source>For reference also see &lt;a href=&quot;/q/82831&quot;&gt;How to check whether a file exists using Python?&lt;/a&gt;</source>
          <target state="translated">Para referencia tambi&amp;eacute;n vea &lt;a href=&quot;/q/82831&quot;&gt;&amp;iquest;C&amp;oacute;mo verificar si un archivo existe usando Python?&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bdeff00f3ab0a5de85d46268cc456e660f0891f" translate="yes" xml:space="preserve">
          <source>Here's a 1 line Python command for the Linux command line environment. I find this VERY HANDY since I'm not such a hot Bash guy.</source>
          <target state="translated">Aquí hay un comando Python de una línea para el entorno de línea de comandos de Linux.Lo encuentro MUY MANUAL,ya que no soy un tipo tan sexy de Bash.</target>
        </trans-unit>
        <trans-unit id="4f2f59aeca936afd9d057519d9ef3eac5bef7ca4" translate="yes" xml:space="preserve">
          <source>Here's the help on &lt;code&gt;is_file&lt;/code&gt;:</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; la ayuda sobre &lt;code&gt;is_file&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d3e0db2911db163b18bf0441aa9f4ab60ce06986" translate="yes" xml:space="preserve">
          <source>How do I check whether a file exists without exceptions</source>
          <target state="translated">¿Cómo puedo comprobar si un archivo existe sin excepciones</target>
        </trans-unit>
        <trans-unit id="f992ff3c06028274def0fdd00a52220dd457b417" translate="yes" xml:space="preserve">
          <source>How do I check whether a file exists, using Python, without using a try statement?</source>
          <target state="translated">¿Cómo puedo comprobar si un archivo existe,usando Python,sin usar una declaración de prueba?</target>
        </trans-unit>
        <trans-unit id="648dcb140e5c8625e8fd1d8412c1ff5f81de87f0" translate="yes" xml:space="preserve">
          <source>How do I see if a file exists or not, without using the &lt;a href=&quot;https://docs.python.org/3.6/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statement?</source>
          <target state="translated">&amp;iquest;C&amp;oacute;mo puedo ver si un archivo existe o no, sin usar la instrucci&amp;oacute;n &lt;a href=&quot;https://docs.python.org/3.6/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt; ?</target>
        </trans-unit>
        <trans-unit id="4da044c22cb2fb15a1b87e329d865c130b7299e8" translate="yes" xml:space="preserve">
          <source>I hope this is helpful.</source>
          <target state="translated">Espero que esto sea de ayuda.</target>
        </trans-unit>
        <trans-unit id="ebe65250133ece313707187f5563d38f23a6029b" translate="yes" xml:space="preserve">
          <source>I made an exhaustive cheatsheet for your reference:</source>
          <target state="translated">Hice una exhaustiva hoja de trucos para tu referencia:</target>
        </trans-unit>
        <trans-unit id="c092b3bf26fda474ba2f972972deba214b2de89d" translate="yes" xml:space="preserve">
          <source>I should also mention that there are two ways that you will not be able to verify the existence of a file. Either the issue will be &lt;code&gt;permission denied&lt;/code&gt; or &lt;code&gt;no such file or directory&lt;/code&gt;. If you catch an &lt;code&gt;IOError&lt;/code&gt;, set the &lt;code&gt;IOError as e&lt;/code&gt; (like my first option), and then type in &lt;code&gt;print(e.args)&lt;/code&gt; so that you can hopefully determine your issue. I hope it helps! :)</source>
          <target state="translated">Tambi&amp;eacute;n debo mencionar que hay dos formas en que no podr&amp;aacute; verificar la existencia de un archivo. O bien, el problema ser&amp;aacute; &lt;code&gt;permission denied&lt;/code&gt; o &lt;code&gt;no such file or directory&lt;/code&gt; . Si &lt;code&gt;IOError&lt;/code&gt; un IOError , establezca el &lt;code&gt;IOError as e&lt;/code&gt; (como mi primera opci&amp;oacute;n), y luego escriba &lt;code&gt;print(e.args)&lt;/code&gt; para que pueda determinar su problema. &amp;iexcl;Espero que ayude! :)</target>
        </trans-unit>
        <trans-unit id="6bdb8ff9e404da03bb952ad7abebcc20b1ca5fbc" translate="yes" xml:space="preserve">
          <source>I will try to keep it up to date, any suggestions are welcome, I will incorporate anything useful that will come up into the answer</source>
          <target state="translated">Trataré de mantenerlo actualizado,cualquier sugerencia es bienvenida,incorporaré cualquier cosa útil que surja en la respuesta</target>
        </trans-unit>
        <trans-unit id="71420b82d8fcd7fd47b4cff0728dfbb46cae47de" translate="yes" xml:space="preserve">
          <source>I'm the author of a package that's been around for about 10 years, and it has a function that addresses this question directly. Basically, if you are on a non-Windows system, it uses &lt;code&gt;Popen&lt;/code&gt; to access &lt;code&gt;find&lt;/code&gt;.  However, if you are on Windows, it replicates &lt;code&gt;find&lt;/code&gt; with an efficient filesystem walker.</source>
          <target state="translated">Soy el autor de un paquete que ha existido durante aproximadamente 10 a&amp;ntilde;os, y tiene una funci&amp;oacute;n que aborda esta pregunta directamente. B&amp;aacute;sicamente, si est&amp;aacute; en un sistema que no es Windows, utiliza &lt;code&gt;Popen&lt;/code&gt; para acceder a &lt;code&gt;find&lt;/code&gt; . Sin embargo, si est&amp;aacute; en Windows, replica &lt;code&gt;find&lt;/code&gt; con un eficiente caminante de sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="8ca967716a632903489f4722e9137f4292d1cec8" translate="yes" xml:space="preserve">
          <source>I'm using &lt;em&gt;_waccess&lt;/em&gt; so that the same code works on &lt;em&gt;Python3&lt;/em&gt; and &lt;em&gt;Python2&lt;/em&gt; (in spite of &lt;em&gt;unicode&lt;/em&gt; related differences between them)</source>
          <target state="translated">Estoy usando &lt;em&gt;_waccess&lt;/em&gt; para que el mismo c&amp;oacute;digo funcione en &lt;em&gt;Python3&lt;/em&gt; y &lt;em&gt;Python2&lt;/em&gt; (a pesar de &lt;em&gt;las&lt;/em&gt; diferencias relacionadas con &lt;em&gt;Unicode&lt;/em&gt; entre ellos)</target>
        </trans-unit>
        <trans-unit id="a407e3adfd2214b7c586432d022e9ef118ddf7e0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filename&lt;/em&gt; is NULL, then the returned handle is for the main
  program.  When given to &lt;strong&gt;dlsym&lt;/strong&gt;(), this handle causes a search for a
  symbol in the main program, followed by all shared objects loaded at
  program startup, and then all shared objects loaded by &lt;strong&gt;dlopen&lt;/strong&gt;() with
  the flag &lt;strong&gt;RTLD_GLOBAL&lt;/strong&gt;.</source>
          <target state="translated">Si el &lt;em&gt;nombre de archivo&lt;/em&gt; es NULL, el identificador devuelto es para el programa principal. Cuando se le da a &lt;strong&gt;dlsym&lt;/strong&gt; (), este identificador provoca una b&amp;uacute;squeda de un s&amp;iacute;mbolo en el programa principal, seguido de todos los objetos compartidos cargados al inicio del programa, y ​​luego todos los objetos compartidos cargados por &lt;strong&gt;dlopen&lt;/strong&gt; () con el indicador &lt;strong&gt;RTLD_GLOBAL&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="15fcbc3b264cbebf2eb4f1760bc8e1cba58236dd" translate="yes" xml:space="preserve">
          <source>If it's False, it will stop execution with an unhanded IOError
or OSError in later versions of Python. To catch the exception,
you have to use a try except clause. Of course, you can always
use a &lt;code&gt;try&lt;/code&gt; except` statement like so (thanks to &lt;a href=&quot;https://stackoverflow.com/users/3256073/hsandt&quot;&gt;hsandt&lt;/a&gt;
for making me think):</source>
          <target state="translated">Si es False, detendr&amp;aacute; la ejecuci&amp;oacute;n con un IOError u OSError no administrado en versiones posteriores de Python. Para atrapar la excepci&amp;oacute;n, debe utilizar una cl&amp;aacute;usula try excepto. Por supuesto, siempre puedes usar una declaraci&amp;oacute;n &lt;code&gt;try&lt;/code&gt; excepto` as&amp;iacute; (gracias a &lt;a href=&quot;https://stackoverflow.com/users/3256073/hsandt&quot;&gt;hsandt&lt;/a&gt; por hacerme pensar):</target>
        </trans-unit>
        <trans-unit id="c02184bc81acba7ff60734fa0276f4694047dce3" translate="yes" xml:space="preserve">
          <source>If the file is for opening you could use one of the following techniques:</source>
          <target state="translated">Si el archivo es para abrirlo,podría utilizar una de las siguientes técnicas:</target>
        </trans-unit>
        <trans-unit id="f750d04a74a28d801ca980107d812cb534028797" translate="yes" xml:space="preserve">
          <source>If the reason you're checking is so you can do something like &lt;code&gt;if file_exists: open_it()&lt;/code&gt;, it's safer to use a &lt;code&gt;try&lt;/code&gt; around the attempt to open it. Checking and then opening risks the file being deleted or moved or something between when you check and when you try to open it.</source>
          <target state="translated">Si la raz&amp;oacute;n por la que est&amp;aacute; verificando es para que pueda hacer algo como &lt;code&gt;if file_exists: open_it()&lt;/code&gt; , es m&amp;aacute;s seguro usar un intento para intentar abrirlo. Verificar y luego abrir se arriesga a que el archivo se elimine o se mueva o algo entre el momento en que verifica y cuando intenta abrirlo.</target>
        </trans-unit>
        <trans-unit id="c5ff89b09fe8a6eb3f1fbb9c6d4f376565e0fe86" translate="yes" xml:space="preserve">
          <source>If you dig into &lt;a href=&quot;https://github.com/python/cpython/blob/master/Lib/pathlib.py#L1318&quot;&gt;the implementation&lt;/a&gt;, though, you'll see that &lt;code&gt;is_file&lt;/code&gt; uses &lt;code&gt;try&lt;/code&gt;:</source>
          <target state="translated">Sin embargo, si profundiza en &lt;a href=&quot;https://github.com/python/cpython/blob/master/Lib/pathlib.py#L1318&quot;&gt;la implementaci&amp;oacute;n&lt;/a&gt; , ver&amp;aacute; que &lt;code&gt;is_file&lt;/code&gt; usa &lt;code&gt;try&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0979e6df66fd1282fbd01cd0616f8c975b44e156" translate="yes" xml:space="preserve">
          <source>If you imported NumPy already for other purposes then there is no need to import other libraries like &lt;code&gt;pathlib&lt;/code&gt;, &lt;code&gt;os&lt;/code&gt;, &lt;code&gt;paths&lt;/code&gt;, etc.</source>
          <target state="translated">Si ya import&amp;oacute; NumPy para otros fines, no es necesario importar otras bibliotecas como &lt;code&gt;pathlib&lt;/code&gt; , &lt;code&gt;os&lt;/code&gt; , &lt;code&gt;paths&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="3505fa4d971cfab39c9f20bc4b27451fc35e3489" translate="yes" xml:space="preserve">
          <source>If you intend to do something with the file, I would suggest directly attempting it with a try-except to avoid a race condition:</source>
          <target state="translated">Si tiene intención de hacer algo con el archivo,le sugiero que lo intente directamente con una excepción para evitar una condición de carrera:</target>
        </trans-unit>
        <trans-unit id="7dcf6a221c7d9f7451561a984e8aab1ebed8336f" translate="yes" xml:space="preserve">
          <source>If you need file locking, that's a different matter.</source>
          <target state="translated">Si necesitas un bloqueo de archivos,eso es otra cosa.</target>
        </trans-unit>
        <trans-unit id="08c9a05009658ae490c6ba1c13b8004939cdcd0a" translate="yes" xml:space="preserve">
          <source>If you need high-level operations, use &lt;code&gt;shutil&lt;/code&gt;.</source>
          <target state="translated">Si necesita operaciones de alto nivel, use &lt;code&gt;shutil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56e17f5c3eb030308d334ae00733d23533b31d78" translate="yes" xml:space="preserve">
          <source>If you want to check that a file exists before you attempt to read it, and you might be deleting it and then you might be using multiple threads or processes, or another program knows about that file and could delete it - you risk the chance of a &lt;strong&gt;race condition&lt;/strong&gt; if you check it exists, because you are then &lt;em&gt;racing&lt;/em&gt; to open it before its &lt;em&gt;condition&lt;/em&gt; (its existence) changes.</source>
          <target state="translated">Si desea verificar que exista un archivo antes de intentar leerlo, y podr&amp;iacute;a estar borr&amp;aacute;ndolo y luego podr&amp;iacute;a estar usando m&amp;uacute;ltiples hilos o procesos, u otro programa conoce ese archivo y podr&amp;iacute;a eliminarlo; corre el riesgo de la posibilidad de una &lt;strong&gt;condici&amp;oacute;n de carrera&lt;/strong&gt; si verifica que existe, porque entonces est&amp;aacute; &lt;em&gt;corriendo&lt;/em&gt; para abrirla antes de que cambie su &lt;em&gt;condici&amp;oacute;n&lt;/em&gt; (su existencia).</target>
        </trans-unit>
        <trans-unit id="b38cd90e47b8c32bc320b1b6ef26a7b9609fff52" translate="yes" xml:space="preserve">
          <source>If you want to read a file, if it exists, do</source>
          <target state="translated">Si quieres leer un archivo,si existe,hazlo.</target>
        </trans-unit>
        <trans-unit id="43244157b51e40292add122e42936b5161218cbf" translate="yes" xml:space="preserve">
          <source>If you want to write to a file, if it doesn't exist, do</source>
          <target state="translated">Si quieres escribir en un archivo,si no existe,hazlo...</target>
        </trans-unit>
        <trans-unit id="f4f1b207aadf8f5d760de13167e89765ef728de9" translate="yes" xml:space="preserve">
          <source>If you're not planning to open the file immediately, you can use &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.isfile&quot;&gt;&lt;code&gt;os.path.isfile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Si no planea abrir el archivo de inmediato, puede usar &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.isfile&quot;&gt; &lt;code&gt;os.path.isfile&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6070d8aef9d3e642476beafdb4d34a0fbf6fd11a" translate="yes" xml:space="preserve">
          <source>If you're on Python 2, you can backport the pathlib module from pypi, &lt;a href=&quot;https://pypi.python.org/pypi/pathlib2/&quot;&gt;&lt;code&gt;pathlib2&lt;/code&gt;&lt;/a&gt;, or otherwise check &lt;code&gt;isfile&lt;/code&gt; from the &lt;code&gt;os.path&lt;/code&gt; module:</source>
          <target state="translated">Si est&amp;aacute; en Python 2, puede hacer una copia de seguridad del m&amp;oacute;dulo pathlib desde pypi, &lt;a href=&quot;https://pypi.python.org/pypi/pathlib2/&quot;&gt; &lt;code&gt;pathlib2&lt;/code&gt; &lt;/a&gt; o, de lo contrario, verificar &lt;code&gt;isfile&lt;/code&gt; desde el m&amp;oacute;dulo &lt;code&gt;os.path&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="304faa8fa6b0b859ff9cf1ffd4acaeb92c2f66b7" translate="yes" xml:space="preserve">
          <source>Importing &lt;code&gt;os&lt;/code&gt; makes it easier to navigate and perform standard actions with your operating system.</source>
          <target state="translated">Importar sistema operativo hace que sea m&amp;aacute;s f&amp;aacute;cil navegar y realizar acciones est&amp;aacute;ndar con su sistema operativo.</target>
        </trans-unit>
        <trans-unit id="6aeb39684e6a8d6e753f97adb8f35968468f0629" translate="yes" xml:space="preserve">
          <source>In 2016 the best way is still using &lt;code&gt;os.path.isfile&lt;/code&gt;:</source>
          <target state="translated">En 2016, la mejor manera es seguir usando &lt;code&gt;os.path.isfile&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="63858bed5a51687e64275119d3dc78c8c0d5f146" translate="yes" xml:space="preserve">
          <source>In 2016, this is still arguably the easiest way to check if both a file exists and if it is a file:</source>
          <target state="translated">En 2016,esta sigue siendo la forma más fácil de comprobar si existe un archivo y si es un archivo:</target>
        </trans-unit>
        <trans-unit id="53b8bae049e83f783d679add94d8c62730294a02" translate="yes" xml:space="preserve">
          <source>Install some third-party module with filesystem capabilities</source>
          <target state="translated">Instalar algún módulo de terceros con capacidades de sistema de archivos</target>
        </trans-unit>
        <trans-unit id="249f0dbd1b80d813ef272a820bd4e6ec0094f9c9" translate="yes" xml:space="preserve">
          <source>Instead hardcoding &lt;em&gt;libc&lt;/em&gt;'s path (&lt;em&gt;&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;&lt;/em&gt;) which may (and most likely, will) vary across systems, &lt;em&gt;None&lt;/em&gt; (or the empty string) can be passed to &lt;em&gt;CDLL&lt;/em&gt; constructor (&lt;strong&gt;&lt;code&gt;ctypes.CDLL(None).access(b&quot;/tmp&quot;, os.F_OK)&lt;/code&gt;&lt;/strong&gt;). According to &lt;a href=&quot;http://man7.org/linux/man-pages/man3/dlopen.3.html&quot;&gt;[man7]: DLOPEN(3)&lt;/a&gt;:</source>
          <target state="translated">En lugar de codificar la ruta de &lt;em&gt;libc&lt;/em&gt; ( &lt;em&gt;&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;&lt;/em&gt; ) que puede (y muy probablemente variar&amp;aacute;) entre sistemas, &lt;em&gt;Ninguno&lt;/em&gt; (o la cadena vac&amp;iacute;a) se puede pasar al constructor &lt;em&gt;CDLL&lt;/em&gt; ( &lt;strong&gt; &lt;code&gt;ctypes.CDLL(None).access(b&quot;/tmp&quot;, os.F_OK)&lt;/code&gt; &lt;/strong&gt; ). De acuerdo con &lt;a href=&quot;http://man7.org/linux/man-pages/man3/dlopen.3.html&quot;&gt;[man7]: DLOPEN (3)&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c2456e210fee146ed3f8241baa370ef4e417d398" translate="yes" xml:space="preserve">
          <source>It also creates a context manager which, by unconditionally returning &lt;code&gt;True&lt;/code&gt;, allows all Exceptions (including &lt;code&gt;KeyboardInterrupt&lt;/code&gt; and &lt;code&gt;SystemExit&lt;/code&gt;!) to pass silently, which is a good way to hide bugs.</source>
          <target state="translated">Tambi&amp;eacute;n crea un administrador de contexto que, al devolver incondicionalmente &lt;code&gt;True&lt;/code&gt; , permite que todas las Excepciones (&amp;iexcl;incluyendo &lt;code&gt;KeyboardInterrupt&lt;/code&gt; y &lt;code&gt;SystemExit&lt;/code&gt; !) Pasen en silencio, lo cual es una buena manera de ocultar errores.</target>
        </trans-unit>
        <trans-unit id="a8cd152693547cd306546c2c837671d8d018ed7f" translate="yes" xml:space="preserve">
          <source>It also suffers from the same race condition problems as &lt;code&gt;isfile&lt;/code&gt;. From the &lt;a href=&quot;https://docs.python.org/2/library/os.html#os.access&quot;&gt;docs&lt;/a&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n sufre los mismos problemas de condici&amp;oacute;n de carrera que el &lt;code&gt;isfile&lt;/code&gt; . De los &lt;a href=&quot;https://docs.python.org/2/library/os.html#os.access&quot;&gt;documentos&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4202a54228e33a8c91a54fe4ae0d3e882755b1c7" translate="yes" xml:space="preserve">
          <source>It doesn't seem like there's a meaningful functional difference between try/except and &lt;code&gt;isfile()&lt;/code&gt;, so you should use which one makes sense.</source>
          <target state="translated">No parece que haya una diferencia funcional significativa entre try / except y &lt;code&gt;isfile()&lt;/code&gt; , por lo que debe usar cu&amp;aacute;l tiene sentido.</target>
        </trans-unit>
        <trans-unit id="dbc241143077ad988ba650982a25300f8fb789d3" translate="yes" xml:space="preserve">
          <source>It uses &lt;code&gt;os.listdir&lt;/code&gt; (&lt;code&gt;os.scandir&lt;/code&gt; when available)</source>
          <target state="translated">Utiliza &lt;code&gt;os.listdir&lt;/code&gt; ( &lt;code&gt;os.scandir&lt;/code&gt; cuando est&amp;aacute; disponible)</target>
        </trans-unit>
        <trans-unit id="327665da0521fd7ce34669658e33594ae8ff6a15" translate="yes" xml:space="preserve">
          <source>It's a fancier (and more &lt;em&gt;python&lt;/em&gt;ic) way of handling paths, &lt;strong&gt;but&lt;/strong&gt;</source>
          <target state="translated">Es una forma m&amp;aacute;s elegante (y m&amp;aacute;s &lt;em&gt;python&lt;/em&gt; ic) de manejar rutas, &lt;strong&gt;pero&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0874e622984b8d8ed8d0111ced638b33c324993" translate="yes" xml:space="preserve">
          <source>Just to avoid confusion and based on the answers I got, current answer finds either a file &lt;strong&gt;or&lt;/strong&gt; a directory with the given name.</source>
          <target state="translated">Solo para evitar confusiones y seg&amp;uacute;n las respuestas que obtuve, la respuesta actual encuentra un archivo &lt;strong&gt;o&lt;/strong&gt; un directorio con el nombre.</target>
        </trans-unit>
        <trans-unit id="59f32559476324f232ad65e7d3e5c4edde71e7e4" translate="yes" xml:space="preserve">
          <source>Longer, much more pedantic answer</source>
          <target state="translated">Una respuesta más larga y mucho más pedante</target>
        </trans-unit>
        <trans-unit id="342aaecc367b1d3941e496dfa36d36af27e2812d" translate="yes" xml:space="preserve">
          <source>Main (current) program (&lt;em&gt;python&lt;/em&gt;) is linked against &lt;em&gt;libc&lt;/em&gt;, so its symbols (including &lt;em&gt;access&lt;/em&gt;) will be loaded</source>
          <target state="translated">El programa principal (actual) ( &lt;em&gt;python&lt;/em&gt; ) est&amp;aacute; vinculado contra &lt;em&gt;libc&lt;/em&gt; , por lo que se cargar&amp;aacute;n sus s&amp;iacute;mbolos (incluido el &lt;em&gt;acceso&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="4d15ee1ab2448fa179b92a1924e831dd8f0f9a47" translate="yes" xml:space="preserve">
          <source>Most likely, will rely on one of the ways above (maybe with slight customizations).</source>
          <target state="translated">Lo más probable es que dependa de una de las formas anteriores (tal vez con ligeras personalizaciones).</target>
        </trans-unit>
        <trans-unit id="782942b5ea6c6ad77e95b9f86f2fa9c57b44eb41" translate="yes" xml:space="preserve">
          <source>Note1: The &lt;code&gt;os.path.isfile&lt;/code&gt; used only for files</source>
          <target state="translated">Nota 1: el archivo &lt;code&gt;os.path.isfile&lt;/code&gt; utilizado solo para archivos</target>
        </trans-unit>
        <trans-unit id="f4abfb7bebf2ffae4214d6fb5b83a497213ebf77" translate="yes" xml:space="preserve">
          <source>Note2: The &lt;code&gt;os.path.exists&lt;/code&gt; used for both files and directories</source>
          <target state="translated">Nota 2: el &lt;code&gt;os.path.exists&lt;/code&gt; utilizado para archivos y directorios</target>
        </trans-unit>
        <trans-unit id="c451b4b43107e20a1f539e1f362df3e8d96f9cf5" translate="yes" xml:space="preserve">
          <source>Note:
  Using access() to check if a user is authorized to e.g. open a file
  before actually doing so using open() creates a security hole, because
  the user might exploit the short time interval between checking and
  opening the file to manipulate it. It&amp;rsquo;s preferable to use EAFP
  techniques. For example:</source>
          <target state="translated">Nota: El uso de access () para verificar si un usuario est&amp;aacute; autorizado para, por ejemplo, abrir un archivo antes de hacerlo usando open () crea un agujero de seguridad, porque el usuario podr&amp;iacute;a explotar el breve intervalo de tiempo entre verificar y abrir el archivo para manipularlo. Es preferible utilizar t&amp;eacute;cnicas EAFP. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="fed557bf7ca2300dfe5a352020d76469a9ceb724" translate="yes" xml:space="preserve">
          <source>Now available since Python 3.4, import and instantiate a &lt;code&gt;Path&lt;/code&gt; object with the file name, and check the &lt;code&gt;is_file&lt;/code&gt; method (note that this returns True for symlinks pointing to regular files as well):</source>
          <target state="translated">Ahora disponible desde Python 3.4, importe e instancia un objeto &lt;code&gt;Path&lt;/code&gt; con el nombre del archivo y verifique el m&amp;eacute;todo &lt;code&gt;is_file&lt;/code&gt; (tenga en cuenta que esto devuelve True para los enlaces simb&amp;oacute;licos que tambi&amp;eacute;n apuntan a archivos normales):</target>
        </trans-unit>
        <trans-unit id="0c2b0029788516df42324f1ddcb2a0d379462fca" translate="yes" xml:space="preserve">
          <source>Now the above is probably the best pragmatic direct answer here, but there's the possibility of a race condition (depending on what you're trying to accomplish), and the fact that the underlying implementation uses a &lt;code&gt;try&lt;/code&gt;, but Python uses &lt;code&gt;try&lt;/code&gt; everywhere in its implementation.</source>
          <target state="translated">Ahora, lo anterior es probablemente la mejor respuesta directa pragm&amp;aacute;tica aqu&amp;iacute;, pero existe la posibilidad de una condici&amp;oacute;n de carrera (dependiendo de lo que intente lograr), y el hecho de que la implementaci&amp;oacute;n subyacente usa un &lt;code&gt;try&lt;/code&gt; , pero Python usa el &lt;code&gt;try&lt;/code&gt; en todas partes en su implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9f1fcb7cb0c155a214cdcbeab2ea4d318d7dd89d" translate="yes" xml:space="preserve">
          <source>One example would be (again, &lt;em&gt;Win&lt;/em&gt; specific) &lt;a href=&quot;https://github.com/mhammond/pywin32&quot;&gt;[GitHub]: mhammond/pywin32 - Python for Windows (pywin32) Extensions&lt;/a&gt;, which is a &lt;em&gt;Python&lt;/em&gt; wrapper over &lt;em&gt;WINAPI&lt;/em&gt;s.</source>
          <target state="translated">Un ejemplo ser&amp;iacute;a (nuevamente, &lt;em&gt;Win&lt;/em&gt; espec&amp;iacute;fico) &lt;a href=&quot;https://github.com/mhammond/pywin32&quot;&gt;[GitHub]: mhammond / pywin32 - Python para Windows (pywin32) Extensiones&lt;/a&gt; , que es un contenedor de &lt;em&gt;Python&lt;/em&gt; sobre &lt;em&gt;WINAPI&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5abbf84d7258a883758c744ea8454f1c4d043654" translate="yes" xml:space="preserve">
          <source>Opening the file will always verify the existence of the file. You can make a function just like so:</source>
          <target state="translated">Abrir el archivo siempre verificará la existencia del mismo.Puedes hacer una función igual:</target>
        </trans-unit>
        <trans-unit id="3d75570821c532602afcda3cfc484e1ec0dd4b08" translate="yes" xml:space="preserve">
          <source>Or in Python 3 you can use &lt;code&gt;pathlib&lt;/code&gt;:</source>
          <target state="translated">O en Python 3 puedes usar &lt;code&gt;pathlib&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6162f97d9d25399c4c7f1572eade2b73d9183fc2" translate="yes" xml:space="preserve">
          <source>Other options that don't meet the ask for &quot;without try&quot;:</source>
          <target state="translated">Otras opciones que no cumplen con la petición de &quot;sin intentarlo&quot;:</target>
        </trans-unit>
        <trans-unit id="1abe02b8870cad9e8f6a481158089cd2d79cac6d" translate="yes" xml:space="preserve">
          <source>Perhaps easier with a try:</source>
          <target state="translated">Tal vez sea más fácil con un intento:</target>
        </trans-unit>
        <trans-unit id="d9e7f16adc3452b0efdc8ccada6d3af30945b93c" translate="yes" xml:space="preserve">
          <source>Personally, I prefer this one because under the hood, it calls native APIs (via &quot;${PYTHON_SRC_DIR}/Modules/posixmodule.c&quot;), but it also opens a gate for possible user errors, and it's not as Pythonic as other variants:</source>
          <target state="translated">Personalmente,prefiero esta porque bajo el capó,llama a las APIs nativas (a través de &quot;${PYTHON_SRC_DIR}Modulesposixmodule.c&quot;),pero también abre una puerta para posibles errores de usuario,y no es tan pitónica como otras variantes:</target>
        </trans-unit>
        <trans-unit id="8e425b164973e8037f334709b9c9ce674d73968a" translate="yes" xml:space="preserve">
          <source>Prefer the try statement. It's considered better style and avoids race conditions.</source>
          <target state="translated">Prefiero la declaración de prueba.Se considera un mejor estilo y evita las condiciones de la carrera.</target>
        </trans-unit>
        <trans-unit id="93744e02826bb08cbcaca9d0ccf769f1f6a80f48" translate="yes" xml:space="preserve">
          <source>Python 3.4 gives us the &lt;a href=&quot;https://docs.python.org/3/library/contextlib.html#contextlib.suppress&quot;&gt;&lt;code&gt;suppress&lt;/code&gt;&lt;/a&gt; context manager (previously the &lt;a href=&quot;https://bugs.python.org/issue19266&quot;&gt;&lt;code&gt;ignore&lt;/code&gt;&lt;/a&gt; context manager), which does semantically exactly the same thing in fewer lines, while also (at least superficially) meeting the original ask to avoid a &lt;code&gt;try&lt;/code&gt; statement:</source>
          <target state="translated">Python 3.4 nos da el administrador de contexto de &lt;a href=&quot;https://docs.python.org/3/library/contextlib.html#contextlib.suppress&quot;&gt; &lt;code&gt;suppress&lt;/code&gt; &lt;/a&gt; (anteriormente el administrador de contexto de &lt;a href=&quot;https://bugs.python.org/issue19266&quot;&gt; &lt;code&gt;ignore&lt;/code&gt; &lt;/a&gt; ), que hace sem&amp;aacute;nticamente exactamente lo mismo en menos l&amp;iacute;neas, mientras que tambi&amp;eacute;n (al menos superficialmente) cumple con la solicitud original para evitar una declaraci&amp;oacute;n de &lt;code&gt;try&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="88968d6bed87a24c3d5e8906af55bf32da38c015" translate="yes" xml:space="preserve">
          <source>Race Conditions: Why we like try</source>
          <target state="translated">Condiciones de la raza:Por qué nos gusta intentar</target>
        </trans-unit>
        <trans-unit id="522972b64fc54c50b69da77a6a1c4a50a9bb45a8" translate="yes" xml:space="preserve">
          <source>Race conditions are very hard to debug because there's a very small window in which they can cause your program to fail.</source>
          <target state="translated">Las condiciones de la carrera son muy difíciles de depurar porque hay una ventana muy pequeña en la que pueden hacer que su programa falle.</target>
        </trans-unit>
        <trans-unit id="b2e1e799ac67777d3968b00f4cfe9b4b5a63a8e0" translate="yes" xml:space="preserve">
          <source>Raising exceptions is considered to be an acceptable, and Pythonic,
  approach for flow control in your program. Consider handling missing
  files with IOErrors. In this situation, an IOError exception will be
  raised if the file exists but the user does not have read permissions.</source>
          <target state="translated">El aumento de las excepciones se considera un enfoque aceptable,y pitónico,para el control del flujo en su programa.Considere la posibilidad de manejar los archivos perdidos con IOErrors.En esta situación,una excepción de IOError será levantada si el archivo existe pero el usuario no tiene permisos de lectura.</target>
        </trans-unit>
        <trans-unit id="398f6fa810da4cd445bcd4f6196261363faad467" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if &lt;em&gt;path&lt;/em&gt; refers to an existing path or an open file descriptor. Returns &lt;code&gt;False&lt;/code&gt; for broken symbolic links. On some platforms, this function may return &lt;code&gt;False&lt;/code&gt; if permission is not granted to execute &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.stat&quot;&gt;os.stat()&lt;/a&gt; on the requested file, even if the &lt;em&gt;path&lt;/em&gt; physically exists.</source>
          <target state="translated">Devuelve &lt;code&gt;True&lt;/code&gt; si la &lt;em&gt;ruta se&lt;/em&gt; refiere a una ruta existente o un descriptor de archivo abierto. Devuelve &lt;code&gt;False&lt;/code&gt; para enlaces simb&amp;oacute;licos rotos. En algunas plataformas, esta funci&amp;oacute;n puede devolver &lt;code&gt;False&lt;/code&gt; si no se otorga permiso para ejecutar &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.stat&quot;&gt;os.stat ()&lt;/a&gt; en el archivo solicitado, incluso si la &lt;em&gt;ruta&lt;/em&gt; existe f&amp;iacute;sicamente.</target>
        </trans-unit>
        <trans-unit id="57fd7c3c54933cadd32199f06cbadaeaf8b6a887" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if path is an existing regular file. This follows symbolic links, so both &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.islink&quot;&gt;islink()&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.isfile&quot;&gt;isfile()&lt;/a&gt; can be true for the same path.</source>
          <target state="translated">Devuelve &lt;code&gt;True&lt;/code&gt; si la ruta es un archivo regular existente. Esto sigue los enlaces simb&amp;oacute;licos, por lo que tanto &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.islink&quot;&gt;islink ()&lt;/a&gt; como &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.isfile&quot;&gt;isfile ()&lt;/a&gt; pueden ser verdaderos para la misma ruta.</target>
        </trans-unit>
        <trans-unit id="c416828ffe527204e9705ff84ac69c575514fa70" translate="yes" xml:space="preserve">
          <source>Return True if path is an existing regular file. This follows symbolic
  links, so both &lt;code&gt;islink()&lt;/code&gt; and &lt;code&gt;isfile()&lt;/code&gt; can be true for the same path.</source>
          <target state="translated">Devuelve True si la ruta es un archivo regular existente. Esto sigue los enlaces simb&amp;oacute;licos, por lo que tanto &lt;code&gt;islink()&lt;/code&gt; como &lt;code&gt;isfile()&lt;/code&gt; pueden ser verdaderos para la misma ruta.</target>
        </trans-unit>
        <trans-unit id="480f0d6eca70fda19ed1cfd881e8db7b38b30b6d" translate="yes" xml:space="preserve">
          <source>SRC: &lt;a href=&quot;http://www.pfinn.net/python-check-if-file-exists.html&quot;&gt;http://www.pfinn.net/python-check-if-file-exists.html&lt;/a&gt;</source>
          <target state="translated">SRC: &lt;a href=&quot;http://www.pfinn.net/python-check-if-file-exists.html&quot;&gt;http://www.pfinn.net/python-check-if-file-exists.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="418acfb7d49ae4b9747a1895a7c2c368f346ec6b" translate="yes" xml:space="preserve">
          <source>Since I also work in &lt;em&gt;C&lt;/em&gt;, I use this method as well because under the hood, it calls &lt;strong&gt;native &lt;em&gt;API&lt;/em&gt;s&lt;/strong&gt; (again, via &lt;em&gt;&quot;${PYTHON_SRC_DIR}/Modules/posixmodule.c&quot;&lt;/em&gt;), but it also opens a gate for possible &lt;strong&gt;user errors&lt;/strong&gt;, and it's not as &lt;em&gt;Python&lt;/em&gt;ic as other variants. So, as @AaronHall rightly pointed out, don't use it unless you know what you're doing:</source>
          <target state="translated">Como tambi&amp;eacute;n trabajo en &lt;em&gt;C&lt;/em&gt; , tambi&amp;eacute;n uso este m&amp;eacute;todo porque, bajo el cap&amp;oacute;, llama a &lt;strong&gt;las &lt;em&gt;API&lt;/em&gt; nativas&lt;/strong&gt; (de nuevo, a trav&amp;eacute;s de &lt;em&gt;&quot;$ {PYTHON_SRC_DIR} /Modules/posixmodule.c&quot;&lt;/em&gt; ), pero tambi&amp;eacute;n abre una puerta para posibles &lt;strong&gt;usuarios errores&lt;/strong&gt; , y no es tan &lt;em&gt;Python&lt;/em&gt; ic como otras variantes. Entonces, como se&amp;ntilde;al&amp;oacute; correctamente @AaronHall, no lo use a menos que sepa lo que est&amp;aacute; haciendo:</target>
        </trans-unit>
        <trans-unit id="4e081acedac5348eeca514bf8754f18b5a2a5859" translate="yes" xml:space="preserve">
          <source>Since these iterate over folders, (in most of the cases) they are inefficient for our problem (there are exceptions, like non wildcarded &lt;em&gt;glob&lt;/em&gt;bing - as @ShadowRanger pointed out), so I'm not going to insist on them. Not to mention that in some cases, filename processing might be required.</source>
          <target state="translated">Dado que estos iteran sobre las carpetas (en la mayor&amp;iacute;a de los casos) son ineficientes para nuestro problema (hay excepciones, como el bing de &lt;em&gt;globo&lt;/em&gt; no comod&amp;iacute;n, como se&amp;ntilde;al&amp;oacute; @ShadowRanger), por lo que no voy a insistir en ellos. Sin mencionar que en algunos casos, el procesamiento del nombre de archivo puede ser requerido.</target>
        </trans-unit>
        <trans-unit id="ef8ad7d35edc8d5906794e416a2417426387ee33" translate="yes" xml:space="preserve">
          <source>So let's get a file that we know is a file:</source>
          <target state="translated">Así que consigamos un archivo que sepamos que es un archivo:</target>
        </trans-unit>
        <trans-unit id="2a3bb40ae80994d030f01c5b7c25d767f5b05a5b" translate="yes" xml:space="preserve">
          <source>So raising exceptions is considered to be an acceptable, and Pythonic, approach for flow control in your program. And one should consider handling missing files with IOErrors, rather than &lt;code&gt;if&lt;/code&gt; statements (&lt;em&gt;just an advice&lt;/em&gt;).</source>
          <target state="translated">Por lo tanto, aumentar las excepciones se considera un enfoque aceptable y Pythonic para el control de flujo en su programa. Y uno debe considerar manejar los archivos que faltan con IOErrors, en lugar de &lt;code&gt;if&lt;/code&gt; declaraciones ( &lt;em&gt;solo un consejo&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="fa536419723a345ff2ddb12f28c3d59d3c780110" translate="yes" xml:space="preserve">
          <source>So we need to use &lt;code&gt;is_file&lt;/code&gt;:</source>
          <target state="translated">Entonces necesitamos usar &lt;code&gt;is_file&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a378bd712dd5bfae1cae597f5f9f871b3a2788bb" translate="yes" xml:space="preserve">
          <source>Starting with Python 3.4, the &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_file&quot;&gt;&lt;code&gt;pathlib&lt;/code&gt; module&lt;/a&gt; offers an object-oriented approach (backported to &lt;code&gt;pathlib2&lt;/code&gt; in Python 2.7):</source>
          <target state="translated">Comenzando con Python 3.4, el &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_file&quot;&gt;m&amp;oacute;dulo &lt;code&gt;pathlib&lt;/code&gt; &lt;/a&gt; ofrece un enfoque orientado a objetos ( &lt;code&gt;pathlib2&lt;/code&gt; a pathlib2 en Python 2.7):</target>
        </trans-unit>
        <trans-unit id="0411618e6c534569cfc6b8e34a18a081fb5d17d8" translate="yes" xml:space="preserve">
          <source>Style: Section &quot;Handling unusual conditions&quot; of &lt;a href=&quot;http://allendowney.com/sd/notes/notes11.txt&quot;&gt;http://allendowney.com/sd/notes/notes11.txt&lt;/a&gt;</source>
          <target state="translated">Estilo: Secci&amp;oacute;n &quot;Manejo de condiciones inusuales&quot; de &lt;a href=&quot;http://allendowney.com/sd/notes/notes11.txt&quot;&gt;http://allendowney.com/sd/notes/notes11.txt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cde65e3e48762cf615039585856511edabc67b5c" translate="yes" xml:space="preserve">
          <source>Testing for files and folders with &lt;code&gt;os.path.isfile()&lt;/code&gt;, &lt;code&gt;os.path.isdir()&lt;/code&gt; and &lt;code&gt;os.path.exists()&lt;/code&gt;</source>
          <target state="translated">Prueba de archivos y carpetas con &lt;code&gt;os.path.isfile()&lt;/code&gt; , &lt;code&gt;os.path.isdir()&lt;/code&gt; y &lt;code&gt;os.path.exists()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df18cbc4306e1fa89ca1399437058ce4f49db703" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pathlib.Path&lt;/code&gt; method (included in Python 3+, installable with pip for Python 2)</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;pathlib.Path&lt;/code&gt; (incluido en Python 3+, instalable con pip para Python 2)</target>
        </trans-unit>
        <trans-unit id="530b364f38885f326cd1f531e7470053b4411886" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Lnx&lt;/em&gt; (&lt;em&gt;Ubtu (16 x64)&lt;/em&gt;) counterpart as well:</source>
          <target state="translated">La &lt;em&gt;contraparte de Lnx&lt;/em&gt; ( &lt;em&gt;Ubtu (16 x64)&lt;/em&gt; ) tambi&amp;eacute;n:</target>
        </trans-unit>
        <trans-unit id="13a09abaae156d8f74be92cfd84bbc68f9b952e1" translate="yes" xml:space="preserve">
          <source>The code itself does not use a &lt;code&gt;try&lt;/code&gt; block&amp;hellip; except in determining the operating system and thus steering you to the &quot;Unix&quot;-style &lt;code&gt;find&lt;/code&gt; or the hand-buillt &lt;code&gt;find&lt;/code&gt;. Timing tests showed that the &lt;code&gt;try&lt;/code&gt; was faster in determining the OS, so I did use one there (but nowhere else).</source>
          <target state="translated">El c&amp;oacute;digo en s&amp;iacute; mismo no usa un bloque de &lt;code&gt;try&lt;/code&gt; ... excepto para determinar el sistema operativo y as&amp;iacute; dirigirlo al &lt;code&gt;find&lt;/code&gt; estilo &quot;Unix&quot; o al &lt;code&gt;find&lt;/code&gt; manual. Las pruebas de tiempo mostraron que el &lt;code&gt;try&lt;/code&gt; fue m&amp;aacute;s r&amp;aacute;pido para determinar el sistema operativo, por lo que utilic&amp;eacute; uno all&amp;iacute; (pero en ning&amp;uacute;n otro lugar).</target>
        </trans-unit>
        <trans-unit id="24d50f1641bf928a4330f0d682a38d4d97ffe256" translate="yes" xml:space="preserve">
          <source>The implementation, if you care to look, is here:
&lt;a href=&quot;https://github.com/uqfoundation/pox/blob/89f90fb308f285ca7a62eabe2c38acb87e89dad9/pox/shutils.py#L190&quot;&gt;https://github.com/uqfoundation/pox/blob/89f90fb308f285ca7a62eabe2c38acb87e89dad9/pox/shutils.py#L190&lt;/a&gt;</source>
          <target state="translated">La implementaci&amp;oacute;n, si quiere mirar, est&amp;aacute; aqu&amp;iacute;: &lt;a href=&quot;https://github.com/uqfoundation/pox/blob/89f90fb308f285ca7a62eabe2c38acb87e89dad9/pox/shutils.py#L190&quot;&gt;https://github.com/uqfoundation/pox/blob/89f90fb308f285ca7a62eabe2c38acb87e89dad9/pox/shutils.py#L190&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a74a8a63b22547ba3d5093ec5df9fef2c1e24790" translate="yes" xml:space="preserve">
          <source>The ouput would be:</source>
          <target state="translated">El resultado sería:</target>
        </trans-unit>
        <trans-unit id="1865aad596e6ed9eb4f9647b68658f733fae4544" translate="yes" xml:space="preserve">
          <source>The pathlib module has lots of cool stuff in it: convenient globbing, checking file's owner, easier path joining, etc.  It's worth checking out.  If you're on an older Python (version 2.6 or later), you can still install pathlib with pip:</source>
          <target state="translated">El módulo pathlib tiene un montón de cosas interesantes en él:conveniente globbing,comprobar el propietario del archivo,facilitar la unión de rutas,etc.Vale la pena comprobarlo.Si estás en un Python más antiguo (versión 2.6 o posterior),todavía puedes instalar pathlib con pip:</target>
        </trans-unit>
        <trans-unit id="86939b2f23d78f6587e8899c5fbcad699b1fca6d" translate="yes" xml:space="preserve">
          <source>Then import it as follows:</source>
          <target state="translated">Luego lo importan de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="10cf03aad058b6e2b5effd7477540fa9d0ac3551" translate="yes" xml:space="preserve">
          <source>Then, depending on the result, your program can just keep running from there or you can code to stop it if you want.</source>
          <target state="translated">Entonces,dependiendo del resultado,tu programa puede seguir funcionando desde ahí o puedes codificar para detenerlo si quieres.</target>
        </trans-unit>
        <trans-unit id="10303b9773cea55a7373894dca044a1fb0b21612" translate="yes" xml:space="preserve">
          <source>This allows common &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#try&quot;&gt;try&lt;/a&gt;...&lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#except&quot;&gt;except&lt;/a&gt;...&lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#finally&quot;&gt;finally&lt;/a&gt; usage patterns to be encapsulated for convenient reuse.</source>
          <target state="translated">Esto permite un &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#try&quot;&gt;intento&lt;/a&gt; com&amp;uacute;n ... &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#except&quot;&gt;excepto&lt;/a&gt; ... &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#finally&quot;&gt;finalmente,&lt;/a&gt; los patrones de uso se encapsulan para una reutilizaci&amp;oacute;n conveniente.</target>
        </trans-unit>
        <trans-unit id="013b8396ae1ec7be20358e949069add1eed3da4a" translate="yes" xml:space="preserve">
          <source>This answer says it prefers a non-Pythonic, error-prone method, with no justification. It seems to encourage users to use low-level APIs without understanding them.</source>
          <target state="translated">Esta respuesta dice que prefiere un método no pitónico,propenso a errores,sin justificación.Parece alentar a los usuarios a utilizar API de bajo nivel sin entenderlas.</target>
        </trans-unit>
        <trans-unit id="e34e91f34043e5905acc95f65395d3f7ae45d71b" translate="yes" xml:space="preserve">
          <source>This doesn't also apply to &lt;em&gt;Win&lt;/em&gt; (but that's not such a big deal, since &lt;em&gt;msvcrt.dll&lt;/em&gt; is located in &lt;em&gt;&quot;%SystemRoot%\System32&quot;&lt;/em&gt; which is in &lt;em&gt;%PATH%&lt;/em&gt; by default). I wanted to take things further and replicate this behavior on &lt;em&gt;Win&lt;/em&gt; (and submit a patch), but as it turns out, &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/libloaderapi/nf-libloaderapi-getprocaddress&quot;&gt;[MS.Docs]: GetProcAddress function&lt;/a&gt; only &quot;sees&quot; &lt;strong&gt;exported&lt;/strong&gt; symbols, so unless someone declares the functions in the main executable as &lt;code&gt;__declspec(dllexport)&lt;/code&gt; (why on Earth the &lt;em&gt;regular&lt;/em&gt; person would do that?), the main program is loadable but pretty much unusable</source>
          <target state="translated">Esto tampoco se aplica a &lt;em&gt;Win&lt;/em&gt; (pero eso no es un gran problema, ya que &lt;em&gt;msvcrt.dll&lt;/em&gt; se encuentra en &lt;em&gt;&quot;% SystemRoot% \ System32&quot;&lt;/em&gt; que est&amp;aacute; en &lt;em&gt;% PATH%&lt;/em&gt; por defecto). Quer&amp;iacute;a ir m&amp;aacute;s all&amp;aacute; y replicar este comportamiento en &lt;em&gt;Win&lt;/em&gt; (y enviar un parche), pero resulta que, &lt;a href=&quot;https://docs.microsoft.com/en-gb/windows/desktop/api/libloaderapi/nf-libloaderapi-getprocaddress&quot;&gt;[MS.Docs]: la funci&amp;oacute;n GetProcAddress&lt;/a&gt; solo &quot;ve&quot; los s&amp;iacute;mbolos &lt;strong&gt;exportados&lt;/strong&gt; , por lo que a menos que alguien declare las funciones en el ejecutable principal como &lt;code&gt;__declspec(dllexport)&lt;/code&gt; (&amp;iquest;por qu&amp;eacute; demonios la persona &lt;em&gt;normal&lt;/em&gt; har&amp;iacute;a eso?), el programa principal se puede cargar pero es pr&amp;aacute;cticamente inutilizable</target>
        </trans-unit>
        <trans-unit id="7d512ce20a34ce68ebd3c6ebeb6e56887b5b877e" translate="yes" xml:space="preserve">
          <source>This has to be handled with care, since functions like &lt;em&gt;main&lt;/em&gt;, &lt;em&gt;Py_Main&lt;/em&gt; and (all the) others are available; calling them could have disastrous effects (on the current program)</source>
          <target state="translated">Esto debe manejarse con cuidado, ya que funciones como &lt;em&gt;main&lt;/em&gt; , &lt;em&gt;Py_Main&lt;/em&gt; y (todas las dem&amp;aacute;s) est&amp;aacute;n disponibles; llamarlos podr&amp;iacute;a tener efectos desastrosos (en el programa actual)</target>
        </trans-unit>
        <trans-unit id="ada1dec3ed33a08f60c128b70954cbdb8457037b" translate="yes" xml:space="preserve">
          <source>This is the simplest way to check if a file exists. Just &lt;strong&gt;because&lt;/strong&gt; the file existed when you checked doesn't &lt;strong&gt;guarantee&lt;/strong&gt; that it will be there when you need to open it.</source>
          <target state="translated">Esta es la forma m&amp;aacute;s simple de verificar si existe un archivo. El hecho de &lt;strong&gt;que&lt;/strong&gt; el archivo existiera cuando lo verific&amp;oacute; no &lt;strong&gt;garantiza&lt;/strong&gt; que estar&amp;aacute; all&amp;iacute; cuando necesite abrirlo.</target>
        </trans-unit>
        <trans-unit id="faf24dd71990fb8b6a4f9fda6ae044c126abf438" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;True&lt;/code&gt; for both files and directories but you can instead use</source>
          <target state="translated">Esto devuelve &lt;code&gt;True&lt;/code&gt; tanto para archivos como para directorios, pero en su lugar puede usar</target>
        </trans-unit>
        <trans-unit id="dd377f1e075e1a6762708def8e94ab1cc954e78d" translate="yes" xml:space="preserve">
          <source>This seems to encourage users to adopt poor practices.</source>
          <target state="translated">Esto parece alentar a los usuarios a adoptar prácticas deficientes.</target>
        </trans-unit>
        <trans-unit id="1ebd1badf365b531b3f784e4041ddcafc927cdcf" translate="yes" xml:space="preserve">
          <source>This will check the existence of what you specify. However, it checks for files &lt;em&gt;and&lt;/em&gt; directories so beware about how you use it.</source>
          <target state="translated">Esto verificar&amp;aacute; la existencia de lo que especifique. Sin embargo, busca archivos &lt;em&gt;y&lt;/em&gt; directorios, as&amp;iacute; que ten cuidado con c&amp;oacute;mo lo usas.</target>
        </trans-unit>
        <trans-unit id="599782e6dcde6e17a96f8d011122afca2b083bc5" translate="yes" xml:space="preserve">
          <source>This will check whether you have access to the file. It will check for permissions. Based on the os.py documentation, typing in &lt;code&gt;os.F_OK&lt;/code&gt;, it will check the existence of the path. However, using this will create a security hole, as someone can attack your file using the time between checking the permissions and opening the file. You should instead go directly to opening the file instead of checking its permissions. (&lt;a href=&quot;https://docs.python.org/2/glossary.html#term-eafp&quot;&gt;EAFP&lt;/a&gt; vs &lt;a href=&quot;https://docs.python.org/2/glossary.html#term-lbyl&quot;&gt;LBYP&lt;/a&gt;). If you're not going to open the file afterwards, and only checking its existence, then you can use this.</source>
          <target state="translated">Esto verificar&amp;aacute; si tiene acceso al archivo. Verificar&amp;aacute; los permisos. Seg&amp;uacute;n la documentaci&amp;oacute;n de os.py, tecleando &lt;code&gt;os.F_OK&lt;/code&gt; , verificar&amp;aacute; la existencia de la ruta. Sin embargo, usar esto crear&amp;aacute; un agujero de seguridad, ya que alguien puede atacar su archivo usando el tiempo entre verificar los permisos y abrir el archivo. En su lugar, debe ir directamente a abrir el archivo en lugar de verificar sus permisos. ( &lt;a href=&quot;https://docs.python.org/2/glossary.html#term-eafp&quot;&gt;EAFP&lt;/a&gt; vs &lt;a href=&quot;https://docs.python.org/2/glossary.html#term-lbyl&quot;&gt;LBYP&lt;/a&gt; ). Si no va a abrir el archivo despu&amp;eacute;s, y solo verifica su existencia, puede usar esto.</target>
        </trans-unit>
        <trans-unit id="5b5ffcaf081dc75e6b418d427d70f91a6d9dec08" translate="yes" xml:space="preserve">
          <source>This will handle the case of the &lt;code&gt;file_path&lt;/code&gt; being &lt;code&gt;None&lt;/code&gt; or empty string.</source>
          <target state="translated">Esto manejar&amp;aacute; el caso de &lt;code&gt;file_path&lt;/code&gt; siendo &lt;code&gt;None&lt;/code&gt; o cadena vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="8dba64974b8642857ae28899a73df6c30d03c303" translate="yes" xml:space="preserve">
          <source>This will return true or false based on its existence.</source>
          <target state="translated">Esto regresará verdadero o falso basado en su existencia.</target>
        </trans-unit>
        <trans-unit id="fc31e69259d13bfced912cfbab7ad7e00fd46dea" translate="yes" xml:space="preserve">
          <source>To check a directory, do:</source>
          <target state="translated">Para comprobar un directorio,hazlo:</target>
        </trans-unit>
        <trans-unit id="3416f5cb91745acbdaae2a2dddc268e01225ffdb" translate="yes" xml:space="preserve">
          <source>To check whether a &lt;code&gt;Path&lt;/code&gt; object exists independently of whether is it a file or directory, use &lt;code&gt;exists()&lt;/code&gt;:</source>
          <target state="translated">Para verificar si un objeto &lt;code&gt;Path&lt;/code&gt; existe independientemente de si es un archivo o directorio, use &lt;code&gt;exists()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7e5ffee0a503a306dd9fb72ef88ce41742e995a7" translate="yes" xml:space="preserve">
          <source>Try opening the file:</source>
          <target state="translated">Intenta abrir el archivo:</target>
        </trans-unit>
        <trans-unit id="1a4e2dce5d6775f3efc5d392dd7dcfbb9813ec34" translate="yes" xml:space="preserve">
          <source>Under the hood, both use:</source>
          <target state="translated">Bajo el capó,ambos usan:</target>
        </trans-unit>
        <trans-unit id="c78de1502fda99e6b39752620575aa8b8af55212" translate="yes" xml:space="preserve">
          <source>Under the hood, it does &lt;strong&gt;exactly&lt;/strong&gt; the same thing (&lt;em&gt;pathlib.py&lt;/em&gt;, line &lt;em&gt;~#1330&lt;/em&gt;):</source>
          <target state="translated">Debajo del cap&amp;oacute;, hace &lt;strong&gt;exactamente&lt;/strong&gt; lo mismo ( &lt;em&gt;pathlib.py&lt;/em&gt; , l&amp;iacute;nea &lt;em&gt;~ # 1330&lt;/em&gt; ):</target>
        </trans-unit>
        <trans-unit id="0c4dd154e57d3342872a767d4176641c8fc8402b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.isfile&quot;&gt;&lt;code&gt;isfile()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;True&lt;/code&gt; for directories. So depending on if you want only plain files or also directories, you'll use &lt;code&gt;isfile()&lt;/code&gt; or &lt;code&gt;exists()&lt;/code&gt;. Here is some simple REPL output:</source>
          <target state="translated">A diferencia de &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.isfile&quot;&gt; &lt;code&gt;isfile()&lt;/code&gt; &lt;/a&gt; , exist () devolver&amp;aacute; &lt;code&gt;True&lt;/code&gt; para los directorios. Entonces, dependiendo de si solo desea archivos simples o tambi&amp;eacute;n directorios, usar&amp;aacute; &lt;code&gt;isfile()&lt;/code&gt; o exist &lt;code&gt;exists()&lt;/code&gt; . Aqu&amp;iacute; hay una salida REPL simple:</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="6528187d8e91a930203288ed63867c1ae3e26091" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://docs.python.org/3.3/library/os.path.html?highlight=os.path#os.path.isfile&quot;&gt;&lt;code&gt;os.path.isfile()&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;https://docs.python.org/3.3/library/os.html?highlight=os.access#os.access&quot;&gt;&lt;code&gt;os.access()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Use &lt;a href=&quot;https://docs.python.org/3.3/library/os.path.html?highlight=os.path#os.path.isfile&quot;&gt; &lt;code&gt;os.path.isfile()&lt;/code&gt; &lt;/a&gt; con &lt;a href=&quot;https://docs.python.org/3.3/library/os.html?highlight=os.access#os.access&quot;&gt; &lt;code&gt;os.access()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8395433c21c6033081f4203a964dbda841229f43" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://docs.python.org/3/library/contextlib.html#contextlib.suppress&quot;&gt;[Python 3]: contextlib.&lt;strong&gt;suppress&lt;/strong&gt;(&lt;em&gt;*exceptions&lt;/em&gt;)&lt;/a&gt; - which was &lt;strong&gt;specifically&lt;/strong&gt; designed for selectively suppressing exceptions</source>
          <target state="translated">Utilice &lt;a href=&quot;https://docs.python.org/3/library/contextlib.html#contextlib.suppress&quot;&gt;[Python 3]: contextlib.&lt;/a&gt; &lt;strong&gt;suprimir&lt;/strong&gt; ( &lt;em&gt;* excepciones&lt;/em&gt; ) - que fue dise&amp;ntilde;ado &lt;strong&gt;espec&amp;iacute;ficamente&lt;/strong&gt; para suprimir selectivamente excepciones</target>
        </trans-unit>
        <trans-unit id="63dca5b17c3d20c3489afb0a2fce135a332440f1" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;os.access(path, mode)&lt;/code&gt;:</source>
          <target state="translated">Utilice &lt;code&gt;os.access(path, mode)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ccb25d19aa4f439e92c039f06e2c08c0d55c6044" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;os.path.exists(path)&lt;/code&gt;:</source>
          <target state="translated">Utilice &lt;code&gt;os.path.exists(path)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a09130d4064cb71241e9c92eb3d5f5998cbbe1e5" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.scandir&quot;&gt;scandir()&lt;/a&gt; instead of &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.listdir&quot;&gt;listdir()&lt;/a&gt; can significantly increase the performance of code that also needs file type or file attribute information, because &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry&quot;&gt;os.DirEntry&lt;/a&gt; objects expose this information if the operating system provides it when scanning a directory. All &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry&quot;&gt;os.DirEntry&lt;/a&gt; methods may perform a system call, but &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry.is_dir&quot;&gt;is_dir()&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry.is_file&quot;&gt;is_file()&lt;/a&gt; usually only require a system call for symbolic links; &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry.stat&quot;&gt;os.DirEntry.stat()&lt;/a&gt; always requires a system call on Unix but only requires one for symbolic links on Windows.</source>
          <target state="translated">El uso de &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.scandir&quot;&gt;scandir () en&lt;/a&gt; lugar de &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.listdir&quot;&gt;listdir ()&lt;/a&gt; puede aumentar significativamente el rendimiento del c&amp;oacute;digo que tambi&amp;eacute;n necesita informaci&amp;oacute;n de tipo de archivo o atributo de archivo, porque los objetos &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry&quot;&gt;os.DirEntry&lt;/a&gt; exponen esta informaci&amp;oacute;n si el sistema operativo la proporciona al escanear un directorio. Todos los m&amp;eacute;todos &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry&quot;&gt;os.DirEntry&lt;/a&gt; pueden realizar una llamada al sistema, pero &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry.is_dir&quot;&gt;is_dir ()&lt;/a&gt; y &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry.is_file&quot;&gt;is_file ()&lt;/a&gt; generalmente solo requieren una llamada al sistema para enlaces simb&amp;oacute;licos; &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.DirEntry.stat&quot;&gt;os.DirEntry.stat ()&lt;/a&gt; siempre requiere una llamada al sistema en Unix, pero solo requiere una para enlaces simb&amp;oacute;licos en Windows.</target>
        </trans-unit>
        <trans-unit id="3c602deb97ce7542bfccf83d47fe88cf36a2893d" translate="yes" xml:space="preserve">
          <source>We like &lt;code&gt;try&lt;/code&gt; because it avoids race conditions. With &lt;code&gt;try&lt;/code&gt;, you simply attempt to read your file, expecting it to be there, and if not, you catch the exception and perform whatever fallback behavior makes sense.</source>
          <target state="translated">Nos gusta &lt;code&gt;try&lt;/code&gt; porque evita las condiciones de carrera. Con &lt;code&gt;try&lt;/code&gt; , simplemente intentas leer tu archivo, esperando que est&amp;eacute; all&amp;iacute;, y si no, capturas la excepci&amp;oacute;n y realizas cualquier comportamiento alternativo que tenga sentido.</target>
        </trans-unit>
        <trans-unit id="11dee24909df97ffd7167218bba605d1194d35d4" translate="yes" xml:space="preserve">
          <source>You can (and usually should) still use a &lt;code&gt;try/except&lt;/code&gt; block when opening files:</source>
          <target state="translated">Puede (y normalmente deber&amp;iacute;a) seguir usando un bloque &lt;code&gt;try/except&lt;/code&gt; al abrir archivos:</target>
        </trans-unit>
        <trans-unit id="7784bbbe5a5c336f12d286e297f0803a9fe8d487" translate="yes" xml:space="preserve">
          <source>You can also test if a file is a certain type of file using &lt;code&gt;os.path.splitext()&lt;/code&gt; to get the extension (if you don't already know it)</source>
          <target state="translated">Tambi&amp;eacute;n puede probar si un archivo es un cierto tipo de archivo usando &lt;code&gt;os.path.splitext()&lt;/code&gt; para obtener la extensi&amp;oacute;n (si a&amp;uacute;n no lo sabe)</target>
        </trans-unit>
        <trans-unit id="53df035e05c38ef007ca2b8b29347ccc17e7055d" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;resolve(strict=True)&lt;/code&gt; in a &lt;code&gt;try&lt;/code&gt; block:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;resolve(strict=True)&lt;/code&gt; en un bloque de &lt;code&gt;try&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4f01e601cacd481f5c7f35810b916f8e0b34e1dd" translate="yes" xml:space="preserve">
          <source>You can follow these three ways:</source>
          <target state="translated">Puedes seguir estos tres caminos:</target>
        </trans-unit>
        <trans-unit id="ec8dda8508e059554be2c9405118015a0d4115f7" translate="yes" xml:space="preserve">
          <source>You can use the &quot;OS&quot; library of Python:</source>
          <target state="translated">Puedes usar la biblioteca &quot;OS&quot; de Python:</target>
        </trans-unit>
        <trans-unit id="939818830bc616c3a6efeac98f780e2a1d405b44" translate="yes" xml:space="preserve">
          <source>You can write Brian's suggestion without the &lt;code&gt;try:&lt;/code&gt;.</source>
          <target state="translated">Puedes escribir la sugerencia de Brian sin el &lt;code&gt;try:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="286ccde47046b9cee19cb126d447184993fbb983" translate="yes" xml:space="preserve">
          <source>You could try this (safer):</source>
          <target state="translated">Podrías probar esto (más seguro):</target>
        </trans-unit>
        <trans-unit id="98a04bbfd86344a14e1ecd9d2cb153c157a6b79b" translate="yes" xml:space="preserve">
          <source>You have the &lt;a href=&quot;https://docs.python.org/2/library/os.path.html#os.path.exists&quot;&gt;&lt;code&gt;os.path.exists&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Tiene la funci&amp;oacute;n &lt;a href=&quot;https://docs.python.org/2/library/os.path.html#os.path.exists&quot;&gt; &lt;code&gt;os.path.exists&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ea7a34811c2492dcaa209ef15806e5b61c87b16f" translate="yes" xml:space="preserve">
          <source>[Python 3]: os.&lt;strong&gt;walk&lt;/strong&gt;(&lt;em&gt;top, topdown=True, onerror=None, followlinks=False&lt;/em&gt;)</source>
          <target state="translated">[Python 3]: os. &lt;strong&gt;caminar&lt;/strong&gt; ( &lt;em&gt;top, topdown = True, onerror = None, followlinks = False&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="9ffb459d6d30faf56bdf32fa749719a501413758" translate="yes" xml:space="preserve">
          <source>from the &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.isfile&quot;&gt;docs&lt;/a&gt;:</source>
          <target state="translated">de los &lt;a href=&quot;https://docs.python.org/library/os.path.html#os.path.isfile&quot;&gt;documentos&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="be73dd7f4e02100df1866e6ae1905b8fb136de60" translate="yes" xml:space="preserve">
          <source>if you need to be sure it's a file.</source>
          <target state="translated">si necesitas estar seguro de que es un archivo.</target>
        </trans-unit>
        <trans-unit id="6adfed45fd2ed1ca17a5706197051fb6c6c02690" translate="yes" xml:space="preserve">
          <source>is better written as:</source>
          <target state="translated">se escribe mejor como:</target>
        </trans-unit>
        <trans-unit id="625ab49ea896effef76c5e7d9931ab9b626630f8" translate="yes" xml:space="preserve">
          <source>it's just a &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; block around &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.stat&quot;&gt;[Python 3]: os.&lt;strong&gt;stat&lt;/strong&gt;(&lt;em&gt;path, *, dir_fd=None, follow_symlinks=True&lt;/em&gt;)&lt;/a&gt;. So, your code is &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; free, but lower in the framestack there's (at least) &lt;strong&gt;one&lt;/strong&gt; such block. This also applies to other funcs (&lt;strong&gt;including&lt;/strong&gt;&lt;code&gt;os.path.isfile&lt;/code&gt;).</source>
          <target state="translated">es solo un bloque &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; alrededor de &lt;a href=&quot;https://docs.python.org/3/library/os.html#os.stat&quot;&gt;[Python 3]: os.&lt;/a&gt; &lt;strong&gt;stat&lt;/strong&gt; ( &lt;em&gt;ruta, *, dir_fd = Ninguno, follow_symlinks = Verdadero&lt;/em&gt; ) . Entonces, su c&amp;oacute;digo es &lt;strong&gt;&lt;em&gt;try&lt;/em&gt;&lt;/strong&gt; / &lt;strong&gt;&lt;em&gt;except&lt;/em&gt;&lt;/strong&gt; free, pero m&amp;aacute;s abajo en el framestack hay (al menos) &lt;strong&gt;uno de&lt;/strong&gt; esos bloques. Esto tambi&amp;eacute;n se aplica a otros funcs ( &lt;strong&gt;incluido&lt;/strong&gt; &lt;code&gt;os.path.isfile&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2425e7713a0225c18ca0b17f07467bbaaa179274" translate="yes" xml:space="preserve">
          <source>to test if it's a file specifically. It follows symlinks.</source>
          <target state="translated">para comprobar si es un archivo específicamente.Sigue los enlaces simbólicos.</target>
        </trans-unit>
        <trans-unit id="6abf28170f947a4e00093db1c0c8dcdabc461e0d" translate="yes" xml:space="preserve">
          <source>via &lt;a href=&quot;https://github.com/python/cpython/blob/master/Modules/posixmodule.c&quot;&gt;[GitHub]: python/cpython - (master) cpython/Modules/posixmodule.c&lt;/a&gt;</source>
          <target state="translated">a trav&amp;eacute;s de &lt;a href=&quot;https://github.com/python/cpython/blob/master/Modules/posixmodule.c&quot;&gt;[GitHub]: python / cpython - (maestro) cpython / Modules / posixmodule.c&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
