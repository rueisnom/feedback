<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/451415">
    <body>
      <group id="451415">
        <trans-unit id="61a576f0f363b75d24f40d62e9d2f5ff23b8cb32" translate="yes" xml:space="preserve">
          <source>... and here's what you get with group_concat:</source>
          <target state="translated">....这就是你用group_concat得到的结果。</target>
        </trans-unit>
        <trans-unit id="fcd40da0ab9fed01342884924ee989b58fde685f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://blog.shlomoid.com/2008/11/emulating-mysqls-groupconcat-function.html&quot;&gt;Best one I've found&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://blog.shlomoid.com/2008/11/emulating-mysqls-groupconcat-function.html&quot;&gt;我找到的最好的一个&lt;/a&gt; ：</target>
        </trans-unit>
        <trans-unit id="2204cd8de7b77a77e869b3081dbb89d9c61d16ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/mt790580.aspx&quot;&gt;&lt;code&gt;STRING_AGG ( expression, separator)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/mt790580.aspx&quot;&gt; &lt;code&gt;STRING_AGG ( expression, separator)&lt;/code&gt; &lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="a03f4aebd04631438123a78b62d145c41e61673e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group_concat&lt;/code&gt;, by the way, does this: given a table of, say, employee names and projects...</source>
          <target state="translated">&lt;code&gt;group_concat&lt;/code&gt; ， group_concat做到了：给一个表，例如，雇员姓名和项目...</target>
        </trans-unit>
        <trans-unit id="a5d6aba21723210e3845ddc9784dd9195265f311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For versions 2005-2016&lt;/strong&gt; I typically use the XML method in the accepted answer.</source>
          <target state="translated">&lt;strong&gt;对于2005-2016版本，&lt;/strong&gt;我通常在接受的答案中使用XML方法。</target>
        </trans-unit>
        <trans-unit id="dd931dbaa13591250d01422ca71c66decb3b3697" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQL Server 2017&lt;/strong&gt; does introduce a new aggregate function</source>
          <target state="translated">&lt;strong&gt;SQL Server 2017&lt;/strong&gt;确实引入了新的聚合函数</target>
        </trans-unit>
        <trans-unit id="2a0abbe4426e516054a176959644236db6c57cfd" translate="yes" xml:space="preserve">
          <source>@Mark as you mentioned it was the space character that caused issues for me.</source>
          <target state="translated">@Mark 正如你提到的那样,是空间角色给我带来了问题。</target>
        </trans-unit>
        <trans-unit id="6160d41657d10aeaba77bd55b49384004d52ce82" translate="yes" xml:space="preserve">
          <source>A more robust method that can deal with all characters would be to use a CLR aggregate. However applying an ordering to the concatenated elements is more difficult with this approach.</source>
          <target state="translated">一个可以处理所有字符的更稳健的方法是使用CLR聚合。然而,用这种方法对串联的元素进行排序是比较困难的。</target>
        </trans-unit>
        <trans-unit id="5729230fd34c948da032f658f46c5c94e7048f63" translate="yes" xml:space="preserve">
          <source>About J Hardiman's answer, how about:</source>
          <target state="translated">关于J Hardiman的回答,怎么样。</target>
        </trans-unit>
        <trans-unit id="7d7389bebbe158d6a9f7832c6fbd182a834abfba" translate="yes" xml:space="preserve">
          <source>All credit for this goes to here:
&lt;a href=&quot;https://social.msdn.microsoft.com/Forums/sqlserver/en-US/9508abc2-46e7-4186-b57f-7f368374e084/replicating-groupconcat-function-of-mysql-in-sql-server?forum=transactsql&quot;&gt;https://social.msdn.microsoft.com/Forums/sqlserver/en-US/9508abc2-46e7-4186-b57f-7f368374e084/replicating-groupconcat-function-of-mysql-in-sql-server?forum=transactsql&lt;/a&gt;</source>
          <target state="translated">值得一提的是： &lt;a href=&quot;https://social.msdn.microsoft.com/Forums/sqlserver/en-US/9508abc2-46e7-4186-b57f-7f368374e084/replicating-groupconcat-function-of-mysql-in-sql-server?forum=transactsql&quot;&gt;https&lt;/a&gt; ： //social.msdn.microsoft.com/Forums/sqlserver/en-US/9508abc2-46e7-4186-b57f-7f368374e084/replicating-groupconcat-function-of-mysql-in- sql-server？forum = transactsql</target>
        </trans-unit>
        <trans-unit id="4af76c2fb8a99de0f3e03f2c205318b288fe77a4" translate="yes" xml:space="preserve">
          <source>And yields: A, B, C, D</source>
          <target state="translated">和收益率。A、B、C、D</target>
        </trans-unit>
        <trans-unit id="6352c4fd34811be31e5d2b482d4bc25ea6bd5eb6" translate="yes" xml:space="preserve">
          <source>Anyway, thanks a lot guys cuz it saved me quite some time :)</source>
          <target state="translated">无论如何,谢谢你们,因为它为我节省了不少时间:)</target>
        </trans-unit>
        <trans-unit id="83613f5e6cbdefaed5d651c695c5a68a86898235" translate="yes" xml:space="preserve">
          <source>By the way, is the use of &quot;Surname&quot; a typo or am i not understanding a concept here?</source>
          <target state="translated">顺便问一下,&quot;姓 &quot;的使用是打错了,还是我不明白一个概念?</target>
        </trans-unit>
        <trans-unit id="4d0e8718df02f20219b882b9689c76e81cb2b2ed" translate="yes" xml:space="preserve">
          <source>Concatenates the values of string expressions and places separator
  values between them. The separator is not added at the end of string.</source>
          <target state="translated">将字符串表达式的值聚合起来,并在它们之间放置分隔符值。分隔符不加在字符串的末尾。</target>
        </trans-unit>
        <trans-unit id="52c2d7d57dddc87cff6f0810a6971bbc686000bc" translate="yes" xml:space="preserve">
          <source>FOR XML could not serialize the data ... because it
  contains a character (0x001D) which is not allowed in XML.</source>
          <target state="translated">FOR XML无法对数据进行序列化.....因为它包含一个XML中不允许的字符(0x001D)。</target>
        </trans-unit>
        <trans-unit id="9206e5c5a18de3ac29f3799ecc4a5abfc9bcf640" translate="yes" xml:space="preserve">
          <source>For my fellow Googlers out there, here's a very simple plug-and-play solution that worked for me after struggling with the more complex solutions for a while:</source>
          <target state="translated">对于我的Googer们来说,这里有一个非常简单的即插即用的解决方案,在我纠结了一段时间后,这个方案对我来说很有效。</target>
        </trans-unit>
        <trans-unit id="21dba4e6ffcd019fd5e5ab54062b071f1dfdd29c" translate="yes" xml:space="preserve">
          <source>Have a look at the &lt;a href=&quot;https://github.com/orlando-colamatteo/ms-sql-server-group-concat-sqlclr&quot;&gt;GROUP_CONCAT&lt;/a&gt; project on Github, I think I does exactly what you are searching for:</source>
          <target state="translated">看看Github上的&lt;a href=&quot;https://github.com/orlando-colamatteo/ms-sql-server-group-concat-sqlclr&quot;&gt;GROUP_CONCAT&lt;/a&gt;项目，我想我正是您要搜索的内容：</target>
        </trans-unit>
        <trans-unit id="1a226e24b590874cd470995542a34ebfab3965d1" translate="yes" xml:space="preserve">
          <source>I have almost no experience using UDFs, stored procedures, or anything like that, just straight-up SQL, so please err on the side of too much explanation :)</source>
          <target state="translated">我几乎没有使用UDFs、存储过程之类的经验,只是直接使用SQL,所以请不要过多的解释。)</target>
        </trans-unit>
        <trans-unit id="8ee0e13362647e606655869b4bf94d05738f24eb" translate="yes" xml:space="preserve">
          <source>I may be a bit late to the party but this method works for me and is easier than the COALESCE method.</source>
          <target state="translated">我可能有点晚了,但这个方法对我来说很有效,而且比COALESCE方法更容易。</target>
        </trans-unit>
        <trans-unit id="44dc4d7f2046e9293d09a09c6571a7f94580d18e" translate="yes" xml:space="preserve">
          <source>I'm trying to migrate a MySQL-based app over to Microsoft SQL Server 2005 (not by choice, but that's life).</source>
          <target state="translated">我正在尝试将一个基于MySQL的应用程序迁移到Microsoft SQL Server 2005上(不是自愿的,但这就是生活)。</target>
        </trans-unit>
        <trans-unit id="cef880a4981d1c1a1aae202362e8ac677adf40d2" translate="yes" xml:space="preserve">
          <source>I've tested this using a query that looks like:</source>
          <target state="translated">我用一个类似于这样的查询进行了测试。</target>
        </trans-unit>
        <trans-unit id="aa6ca4aa0f75a56018a351676d87f8028d4df625" translate="yes" xml:space="preserve">
          <source>In the original app, we used &lt;em&gt;almost&lt;/em&gt; entirely ANSI-SQL compliant statements, with one significant exception -- we used MySQL's &lt;code&gt;group_concat&lt;/code&gt; function fairly frequently.</source>
          <target state="translated">在原始应用程序中，我们&lt;em&gt;几乎&lt;/em&gt;完全使用&lt;em&gt;了&lt;/em&gt;符合ANSI-SQL的语句，但有一个明显的例外-我们相当频繁地使用MySQL的 &lt;code&gt;group_concat&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="6bb6bb50dff140b0d9f47b202d3e183eaf2876d8" translate="yes" xml:space="preserve">
          <source>No REAL easy way to do this. Lots of ideas out there, though.</source>
          <target state="translated">没有真正简单的方法可以做到这一点。外面有很多的想法,虽然。</target>
        </trans-unit>
        <trans-unit id="873c56e89931a61f8d8175e170ae0e5ead7df9e6" translate="yes" xml:space="preserve">
          <source>Notice that I had to convert the ID into a VARCHAR in order to concatenate it as a string. If you don't have to do that, here's an even simpler version:</source>
          <target state="translated">请注意,我必须将ID转换为VARCHAR,以便将其串联起来。如果你不需要这样做,这里有一个更简单的版本。</target>
        </trans-unit>
        <trans-unit id="143fbbb3a0788a36235a402457ca7dc0e65eda78" translate="yes" xml:space="preserve">
          <source>Or a version that works correctly if the data might contain characters such as &lt;code&gt;&amp;lt;&lt;/code&gt;</source>
          <target state="translated">或一个版本，如果数据中可能包含 &lt;code&gt;&amp;lt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f1a3fe45e8c94aabd454aff0f6c160bf0cc04d6" translate="yes" xml:space="preserve">
          <source>Possibly too late to be of benefit now, but is this not the easiest way to do things?</source>
          <target state="translated">也许现在可能已经来不及了,但这不是最简单的方法吗?</target>
        </trans-unit>
        <trans-unit id="1c16836edab7a1535eb88876a7836a794c63c282" translate="yes" xml:space="preserve">
          <source>Simulating group_concat MySQL function in Microsoft SQL Server 2005</source>
          <target state="translated">模拟Microsoft SQL Server 2005中的group_concat MySQL函数</target>
        </trans-unit>
        <trans-unit id="09d40e81d19b1e95fec4fd2473bb17513eadc836" translate="yes" xml:space="preserve">
          <source>So what I'd like to know is: Is it possible to write, say, a user-defined function in SQL Server which emulates the functionality of &lt;code&gt;group_concat&lt;/code&gt;?</source>
          <target state="translated">因此，我想知道的是：是否可以在SQL Server中编写一个模仿 &lt;code&gt;group_concat&lt;/code&gt; 功能的用户定义函数？</target>
        </trans-unit>
        <trans-unit id="842eef01dcec88af855195b7574a38e3641102d5" translate="yes" xml:space="preserve">
          <source>The concatenated elements can be ordered by appending &lt;code&gt;WITHIN GROUP (ORDER BY some_expression)&lt;/code&gt;</source>
          <target state="translated">可以通过添加 &lt;code&gt;WITHIN GROUP (ORDER BY some_expression)&lt;/code&gt; 来对连接的元素进行排序。</target>
        </trans-unit>
        <trans-unit id="45e4ef9817000ecf581304434d6dc0a67a56c0df" translate="yes" xml:space="preserve">
          <source>The method of assigning to a variable is &lt;a href=&quot;https://stackoverflow.com/questions/15138593/nvarchar-concatenation-index-nvarcharmax-inexplicable-behavior/15163136#15163136&quot;&gt;not guaranteed&lt;/a&gt; and should be avoided in production code.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/15138593/nvarchar-concatenation-index-nvarcharmax-inexplicable-behavior/15163136#15163136&quot;&gt;不能保证&lt;/a&gt;分配变量的方法，在生产代码中应避免使用。</target>
        </trans-unit>
        <trans-unit id="51cb617b7da3cb66dd29d2ed6fc1c3ace246074e" translate="yes" xml:space="preserve">
          <source>This can fail in some circumstances however. e.g. if the data to be concatenated contains &lt;code&gt;CHAR(29)&lt;/code&gt; you see</source>
          <target state="translated">但是，在某些情况下这可能会失败。 例如，如果要连接的数据包含 &lt;code&gt;CHAR(29)&lt;/code&gt; ,则会看到</target>
        </trans-unit>
        <trans-unit id="f66c1ce437021568d46727bb178a52cd55e37e4d" translate="yes" xml:space="preserve">
          <source>This project contains a set of SQLCLR User-defined Aggregate functions (SQLCLR UDAs) that collectively offer similar functionality to the MySQL GROUP_CONCAT function. There are multiple functions to ensure the best performance based on the functionality required...</source>
          <target state="translated">本项目包含一组SQLCLR用户定义的聚合函数(SQLCLR UDAs),它们共同提供了与MySQL GROUP_CONCAT函数类似的功能。有多个函数,以确保基于所需功能的最佳性能.....</target>
        </trans-unit>
        <trans-unit id="3fc06af23d926bb1be64bba4c3e59eb507dc7733" translate="yes" xml:space="preserve">
          <source>To concatenate all the project manager names from projects that have multiple project managers write:</source>
          <target state="translated">要把有多个项目经理的项目中的所有项目经理名字串联起来,写出:</target>
        </trans-unit>
        <trans-unit id="9828a5d6c3d9b61c4190fae514e554aef1f9a974" translate="yes" xml:space="preserve">
          <source>Tried these but for my purposes in MS SQL Server 2005 the following was most useful, which I found at &lt;a href=&quot;http://www.xaprb.com/blog/2005/09/28/simulating-the-group-concat-function/&quot;&gt;xaprb&lt;/a&gt;</source>
          <target state="translated">尝试了这些，但出于我在MS SQL Server 2005中的目的，以下是最有用的，我在&lt;a href=&quot;http://www.xaprb.com/blog/2005/09/28/simulating-the-group-concat-function/&quot;&gt;xaprb上&lt;/a&gt;找到了</target>
        </trans-unit>
        <trans-unit id="18d0b4dbd12e5b20f007631a5d61ec4395c2771e" translate="yes" xml:space="preserve">
          <source>With the below code you have to set PermissionLevel=External on your project properties before you deploy, and change the database to trust external code (be sure to read elsewhere about security risks and alternatives [like certificates]) by running &quot;ALTER DATABASE database_name SET TRUSTWORTHY ON&quot;.</source>
          <target state="translated">通过下面的代码,你必须在部署前在项目属性上设置PermissionLevel=External,并通过运行 &quot;ALTER DATABASE database_name SET TRUSTWORTHY ON &quot;将数据库改为信任外部代码(请务必阅读其他地方的安全风险和替代方案[如证书])。</target>
        </trans-unit>
        <trans-unit id="37b8dabf0b7bfae1c2eecb47a6afcd8bc92cc94c" translate="yes" xml:space="preserve">
          <source>returns:</source>
          <target state="translated">returns:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
