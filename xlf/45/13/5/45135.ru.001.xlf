<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/45135">
    <body>
      <group id="45135">
        <trans-unit id="f428ce5ef92d9931592953c0123bb545bb12afa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libmysqlclient&lt;/code&gt; - static, for the sake of the example (you'd prefer the shared library, of course, as the &lt;code&gt;libmysqlclient&lt;/code&gt; is huge); in &lt;code&gt;/usr/local/lib&lt;/code&gt;; and dependent on stuff from &lt;code&gt;libz&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;libmysqlclient&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - статический, для примера (вы бы предпочли разделяемую библиотеку, конечно, так как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libmysqlclient&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; огромен); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;/usr/local/lib&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;и зависит от вещей из &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb8f620a3b063d96d51536802c9af48d547aa455" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libz&lt;/code&gt; (dynamic)</source>
          <target state="translated">&lt;code&gt;libz&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (динамический)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63835de2c0f0239a277b3334395de0b0fc436b61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myprog.o&lt;/code&gt; - containing &lt;code&gt;main()&lt;/code&gt; function, dependent on &lt;code&gt;libmysqlclient&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;myprog.o&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - содержит &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функцию &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , зависящую от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libmysqlclient&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10cf45a451826202971b4978982a610c011eecb5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Careful !&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Осторожный !&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63b47ce03e37bab833afec545847cce9f3d3e60a" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;(See the history on this answer to get the more elaborate text, but I now think it's easier for the reader to see real command lines).&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Посмотрите историю этого ответа, чтобы получить более сложный текст, но теперь я думаю, что читателю легче увидеть реальные командные строки).&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="09ed32d869293c498c0ce455422423db3a3e918a" translate="yes" xml:space="preserve">
          <source>A quick tip that tripped me up: if you're invoking the linker as &quot;gcc&quot; or &quot;g++&quot;, then using &quot;--start-group&quot; and &quot;--end-group&quot; won't pass those options through to the linker -- nor will it flag an error. It will just fail the link with undefined symbols if you had the library order wrong.</source>
          <target state="translated">Быстрый совет,который меня сбил с толку:если вы вызываете компоновщик как &quot;gcc&quot; или &quot;g++&quot;,то использование &quot;--start-group&quot; и &quot;--end-group&quot; не передаст эти опции компоновщику --и не поставит флажок на ошибку.Он просто не передаст ссылку с неопределёнными символами,если вы ошиблись с порядком в библиотеке.</target>
        </trans-unit>
        <trans-unit id="25aeb5287915d9c79ceb0ec8872c89f023aa56c1" translate="yes" xml:space="preserve">
          <source>Another alternative would be to specify the list of libraries twice:</source>
          <target state="translated">Другой альтернативой было бы дважды указать список библиотек:</target>
        </trans-unit>
        <trans-unit id="c548045874266bc12e394c77b665b6a4e8cab176" translate="yes" xml:space="preserve">
          <source>Common files shared by all below commands</source>
          <target state="translated">Общие файлы,общие для всех нижеперечисленных команд</target>
        </trans-unit>
        <trans-unit id="dea318ed487ef1d845e833afa39827b8bb59f283" translate="yes" xml:space="preserve">
          <source>Dependencies of static libraries against each other work the same - the library that needs symbols must be first, then the library that resolves the symbol.</source>
          <target state="translated">Зависимости статических библиотек друг от друга работают одинаково-библиотека,которой нужны символы,должна быть сначала библиотекой,которая разрешает символ.</target>
        </trans-unit>
        <trans-unit id="4f34ac5f81e160c30f66af2daaf201ac7fcd37f0" translate="yes" xml:space="preserve">
          <source>Depending on different linkers HP/Intel/GCC/SUN/SGI/IBM/etc you can get unresolved functions/variables etc, on some platforms you have to list libraries twice.</source>
          <target state="translated">В зависимости от различных линковщиков HPIntelGCCSUNSGIIBMetc можно получить неразрешенные функции-переменные и т.д.,на некоторых платформах библиотеки приходится перечислять дважды.</target>
        </trans-unit>
        <trans-unit id="171a4e2465d5bcd48803208b3f1e01d85533b7fc" translate="yes" xml:space="preserve">
          <source>Doing this, you don't have to bother with the right sequence since the reference will be resolved in the second block.</source>
          <target state="translated">Делая это,вам не нужно беспокоиться о правильной последовательности,так как ссылка будет разрешена во втором блоке.</target>
        </trans-unit>
        <trans-unit id="333210bab0928a7b982dcd4cd2ad7fef17c0b72f" translate="yes" xml:space="preserve">
          <source>For the most part we use structured hierarchy of libraries, core, platform, different layers of abstraction, but for some systems you still have to play with the order in the link command.</source>
          <target state="translated">По большей части мы используем структурированную иерархию библиотек,ядра,платформы,различные уровни абстракции,но для некоторых систем вам все равно придется играть с порядком в команде link.</target>
        </trans-unit>
        <trans-unit id="f0e07f98a7cfbc84ffcc151ea5fe1058d61be1f6" translate="yes" xml:space="preserve">
          <source>Here is an example of the implications if you miss specifying the dependencies for &lt;code&gt;libb.so&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот пример последствий, если вы пропустите указание зависимостей для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libb.so&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23de810391953f2de13f49aab8930e22f2ea8562" translate="yes" xml:space="preserve">
          <source>Here's an example to make it clear how things work with GCC when &lt;strong&gt;static&lt;/strong&gt; libraries are involved. So let's assume we have the following scenario:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот пример, чтобы прояснить, как работают GCC, когда &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;задействованы &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;статические&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; библиотеки. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, давайте предположим, что у нас есть следующий сценарий:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="743ccddd9960d7fb15777a6f8678b4d3f9d2ba26" translate="yes" xml:space="preserve">
          <source>How do we link this? (Note: examples from compiling on Cygwin using gcc 4.3.4)</source>
          <target state="translated">Как нам связать это? (Примечание:примеры из компиляции на Cygwin с использованием gcc 4.3.4)</target>
        </trans-unit>
        <trans-unit id="653389e15f70825bc7d2da28dc20db54f5c2ddd3" translate="yes" xml:space="preserve">
          <source>I have seen this a lot, some of our modules link in excess of a 100 libraries of our code plus system &amp;amp; 3rd party libs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я видел это много, некоторые из наших модулей связывают более 100 библиотек нашего кода плюс системные и сторонние библиотеки.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66451297aa30173969730b142d889fb5da89f07d" translate="yes" xml:space="preserve">
          <source>If a static library depends on another library, but the other library again depends on the former library, there is a cycle. You can resolve this by enclosing the cyclically dependent libraries by &lt;code&gt;-(&lt;/code&gt; and &lt;code&gt;-)&lt;/code&gt;, such as &lt;code&gt;-( -la -lb -)&lt;/code&gt; (you may need to escape the parens, such as &lt;code&gt;-\(&lt;/code&gt; and &lt;code&gt;-\)&lt;/code&gt;). The linker then searches those enclosed lib multiple times to ensure cycling dependencies are resolved. Alternatively, you can specify the libraries multiple times, so each is before one another: &lt;code&gt;-la -lb -la&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если статическая библиотека зависит от другой библиотеки, но другая библиотека снова зависит от предыдущей библиотеки, существует цикл. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете решить эту проблему, заключив циклически зависимые библиотеки в &lt;/font&gt; &lt;code&gt;-( -la -lb -)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-(&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , такие как &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;- (-la -lb -)&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (вам может понадобиться экранировать символы, такие как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-\(&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-\)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем компоновщик просматривает эти вложенные библиотеки несколько раз, чтобы убедиться, что циклические зависимости разрешены. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В качестве альтернативы, вы можете указывать библиотеки несколько раз, так что каждая из них находится друг перед другом: &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-la -lb -la&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5bd339a46b997a32ff6e4baec079e5a5a4aa950e" translate="yes" xml:space="preserve">
          <source>If you add &lt;code&gt;-Wl,--start-group&lt;/code&gt; to the linker flags it does not care which order they're in or if there are circular dependencies.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы добавляете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-Wl,--start-group&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; к флагам компоновщика, то все равно, в каком порядке они находятся, или существуют циклические зависимости.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5b03f21e7f423fa914cf16a2c6046eb385028c9" translate="yes" xml:space="preserve">
          <source>If you now look into what dependencies the binary has, you note the binary itself depends also on &lt;code&gt;libd&lt;/code&gt;, not just &lt;code&gt;libb&lt;/code&gt; as it should. The binary will need to be relinked if &lt;code&gt;libb&lt;/code&gt; later depends on another library, if you do it this way. And if someone else loads &lt;code&gt;libb&lt;/code&gt; using &lt;code&gt;dlopen&lt;/code&gt; at runtime (think of loading plugins dynamically), the call will fail as well. So the &lt;code&gt;&quot;right&quot;&lt;/code&gt; really should be a &lt;code&gt;wrong&lt;/code&gt; as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы теперь посмотрите на зависимости, которые есть у двоичного &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libd&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вы заметите, что сам двоичный файл зависит также от &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;libd&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , а не только от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libb&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как и должно быть. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Бинарный файл нужно будет перекомпоновать, если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libb&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; позже будет зависеть от другой библиотеки, если вы сделаете это таким образом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;И если кто - &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;то загружает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libb&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с использованием &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dlopen&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; во время выполнения (думаю загрузки плагинов динамически), то вызов будет не в состоянии, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;а также. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;&quot;right&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; действительно должно быть и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;wrong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94d55743d05ff930ed58f15c5d73240788859963" translate="yes" xml:space="preserve">
          <source>It is not correct to omit the dependency of &lt;code&gt;b.so&lt;/code&gt; against &lt;code&gt;d.so&lt;/code&gt; when creating the former. You will be required to specify the library when linking &lt;code&gt;a&lt;/code&gt; then, but &lt;code&gt;a&lt;/code&gt; doesn't really need the integer &lt;code&gt;b&lt;/code&gt; itself, so it should not be made to care about &lt;code&gt;b&lt;/code&gt;'s own dependencies.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;b.so&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; опускать зависимость &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;b.so&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; от &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d.so&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; при создании первого. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы должны будете указать библиотеку при связывании &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; затем, но &lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; на&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; самом деле не нужно само целое число &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поэтому не следует заботиться о &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;собственных зависимостях &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad3a6018335abaad797709de3c3bd7c1ed7086db" translate="yes" xml:space="preserve">
          <source>It's the same here - the libraries must follow the object files of the program. The difference here compared with static libraries is that you need not care about the dependencies of the libraries against each other, because &lt;em&gt;dynamic libraries sort out their dependencies themselves&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Здесь то же самое - библиотеки должны следовать объектным файлам программы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Разница здесь по сравнению со статическими библиотеками заключается в том, что вам не нужно заботиться о зависимости библиотек друг от друга, потому что &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;динамические библиотеки сами разбирают свои зависимости&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb587ada83d8e1a8ee9481f30ef456fbc3d056e4" translate="yes" xml:space="preserve">
          <source>Link order certainly does matter, at least on some platforms. I have seen crashes for applications linked with libraries in wrong order (where wrong means A linked before B but B depends on A).</source>
          <target state="translated">Порядок соединения,безусловно,имеет значение,по крайней мере,на некоторых платформах.Я видел падения для приложений,связанных с библиотеками в неправильном порядке (где неправильное означает A,связанное до B,но B зависит от A).</target>
        </trans-unit>
        <trans-unit id="552a5faa80544adaaae47fe267abe592896ecf9a" translate="yes" xml:space="preserve">
          <source>Linking to dynamic libraries</source>
          <target state="translated">Связь с динамическими библиотеками</target>
        </trans-unit>
        <trans-unit id="39f7c9b810cd4f0b4f979ec37f8bac261b04af83" translate="yes" xml:space="preserve">
          <source>Linking to static libraries</source>
          <target state="translated">Связь со статическими библиотеками</target>
        </trans-unit>
        <trans-unit id="7ffdfc7bf8f19a1d2378f568466869dee697675c" translate="yes" xml:space="preserve">
          <source>My old lecturer used to say, &quot;&lt;em&gt;high cohesion &amp;amp; low coupling&lt;/em&gt;&quot;, it&amp;rsquo;s still true today.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мой старый лектор говорил: &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;высокая сплоченность и низкая связь&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo;, это все еще верно сегодня.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="675e8c1c21c1c57ebddfb73dbfe969aabf3d6f4c" translate="yes" xml:space="preserve">
          <source>On Qt this means adding:</source>
          <target state="translated">На Qt это означает добавление:</target>
        </trans-unit>
        <trans-unit id="8ebbbd7ff214e3a23f0c282805225887043056f4" translate="yes" xml:space="preserve">
          <source>Once you hit upon a solution document it so the next developer does not have to work it out again.</source>
          <target state="translated">Как только вы наткнулись на документ с решением,следующему разработчику больше не придется его отрабатывать.</target>
        </trans-unit>
        <trans-unit id="0f9dc4dd6ead5ab8bb73a42fddcc77ba01505898" translate="yes" xml:space="preserve">
          <source>Saves loads of time messing about and it doesn't seem to slow down linking much (which takes far less time than compilation anyway).</source>
          <target state="translated">Экономит кучу путаницы во времени и,похоже,не сильно замедляет линковку (что в любом случае занимает намного меньше времени,чем компиляция).</target>
        </trans-unit>
        <trans-unit id="40dedb1487d80068341756be595421015f98b8e8" translate="yes" xml:space="preserve">
          <source>Some recent distributions apparently default to using the &lt;code&gt;--as-needed&lt;/code&gt; linker flag, which enforces that the program's object files come before the dynamic libraries. If that flag is passed, the linker will not link to libraries that are not actually needed by the executable (and it detects this from left to right). My recent archlinux distribution doesn't use this flag by default, so it didn't give an error for not following the correct order.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Некоторые недавние дистрибутивы, по-видимому, по умолчанию используют &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;флаг компоновщика &lt;/font&gt;&lt;/font&gt; &lt;code&gt;--as-needed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который предписывает, чтобы объектные файлы программы предшествовали динамическим библиотекам. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если этот флаг передан, компоновщик не будет ссылаться на библиотеки, которые на самом деле не нужны исполняемому файлу (и он обнаруживает это слева направо). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Мой недавний дистрибутив archlinux по умолчанию не использует этот флаг, поэтому он не выдает ошибку за несоблюдение правильного порядка.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ed67a44705ea0a77cee20b5704065a990d8e5c6" translate="yes" xml:space="preserve">
          <source>The GNU ld linker is a so-called smart linker.  It will keep track of the functions used by preceding static libraries, permanently tossing out those functions that are not used from its lookup tables.  The result is that if you link a static library too early, then the functions in that library are no longer available to static libraries later on the link line.</source>
          <target state="translated">Линкер GNU ld-это так называемый умный линкер.Он будет отслеживать функции,используемые предыдущими статическими библиотеками,навсегда выкидывая из своих таблиц поиска те функции,которые не используются.В результате,если вы компонуете статическую библиотеку слишком рано,то функции в этой библиотеке больше не будут доступны для статических библиотек позже в строке компоновки.</target>
        </trans-unit>
        <trans-unit id="1bf3a7a5feb37770570198278fa890ec8a7df94a" translate="yes" xml:space="preserve">
          <source>The linker searches from left to right, and notes unresolved symbols as it go. If a library resolves the symbol, it takes the object files of that library to resolve the symbol (b.o out of libb.a in this case).</source>
          <target state="translated">Линкер ищет слева направо и отмечает неразрешенные символы в процессе работы.Если библиотека разрешает символ,она берет объектные файлы этой библиотеки для разрешения символа (в данном случае b.o из libb.a).</target>
        </trans-unit>
        <trans-unit id="f0791ce3c2f32b1be4cc132d1ddc378cad14eeb1" translate="yes" xml:space="preserve">
          <source>The order within a group is important !
Here's an example: a debug library has a debug routine, but the non-debug
library has a weak version of the same. You must put the debug library
FIRST in the group or you will resolve to the non-debug version.</source>
          <target state="translated">Порядок внутри группы важен ! Вот пример:отладочная библиотека имеет отладочную рутину,а не отладочная-слабую версию.Вы должны поместить отладочную библиотеку ПЕРВЫМ в группу,иначе вы решите,что это не отладочная версия.</target>
        </trans-unit>
        <trans-unit id="a7870b7aaacd3dd70151c322bee18b80dfe8b6f8" translate="yes" xml:space="preserve">
          <source>The typical UNIX linker works from left to right, so put all your dependent libraries on the left, and the ones that satisfy those dependencies on the right of the link line.  You may find that some libraries depend on others while at the same time other libraries depend on them.  This is where it gets complicated.  When it comes to circular references, fix your code!</source>
          <target state="translated">Типичный компоновщик UNIX работает слева направо,поэтому все ваши зависимые библиотеки располагаются слева,а те,которые удовлетворяют этим зависимостям,-справа от строки компоновки.Вы можете обнаружить,что некоторые библиотеки зависят от других,в то время как другие библиотеки зависят от них.Здесь все усложняется.Когда дело доходит до круговых ссылок,исправьте свой код!</target>
        </trans-unit>
        <trans-unit id="d8034293152f97e3102c4dc47a7ee7fd5f63973c" translate="yes" xml:space="preserve">
          <source>Why does the order in which libraries are linked sometimes cause errors in GCC</source>
          <target state="translated">Почему порядок компоновки библиотек иногда приводит к ошибкам в GCC</target>
        </trans-unit>
        <trans-unit id="9d6847221bf9641ed18510dd9c8dbb866bd31f6c" translate="yes" xml:space="preserve">
          <source>Why does the order in which libraries are linked sometimes cause errors in GCC?</source>
          <target state="translated">Почему порядок компоновки библиотек иногда приводит к ошибкам в GCC?</target>
        </trans-unit>
        <trans-unit id="06d6f8381b934aa5122f07fa38d257d4a60c1f31" translate="yes" xml:space="preserve">
          <source>You may can use -Xlinker option.</source>
          <target state="translated">Вы можете использовать опцию -Xlinker.</target>
        </trans-unit>
        <trans-unit id="9778abb1e9adcf293232303583978f6128849bdb" translate="yes" xml:space="preserve">
          <source>You need to precede each library in the group list with -Xlinker</source>
          <target state="translated">Каждой библиотеке в списке групп необходимо предшествовать -Xlinker.</target>
        </trans-unit>
        <trans-unit id="3c0ee91ef5fb4b45ab9e5ffca63e302f4ef40dff" translate="yes" xml:space="preserve">
          <source>You need to write them as &quot;-Wl,--start-group&quot; etc. to tell GCC to pass the argument through to the linker.</source>
          <target state="translated">Нужно написать их как &quot;-Wl,--start-group&quot; и т.д.,чтобы сказать GCC,чтобы он передал аргумент компоновщику.</target>
        </trans-unit>
        <trans-unit id="75008c094d5bb1cdd848888ece2bc12cbe477679" translate="yes" xml:space="preserve">
          <source>is ALMOST equal to</source>
          <target state="translated">АЛМОСТ равен</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
