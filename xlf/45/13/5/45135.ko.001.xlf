<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/45135">
    <body>
      <group id="45135">
        <trans-unit id="f428ce5ef92d9931592953c0123bb545bb12afa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libmysqlclient&lt;/code&gt; - static, for the sake of the example (you'd prefer the shared library, of course, as the &lt;code&gt;libmysqlclient&lt;/code&gt; is huge); in &lt;code&gt;/usr/local/lib&lt;/code&gt;; and dependent on stuff from &lt;code&gt;libz&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;libmysqlclient&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 예제를 위해 정적입니다 ( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libmysqlclient&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;크므&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 공유 라이브러리를 선호합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;/usr/local/lib&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 &lt;/font&gt; &lt;code&gt;libz&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것들에 의존&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eb8f620a3b063d96d51536802c9af48d547aa455" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libz&lt;/code&gt; (dynamic)</source>
          <target state="translated">&lt;code&gt;libz&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (동적)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63835de2c0f0239a277b3334395de0b0fc436b61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myprog.o&lt;/code&gt; - containing &lt;code&gt;main()&lt;/code&gt; function, dependent on &lt;code&gt;libmysqlclient&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;myprog.o&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt; &lt;code&gt;libmysqlclient&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의존 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포함&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10cf45a451826202971b4978982a610c011eecb5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Careful !&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;조심해!&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63b47ce03e37bab833afec545847cce9f3d3e60a" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;(See the history on this answer to get the more elaborate text, but I now think it's easier for the reader to see real command lines).&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(보다 정교한 텍스트를 얻으려면이 답변의 기록을 참조하십시오.하지만 독자가 실제 명령 줄을 보는 것이 더 쉽다고 생각합니다).&lt;/font&gt;&lt;/font&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="09ed32d869293c498c0ce455422423db3a3e918a" translate="yes" xml:space="preserve">
          <source>A quick tip that tripped me up: if you're invoking the linker as &quot;gcc&quot; or &quot;g++&quot;, then using &quot;--start-group&quot; and &quot;--end-group&quot; won't pass those options through to the linker -- nor will it flag an error. It will just fail the link with undefined symbols if you had the library order wrong.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;링커를 &quot;gcc&quot;또는 &quot;g ++&quot;로 호출하는 경우 &quot;--start-group&quot;및 &quot;--end-group&quot;을 사용하면 해당 옵션을 링커-오류를 표시하지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라이브러리 순서가 잘못되면 정의되지 않은 기호가있는 링크가 실패합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="25aeb5287915d9c79ceb0ec8872c89f023aa56c1" translate="yes" xml:space="preserve">
          <source>Another alternative would be to specify the list of libraries twice:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 대안은 라이브러리 목록을 두 번 지정하는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c548045874266bc12e394c77b665b6a4e8cab176" translate="yes" xml:space="preserve">
          <source>Common files shared by all below commands</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래의 모든 명령이 공유하는 공통 파일&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dea318ed487ef1d845e833afa39827b8bb59f283" translate="yes" xml:space="preserve">
          <source>Dependencies of static libraries against each other work the same - the library that needs symbols must be first, then the library that resolves the symbol.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 라이브러리의 서로에 대한 종속성은 동일하게 작동합니다. 즉, 기호가 필요한 라이브러리가 먼저 있어야하고, 그런 다음 기호를 해석하는 라이브러리가되어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4f34ac5f81e160c30f66af2daaf201ac7fcd37f0" translate="yes" xml:space="preserve">
          <source>Depending on different linkers HP/Intel/GCC/SUN/SGI/IBM/etc you can get unresolved functions/variables etc, on some platforms you have to list libraries twice.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 링커 HP / Intel / GCC / SUN / SGI / IBM / etc에 따라 일부 플랫폼에서 라이브러리를 두 번 나열해야하는 미해결 함수 / 변수 등을 얻을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="171a4e2465d5bcd48803208b3f1e01d85533b7fc" translate="yes" xml:space="preserve">
          <source>Doing this, you don't have to bother with the right sequence since the reference will be resolved in the second block.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 작업을 수행하면 참조가 두 번째 블록에서 해결되므로 올바른 순서로 신경 쓸 필요가 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="333210bab0928a7b982dcd4cd2ad7fef17c0b72f" translate="yes" xml:space="preserve">
          <source>For the most part we use structured hierarchy of libraries, core, platform, different layers of abstraction, but for some systems you still have to play with the order in the link command.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 경우 라이브러리, 코어, 플랫폼, 다른 추상화 계층 구조 계층을 사용하지만 일부 시스템의 경우 여전히 link 명령에서 순서를 따라야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0e07f98a7cfbc84ffcc151ea5fe1058d61be1f6" translate="yes" xml:space="preserve">
          <source>Here is an example of the implications if you miss specifying the dependencies for &lt;code&gt;libb.so&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 &lt;/font&gt; &lt;code&gt;libb.so&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대한 종속성을 지정하지 않은 경우의 의미에 대한 예입니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="23de810391953f2de13f49aab8930e22f2ea8562" translate="yes" xml:space="preserve">
          <source>Here's an example to make it clear how things work with GCC when &lt;strong&gt;static&lt;/strong&gt; libraries are involved. So let's assume we have the following scenario:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라이브러리가 관련된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 GCC와 함께 작동하는 방식을 명확하게 보여주는 예는 다음과 같습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 시나리오가 있다고 가정 해 봅시다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="743ccddd9960d7fb15777a6f8678b4d3f9d2ba26" translate="yes" xml:space="preserve">
          <source>How do we link this? (Note: examples from compiling on Cygwin using gcc 4.3.4)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것을 어떻게 연결합니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(참고 : gcc 4.3.4를 사용하여 Cygwin에서 컴파일 한 예)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="653389e15f70825bc7d2da28dc20db54f5c2ddd3" translate="yes" xml:space="preserve">
          <source>I have seen this a lot, some of our modules link in excess of a 100 libraries of our code plus system &amp;amp; 3rd party libs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나는 이것을 많이 보았습니다. 우리 모듈 중 일부는 코드와 시스템 및 타사 라이브러리의 100 라이브러리를 초과하여 연결됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66451297aa30173969730b142d889fb5da89f07d" translate="yes" xml:space="preserve">
          <source>If a static library depends on another library, but the other library again depends on the former library, there is a cycle. You can resolve this by enclosing the cyclically dependent libraries by &lt;code&gt;-(&lt;/code&gt; and &lt;code&gt;-)&lt;/code&gt;, such as &lt;code&gt;-( -la -lb -)&lt;/code&gt; (you may need to escape the parens, such as &lt;code&gt;-\(&lt;/code&gt; and &lt;code&gt;-\)&lt;/code&gt;). The linker then searches those enclosed lib multiple times to ensure cycling dependencies are resolved. Alternatively, you can specify the libraries multiple times, so each is before one another: &lt;code&gt;-la -lb -la&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 라이브러리가 다른 라이브러리에 의존하지만 다른 라이브러리가 다시 이전 라이브러리에 의존하는 경우주기가 있습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-(&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;-)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;-( -la -lb -)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-(&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-)로&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 순환 종속 라이브러리를 묶으면이를 해결할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-\(&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-\)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같이 파 렌스를 이스케이프해야 할 수도 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 링커는 동봉 된 lib를 여러 번 검색하여 순환 종속성이 해결되도록합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 라이브러리를 여러 번 지정할 수 있으므로 각각이 서로 앞에 있습니다 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-la -lb -la&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5bd339a46b997a32ff6e4baec079e5a5a4aa950e" translate="yes" xml:space="preserve">
          <source>If you add &lt;code&gt;-Wl,--start-group&lt;/code&gt; to the linker flags it does not care which order they're in or if there are circular dependencies.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;링커 플래그 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;-Wl,--start-group&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추가하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;순서에 관계없이 또는 순환 종속성이 있는지 상관하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5b03f21e7f423fa914cf16a2c6046eb385028c9" translate="yes" xml:space="preserve">
          <source>If you now look into what dependencies the binary has, you note the binary itself depends also on &lt;code&gt;libd&lt;/code&gt;, not just &lt;code&gt;libb&lt;/code&gt; as it should. The binary will need to be relinked if &lt;code&gt;libb&lt;/code&gt; later depends on another library, if you do it this way. And if someone else loads &lt;code&gt;libb&lt;/code&gt; using &lt;code&gt;dlopen&lt;/code&gt; at runtime (think of loading plugins dynamically), the call will fail as well. So the &lt;code&gt;&quot;right&quot;&lt;/code&gt; really should be a &lt;code&gt;wrong&lt;/code&gt; as well.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바이너리에 어떤 의존성이 있는지 살펴보면 바이너리 자체는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libd&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 뿐만 아니라 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libb&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의존&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 한다는 것을 알 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 방법으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libb&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나중에 다른 라이브러리에 의존하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경우 바이너리를 다시 연결해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 그리고 누군가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 런타임에 &lt;/font&gt; &lt;code&gt;dlopen&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;libb&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로드하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(플러그인을 동적으로로드한다고 생각하면) 호출도 실패합니다. 따라서 &lt;/font&gt; &lt;code&gt;&quot;right&quot;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 실제로 &lt;/font&gt; &lt;code&gt;wrong&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 되어야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94d55743d05ff930ed58f15c5d73240788859963" translate="yes" xml:space="preserve">
          <source>It is not correct to omit the dependency of &lt;code&gt;b.so&lt;/code&gt; against &lt;code&gt;d.so&lt;/code&gt; when creating the former. You will be required to specify the library when linking &lt;code&gt;a&lt;/code&gt; then, but &lt;code&gt;a&lt;/code&gt; doesn't really need the integer &lt;code&gt;b&lt;/code&gt; itself, so it should not be made to care about &lt;code&gt;b&lt;/code&gt;'s own dependencies.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전자를 생성 할 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b.so&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;d.so&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 종속성을 생략하는 것은 올바르지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 링크 할 때 라이브러리를 지정해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음,하지만 &lt;/font&gt; &lt;code&gt;a&lt;/code&gt; 는&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정말 정수를 필요로하지 않는다 &lt;/font&gt; &lt;code&gt;b&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 걱정하게해서는 안된다, 그래서 그 자체 &lt;/font&gt; &lt;code&gt;b&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 자신의 의존성 S '이 (가) 있습니다.&lt;/font&gt;&lt;/font&gt; &lt;code&gt;a&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad3a6018335abaad797709de3c3bd7c1ed7086db" translate="yes" xml:space="preserve">
          <source>It's the same here - the libraries must follow the object files of the program. The difference here compared with static libraries is that you need not care about the dependencies of the libraries against each other, because &lt;em&gt;dynamic libraries sort out their dependencies themselves&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에서도 동일합니다. 라이브러리는 프로그램의 오브젝트 파일을 따라야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 라이브러리와 비교했을 때의 차이점은 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동적 라이브러리가 종속성을 스스로 정렬&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하기 때문에 라이브러리의 종속성에 대해 신경 쓰지 않아도된다는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb587ada83d8e1a8ee9481f30ef456fbc3d056e4" translate="yes" xml:space="preserve">
          <source>Link order certainly does matter, at least on some platforms. I have seen crashes for applications linked with libraries in wrong order (where wrong means A linked before B but B depends on A).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;링크 순서는 적어도 일부 플랫폼에서 중요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라이브러리와 연결된 응용 프로그램이 잘못된 순서로 충돌하는 것을 보았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="552a5faa80544adaaae47fe267abe592896ecf9a" translate="yes" xml:space="preserve">
          <source>Linking to dynamic libraries</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동적 라이브러리에 연결&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39f7c9b810cd4f0b4f979ec37f8bac261b04af83" translate="yes" xml:space="preserve">
          <source>Linking to static libraries</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정적 라이브러리에 연결&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ffdfc7bf8f19a1d2378f568466869dee697675c" translate="yes" xml:space="preserve">
          <source>My old lecturer used to say, &quot;&lt;em&gt;high cohesion &amp;amp; low coupling&lt;/em&gt;&quot;, it&amp;rsquo;s still true today.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예전 강사는 &quot; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;높은 응집력과 낮은 커플 링&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이라고 말 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;했지만 오늘날에도 마찬가지입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="675e8c1c21c1c57ebddfb73dbfe969aabf3d6f4c" translate="yes" xml:space="preserve">
          <source>On Qt this means adding:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Qt에서 이것은 다음을 추가하는 것을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ebbbd7ff214e3a23f0c282805225887043056f4" translate="yes" xml:space="preserve">
          <source>Once you hit upon a solution document it so the next developer does not have to work it out again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;솔루션 문서에 부딪 치면 다음 개발자가 다시 해결하지 않아도됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0f9dc4dd6ead5ab8bb73a42fddcc77ba01505898" translate="yes" xml:space="preserve">
          <source>Saves loads of time messing about and it doesn't seem to slow down linking much (which takes far less time than compilation anyway).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 시간을 낭비하고 링크 속도를 늦추지 않는 것 같습니다 (어쨌든 컴파일보다 시간이 덜 걸립니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40dedb1487d80068341756be595421015f98b8e8" translate="yes" xml:space="preserve">
          <source>Some recent distributions apparently default to using the &lt;code&gt;--as-needed&lt;/code&gt; linker flag, which enforces that the program's object files come before the dynamic libraries. If that flag is passed, the linker will not link to libraries that are not actually needed by the executable (and it detects this from left to right). My recent archlinux distribution doesn't use this flag by default, so it didn't give an error for not following the correct order.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최근 일부 배포판은 기본적으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;--as-needed&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 링커 플래그 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 프로그램의 객체 파일이 동적 라이브러리보다 우선하도록합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 플래그가 전달되면 링커는 실제로 실행 파일에 필요하지 않은 라이브러리에 링크하지 않습니다 (왼쪽에서 오른쪽으로 감지). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;최근의 아치 리눅스 배포판은 기본적 으로이 플래그를 사용하지 않으므로 올바른 순서를 따르지 않아도 오류가 발생하지 않았습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ed67a44705ea0a77cee20b5704065a990d8e5c6" translate="yes" xml:space="preserve">
          <source>The GNU ld linker is a so-called smart linker.  It will keep track of the functions used by preceding static libraries, permanently tossing out those functions that are not used from its lookup tables.  The result is that if you link a static library too early, then the functions in that library are no longer available to static libraries later on the link line.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GNU ld 링커는 소위 스마트 링커입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 정적 라이브러리에서 사용되는 함수를 추적하여 조회 테이블에서 사용되지 않은 함수를 영구적으로 버립니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과적으로 정적 라이브러리를 너무 일찍 링크하면 나중에 해당 라이브러리의 함수를 더 이상 링크 라인의 정적 라이브러리에서 사용할 수 없게됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1bf3a7a5feb37770570198278fa890ec8a7df94a" translate="yes" xml:space="preserve">
          <source>The linker searches from left to right, and notes unresolved symbols as it go. If a library resolves the symbol, it takes the object files of that library to resolve the symbol (b.o out of libb.a in this case).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;링커는 왼쪽에서 오른쪽으로 검색하고 확인할 수없는 기호를 메모합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라이브러리가 심볼을 해석하면 해당 라이브러리의 오브젝트 파일을 사용하여 심볼을 해석합니다 (이 경우 libb.a에서 모두).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0791ce3c2f32b1be4cc132d1ddc378cad14eeb1" translate="yes" xml:space="preserve">
          <source>The order within a group is important !
Here's an example: a debug library has a debug routine, but the non-debug
library has a weak version of the same. You must put the debug library
FIRST in the group or you will resolve to the non-debug version.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그룹 내 순서는 중요합니다! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다. 디버그 라이브러리에는 디버그 루틴이 있지만 디버그가 아닌 라이브러리의 버전은 동일합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;디버그 라이브러리 FIRST를 그룹에 배치해야합니다. 그렇지 않으면 디버그 버전이 아닌 버전으로 해결됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7870b7aaacd3dd70151c322bee18b80dfe8b6f8" translate="yes" xml:space="preserve">
          <source>The typical UNIX linker works from left to right, so put all your dependent libraries on the left, and the ones that satisfy those dependencies on the right of the link line.  You may find that some libraries depend on others while at the same time other libraries depend on them.  This is where it gets complicated.  When it comes to circular references, fix your code!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적인 UNIX 링커는 왼쪽에서 오른쪽으로 작동하므로 모든 종속 라이브러리를 왼쪽에 놓고 해당 종속성을 만족하는 라이브러리를 링크 행의 오른쪽에 두십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 라이브러리는 다른 라이브러리에 의존하고 다른 라이브러리는 다른 라이브러리에 의존한다는 것을 알 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기가 복잡해집니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;순환 참조와 관련하여 코드를 수정하십시오!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8034293152f97e3102c4dc47a7ee7fd5f63973c" translate="yes" xml:space="preserve">
          <source>Why does the order in which libraries are linked sometimes cause errors in GCC</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GCC에서 라이브러리가 연결된 순서에 따라 때때로 오류가 발생하는 이유&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d6847221bf9641ed18510dd9c8dbb866bd31f6c" translate="yes" xml:space="preserve">
          <source>Why does the order in which libraries are linked sometimes cause errors in GCC?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GCC에서 라이브러리가 연결된 순서에 따라 오류가 발생하는 이유는 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06d6f8381b934aa5122f07fa38d257d4a60c1f31" translate="yes" xml:space="preserve">
          <source>You may can use -Xlinker option.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-Xlinker 옵션을 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9778abb1e9adcf293232303583978f6128849bdb" translate="yes" xml:space="preserve">
          <source>You need to precede each library in the group list with -Xlinker</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그룹 목록의 각 라이브러리 앞에 -Xlinker가 있어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3c0ee91ef5fb4b45ab9e5ffca63e302f4ef40dff" translate="yes" xml:space="preserve">
          <source>You need to write them as &quot;-Wl,--start-group&quot; etc. to tell GCC to pass the argument through to the linker.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GCC에 인수를 링커에 전달하도록 지시하려면 &quot;-Wl,-start-group&quot;등으로 작성해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75008c094d5bb1cdd848888ece2bc12cbe477679" translate="yes" xml:space="preserve">
          <source>is ALMOST equal to</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ALMOST는&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
