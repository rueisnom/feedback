<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/14038589">
    <body>
      <group id="14038589">
        <trans-unit id="3a74eb93d78e79284b38911d99d1ff71ac7ee8ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/eyalroz/cuda-api-wrappers&quot;&gt;&lt;strong&gt;Thin Modern-C++ wrappers for the CUDA Runtime API library&lt;/strong&gt;&lt;/a&gt; (Github)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/eyalroz/cuda-api-wrappers&quot;&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Оболочки Thin Modern-C ++ для библиотеки API CUDA Runtime&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (Github)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e37160bbb537d25c3139f9591c1737b868ccb158" translate="yes" xml:space="preserve">
          <source>A client of &lt;code&gt;some_function&lt;/code&gt; can distinguish CUDA errors from other kinds of errors if desired:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Клиент &lt;/font&gt;&lt;/font&gt; &lt;code&gt;some_function&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может отличить ошибки CUDA от других видов ошибок, если это необходимо:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9baf773579a487ed942d03017f6ff2bef3b35b64" translate="yes" xml:space="preserve">
          <source>A few links to how CUDA errors are automagically checked with these wrappers:</source>
          <target state="translated">Несколько ссылок на то,как ошибки CUDA автоматически проверяются этими обертками:</target>
        </trans-unit>
        <trans-unit id="2a67284a307daab864e9997be377e0db1f4b5754" translate="yes" xml:space="preserve">
          <source>A second related question is how to check for errors in kernel launches, which can't be directly wrapped in a macro call like standard runtime API calls. For kernels, something like this:</source>
          <target state="translated">Второй связанный с этим вопрос-как проверить ошибки в запусках ядра,которые нельзя напрямую обернуть в макрозвонок,как стандартные вызовы API во время выполнения.Для ядра,что-то вроде этого:</target>
        </trans-unit>
        <trans-unit id="c0cc18f1ec8aab1f7eb1990fe3cc9ca3b55458f3" translate="yes" xml:space="preserve">
          <source>A test program throwing and catching a bunch of exceptions</source>
          <target state="translated">Тестовая программа,бросающая и ловящая кучу исключений.</target>
        </trans-unit>
        <trans-unit id="bd9c83b7ff60ef6bdac16526d08b37f2088c2639" translate="yes" xml:space="preserve">
          <source>Again - all potential errors are checked and reported via a thrown exception. This code uses my</source>
          <target state="translated">Опять же-все потенциальные ошибки проверяются и сообщаются через брошенное исключение.Этот код использует мой</target>
        </trans-unit>
        <trans-unit id="8a403285307dd8d9bee61acf40f0b737df17d010" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;thrust::system_error&lt;/code&gt; is a &lt;code&gt;std::runtime_error&lt;/code&gt;, we can alternatively handle it in the same manner of a broad class of errors if we don't require the precision of the previous example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку &lt;/font&gt;&lt;/font&gt; &lt;code&gt;thrust::system_error&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::runtime_error&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , мы можем альтернативно обработать его таким же образом, как и широкий класс ошибок, если нам не требуется точность предыдущего примера:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cc48186a49de9f93558a523f440822d8914a6182" translate="yes" xml:space="preserve">
          <source>Documentation for the error-related functionality</source>
          <target state="translated">Документация по функциональности,связанной с ошибками</target>
        </trans-unit>
        <trans-unit id="7bdcb86b12def8b476ed216091d19d6a2f3f82ff" translate="yes" xml:space="preserve">
          <source>Here's a reasonably terse way to do that by throwing a C++ exception derived from &lt;code&gt;std::runtime_error&lt;/code&gt; using &lt;code&gt;thrust::system_error&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вот довольно краткий способ сделать это, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;std::runtime_error&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; исключение C ++, полученное из &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;std :: runtime_error,&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;thrust::system_error&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d447e5512516fd33d90a1544b452cdcf17fe5a66" translate="yes" xml:space="preserve">
          <source>I used to be irked by this problem; and I used to have a macro-cum-wrapper-function solution just like in Talonmies and Jared's answers, but, honestly? It makes using the CUDA Runtime API even more ugly and C-like.</source>
          <target state="translated">Раньше меня раздражала эта проблема;и у меня было решение для макро-обертки-функции,как в ответах Талонми и Джареда,но,честно говоря? Это делает использование CUDA Runtime API еще более уродливым и C-подобным.</target>
        </trans-unit>
        <trans-unit id="e9e7cef7e8f8897ec9fe6e6cd0cfde9f3b14b6d2" translate="yes" xml:space="preserve">
          <source>If there is an error in a call, a textual message describing the error and the file and line in your code where the error occurred will be emitted to &lt;code&gt;stderr&lt;/code&gt; and the application will exit. You could conceivably modify &lt;code&gt;gpuAssert&lt;/code&gt; to raise an exception rather than call &lt;code&gt;exit()&lt;/code&gt; in a more sophisticated application if it were required.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если в вызове есть ошибка, текстовое сообщение с описанием ошибки и файлом и строкой в ​​вашем коде, где произошла ошибка, будет отправлено в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;stderr&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и приложение закроется. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете изменить &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gpuAssert&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чтобы вызвать исключение, а не вызывать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;exit()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в более сложном приложении, если это необходимо.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="003c5cc74a6e46c5b431fd52eb329de392ad31ff" translate="yes" xml:space="preserve">
          <source>Looking through the answers and comments on CUDA questions, and in the &lt;a href=&quot;https://stackoverflow.com/tags/cuda/info&quot;&gt;CUDA tag wiki&lt;/a&gt;, I see it is often suggested that the return status of every API call should checked for errors. The API documentation contains functions like &lt;code&gt;cudaGetLastError&lt;/code&gt;, &lt;code&gt;cudaPeekAtLastError&lt;/code&gt;, and &lt;code&gt;cudaGetErrorString&lt;/code&gt;, but what is the best way to put these together to reliably catch and report errors without requiring lots of extra code?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Просматривая ответы и комментарии на вопросы CUDA и &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/tags/cuda/info&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вики-тег CUDA&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , я вижу, что часто предлагается проверять состояние возврата каждого вызова API на наличие ошибок. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Документация по API содержит функции, такие как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cudaGetLastError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cudaPeekAtLastError&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cudaGetErrorString&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но каков наилучший способ собрать их вместе, чтобы надежно отлавливать и сообщать об ошибках, не требуя большого количества дополнительного кода?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ea6d40fcd6ed3ec4883d43f7c92746797262296" translate="yes" xml:space="preserve">
          <source>Note that the exceptions carry both a string explanation and the CUDA runtime API status code after the failing call.</source>
          <target state="translated">Обратите внимание,что исключения несут в себе как объяснение строки,так и код состояния CUDA API во время выполнения после неудачного вызова.</target>
        </trans-unit>
        <trans-unit id="edc86e942e36da3ac1661e81ede20aa41d9f1c2f" translate="yes" xml:space="preserve">
          <source>Note that when using &lt;a href=&quot;https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#cuda-dynamic-parallelism&quot;&gt;CUDA Dynamic Parallelism&lt;/a&gt;, a very similar methodology can and should be applied to any usage of the CUDA runtime API in device kernels, as well as after any device kernel launches:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, что при использовании &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#cuda-dynamic-parallelism&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;динамического параллелизма CUDA&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; очень похожая методология может и должна применяться к любому использованию API среды выполнения CUDA в ядрах устройств, а также после запуска любого ядра устройства:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1d24c5c2746808817d6b6481b904ddd13104ebab" translate="yes" xml:space="preserve">
          <source>Occasionally we may wish to report and recover from an error condition in a C++ context as part of a larger application.</source>
          <target state="translated">Иногда мы можем захотеть сообщить об ошибке и восстановить ее из контекста C++как часть более крупного приложения.</target>
        </trans-unit>
        <trans-unit id="285497b2e7885762225cbf3f38dc6dc33f23220f" translate="yes" xml:space="preserve">
          <source>Probably the best way to check for errors in runtime API code is to define an assert style handler function and wrapper macro like this:</source>
          <target state="translated">Наверное,лучший способ проверить код API на наличие ошибок во время выполнения-это определить функцию обработчика стиля утверждения и такой макрос обёртки:</target>
        </trans-unit>
        <trans-unit id="d4e1348b7315f21b925a40f3764236a8b7144b25" translate="yes" xml:space="preserve">
          <source>So I've approached this in a different and more fundamental way. For a sample of the result, here's part of the CUDA &lt;code&gt;vectorAdd&lt;/code&gt; sample - with &lt;em&gt;complete&lt;/em&gt; error checking of every runtime API call:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так что я подошел к этому по-другому и более фундаментально. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для примера результата, вот часть образца CUDA &lt;/font&gt;&lt;/font&gt; &lt;code&gt;vectorAdd&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - с &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;полной&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; проверкой ошибок каждого вызова API времени выполнения:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bde7483af5f2bc68485f59a4f2974d788a25aa46" translate="yes" xml:space="preserve">
          <source>The C++-canonical way: Don't check for errors...use the C++ bindings which throw exceptions.</source>
          <target state="translated">С++-канонический способ:Не проверяйте на ошибки...используйте привязки C++,которые бросают исключения.</target>
        </trans-unit>
        <trans-unit id="df416751e8a2d229d8b98d6297b404967b69b568" translate="yes" xml:space="preserve">
          <source>The output:</source>
          <target state="translated">Выход:</target>
        </trans-unit>
        <trans-unit id="3be12694aa2561741ce5d7192d8f62ee429738bc" translate="yes" xml:space="preserve">
          <source>The relevant code is copied below:</source>
          <target state="translated">Соответствующий код скопирован ниже:</target>
        </trans-unit>
        <trans-unit id="7ad844c9d8f5bf897e25ab3e2ac67d6565ba6b37" translate="yes" xml:space="preserve">
          <source>The solution discussed &lt;a href=&quot;https://code.google.com/p/stanford-cs193g-sp2010/wiki/TutorialWhenSomethingGoesWrong&quot;&gt;here&lt;/a&gt; worked well for me. This solution uses built-in cuda functions and is very simple to implement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обсуждаемое &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://code.google.com/p/stanford-cs193g-sp2010/wiki/TutorialWhenSomethingGoesWrong&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; решение &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;хорошо сработало для меня. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это решение использует встроенные функции cuda и очень просто в реализации.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="890d71a7eb68f019602b05d670b28839d2a44f30" translate="yes" xml:space="preserve">
          <source>This will incorporate the filename, line number, and an English language description of the &lt;code&gt;cudaError_t&lt;/code&gt; into the thrown exception's &lt;code&gt;.what()&lt;/code&gt; member:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это будет включать имя файла, номер строки и описание &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cudaError_t&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; на &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;английском языке в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;член .what &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.what()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; брошенного исключения &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="058ed78e78b535aaac72c39129072465321d8503" translate="yes" xml:space="preserve">
          <source>What is the canonical way to check for errors using the CUDA runtime API</source>
          <target state="translated">Что такое канонический способ проверки ошибок с помощью API исполнения CUDA</target>
        </trans-unit>
        <trans-unit id="758c10137099ebf94256c82812ca29ff027dbb11" translate="yes" xml:space="preserve">
          <source>You can then wrap each API call with the &lt;code&gt;gpuErrchk&lt;/code&gt; macro, which will process the return status of the API call it wraps, for example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем вы можете обернуть каждый вызов API &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;макросом &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gpuErrchk&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , который будет обрабатывать возвращаемый статус вызова API, который он переносит, например:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35f845c7a8de664a799bc45d5782ffc1111bed41" translate="yes" xml:space="preserve">
          <source>in which case the &lt;code&gt;cudaMemcpy&lt;/code&gt; call can return either errors which occurred during the kernel execution or those from the memory copy itself. This can be confusing for the beginner, and I would recommend using explicit synchronisation after a kernel launch during debugging to make it easier to understand where problems might be arising.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в этом случае &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вызов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;cudaMemcpy&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может вернуть либо ошибки, которые произошли во время выполнения ядра, либо ошибки самой копии памяти. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это может сбить с толку новичка, и я бы рекомендовал использовать явную синхронизацию после запуска ядра во время отладки, чтобы было легче понять, где могут возникнуть проблемы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea65cea6cb4cc03639a278217c1c56d88606b8ec" translate="yes" xml:space="preserve">
          <source>talonmies' answer above is a fine way to abort an application in an &lt;code&gt;assert&lt;/code&gt;-style manner.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ответ talonmies выше - отличный способ прервать приложение в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;стиле &lt;/font&gt;&lt;/font&gt; &lt;code&gt;assert&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3bee89285c7750cc62509b9df674ca9514d83a2c" translate="yes" xml:space="preserve">
          <source>will firstly check for invalid launch argument, then force the host to wait until the kernel stops and checks for an execution error. The synchronisation can be eliminated if you have a subsequent blocking API call like this:</source>
          <target state="translated">сначала проверит на недействительный аргумент запуска,затем заставит хост подождать,пока ядро остановится,и проверит на ошибку выполнения.Синхронизация может быть устранена,если у вас будет последующий вызов блокирующего API,подобный этому:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
