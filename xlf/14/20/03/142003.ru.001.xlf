<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/142003">
    <body>
      <group id="142003">
        <trans-unit id="188db66d173d4c9c2cfa9e511a3c47dec8d733cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; causes separate thread to wait till invoked method is completed:</source>
          <target state="translated">&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заставляет отдельный поток ожидать завершения вызванного метода:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b08f66fef449672cfaa633f9861c9a00cc32b791" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&lt;/a&gt;
Especially how it interacts with the UI layer.  Based on your posting, this seems to answer your issues.</source>
          <target state="translated">&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Особенно о том, как он взаимодействует со слоем пользовательского интерфейса. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Судя по вашей публикации, это, кажется, отвечает на ваши вопросы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7965917cff32d36bf584aca78251de387009568" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt; doesn't cause the separate thread to wait till invoked method is completed:</source>
          <target state="translated">&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не заставляет отдельный поток ожидать завершения вызванного метода:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f179616c726b43ddcc9b91ce608c46a0384df631" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Adding Try Catch, Auto Exception Logging and CallBack&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Добавление Try Catch, Автоматическое ведение журнала исключений и CallBack&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02b82bf3e1a93f8ba1612e9de1b8c929f472b3ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CODE 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;КОД 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b4b8c627349bf8556faac2b36ba11933a91a73b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CODE 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Код 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c64b3f64bb6e2c8f237028444f8986be6c5de7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Helper Method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вспомогательный метод&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d01e1b1b685912218f856209e992cf7eda468b42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sample Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Образец использования&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f48b85708799dddd7d170178b98378d48ba3ef3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The situation is this&lt;/strong&gt;: I want to load data into a global variable based on the value of a control. I don't want to change the value of a control from the child thread. I'm not going to do it ever from a child thread.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ситуация такова&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : я хочу загрузить данные в глобальную переменную на основе значения элемента управления. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я не хочу менять значение элемента управления из дочернего потока. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я не собираюсь делать это когда-либо из детской ветки.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b0f6d52f0ce8e1b8420e81cb7ac6939a953f9bb" translate="yes" xml:space="preserve">
          <source>A new look using Async/Await and callbacks.  You only need one line of code if you keep the extension method in your project.</source>
          <target state="translated">Новый вид с использованием AsyncAwait и обратных звонков.Вам понадобится только одна строка кода,если вы сохраните метод расширения в своем проекте.</target>
        </trans-unit>
        <trans-unit id="10cd2c24f0128f883483255b77925485053df4ed" translate="yes" xml:space="preserve">
          <source>Action y; //declared inside class</source>
          <target state="translated">Действие у;/объявленное внутри класса</target>
        </trans-unit>
        <trans-unit id="cb79c66b7f8d28de3fc3f880507b51d98360509c" translate="yes" xml:space="preserve">
          <source>Along the same lines as previous answers,
but a very short addition that Allows to use all Control properties without having cross thread invokation exception.</source>
          <target state="translated">По тем же строкам,что и в предыдущих ответах,но с очень коротким дополнением,которое позволяет использовать все свойства управления,не имея исключений по межпоточной инвокации.</target>
        </trans-unit>
        <trans-unit id="1aab0db270befbe2cc543d0f9a0c314c3fecc18f" translate="yes" xml:space="preserve">
          <source>And then you can simply do this:</source>
          <target state="translated">И тогда ты можешь просто сделать это:</target>
        </trans-unit>
        <trans-unit id="e563cfe6387964bed8d4c1dc6a73365021f8f182" translate="yes" xml:space="preserve">
          <source>As per &lt;a href=&quot;https://stackoverflow.com/questions/142003/cross-thread-operation-not-valid-control-accessed-from-a-thread-other-than-the#142108&quot;&gt;Prerak K's update comment&lt;/a&gt; (since deleted):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Согласно &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/142003/cross-thread-operation-not-valid-control-accessed-from-a-thread-other-than-the#142108&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обновленному комментарию Prerak K&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (после удаления):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f02661ee29e185e6d9abcf024d2514249fcc84e8" translate="yes" xml:space="preserve">
          <source>Attempt to access member of &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot;&gt;System.Windows.Forms.Control&lt;/a&gt; from different thread than UI thread will cause cross-thread exception.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Попытка доступа к члену &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из потока, отличного от потока пользовательского интерфейса, вызовет межпотоковое исключение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfdd5e6174b1a9e8455dfd6042b09c1c44548556" translate="yes" xml:space="preserve">
          <source>BUT BUT BUT... it seems I'm back to square one. The Application again 
become nonresponsive. It seems to be due to the execution of line #1 if condition. The loading task is again done by the parent thread and not the third that I spawned.</source>
          <target state="translated">Но,но...но...похоже,я вернулся к началу.Приложение опять не реагирует.Похоже,это связано с выполнением строки #1 if condition.Задача загрузки снова выполняется родительским потоком,а не третьим,который я породил.</target>
        </trans-unit>
        <trans-unit id="e806c824f4885208f95601392ddec281715b6125" translate="yes" xml:space="preserve">
          <source>BeginInvoke</source>
          <target state="translated">BeginInvoke</target>
        </trans-unit>
        <trans-unit id="7e1eb90aeacc6371f31ec12607e6b77603cff00e" translate="yes" xml:space="preserve">
          <source>BeginInvoke and Invoke methods</source>
          <target state="translated">Спровоцировать и спровоцировать методы</target>
        </trans-unit>
        <trans-unit id="70d07c050238bbf5aa3eb59615b4c99eb6627933" translate="yes" xml:space="preserve">
          <source>Code solution</source>
          <target state="translated">Код решения</target>
        </trans-unit>
        <trans-unit id="b66709ec059bd1186d2b063b070bd5f38f3d1119" translate="yes" xml:space="preserve">
          <source>Control.InvokeRequired is only useful when working controls inherited from Control class while SynchronizationContext can be used anywhere. Some useful information is as following links</source>
          <target state="translated">Control.InvokeRequired полезен только при работе с элементами управления,унаследованными от класса Control,в то время как SynchronizationContext может быть использован где угодно.Некоторая полезная информация представлена следующими ссылками</target>
        </trans-unit>
        <trans-unit id="2b4f504792a7d3d8a5efefe60cded3f2a7d2003b" translate="yes" xml:space="preserve">
          <source>Controls in .NET are not generally thread safe.  That means you shouldn't access a control from a thread other than the one where it lives.  To get around this, you need to &lt;em&gt;invoke&lt;/em&gt; the control, which is what your 2nd sample is attempting.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Элементы управления в .NET не являются потокобезопасными. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что вы не должны обращаться к элементу управления из потока, отличного от того, в котором он находится. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы обойти это, вам нужно &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вызвать&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; элемент управления, который пытается &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выполнить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ваш второй пример.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33313311234b81fdae5aa7348d61d1bc6e33a818" translate="yes" xml:space="preserve">
          <source>Cross Thread Update UI using SynchronizationContext | .Net</source>
          <target state="translated">.Net</target>
        </trans-unit>
        <trans-unit id="be815dc42b8a797003d5531a64533af2a74f1719" translate="yes" xml:space="preserve">
          <source>Cross Thread Update UI | .Net</source>
          <target state="translated">.Net</target>
        </trans-unit>
        <trans-unit id="e9bb0bb589d5c347c935e02e87343fd4f2a930b3" translate="yes" xml:space="preserve">
          <source>Cross-thread operation not valid: Control accessed from a thread other than the thread it was created on</source>
          <target state="translated">Операция с поперечной резьбой недействительна:Доступ к управлению из потока,отличного от того,на котором он был создан.</target>
        </trans-unit>
        <trans-unit id="8e017ff03d8165f00dbf60bb448b579dc23e4fe4" translate="yes" xml:space="preserve">
          <source>Cross-thread operation not valid: Control accessed from a thread other than the thread it was created on.</source>
          <target state="translated">Операция с поперечной резьбой недействительна:Доступ к управлению осуществляется из потока,отличного от того,в котором он был создан.</target>
        </trans-unit>
        <trans-unit id="bddf02b4126e53c1f13950bdf5e4a39586e4e4f6" translate="yes" xml:space="preserve">
          <source>Declare some variable to hold these kind of values in a separate class (which will work as data holder) . Create static instance of this class adn you can access it over any thread.</source>
          <target state="translated">Объявите какую-нибудь переменную,чтобы хранить такие значения в отдельном классе (который будет работать в качестве владельца данных).Создать статический экземпляр объявления данного класса можно через любой поток.</target>
        </trans-unit>
        <trans-unit id="123b323a9c351a5ebb88f8ec09aaf2db8a751fb0" translate="yes" xml:space="preserve">
          <source>Do your serious processing in the separate thread &lt;em&gt;before&lt;/em&gt; you attempt to switch back to the control's thread. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Выполните серьезную обработку в отдельном потоке, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;прежде&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; чем пытаться переключиться обратно на поток элемента управления. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="60f9af3a2f24f2af9f9a91b2a5ae749f345720d6" translate="yes" xml:space="preserve">
          <source>Follow the simplest (in my opinion) way to modify objects from another thread:</source>
          <target state="translated">Следуйте простейшему (на мой взгляд)пути модификации объектов из другого потока:</target>
        </trans-unit>
        <trans-unit id="acb8ac032e9a32b9a23d12bd5e58825505e22c07" translate="yes" xml:space="preserve">
          <source>For example to get the text from a Control of the UI thread:</source>
          <target state="translated">Например,чтобы получить текст из элемента управления потоком пользовательского интерфейса:</target>
        </trans-unit>
        <trans-unit id="7cbce1ffbd6ee372f6df762dc576ebce5da16f80" translate="yes" xml:space="preserve">
          <source>Here is an alternative way if the object you are working with doesn't have</source>
          <target state="translated">Вот альтернативный способ,если объект,с которым вы работаете,не имеет</target>
        </trans-unit>
        <trans-unit id="6ff4f0325ec93e20a54e6dfdb9e4a75bf91f624c" translate="yes" xml:space="preserve">
          <source>How do I resolve this and also what is the effect of execution of Line#1 if block?</source>
          <target state="translated">Как это разрешить,а также каков эффект от выполнения строки #1 if block?</target>
        </trans-unit>
        <trans-unit id="fa692e8d344ff6df7cf07ee2b7c9fe0b50c2db13" translate="yes" xml:space="preserve">
          <source>However, in your case all you've done is pass the long-running method back to the main thread.  Of course, that's not really what you want to do.  You need to rethink this a little so that all you're doing on the main thread is setting a quick property here and there.</source>
          <target state="translated">Однако в вашем случае все,что вы сделали-это передали длительный метод обратно в основной поток.Конечно,это не совсем то,что вы хотите сделать.Вам нужно немного переосмыслить это,чтобы все,что вы делаете в основном потоке-это устанавливаете быстрое свойство здесь и там.</target>
        </trans-unit>
        <trans-unit id="8cdc91e53389735002c286b7024465e76f1efa91" translate="yes" xml:space="preserve">
          <source>I don't know whether I perceived this right or wrong. I'm new to threading.</source>
          <target state="translated">Я не знаю,правильно я это воспринял или нет.Я новичок в резьбе.</target>
        </trans-unit>
        <trans-unit id="ba62435312b33eee202bc134f8bb89332edb69a1" translate="yes" xml:space="preserve">
          <source>I find the check-and-invoke code which needs to be littered within all methods related to forms to be way too verbose and unneeded. Here's a simple extension method which lets you do away with it completely:</source>
          <target state="translated">Я нахожу код проверки и вызова,который необходимо замусорять во всех методах,связанных с формами,слишком многословным и ненужным.Вот простой метод расширения,который позволяет полностью отказаться от него:</target>
        </trans-unit>
        <trans-unit id="5727013a40b87c44992738d0ec452f4710a03f79" translate="yes" xml:space="preserve">
          <source>I found a need for this while programming an iOS-Phone monotouch app controller in a visual studio winforms prototype project outside of xamarin stuidio. Preferring to program in VS over xamarin studio as much as possible, I wanted the controller to be completely decoupled from the phone framework. This way implementing this for other frameworks like Android and Windows Phone would be much easier for future uses.</source>
          <target state="translated">Я нашел необходимость в этом при программировании монотач-контроллера приложения iOS-Phone в визуальной студии Winforms прототип проекта за пределами xamarin stuidio.Предпочитая программировать в VS,а не в студии xamarin,я хотел,чтобы контроллер был полностью отделен от фреймворка телефона.Таким образом,реализовать это для других фреймворков,таких как Android и Windows Phone,было бы намного проще для будущего использования.</target>
        </trans-unit>
        <trans-unit id="c981f66dd28eae20b0fc9d1e6878e24d83038c9d" translate="yes" xml:space="preserve">
          <source>I guess I have not presented the question properly.</source>
          <target state="translated">Похоже,я неправильно сформулировал вопрос.</target>
        </trans-unit>
        <trans-unit id="f2c17598b9d8facd47c7d6d9fd1a42a1a7c2225f" translate="yes" xml:space="preserve">
          <source>I have a scenario. (Windows Forms, C#, .NET)</source>
          <target state="translated">У меня есть сценарий.(Windows Forms,C#,.NET)</target>
        </trans-unit>
        <trans-unit id="8756c26dbafa8ca5df197a4c5358bd23a6769a32" translate="yes" xml:space="preserve">
          <source>I have had this problem with the &lt;code&gt;FileSystemWatcher&lt;/code&gt; and found that the following code solved the problem:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;У меня была эта проблема с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;FileSystemWatcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и я обнаружил, что следующий код решил эту проблему:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc06fa8eeeff0d4cee63db4981453c5d558f4ca6" translate="yes" xml:space="preserve">
          <source>I know its too late now. However even today if you are having trouble accessing cross thread controls? This is the shortest answer till date :P</source>
          <target state="translated">Теперь я знаю,что уже слишком поздно.Однако даже сегодня,если у вас есть проблемы с доступом к управлению поперечной резьбой? Это самый короткий ответ до даты :P</target>
        </trans-unit>
        <trans-unit id="bd6a56d96a50a7f3890f9fea016d9353c383e061" translate="yes" xml:space="preserve">
          <source>I used a background worker thread which will be loading the data and when done will notify the application that it has done its work.</source>
          <target state="translated">Я использовал фоновый рабочий поток,который будет загружать данные и по окончании работы уведомит приложение о том,что оно выполнило свою работу.</target>
        </trans-unit>
        <trans-unit id="11bda0b4109646097331b5e1a84ecee321f8f166" translate="yes" xml:space="preserve">
          <source>I wanted a solution where the GUI could respond to events without the burden of dealing with the cross threading switching code behind every button click. Basically let the class controller handle that to keep the client code simple. You could possibly have many events on the GUI where as if you could handle it in one place in the class would be cleaner. I am not a multi theading expert, let me know if this is flawed.</source>
          <target state="translated">Мне нужно было решение,в котором графический интерфейс мог бы реагировать на события без необходимости иметь дело с кодом переключения кросс-потоков за каждым нажатием кнопки.По сути,позволить контроллеру класса справиться с этим,чтобы код клиента оставался простым.Возможно,у вас будет много событий в графическом интерфейсе,где,как если бы вы могли работать с ним в одном месте в классе,было бы чище.Я не эксперт в области многозадачности,дайте мне знать,если что-то не так.</target>
        </trans-unit>
        <trans-unit id="1dc4ea206863855cf11c55fdea62c6200cb32d43" translate="yes" xml:space="preserve">
          <source>If there is no work for UI thread, then there are idle gaps that can be used by a not-UI related computing.</source>
          <target state="translated">Если нет работы для потока UI,то есть незадействованные пробелы,которые могут быть использованы не связанными с пользовательским интерфейсом вычислениями.</target>
        </trans-unit>
        <trans-unit id="571d9b8eb3e4a243b7be528b330a174a67d33133" translate="yes" xml:space="preserve">
          <source>In order to use mentioned gaps use &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt; methods:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы использовать упомянутые пробелы, используйте &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методы &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c65605adf5270f5065089b0189da542274d30db0" translate="yes" xml:space="preserve">
          <source>Invoke</source>
          <target state="translated">Invoke</target>
        </trans-unit>
        <trans-unit id="6805079961da21949bf5d9fbbcc3a83a07caa8b0" translate="yes" xml:space="preserve">
          <source>It works the same as above, but it is a different approach if you don't have an object with invokerequired, but do have access to the MainForm</source>
          <target state="translated">Он работает так же,как и выше,но это другой подход,если у Вас нет объекта с запросом на вызов,но у Вас есть доступ к MainForm</target>
        </trans-unit>
        <trans-unit id="3ec62eadcadcfc5efeb0aacb5b51428741b2ea40" translate="yes" xml:space="preserve">
          <source>No more messing around - simple.</source>
          <target state="translated">Больше никаких шуток-просто.</target>
        </trans-unit>
        <trans-unit id="317885447cebb59204ea4ad82dcf6fe62ef4e311" translate="yes" xml:space="preserve">
          <source>Now came a real problem. All the UI (main form and its child usercontrols) was created on the primary main thread. In the LOAD method of the usercontrol I'm fetching data based on the values of some control (like textbox) on userControl.</source>
          <target state="translated">Теперь появилась настоящая проблема.Весь пользовательский интерфейс (основная форма и его дочерние юзерконтроли)был создан на основном основном потоке.В методе LOAD юзерконтроля я получаю данные,основанные на значениях некоторого элемента управления (например,текстового поля)на userControl.</target>
        </trans-unit>
        <trans-unit id="6112946a0eb6d655e60266427479a1c4232a8b3f" translate="yes" xml:space="preserve">
          <source>Please read the &lt;em&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/ms741870(v=vs.100).aspx&quot;&gt;Threading Model&lt;/a&gt;&lt;/em&gt; in UI applications in order to understand basic concepts. The link navigates to page that describes the WPF threading model. However, Windows Forms utilizes the same idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пожалуйста, ознакомьтесь с &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/ms741870(v=vs.100).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;моделью потоков&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в приложениях пользовательского интерфейса, чтобы понять основные понятия. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ссылка переходит на страницу, которая описывает модель потоков WPF. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тем не менее, Windows Forms использует ту же идею.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64619dc0c40ce140ba6f4ef2c349a7e2752bed80" translate="yes" xml:space="preserve">
          <source>Read answers on question &lt;a href=&quot;https://stackoverflow.com/questions/661561/how-to-update-the-gui-from-another-thread-in-c&quot;&gt;How to update the GUI from another thread in C#?&lt;/a&gt;.
For C# 5.0 and .NET 4.5 the recommended solution is &lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Читайте ответы на вопрос &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/661561/how-to-update-the-gui-from-another-thread-in-c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как обновить графический интерфейс из другого потока в C #? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для C # 5.0 и .NET 4.5 рекомендуемое решение &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a69dfc54c5bce979e0ffbd80496f7ceba3dc6e9" translate="yes" xml:space="preserve">
          <source>Return value in e.result and use it to set yout textbox value in backgroundWorker_RunWorkerCompleted event</source>
          <target state="translated">Возвращает значение в e.result и использует его для установки значения текстового поля yout в событии backgroundWorker_RunWorkerCompleted</target>
        </trans-unit>
        <trans-unit id="825328a92a9a854ed0c343502c00599dd1f2cbb2" translate="yes" xml:space="preserve">
          <source>Same question : how-to-update-the-gui-from-another-thread-in-c</source>
          <target state="translated">Тот же вопрос:как обновить-Gui-from-another-thread-in-c</target>
        </trans-unit>
        <trans-unit id="7a4a4b96cfa36805e2b0bf7ece72400ff7c5b3f9" translate="yes" xml:space="preserve">
          <source>See my &lt;a href=&quot;http://pobox.com/~skeet/csharp/threads&quot;&gt;threading article&lt;/a&gt; for a &lt;a href=&quot;http://pobox.com/~skeet/csharp/threads/winforms.shtml&quot;&gt;WinForms example&lt;/a&gt; - although the article was written before BackgroundWorker arrived on the scene, and I'm afraid I haven't updated it in that respect. BackgroundWorker merely simplifies the callback a bit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;См. Мою &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pobox.com/~skeet/csharp/threads&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;многопоточную статью&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pobox.com/~skeet/csharp/threads/winforms.shtml&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;примера WinForms&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - хотя статья была написана до появления BackgroundWorker, и я боюсь, что я не обновил ее в этом отношении. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BackgroundWorker просто немного упрощает обратный вызов.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9dc63bb2af5cd1e369af72f5dacfe14b82975a3c" translate="yes" xml:space="preserve">
          <source>Simply use this:</source>
          <target state="translated">Просто используй это:</target>
        </trans-unit>
        <trans-unit id="1dac47504b6b788b5c47fdaff1885a75afdf6b76" translate="yes" xml:space="preserve">
          <source>Since there is only one thread, all UI operations are queued as work items into that thread:</source>
          <target state="translated">Поскольку существует только один поток,все операции пользовательского интерфейса ставятся в очередь как рабочие элементы в этом потоке:</target>
        </trans-unit>
        <trans-unit id="ca3dfccb87aa730c28a796edb3d768d8d436a705" translate="yes" xml:space="preserve">
          <source>Situation is this: I want to load data into a global variable based on the value of a control. I don't want to change the value of a control from the child thread. I'm not going to do it ever from a child thread.</source>
          <target state="translated">Ситуация такова:Я хочу загрузить данные в глобальную переменную,основанную на значении управления.Я не хочу изменять значение элемента управления из дочернего потока.Я не собираюсь делать это когда-либо из дочернего потока.</target>
        </trans-unit>
        <trans-unit id="007fba3b2e8669fc9d40baae6a1c625b5e85c51f" translate="yes" xml:space="preserve">
          <source>So only accessing the value so that corresponding data can be fetched from the database.</source>
          <target state="translated">Поэтому доступ к значению осуществляется только для того,чтобы из базы данных можно было получить соответствующие данные.</target>
        </trans-unit>
        <trans-unit id="eca82d18def17ca9cce31cc41d22c93508540736" translate="yes" xml:space="preserve">
          <source>So only accessing the value so that the corresponding data can be fetched from the database.</source>
          <target state="translated">Поэтому доступ к значению осуществляется только для того,чтобы из базы данных можно было получить соответствующие данные.</target>
        </trans-unit>
        <trans-unit id="da058dfc9ca2752ce55fbc0f92315b0398b06010" translate="yes" xml:space="preserve">
          <source>The Exception it gave was</source>
          <target state="translated">Исключение,которое она сделала.</target>
        </trans-unit>
        <trans-unit id="1047482cad9df3cdaa6be5f15ea3276103df8f39" translate="yes" xml:space="preserve">
          <source>The GUI form is unaware the controller is running asynchronous tasks.</source>
          <target state="translated">Форма GUI не знает,что контроллер выполняет асинхронные задачи.</target>
        </trans-unit>
        <trans-unit id="19d06018c19bcd9c0a4105dbdeeb4ee2195588c2" translate="yes" xml:space="preserve">
          <source>The UI Thread</source>
          <target state="translated">Нитка пользовательского интерфейса</target>
        </trans-unit>
        <trans-unit id="fe9de2423a7f187bb172474a2f8e37ff9f33dad5" translate="yes" xml:space="preserve">
          <source>The cleanest (and proper) solution for UI cross-threading issues is to use SynchronizationContext, see &lt;a href=&quot;http://www.lostechies.com/blogs/gabrielschenker/archive/2009/01/23/synchronizing-calls-to-the-ui-in-a-multi-threaded-application.aspx&quot;&gt;Synchronizing calls to the UI in a multi-threaded application&lt;/a&gt; article, it explains it very nicely.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Самое чистое (и правильное) решение для проблем многопоточности пользовательского интерфейса - это использование SynchronizationContext, см. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Статью &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.lostechies.com/blogs/gabrielschenker/archive/2009/01/23/synchronizing-calls-to-the-ui-in-a-multi-threaded-application.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Синхронизация вызовов пользовательского интерфейса в&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; статье о &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;многопоточных приложениях&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , это очень хорошо объясняется.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5e4b02a5f418b4350e0984de858f8589ac2bfa1" translate="yes" xml:space="preserve">
          <source>The computing overhead of method being invoked should be small as well as computing overhead of event handler methods because the UI thread is used there - the same that is responsible for handling user input. Regardless if this is &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затраты на обработку вызываемого метода должны быть небольшими, а также затраты на обработку методов-обработчиков событий, поскольку там используется поток пользовательского интерфейса - тот же, что отвечает за обработку пользовательского ввода. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Независимо от того, является ли это &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6537fb373ef1813017b553425872eb57bfb45771" translate="yes" xml:space="preserve">
          <source>The control then uses the current form object to deal with the events, and will therefore be on the same thread.</source>
          <target state="translated">Затем элемент управления использует объект текущей формы для обработки событий,и,следовательно,будет находиться в том же потоке.</target>
        </trans-unit>
        <trans-unit id="157ae424ce08780f6b4f7141bd4d5e96a8e210de" translate="yes" xml:space="preserve">
          <source>The pseudocode would look like this:</source>
          <target state="translated">Псевдокод будет выглядеть вот так:</target>
        </trans-unit>
        <trans-unit id="fbc043659f6ec8ac7ca50bd4589cba0e3a307d16" translate="yes" xml:space="preserve">
          <source>The solution you want then should look like:</source>
          <target state="translated">Тогда решение,которое ты хочешь,должно выглядеть так:</target>
        </trans-unit>
        <trans-unit id="099ea64091e8a542c01994ac0975274cb7f43b1b" translate="yes" xml:space="preserve">
          <source>The user control does some heavy data operation, such that if I directly call the &lt;code&gt;UserControl_Load&lt;/code&gt; method the UI become nonresponsive for the duration for load method execution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пользовательский элемент управления выполняет некоторую сложную операцию с данными, так что если я напрямую вызываю &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;метод &lt;/font&gt;&lt;/font&gt; &lt;code&gt;UserControl_Load&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; пользовательский интерфейс перестает отвечать на запросы при выполнении метода загрузки.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="300c681df157ada97ca4a46ad24788d6d9af63d0" translate="yes" xml:space="preserve">
          <source>There are two options for cross thread operations.</source>
          <target state="translated">Существует два варианта операций с поперечной резьбой.</target>
        </trans-unit>
        <trans-unit id="a10d0e39c285e5bd47b26b31b08df24c211d6cb8" translate="yes" xml:space="preserve">
          <source>There is a main form which hosts some user control.</source>
          <target state="translated">Существует основная форма,в которой размещен некоторый пользовательский контроль.</target>
        </trans-unit>
        <trans-unit id="712298864f58d1bc4e135e572306280a7bb5f5c0" translate="yes" xml:space="preserve">
          <source>There is only one thread (UI thread), that is allowed to access &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot;&gt;System.Windows.Forms.Control&lt;/a&gt; and its subclasses members.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Существует только один поток (поток пользовательского интерфейса), которому разрешен доступ к &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;элементам &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и его подклассам.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dab8ded28f92359e5f9c9d5860d88fe29108ae1f" translate="yes" xml:space="preserve">
          <source>This is how i access any form control from a thread.</source>
          <target state="translated">Так я получаю доступ к управлению любой формой из потока.</target>
        </trans-unit>
        <trans-unit id="53eb53cfb175a2ba78c619db5044612631695c15" translate="yes" xml:space="preserve">
          <source>This is not the recommended way to solve this error but you can suppress it quickly, it will do the job . I prefer this for prototypes or demos . add</source>
          <target state="translated">Это не является рекомендуемым способом решения данной ошибки,но вы можете быстро ее подавить,она будет выполнять свою работу.Я предпочитаю это для прототипов или демо-версий.add</target>
        </trans-unit>
        <trans-unit id="5c075d610f8d84cda1a4650d52585b952930449f" translate="yes" xml:space="preserve">
          <source>This is useful if you are working with the main form in a class other than the main form with an object that is in the main form, but doesn't have InvokeRequired</source>
          <target state="translated">Это полезно,если вы работаете с основной формой в классе,отличном от основной формы,с объектом,который находится в основной форме,но у которого нет InvokeRequired</target>
        </trans-unit>
        <trans-unit id="009bfa89936ed96950785b24d7516548a4c10347" translate="yes" xml:space="preserve">
          <source>Threading Model in UI</source>
          <target state="translated">Модель резьбы в пользовательском интерфейсе</target>
        </trans-unit>
        <trans-unit id="8a6182575d1d703a7e9fe67917963edfbb7ce8e7" translate="yes" xml:space="preserve">
          <source>To know more about this I did some googling and a suggestion came up like using the following code</source>
          <target state="translated">Чтобы узнать об этом побольше,я погуглил и предложил использовать следующий код.</target>
        </trans-unit>
        <trans-unit id="001a1fd40d11d458591444449ac11f946e331eee" translate="yes" xml:space="preserve">
          <source>To overcome this I load data on different thread (trying to change existing code as little as I can)</source>
          <target state="translated">Для преодоления этого я загружаю данные в другой поток (пытаясь изменить существующий код как можно меньше).</target>
        </trans-unit>
        <trans-unit id="fe7088016fa44427af7e7e4bffaaaddee05b6c72" translate="yes" xml:space="preserve">
          <source>To perform computing expensive operation always use separate thread. Since .NET 2.0 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot;&gt;BackgroundWorker&lt;/a&gt; is dedicated to performing computing expensive operations in Windows Forms. However in new solutions you should use the async-await pattern as described &lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для выполнения вычислительных дорогостоящих операций всегда используйте отдельный поток. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Начиная с .NET 2.0 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BackgroundWorker&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; предназначен для выполнения дорогостоящих операций в Windows Forms. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако в новых решениях вы должны использовать шаблон async-await, как описано &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="216578d6cead1ef22c17300b5671dfd5094bfade" translate="yes" xml:space="preserve">
          <source>Two Ways:</source>
          <target state="translated">Двумя путями:</target>
        </trans-unit>
        <trans-unit id="e102a55b2ef3c3b3674b65d518da442a44ef1a0c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt; methods only to update a user interface. If you use them for heavy computations, your application will block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используйте &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;методы &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; только для обновления пользовательского интерфейса. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы используете их для тяжелых вычислений, ваше приложение заблокирует:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90636b72ea85ff1c8dfd10b10b077f8f1d322dbf" translate="yes" xml:space="preserve">
          <source>You can add other things to the Extension method such as wrapping it in a Try/Catch statement, allowing caller to tell it what type to return after completion, an exception callback to caller:</source>
          <target state="translated">В метод Extension можно добавить и другие вещи,например,обернуть его в оператор TryCatch,позволяя вызывающему абоненту сказать ему,какой тип возвращать после завершения,обратный вызов исключения для вызывающего абонента:</target>
        </trans-unit>
        <trans-unit id="13c62830d3a2b4de687637e949d6bdc107bde7fb" translate="yes" xml:space="preserve">
          <source>You need to look at the Backgroundworker example:</source>
          <target state="translated">Вам нужно взглянуть на пример с фоновым дизайнером:</target>
        </trans-unit>
        <trans-unit id="ed47376c5cec61c82f0fb915f389554c0b9052b5" translate="yes" xml:space="preserve">
          <source>You only want to use Invoke or BeginInvoke for the bare minimum piece of work required to change the UI. Your &quot;heavy&quot; method should execute on another thread (e.g. via BackgroundWorker) but then using Control.Invoke/Control.BeginInvoke just to update the UI. That way your UI thread will be free to handle UI events etc.</source>
          <target state="translated">Вы хотите использовать Invoke или BeginInvoke только для минимальной работы,необходимой для изменения пользовательского интерфейса.Ваш &quot;тяжелый&quot; метод должен выполняться на другом потоке (например,через BackgroundWorker),но затем с помощью Control.InvokeControl.BeginInvoke просто для обновления пользовательского интерфейса.Таким образом,ваш поток пользовательского интерфейса сможет свободно обрабатывать события пользовательского интерфейса и т.д.</target>
        </trans-unit>
        <trans-unit id="40308d92efc743e625f62d66941764aa9ca38d25" translate="yes" xml:space="preserve">
          <source>and second one is to use</source>
          <target state="translated">а второй-использовать</target>
        </trans-unit>
        <trans-unit id="524b958350bb765d714297d4f83c944518e97a08" translate="yes" xml:space="preserve">
          <source>in &lt;code&gt;Form1()&lt;/code&gt; constructor .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в конструкторе &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Form1()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9b7374b4586c6e99c3bed35092c20f937f35f17" translate="yes" xml:space="preserve">
          <source>label1.Invoke(y=()=&amp;gt;label1.Text=&quot;text&quot;);</source>
          <target state="translated">label1.Invoke(y=()=&amp;gt;label1.Text=&quot;text&quot;);</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
