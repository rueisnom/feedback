<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/142003">
    <body>
      <group id="142003">
        <trans-unit id="188db66d173d4c9c2cfa9e511a3c47dec8d733cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; causes separate thread to wait till invoked method is completed:</source>
          <target state="translated">&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; hace que un subproceso independiente espere hasta que se complete el m&amp;eacute;todo invocado:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b08f66fef449672cfaa633f9861c9a00cc32b791" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&lt;/a&gt;
Especially how it interacts with the UI layer.  Based on your posting, this seems to answer your issues.</source>
          <target state="translated">&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Especialmente c&amp;oacute;mo interact&amp;uacute;a con la capa de la interfaz de usuario. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Seg&amp;uacute;n su publicaci&amp;oacute;n, esto parece responder a sus problemas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7965917cff32d36bf584aca78251de387009568" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt; doesn't cause the separate thread to wait till invoked method is completed:</source>
          <target state="translated">&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no hace que el hilo separado espere hasta que se complete el m&amp;eacute;todo invocado:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f179616c726b43ddcc9b91ce608c46a0384df631" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Adding Try Catch, Auto Exception Logging and CallBack&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Agregar Try Catch, Auto Exception Logging y CallBack&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02b82bf3e1a93f8ba1612e9de1b8c929f472b3ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CODE 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;Oacute;DIGO 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b4b8c627349bf8556faac2b36ba11933a91a73b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CODE 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C&amp;Oacute;DIGO 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c64b3f64bb6e2c8f237028444f8986be6c5de7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Helper Method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;eacute;todo de ayuda&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d01e1b1b685912218f856209e992cf7eda468b42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sample Usage&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Uso de muestra&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f48b85708799dddd7d170178b98378d48ba3ef3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The situation is this&lt;/strong&gt;: I want to load data into a global variable based on the value of a control. I don't want to change the value of a control from the child thread. I'm not going to do it ever from a child thread.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La situaci&amp;oacute;n es la siguiente&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : quiero cargar datos en una variable global basada en el valor de un control. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No quiero cambiar el valor de un control desde el hilo secundario. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nunca lo voy a hacer desde un hilo secundario.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b0f6d52f0ce8e1b8420e81cb7ac6939a953f9bb" translate="yes" xml:space="preserve">
          <source>A new look using Async/Await and callbacks.  You only need one line of code if you keep the extension method in your project.</source>
          <target state="translated">Un nuevo aspecto usando AsyncAwait y las llamadas de retorno.Sólo necesitas una línea de código si mantienes el método de extensión en tu proyecto.</target>
        </trans-unit>
        <trans-unit id="10cd2c24f0128f883483255b77925485053df4ed" translate="yes" xml:space="preserve">
          <source>Action y; //declared inside class</source>
          <target state="translated">Acción y;/declarado dentro de la clase</target>
        </trans-unit>
        <trans-unit id="cb79c66b7f8d28de3fc3f880507b51d98360509c" translate="yes" xml:space="preserve">
          <source>Along the same lines as previous answers,
but a very short addition that Allows to use all Control properties without having cross thread invokation exception.</source>
          <target state="translated">En la misma línea que las respuestas anteriores,pero con una adición muy corta que permite utilizar todas las propiedades de Control sin tener la excepción de la invocación de hilos cruzados.</target>
        </trans-unit>
        <trans-unit id="1aab0db270befbe2cc543d0f9a0c314c3fecc18f" translate="yes" xml:space="preserve">
          <source>And then you can simply do this:</source>
          <target state="translated">Y luego puedes simplemente hacer esto:</target>
        </trans-unit>
        <trans-unit id="e563cfe6387964bed8d4c1dc6a73365021f8f182" translate="yes" xml:space="preserve">
          <source>As per &lt;a href=&quot;https://stackoverflow.com/questions/142003/cross-thread-operation-not-valid-control-accessed-from-a-thread-other-than-the#142108&quot;&gt;Prerak K's update comment&lt;/a&gt; (since deleted):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Seg&amp;uacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/142003/cross-thread-operation-not-valid-control-accessed-from-a-thread-other-than-the#142108&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;el comentario de actualizaci&amp;oacute;n de Prerak K&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (desde que se elimin&amp;oacute;):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f02661ee29e185e6d9abcf024d2514249fcc84e8" translate="yes" xml:space="preserve">
          <source>Attempt to access member of &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot;&gt;System.Windows.Forms.Control&lt;/a&gt; from different thread than UI thread will cause cross-thread exception.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Intentar acceder al miembro de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; desde un subproceso diferente al subproceso de la interfaz de usuario provocar&amp;aacute; una excepci&amp;oacute;n entre subprocesos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cfdd5e6174b1a9e8455dfd6042b09c1c44548556" translate="yes" xml:space="preserve">
          <source>BUT BUT BUT... it seems I'm back to square one. The Application again 
become nonresponsive. It seems to be due to the execution of line #1 if condition. The loading task is again done by the parent thread and not the third that I spawned.</source>
          <target state="translated">PERO PERO PERO...parece que he vuelto al punto de partida.La aplicación vuelve a no responder.Parece ser debido a la ejecución de la línea #1 si la condición.La tarea de carga se hace de nuevo con el hilo padre y no con el tercero que he engendrado.</target>
        </trans-unit>
        <trans-unit id="e806c824f4885208f95601392ddec281715b6125" translate="yes" xml:space="preserve">
          <source>BeginInvoke</source>
          <target state="translated">BeginInvoke</target>
        </trans-unit>
        <trans-unit id="7e1eb90aeacc6371f31ec12607e6b77603cff00e" translate="yes" xml:space="preserve">
          <source>BeginInvoke and Invoke methods</source>
          <target state="translated">ComenzarInvocar e Invocar métodos</target>
        </trans-unit>
        <trans-unit id="70d07c050238bbf5aa3eb59615b4c99eb6627933" translate="yes" xml:space="preserve">
          <source>Code solution</source>
          <target state="translated">Código de solución</target>
        </trans-unit>
        <trans-unit id="b66709ec059bd1186d2b063b070bd5f38f3d1119" translate="yes" xml:space="preserve">
          <source>Control.InvokeRequired is only useful when working controls inherited from Control class while SynchronizationContext can be used anywhere. Some useful information is as following links</source>
          <target state="translated">Control.InvokeRequired sólo es útil cuando se trabaja con controles heredados de la clase Control,mientras que SynchronizationContext puede utilizarse en cualquier lugar.Algunas informaciones útiles son los siguientes enlaces</target>
        </trans-unit>
        <trans-unit id="2b4f504792a7d3d8a5efefe60cded3f2a7d2003b" translate="yes" xml:space="preserve">
          <source>Controls in .NET are not generally thread safe.  That means you shouldn't access a control from a thread other than the one where it lives.  To get around this, you need to &lt;em&gt;invoke&lt;/em&gt; the control, which is what your 2nd sample is attempting.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los controles en .NET generalmente no son seguros para subprocesos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso significa que no debe acceder a un control desde un hilo que no sea el que vive. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para evitar esto, debe &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;invocar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el control, que es lo que intenta su segunda muestra.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33313311234b81fdae5aa7348d61d1bc6e33a818" translate="yes" xml:space="preserve">
          <source>Cross Thread Update UI using SynchronizationContext | .Net</source>
          <target state="translated">.Net</target>
        </trans-unit>
        <trans-unit id="be815dc42b8a797003d5531a64533af2a74f1719" translate="yes" xml:space="preserve">
          <source>Cross Thread Update UI | .Net</source>
          <target state="translated">.Net</target>
        </trans-unit>
        <trans-unit id="e9bb0bb589d5c347c935e02e87343fd4f2a930b3" translate="yes" xml:space="preserve">
          <source>Cross-thread operation not valid: Control accessed from a thread other than the thread it was created on</source>
          <target state="translated">La operación de cruce de hilos no es válida:Control accedido desde un hilo diferente al hilo en el que fue creado</target>
        </trans-unit>
        <trans-unit id="8e017ff03d8165f00dbf60bb448b579dc23e4fe4" translate="yes" xml:space="preserve">
          <source>Cross-thread operation not valid: Control accessed from a thread other than the thread it was created on.</source>
          <target state="translated">La operación de cruce de hilos no es válida:Control accedido desde un hilo diferente al hilo en el que fue creado.</target>
        </trans-unit>
        <trans-unit id="bddf02b4126e53c1f13950bdf5e4a39586e4e4f6" translate="yes" xml:space="preserve">
          <source>Declare some variable to hold these kind of values in a separate class (which will work as data holder) . Create static instance of this class adn you can access it over any thread.</source>
          <target state="translated">Declare alguna variable para mantener este tipo de valores en una clase separada (que funcionará como poseedora de datos).Crea una instancia estática de esta clase y puedes acceder a ella a través de cualquier hilo.</target>
        </trans-unit>
        <trans-unit id="123b323a9c351a5ebb88f8ec09aaf2db8a751fb0" translate="yes" xml:space="preserve">
          <source>Do your serious processing in the separate thread &lt;em&gt;before&lt;/em&gt; you attempt to switch back to the control's thread. For example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Realice su procesamiento serio en el hilo separado &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;antes de&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; intentar volver al hilo del control. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="60f9af3a2f24f2af9f9a91b2a5ae749f345720d6" translate="yes" xml:space="preserve">
          <source>Follow the simplest (in my opinion) way to modify objects from another thread:</source>
          <target state="translated">Sigue la forma más simple (en mi opinión)de modificar objetos de otro hilo:</target>
        </trans-unit>
        <trans-unit id="acb8ac032e9a32b9a23d12bd5e58825505e22c07" translate="yes" xml:space="preserve">
          <source>For example to get the text from a Control of the UI thread:</source>
          <target state="translated">Por ejemplo,para obtener el texto de un control del hilo de la interfaz de usuario:</target>
        </trans-unit>
        <trans-unit id="7cbce1ffbd6ee372f6df762dc576ebce5da16f80" translate="yes" xml:space="preserve">
          <source>Here is an alternative way if the object you are working with doesn't have</source>
          <target state="translated">Aquí hay una forma alternativa si el objeto con el que está trabajando no tiene</target>
        </trans-unit>
        <trans-unit id="6ff4f0325ec93e20a54e6dfdb9e4a75bf91f624c" translate="yes" xml:space="preserve">
          <source>How do I resolve this and also what is the effect of execution of Line#1 if block?</source>
          <target state="translated">¿Cómo resuelvo esto y también cuál es el efecto de la ejecución de la Línea #1 si se bloquea?</target>
        </trans-unit>
        <trans-unit id="fa692e8d344ff6df7cf07ee2b7c9fe0b50c2db13" translate="yes" xml:space="preserve">
          <source>However, in your case all you've done is pass the long-running method back to the main thread.  Of course, that's not really what you want to do.  You need to rethink this a little so that all you're doing on the main thread is setting a quick property here and there.</source>
          <target state="translated">Sin embargo,en tu caso todo lo que has hecho es pasar el método de largo plazo de nuevo al hilo principal.Por supuesto,eso no es realmente lo que quieres hacer.Necesitas repensar esto un poco para que todo lo que hagas en el hilo principal sea establecer una propiedad rápida aquí y allá.</target>
        </trans-unit>
        <trans-unit id="8cdc91e53389735002c286b7024465e76f1efa91" translate="yes" xml:space="preserve">
          <source>I don't know whether I perceived this right or wrong. I'm new to threading.</source>
          <target state="translated">No sé si percibí esto bien o mal.Soy nuevo en el mundo de los hilos.</target>
        </trans-unit>
        <trans-unit id="ba62435312b33eee202bc134f8bb89332edb69a1" translate="yes" xml:space="preserve">
          <source>I find the check-and-invoke code which needs to be littered within all methods related to forms to be way too verbose and unneeded. Here's a simple extension method which lets you do away with it completely:</source>
          <target state="translated">Creo que el código de comprobación e invocación que debe ser cubierto por todos los métodos relacionados con las formas es demasiado verborreico e innecesario.Aquí hay un simple método de extensión que te permite eliminarlo por completo:</target>
        </trans-unit>
        <trans-unit id="5727013a40b87c44992738d0ec452f4710a03f79" translate="yes" xml:space="preserve">
          <source>I found a need for this while programming an iOS-Phone monotouch app controller in a visual studio winforms prototype project outside of xamarin stuidio. Preferring to program in VS over xamarin studio as much as possible, I wanted the controller to be completely decoupled from the phone framework. This way implementing this for other frameworks like Android and Windows Phone would be much easier for future uses.</source>
          <target state="translated">Encontré una necesidad de esto mientras programaba un controlador de aplicaciones monotouch iOS-Phone en un estudio visual winforms proyecto prototipo fuera de xamarin stuidio.Prefiriendo programar en VS sobre el estudio xamarin tanto como sea posible,quería que el controlador estuviera completamente desacoplado del marco del teléfono.De esta manera,implementar esto para otros frameworks como Android y Windows Phone sería mucho más fácil para futuros usos.</target>
        </trans-unit>
        <trans-unit id="c981f66dd28eae20b0fc9d1e6878e24d83038c9d" translate="yes" xml:space="preserve">
          <source>I guess I have not presented the question properly.</source>
          <target state="translated">Supongo que no he presentado la pregunta correctamente.</target>
        </trans-unit>
        <trans-unit id="f2c17598b9d8facd47c7d6d9fd1a42a1a7c2225f" translate="yes" xml:space="preserve">
          <source>I have a scenario. (Windows Forms, C#, .NET)</source>
          <target state="translated">Tengo un escenario.(Windows Forms,C#,.NET)</target>
        </trans-unit>
        <trans-unit id="8756c26dbafa8ca5df197a4c5358bd23a6769a32" translate="yes" xml:space="preserve">
          <source>I have had this problem with the &lt;code&gt;FileSystemWatcher&lt;/code&gt; and found that the following code solved the problem:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;He tenido este problema con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;FileSystemWatcher&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y descubr&amp;iacute; que el siguiente c&amp;oacute;digo resolvi&amp;oacute; el problema:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fc06fa8eeeff0d4cee63db4981453c5d558f4ca6" translate="yes" xml:space="preserve">
          <source>I know its too late now. However even today if you are having trouble accessing cross thread controls? This is the shortest answer till date :P</source>
          <target state="translated">Sé que ya es demasiado tarde.Sin embargo,incluso hoy si tienes problemas para acceder a los controles de los hilos cruzados...Esta es la respuesta más corta hasta la fecha :P</target>
        </trans-unit>
        <trans-unit id="bd6a56d96a50a7f3890f9fea016d9353c383e061" translate="yes" xml:space="preserve">
          <source>I used a background worker thread which will be loading the data and when done will notify the application that it has done its work.</source>
          <target state="translated">Utilicé un hilo de trabajo de fondo que cargará los datos y cuando lo haga notificará a la aplicación que ha hecho su trabajo.</target>
        </trans-unit>
        <trans-unit id="11bda0b4109646097331b5e1a84ecee321f8f166" translate="yes" xml:space="preserve">
          <source>I wanted a solution where the GUI could respond to events without the burden of dealing with the cross threading switching code behind every button click. Basically let the class controller handle that to keep the client code simple. You could possibly have many events on the GUI where as if you could handle it in one place in the class would be cleaner. I am not a multi theading expert, let me know if this is flawed.</source>
          <target state="translated">Quería una solución en la que la interfaz gráfica pudiera responder a los eventos sin la carga de tener que lidiar con el código de conmutación de hilos cruzados que hay detrás de cada clic del botón.Básicamente,dejar que el controlador de la clase se encargue de eso para mantener el código del cliente simple.Podrías tener muchos eventos en el GUI donde si pudieras manejarlo en un lugar de la clase sería más limpio.No soy un experto en multi-lectura,hazme saber si esto es defectuoso.</target>
        </trans-unit>
        <trans-unit id="1dc4ea206863855cf11c55fdea62c6200cb32d43" translate="yes" xml:space="preserve">
          <source>If there is no work for UI thread, then there are idle gaps that can be used by a not-UI related computing.</source>
          <target state="translated">Si no hay trabajo para el hilo de UI,entonces hay lagunas ociosas que pueden ser utilizadas por una computación no relacionada con la UI.</target>
        </trans-unit>
        <trans-unit id="571d9b8eb3e4a243b7be528b330a174a67d33133" translate="yes" xml:space="preserve">
          <source>In order to use mentioned gaps use &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt; methods:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para usar las brechas mencionadas, use los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c65605adf5270f5065089b0189da542274d30db0" translate="yes" xml:space="preserve">
          <source>Invoke</source>
          <target state="translated">Invoke</target>
        </trans-unit>
        <trans-unit id="6805079961da21949bf5d9fbbcc3a83a07caa8b0" translate="yes" xml:space="preserve">
          <source>It works the same as above, but it is a different approach if you don't have an object with invokerequired, but do have access to the MainForm</source>
          <target state="translated">Funciona igual que arriba,pero es un enfoque diferente si no se tiene un objeto con invocación requerida,pero sí se tiene acceso al MainForm</target>
        </trans-unit>
        <trans-unit id="3ec62eadcadcfc5efeb0aacb5b51428741b2ea40" translate="yes" xml:space="preserve">
          <source>No more messing around - simple.</source>
          <target state="translated">No más tonterías...simple.</target>
        </trans-unit>
        <trans-unit id="317885447cebb59204ea4ad82dcf6fe62ef4e311" translate="yes" xml:space="preserve">
          <source>Now came a real problem. All the UI (main form and its child usercontrols) was created on the primary main thread. In the LOAD method of the usercontrol I'm fetching data based on the values of some control (like textbox) on userControl.</source>
          <target state="translated">Ahora llegó un verdadero problema.Toda la UI (forma principal y sus controles de usuario hijo)fue creada en el hilo principal primario.En el método LOAD del usercontrol estoy buscando datos basados en los valores de algún control (como textbox)en el userControl.</target>
        </trans-unit>
        <trans-unit id="6112946a0eb6d655e60266427479a1c4232a8b3f" translate="yes" xml:space="preserve">
          <source>Please read the &lt;em&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/ms741870(v=vs.100).aspx&quot;&gt;Threading Model&lt;/a&gt;&lt;/em&gt; in UI applications in order to understand basic concepts. The link navigates to page that describes the WPF threading model. However, Windows Forms utilizes the same idea.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lea el &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;a href=&quot;https://msdn.microsoft.com/library/ms741870(v=vs.100).aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Modelo de subprocesos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en las aplicaciones de IU para comprender los conceptos b&amp;aacute;sicos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El enlace navega a la p&amp;aacute;gina que describe el modelo de subprocesos WPF. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, Windows Forms utiliza la misma idea.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64619dc0c40ce140ba6f4ef2c349a7e2752bed80" translate="yes" xml:space="preserve">
          <source>Read answers on question &lt;a href=&quot;https://stackoverflow.com/questions/661561/how-to-update-the-gui-from-another-thread-in-c&quot;&gt;How to update the GUI from another thread in C#?&lt;/a&gt;.
For C# 5.0 and .NET 4.5 the recommended solution is &lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lea las respuestas a la pregunta &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/661561/how-to-update-the-gui-from-another-thread-in-c&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo actualizar la GUI desde otro hilo en C #? &lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para C # 5.0 y .NET 4.5, la soluci&amp;oacute;n recomendada est&amp;aacute; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a69dfc54c5bce979e0ffbd80496f7ceba3dc6e9" translate="yes" xml:space="preserve">
          <source>Return value in e.result and use it to set yout textbox value in backgroundWorker_RunWorkerCompleted event</source>
          <target state="translated">Devuelve el valor en e.result y lo usa para establecer su valor de cuadro de texto en backgroundWorker_RunWorkerCompleted event</target>
        </trans-unit>
        <trans-unit id="825328a92a9a854ed0c343502c00599dd1f2cbb2" translate="yes" xml:space="preserve">
          <source>Same question : how-to-update-the-gui-from-another-thread-in-c</source>
          <target state="translated">La misma pregunta:¿cómo actualizar la guía de otro hilo?</target>
        </trans-unit>
        <trans-unit id="7a4a4b96cfa36805e2b0bf7ece72400ff7c5b3f9" translate="yes" xml:space="preserve">
          <source>See my &lt;a href=&quot;http://pobox.com/~skeet/csharp/threads&quot;&gt;threading article&lt;/a&gt; for a &lt;a href=&quot;http://pobox.com/~skeet/csharp/threads/winforms.shtml&quot;&gt;WinForms example&lt;/a&gt; - although the article was written before BackgroundWorker arrived on the scene, and I'm afraid I haven't updated it in that respect. BackgroundWorker merely simplifies the callback a bit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea mi &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pobox.com/~skeet/csharp/threads&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;art&amp;iacute;culo de subprocesos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para ver un &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://pobox.com/~skeet/csharp/threads/winforms.shtml&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ejemplo de WinForms&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , aunque el art&amp;iacute;culo fue escrito antes de que BackgroundWorker llegara a la escena, y me temo que no lo he actualizado al respecto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BackgroundWorker simplemente simplifica un poco la devoluci&amp;oacute;n de llamada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9dc63bb2af5cd1e369af72f5dacfe14b82975a3c" translate="yes" xml:space="preserve">
          <source>Simply use this:</source>
          <target state="translated">Simplemente usa esto:</target>
        </trans-unit>
        <trans-unit id="1dac47504b6b788b5c47fdaff1885a75afdf6b76" translate="yes" xml:space="preserve">
          <source>Since there is only one thread, all UI operations are queued as work items into that thread:</source>
          <target state="translated">Como sólo hay un hilo,todas las operaciones de UI están en cola como elementos de trabajo en ese hilo:</target>
        </trans-unit>
        <trans-unit id="ca3dfccb87aa730c28a796edb3d768d8d436a705" translate="yes" xml:space="preserve">
          <source>Situation is this: I want to load data into a global variable based on the value of a control. I don't want to change the value of a control from the child thread. I'm not going to do it ever from a child thread.</source>
          <target state="translated">La situación es ésta:Quiero cargar datos en una variable global basada en el valor de un control.No quiero cambiar el valor de un control desde el hilo infantil.No voy a hacerlo nunca desde un hilo hijo.</target>
        </trans-unit>
        <trans-unit id="007fba3b2e8669fc9d40baae6a1c625b5e85c51f" translate="yes" xml:space="preserve">
          <source>So only accessing the value so that corresponding data can be fetched from the database.</source>
          <target state="translated">Así que sólo se accede al valor para que los datos correspondientes puedan ser recuperados de la base de datos.</target>
        </trans-unit>
        <trans-unit id="eca82d18def17ca9cce31cc41d22c93508540736" translate="yes" xml:space="preserve">
          <source>So only accessing the value so that the corresponding data can be fetched from the database.</source>
          <target state="translated">Así que sólo se accede al valor para que los datos correspondientes puedan ser sacados de la base de datos.</target>
        </trans-unit>
        <trans-unit id="da058dfc9ca2752ce55fbc0f92315b0398b06010" translate="yes" xml:space="preserve">
          <source>The Exception it gave was</source>
          <target state="translated">La excepción que dio fue</target>
        </trans-unit>
        <trans-unit id="1047482cad9df3cdaa6be5f15ea3276103df8f39" translate="yes" xml:space="preserve">
          <source>The GUI form is unaware the controller is running asynchronous tasks.</source>
          <target state="translated">El formulario GUI no sabe que el controlador está ejecutando tareas asincrónicas.</target>
        </trans-unit>
        <trans-unit id="19d06018c19bcd9c0a4105dbdeeb4ee2195588c2" translate="yes" xml:space="preserve">
          <source>The UI Thread</source>
          <target state="translated">El hilo de la UI</target>
        </trans-unit>
        <trans-unit id="fe9de2423a7f187bb172474a2f8e37ff9f33dad5" translate="yes" xml:space="preserve">
          <source>The cleanest (and proper) solution for UI cross-threading issues is to use SynchronizationContext, see &lt;a href=&quot;http://www.lostechies.com/blogs/gabrielschenker/archive/2009/01/23/synchronizing-calls-to-the-ui-in-a-multi-threaded-application.aspx&quot;&gt;Synchronizing calls to the UI in a multi-threaded application&lt;/a&gt; article, it explains it very nicely.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La soluci&amp;oacute;n m&amp;aacute;s limpia (y adecuada) para los problemas de subprocesos cruzados de la interfaz de usuario es usar SynchronizationContext, consulte &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.lostechies.com/blogs/gabrielschenker/archive/2009/01/23/synchronizing-calls-to-the-ui-in-a-multi-threaded-application.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sincronizar llamadas a la interfaz de usuario en un&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; art&amp;iacute;culo de &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aplicaci&amp;oacute;n multiproceso&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , lo explica muy bien.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c5e4b02a5f418b4350e0984de858f8589ac2bfa1" translate="yes" xml:space="preserve">
          <source>The computing overhead of method being invoked should be small as well as computing overhead of event handler methods because the UI thread is used there - the same that is responsible for handling user input. Regardless if this is &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La sobrecarga inform&amp;aacute;tica del m&amp;eacute;todo que se invoca debe ser peque&amp;ntilde;a, as&amp;iacute; como la sobrecarga inform&amp;aacute;tica de los m&amp;eacute;todos de manejo de eventos porque el subproceso UI se usa all&amp;iacute;, el mismo responsable de manejar la entrada del usuario. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Independientemente de si se trata de &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6537fb373ef1813017b553425872eb57bfb45771" translate="yes" xml:space="preserve">
          <source>The control then uses the current form object to deal with the events, and will therefore be on the same thread.</source>
          <target state="translated">El control utiliza entonces el objeto de forma actual para tratar los eventos,y por lo tanto estará en el mismo hilo.</target>
        </trans-unit>
        <trans-unit id="157ae424ce08780f6b4f7141bd4d5e96a8e210de" translate="yes" xml:space="preserve">
          <source>The pseudocode would look like this:</source>
          <target state="translated">El pseudocódigo se vería así:</target>
        </trans-unit>
        <trans-unit id="fbc043659f6ec8ac7ca50bd4589cba0e3a307d16" translate="yes" xml:space="preserve">
          <source>The solution you want then should look like:</source>
          <target state="translated">La solución que quieres entonces debe parecer:</target>
        </trans-unit>
        <trans-unit id="099ea64091e8a542c01994ac0975274cb7f43b1b" translate="yes" xml:space="preserve">
          <source>The user control does some heavy data operation, such that if I directly call the &lt;code&gt;UserControl_Load&lt;/code&gt; method the UI become nonresponsive for the duration for load method execution.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El control de usuario realiza algunas operaciones de datos pesados, de modo que si llamo directamente al &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;UserControl_Load&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , la interfaz de usuario deja de responder durante la ejecuci&amp;oacute;n del m&amp;eacute;todo de carga.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="300c681df157ada97ca4a46ad24788d6d9af63d0" translate="yes" xml:space="preserve">
          <source>There are two options for cross thread operations.</source>
          <target state="translated">Hay dos opciones para las operaciones de hilo cruzado.</target>
        </trans-unit>
        <trans-unit id="a10d0e39c285e5bd47b26b31b08df24c211d6cb8" translate="yes" xml:space="preserve">
          <source>There is a main form which hosts some user control.</source>
          <target state="translated">Hay un formulario principal que alberga algún control de usuario.</target>
        </trans-unit>
        <trans-unit id="712298864f58d1bc4e135e572306280a7bb5f5c0" translate="yes" xml:space="preserve">
          <source>There is only one thread (UI thread), that is allowed to access &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot;&gt;System.Windows.Forms.Control&lt;/a&gt; and its subclasses members.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo hay un subproceso (subproceso de interfaz de usuario), que puede acceder a &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y sus miembros de subclases.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dab8ded28f92359e5f9c9d5860d88fe29108ae1f" translate="yes" xml:space="preserve">
          <source>This is how i access any form control from a thread.</source>
          <target state="translated">Así es como accedo a cualquier forma de control desde un hilo.</target>
        </trans-unit>
        <trans-unit id="53eb53cfb175a2ba78c619db5044612631695c15" translate="yes" xml:space="preserve">
          <source>This is not the recommended way to solve this error but you can suppress it quickly, it will do the job . I prefer this for prototypes or demos . add</source>
          <target state="translated">Esta no es la forma recomendada de resolver este error pero puedes suprimirlo rápidamente,hará el trabajo.Prefiero esto para los prototipos o las demostraciones.Añada</target>
        </trans-unit>
        <trans-unit id="5c075d610f8d84cda1a4650d52585b952930449f" translate="yes" xml:space="preserve">
          <source>This is useful if you are working with the main form in a class other than the main form with an object that is in the main form, but doesn't have InvokeRequired</source>
          <target state="translated">Esto es útil si estás trabajando con la forma principal en una clase distinta de la forma principal con un objeto que está en la forma principal,pero que no tiene InvokeRequired</target>
        </trans-unit>
        <trans-unit id="009bfa89936ed96950785b24d7516548a4c10347" translate="yes" xml:space="preserve">
          <source>Threading Model in UI</source>
          <target state="translated">Modelo de rosca en la interfaz de usuario</target>
        </trans-unit>
        <trans-unit id="8a6182575d1d703a7e9fe67917963edfbb7ce8e7" translate="yes" xml:space="preserve">
          <source>To know more about this I did some googling and a suggestion came up like using the following code</source>
          <target state="translated">Para saber más sobre esto,busqué en Google y surgió una sugerencia como usar el siguiente código</target>
        </trans-unit>
        <trans-unit id="001a1fd40d11d458591444449ac11f946e331eee" translate="yes" xml:space="preserve">
          <source>To overcome this I load data on different thread (trying to change existing code as little as I can)</source>
          <target state="translated">Para superar esto,cargo los datos en un hilo diferente (tratando de cambiar el código existente lo menos posible)</target>
        </trans-unit>
        <trans-unit id="fe7088016fa44427af7e7e4bffaaaddee05b6c72" translate="yes" xml:space="preserve">
          <source>To perform computing expensive operation always use separate thread. Since .NET 2.0 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot;&gt;BackgroundWorker&lt;/a&gt; is dedicated to performing computing expensive operations in Windows Forms. However in new solutions you should use the async-await pattern as described &lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para realizar operaciones costosas de computaci&amp;oacute;n, utilice siempre hilos separados. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde .NET 2.0 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.componentmodel.backgroundworker.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;BackgroundWorker&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se dedica a realizar operaciones costosas de computaci&amp;oacute;n en formularios Windows Forms. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, en las nuevas soluciones, debe usar el patr&amp;oacute;n de espera as&amp;iacute;ncrona como se describe &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/18033198/2042090&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;aqu&amp;iacute;&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="216578d6cead1ef22c17300b5671dfd5094bfade" translate="yes" xml:space="preserve">
          <source>Two Ways:</source>
          <target state="translated">Dos maneras:</target>
        </trans-unit>
        <trans-unit id="e102a55b2ef3c3b3674b65d518da442a44ef1a0c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/a&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/a&gt; methods only to update a user interface. If you use them for heavy computations, your application will block:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use los &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;eacute;todos &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/System.Windows.Forms.Control.Invoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.Invoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.windows.forms.control.begininvoke.aspx&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System.Windows.Forms.Control.BeginInvoke&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo para actualizar una interfaz de usuario. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si los usa para c&amp;aacute;lculos pesados, su aplicaci&amp;oacute;n bloquear&amp;aacute;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="90636b72ea85ff1c8dfd10b10b077f8f1d322dbf" translate="yes" xml:space="preserve">
          <source>You can add other things to the Extension method such as wrapping it in a Try/Catch statement, allowing caller to tell it what type to return after completion, an exception callback to caller:</source>
          <target state="translated">Puedes añadir otras cosas al método de extensión como envolverlo en una declaración TryCatch,permitiendo a la persona que llama decirle que tipo devolver después de la finalización,una excepción de devolución de llamada a la persona que llama:</target>
        </trans-unit>
        <trans-unit id="13c62830d3a2b4de687637e949d6bdc107bde7fb" translate="yes" xml:space="preserve">
          <source>You need to look at the Backgroundworker example:</source>
          <target state="translated">Tienes que mirar el ejemplo de Backgroundworker:</target>
        </trans-unit>
        <trans-unit id="ed47376c5cec61c82f0fb915f389554c0b9052b5" translate="yes" xml:space="preserve">
          <source>You only want to use Invoke or BeginInvoke for the bare minimum piece of work required to change the UI. Your &quot;heavy&quot; method should execute on another thread (e.g. via BackgroundWorker) but then using Control.Invoke/Control.BeginInvoke just to update the UI. That way your UI thread will be free to handle UI events etc.</source>
          <target state="translated">Sólo quieres usar Invoke o BeginInvoke para el mínimo trabajo requerido para cambiar la UI.Su método &quot;pesado&quot; debería ejecutarse en otro hilo (por ejemplo,a través de BackgroundWorker)pero luego usando Control.InvokeControl.BeginInvoke sólo para actualizar la UI.De esa manera tu hilo de la UI será libre de manejar los eventos de la UI,etc.</target>
        </trans-unit>
        <trans-unit id="40308d92efc743e625f62d66941764aa9ca38d25" translate="yes" xml:space="preserve">
          <source>and second one is to use</source>
          <target state="translated">y la segunda es usar</target>
        </trans-unit>
        <trans-unit id="524b958350bb765d714297d4f83c944518e97a08" translate="yes" xml:space="preserve">
          <source>in &lt;code&gt;Form1()&lt;/code&gt; constructor .</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;constructor &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Form1()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f9b7374b4586c6e99c3bed35092c20f937f35f17" translate="yes" xml:space="preserve">
          <source>label1.Invoke(y=()=&amp;gt;label1.Text=&quot;text&quot;);</source>
          <target state="translated">label1.Invoke(y=()=&amp;gt;label1.Text=&quot;text&quot;);</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
