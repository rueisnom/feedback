<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/1433204">
    <body>
      <group id="1433204">
        <trans-unit id="691b744886da99866feaea02d3066790f516c985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;
allows one module of your program to access a global variable or function declared in another module of your program.
You usually have extern variables declared in header files.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; позволяет одному модулю вашей программы обращаться к глобальной переменной или функции, объявленной в другом модуле вашей программы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обычно у вас есть внешние переменные, объявленные в заголовочных файлах.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7ba700d01f9e35eaa62b507ae07d80ca0838516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used so one &lt;code&gt;first.c&lt;/code&gt; file can have full access to a global parameter in another &lt;code&gt;second.c&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используется для того, чтобы один &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;файл &lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; мог иметь полный доступ к глобальному параметру в другом &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;файле &lt;/font&gt;&lt;/font&gt; &lt;code&gt;second.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67c7d933bc91f3d7f4581169eb22a8f828ce47b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used to let other C files or external components know this variable is already defined somewhere. Example: if  you are building a library, no need to define global variable mandatorily somewhere in library itself. The library will be compiled directly, but while linking the file, it checks for the definition.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; используется, чтобы другие C-файлы или внешние компоненты знали, что эта переменная уже где-то определена. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Пример: если вы создаете библиотеку, нет необходимости обязательно определять глобальную переменную где-то в самой библиотеке. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Библиотека будет скомпилирована напрямую, но при связывании файла она проверяет определение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8af8b6a3f7c07ab0ae2fed724efa07585bdb20d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; simply means a variable is defined elsewhere (e.g., in another file).</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; просто означает, что переменная определена в другом месте (например, в другом файле).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="912da2af6624131ec49a4d74be0e306561c1bf22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;external.h&lt;/code&gt; for the EXTERN macro definitions, etc.</source>
          <target state="translated">&lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для определения макросов EXTERN и т. д.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6c6cab53c2a8d3d3c32325a2554932b43513b2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file1c.h&lt;/code&gt; to define types (notably, &lt;code&gt;struct oddball&lt;/code&gt;, the type of &lt;code&gt;oddball_struct&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для определения типов (в частности, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct oddball&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , тип &lt;/font&gt;&lt;/font&gt; &lt;code&gt;oddball_struct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83cd5bc57f7c5534f30691c642087a0f66f09d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file2c.h&lt;/code&gt; to define or declare the global variables.</source>
          <target state="translated">&lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для определения или объявления глобальных переменных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6175a7f682df0cfe01eed1994f44252888954cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file3c.c&lt;/code&gt; which defines the global variables.</source>
          <target state="translated">&lt;code&gt;file3c.c&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который определяет глобальные переменные.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b96ebb2cad7a9f3b0501e004f81356772496e65f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file4c.c&lt;/code&gt; which simply uses the global variables.</source>
          <target state="translated">&lt;code&gt;file4c.c&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который просто использует глобальные переменные.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bde7b6e5dceee89851b0dfbe86b665aa66b851c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file5c.c&lt;/code&gt; which shows that you can declare and then define the global variables.</source>
          <target state="translated">&lt;code&gt;file5c.c&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который показывает, что вы можете объявить, а затем определить глобальные переменные.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59db616bb4616380c90bce70be473268e263ec20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file6c.c&lt;/code&gt; which shows that you can define and then (attempt to) declare the global variables.</source>
          <target state="translated">&lt;code&gt;file6c.c&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который показывает, что вы можете определить, а затем (попытаться) объявить глобальные переменные.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbe60d5324112e7a90fab3433e01cc10f44332d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog1&lt;/code&gt; uses &lt;code&gt;prog1.c&lt;/code&gt;, &lt;code&gt;file1.c&lt;/code&gt;, &lt;code&gt;file2.c&lt;/code&gt;, &lt;code&gt;file3.h&lt;/code&gt; and &lt;code&gt;prog1.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8336dc4e7fb0da995e44db63cc9e75bcbed8f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog2&lt;/code&gt; uses &lt;code&gt;prog2.c&lt;/code&gt;, &lt;code&gt;file10.c&lt;/code&gt;, &lt;code&gt;file11.c&lt;/code&gt;, &lt;code&gt;file12.c&lt;/code&gt;, &lt;code&gt;prog2.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file10.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file11.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file12.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a35ff2125678aea4d10758c53f9b97f84cea22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog3&lt;/code&gt; uses &lt;code&gt;prog3.c&lt;/code&gt;, &lt;code&gt;file1a.c&lt;/code&gt;, &lt;code&gt;file2a.c&lt;/code&gt;, &lt;code&gt;file3a.h&lt;/code&gt;, &lt;code&gt;prog3.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1a.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2a.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3a.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb03231f7d7081ad3fb95a2ebfb85c0a8588bfd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog4&lt;/code&gt; uses &lt;code&gt;prog4.c&lt;/code&gt;, &lt;code&gt;file1b.c&lt;/code&gt;, &lt;code&gt;file2b.c&lt;/code&gt;, &lt;code&gt;prog4.h&lt;/code&gt;, &lt;code&gt;file3b.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c13993e2c5e59f817ad09159b39659211a8029d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog5&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file3c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70cfe9feb2aa730f50a77d8f1f96a1fd90df55bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog6&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file5c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3fca148ebe696e5ef8edb0ed4a2bf0c6e3197b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog7&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file6c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog7&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6365135448408cb725d916abbeeb6b605c5606f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog8&lt;/code&gt; uses &lt;code&gt;prog8.c&lt;/code&gt;, &lt;code&gt;file7c.c&lt;/code&gt;, &lt;code&gt;file9c.c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file7c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file9c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b33f5f286b0e8ecfa5f139bfae710da5c66808c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog9&lt;/code&gt; uses &lt;code&gt;prog8.c&lt;/code&gt;, &lt;code&gt;file8c.c&lt;/code&gt;, &lt;code&gt;file9c.c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog9&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; использует &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file8c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file9c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c2c7350f8d61556fd197ba3cc7ad47f1a41f7f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;extern keyword is used with the variable for its identification as a global variable.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ключевое слово extern используется с переменной для ее идентификации в качестве глобальной переменной.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae48a4577bef144b2ee1fffb6266f5b9461caf28" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Confession&lt;/em&gt;: The 'avoiding duplicated code' scheme outlined here was
developed because the issue affects some code I work on (but don't own),
and is a niggling concern with the scheme outlined in the first part of
the answer.  However, the original scheme leaves you with just two
places to modify to keep variable definitions and declarations
synchronized, which is a big step forward over having exernal variable
declarations scattered throughout the code base (which really matters
when there are thousands of files in total).  However, the code in the
files with the names &lt;code&gt;fileNc.[ch]&lt;/code&gt; (plus &lt;code&gt;external.h&lt;/code&gt; and &lt;code&gt;externdef.h&lt;/code&gt;)
shows that it can be made to work.  Clearly, it would not be hard to
create a header generator script to give you the standardized template
for a variable defining and declaring header file.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Признание&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : схема &amp;laquo;избежания дублирования кода&amp;raquo;, изложенная здесь, была разработана, потому что проблема затрагивает некоторый код, над которым я работаю (но не владею), и вызывает беспокойство по поводу схемы, изложенной в первой части ответа. Тем не менее, оригинальная схема оставляет вам всего два места для изменения, чтобы синхронизировать определения и объявления переменных, что является большим шагом вперед по сравнению с разбросом объявлений внешних переменных по всей базе кода (что действительно имеет значение, когда в общей сложности тысячи файлов) , Тем не менее, код в файлах с именами &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fileNc.[ch]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (плюс &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;externdef.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;) показывает, что это можно заставить работать. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ясно, что было бы несложно создать скрипт генератора заголовков, который предоставил бы вам стандартизированный шаблон для переменной, определяющей и объявляющей файл заголовка.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="802de36c736dcca7dba68f179d6b2fe2a98d8ff5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Late Major Addition&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Позднее крупное дополнение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cabb747ea3dfc8e01242e16511d95cb93e4e56be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NB&lt;/em&gt; These are toy programs with just barely enough code to make them
marginally interesting.  There is repetition within the examples that
could be removed, but isn't to simplify the pedagogical explanation.
(For example: the difference between &lt;code&gt;prog5.c&lt;/code&gt; and &lt;code&gt;prog8.c&lt;/code&gt; is the name
of one of the headers that are included.  It would be possible to
reorganize the code so that the &lt;code&gt;main()&lt;/code&gt; function was not repeated, but
it would conceal more than it revealed.)</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NB&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Это игрушечные программы с едва достаточным кодом, чтобы сделать их немного интересными. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В примерах есть повторение, которое можно удалить, но не для упрощения педагогического объяснения. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Например: разница между &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заключается в названии одного из включенных заголовков. Можно было бы реорганизовать код так, чтобы &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;функция &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не повторялась, но скрывала бы больше чем это выявлено.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="246969342f7091a47a7e6df3ab6c0b9846bad087" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next source file completes the source (provides a main program) for &lt;code&gt;prog5&lt;/code&gt;, &lt;code&gt;prog6&lt;/code&gt; and &lt;code&gt;prog7&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующий исходный файл завершает исходный код (предоставляет основную программу) для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog7&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c0295f73a690f01b9e6a895dcda3cc552adfdd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog1&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующие два файла завершают исходный код для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd48a25f012bcd39ad2bbcac04ba00b07d750b9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog2&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующие два файла завершают исходный код для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43678bd292d03dff8a030116f5904f4ddc9881aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog3&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующие два файла завершают исходный код для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b8b12f6883eef3eb46da8b95ee2b2966146e288" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog4&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующие два файла завершают исходный код для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b6cfd519088106efcde93a7e2818d7019468cf8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog8&lt;/code&gt; and &lt;code&gt;prog9&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующие два файла завершают исходный код для &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog9&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67c77d683553c02292bbef903605e0ffb1384061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#6.9p5&quot;&gt;&amp;sect;6.9 External definitions &amp;para;5&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#6.9p5&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;sect;6.9 Внешние определения №5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f3e271c09e92f032c8fe65e498d41ca3fd41f69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.2&quot;&gt;J.2 Undefined behavior&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;J.2 Неопределенное поведение&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22ad7a5f93246b4e0bc197f64432fc4496f7a1ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C++17 inline variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++ 17 встроенных переменных&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b0c72cdf18835af81fed510af873ef1583c670a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GCC ELF Linux implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GCC ELF Linux реализация&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d02958a95497c38d1132e2d49d1b72a14154cb99" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;161)&lt;/sup&gt; Thus, if an identifier declared with external linkage
  is not used in an expression, there need be no external definition for
  it.</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;161)&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Таким образом, если идентификатор, объявленный с внешней связью, не используется в выражении, для него не требуется никакого внешнего определения.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f931e8eb7528883decff0c083a27b301e685fe8" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;If you're not an experienced C programmer, you could (and perhaps
       should) stop reading here.&lt;/em&gt;
&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы не опытный программист на C, вы можете (и, возможно, должны) перестать читать здесь.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="212d3d4f1c7e1cf1eb0644358b4f9e7fc0c6acad" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;If you're not an experienced C programmer, you probably should stop reading here.&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы не опытный программист на C, вам, вероятно, следует перестать читать здесь.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="904db4087127fede8e7a24d87fc43f98f55cdb62" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;The source code and text of this answer are available in my
      &lt;a href=&quot;https://github.com/jleffler/soq&quot;&gt;SOQ&lt;/a&gt; (Stack Overflow Questions)
      repository on GitHub in the
      &lt;a href=&quot;https://github.com/jleffler/soq/tree/master/src/so-0143-3204&quot;&gt;src/so-0143-3204&lt;/a&gt;
      sub-directory.&lt;/em&gt;
&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Исходный код и текст этого ответа доступны в моем &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jleffler/soq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;репозитории SOQ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (вопросы о переполнении стека) на GitHub в &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jleffler/soq/tree/master/src/so-0143-3204&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;подкаталоге src / so-0143-3204&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e7ca21e90603b40c1f38e754ca020fe41a1456b2" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Correct header &lt;code&gt;file3b.h&lt;/code&gt; included (instead of &lt;code&gt;fileba.h&lt;/code&gt;) per
&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;Denis Kniazhev&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Правильный заголовок &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; включен (вместо &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fileba.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) для &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Дениса Княжева&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7e33b7e516b6b281ee81a9ca638b338f3b469214" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Reverse contents of &lt;code&gt;#if&lt;/code&gt; and &lt;code&gt;#else&lt;/code&gt; blocks, fixing bug identified by
&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;Denis Kniazhev&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратное содержимое &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;блоков &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#else&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , исправление ошибки, выявленной &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Денисом Княжевым&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c75267659ed7cb9acf9c3bd955871ce73dc26ed0" translate="yes" xml:space="preserve">
          <source>A function should never need to declare a variable using &lt;code&gt;extern&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Функция никогда не должна объявлять переменную, используя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95a08cd55a032d11568e24a970f19057fd318c96" translate="yes" xml:space="preserve">
          <source>A header file only contains &lt;code&gt;extern&lt;/code&gt; declarations of variables &amp;mdash; never
&lt;code&gt;static&lt;/code&gt; or unqualified variable definitions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Заголовочный файл содержит только &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объявления переменных, но не &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или неквалифицированные определения переменных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="929c9870b227429e31fcdd1590cbd4387c67db5b" translate="yes" xml:space="preserve">
          <source>A source file never contains &lt;code&gt;extern&lt;/code&gt; declarations of variables &amp;mdash;
source files always include the (sole) header that declares them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Исходный файл никогда не содержит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объявлений переменных - исходные файлы всегда содержат (единственный) заголовок, который их объявляет.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="807b7c5e47890e949e5e71577df2a663417f44b3" translate="yes" xml:space="preserve">
          <source>A typical scheme works like this, using the original global variable
illustrated in &lt;code&gt;file3.h&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Типичная схема работает следующим образом, используя исходную глобальную переменную, показанную в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3669f7e5c7ae797032b9f571d2855464bd33a8cc" translate="yes" xml:space="preserve">
          <source>A variable is &lt;strong&gt;declared&lt;/strong&gt; when the compiler is informed that a
variable exists (and this is its type); it does not allocate the
storage for the variable at that point.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Переменная &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявляется,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; когда компилятору сообщают, что переменная существует (и это ее тип); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;он не выделяет память для переменной в этой точке.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3ef0901904af9ddecd5808dfc21e84c84d15be7" translate="yes" xml:space="preserve">
          <source>A variable is &lt;strong&gt;defined&lt;/strong&gt; when the compiler allocates the storage for
the variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Переменная &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определяется,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; когда компилятор выделяет хранилище для переменной.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8955ccaa95522319deba1043a4efb97953fda31" translate="yes" xml:space="preserve">
          <source>A very short solution I use to allow a header file to contain the extern reference or actual implementation of an object. The file that actually contains the object just does &lt;code&gt;#define GLOBAL_FOO_IMPLEMENTATION&lt;/code&gt;. Then when I add a new object to this file it shows up in that file also without me having to copy and paste the definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Очень короткое решение, которое я использую, чтобы файл заголовка содержал внешнюю ссылку или фактическую реализацию объекта. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Файл, который на самом деле содержит объект, просто выполняет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#define GLOBAL_FOO_IMPLEMENTATION&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Затем, когда я добавляю новый объект в этот файл, он также появляется в этом файле, и мне не нужно копировать и вставлять определение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f089e1504e9f5976c51721bd3cd0db3737e78c9a" translate="yes" xml:space="preserve">
          <source>Adding an &lt;code&gt;extern&lt;/code&gt; turns a variable &lt;em&gt;definition&lt;/em&gt; into a variable &lt;em&gt;declaration&lt;/em&gt;. See &lt;a href=&quot;https://stackoverflow.com/questions/1410563/&quot;&gt;this thread&lt;/a&gt; as to what's the difference between a declaration and a definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Добавление &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; превращает &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменной в &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменной &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Посмотрите &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1410563/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;эту ветку&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; о разнице между объявлением и определением.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371aa8471e9601036622d8ba995342ff661dca0d" translate="yes" xml:space="preserve">
          <source>Although there are other ways of doing it, this method is simple and
reliable.
It is demonstrated by &lt;code&gt;file3.h&lt;/code&gt;, &lt;code&gt;file1.c&lt;/code&gt; and &lt;code&gt;file2.c&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Хотя есть и другие способы сделать это, этот метод прост и надежен. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это демонстрируют &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33409945b6a6a4b528aa2923576aeff68a8476dd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;extern&lt;/code&gt; variable is a declaration (thanks to sbi for the correction) of a variable which is defined in another translation unit. That means the storage for the variable is allocated in another file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменная является декларация (благодаря SbI для коррекции) переменной , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;которая определена в другом ЕП. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что хранилище для переменной размещено в другом файле.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2713c0441427ac808975eb78cd2e068c63a3c8e8" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;external definition&lt;/em&gt; is an external declaration that is also a
  definition of a function (other than an inline definition) or an
  object.
  If an identifier declared with external linkage is used in an
  expression (other than as part of the operand of a &lt;code&gt;sizeof&lt;/code&gt; or
  &lt;code&gt;_Alignof&lt;/code&gt; operator whose result is an integer constant), somewhere in
  the entire program there shall be exactly one external definition for
  the identifier; otherwise, there shall be no more than
  one.&lt;sup&gt;161)&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Внешнее определение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является внешним свидетельством того, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что является также определение функции (другой , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;чем определение инлайн) или объекта. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если идентификатор, объявленный с внешней связью, используется в выражении (кроме как в качестве части операнда оператора &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_Alignof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , результатом которого является целочисленная константа), где-то во всей программе должно быть ровно одно внешнее определение для идентификатора; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в противном случае их должно быть не больше одного. &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;161)&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3efdf6e8d9681ed5f5f7c72651568658204fad53" translate="yes" xml:space="preserve">
          <source>An identifier with external linkage is used, but in the program there
  does not exist exactly one external definition for the identifier, or
  the identifier is not used and there exist multiple external
  definitions for the identifier (6.9).</source>
          <target state="translated">Используется идентификатор с внешней связью,но в программе не существует ни одного внешнего определения для идентификатора,либо идентификатор не используется и существует несколько внешних определений для идентификатора (6.9).</target>
        </trans-unit>
        <trans-unit id="8ddaec31cd2c4e030c6ef6df28a74cc5b31c7ce6" translate="yes" xml:space="preserve">
          <source>Another concern can be that the variables need to be defined in each of
a number of 'main programs'.  This is normally a spurious concern; you
can simply introduce a C source file to define the variables and link
the object file produced with each of the programs.</source>
          <target state="translated">Другая проблема может заключаться в том,что переменные должны быть определены в каждой из нескольких &quot;основных программ&quot;.Обычно это поддельный вопрос;вы можете просто ввести исходный файл на C,чтобы определить переменные и связать созданный объектный файл с каждой из программ.</target>
        </trans-unit>
        <trans-unit id="32a67881216469ac0ec14850f47fe546855708f2" translate="yes" xml:space="preserve">
          <source>Any header should be protected against reinclusion, so that type
definitions (enum, struct or union types, or typedefs generally) do not
cause problems.  The standard technique is to wrap the body of the
header in a header guard such as:</source>
          <target state="translated">Любой заголовок должен быть защищен от повторного включения,чтобы определения типов (enum,struct или union types,или typedefs вообще)не вызывали проблем.Стандартный метод заключается в том,чтобы обернуть тело заголовка в защитный кожух,например:</target>
        </trans-unit>
        <trans-unit id="45d35123fc8a96fae7a834999067040cfc78f9a9" translate="yes" xml:space="preserve">
          <source>As noted in comments here, and as stated in my answer to a similar
&lt;a href=&quot;https://stackoverflow.com/questions/1490693&quot;&gt;question&lt;/a&gt;, using multiple
definitions for a global variable leads to undefined behaviour (J.2;
&amp;sect;6.9), which is the standard's way of saying &quot;anything could happen&quot;.
One of the things that can happen is that the program behaves as you
expect; and J.5.11 says, approximately, &quot;you might be lucky more often
than you deserve&quot;.
But a program that relies on multiple definitions of an extern variable
&amp;mdash; with or without the explicit 'extern' keyword &amp;mdash; is not a strictly
conforming program and not guaranteed to work everywhere.
Equivalently: it contains a bug which may or may not show itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как отмечено здесь в комментариях и как указано в моем ответе на аналогичный &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1490693&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;вопрос&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , использование нескольких определений для глобальной переменной приводит к неопределенному поведению (J.2; &amp;sect;6.9), что является стандартом для выражения &amp;laquo;все может произойти&amp;raquo;. Одна из вещей, которая может произойти, заключается в том, что программа ведет себя так, как вы ожидаете; и в J.5.11 примерно сказано: &amp;laquo;Возможно, вам повезет чаще, чем вы заслуживаете&amp;raquo;. Но программа, которая опирается на множество определений внешней переменной - с явным ключевым словом extern или без него - не является строго соответствующей программой и не гарантирует, что она будет работать везде. Эквивалентно: это содержит ошибку, которая может показать или не показать себя.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea9c797001a229bb0f7e2e5dcae3538ba2a55b2c" translate="yes" xml:space="preserve">
          <source>Avoid global variables</source>
          <target state="translated">Избегайте глобальных переменных</target>
        </trans-unit>
        <trans-unit id="c2c86e9533eaac188daf2a31bc7c14f8d7b5731f" translate="yes" xml:space="preserve">
          <source>Avoid global variables whenever possible &amp;mdash; use functions instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;По возможности избегайте глобальных переменных - используйте вместо них функции.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d0532814d924ccd1ab821349854a5eaf5e7fdf8" translate="yes" xml:space="preserve">
          <source>Avoiding Code Duplication</source>
          <target state="translated">Избежать дублирования кода</target>
        </trans-unit>
        <trans-unit id="64132ad1f1f27881cb1abfa320c5ec1afc5711ba" translate="yes" xml:space="preserve">
          <source>Because this technique is not always supported, it is best to avoid
using it, &lt;em&gt;especially if your code needs to be portable&lt;/em&gt;.
Using this technique, you can also end up with unintentional type
punning.
If one of the files declared &lt;code&gt;i&lt;/code&gt; as a &lt;code&gt;double&lt;/code&gt; instead of as an &lt;code&gt;int&lt;/code&gt;,
C's type-unsafe linkers probably would not spot the mismatch.
If you're on a machine with 64-bit &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt;, you'd not even
get a warning; on a machine with 32-bit &lt;code&gt;int&lt;/code&gt; and 64-bit &lt;code&gt;double&lt;/code&gt;, you'd
probably get a warning about the different sizes &amp;mdash; the linker would
use the largest size, exactly as a Fortran program would take the
largest size of any common blocks.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку этот метод не всегда поддерживается, лучше избегать его использования, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;особенно если ваш код должен быть переносимым&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Используя эту технику, вы также можете получить непреднамеренное наказание. Если один из файлов объявит &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а не как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , небезопасные компоновщики C, вероятно, не обнаружат несоответствие. Если вы находитесь на машине с 64-битным &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , вы даже не получите предупреждение; на машине с 32-битным &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и 64-битным &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы, вероятно, получите предупреждение о разных размерах - компоновщик будет использовать самый большой размер, точно так же, как программа на Fortran будет принимать самый большой размер из всех распространенных блоков.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b33dab1d92c5a6831743f5185214a923868b7f2" translate="yes" xml:space="preserve">
          <source>Best way to declare and define global variables</source>
          <target state="translated">Лучший способ объявить и определить глобальные переменные</target>
        </trans-unit>
        <trans-unit id="31291b8ed31cfce74fc0f36b57aa3dad74b3a290" translate="yes" xml:space="preserve">
          <source>But it will be correctly declared as an &lt;code&gt;unsigned char&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но он будет правильно объявлен как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="535e045c8f36ad1784410ee9660b08a2ee4c1486" translate="yes" xml:space="preserve">
          <source>But this link seems to no longer work...</source>
          <target state="translated">Но эта связь,кажется,больше не работает...</target>
        </trans-unit>
        <trans-unit id="77451d71b40941ae17f1943fc9be05c65d905e16" translate="yes" xml:space="preserve">
          <source>Clearly, the code for the oddball structure is not what you'd normally
write, but it illustrates the point.  The first argument to the second
invocation of &lt;code&gt;INITIALIZER&lt;/code&gt; is &lt;code&gt;{ 41&lt;/code&gt; and the remaining argument
(singular in this example) is &lt;code&gt;43 }&lt;/code&gt;.  Without C99 or similar support
for variable argument lists for macros, initializers that need to
contain commas are very problematic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ясно, что код для странной структуры не тот, который вы обычно пишете, но он иллюстрирует суть. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Первым аргументом для второго вызова &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INITIALIZER&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ 41&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а оставшимся аргументом (в данном примере единственным) является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;43 }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Без C99 или аналогичной поддержки списков переменных аргументов для макросов инициализаторы, которые должны содержать запятые, очень проблематичны.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8646ef6ae439093b3a509c848a73e94716034cd4" translate="yes" xml:space="preserve">
          <source>Compile and decompile:</source>
          <target state="translated">Собирай и декомпилируй:</target>
        </trans-unit>
        <trans-unit id="d43ef1edf24fba8899355dc8110d85e5de9eb59f" translate="yes" xml:space="preserve">
          <source>Complete sample:</source>
          <target state="translated">Полный образец:</target>
        </trans-unit>
        <trans-unit id="521e7e446becd7f610ecef9f5437d49aa3d8d12f" translate="yes" xml:space="preserve">
          <source>Declaration won't allocate memory (the variable must be defined for memory allocation) but the definition will. 
This is just another simple view on the extern keyword since the other answers are really great.</source>
          <target state="translated">Объявление не будет выделять память (переменная должна быть определена для выделения памяти),но определение будет.Это всего лишь еще один простой взгляд на ключевое слово extern,так как другие ответы действительно великолепны.</target>
        </trans-unit>
        <trans-unit id="1a56f8c8e203fe1ef1374576f22f70cc9402c3b5" translate="yes" xml:space="preserve">
          <source>Does this exposition miss anything?</source>
          <target state="translated">Эта экспозиция что-нибудь пропустила?</target>
        </trans-unit>
        <trans-unit id="396176d9049fd1b4108eb2b9640b789290670d4b" translate="yes" xml:space="preserve">
          <source>End of Original Answer</source>
          <target state="translated">Конец оригинала ответа</target>
        </trans-unit>
        <trans-unit id="373a87fdeccadee389f2747d9ad2ef5069598780" translate="yes" xml:space="preserve">
          <source>Extern is the keyword you use to declare that the variable itself resides in another translation unit.</source>
          <target state="translated">Extern-это ключевое слово,которое вы используете,чтобы объявить,что сама переменная находится в другой единице перевода.</target>
        </trans-unit>
        <trans-unit id="2ad7f7d36690943fbd8d2cdeefa156bba278bc4f" translate="yes" xml:space="preserve">
          <source>First off, the &lt;code&gt;extern&lt;/code&gt; keyword is not used for defining a variable; rather it is used for declaring a variable. I can say &lt;code&gt;extern&lt;/code&gt; is a storage class, not a data type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во-первых, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ключевое слово &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не используется для определения переменной; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;скорее это используется для объявления переменной. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я могу сказать, что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - это класс хранения, а не тип данных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e675d41d485a134cc59cb8cc5812d69dfd94ce3" translate="yes" xml:space="preserve">
          <source>For any given variable, exactly one source file defines the variable,
preferably initializing it too.  (Although there is no need to
initialize explicitly to zero, it does no harm and can do some good,
because there can be only one initialized definition of a particular
global variable in a program).</source>
          <target state="translated">Для любой заданной переменной ровно один исходный файл определяет эту переменную,желательно также инициализируя ее.(Хотя нет необходимости явно инициализировать до нуля,это не вредит и может принести пользу,потому что в программе может быть только одно инициализированное определение конкретной глобальной переменной).</target>
        </trans-unit>
        <trans-unit id="26a05b281fc0ea33355006c0511e1a13f6c1b929" translate="yes" xml:space="preserve">
          <source>For any given variable, only one header file declares it (SPOT &amp;mdash;
Single Point of Truth).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для любой данной переменной только один заголовочный файл объявляет это (SPOT - единая точка истины).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15a305214dc58c0f3bae45d2b50c5db3c7291f4d" translate="yes" xml:space="preserve">
          <source>From now on, it is the job of the linker to make the final program, but the &lt;code&gt;extern&lt;/code&gt; information has already been extracted from the source code into the object file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С этого момента линкер должен создавать окончательную программу, но &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; информация уже извлечена из исходного кода в объектный файл.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3415f68a49d03b531d86d16148c9a28fbd48eb90" translate="yes" xml:space="preserve">
          <source>Further, it starts to get tricky because you might include &lt;code&gt;file4b.h&lt;/code&gt;
before including &lt;code&gt;file3b.h&lt;/code&gt; to generate the definitions, but the normal
header guards on &lt;code&gt;file3b.h&lt;/code&gt; would prevent the header being reincluded.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кроме того, он начинает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; потому что вы можете включить &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;file4b.h&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; перед включением &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для генерации определений, но обычные средства защиты заголовка в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будут препятствовать повторному включению заголовка.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="c4dd913333c910d79e768559ccbeb0eaa6741de0" translate="yes" xml:space="preserve">
          <source>Header Guards</source>
          <target state="translated">Начально-штабная охрана</target>
        </trans-unit>
        <trans-unit id="7ed8a527d683dd05a5c071bc07baabb3f83180ae" translate="yes" xml:space="preserve">
          <source>How do I use extern to share variables between source files</source>
          <target state="translated">Как использовать extern для обмена переменными между исходными файлами</target>
        </trans-unit>
        <trans-unit id="69ab5ed0b8bdee651f010db1fd0e5dc39247d2c8" translate="yes" xml:space="preserve">
          <source>However, it can be done subject to a not too unreasonable constraint.
Let's introduce a new set of file names:</source>
          <target state="translated">Однако это может быть сделано с учетом не слишком необоснованных ограничений.Введем новый набор имен файлов:</target>
        </trans-unit>
        <trans-unit id="306a7e6ac4f4e31eaaf9959df7622d5c7fd6f737" translate="yes" xml:space="preserve">
          <source>However, the C standard also lists it in informative Annex J as one of
the &lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.5&quot;&gt;Common extensions&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тем не менее, стандарт C также перечисляет его в информативном Приложении J как одно из &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.5&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Общих расширений&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f32f286c2c18f239ed02d25d1cc26ef29d313c9b" translate="yes" xml:space="preserve">
          <source>However, the problems are relatively unlikely to occur in practice,
especially if you take the standard advice to</source>
          <target state="translated">Однако на практике эти проблемы относительно маловероятны,особенно если вы воспользуетесь стандартной консультацией,чтобы</target>
        </trans-unit>
        <trans-unit id="1480206dabab63aec601dcfec6c3d8f480f9d30f" translate="yes" xml:space="preserve">
          <source>I know that global variables in C sometimes have the &lt;code&gt;extern&lt;/code&gt; keyword. What is an &lt;code&gt;extern&lt;/code&gt; variable? What is the declaration like? What is its scope?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я знаю, что глобальные переменные в C иногда имеют &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ключевое слово &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Что такое &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменная? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как выглядит декларация? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Какова его сфера применения?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0de3380113bfc8253411af051f1001ecf0ac9ca2" translate="yes" xml:space="preserve">
          <source>I like to think of an extern variable as a promise that you make to the compiler.</source>
          <target state="translated">Мне нравится думать о переменной extern как об обещании,которое вы даете компилятору.</target>
        </trans-unit>
        <trans-unit id="ff99a871bf617a3ef70ca3fc64c7048d4e9b9baf" translate="yes" xml:space="preserve">
          <source>I use this pattern across multiple files. So in order to keep things as self contained as possible, I just reuse the single GLOBAL macro in each header. My header looks like this:</source>
          <target state="translated">Я использую этот шаблон в нескольких файлах.Поэтому для того,чтобы держать вещи как можно более сдержанными,я просто повторно использую единственный GLOBAL макрос в каждом заголовке.Мой заголовок выглядит вот так:</target>
        </trans-unit>
        <trans-unit id="e5241564a74e5dafcfe12477235c424b7af357a0" translate="yes" xml:space="preserve">
          <source>If the variable is actually a complex array, for example, this can lead
to extreme duplication of code.  It can, very occasionally, be a
sensible way to achieve some effect, but that is very unusual.</source>
          <target state="translated">Если переменная на самом деле является сложным массивом,например,это может привести к экстремальному дублированию кода.Это может,очень редко,быть разумным способом достижения некоторого эффекта,но это очень необычно.</target>
        </trans-unit>
        <trans-unit id="5240a053ab6ec39673d237d57b13fe35267129a3" translate="yes" xml:space="preserve">
          <source>If you don't declare it as extern you'll get 2 variables named the same but not related at all, and an error of multiple definitions of the variable.</source>
          <target state="translated">Если вы не объявите его как extern,то получите 2 переменные,названные одинаковыми,но совсем не связанными,и ошибку множественных определений переменной.</target>
        </trans-unit>
        <trans-unit id="5f984431ca6874cfecf343860bea748efbdb03e6" translate="yes" xml:space="preserve">
          <source>If you don't want a program to access your variables or functions, you use &lt;code&gt;static&lt;/code&gt; which tells the compiler that this variable or function cannot be used outside of this module.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы не хотите, чтобы программа обращалась к вашим переменным или функциям, вы используете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который сообщает компилятору, что эту переменную или функцию нельзя использовать вне этого модуля.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bd88bd6d2bc774ae7b046fd4f8995594296215f" translate="yes" xml:space="preserve">
          <source>Immediately before you include a header that should define variables,
you define the macro DEFINE_VARIABLES.</source>
          <target state="translated">Непосредственно перед включением заголовка,который должен определять переменные,вы определяете макрос DEFINE_VARIABLES.</target>
        </trans-unit>
        <trans-unit id="591fb3482c2373c5da07d5044176c89097f06024" translate="yes" xml:space="preserve">
          <source>In C a variable inside a file say example.c is given local scope. The compiler expects that the variable would have its definition inside the same file example.c and when it does not find the same , it would throw an error.A function on the other hand has by default global scope . Thus you do not have to explicitly mention to the compiler &quot;look dude...you might find the definition of this function here&quot;. For a function including the file which contains its declaration is enough.(The file which you actually call a header file). 
   For example consider the following 2 files :</source>
          <target state="translated">В C переменной внутри файла,скажем example.c,дается локальная область видимости.Компилятор ожидает,что переменная будет иметь свое определение внутри того же файла example.c и когда она не найдет того же самого,она выбросит ошибку.A функция,с другой стороны,имеет по умолчанию глобальную область видимости.Таким образом,не нужно явно упоминать компилятору:&quot;смотри,чувак...здесь можно найти определение этой функции&quot;.Для функции,включающей в себя файл,который содержит его объявление,достаточно.(Файл,который на самом деле называется заголовочным файлом).Например,рассмотрим следующие 2 файла :</target>
        </trans-unit>
        <trans-unit id="87e8c2a5e35c1e4280b1ea010dcc4573bbbdb76d" translate="yes" xml:space="preserve">
          <source>In C++17, you might want to use inline variables instead of extern ones, as they are simple to use (can be defined just once on header) and more powerful (support constexpr). See: &lt;a href=&quot;https://stackoverflow.com/questions/177437/what-does-const-static-mean-in-c-and-c/53883715#53883715&quot;&gt;What does 'const static' mean in C and C++?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В C ++ 17 вы можете захотеть использовать встроенные переменные вместо внешних, поскольку они просты в использовании (могут быть определены только один раз в заголовке) и более мощны (поддерживают constexpr). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/177437/what-does-const-static-mean-in-c-and-c/53883715#53883715&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что означает &amp;laquo;const static&amp;raquo; в C и C ++?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5521a216563a3daa649367d1d7e5ddf5594d633a" translate="yes" xml:space="preserve">
          <source>In it declare the following</source>
          <target state="translated">В нем заявляется следующее</target>
        </trans-unit>
        <trans-unit id="ef34e45c1747c51692817f5fe0bc7586a11e4b83" translate="yes" xml:space="preserve">
          <source>In these examples, &lt;code&gt;file5c.c&lt;/code&gt; and &lt;code&gt;file6c.c&lt;/code&gt; directly include the header
&lt;code&gt;file2c.h&lt;/code&gt; several times, but that is the simplest way to show that the
mechanism works.  It means that if the header was indirectly included
twice, it would also be safe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В этих примерах &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; напрямую включают заголовок &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , но это самый простой способ показать, что механизм работает. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что если заголовок был косвенно включен дважды, это также было бы безопасно.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d492f0c477aa885f9e675ba6ab82e10880840d8" translate="yes" xml:space="preserve">
          <source>It also represents that you can use the variable declared using extern
  keyword in any file though it is declared/defined in other file.</source>
          <target state="translated">Это также означает,что вы можете использовать переменную,объявленную с помощью ключевого слова extern в любом файле,хотя она объявленаddefined в другом файле.</target>
        </trans-unit>
        <trans-unit id="608d1c854a7c17669089bab083ff9f4d1512b9f9" translate="yes" xml:space="preserve">
          <source>It is important to &lt;a href=&quot;https://stackoverflow.com/questions/1410563&quot;&gt;understand the difference between &lt;em&gt;defining&lt;/em&gt; a
variable and &lt;em&gt;declaring&lt;/em&gt; a
variable&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Важно &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1410563&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;понимать разницу между &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определением&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменной и &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявлением&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменной&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff1f20492b56c804a8c0d9af0974927ab6848c42" translate="yes" xml:space="preserve">
          <source>J.5.11 Multiple external definitions</source>
          <target state="translated">J.5.11 Многочисленные внешние определения</target>
        </trans-unit>
        <trans-unit id="356b85a3b8c8c81143ecad4559f86648eb5234a5" translate="yes" xml:space="preserve">
          <source>Multiple inclusion with variable definitions</source>
          <target state="translated">Многократное включение с определениями переменных</target>
        </trans-unit>
        <trans-unit id="bb3445e2d1585167c615a15ad0128113264f0e4a" translate="yes" xml:space="preserve">
          <source>Not so good way to define global variables</source>
          <target state="translated">Не очень хороший способ определить глобальные переменные</target>
        </trans-unit>
        <trans-unit id="b034ccab4609a346f69f734409db3034a94941a8" translate="yes" xml:space="preserve">
          <source>Note 1: if the header defines the variable without the &lt;code&gt;extern&lt;/code&gt; keyword,
then each file that includes the header creates a tentative definition
of the variable.
As noted previously, this will often work, but the C standard does not
guarantee that it will work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Примечание 1: если заголовок определяет переменную без &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ключевого слова &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , то каждый файл, содержащий заголовок, создает предварительное определение переменной. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как отмечалось ранее, это часто будет работать, но стандарт C не гарантирует, что он будет работать.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31627023fc26e904ae3805ebef6fe0550e6fb76f" translate="yes" xml:space="preserve">
          <source>Note 2: if the header defines and initializes the variable, then only
one source file in a given program can use the header.
Since headers are primarily for sharing information, it is a bit silly
to create one that can only be used once.</source>
          <target state="translated">Замечание 2:если заголовок определяет и инициализирует переменную,то только один исходный файл в данной программе может использовать заголовок.Так как заголовки предназначены в первую очередь для обмена информацией,создание такого файла,который можно использовать только один раз,немного глупо.</target>
        </trans-unit>
        <trans-unit id="1be075cb981e86ead613321ff8019fc4b85a063f" translate="yes" xml:space="preserve">
          <source>Note 3: if the header defines a static variable (with or without
initialization), then each source file ends up with its own private
version of the 'global' variable.</source>
          <target state="translated">Замечание 3:если заголовок определяет статическую переменную (с инициализацией или без),то каждый файл исходного кода заканчивается своей частной версией 'глобальной' переменной.</target>
        </trans-unit>
        <trans-unit id="95dbfe0c104a6e05478e5341f5054f912931f79e" translate="yes" xml:space="preserve">
          <source>Now in other files simply including global.h will
have it declared as an extern &lt;em&gt;for that file&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь в других файлах, включая global.h, он будет объявлен как extern &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;для этого файла&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3c31001aa56a525a3e5e852510812d60922eb5b" translate="yes" xml:space="preserve">
          <source>Now in the file main.c</source>
          <target state="translated">Теперь в файле main.c</target>
        </trans-unit>
        <trans-unit id="ac42b8acf74f86e2af21d24e4c7789718c74f2a6" translate="yes" xml:space="preserve">
          <source>Now when you compile the two files together, using the following commands :</source>
          <target state="translated">Теперь,когда вы компилируете два файла вместе,используя следующие команды :</target>
        </trans-unit>
        <trans-unit id="8bfccdd9e0dacfdeee24b02f4eeb3c87219cddca" translate="yes" xml:space="preserve">
          <source>One concern that is sometimes (and legitimately) raised about the
'declarations in headers, definitions in source' mechanism described
here is that there are two files to be kept synchronized &amp;mdash; the header
and the source.  This is usually followed up with an observation that a
macro can be used so that the header serves double duty &amp;mdash; normally
declaring the variables, but when a specific macro is set before the
header is included, it defines the variables instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Одна из проблем, которая иногда (и законно) возникает в связи с описанным здесь механизмом &amp;laquo;объявления в заголовках, определения в источнике&amp;raquo;, заключается в том, что необходимо синхронизировать два файла - заголовок и источник. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обычно это сопровождается наблюдением, что макрос может использоваться так, чтобы заголовок выполнял двойную функцию - обычно объявляя переменные, но когда конкретный макрос устанавливается перед включением заголовка, он определяет переменные вместо этого.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4502923a9c102950b3f0b470ca7f6ba4a45278fb" translate="yes" xml:space="preserve">
          <source>Other answers have covered the language usage side of view, so now let's have a look at how it is implemented in this implementation.</source>
          <target state="translated">В других ответах была рассмотрена сторона использования языка,поэтому теперь давайте посмотрим,как она реализована в этой реализации.</target>
        </trans-unit>
        <trans-unit id="86546a25fe2d8c85ef2156d6bfee43929dbe1777" translate="yes" xml:space="preserve">
          <source>Output contains:</source>
          <target state="translated">Выход содержит:</target>
        </trans-unit>
        <trans-unit id="ae83006b24a65b10fa55b857d66c3919d3a30938" translate="yes" xml:space="preserve">
          <source>Rules to be broken by experts only, and only with good reason:</source>
          <target state="translated">Правила должны нарушаться только экспертами и только при наличии веских оснований:</target>
        </trans-unit>
        <trans-unit id="3f9e1658358e6c89da41534fe1502dbfeafa2072" translate="yes" xml:space="preserve">
          <source>SHN_UNDEF This section table index means the symbol is undefined. When the link editor combines this object file with another that defines the indicated symbol, this file's references to the symbol will be linked to the actual definition.</source>
          <target state="translated">SHN_UNDEF Данный индекс таблицы раздела означает,что символ не определен.Когда редактор ссылок объединяет этот объектный файл с другим,который определяет указанный символ,ссылки этого файла на символ будут связаны с фактическим определением.</target>
        </trans-unit>
        <trans-unit id="a8e55e31b1e2836483c5a4fb164dfd55b61c27cf" translate="yes" xml:space="preserve">
          <source>Say you have two &lt;code&gt;.c&lt;/code&gt;-files &lt;code&gt;test1.c&lt;/code&gt; and &lt;code&gt;test2.c&lt;/code&gt;. If you define a global variable &lt;code&gt;int test1_var;&lt;/code&gt; in &lt;code&gt;test1.c&lt;/code&gt; and you'd like to access this variable in &lt;code&gt;test2.c&lt;/code&gt; you have to use &lt;code&gt;extern int test1_var;&lt;/code&gt; in &lt;code&gt;test2.c&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Скажем, у вас есть два &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.c&lt;/code&gt; -&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; файла &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы определяете глобальную переменную &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int test1_var;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test1.c&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и вы хотите получить доступ к этой переменной в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы должны использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern int test1_var;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d66081df09dd5e01f739d9c0a5d76e7293a431e" translate="yes" xml:space="preserve">
          <source>Similar concerns arise with declaring and defining functions &amp;mdash;
analogous rules apply.
But the question was about variables specifically, so I've kept the
answer to variables only.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Аналогичные проблемы возникают при объявлении и определении функций - применяются аналогичные правила. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но вопрос был конкретно о переменных, поэтому я сохранил ответ только для переменных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c56a74ee1f96b0d8079ae6e5b226d54d822047f" translate="yes" xml:space="preserve">
          <source>So I;ll quickly try to explain it;
make a file called global.h.</source>
          <target state="translated">Поэтому я постараюсь быстро объяснить это;сделаю файл под названием global.h.</target>
        </trans-unit>
        <trans-unit id="8385f075a12bbdc5e70d23e0ceb5ae6ecc928831" translate="yes" xml:space="preserve">
          <source>So you can decide to use a variable in a translation unit and then access it from another one, then in the second one you declare it as extern and the symbol will be resolved by the linker.</source>
          <target state="translated">Таким образом,вы можете решить использовать переменную в единице трансляции,а затем получить к ней доступ из другой единицы,затем во второй единице вы объявляете ее экстерном,и символ будет разрешен компоновщиком.</target>
        </trans-unit>
        <trans-unit id="43a15273df226ddca52b8a56e10ecd6e8f3fc5c6" translate="yes" xml:space="preserve">
          <source>So, you need to include the body of &lt;code&gt;file3b.h&lt;/code&gt; at most once for
declarations, and at most once for definitions, but you might need both
in a single translation unit (TU &amp;mdash; a combination of a source file and
the headers it uses).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, вам нужно включить тело &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; не более одного раза для объявлений и не более одного раза для определений, но вам может понадобиться как в одном блоке перевода (TU - комбинация исходного файла и заголовков, которые он использует) ,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="a00bf4b426cb9344af6da65574d0e65346416126" translate="yes" xml:space="preserve">
          <source>Tested on GCC 4.8.</source>
          <target state="translated">Протестировано на GCC 4.8.</target>
        </trans-unit>
        <trans-unit id="5f4082d773844f6a253a421efa8b7dbcaa5087a6" translate="yes" xml:space="preserve">
          <source>That's the best way to declare and define global variables.</source>
          <target state="translated">Это лучший способ объявить и определить глобальные переменные.</target>
        </trans-unit>
        <trans-unit id="1fa0668e0b0b88a97fdfcdbe88b694e8aa07437d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.sco.com/developers/gabi/2003-12-17/contents.html&quot;&gt;System V ABI Update ELF spec&lt;/a&gt; &quot;Symbol Table&quot; chapter explains:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;главе &amp;laquo; &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.sco.com/developers/gabi/2003-12-17/contents.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обновление спецификации ELF&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;raquo; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;System V ABI&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; объясняется:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7a6786d3bcfbdf53bf07c931eeddad4722af4a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extern&lt;/code&gt; can be declared in the &lt;code&gt;first.c&lt;/code&gt; file or in any of the header files &lt;code&gt;first.c&lt;/code&gt; includes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; может быть объявлен в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; файл или в любом из файлов заголовок &lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; включает.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5b5c6a95c09ef6d4ca3c3561fa32abe65c578c3" translate="yes" xml:space="preserve">
          <source>The clean, reliable way to declare and define global variables is to use
a header file to contain an &lt;code&gt;extern&lt;/code&gt;&lt;em&gt;declaration&lt;/em&gt; of the variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чистый, надежный способ объявления и определения глобальных переменных - использовать заголовочный файл, содержащий &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменной.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9aef6ea03428b9fc0acfbc7857f968affaa48449" translate="yes" xml:space="preserve">
          <source>The complete programs shown use functions, so function declarations have
crept in.
Both C99 and C11 require functions to be declared or defined before they
are used (whereas C90 did not, for good reasons).
I use the keyword &lt;code&gt;extern&lt;/code&gt; in front of function declarations in headers
for consistency &amp;mdash;&amp;nbsp;to match the &lt;code&gt;extern&lt;/code&gt; in front of variable
declarations in headers.
Many people prefer not to use &lt;code&gt;extern&lt;/code&gt; in front of function
declarations; the compiler doesn't care &amp;mdash; and ultimately, neither do I
as long as you're consistent, at least within a source file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Показанные полные программы используют функции, поэтому объявления функций закрались. Как C99, так и C11 требуют, чтобы функции были объявлены или определены до их использования (тогда как C90 не сделал этого по веским причинам). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Я использую ключевое слово &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; перед объявлениями функций в заголовках для согласованности - чтобы соответствовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; перед объявлениями переменных в заголовках. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Многие люди предпочитают не использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; перед объявлениями функций; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;компилятору все равно - и, в конечном счете, я тоже, если вы последовательны, по крайней мере, в исходном файле.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c188ca39079cc387fa6e831f474927a3a98a2c9" translate="yes" xml:space="preserve">
          <source>The correct interpretation of extern is that you tell something to the compiler. You tell the compiler that, despite not being present right now, the variable declared will somehow be found by the linker (typically in another object (file)). The linker will then be the lucky guy to find everything and put it together, whether you had some extern declarations or not.</source>
          <target state="translated">Правильная интерпретация extern заключается в том,что вы что-то говорите компилятору.Вы говорите компилятору,что,несмотря на отсутствие в данный момент,объявленная переменная будет каким-то образом найдена компоновщиком (обычно в другом объекте (файле)).Тогда компоновщику повезёт найти всё и собрать всё вместе,независимо от того,было ли у Вас какое-то объявление extern или нет.</target>
        </trans-unit>
        <trans-unit id="6e436a831135dc09360e34bc37df40f4d70ac0ad" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;prog1.mk&lt;/code&gt; is a makefile for &lt;code&gt;prog1&lt;/code&gt; only.
It will work with most versions of &lt;code&gt;make&lt;/code&gt; produced since about the turn
of the millennium.
It is not tied specifically to GNU Make.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Файл &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.mk&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является make- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; только &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;для &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prog1&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Она будет работать с большинством версий &lt;/font&gt;&lt;/font&gt; &lt;code&gt;make&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; производства , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;так как о рубеже тысячелетий. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он не привязан специально к GNU Make.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7293120480d17b27c8759b1f20a149ffee192f92" translate="yes" xml:space="preserve">
          <source>The header defining or declaring the global variables may not itself
define any types.</source>
          <target state="translated">Заголовок,определяющий или объявляющий глобальные переменные,сам по себе не может определять никаких типов.</target>
        </trans-unit>
        <trans-unit id="7b7da714f931cae85e6215688bb6c3ca4aa79753" translate="yes" xml:space="preserve">
          <source>The header defining or declaring the variables has stylized contents.</source>
          <target state="translated">Заголовок,определяющий или объявляющий переменные,имеет стилизованное содержимое.</target>
        </trans-unit>
        <trans-unit id="881e3003488bf6bc22590ba8ca6af1e94572af02" translate="yes" xml:space="preserve">
          <source>The header is included by the one source file that defines the variable
and by all the source files that reference the variable.
For each program, one source file (and only one source file) defines the
variable.
Similarly, one header file (and only one header file) should declare the
variable.
The header file is crucial; it enables cross-checking between
independent TUs (translation units &amp;mdash; think source files) and ensures
consistency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Заголовок включается одним исходным файлом, который определяет переменную, и всеми исходными файлами, которые ссылаются на переменную. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Для каждой программы один исходный файл (и только один исходный файл) определяет переменную. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Точно так же один заголовочный файл (и только один заголовочный файл) должен объявить переменную. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Заголовочный файл имеет решающее значение; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это позволяет осуществлять перекрестную проверку между независимыми TU (единицами перевода - думать исходные файлы) и обеспечивает согласованность.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b0982c12125f135a56e9b7b9b93b84a72be79fe" translate="yes" xml:space="preserve">
          <source>The header might be included twice indirectly.  For example, if
&lt;code&gt;file4b.h&lt;/code&gt; includes &lt;code&gt;file3b.h&lt;/code&gt; for a type definition that isn't shown,
and &lt;code&gt;file1b.c&lt;/code&gt; needs to use both header &lt;code&gt;file4b.h&lt;/code&gt; and &lt;code&gt;file3b.h&lt;/code&gt;, then
you have some more tricky issues to resolve.  Clearly, you might revise
the header list to include just &lt;code&gt;file4b.h&lt;/code&gt;.  However, you might not be
aware of the internal dependencies &amp;mdash; and the code should, ideally,
continue to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Заголовок может быть включен дважды косвенно. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, если &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; включает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для определения типа, которое не показано, и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; должен использовать оба заголовочных &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , то вам нужно решить еще несколько хитрых проблем. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Понятно, что вы можете пересмотреть список заголовков, включив в него только &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако вы можете не знать о внутренних зависимостях - и в идеале код должен продолжать работать.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad5463cb1a2550bdcee0063cc6aab1c6b96717cc" translate="yes" xml:space="preserve">
          <source>The issue becomes 'should the header include &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt;?'
If you omit that from the header and wrap any defining invocation with
&lt;code&gt;#define&lt;/code&gt; and &lt;code&gt;#undef&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вопрос становится следующим: &amp;laquo;должен ли заголовок включать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&amp;raquo; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы пропустите это из заголовка и закроете любой определяющий вызов с помощью &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#define&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca8c7f41c38cdf3e3a420d496fe20b1669ca2fe6" translate="yes" xml:space="preserve">
          <source>The old forum post probably explained this a bit more clearly.
But this is a real potential &lt;code&gt;gotcha&lt;/code&gt; when using a compiler
that allows you to declare a variable in one file and then declare it extern as a different type in another. The problems associated with
that are if you say declared testing_mode as an int in another file
it would think it was a 16 bit var and overwrite some other part of ram, potentially corrupting another variable. Difficult to debug!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Старый пост на форуме, вероятно, объяснил это немного более четко. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но это реальная потенциальная &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gotcha&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; при использовании компилятора, который позволяет вам объявить переменную в одном файле, а затем объявить ее extern как другой тип в другом файле. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Проблемы, связанные с этим, заключаются в том, что если вы скажете, что в другом файле объявлен testing_mode как int, он подумает, что это 16-битная переменная, и перезапишет какую-то другую часть ram, что может повредить другую переменную. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Сложно отлаживать!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd5d906d82297c3f51dd5bfd35a77ab5a95c21c1" translate="yes" xml:space="preserve">
          <source>The problem with this scheme as shown is that it does not provide for
initialization of the global variable.  With C99 or C11 and variable argument
lists for macros, you could define a macro to support initialization too.
(With C89 and no support for variable argument lists in macros, there is no
easy way to handle arbitrarily long initializers.)</source>
          <target state="translated">Проблема этой схемы,как показано на рисунке,заключается в том,что она не предусматривает инициализации глобальной переменной.С помощью C99 или C11 и списков аргументов переменных для макросов можно определить макрос,поддерживающий инициализацию.(При использовании C89 и отсутствии поддержки списков переменных аргументов в макросах,нет простого способа работать с произвольно длинными инициализаторами).</target>
        </trans-unit>
        <trans-unit id="a100dc688603b9855dccb98b1d1f682f7f302374" translate="yes" xml:space="preserve">
          <source>The restrictions for this to work are:</source>
          <target state="translated">Ограничения,чтобы это сработало:</target>
        </trans-unit>
        <trans-unit id="817577c0dba8ff76f06ecb331ce19468c50f265f" translate="yes" xml:space="preserve">
          <source>The source file that defines the variable also includes the header to
ensure that the definition and the declaration are consistent.</source>
          <target state="translated">Исходный файл,определяющий переменную,также включает в себя заголовок для обеспечения согласованности определения и декларации.</target>
        </trans-unit>
        <trans-unit id="d4b772b05a06cac7bb0184c048b64dbd8cfde377" translate="yes" xml:space="preserve">
          <source>There are, of course, many ways in which these guidelines can be broken.
Occasionally, there may be a good reason to break the guidelines, but
such occasions are extremely unusual.</source>
          <target state="translated">Конечно,существует множество способов нарушения этих руководящих принципов.Иногда могут быть веские причины для нарушения руководящих принципов,но такие случаи крайне необычны.</target>
        </trans-unit>
        <trans-unit id="45c5032bfdada5609c2370448a245a052a29943f" translate="yes" xml:space="preserve">
          <source>There may be more than one external definition for the identifier of
  an object, with or without the explicit use of the keyword extern; if
  the definitions disagree, or more than one is initialized, the
  behavior is undefined (6.9.2).</source>
          <target state="translated">Для идентификатора объекта может существовать более одного внешнего определения,с явным использованием или без использования экстерна ключевого слова;если определения не совпадают,или инициализируется более одного,поведение не определено (6.9.2).</target>
        </trans-unit>
        <trans-unit id="613efa43e5434affe9e15d22d4e1e024d4b3661e" translate="yes" xml:space="preserve">
          <source>Therefore, you can compile a file that has reference to an extern, but you can not link if that memory is not declared somewhere.</source>
          <target state="translated">Таким образом,вы можете скомпилировать файл со ссылкой на extern,но вы не сможете скомпилировать его,если эта память нигде не объявлена.</target>
        </trans-unit>
        <trans-unit id="c9b97b2c028b841b1846cc6fdc42d04072316ebb" translate="yes" xml:space="preserve">
          <source>This is getting a tad convoluted, but seems to be secure (using the
&lt;code&gt;file2d.h&lt;/code&gt;, with no &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; in the &lt;code&gt;file2d.h&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это становится немного запутанным, но кажется безопасным (используя &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , без &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b34220934ee7097d45ec16b1f39cdc06990ce05c" translate="yes" xml:space="preserve">
          <source>This is related to sharing variables across source files, but how does that work precisely? Where do I use &lt;code&gt;extern&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это связано с совместным использованием переменных в исходных файлах, но как это работает точно? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Где я могу использовать &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b26cccfc838dc87d9352f2df2d799c257b1ab113" translate="yes" xml:space="preserve">
          <source>This means in main.c the variable will be declared as an &lt;code&gt;unsigned char&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает, что в main.c переменная будет объявлена ​​как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cdc8cef1f761b10fca19330ff90c99ad24c5ab7" translate="yes" xml:space="preserve">
          <source>This problem was elegantly solved in a microchip forum some 15 years ago
    /* See &quot;http:www.htsoft.com&quot;                                          &lt;em&gt;/
    /&lt;/em&gt;  &quot;forum/all/showflat.php/Cat/0/Number/18766/an/0/page/0#18766&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта проблема была элегантно решена на форуме по микрочипам около 15 лет назад. * * См. &amp;laquo;Http: www.htsoft.com&amp;raquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ /&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;laquo;forum / all / showflat.php / Cat / 0 / Number / 18766 / an / 0 / page / 0 # 18766&quot;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a73e1af2aaacc00d1cd325e01a80669806fdc81" translate="yes" xml:space="preserve">
          <source>This scheme avoids most problems.  You only run into a problem if a
header that defines variables (such as &lt;code&gt;file2c.h&lt;/code&gt;) is included by
another header (say &lt;code&gt;file7c.h&lt;/code&gt;) that defines variables.  There isn't an
easy way around that other than &quot;don't do it&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта схема позволяет избежать большинства проблем. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Проблема возникает только в том случае, если заголовок, который определяет переменные (например, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), включен в другой заголовок (например, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file7c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), который определяет переменные. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Нет другого пути, кроме &amp;laquo;не делай этого&amp;raquo;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44af17a2c4063b43decac8e1cae615f4b3460a01" translate="yes" xml:space="preserve">
          <source>This technique does not conform to the letter of the C standard and the
'one definition rule' &amp;mdash; it is officially undefined behaviour:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Этот метод не соответствует букве стандарта C и &amp;laquo;правила одного определения&amp;raquo; - это официально неопределенное поведение:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="834eaf33179075a7b392e7c567aed8127afebf2e" translate="yes" xml:space="preserve">
          <source>Use the header technique I showed first.
It works reliably and everywhere.
Note, in particular, that the header declaring the &lt;code&gt;global_variable&lt;/code&gt; is
included in every file that uses it &amp;mdash; including the one that defines it.
This ensures that everything is self-consistent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Используйте технику заголовка, которую я показал первым. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Работает надежно и везде. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание, в частности, что заголовок, объявляющий &lt;/font&gt;&lt;/font&gt; &lt;code&gt;global_variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , включен в каждый файл, который его использует, включая тот, который его определяет. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это гарантирует, что все является самосогласованным.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="827dad75e8eff41948c16f2f906a0a5cf440530d" translate="yes" xml:space="preserve">
          <source>Useful for global variables and libraries, but dangerous because the linker does not type check.</source>
          <target state="translated">Полезен для глобальных переменных и библиотек,но опасен тем,что компоновщик не проверяет тип.</target>
        </trans-unit>
        <trans-unit id="3cec43eba69cc62d6d9de66bb4bb713dd116f9e1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;extern&lt;/code&gt; is only of relevance when the program you're building
consists of multiple source files linked together, where some of the
variables defined, for example, in source file &lt;code&gt;file1.c&lt;/code&gt; need to be
referenced in other source files, such as &lt;code&gt;file2.c&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Использование &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; имеет &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;смысл&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; только тогда, когда создаваемая вами программа состоит из нескольких исходных файлов, связанных вместе, где на некоторые переменные, определенные, например, в исходном файле &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; нужно ссылаться в других исходных файлах, таких как &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dff64534b2d3fcd7442b5b287f36d602ab155e5b" translate="yes" xml:space="preserve">
          <source>Variable initialization</source>
          <target state="translated">Переменная инициализация</target>
        </trans-unit>
        <trans-unit id="c75bc9dff7e8d81c6cd4dfe243da0ab578e98698" translate="yes" xml:space="preserve">
          <source>Violating the guidelines</source>
          <target state="translated">Нарушение правил</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="fcfcc815dcd79de6f2c15216333f810c99f05a23" translate="yes" xml:space="preserve">
          <source>When encountering an extern, the compiler can only find out its type, not where it &quot;lives&quot;, so it can't resolve the reference.</source>
          <target state="translated">Встречаясь с экстерном,компилятор может узнать только его тип,а не то,где он &quot;живет&quot;,поэтому он не может разрешить ссылку.</target>
        </trans-unit>
        <trans-unit id="4aa8d09dde0212e5912861447ea4ddcb68b44e7f" translate="yes" xml:space="preserve">
          <source>With some (indeed, many) C compilers, you can get away with what's
called a 'common' definition of a variable too.
'Common', here, refers to a technique used in Fortran for sharing
variables between source files, using a (possibly named) COMMON block.
What happens here is that each of a number of files provides a tentative
definition of the variable.
As long as no more than one file provides an initialized definition,
then the various files end up sharing a common single definition of the
variable:</source>
          <target state="translated">С помощью некоторых (действительно,многих)компиляторов Си можно обойтись без того,что называется &quot;общим&quot; определением переменной.Общее&quot; здесь относится к технике,используемой в Fortran для обмена переменными между исходными файлами,используя (возможно,названный)блок COMMON.Здесь происходит то,что каждый из нескольких файлов дает предварительное определение переменной.До тех пор,пока не более одного файла дает инициализированное определение,различные файлы в конечном итоге делятся общим единым определением переменной:</target>
        </trans-unit>
        <trans-unit id="e97b0cf5af1e3bf4f73bd3e791107eb6c586682e" translate="yes" xml:space="preserve">
          <source>With xc8 you have to be careful about declaring a variable
as the same type in each file as you could , erroneously,
declare something an &lt;code&gt;int&lt;/code&gt; in one file and a &lt;code&gt;char&lt;/code&gt; say in another.
This could lead to corruption of variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;С xc8 вы должны быть осторожны, объявляя переменную одного и того же типа в каждом файле, чтобы вы могли ошибочно объявить что-то типа &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в одном файле и &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;выражение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в другом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это может привести к повреждению переменных.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caacde4797253a581eb62bb22566c1e32c10a196" translate="yes" xml:space="preserve">
          <source>You are telling it, &quot;Trust me.  At link time this reference will be resolvable.&quot;</source>
          <target state="translated">Ты говоришь:&quot;Поверь мне.Во время ссылки эта ссылка будет разрешима&quot;.</target>
        </trans-unit>
        <trans-unit id="5c908956bd8754f5c212be4e435320dee0ec8a38" translate="yes" xml:space="preserve">
          <source>You can partially work around the problem by revising &lt;code&gt;file2c.h&lt;/code&gt; into
&lt;code&gt;file2d.h&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы можете частично обойти проблему, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7009bafb4698e3725a791f4b4a860ab0a0858b9f" translate="yes" xml:space="preserve">
          <source>You get the following output : The value of a is &amp;lt;5&amp;gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вы получите следующий вывод: значение a &amp;lt;5&amp;gt;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="135bbaa156861ecfec5dedc9176c377fb5bd0cb3" translate="yes" xml:space="preserve">
          <source>You may declare a variable multiple times (though once is sufficient);
you may only define it once within a given scope.
A variable definition is also a declaration, but not all variable
declarations are definitions.</source>
          <target state="translated">Вы можете объявить переменную несколько раз (хотя достаточно один раз);вы можете определить ее только один раз в заданной области видимости.Определение переменной также является декларацией,но не все декларации переменных являются определениями.</target>
        </trans-unit>
        <trans-unit id="3a9e349d10f0bd9616d27d00bd04e467dc645845" translate="yes" xml:space="preserve">
          <source>broken_header.h</source>
          <target state="translated">broken_header.h</target>
        </trans-unit>
        <trans-unit id="d5b1ef39d032b550cec6ec1007b182e41ada7193" translate="yes" xml:space="preserve">
          <source>example.c</source>
          <target state="translated">example.c</target>
        </trans-unit>
        <trans-unit id="bc45783e0ca44daa72354d9947288fb7166a506f" translate="yes" xml:space="preserve">
          <source>example1.c</source>
          <target state="translated">example1.c</target>
        </trans-unit>
        <trans-unit id="cce814c5b0b4fb333c5c802ed983c32c15ae7bf6" translate="yes" xml:space="preserve">
          <source>extern tells the compiler to trust you that the memory for this variable is declared elsewhere, so it doesnt try to allocate/check memory.</source>
          <target state="translated">extern говорит компилятору доверять,что память для этой переменной объявлена где-то в другом месте,поэтому он не пытается выделить память для проверки.</target>
        </trans-unit>
        <trans-unit id="fa057fe4ce31229cf2c9ca183338d8b4566a8f7c" translate="yes" xml:space="preserve">
          <source>external.h</source>
          <target state="translated">external.h</target>
        </trans-unit>
        <trans-unit id="8f974661c27deca057542254f0c5c08df7394688" translate="yes" xml:space="preserve">
          <source>externdef.h</source>
          <target state="translated">externdef.h</target>
        </trans-unit>
        <trans-unit id="1519bb244ac7f4f2b557e89ea8b33f782e38cb81" translate="yes" xml:space="preserve">
          <source>faulty_header.h</source>
          <target state="translated">faulty_header.h</target>
        </trans-unit>
        <trans-unit id="cc233bcad9c75ba5434e30146eb0d92e2fc492e4" translate="yes" xml:space="preserve">
          <source>file1.c</source>
          <target state="translated">file1.c</target>
        </trans-unit>
        <trans-unit id="94af44728c38066445637ed33989a10662b4be8d" translate="yes" xml:space="preserve">
          <source>file10.c</source>
          <target state="translated">file10.c</target>
        </trans-unit>
        <trans-unit id="1a4db11f876ac75ec4a04118feb407872381e8bd" translate="yes" xml:space="preserve">
          <source>file11.c</source>
          <target state="translated">file11.c</target>
        </trans-unit>
        <trans-unit id="c60df4c309bbe1fd634e717ca4e654c2e5a2afd3" translate="yes" xml:space="preserve">
          <source>file12.c</source>
          <target state="translated">file12.c</target>
        </trans-unit>
        <trans-unit id="63422742612ee2d040272390d76dcc10d3ba6d8a" translate="yes" xml:space="preserve">
          <source>file1a.c</source>
          <target state="translated">file1a.c</target>
        </trans-unit>
        <trans-unit id="8c90848246876bdfe0a4ba356e814c8096902645" translate="yes" xml:space="preserve">
          <source>file1b.c</source>
          <target state="translated">file1b.c</target>
        </trans-unit>
        <trans-unit id="602c880cd3d85cf5d1501b64ef5e0a3d9020fb69" translate="yes" xml:space="preserve">
          <source>file1c.h</source>
          <target state="translated">file1c.h</target>
        </trans-unit>
        <trans-unit id="3e8c5c1e55a2790f5986353365d101820cb79b4c" translate="yes" xml:space="preserve">
          <source>file2.c</source>
          <target state="translated">file2.c</target>
        </trans-unit>
        <trans-unit id="b364bc3969ae4e240e4c2af8569851e565f1d3c8" translate="yes" xml:space="preserve">
          <source>file2a.c</source>
          <target state="translated">file2a.c</target>
        </trans-unit>
        <trans-unit id="3071e8d0fbd2b11dfe7e3f801c592900f9a955aa" translate="yes" xml:space="preserve">
          <source>file2b.c</source>
          <target state="translated">file2b.c</target>
        </trans-unit>
        <trans-unit id="8c580d84c0126805fedaab26a3cbacac98151314" translate="yes" xml:space="preserve">
          <source>file2c.h</source>
          <target state="translated">file2c.h</target>
        </trans-unit>
        <trans-unit id="5cd31b420f39b05d5ebf1851db8408a262c78ced" translate="yes" xml:space="preserve">
          <source>file2d.h</source>
          <target state="translated">file2d.h</target>
        </trans-unit>
        <trans-unit id="51db95ab333814a2f0cf2d336fbc77e5d4574a39" translate="yes" xml:space="preserve">
          <source>file3.h</source>
          <target state="translated">file3.h</target>
        </trans-unit>
        <trans-unit id="a68ae471fa40518093366a4faf9f455eec1d65cb" translate="yes" xml:space="preserve">
          <source>file3a.h</source>
          <target state="translated">file3a.h</target>
        </trans-unit>
        <trans-unit id="66129162d6eb113e02ef3f0515786aaed562d6ea" translate="yes" xml:space="preserve">
          <source>file3b.h</source>
          <target state="translated">file3b.h</target>
        </trans-unit>
        <trans-unit id="a6f6f45e5894881c9c4d56933a40555105304af8" translate="yes" xml:space="preserve">
          <source>file3c.c</source>
          <target state="translated">file3c.c</target>
        </trans-unit>
        <trans-unit id="6bed332d6a20a59aca373a629fb1406fec6d17a0" translate="yes" xml:space="preserve">
          <source>file4c.c</source>
          <target state="translated">file4c.c</target>
        </trans-unit>
        <trans-unit id="c82b7655ce78fdb20797f9a0b529460c414cad9a" translate="yes" xml:space="preserve">
          <source>file5c.c</source>
          <target state="translated">file5c.c</target>
        </trans-unit>
        <trans-unit id="e3569eeff213c66ee68ba8129e95a015af94492b" translate="yes" xml:space="preserve">
          <source>file6c.c</source>
          <target state="translated">file6c.c</target>
        </trans-unit>
        <trans-unit id="389f6f288bbd8c87170840fb566bc2a58914e727" translate="yes" xml:space="preserve">
          <source>file7c.c</source>
          <target state="translated">file7c.c</target>
        </trans-unit>
        <trans-unit id="f750d9359ba952e035041c47c471d03be546dae0" translate="yes" xml:space="preserve">
          <source>file8c.c</source>
          <target state="translated">file8c.c</target>
        </trans-unit>
        <trans-unit id="649ce7257b5d407a411c8a3a892db26b13538aa6" translate="yes" xml:space="preserve">
          <source>file8c.h</source>
          <target state="translated">file8c.h</target>
        </trans-unit>
        <trans-unit id="2c268161bcd37e38aa327365c829e292a5df9692" translate="yes" xml:space="preserve">
          <source>file9c.c</source>
          <target state="translated">file9c.c</target>
        </trans-unit>
        <trans-unit id="e546a9945e5fbbf012ee47c501d2fd647f6189ad" translate="yes" xml:space="preserve">
          <source>in the source code (so the headers never alter the value of
&lt;code&gt;DEFINE_VARIABLES&lt;/code&gt;), then you should be clean.  It is just a nuisance to
have to remember to write the the extra line.  An alternative might be:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в исходном коде (таким образом, заголовки никогда не изменяют значение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), тогда вы должны быть чистыми. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это просто неприятность, чтобы не забыть написать дополнительную строку. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Альтернативой может быть:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="406e031b8824ea26ae0bf4d7579a1d89e3fb5906" translate="yes" xml:space="preserve">
          <source>main.c</source>
          <target state="translated">main.c</target>
        </trans-unit>
        <trans-unit id="93365afb1329c154f67f66abb34e7ec554e7e414" translate="yes" xml:space="preserve">
          <source>prog1.c</source>
          <target state="translated">prog1.c</target>
        </trans-unit>
        <trans-unit id="ae51ce8fa46448ec348078275a9b0392b4e5a612" translate="yes" xml:space="preserve">
          <source>prog1.h</source>
          <target state="translated">prog1.h</target>
        </trans-unit>
        <trans-unit id="d0cfc1b7cd134217aa1eee2c1f5eb03303856b18" translate="yes" xml:space="preserve">
          <source>prog1.mk</source>
          <target state="translated">prog1.mk</target>
        </trans-unit>
        <trans-unit id="ac81dfe96b76fa35c693ddb6ff7df89fa25ca4a5" translate="yes" xml:space="preserve">
          <source>prog2.c</source>
          <target state="translated">prog2.c</target>
        </trans-unit>
        <trans-unit id="9a2c603c45c08d4af91fc8d86e74f4bf0ece1530" translate="yes" xml:space="preserve">
          <source>prog2.h</source>
          <target state="translated">prog2.h</target>
        </trans-unit>
        <trans-unit id="29a7b48708db879ef7d5301795b122b78c096c5a" translate="yes" xml:space="preserve">
          <source>prog3.c</source>
          <target state="translated">prog3.c</target>
        </trans-unit>
        <trans-unit id="57d004dc92d1b9ca86e4f162742b13e88ad1cf3f" translate="yes" xml:space="preserve">
          <source>prog3.h</source>
          <target state="translated">prog3.h</target>
        </trans-unit>
        <trans-unit id="af366bc1058daa94590fd146182289cbdd2bf946" translate="yes" xml:space="preserve">
          <source>prog4.c</source>
          <target state="translated">prog4.c</target>
        </trans-unit>
        <trans-unit id="e615acdea9dc98e713fe90f5346ef04f37644c99" translate="yes" xml:space="preserve">
          <source>prog4.h</source>
          <target state="translated">prog4.h</target>
        </trans-unit>
        <trans-unit id="3dd95e946ea8548116d3346d8410def41f81c5cf" translate="yes" xml:space="preserve">
          <source>prog5.c</source>
          <target state="translated">prog5.c</target>
        </trans-unit>
        <trans-unit id="0ab4dfc395d6335679526b820fe8b24221395ae0" translate="yes" xml:space="preserve">
          <source>prog8.c</source>
          <target state="translated">prog8.c</target>
        </trans-unit>
        <trans-unit id="3af43e4333ca180e16d8a7d37246776c42e95676" translate="yes" xml:space="preserve">
          <source>seldom_correct.h</source>
          <target state="translated">seldom_correct.h</target>
        </trans-unit>
        <trans-unit id="1166b4b12a2519496b1dfaf6e7f4d98b4f0edf4b" translate="yes" xml:space="preserve">
          <source>step 1)cc -o ex example.c example1.c
step 2)./ex</source>
          <target state="translated">шаг 1)cc -o ex example.c example.c example1.c step 2).ex</target>
        </trans-unit>
        <trans-unit id="c35d0d128f82b9ae6bbaba048a190422b8e2bf8c" translate="yes" xml:space="preserve">
          <source>which is basically the behavior the C standard gives to &lt;code&gt;extern&lt;/code&gt; variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это в основном поведение, которое стандарт C дает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; переменным.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
