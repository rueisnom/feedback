<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/1433204">
    <body>
      <group id="1433204">
        <trans-unit id="691b744886da99866feaea02d3066790f516c985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;
allows one module of your program to access a global variable or function declared in another module of your program.
You usually have extern variables declared in header files.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하면 프로그램의 한 모듈이 프로그램의 다른 모듈에 선언 된 전역 변수 또는 함수에 액세스 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 헤더 파일에 extern 변수가 선언되어 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7ba700d01f9e35eaa62b507ae07d80ca0838516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used so one &lt;code&gt;first.c&lt;/code&gt; file can have full access to a global parameter in another &lt;code&gt;second.c&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 사용되므로 하나의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 파일이 다른 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;second.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 파일 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 전역 매개 변수에 완전히 액세스 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67c7d933bc91f3d7f4581169eb22a8f828ce47b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used to let other C files or external components know this variable is already defined somewhere. Example: if  you are building a library, no need to define global variable mandatorily somewhere in library itself. The library will be compiled directly, but while linking the file, it checks for the definition.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 다른 C 파일이나 외부 구성 요소에이 변수가 이미 정의되어 있음을 알리는 데 사용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예 : 라이브러리를 구축하는 경우 라이브러리 자체의 어딘가에 전역 변수를 정의 할 필요가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라이브러리는 직접 컴파일되지만 파일을 링크하는 동안 정의를 확인합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8af8b6a3f7c07ab0ae2fed724efa07585bdb20d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; simply means a variable is defined elsewhere (e.g., in another file).</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 변수가 다른 곳 (예 : 다른 파일)에 정의되어 있음을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="912da2af6624131ec49a4d74be0e306561c1bf22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;external.h&lt;/code&gt; for the EXTERN macro definitions, etc.</source>
          <target state="translated">&lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;EXTERN 매크로 정의 등의 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;external.h&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6c6cab53c2a8d3d3c32325a2554932b43513b2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file1c.h&lt;/code&gt; to define types (notably, &lt;code&gt;struct oddball&lt;/code&gt;, the type of &lt;code&gt;oddball_struct&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 유형을 정의합니다 (특히, &lt;/font&gt; &lt;code&gt;oddball_struct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 유형 인 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct oddball&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;oddball&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83cd5bc57f7c5534f30691c642087a0f66f09d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file2c.h&lt;/code&gt; to define or declare the global variables.</source>
          <target state="translated">&lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수를 정의하거나 선언하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;file2c.h&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6175a7f682df0cfe01eed1994f44252888954cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file3c.c&lt;/code&gt; which defines the global variables.</source>
          <target state="translated">&lt;code&gt;file3c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수를 정의하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;file3c.c&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b96ebb2cad7a9f3b0501e004f81356772496e65f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file4c.c&lt;/code&gt; which simply uses the global variables.</source>
          <target state="translated">&lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단순히 전역 변수를 사용하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;file4c.c&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bde7b6e5dceee89851b0dfbe86b665aa66b851c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file5c.c&lt;/code&gt; which shows that you can declare and then define the global variables.</source>
          <target state="translated">&lt;code&gt;file5c.c&lt;/code&gt; :&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전역 변수를 선언하고 정의 할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있음&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59db616bb4616380c90bce70be473268e263ec20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file6c.c&lt;/code&gt; which shows that you can define and then (attempt to) declare the global variables.</source>
          <target state="translated">&lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 전역 변수를 정의한 다음 선언하려고 시도 할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있음&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 보여줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbe60d5324112e7a90fab3433e01cc10f44332d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog1&lt;/code&gt; uses &lt;code&gt;prog1.c&lt;/code&gt;, &lt;code&gt;file1.c&lt;/code&gt;, &lt;code&gt;file2.c&lt;/code&gt;, &lt;code&gt;file3.h&lt;/code&gt; and &lt;code&gt;prog1.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.h&lt;/code&gt; 를 사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8336dc4e7fb0da995e44db63cc9e75bcbed8f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog2&lt;/code&gt; uses &lt;code&gt;prog2.c&lt;/code&gt;, &lt;code&gt;file10.c&lt;/code&gt;, &lt;code&gt;file11.c&lt;/code&gt;, &lt;code&gt;file12.c&lt;/code&gt;, &lt;code&gt;prog2.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file10.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file11.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file12.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2.h&lt;/code&gt; 를 사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a35ff2125678aea4d10758c53f9b97f84cea22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog3&lt;/code&gt; uses &lt;code&gt;prog3.c&lt;/code&gt;, &lt;code&gt;file1a.c&lt;/code&gt;, &lt;code&gt;file2a.c&lt;/code&gt;, &lt;code&gt;file3a.h&lt;/code&gt;, &lt;code&gt;prog3.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1a.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2a.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3a.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3.h&lt;/code&gt; 를 사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb03231f7d7081ad3fb95a2ebfb85c0a8588bfd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog4&lt;/code&gt; uses &lt;code&gt;prog4.c&lt;/code&gt;, &lt;code&gt;file1b.c&lt;/code&gt;, &lt;code&gt;file2b.c&lt;/code&gt;, &lt;code&gt;prog4.h&lt;/code&gt;, &lt;code&gt;file3b.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; 를 ​​사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c13993e2c5e59f817ad09159b39659211a8029d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog5&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file3c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; 를 사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70cfe9feb2aa730f50a77d8f1f96a1fd90df55bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog6&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file5c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; 를 사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3fca148ebe696e5ef8edb0ed4a2bf0c6e3197b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog7&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file6c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog7&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; 를 사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6365135448408cb725d916abbeeb6b605c5606f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog8&lt;/code&gt; uses &lt;code&gt;prog8.c&lt;/code&gt;, &lt;code&gt;file7c.c&lt;/code&gt;, &lt;code&gt;file9c.c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file7c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file9c.c&lt;/code&gt; 를 사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b33f5f286b0e8ecfa5f139bfae710da5c66808c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog9&lt;/code&gt; uses &lt;code&gt;prog8.c&lt;/code&gt;, &lt;code&gt;file8c.c&lt;/code&gt;, &lt;code&gt;file9c.c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog9&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file8c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file9c.c&lt;/code&gt; 를 사용&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c2c7350f8d61556fd197ba3cc7ad47f1a41f7f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;extern keyword is used with the variable for its identification as a global variable.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extern 키워드는 전역 변수로 식별하기 위해 변수와 함께 사용됩니다.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae48a4577bef144b2ee1fffb6266f5b9461caf28" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Confession&lt;/em&gt;: The 'avoiding duplicated code' scheme outlined here was
developed because the issue affects some code I work on (but don't own),
and is a niggling concern with the scheme outlined in the first part of
the answer.  However, the original scheme leaves you with just two
places to modify to keep variable definitions and declarations
synchronized, which is a big step forward over having exernal variable
declarations scattered throughout the code base (which really matters
when there are thousands of files in total).  However, the code in the
files with the names &lt;code&gt;fileNc.[ch]&lt;/code&gt; (plus &lt;code&gt;external.h&lt;/code&gt; and &lt;code&gt;externdef.h&lt;/code&gt;)
shows that it can be made to work.  Clearly, it would not be hard to
create a header generator script to give you the standardized template
for a variable defining and declaring header file.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;고백&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : 여기에 설명 된 '중복 코드 피하기'체계는 문제가 내가 작업하고 있지만 소유하지 않는 일부 코드에 영향을 미치기 때문에 개발되었으며, 답변의 첫 번째 부분에 요약 된 체계와 관련이 있습니다. 그러나 원래 체계는 변수 정의와 선언을 동기화하기 위해 수정해야 할 위치가 두 개뿐입니다. 이는 코드 기반 전체에 외부 변수 선언이 흩어져있는 것보다 훨씬 큰 발전입니다 (총 수천 개의 파일이있을 때 중요 함). . 그러나 이름이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fileNc.[ch]&lt;/code&gt; 인&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 파일의 코드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;externdef.h&lt;/code&gt; )&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;)는 작동 가능함을 보여줍니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더 파일을 정의하고 선언하는 변수에 대한 표준화 된 템플릿을 제공하는 헤더 생성기 스크립트를 작성하는 것은 어렵지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="802de36c736dcca7dba68f179d6b2fe2a98d8ff5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Late Major Addition&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;늦은 주요 추가&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cabb747ea3dfc8e01242e16511d95cb93e4e56be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NB&lt;/em&gt; These are toy programs with just barely enough code to make them
marginally interesting.  There is repetition within the examples that
could be removed, but isn't to simplify the pedagogical explanation.
(For example: the difference between &lt;code&gt;prog5.c&lt;/code&gt; and &lt;code&gt;prog8.c&lt;/code&gt; is the name
of one of the headers that are included.  It would be possible to
reorganize the code so that the &lt;code&gt;main()&lt;/code&gt; function was not repeated, but
it would conceal more than it revealed.)</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NB&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이것들은 약간 흥미로워 질 정도로 코드가 거의없는 장난감 프로그램입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예제 내에서 제거 될 수있는 반복이 있지만 교육 학적 설명을 단순화하지는 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(예 : &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 차이점 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 포함 된 헤더 중 하나의 이름입니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 함수가 반복되지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않도록 코드를 재구성 할 수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 있지만 더 많이 숨길 수 있습니다. 공개보다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="246969342f7091a47a7e6df3ab6c0b9846bad087" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next source file completes the source (provides a main program) for &lt;code&gt;prog5&lt;/code&gt;, &lt;code&gt;prog6&lt;/code&gt; and &lt;code&gt;prog7&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 소스 파일은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog7&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 소스를 완료합니다 (기본 프로그램 제공) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c0295f73a690f01b9e6a895dcda3cc552adfdd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog1&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 두 파일은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 소스를 완성합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd48a25f012bcd39ad2bbcac04ba00b07d750b9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog2&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 두 파일은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 소스를 완성합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43678bd292d03dff8a030116f5904f4ddc9881aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog3&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 두 파일은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 소스를 완성합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b8b12f6883eef3eb46da8b95ee2b2966146e288" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog4&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 두 파일은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 소스를 완성합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b6cfd519088106efcde93a7e2818d7019468cf8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog8&lt;/code&gt; and &lt;code&gt;prog9&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 두 파일은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog9&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 소스를 완성합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67c77d683553c02292bbef903605e0ffb1384061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#6.9p5&quot;&gt;&amp;sect;6.9 External definitions &amp;para;5&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#6.9p5&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;sect;6.9 외부 정의 &amp;para;5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f3e271c09e92f032c8fe65e498d41ca3fd41f69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.2&quot;&gt;J.2 Undefined behavior&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;J.2 정의되지 않은 동작&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22ad7a5f93246b4e0bc197f64432fc4496f7a1ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C++17 inline variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++ 17 인라인 변수&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b0c72cdf18835af81fed510af873ef1583c670a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GCC ELF Linux implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GCC ELF Linux 구현&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d02958a95497c38d1132e2d49d1b72a14154cb99" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;161)&lt;/sup&gt; Thus, if an identifier declared with external linkage
  is not used in an expression, there need be no external definition for
  it.</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;161)&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 따라서 외부 연결로 선언 된 식별자가 표현식에 사용되지 않으면 외부 정의가 필요하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f931e8eb7528883decff0c083a27b301e685fe8" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;If you're not an experienced C programmer, you could (and perhaps
       should) stop reading here.&lt;/em&gt;
&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;숙련 된 C 프로그래머가 아니라면 여기서 읽기를 중단 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="212d3d4f1c7e1cf1eb0644358b4f9e7fc0c6acad" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;If you're not an experienced C programmer, you probably should stop reading here.&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;숙련 된 C 프로그래머가 아니라면 여기서 읽기를 중단해야합니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="904db4087127fede8e7a24d87fc43f98f55cdb62" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;The source code and text of this answer are available in my
      &lt;a href=&quot;https://github.com/jleffler/soq&quot;&gt;SOQ&lt;/a&gt; (Stack Overflow Questions)
      repository on GitHub in the
      &lt;a href=&quot;https://github.com/jleffler/soq/tree/master/src/so-0143-3204&quot;&gt;src/so-0143-3204&lt;/a&gt;
      sub-directory.&lt;/em&gt;
&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 답변의 소스 코드와 텍스트 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt;&lt;a href=&quot;https://github.com/jleffler/soq/tree/master/src/so-0143-3204&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;src / so-0143-3204&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하위 디렉토리 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에있는 GitHub의 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jleffler/soq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SOQ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (Stack Overflow Questions) 저장소에 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt; &lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e7ca21e90603b40c1f38e754ca020fe41a1456b2" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Correct header &lt;code&gt;file3b.h&lt;/code&gt; included (instead of &lt;code&gt;fileba.h&lt;/code&gt;) per
&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;Denis Kniazhev&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;올바른 헤더 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (대신 포함 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fileba.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 당 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데니스 Kniazhev&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7e33b7e516b6b281ee81a9ca638b338f3b469214" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Reverse contents of &lt;code&gt;#if&lt;/code&gt; and &lt;code&gt;#else&lt;/code&gt; blocks, fixing bug identified by
&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;Denis Kniazhev&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Denis Kniazhev가&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 식별 한 버그를 수정 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#else&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 블록의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내용을 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;되돌립니다.&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c75267659ed7cb9acf9c3bd955871ce73dc26ed0" translate="yes" xml:space="preserve">
          <source>A function should never need to declare a variable using &lt;code&gt;extern&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 변수를 선언 할 필요가 없습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95a08cd55a032d11568e24a970f19057fd318c96" translate="yes" xml:space="preserve">
          <source>A header file only contains &lt;code&gt;extern&lt;/code&gt; declarations of variables &amp;mdash; never
&lt;code&gt;static&lt;/code&gt; or unqualified variable definitions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더 파일에는 &lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 규정되지 않은 변수 정의가 아닌 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선언 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만 포함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;됩니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="929c9870b227429e31fcdd1590cbd4387c67db5b" translate="yes" xml:space="preserve">
          <source>A source file never contains &lt;code&gt;extern&lt;/code&gt; declarations of variables &amp;mdash;
source files always include the (sole) header that declares them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스 파일에는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선언이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;포함되지 않습니다. 소스 파일에는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항상 변수를 선언하는 (sole) 헤더가 포함됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="807b7c5e47890e949e5e71577df2a663417f44b3" translate="yes" xml:space="preserve">
          <source>A typical scheme works like this, using the original global variable
illustrated in &lt;code&gt;file3.h&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적인 구성표는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 설명 된 원래 전역 변수를 사용하여 이와 같이 작동합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3669f7e5c7ae797032b9f571d2855464bd33a8cc" translate="yes" xml:space="preserve">
          <source>A variable is &lt;strong&gt;declared&lt;/strong&gt; when the compiler is informed that a
variable exists (and this is its type); it does not allocate the
storage for the variable at that point.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수가 존재 함을 컴파일러에 알릴 때 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 시점에서 변수에 대한 스토리지를 할당하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3ef0901904af9ddecd5808dfc21e84c84d15be7" translate="yes" xml:space="preserve">
          <source>A variable is &lt;strong&gt;defined&lt;/strong&gt; when the compiler allocates the storage for
the variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러가 변수에 대한 스토리지를 할당 할 때 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8955ccaa95522319deba1043a4efb97953fda31" translate="yes" xml:space="preserve">
          <source>A very short solution I use to allow a header file to contain the extern reference or actual implementation of an object. The file that actually contains the object just does &lt;code&gt;#define GLOBAL_FOO_IMPLEMENTATION&lt;/code&gt;. Then when I add a new object to this file it shows up in that file also without me having to copy and paste the definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더 파일에 extern 참조 또는 객체의 실제 구현을 포함시키는 데 사용하는 매우 짧은 솔루션입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로 객체를 포함하는 파일은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#define GLOBAL_FOO_IMPLEMENTATION&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 수행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음이 파일에 새 객체를 추가하면 정의를 복사하여 붙여 넣지 않아도 해당 파일에 표시됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f089e1504e9f5976c51721bd3cd0db3737e78c9a" translate="yes" xml:space="preserve">
          <source>Adding an &lt;code&gt;extern&lt;/code&gt; turns a variable &lt;em&gt;definition&lt;/em&gt; into a variable &lt;em&gt;declaration&lt;/em&gt;. See &lt;a href=&quot;https://stackoverflow.com/questions/1410563/&quot;&gt;this thread&lt;/a&gt; as to what's the difference between a declaration and a definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 추가하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 변수 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;바뀝니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언과 정의의 차이점에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대해서는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1410563/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 스레드&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371aa8471e9601036622d8ba995342ff661dca0d" translate="yes" xml:space="preserve">
          <source>Although there are other ways of doing it, this method is simple and
reliable.
It is demonstrated by &lt;code&gt;file3.h&lt;/code&gt;, &lt;code&gt;file1.c&lt;/code&gt; and &lt;code&gt;file2.c&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 방법이 있지만이 방법은 간단하고 신뢰할 수 있습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 설명됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33409945b6a6a4b528aa2923576aeff68a8476dd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;extern&lt;/code&gt; variable is a declaration (thanks to sbi for the correction) of a variable which is defined in another translation unit. That means the storage for the variable is allocated in another file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수는 다른 변환 부에 정의 된 변수 (보정하기 위해 (sbi)를 감사)을 선언한다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 변수의 스토리지가 다른 파일에 할당되었음을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2713c0441427ac808975eb78cd2e068c63a3c8e8" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;external definition&lt;/em&gt; is an external declaration that is also a
  definition of a function (other than an inline definition) or an
  object.
  If an identifier declared with external linkage is used in an
  expression (other than as part of the operand of a &lt;code&gt;sizeof&lt;/code&gt; or
  &lt;code&gt;_Alignof&lt;/code&gt; operator whose result is an integer constant), somewhere in
  the entire program there shall be exactly one external definition for
  the identifier; otherwise, there shall be no more than
  one.&lt;sup&gt;161)&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;외부 정의는&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또한 함수 (인라인 정의 이외) 또는 객체의 정의 된 외부 선언한다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;외부 연결로 선언 된 식별자가 표현식에 사용되면 ( &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과가 정수 상수 인 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_Alignof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 연산자 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 피연산자의 일부 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 아닌) 전체 프로그램 어딘가에 식별자에 대한 외부 정의가 정확히 하나 있어야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그렇지 않으면, 하나만 있어야한다. &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;161)&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3efdf6e8d9681ed5f5f7c72651568658204fad53" translate="yes" xml:space="preserve">
          <source>An identifier with external linkage is used, but in the program there
  does not exist exactly one external definition for the identifier, or
  the identifier is not used and there exist multiple external
  definitions for the identifier (6.9).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;외부 연계가있는 식별자가 사용되지만 프로그램에는 식별자에 대한 외부 정의가 정확히 하나 존재하지 않거나 식별자가 사용되지 않으며 식별자에 대한 외부 정의가 여러 개 있습니다 (6.9).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8ddaec31cd2c4e030c6ef6df28a74cc5b31c7ce6" translate="yes" xml:space="preserve">
          <source>Another concern can be that the variables need to be defined in each of
a number of 'main programs'.  This is normally a spurious concern; you
can simply introduce a C source file to define the variables and link
the object file produced with each of the programs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 우려는 변수가 여러 '주요 프로그램'각각에 정의되어야한다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 일반적으로 가짜 관심사입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C 소스 파일을 도입하여 변수를 정의하고 각 프로그램으로 생성 된 오브젝트 파일을 링크 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="32a67881216469ac0ec14850f47fe546855708f2" translate="yes" xml:space="preserve">
          <source>Any header should be protected against reinclusion, so that type
definitions (enum, struct or union types, or typedefs generally) do not
cause problems.  The standard technique is to wrap the body of the
header in a header guard such as:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;형식 정의 (enum, struct 또는 union 형식 또는 typedef)가 문제를 일으키지 않도록 모든 헤더를 재 연합으로부터 보호해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표준 기술은 다음과 같은 헤더 가드로 헤더 본문을 감싸는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45d35123fc8a96fae7a834999067040cfc78f9a9" translate="yes" xml:space="preserve">
          <source>As noted in comments here, and as stated in my answer to a similar
&lt;a href=&quot;https://stackoverflow.com/questions/1490693&quot;&gt;question&lt;/a&gt;, using multiple
definitions for a global variable leads to undefined behaviour (J.2;
&amp;sect;6.9), which is the standard's way of saying &quot;anything could happen&quot;.
One of the things that can happen is that the program behaves as you
expect; and J.5.11 says, approximately, &quot;you might be lucky more often
than you deserve&quot;.
But a program that relies on multiple definitions of an extern variable
&amp;mdash; with or without the explicit 'extern' keyword &amp;mdash; is not a strictly
conforming program and not guaranteed to work everywhere.
Equivalently: it contains a bug which may or may not show itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기 주석에서 언급하고 비슷한 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1490693&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;질문에 대한&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나의 대답에서 언급했듯이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수에 여러 정의를 사용하면 정의되지 않은 동작 (J.2; &amp;sect;6.9)이 발생합니다. 이는 표준이 &quot;모든 일이 일어날 수 있습니다&quot;라고 말하는 방식입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;발생할 수있는 것 중 하나는 프로그램이 예상대로 작동한다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;J.5.11은 대략 &quot;당신이 바라는 것보다 운이 좋을 것&quot;이라고 말합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 명시적인 'extern'키워드를 사용하거나 사용하지 않고 extern 변수의 여러 정의에 의존하는 프로그램은 엄격하게 준수하는 프로그램이 아니며 모든 곳에서 작동하지 않을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마찬가지로 : 버그를 포함하거나 표시하지 않을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea9c797001a229bb0f7e2e5dcae3538ba2a55b2c" translate="yes" xml:space="preserve">
          <source>Avoid global variables</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수를 피하십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2c86e9533eaac188daf2a31bc7c14f8d7b5731f" translate="yes" xml:space="preserve">
          <source>Avoid global variables whenever possible &amp;mdash; use functions instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가능하면 전역 변수를 피하십시오. 대신 함수를 사용하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d0532814d924ccd1ab821349854a5eaf5e7fdf8" translate="yes" xml:space="preserve">
          <source>Avoiding Code Duplication</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 중복 방지&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="64132ad1f1f27881cb1abfa320c5ec1afc5711ba" translate="yes" xml:space="preserve">
          <source>Because this technique is not always supported, it is best to avoid
using it, &lt;em&gt;especially if your code needs to be portable&lt;/em&gt;.
Using this technique, you can also end up with unintentional type
punning.
If one of the files declared &lt;code&gt;i&lt;/code&gt; as a &lt;code&gt;double&lt;/code&gt; instead of as an &lt;code&gt;int&lt;/code&gt;,
C's type-unsafe linkers probably would not spot the mismatch.
If you're on a machine with 64-bit &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt;, you'd not even
get a warning; on a machine with 32-bit &lt;code&gt;int&lt;/code&gt; and 64-bit &lt;code&gt;double&lt;/code&gt;, you'd
probably get a warning about the different sizes &amp;mdash; the linker would
use the largest size, exactly as a Fortran program would take the
largest size of any common blocks.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기술이 항상 지원되는 것은 아니기 때문에, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특히 코드를 이식 할 수 있어야하는 경우&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에는 사용하지 않는 것이 가장 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 이 기술을 사용하면 의도하지 않은 유형의 구멍을 낼 수도 있습니다. 파일 중 하나가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대신 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 C의 형식 안전하지 않은 링커는 아마도 불일치를 발견하지 못할 것입니다. 64 비트 &lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이있는 컴퓨터를 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 경우 경고가 표시되지 않습니다. 32 비트 &lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 64 비트 &lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 가진 머신 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서는 다른 크기에 대해 경고를받을 것입니다. Fortran 프로그램이 가장 일반적인 크기의 블록을 사용하는 것처럼 링커에서 가장 큰 크기를 사용합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b33dab1d92c5a6831743f5185214a923868b7f2" translate="yes" xml:space="preserve">
          <source>Best way to declare and define global variables</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수를 선언하고 정의하는 가장 좋은 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31291b8ed31cfce74fc0f36b57aa3dad74b3a290" translate="yes" xml:space="preserve">
          <source>But it will be correctly declared as an &lt;code&gt;unsigned char&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 올바르게 선언됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="535e045c8f36ad1784410ee9660b08a2ee4c1486" translate="yes" xml:space="preserve">
          <source>But this link seems to no longer work...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 링크는 더 이상 작동하지 않는 것 같습니다 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="77451d71b40941ae17f1943fc9be05c65d905e16" translate="yes" xml:space="preserve">
          <source>Clearly, the code for the oddball structure is not what you'd normally
write, but it illustrates the point.  The first argument to the second
invocation of &lt;code&gt;INITIALIZER&lt;/code&gt; is &lt;code&gt;{ 41&lt;/code&gt; and the remaining argument
(singular in this example) is &lt;code&gt;43 }&lt;/code&gt;.  Without C99 or similar support
for variable argument lists for macros, initializers that need to
contain commas are very problematic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분명히, oddball 구조의 코드는 일반적으로 작성하는 것이 아니라 요점을 보여줍니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INITIALIZER&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 두 번째 호출에 대한 첫 번째 인수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ 41&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이고 나머지 인수 (이 예에서는 단수)는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;43 }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매크로에 대한 가변 인수 목록에 대한 C99 또는 유사한 지원이 없으면 쉼표를 포함해야하는 이니셜 라이저는 매우 문제가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8646ef6ae439093b3a509c848a73e94716034cd4" translate="yes" xml:space="preserve">
          <source>Compile and decompile:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일 및 디 컴파일 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d43ef1edf24fba8899355dc8110d85e5de9eb59f" translate="yes" xml:space="preserve">
          <source>Complete sample:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;완전한 샘플 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="521e7e446becd7f610ecef9f5437d49aa3d8d12f" translate="yes" xml:space="preserve">
          <source>Declaration won't allocate memory (the variable must be defined for memory allocation) but the definition will. 
This is just another simple view on the extern keyword since the other answers are really great.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언은 메모리를 할당하지 않지만 (메모리 할당을 위해 변수를 정의해야 함) 정의는 정의됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 답변이 실제로 훌륭하기 때문에 이것은 extern 키워드에 대한 또 다른 간단한 견해입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a56f8c8e203fe1ef1374576f22f70cc9402c3b5" translate="yes" xml:space="preserve">
          <source>Does this exposition miss anything?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 박람회에서 빠진 것이 있습니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="396176d9049fd1b4108eb2b9640b789290670d4b" translate="yes" xml:space="preserve">
          <source>End of Original Answer</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원래 답변의 끝&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="373a87fdeccadee389f2747d9ad2ef5069598780" translate="yes" xml:space="preserve">
          <source>Extern is the keyword you use to declare that the variable itself resides in another translation unit.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Extern은 변수 자체가 다른 번역 단위에 있음을 선언하는 데 사용하는 키워드입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2ad7f7d36690943fbd8d2cdeefa156bba278bc4f" translate="yes" xml:space="preserve">
          <source>First off, the &lt;code&gt;extern&lt;/code&gt; keyword is not used for defining a variable; rather it is used for declaring a variable. I can say &lt;code&gt;extern&lt;/code&gt; is a storage class, not a data type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드는 변수를 정의하는 데 사용되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오히려 변수를 선언하는 데 사용됩니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 데이터 유형이 아닌 스토리지 클래스 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;라고 말할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e675d41d485a134cc59cb8cc5812d69dfd94ce3" translate="yes" xml:space="preserve">
          <source>For any given variable, exactly one source file defines the variable,
preferably initializing it too.  (Although there is no need to
initialize explicitly to zero, it does no harm and can do some good,
because there can be only one initialized definition of a particular
global variable in a program).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주어진 변수에 대해 정확히 하나의 소스 파일이 변수를 정의하고 변수를 초기화하는 것이 좋습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(0으로 명시 적으로 초기화 할 필요는 없지만 프로그램에는 특정 전역 변수에 대해 초기화 된 정의가 하나만있을 수 있기 때문에 해를 끼치 지 않고 좋은 결과를 얻을 수 있습니다).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26a05b281fc0ea33355006c0511e1a13f6c1b929" translate="yes" xml:space="preserve">
          <source>For any given variable, only one header file declares it (SPOT &amp;mdash;
Single Point of Truth).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주어진 변수에 대해 단 하나의 헤더 파일 만 선언합니다 (SPOT-Single Point of Truth).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15a305214dc58c0f3bae45d2b50c5db3c7291f4d" translate="yes" xml:space="preserve">
          <source>From now on, it is the job of the linker to make the final program, but the &lt;code&gt;extern&lt;/code&gt; information has already been extracted from the source code into the object file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제부터는 최종 프로그램을 만드는 것이 링커의 작업이지만 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스 코드에서 오브젝트 파일로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정보가 이미 추출되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3415f68a49d03b531d86d16148c9a28fbd48eb90" translate="yes" xml:space="preserve">
          <source>Further, it starts to get tricky because you might include &lt;code&gt;file4b.h&lt;/code&gt;
before including &lt;code&gt;file3b.h&lt;/code&gt; to generate the definitions, but the normal
header guards on &lt;code&gt;file3b.h&lt;/code&gt; would prevent the header being reincluded.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의를 생성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하기 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 포함하기 전에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;file4b.h&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 포함 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 수 있기 때문에 까다로워지기 시작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 일반 헤더 가드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 헤더가 다시 포함되는 것을 방지합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="c4dd913333c910d79e768559ccbeb0eaa6741de0" translate="yes" xml:space="preserve">
          <source>Header Guards</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더 가드&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7ed8a527d683dd05a5c071bc07baabb3f83180ae" translate="yes" xml:space="preserve">
          <source>How do I use extern to share variables between source files</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extern을 사용하여 소스 파일간에 변수를 공유하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="69ab5ed0b8bdee651f010db1fd0e5dc39247d2c8" translate="yes" xml:space="preserve">
          <source>However, it can be done subject to a not too unreasonable constraint.
Let's introduce a new set of file names:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 너무 불합리하지 않은 제약 조건이 적용될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;새로운 파일 이름 세트를 소개합니다 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="306a7e6ac4f4e31eaaf9959df7622d5c7fd6f737" translate="yes" xml:space="preserve">
          <source>However, the C standard also lists it in informative Annex J as one of
the &lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.5&quot;&gt;Common extensions&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나, C 표준은 또한 중 하나로 정보 부속서 J에 나타 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.5&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적인 확장&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f32f286c2c18f239ed02d25d1cc26ef29d313c9b" translate="yes" xml:space="preserve">
          <source>However, the problems are relatively unlikely to occur in practice,
especially if you take the standard advice to</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 특히 표준 조언을받는 경우 문제가 실제로 발생할 가능성은 거의 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1480206dabab63aec601dcfec6c3d8f480f9d30f" translate="yes" xml:space="preserve">
          <source>I know that global variables in C sometimes have the &lt;code&gt;extern&lt;/code&gt; keyword. What is an &lt;code&gt;extern&lt;/code&gt; variable? What is the declaration like? What is its scope?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C의 전역 변수에 때로는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 있다는 것을 알고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있습니다. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;란 무엇입니까 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언은 무엇입니까? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;범위는 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0de3380113bfc8253411af051f1001ecf0ac9ca2" translate="yes" xml:space="preserve">
          <source>I like to think of an extern variable as a promise that you make to the compiler.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extern 변수를 컴파일러에게 약속한다고 생각하고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff99a871bf617a3ef70ca3fc64c7048d4e9b9baf" translate="yes" xml:space="preserve">
          <source>I use this pattern across multiple files. So in order to keep things as self contained as possible, I just reuse the single GLOBAL macro in each header. My header looks like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 파일에서이 패턴을 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 가능한 한 독립적으로 물건을 유지하기 위해 각 헤더에서 단일 GLOBAL 매크로를 재사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 헤더는 다음과 같습니다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e5241564a74e5dafcfe12477235c424b7af357a0" translate="yes" xml:space="preserve">
          <source>If the variable is actually a complex array, for example, this can lead
to extreme duplication of code.  It can, very occasionally, be a
sensible way to achieve some effect, but that is very unusual.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 변수가 실제로 복잡한 배열 인 경우 코드가 크게 복제 될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;때로는 효과를 달성 할 수있는 현명한 방법 일 수 있지만 매우 드문 일입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5240a053ab6ec39673d237d57b13fe35267129a3" translate="yes" xml:space="preserve">
          <source>If you don't declare it as extern you'll get 2 variables named the same but not related at all, and an error of multiple definitions of the variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extern으로 선언하지 않으면 이름이 같지만 전혀 관련이없는 2 개의 변수와 변수에 대한 여러 정의 오류가 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f984431ca6874cfecf343860bea748efbdb03e6" translate="yes" xml:space="preserve">
          <source>If you don't want a program to access your variables or functions, you use &lt;code&gt;static&lt;/code&gt; which tells the compiler that this variable or function cannot be used outside of this module.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;프로그램이 변수 또는 함수에 액세스하지 못하게하려면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 컴파일러에게이 변수 또는 함수를이 모듈 외부에서 사용할 수 없음을 알려줍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bd88bd6d2bc774ae7b046fd4f8995594296215f" translate="yes" xml:space="preserve">
          <source>Immediately before you include a header that should define variables,
you define the macro DEFINE_VARIABLES.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수를 정의해야하는 헤더를 포함하기 직전에 매크로 DEFINE_VARIABLES를 정의합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="591fb3482c2373c5da07d5044176c89097f06024" translate="yes" xml:space="preserve">
          <source>In C a variable inside a file say example.c is given local scope. The compiler expects that the variable would have its definition inside the same file example.c and when it does not find the same , it would throw an error.A function on the other hand has by default global scope . Thus you do not have to explicitly mention to the compiler &quot;look dude...you might find the definition of this function here&quot;. For a function including the file which contains its declaration is enough.(The file which you actually call a header file). 
   For example consider the following 2 files :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C에서 example.c라는 파일 내부의 변수는 로컬 범위로 지정됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러는 변수가 동일한 파일 example.c 내에 정의를 가질 것으로 예상하고 동일한 파일을 찾지 못하면 오류를 발생시킵니다. 반면에 함수는 기본적으로 전역 범위를가집니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 컴파일러에게 &quot;look look dude ...를 언급 할 필요는 없습니다. 여기에서이 함수의 정의를 찾을 수 있습니다&quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언을 포함하는 파일을 포함하는 함수로는 충분합니다 (실제로 헤더 파일을 호출하는 파일). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 다음 두 파일을 고려하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="87e8c2a5e35c1e4280b1ea010dcc4573bbbdb76d" translate="yes" xml:space="preserve">
          <source>In C++17, you might want to use inline variables instead of extern ones, as they are simple to use (can be defined just once on header) and more powerful (support constexpr). See: &lt;a href=&quot;https://stackoverflow.com/questions/177437/what-does-const-static-mean-in-c-and-c/53883715#53883715&quot;&gt;What does 'const static' mean in C and C++?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++ 17에서는 extern 변수 대신 인라인 변수를 사용할 수 있습니다. 사용하기 간단하고 (헤더에서 한 번만 정의 할 수 있음)보다 강력합니다 (constexpr 지원). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/177437/what-does-const-static-mean-in-c-and-c/53883715#53883715&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;무엇을 'const를 정적'을 의미 C 및 C ++?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5521a216563a3daa649367d1d7e5ddf5594d633a" translate="yes" xml:space="preserve">
          <source>In it declare the following</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 다음을 선언&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef34e45c1747c51692817f5fe0bc7586a11e4b83" translate="yes" xml:space="preserve">
          <source>In these examples, &lt;code&gt;file5c.c&lt;/code&gt; and &lt;code&gt;file6c.c&lt;/code&gt; directly include the header
&lt;code&gt;file2c.h&lt;/code&gt; several times, but that is the simplest way to show that the
mechanism works.  It means that if the header was indirectly included
twice, it would also be safe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예제에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 헤더 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 여러 번 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;직접 포함 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 메커니즘이 작동 함을 보여주는 가장 간단한 방법입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 헤더가 간접적으로 두 번 포함 된 경우에도 안전하다는 것을 의미합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d492f0c477aa885f9e675ba6ab82e10880840d8" translate="yes" xml:space="preserve">
          <source>It also represents that you can use the variable declared using extern
  keyword in any file though it is declared/defined in other file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 다른 파일에서 선언 / 정의되었지만 모든 파일에서 extern 키워드를 사용하여 선언 된 변수를 사용할 수 있음을 나타냅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="608d1c854a7c17669089bab083ff9f4d1512b9f9" translate="yes" xml:space="preserve">
          <source>It is important to &lt;a href=&quot;https://stackoverflow.com/questions/1410563&quot;&gt;understand the difference between &lt;em&gt;defining&lt;/em&gt; a
variable and &lt;em&gt;declaring&lt;/em&gt; a
variable&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1410563&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 &lt;/font&gt;&lt;/a&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 변수 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언&lt;/font&gt;&lt;/em&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 차이점&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이해하는&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 것이 중요 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff1f20492b56c804a8c0d9af0974927ab6848c42" translate="yes" xml:space="preserve">
          <source>J.5.11 Multiple external definitions</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;J.5.11 다중 외부 정의&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="356b85a3b8c8c81143ecad4559f86648eb5234a5" translate="yes" xml:space="preserve">
          <source>Multiple inclusion with variable definitions</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 정의에 여러 포함&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bb3445e2d1585167c615a15ad0128113264f0e4a" translate="yes" xml:space="preserve">
          <source>Not so good way to define global variables</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수를 정의하는 좋은 방법은 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b034ccab4609a346f69f734409db3034a94941a8" translate="yes" xml:space="preserve">
          <source>Note 1: if the header defines the variable without the &lt;code&gt;extern&lt;/code&gt; keyword,
then each file that includes the header creates a tentative definition
of the variable.
As noted previously, this will often work, but the C standard does not
guarantee that it will work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 1 : 헤더가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;없이 변수를 정의하는 경우 헤더 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 포함하는 각 파일은 변수의 임시 정의를 작성합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;앞에서 언급했듯이 이것은 종종 작동하지만 C 표준은 작동한다고 보장하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31627023fc26e904ae3805ebef6fe0550e6fb76f" translate="yes" xml:space="preserve">
          <source>Note 2: if the header defines and initializes the variable, then only
one source file in a given program can use the header.
Since headers are primarily for sharing information, it is a bit silly
to create one that can only be used once.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 2 : 헤더가 변수를 정의하고 초기화하면 지정된 프로그램에서 하나의 소스 파일 만 헤더를 사용할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더는 주로 정보를 공유하기위한 것이므로 한 번만 사용할 수있는 헤더를 만드는 것은 약간 어리 석습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1be075cb981e86ead613321ff8019fc4b85a063f" translate="yes" xml:space="preserve">
          <source>Note 3: if the header defines a static variable (with or without
initialization), then each source file ends up with its own private
version of the 'global' variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고 3 : 헤더가 정적 변수 (초기화 유무에 관계없이)를 정의하면 각 소스 파일은 고유 한 '전역'변수의 개인 버전으로 끝납니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95dbfe0c104a6e05478e5341f5054f912931f79e" translate="yes" xml:space="preserve">
          <source>Now in other files simply including global.h will
have it declared as an extern &lt;em&gt;for that file&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 global.h를 포함하는 다른 파일 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서는 해당 파일&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 extern으로 선언됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3c31001aa56a525a3e5e852510812d60922eb5b" translate="yes" xml:space="preserve">
          <source>Now in the file main.c</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 main.c 파일에&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ac42b8acf74f86e2af21d24e4c7789718c74f2a6" translate="yes" xml:space="preserve">
          <source>Now when you compile the two files together, using the following commands :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 다음 명령을 사용하여 두 파일을 함께 컴파일 할 때&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8bfccdd9e0dacfdeee24b02f4eeb3c87219cddca" translate="yes" xml:space="preserve">
          <source>One concern that is sometimes (and legitimately) raised about the
'declarations in headers, definitions in source' mechanism described
here is that there are two files to be kept synchronized &amp;mdash; the header
and the source.  This is usually followed up with an observation that a
macro can be used so that the header serves double duty &amp;mdash; normally
declaring the variables, but when a specific macro is set before the
header is included, it defines the variables instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에 설명 된 '헤더 선언, 소스 정의'메커니즘에 대해 때때로 (그리고 합법적으로) 제기되는 한 가지 우려는 동기화 될 두 파일 (헤더와 소스)이 있다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일반적으로 매크로를 사용하여 헤더가 이중 의무 (일반적으로 변수를 선언 함)를 제공 할 수 있다는 관찰이 이어지지 만 헤더가 포함되기 전에 특정 매크로가 설정되면 변수가 대신 정의됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4502923a9c102950b3f0b470ca7f6ba4a45278fb" translate="yes" xml:space="preserve">
          <source>Other answers have covered the language usage side of view, so now let's have a look at how it is implemented in this implementation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 답변은 언어 사용 측면을 다루었으므로 이제이 구현에서 어떻게 구현되는지 살펴 보겠습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="86546a25fe2d8c85ef2156d6bfee43929dbe1777" translate="yes" xml:space="preserve">
          <source>Output contains:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력 내용 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae83006b24a65b10fa55b857d66c3919d3a30938" translate="yes" xml:space="preserve">
          <source>Rules to be broken by experts only, and only with good reason:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전문가 만 위반할 수있는 규칙은 다음과 같은 정당한 이유가 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f9e1658358e6c89da41534fe1502dbfeafa2072" translate="yes" xml:space="preserve">
          <source>SHN_UNDEF This section table index means the symbol is undefined. When the link editor combines this object file with another that defines the indicated symbol, this file's references to the symbol will be linked to the actual definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SHN_UNDEF이 섹션 테이블 인덱스는 심볼이 정의되지 않았 음을 의미합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;링크 편집기가이 오브젝트 파일을 표시된 기호를 정의하는 다른 파일과 결합하면 기호에 대한이 파일 참조가 실제 정의에 링크됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8e55e31b1e2836483c5a4fb164dfd55b61c27cf" translate="yes" xml:space="preserve">
          <source>Say you have two &lt;code&gt;.c&lt;/code&gt;-files &lt;code&gt;test1.c&lt;/code&gt; and &lt;code&gt;test2.c&lt;/code&gt;. If you define a global variable &lt;code&gt;int test1_var;&lt;/code&gt; in &lt;code&gt;test1.c&lt;/code&gt; and you'd like to access this variable in &lt;code&gt;test2.c&lt;/code&gt; you have to use &lt;code&gt;extern int test1_var;&lt;/code&gt; in &lt;code&gt;test2.c&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이이 말 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.c&lt;/code&gt; 인&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -files &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수를 정의하면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int test1_var;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신은이 변수에 접근하고 싶습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 할 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern int test1_var;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d66081df09dd5e01f739d9c0a5d76e7293a431e" translate="yes" xml:space="preserve">
          <source>Similar concerns arise with declaring and defining functions &amp;mdash;
analogous rules apply.
But the question was about variables specifically, so I've kept the
answer to variables only.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수를 선언하고 정의 할 때도 비슷한 문제가 발생합니다. 유사한 규칙이 적용됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 질문은 변수에 관한 것이기 때문에 변수에 대해서만 답을 유지했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c56a74ee1f96b0d8079ae6e5b226d54d822047f" translate="yes" xml:space="preserve">
          <source>So I;ll quickly try to explain it;
make a file called global.h.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그래서 나는 그것을 빨리 설명하려고 노력할 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;global.h라는 파일을 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8385f075a12bbdc5e70d23e0ceb5ae6ecc928831" translate="yes" xml:space="preserve">
          <source>So you can decide to use a variable in a translation unit and then access it from another one, then in the second one you declare it as extern and the symbol will be resolved by the linker.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 번역 단위에서 변수를 사용하여 다른 변수에서 액세스하기로 결정한 다음 두 번째 변수에서 extern으로 선언하면 심볼이 링커에 의해 해석됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="43a15273df226ddca52b8a56e10ecd6e8f3fc5c6" translate="yes" xml:space="preserve">
          <source>So, you need to include the body of &lt;code&gt;file3b.h&lt;/code&gt; at most once for
declarations, and at most once for definitions, but you might need both
in a single translation unit (TU &amp;mdash; a combination of a source file and
the headers it uses).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언을 위해 최대 한 번, 선언을 위해 최대 한 번 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 본문을 포함해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 단일 변환 단위 (TU-소스 파일과 사용하는 헤더의 조합)에 둘 다 필요할 수 있습니다. .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="a00bf4b426cb9344af6da65574d0e65346416126" translate="yes" xml:space="preserve">
          <source>Tested on GCC 4.8.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GCC 4.8에서 테스트되었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5f4082d773844f6a253a421efa8b7dbcaa5087a6" translate="yes" xml:space="preserve">
          <source>That's the best way to declare and define global variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 전역 변수를 선언하고 정의하는 가장 좋은 방법입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fa0668e0b0b88a97fdfcdbe88b694e8aa07437d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.sco.com/developers/gabi/2003-12-17/contents.html&quot;&gt;System V ABI Update ELF spec&lt;/a&gt; &quot;Symbol Table&quot; chapter explains:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;http://www.sco.com/developers/gabi/2003-12-17/contents.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시스템 V ABI 업데이트 ELF 사양&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;기호 표&quot;장 설명 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7a6786d3bcfbdf53bf07c931eeddad4722af4a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extern&lt;/code&gt; can be declared in the &lt;code&gt;first.c&lt;/code&gt; file or in any of the header files &lt;code&gt;first.c&lt;/code&gt; includes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 선언 할 수 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; 의&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 파일이나 헤더 파일의에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; 가&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 포함되어 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5b5c6a95c09ef6d4ca3c3561fa32abe65c578c3" translate="yes" xml:space="preserve">
          <source>The clean, reliable way to declare and define global variables is to use
a header file to contain an &lt;code&gt;extern&lt;/code&gt;&lt;em&gt;declaration&lt;/em&gt; of the variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수를 선언하고 정의하는 깨끗하고 안정적인 방법은 헤더 파일을 사용하여 변수의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 포함하는 것 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9aef6ea03428b9fc0acfbc7857f968affaa48449" translate="yes" xml:space="preserve">
          <source>The complete programs shown use functions, so function declarations have
crept in.
Both C99 and C11 require functions to be declared or defined before they
are used (whereas C90 did not, for good reasons).
I use the keyword &lt;code&gt;extern&lt;/code&gt; in front of function declarations in headers
for consistency &amp;mdash;&amp;nbsp;to match the &lt;code&gt;extern&lt;/code&gt; in front of variable
declarations in headers.
Many people prefer not to use &lt;code&gt;extern&lt;/code&gt; in front of function
declarations; the compiler doesn't care &amp;mdash; and ultimately, neither do I
as long as you're consistent, at least within a source file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표시된 전체 프로그램은 함수를 사용하므로 함수 선언에 문제가 있습니다. C99와 C11은 모두 함수를 사용하기 전에 선언하거나 정의해야합니다 (C90은 그렇지 않은 경우). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일관성을 위해 헤더의 함수 선언 앞에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;키워드 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하여 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 변수 선언 앞의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 일치시킵니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 사람들 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 함수 선언 앞에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하지 않는 것을 선호합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일러는 신경 쓰지 않으며 궁극적으로 소스 파일 내에서 일관성이 유지되는 한 나도 마찬가지입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c188ca39079cc387fa6e831f474927a3a98a2c9" translate="yes" xml:space="preserve">
          <source>The correct interpretation of extern is that you tell something to the compiler. You tell the compiler that, despite not being present right now, the variable declared will somehow be found by the linker (typically in another object (file)). The linker will then be the lucky guy to find everything and put it together, whether you had some extern declarations or not.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extern에 대한 올바른 해석은 컴파일러에게 무언가를 알려주는 것입니다. 컴파일러에 현재 존재하지는 않지만 선언 된 변수는 링커가 (일반적으로 다른 객체 (파일)에서) 어떻게 든 찾을 수 있다고 알려줍니다. 그런 다음 링커는 extern 선언 여부에 관계없이 모든 것을 찾아서 정리하는 운이 좋은 사람이 될 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e436a831135dc09360e34bc37df40f4d70ac0ad" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;prog1.mk&lt;/code&gt; is a makefile for &lt;code&gt;prog1&lt;/code&gt; only.
It will work with most versions of &lt;code&gt;make&lt;/code&gt; produced since about the turn
of the millennium.
It is not tied specifically to GNU Make.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파일 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.mk&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 위한 메이크입니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;밀레니엄 시대가 시작된 이래로 생산 된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;make&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 버전에서 작동 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GNU Make와는 특별히 관련이 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7293120480d17b27c8759b1f20a149ffee192f92" translate="yes" xml:space="preserve">
          <source>The header defining or declaring the global variables may not itself
define any types.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수를 정의하거나 선언하는 헤더 자체는 어떤 유형도 정의 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7b7da714f931cae85e6215688bb6c3ca4aa79753" translate="yes" xml:space="preserve">
          <source>The header defining or declaring the variables has stylized contents.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수를 정의하거나 선언하는 헤더에는 양식화 된 내용이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="881e3003488bf6bc22590ba8ca6af1e94572af02" translate="yes" xml:space="preserve">
          <source>The header is included by the one source file that defines the variable
and by all the source files that reference the variable.
For each program, one source file (and only one source file) defines the
variable.
Similarly, one header file (and only one header file) should declare the
variable.
The header file is crucial; it enables cross-checking between
independent TUs (translation units &amp;mdash; think source files) and ensures
consistency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더는 변수를 정의하는 하나의 소스 파일과 변수를 참조하는 모든 소스 파일에 포함됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;각 프로그램에 대해 하나의 소스 파일 (및 하나의 소스 파일 만)이 변수를 정의합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마찬가지로 하나의 헤더 파일과 하나의 헤더 파일 만 변수를 선언해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더 파일은 매우 중요합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;독립적 인 TU (번역 단위-소스 파일 생각) 간의 교차 점검을 가능하게하고 일관성을 보장합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b0982c12125f135a56e9b7b9b93b84a72be79fe" translate="yes" xml:space="preserve">
          <source>The header might be included twice indirectly.  For example, if
&lt;code&gt;file4b.h&lt;/code&gt; includes &lt;code&gt;file3b.h&lt;/code&gt; for a type definition that isn't shown,
and &lt;code&gt;file1b.c&lt;/code&gt; needs to use both header &lt;code&gt;file4b.h&lt;/code&gt; and &lt;code&gt;file3b.h&lt;/code&gt;, then
you have some more tricky issues to resolve.  Clearly, you might revise
the header list to include just &lt;code&gt;file4b.h&lt;/code&gt;.  However, you might not be
aware of the internal dependencies &amp;mdash; and the code should, ideally,
continue to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더는 간접적으로 두 번 포함될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어, &lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 표시되지 않은 유형 정의에 대해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 포함되어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;있고 &lt;/font&gt; &lt;code&gt;file1b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 &lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 헤더를 모두 사용해야 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 경우 해결해야 할 몇 가지 까다로운 문제가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;분명히 &lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 포함하도록 헤더 목록을 수정할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 내부 종속성을 인식하지 못할 수 있으며 코드는 이상적으로 계속 작동해야합니다.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad5463cb1a2550bdcee0063cc6aab1c6b96717cc" translate="yes" xml:space="preserve">
          <source>The issue becomes 'should the header include &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt;?'
If you omit that from the header and wrap any defining invocation with
&lt;code&gt;#define&lt;/code&gt; and &lt;code&gt;#undef&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;문제는 '헤더에 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;헤더에서 생략하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#define&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 정의 호출을 래핑하는 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca8c7f41c38cdf3e3a420d496fe20b1669ca2fe6" translate="yes" xml:space="preserve">
          <source>The old forum post probably explained this a bit more clearly.
But this is a real potential &lt;code&gt;gotcha&lt;/code&gt; when using a compiler
that allows you to declare a variable in one file and then declare it extern as a different type in another. The problems associated with
that are if you say declared testing_mode as an int in another file
it would think it was a 16 bit var and overwrite some other part of ram, potentially corrupting another variable. Difficult to debug!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이전 포럼 게시물은 아마도 이것을 좀 더 명확하게 설명했을 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이것은 진정한 전위이다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gotcha&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하나 개의 파일에 변수를 선언하고 다른에서 다른 유형으로 통근 선언 할 수있는 컴파일러를 사용하는 경우. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이와 관련된 문제는 testing_mode를 다른 파일의 int로 선언하면 16 비트 var라고 생각하고 램의 다른 부분을 덮어 쓰면 잠재적으로 다른 변수가 손상 될 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;디버깅하기 어려움!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd5d906d82297c3f51dd5bfd35a77ab5a95c21c1" translate="yes" xml:space="preserve">
          <source>The problem with this scheme as shown is that it does not provide for
initialization of the global variable.  With C99 or C11 and variable argument
lists for macros, you could define a macro to support initialization too.
(With C89 and no support for variable argument lists in macros, there is no
easy way to handle arbitrarily long initializers.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;표시된 바와 같이이 체계의 문제점은 전역 변수의 초기화를 제공하지 않는다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C99 또는 C11 및 매크로에 대한 가변 인수 목록을 사용하여 초기화도 지원하도록 매크로를 정의 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(C89를 사용하고 매크로에서 변수 인수 목록을 지원하지 않으면 임의로 긴 초기화자를 처리하는 쉬운 방법이 없습니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a100dc688603b9855dccb98b1d1f682f7f302374" translate="yes" xml:space="preserve">
          <source>The restrictions for this to work are:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것에 대한 제한은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="817577c0dba8ff76f06ecb331ce19468c50f265f" translate="yes" xml:space="preserve">
          <source>The source file that defines the variable also includes the header to
ensure that the definition and the declaration are consistent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수를 정의하는 소스 파일에는 정의와 선언의 일관성을 유지하기 위해 헤더도 포함됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4b772b05a06cac7bb0184c048b64dbd8cfde377" translate="yes" xml:space="preserve">
          <source>There are, of course, many ways in which these guidelines can be broken.
Occasionally, there may be a good reason to break the guidelines, but
such occasions are extremely unusual.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 이러한 지침을 어기는 방법에는 여러 가지가 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;간혹 지침을 어길만한 합당한 이유가있을 수 있지만 그러한 경우는 매우 드문 경우입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="45c5032bfdada5609c2370448a245a052a29943f" translate="yes" xml:space="preserve">
          <source>There may be more than one external definition for the identifier of
  an object, with or without the explicit use of the keyword extern; if
  the definitions disagree, or more than one is initialized, the
  behavior is undefined (6.9.2).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extern 키워드를 명시 적으로 사용하거나 사용하지 않고 오브젝트의 식별자에 대한 둘 이상의 외부 정의가있을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;정의가 일치하지 않거나 둘 이상이 초기화되면 동작이 정의되지 않습니다 (6.9.2).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="613efa43e5434affe9e15d22d4e1e024d4b3661e" translate="yes" xml:space="preserve">
          <source>Therefore, you can compile a file that has reference to an extern, but you can not link if that memory is not declared somewhere.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 extern을 참조하는 파일을 컴파일 할 수 있지만 해당 메모리가 어딘가에 선언되지 않은 경우 링크 할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9b97b2c028b841b1846cc6fdc42d04072316ebb" translate="yes" xml:space="preserve">
          <source>This is getting a tad convoluted, but seems to be secure (using the
&lt;code&gt;file2d.h&lt;/code&gt;, with no &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; in the &lt;code&gt;file2d.h&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 태드가 뒤얽힌지고 있지만합니다 (사용하여 보안 것으로 보인다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 아니오, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b34220934ee7097d45ec16b1f39cdc06990ce05c" translate="yes" xml:space="preserve">
          <source>This is related to sharing variables across source files, but how does that work precisely? Where do I use &lt;code&gt;extern&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스 파일에서 변수를 공유하는 것과 관련이 있지만 어떻게 정확하게 작동합니까? &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 어디에 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b26cccfc838dc87d9352f2df2d799c257b1ab113" translate="yes" xml:space="preserve">
          <source>This means in main.c the variable will be declared as an &lt;code&gt;unsigned char&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 main.c에서 변수가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 선언됨을 의미 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cdc8cef1f761b10fca19330ff90c99ad24c5ab7" translate="yes" xml:space="preserve">
          <source>This problem was elegantly solved in a microchip forum some 15 years ago
    /* See &quot;http:www.htsoft.com&quot;                                          &lt;em&gt;/
    /&lt;/em&gt;  &quot;forum/all/showflat.php/Cat/0/Number/18766/an/0/page/0#18766&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 문제는 15 년 전 마이크로 칩 포럼에서 우아하게 해결되었습니다. / * &quot;http : www.htsoft.com&quot; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ /&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;forum / all / showflat.php / Cat / 0 / Number / 18766 / an / 0 / page / 참조 0 # 18766 &quot;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a73e1af2aaacc00d1cd325e01a80669806fdc81" translate="yes" xml:space="preserve">
          <source>This scheme avoids most problems.  You only run into a problem if a
header that defines variables (such as &lt;code&gt;file2c.h&lt;/code&gt;) is included by
another header (say &lt;code&gt;file7c.h&lt;/code&gt;) that defines variables.  There isn't an
easy way around that other than &quot;don't do it&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 체계는 대부분의 문제를 피합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 문제로 운영하는 정의하는 변수 (예 : 해당 헤더 경우 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 다른 헤더 (말의가 포함되어 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file7c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )이 정의하는 변수. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;하지 마십시오&quot;이외의 다른 방법으로는 쉬운 방법이 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44af17a2c4063b43decac8e1cae615f4b3460a01" translate="yes" xml:space="preserve">
          <source>This technique does not conform to the letter of the C standard and the
'one definition rule' &amp;mdash; it is officially undefined behaviour:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 기술은 C 표준의 문자와 '하나의 정의 규칙'을 따르지 않습니다. 공식적으로 정의되지 않은 동작입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="834eaf33179075a7b392e7c567aed8127afebf2e" translate="yes" xml:space="preserve">
          <source>Use the header technique I showed first.
It works reliably and everywhere.
Note, in particular, that the header declaring the &lt;code&gt;global_variable&lt;/code&gt; is
included in every file that uses it &amp;mdash; including the one that defines it.
This ensures that everything is self-consistent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내가 처음 보여준 헤더 기술을 사용하십시오. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것은 어디서나 안정적으로 작동합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특히 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;global_variable&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선언하는 헤더 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 그것을 정의하는 것을 포함하여 그것을 사용하는 모든 파일에 포함됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이렇게하면 모든 것이 일관되게 유지됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="827dad75e8eff41948c16f2f906a0a5cf440530d" translate="yes" xml:space="preserve">
          <source>Useful for global variables and libraries, but dangerous because the linker does not type check.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수 및 라이브러리에 유용하지만 링커가 검사를 입력하지 않으므로 위험합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3cec43eba69cc62d6d9de66bb4bb713dd116f9e1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;extern&lt;/code&gt; is only of relevance when the program you're building
consists of multiple source files linked together, where some of the
variables defined, for example, in source file &lt;code&gt;file1.c&lt;/code&gt; need to be
referenced in other source files, such as &lt;code&gt;file2.c&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것은 빌드하는 프로그램이 서로 연결된 여러 소스 파일로 구성된 경우에만 관련이 있습니다. 예를 들어 소스 파일 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 정의 된 일부 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 같은 다른 소스 파일에서 참조되어야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. c&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dff64534b2d3fcd7442b5b287f36d602ab155e5b" translate="yes" xml:space="preserve">
          <source>Variable initialization</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 초기화&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c75bc9dff7e8d81c6cd4dfe243da0ab578e98698" translate="yes" xml:space="preserve">
          <source>Violating the guidelines</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지침 위반&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="fcfcc815dcd79de6f2c15216333f810c99f05a23" translate="yes" xml:space="preserve">
          <source>When encountering an extern, the compiler can only find out its type, not where it &quot;lives&quot;, so it can't resolve the reference.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extern이 발생하면 컴파일러는 &quot;살아있는&quot;곳이 아닌 해당 유형 만 찾을 수 있으므로 참조를 확인할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4aa8d09dde0212e5912861447ea4ddcb68b44e7f" translate="yes" xml:space="preserve">
          <source>With some (indeed, many) C compilers, you can get away with what's
called a 'common' definition of a variable too.
'Common', here, refers to a technique used in Fortran for sharing
variables between source files, using a (possibly named) COMMON block.
What happens here is that each of a number of files provides a tentative
definition of the variable.
As long as no more than one file provides an initialized definition,
then the various files end up sharing a common single definition of the
variable:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 (실제로 많은) C 컴파일러를 사용하면 변수의 '공통'정의를 피할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 '공통'은 Fortran에서 소스 파일간에 변수를 공유하기 위해 (명명으로 명명 된) COMMON 블록을 사용하여 사용되는 기술을 말합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 발생하는 것은 여러 파일 각각이 변수의 임시 정의를 제공한다는 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나 이상의 파일이 초기화 된 정의를 제공하지 않는 한 다양한 파일은 변수의 공통 단일 정의를 공유하게됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e97b0cf5af1e3bf4f73bd3e791107eb6c586682e" translate="yes" xml:space="preserve">
          <source>With xc8 you have to be careful about declaring a variable
as the same type in each file as you could , erroneously,
declare something an &lt;code&gt;int&lt;/code&gt; in one file and a &lt;code&gt;char&lt;/code&gt; say in another.
This could lead to corruption of variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;xc8을 사용하면 각 파일에서 동일한 유형의 변수를 선언하는 데 신중해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. 한 파일에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 파일에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 말할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수가 손상 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caacde4797253a581eb62bb22566c1e32c10a196" translate="yes" xml:space="preserve">
          <source>You are telling it, &quot;Trust me.  At link time this reference will be resolvable.&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;신뢰하십시오. 링크 타임에이 참조를 해결할 수 있습니다.&quot;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5c908956bd8754f5c212be4e435320dee0ec8a38" translate="yes" xml:space="preserve">
          <source>You can partially work around the problem by revising &lt;code&gt;file2c.h&lt;/code&gt; into
&lt;code&gt;file2d.h&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수정하여 문제를 부분적으로 해결할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7009bafb4698e3725a791f4b4a860ab0a0858b9f" translate="yes" xml:space="preserve">
          <source>You get the following output : The value of a is &amp;lt;5&amp;gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 결과가 나타납니다. a의 값은 &amp;lt;5&amp;gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="135bbaa156861ecfec5dedc9176c377fb5bd0cb3" translate="yes" xml:space="preserve">
          <source>You may declare a variable multiple times (though once is sufficient);
you may only define it once within a given scope.
A variable definition is also a declaration, but not all variable
declarations are definitions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;한 번이면 충분하지만 변수를 여러 번 선언 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;주어진 범위 내에서 한 번만 정의 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 정의도 선언이지만 모든 변수 선언이 정의는 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3a9e349d10f0bd9616d27d00bd04e467dc645845" translate="yes" xml:space="preserve">
          <source>broken_header.h</source>
          <target state="translated">broken_header.h</target>
        </trans-unit>
        <trans-unit id="d5b1ef39d032b550cec6ec1007b182e41ada7193" translate="yes" xml:space="preserve">
          <source>example.c</source>
          <target state="translated">example.c</target>
        </trans-unit>
        <trans-unit id="bc45783e0ca44daa72354d9947288fb7166a506f" translate="yes" xml:space="preserve">
          <source>example1.c</source>
          <target state="translated">example1.c</target>
        </trans-unit>
        <trans-unit id="cce814c5b0b4fb333c5c802ed983c32c15ae7bf6" translate="yes" xml:space="preserve">
          <source>extern tells the compiler to trust you that the memory for this variable is declared elsewhere, so it doesnt try to allocate/check memory.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extern은이 변수에 대한 메모리가 다른 곳에서 선언되었다는 것을 컴파일러에게 알려주므로 메모리 할당 / 확인을 시도하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fa057fe4ce31229cf2c9ca183338d8b4566a8f7c" translate="yes" xml:space="preserve">
          <source>external.h</source>
          <target state="translated">external.h</target>
        </trans-unit>
        <trans-unit id="8f974661c27deca057542254f0c5c08df7394688" translate="yes" xml:space="preserve">
          <source>externdef.h</source>
          <target state="translated">externdef.h</target>
        </trans-unit>
        <trans-unit id="1519bb244ac7f4f2b557e89ea8b33f782e38cb81" translate="yes" xml:space="preserve">
          <source>faulty_header.h</source>
          <target state="translated">faulty_header.h</target>
        </trans-unit>
        <trans-unit id="cc233bcad9c75ba5434e30146eb0d92e2fc492e4" translate="yes" xml:space="preserve">
          <source>file1.c</source>
          <target state="translated">file1.c</target>
        </trans-unit>
        <trans-unit id="94af44728c38066445637ed33989a10662b4be8d" translate="yes" xml:space="preserve">
          <source>file10.c</source>
          <target state="translated">file10.c</target>
        </trans-unit>
        <trans-unit id="1a4db11f876ac75ec4a04118feb407872381e8bd" translate="yes" xml:space="preserve">
          <source>file11.c</source>
          <target state="translated">file11.c</target>
        </trans-unit>
        <trans-unit id="c60df4c309bbe1fd634e717ca4e654c2e5a2afd3" translate="yes" xml:space="preserve">
          <source>file12.c</source>
          <target state="translated">file12.c</target>
        </trans-unit>
        <trans-unit id="63422742612ee2d040272390d76dcc10d3ba6d8a" translate="yes" xml:space="preserve">
          <source>file1a.c</source>
          <target state="translated">file1a.c</target>
        </trans-unit>
        <trans-unit id="8c90848246876bdfe0a4ba356e814c8096902645" translate="yes" xml:space="preserve">
          <source>file1b.c</source>
          <target state="translated">file1b.c</target>
        </trans-unit>
        <trans-unit id="602c880cd3d85cf5d1501b64ef5e0a3d9020fb69" translate="yes" xml:space="preserve">
          <source>file1c.h</source>
          <target state="translated">file1c.h</target>
        </trans-unit>
        <trans-unit id="3e8c5c1e55a2790f5986353365d101820cb79b4c" translate="yes" xml:space="preserve">
          <source>file2.c</source>
          <target state="translated">file2.c</target>
        </trans-unit>
        <trans-unit id="b364bc3969ae4e240e4c2af8569851e565f1d3c8" translate="yes" xml:space="preserve">
          <source>file2a.c</source>
          <target state="translated">file2a.c</target>
        </trans-unit>
        <trans-unit id="3071e8d0fbd2b11dfe7e3f801c592900f9a955aa" translate="yes" xml:space="preserve">
          <source>file2b.c</source>
          <target state="translated">file2b.c</target>
        </trans-unit>
        <trans-unit id="8c580d84c0126805fedaab26a3cbacac98151314" translate="yes" xml:space="preserve">
          <source>file2c.h</source>
          <target state="translated">file2c.h</target>
        </trans-unit>
        <trans-unit id="5cd31b420f39b05d5ebf1851db8408a262c78ced" translate="yes" xml:space="preserve">
          <source>file2d.h</source>
          <target state="translated">file2d.h</target>
        </trans-unit>
        <trans-unit id="51db95ab333814a2f0cf2d336fbc77e5d4574a39" translate="yes" xml:space="preserve">
          <source>file3.h</source>
          <target state="translated">file3.h</target>
        </trans-unit>
        <trans-unit id="a68ae471fa40518093366a4faf9f455eec1d65cb" translate="yes" xml:space="preserve">
          <source>file3a.h</source>
          <target state="translated">file3a.h</target>
        </trans-unit>
        <trans-unit id="66129162d6eb113e02ef3f0515786aaed562d6ea" translate="yes" xml:space="preserve">
          <source>file3b.h</source>
          <target state="translated">file3b.h</target>
        </trans-unit>
        <trans-unit id="a6f6f45e5894881c9c4d56933a40555105304af8" translate="yes" xml:space="preserve">
          <source>file3c.c</source>
          <target state="translated">file3c.c</target>
        </trans-unit>
        <trans-unit id="6bed332d6a20a59aca373a629fb1406fec6d17a0" translate="yes" xml:space="preserve">
          <source>file4c.c</source>
          <target state="translated">file4c.c</target>
        </trans-unit>
        <trans-unit id="c82b7655ce78fdb20797f9a0b529460c414cad9a" translate="yes" xml:space="preserve">
          <source>file5c.c</source>
          <target state="translated">file5c.c</target>
        </trans-unit>
        <trans-unit id="e3569eeff213c66ee68ba8129e95a015af94492b" translate="yes" xml:space="preserve">
          <source>file6c.c</source>
          <target state="translated">file6c.c</target>
        </trans-unit>
        <trans-unit id="389f6f288bbd8c87170840fb566bc2a58914e727" translate="yes" xml:space="preserve">
          <source>file7c.c</source>
          <target state="translated">file7c.c</target>
        </trans-unit>
        <trans-unit id="f750d9359ba952e035041c47c471d03be546dae0" translate="yes" xml:space="preserve">
          <source>file8c.c</source>
          <target state="translated">file8c.c</target>
        </trans-unit>
        <trans-unit id="649ce7257b5d407a411c8a3a892db26b13538aa6" translate="yes" xml:space="preserve">
          <source>file8c.h</source>
          <target state="translated">file8c.h</target>
        </trans-unit>
        <trans-unit id="2c268161bcd37e38aa327365c829e292a5df9692" translate="yes" xml:space="preserve">
          <source>file9c.c</source>
          <target state="translated">file9c.c</target>
        </trans-unit>
        <trans-unit id="e546a9945e5fbbf012ee47c501d2fd647f6189ad" translate="yes" xml:space="preserve">
          <source>in the source code (so the headers never alter the value of
&lt;code&gt;DEFINE_VARIABLES&lt;/code&gt;), then you should be clean.  It is just a nuisance to
have to remember to write the the extra line.  An alternative might be:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;소스 코드에서 (따라서 헤더는 절대로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 값을 변경하지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않음&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) 깨끗해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여분의 줄을 작성하는 것을 기억해야한다는 것은 귀찮은 일입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대안은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="406e031b8824ea26ae0bf4d7579a1d89e3fb5906" translate="yes" xml:space="preserve">
          <source>main.c</source>
          <target state="translated">main.c</target>
        </trans-unit>
        <trans-unit id="93365afb1329c154f67f66abb34e7ec554e7e414" translate="yes" xml:space="preserve">
          <source>prog1.c</source>
          <target state="translated">prog1.c</target>
        </trans-unit>
        <trans-unit id="ae51ce8fa46448ec348078275a9b0392b4e5a612" translate="yes" xml:space="preserve">
          <source>prog1.h</source>
          <target state="translated">prog1.h</target>
        </trans-unit>
        <trans-unit id="d0cfc1b7cd134217aa1eee2c1f5eb03303856b18" translate="yes" xml:space="preserve">
          <source>prog1.mk</source>
          <target state="translated">prog1.mk</target>
        </trans-unit>
        <trans-unit id="ac81dfe96b76fa35c693ddb6ff7df89fa25ca4a5" translate="yes" xml:space="preserve">
          <source>prog2.c</source>
          <target state="translated">prog2.c</target>
        </trans-unit>
        <trans-unit id="9a2c603c45c08d4af91fc8d86e74f4bf0ece1530" translate="yes" xml:space="preserve">
          <source>prog2.h</source>
          <target state="translated">prog2.h</target>
        </trans-unit>
        <trans-unit id="29a7b48708db879ef7d5301795b122b78c096c5a" translate="yes" xml:space="preserve">
          <source>prog3.c</source>
          <target state="translated">prog3.c</target>
        </trans-unit>
        <trans-unit id="57d004dc92d1b9ca86e4f162742b13e88ad1cf3f" translate="yes" xml:space="preserve">
          <source>prog3.h</source>
          <target state="translated">prog3.h</target>
        </trans-unit>
        <trans-unit id="af366bc1058daa94590fd146182289cbdd2bf946" translate="yes" xml:space="preserve">
          <source>prog4.c</source>
          <target state="translated">prog4.c</target>
        </trans-unit>
        <trans-unit id="e615acdea9dc98e713fe90f5346ef04f37644c99" translate="yes" xml:space="preserve">
          <source>prog4.h</source>
          <target state="translated">prog4.h</target>
        </trans-unit>
        <trans-unit id="3dd95e946ea8548116d3346d8410def41f81c5cf" translate="yes" xml:space="preserve">
          <source>prog5.c</source>
          <target state="translated">prog5.c</target>
        </trans-unit>
        <trans-unit id="0ab4dfc395d6335679526b820fe8b24221395ae0" translate="yes" xml:space="preserve">
          <source>prog8.c</source>
          <target state="translated">prog8.c</target>
        </trans-unit>
        <trans-unit id="3af43e4333ca180e16d8a7d37246776c42e95676" translate="yes" xml:space="preserve">
          <source>seldom_correct.h</source>
          <target state="translated">seldom_correct.h</target>
        </trans-unit>
        <trans-unit id="1166b4b12a2519496b1dfaf6e7f4d98b4f0edf4b" translate="yes" xml:space="preserve">
          <source>step 1)cc -o ex example.c example1.c
step 2)./ex</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단계 1) cc -o 예 예 c 예 1.c 단계 2) ./ ex&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c35d0d128f82b9ae6bbaba048a190422b8e2bf8c" translate="yes" xml:space="preserve">
          <source>which is basically the behavior the C standard gives to &lt;code&gt;extern&lt;/code&gt; variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 기본적으로 C 표준이 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제공하는 동작 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
