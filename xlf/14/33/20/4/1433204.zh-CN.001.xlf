<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/1433204">
    <body>
      <group id="1433204">
        <trans-unit id="691b744886da99866feaea02d3066790f516c985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;
allows one module of your program to access a global variable or function declared in another module of your program.
You usually have extern variables declared in header files.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 允许程序的一个模块访问在程序的另一个模块中声明的全局变量或函数。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常，您在头文件中声明了外部变量。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7ba700d01f9e35eaa62b507ae07d80ca0838516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used so one &lt;code&gt;first.c&lt;/code&gt; file can have full access to a global parameter in another &lt;code&gt;second.c&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以便一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文件可以完全访问另一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;second.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文件中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的全局参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67c7d933bc91f3d7f4581169eb22a8f828ce47b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used to let other C files or external components know this variable is already defined somewhere. Example: if  you are building a library, no need to define global variable mandatorily somewhere in library itself. The library will be compiled directly, but while linking the file, it checks for the definition.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于让其他C文件或外部组件知道此变量已在某处定义。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示例：如果您正在构建库，则无需在库本身的某个位置强制定义全局变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该库将直接编译，但是在链接文件时，它将检查定义。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8af8b6a3f7c07ab0ae2fed724efa07585bdb20d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; simply means a variable is defined elsewhere (e.g., in another file).</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只是意味着在其他地方（例如，在另一个文件中）定义了一个变量。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="912da2af6624131ec49a4d74be0e306561c1bf22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;external.h&lt;/code&gt; for the EXTERN macro definitions, etc.</source>
          <target state="translated">&lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于EXTERN宏定义的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;external.h&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;等。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6c6cab53c2a8d3d3c32325a2554932b43513b2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file1c.h&lt;/code&gt; to define types (notably, &lt;code&gt;struct oddball&lt;/code&gt;, the type of &lt;code&gt;oddball_struct&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来定义类型（特别是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct oddball&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;oddball_struct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的类型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83cd5bc57f7c5534f30691c642087a0f66f09d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file2c.h&lt;/code&gt; to define or declare the global variables.</source>
          <target state="translated">&lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来定义或声明全局变量。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6175a7f682df0cfe01eed1994f44252888954cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file3c.c&lt;/code&gt; which defines the global variables.</source>
          <target state="translated">&lt;code&gt;file3c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义全局变量的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;file3c.c&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b96ebb2cad7a9f3b0501e004f81356772496e65f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file4c.c&lt;/code&gt; which simply uses the global variables.</source>
          <target state="translated">&lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅使用全局变量的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;file4c.c&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bde7b6e5dceee89851b0dfbe86b665aa66b851c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file5c.c&lt;/code&gt; which shows that you can declare and then define the global variables.</source>
          <target state="translated">&lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显示您可以声明然后定义全局变量。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59db616bb4616380c90bce70be473268e263ec20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file6c.c&lt;/code&gt; which shows that you can define and then (attempt to) declare the global variables.</source>
          <target state="translated">&lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它表明您可以定义然后（尝试）声明全局变量。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbe60d5324112e7a90fab3433e01cc10f44332d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog1&lt;/code&gt; uses &lt;code&gt;prog1.c&lt;/code&gt;, &lt;code&gt;file1.c&lt;/code&gt;, &lt;code&gt;file2.c&lt;/code&gt;, &lt;code&gt;file3.h&lt;/code&gt; and &lt;code&gt;prog1.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8336dc4e7fb0da995e44db63cc9e75bcbed8f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog2&lt;/code&gt; uses &lt;code&gt;prog2.c&lt;/code&gt;, &lt;code&gt;file10.c&lt;/code&gt;, &lt;code&gt;file11.c&lt;/code&gt;, &lt;code&gt;file12.c&lt;/code&gt;, &lt;code&gt;prog2.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file10.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file11.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file12.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a35ff2125678aea4d10758c53f9b97f84cea22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog3&lt;/code&gt; uses &lt;code&gt;prog3.c&lt;/code&gt;, &lt;code&gt;file1a.c&lt;/code&gt;, &lt;code&gt;file2a.c&lt;/code&gt;, &lt;code&gt;file3a.h&lt;/code&gt;, &lt;code&gt;prog3.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1a.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2a.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3a.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb03231f7d7081ad3fb95a2ebfb85c0a8588bfd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog4&lt;/code&gt; uses &lt;code&gt;prog4.c&lt;/code&gt;, &lt;code&gt;file1b.c&lt;/code&gt;, &lt;code&gt;file2b.c&lt;/code&gt;, &lt;code&gt;prog4.h&lt;/code&gt;, &lt;code&gt;file3b.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c13993e2c5e59f817ad09159b39659211a8029d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog5&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file3c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70cfe9feb2aa730f50a77d8f1f96a1fd90df55bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog6&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file5c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3fca148ebe696e5ef8edb0ed4a2bf0c6e3197b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog7&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file6c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog7&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6365135448408cb725d916abbeeb6b605c5606f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog8&lt;/code&gt; uses &lt;code&gt;prog8.c&lt;/code&gt;, &lt;code&gt;file7c.c&lt;/code&gt;, &lt;code&gt;file9c.c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file7c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file9c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b33f5f286b0e8ecfa5f139bfae710da5c66808c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog9&lt;/code&gt; uses &lt;code&gt;prog8.c&lt;/code&gt;, &lt;code&gt;file8c.c&lt;/code&gt;, &lt;code&gt;file9c.c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog9&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file8c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file9c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c2c7350f8d61556fd197ba3cc7ad47f1a41f7f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;extern keyword is used with the variable for its identification as a global variable.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extern关键字与变量一起使用，以将其标识为全局变量。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae48a4577bef144b2ee1fffb6266f5b9461caf28" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Confession&lt;/em&gt;: The 'avoiding duplicated code' scheme outlined here was
developed because the issue affects some code I work on (but don't own),
and is a niggling concern with the scheme outlined in the first part of
the answer.  However, the original scheme leaves you with just two
places to modify to keep variable definitions and declarations
synchronized, which is a big step forward over having exernal variable
declarations scattered throughout the code base (which really matters
when there are thousands of files in total).  However, the code in the
files with the names &lt;code&gt;fileNc.[ch]&lt;/code&gt; (plus &lt;code&gt;external.h&lt;/code&gt; and &lt;code&gt;externdef.h&lt;/code&gt;)
shows that it can be made to work.  Clearly, it would not be hard to
create a header generator script to give you the standardized template
for a variable defining and declaring header file.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;告白&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：之所以开发此处概述的&amp;ldquo;避免重复代码&amp;rdquo;方案，是因为该问题会影响我正在处理的某些代码（但不属于自己），并且是对答案第一部分中概述的方案的关注。但是，原始方案仅使您有两个地方可以进行修改以使变量定义和声明保持同步，这比将外部变量声明分散在整个代码库中是向前迈出了一大步（当总共有数千个文件时，这确实很重要） 。但是，文件名称为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fileNc.[ch]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（加上&lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;externdef.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）表明它可以正常工作。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显然，创建头生成器脚本为定义和声明头文件的变量提供标准化模板并不困难。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="802de36c736dcca7dba68f179d6b2fe2a98d8ff5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Late Major Addition&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;后期大修&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cabb747ea3dfc8e01242e16511d95cb93e4e56be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NB&lt;/em&gt; These are toy programs with just barely enough code to make them
marginally interesting.  There is repetition within the examples that
could be removed, but isn't to simplify the pedagogical explanation.
(For example: the difference between &lt;code&gt;prog5.c&lt;/code&gt; and &lt;code&gt;prog8.c&lt;/code&gt; is the name
of one of the headers that are included.  It would be possible to
reorganize the code so that the &lt;code&gt;main()&lt;/code&gt; function was not repeated, but
it would conceal more than it revealed.)</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些是玩具程序，仅具有几乎不足以使它们有趣的代码。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示例中可以删除重复项，但这并不是为了简化教学解释。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（例如：&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间的区别&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是所包含的头文件之一的名称。可以重新组织代码，以便&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不重复&lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数，但可以隐藏更多代码）比显示的要多。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="246969342f7091a47a7e6df3ab6c0b9846bad087" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next source file completes the source (provides a main program) for &lt;code&gt;prog5&lt;/code&gt;, &lt;code&gt;prog6&lt;/code&gt; and &lt;code&gt;prog7&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下一个源文件完善了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog7&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的源代码（提供了一个主程序）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c0295f73a690f01b9e6a895dcda3cc552adfdd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog1&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来的两个文件完善了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的源代码&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd48a25f012bcd39ad2bbcac04ba00b07d750b9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog2&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来的两个文件完善了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的源&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43678bd292d03dff8a030116f5904f4ddc9881aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog3&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来的两个文件完善了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的源&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b8b12f6883eef3eb46da8b95ee2b2966146e288" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog4&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来的两个文件完善了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的源&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代码&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b6cfd519088106efcde93a7e2818d7019468cf8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog8&lt;/code&gt; and &lt;code&gt;prog9&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接下来的两个文件完善了&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog9&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的源代码&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67c77d683553c02292bbef903605e0ffb1384061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#6.9p5&quot;&gt;&amp;sect;6.9 External definitions &amp;para;5&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#6.9p5&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;sect;6.9外部定义&amp;para;5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f3e271c09e92f032c8fe65e498d41ca3fd41f69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.2&quot;&gt;J.2 Undefined behavior&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;J.2未定义行为&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22ad7a5f93246b4e0bc197f64432fc4496f7a1ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C++17 inline variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++ 17内联变量&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b0c72cdf18835af81fed510af873ef1583c670a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GCC ELF Linux implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GCC ELF Linux实施&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d02958a95497c38d1132e2d49d1b72a14154cb99" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;161)&lt;/sup&gt; Thus, if an identifier declared with external linkage
  is not used in an expression, there need be no external definition for
  it.</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;161）&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，如果在表达式中未使用通过外部链接声明的标识符，则无需为其定义外部。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f931e8eb7528883decff0c083a27b301e685fe8" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;If you're not an experienced C programmer, you could (and perhaps
       should) stop reading here.&lt;/em&gt;
&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不是经验丰富的C程序员，则可以（也许应该）在这里停止阅读。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="212d3d4f1c7e1cf1eb0644358b4f9e7fc0c6acad" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;If you're not an experienced C programmer, you probably should stop reading here.&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不是经验丰富的C程序员，则可能应该在这里停止阅读。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="904db4087127fede8e7a24d87fc43f98f55cdb62" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;The source code and text of this answer are available in my
      &lt;a href=&quot;https://github.com/jleffler/soq&quot;&gt;SOQ&lt;/a&gt; (Stack Overflow Questions)
      repository on GitHub in the
      &lt;a href=&quot;https://github.com/jleffler/soq/tree/master/src/so-0143-3204&quot;&gt;src/so-0143-3204&lt;/a&gt;
      sub-directory.&lt;/em&gt;
&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这个答案的源代码和文本可在 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;GitHub上的&lt;/font&gt;&lt;a href=&quot;https://github.com/jleffler/soq/tree/master/src/so-0143-3204&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;src / so-0143-3204&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 子目录中的&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jleffler/soq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SOQ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（堆栈溢出问题）存储库中找到 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt; &lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e7ca21e90603b40c1f38e754ca020fe41a1456b2" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Correct header &lt;code&gt;file3b.h&lt;/code&gt; included (instead of &lt;code&gt;fileba.h&lt;/code&gt;) per
&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;Denis Kniazhev&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每个&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Denis Kniazhev&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包含&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;正确的头文件&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（而不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;fileba.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;） &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7e33b7e516b6b281ee81a9ca638b338f3b469214" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Reverse contents of &lt;code&gt;#if&lt;/code&gt; and &lt;code&gt;#else&lt;/code&gt; blocks, fixing bug identified by
&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;Denis Kniazhev&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;反转&lt;/font&gt;&lt;/font&gt; &lt;code&gt;#if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;#else&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;块的内容，修复&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Denis Kniazhev&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;识别的错误 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c75267659ed7cb9acf9c3bd955871ce73dc26ed0" translate="yes" xml:space="preserve">
          <source>A function should never need to declare a variable using &lt;code&gt;extern&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数永远不需要使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95a08cd55a032d11568e24a970f19057fd318c96" translate="yes" xml:space="preserve">
          <source>A header file only contains &lt;code&gt;extern&lt;/code&gt; declarations of variables &amp;mdash; never
&lt;code&gt;static&lt;/code&gt; or unqualified variable definitions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;头文件仅包含&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明，而不能 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包含&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或不合格的变量定义。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="929c9870b227429e31fcdd1590cbd4387c67db5b" translate="yes" xml:space="preserve">
          <source>A source file never contains &lt;code&gt;extern&lt;/code&gt; declarations of variables &amp;mdash;
source files always include the (sole) header that declares them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;源文件从不包含&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明-源文件始终包含声明它们的（唯一）标头。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="807b7c5e47890e949e5e71577df2a663417f44b3" translate="yes" xml:space="preserve">
          <source>A typical scheme works like this, using the original global variable
illustrated in &lt;code&gt;file3.h&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个典型的方案就是这样，使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;说明的原始全局变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3669f7e5c7ae797032b9f571d2855464bd33a8cc" translate="yes" xml:space="preserve">
          <source>A variable is &lt;strong&gt;declared&lt;/strong&gt; when the compiler is informed that a
variable exists (and this is its type); it does not allocate the
storage for the variable at that point.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当编译器被告知存在一个变量（这就是它的类型）时，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;就&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此时，它不会为变量分配存储空间。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3ef0901904af9ddecd5808dfc21e84c84d15be7" translate="yes" xml:space="preserve">
          <source>A variable is &lt;strong&gt;defined&lt;/strong&gt; when the compiler allocates the storage for
the variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个变量被&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;时，编译器分配该变量的存储。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8955ccaa95522319deba1043a4efb97953fda31" translate="yes" xml:space="preserve">
          <source>A very short solution I use to allow a header file to contain the extern reference or actual implementation of an object. The file that actually contains the object just does &lt;code&gt;#define GLOBAL_FOO_IMPLEMENTATION&lt;/code&gt;. Then when I add a new object to this file it shows up in that file also without me having to copy and paste the definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我用来允许头文件包含外部引用或对象的实际实现的一种非常简短的解决方案。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际包含对象的文件只是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;#define GLOBAL_FOO_IMPLEMENTATION&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;然后，当我向该文件添加新对象时，它也显示在该文件中，而无需我复制和粘贴定义。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f089e1504e9f5976c51721bd3cd0db3737e78c9a" translate="yes" xml:space="preserve">
          <source>Adding an &lt;code&gt;extern&lt;/code&gt; turns a variable &lt;em&gt;definition&lt;/em&gt; into a variable &lt;em&gt;declaration&lt;/em&gt;. See &lt;a href=&quot;https://stackoverflow.com/questions/1410563/&quot;&gt;this thread&lt;/a&gt; as to what's the difference between a declaration and a definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;添加&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会将变量&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;转换为变量&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1410563/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此线程&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，以了解声明和定义之间的区别。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371aa8471e9601036622d8ba995342ff661dca0d" translate="yes" xml:space="preserve">
          <source>Although there are other ways of doing it, this method is simple and
reliable.
It is demonstrated by &lt;code&gt;file3.h&lt;/code&gt;, &lt;code&gt;file1.c&lt;/code&gt; and &lt;code&gt;file2.c&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽管还有其他方法可以执行此操作，但此方法简单可靠。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它由&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;演示&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33409945b6a6a4b528aa2923576aeff68a8476dd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;extern&lt;/code&gt; variable is a declaration (thanks to sbi for the correction) of a variable which is defined in another translation unit. That means the storage for the variable is allocated in another file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量是一个声明（感谢SBI针对校正），其在另一个转换单元中定义的变量的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着该变量的存储在另一个文件中分配。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2713c0441427ac808975eb78cd2e068c63a3c8e8" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;external definition&lt;/em&gt; is an external declaration that is also a
  definition of a function (other than an inline definition) or an
  object.
  If an identifier declared with external linkage is used in an
  expression (other than as part of the operand of a &lt;code&gt;sizeof&lt;/code&gt; or
  &lt;code&gt;_Alignof&lt;/code&gt; operator whose result is an integer constant), somewhere in
  the entire program there shall be exactly one external definition for
  the identifier; otherwise, there shall be no more than
  one.&lt;sup&gt;161)&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外部定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为外部声明，这也是一个功能（比内联定义其他）或对象的定义。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果在表达式中使用了用外部链接声明的标识符（不是作为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_Alignof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;运算符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的操作数的一部分，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;其结果是一个整数常量），则在整个程序中的某个地方，该标识符应有一个外部定义；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;否则，不得超过一个。&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;161）&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3efdf6e8d9681ed5f5f7c72651568658204fad53" translate="yes" xml:space="preserve">
          <source>An identifier with external linkage is used, but in the program there
  does not exist exactly one external definition for the identifier, or
  the identifier is not used and there exist multiple external
  definitions for the identifier (6.9).</source>
          <target state="translated">使用了一个具有外部联系的标识符,但在程序中并不存在一个确切的标识符的外部定义,或者没有使用该标识符,而存在多个标识符的外部定义(6.9)。</target>
        </trans-unit>
        <trans-unit id="8ddaec31cd2c4e030c6ef6df28a74cc5b31c7ce6" translate="yes" xml:space="preserve">
          <source>Another concern can be that the variables need to be defined in each of
a number of 'main programs'.  This is normally a spurious concern; you
can simply introduce a C source file to define the variables and link
the object file produced with each of the programs.</source>
          <target state="translated">另一个担心的问题可能是,变量需要在每个 &quot;主程序 &quot;中定义。这通常是个假担心;你可以简单地引入一个C源文件来定义变量,并将生成的对象文件与每一个程序链接起来。</target>
        </trans-unit>
        <trans-unit id="32a67881216469ac0ec14850f47fe546855708f2" translate="yes" xml:space="preserve">
          <source>Any header should be protected against reinclusion, so that type
definitions (enum, struct or union types, or typedefs generally) do not
cause problems.  The standard technique is to wrap the body of the
header in a header guard such as:</source>
          <target state="translated">任何头应该被保护起来,以防止重新包含,这样类型定义(enum、struct或union类型,或一般的typedefs)就不会引起问题。标准的技术是将头的主体用一个头保护器包裹起来,例如:。</target>
        </trans-unit>
        <trans-unit id="45d35123fc8a96fae7a834999067040cfc78f9a9" translate="yes" xml:space="preserve">
          <source>As noted in comments here, and as stated in my answer to a similar
&lt;a href=&quot;https://stackoverflow.com/questions/1490693&quot;&gt;question&lt;/a&gt;, using multiple
definitions for a global variable leads to undefined behaviour (J.2;
&amp;sect;6.9), which is the standard's way of saying &quot;anything could happen&quot;.
One of the things that can happen is that the program behaves as you
expect; and J.5.11 says, approximately, &quot;you might be lucky more often
than you deserve&quot;.
But a program that relies on multiple definitions of an extern variable
&amp;mdash; with or without the explicit 'extern' keyword &amp;mdash; is not a strictly
conforming program and not guaranteed to work everywhere.
Equivalently: it contains a bug which may or may not show itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如此处评论中所述，以及如我对类似&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1490693&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;问题的&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答所述 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，对全局变量使用多个定义会导致未定义的行为（J.2；第6.9节），这是标准所说的&amp;ldquo;可能发生的一切&amp;rdquo;的方式。可能发生的事情之一是程序的行为符合预期。 J.5.11大约说：&amp;ldquo;您可能比应有的机会更幸运。&amp;rdquo;但是，依赖于extern变量的多个定义（带有或不带有显式'extern'关键字）的程序并不是严格符合要求的程序，不能保证在任何地方都能正常工作。等效地：它包含一个可能会或可能不会自我显示的错误。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea9c797001a229bb0f7e2e5dcae3538ba2a55b2c" translate="yes" xml:space="preserve">
          <source>Avoid global variables</source>
          <target state="translated">避免全局变量</target>
        </trans-unit>
        <trans-unit id="c2c86e9533eaac188daf2a31bc7c14f8d7b5731f" translate="yes" xml:space="preserve">
          <source>Avoid global variables whenever possible &amp;mdash; use functions instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尽可能避免使用全局变量，而应使用函数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d0532814d924ccd1ab821349854a5eaf5e7fdf8" translate="yes" xml:space="preserve">
          <source>Avoiding Code Duplication</source>
          <target state="translated">避免代码重复</target>
        </trans-unit>
        <trans-unit id="64132ad1f1f27881cb1abfa320c5ec1afc5711ba" translate="yes" xml:space="preserve">
          <source>Because this technique is not always supported, it is best to avoid
using it, &lt;em&gt;especially if your code needs to be portable&lt;/em&gt;.
Using this technique, you can also end up with unintentional type
punning.
If one of the files declared &lt;code&gt;i&lt;/code&gt; as a &lt;code&gt;double&lt;/code&gt; instead of as an &lt;code&gt;int&lt;/code&gt;,
C's type-unsafe linkers probably would not spot the mismatch.
If you're on a machine with 64-bit &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt;, you'd not even
get a warning; on a machine with 32-bit &lt;code&gt;int&lt;/code&gt; and 64-bit &lt;code&gt;double&lt;/code&gt;, you'd
probably get a warning about the different sizes &amp;mdash; the linker would
use the largest size, exactly as a Fortran program would take the
largest size of any common blocks.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于并非总是支持此技术，因此最好避免使用它，&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;尤其是在您的代码需要可移植的情况下&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。使用这种技术，您还可能会意外地进行类型调整。如果其中一个文件将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而不是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则C的类型不安全的链接程序可能不会发现不匹配。如果您使用的是64位&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; 值的计算机&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，那么您甚至都不会收到警告。在具有32位&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和64位&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; 的计算机上&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您可能会收到有关大小不同的警告-链接器将使用最大大小，就像Fortran程序将占用所有常见块的最大大小一样。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b33dab1d92c5a6831743f5185214a923868b7f2" translate="yes" xml:space="preserve">
          <source>Best way to declare and define global variables</source>
          <target state="translated">声明和定义全局变量的最佳方法</target>
        </trans-unit>
        <trans-unit id="31291b8ed31cfce74fc0f36b57aa3dad74b3a290" translate="yes" xml:space="preserve">
          <source>But it will be correctly declared as an &lt;code&gt;unsigned char&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是它将正确声明为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="535e045c8f36ad1784410ee9660b08a2ee4c1486" translate="yes" xml:space="preserve">
          <source>But this link seems to no longer work...</source>
          <target state="translated">但这个链接似乎已经不起作用了......</target>
        </trans-unit>
        <trans-unit id="77451d71b40941ae17f1943fc9be05c65d905e16" translate="yes" xml:space="preserve">
          <source>Clearly, the code for the oddball structure is not what you'd normally
write, but it illustrates the point.  The first argument to the second
invocation of &lt;code&gt;INITIALIZER&lt;/code&gt; is &lt;code&gt;{ 41&lt;/code&gt; and the remaining argument
(singular in this example) is &lt;code&gt;43 }&lt;/code&gt;.  Without C99 or similar support
for variable argument lists for macros, initializers that need to
contain commas are very problematic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显然，用于奇数球结构的代码不是您通常编写的代码，但是它说明了这一点。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;INITIALIZER&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的第二次调用的第一个参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ 41&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其余参数（在此示例中为单数）为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;43 }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果没有C99或对宏的变量参数列表的类似支持，则需要包含逗号的初始化程序将非常有问题。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8646ef6ae439093b3a509c848a73e94716034cd4" translate="yes" xml:space="preserve">
          <source>Compile and decompile:</source>
          <target state="translated">编译和反编译。</target>
        </trans-unit>
        <trans-unit id="d43ef1edf24fba8899355dc8110d85e5de9eb59f" translate="yes" xml:space="preserve">
          <source>Complete sample:</source>
          <target state="translated">完整的样本。</target>
        </trans-unit>
        <trans-unit id="521e7e446becd7f610ecef9f5437d49aa3d8d12f" translate="yes" xml:space="preserve">
          <source>Declaration won't allocate memory (the variable must be defined for memory allocation) but the definition will. 
This is just another simple view on the extern keyword since the other answers are really great.</source>
          <target state="translated">声明不会分配内存(变量必须定义内存分配),但定义会。这只是对extern关键字的另一个简单的看法,因为其他答案真的很棒。</target>
        </trans-unit>
        <trans-unit id="1a56f8c8e203fe1ef1374576f22f70cc9402c3b5" translate="yes" xml:space="preserve">
          <source>Does this exposition miss anything?</source>
          <target state="translated">这个论述有没有遗漏什么?</target>
        </trans-unit>
        <trans-unit id="396176d9049fd1b4108eb2b9640b789290670d4b" translate="yes" xml:space="preserve">
          <source>End of Original Answer</source>
          <target state="translated">原回答结束</target>
        </trans-unit>
        <trans-unit id="373a87fdeccadee389f2747d9ad2ef5069598780" translate="yes" xml:space="preserve">
          <source>Extern is the keyword you use to declare that the variable itself resides in another translation unit.</source>
          <target state="translated">Extern是用来声明变量本身存在于另一个翻译单元中的关键字。</target>
        </trans-unit>
        <trans-unit id="2ad7f7d36690943fbd8d2cdeefa156bba278bc4f" translate="yes" xml:space="preserve">
          <source>First off, the &lt;code&gt;extern&lt;/code&gt; keyword is not used for defining a variable; rather it is used for declaring a variable. I can say &lt;code&gt;extern&lt;/code&gt; is a storage class, not a data type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;首先，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字不用于定义变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;而是用于声明变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我可以说&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是存储类，而不是数据类型。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e675d41d485a134cc59cb8cc5812d69dfd94ce3" translate="yes" xml:space="preserve">
          <source>For any given variable, exactly one source file defines the variable,
preferably initializing it too.  (Although there is no need to
initialize explicitly to zero, it does no harm and can do some good,
because there can be only one initialized definition of a particular
global variable in a program).</source>
          <target state="translated">对于任何一个给定的变量,正好有一个源文件定义了这个变量,最好也初始化它。虽然不需要显式初始化为零,但这并没有什么坏处,而且还能起到一定的作用,因为一个程序中一个特定的全局变量的初始化定义只能有一个)。</target>
        </trans-unit>
        <trans-unit id="26a05b281fc0ea33355006c0511e1a13f6c1b929" translate="yes" xml:space="preserve">
          <source>For any given variable, only one header file declares it (SPOT &amp;mdash;
Single Point of Truth).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于任何给定的变量，只有一个头文件进行声明（SPOT &amp;mdash;单点真相）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15a305214dc58c0f3bae45d2b50c5db3c7291f4d" translate="yes" xml:space="preserve">
          <source>From now on, it is the job of the linker to make the final program, but the &lt;code&gt;extern&lt;/code&gt; information has already been extracted from the source code into the object file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从现在开始，链接器的工作是制作最终程序，但是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;信息已经从源代码中提取到目标文件中。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3415f68a49d03b531d86d16148c9a28fbd48eb90" translate="yes" xml:space="preserve">
          <source>Further, it starts to get tricky because you might include &lt;code&gt;file4b.h&lt;/code&gt;
before including &lt;code&gt;file3b.h&lt;/code&gt; to generate the definitions, but the normal
header guards on &lt;code&gt;file3b.h&lt;/code&gt; would prevent the header being reincluded.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此外，它开始变得棘手，因为您可能在包含&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 之前先包含&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来生成定义，但是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上的常规头保护&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;会阻止重新包含头。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="c4dd913333c910d79e768559ccbeb0eaa6741de0" translate="yes" xml:space="preserve">
          <source>Header Guards</source>
          <target state="translated">头部防护装置</target>
        </trans-unit>
        <trans-unit id="7ed8a527d683dd05a5c071bc07baabb3f83180ae" translate="yes" xml:space="preserve">
          <source>How do I use extern to share variables between source files</source>
          <target state="translated">如何使用extern在源文件之间共享变量?</target>
        </trans-unit>
        <trans-unit id="69ab5ed0b8bdee651f010db1fd0e5dc39247d2c8" translate="yes" xml:space="preserve">
          <source>However, it can be done subject to a not too unreasonable constraint.
Let's introduce a new set of file names:</source>
          <target state="translated">但是,可以在一个不算太不合理的约束条件下进行。让我们引入一组新的文件名。</target>
        </trans-unit>
        <trans-unit id="306a7e6ac4f4e31eaaf9959df7622d5c7fd6f737" translate="yes" xml:space="preserve">
          <source>However, the C standard also lists it in informative Annex J as one of
the &lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.5&quot;&gt;Common extensions&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，C标准还在参考性附录J中将其列为&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.5&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通用扩展之一&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f32f286c2c18f239ed02d25d1cc26ef29d313c9b" translate="yes" xml:space="preserve">
          <source>However, the problems are relatively unlikely to occur in practice,
especially if you take the standard advice to</source>
          <target state="translated">然而,在实际操作中出现问题的可能性相对较小,特别是如果你采取标准的建议,以</target>
        </trans-unit>
        <trans-unit id="1480206dabab63aec601dcfec6c3d8f480f9d30f" translate="yes" xml:space="preserve">
          <source>I know that global variables in C sometimes have the &lt;code&gt;extern&lt;/code&gt; keyword. What is an &lt;code&gt;extern&lt;/code&gt; variable? What is the declaration like? What is its scope?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我知道C中的全局变量有时具有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明是什么样的？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它的范围是什么？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0de3380113bfc8253411af051f1001ecf0ac9ca2" translate="yes" xml:space="preserve">
          <source>I like to think of an extern variable as a promise that you make to the compiler.</source>
          <target state="translated">我喜欢把外部变量看作是你对编译器的承诺。</target>
        </trans-unit>
        <trans-unit id="ff99a871bf617a3ef70ca3fc64c7048d4e9b9baf" translate="yes" xml:space="preserve">
          <source>I use this pattern across multiple files. So in order to keep things as self contained as possible, I just reuse the single GLOBAL macro in each header. My header looks like this:</source>
          <target state="translated">我在多个文件中使用这种模式。因此,为了让事情尽可能的自我控制,我只是在每个标题中重复使用单一的GLOBAL宏。我的标题看起来是这样的。</target>
        </trans-unit>
        <trans-unit id="e5241564a74e5dafcfe12477235c424b7af357a0" translate="yes" xml:space="preserve">
          <source>If the variable is actually a complex array, for example, this can lead
to extreme duplication of code.  It can, very occasionally, be a
sensible way to achieve some effect, but that is very unusual.</source>
          <target state="translated">例如,如果变量实际上是一个复杂的数组,这可能会导致代码的极端重复。偶尔也可以用这种方式来达到一些效果,但这是非常不正常的。</target>
        </trans-unit>
        <trans-unit id="5240a053ab6ec39673d237d57b13fe35267129a3" translate="yes" xml:space="preserve">
          <source>If you don't declare it as extern you'll get 2 variables named the same but not related at all, and an error of multiple definitions of the variable.</source>
          <target state="translated">如果你不声明为extern,你会得到2个命名相同但完全不相关的变量,并且会出现变量的多个定义的错误。</target>
        </trans-unit>
        <trans-unit id="5f984431ca6874cfecf343860bea748efbdb03e6" translate="yes" xml:space="preserve">
          <source>If you don't want a program to access your variables or functions, you use &lt;code&gt;static&lt;/code&gt; which tells the compiler that this variable or function cannot be used outside of this module.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您不希望程序访问变量或函数，请使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它告诉编译器该变量或函数不能在该模块外部使用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bd88bd6d2bc774ae7b046fd4f8995594296215f" translate="yes" xml:space="preserve">
          <source>Immediately before you include a header that should define variables,
you define the macro DEFINE_VARIABLES.</source>
          <target state="translated">紧接着,在包含应该定义变量的标题之前,你要定义一个宏DEFINE_VARIABLES。</target>
        </trans-unit>
        <trans-unit id="591fb3482c2373c5da07d5044176c89097f06024" translate="yes" xml:space="preserve">
          <source>In C a variable inside a file say example.c is given local scope. The compiler expects that the variable would have its definition inside the same file example.c and when it does not find the same , it would throw an error.A function on the other hand has by default global scope . Thus you do not have to explicitly mention to the compiler &quot;look dude...you might find the definition of this function here&quot;. For a function including the file which contains its declaration is enough.(The file which you actually call a header file). 
   For example consider the following 2 files :</source>
          <target state="translated">在C语言中,在一个文件中的变量,比如说example.c被赋予了本地作用域。编译器希望这个变量在同一个文件example.c中会有它的定义,当它没有找到相同的定义时,它会抛出一个错误。因此,你不需要向编译器明确地提到 &quot;看,老兄...你可能会在这里找到这个函数的定义&quot;。对于一个函数来说,包含了它的声明的文件就足够了(你实际调用头文件的文件)。例如,考虑以下2个文件。</target>
        </trans-unit>
        <trans-unit id="87e8c2a5e35c1e4280b1ea010dcc4573bbbdb76d" translate="yes" xml:space="preserve">
          <source>In C++17, you might want to use inline variables instead of extern ones, as they are simple to use (can be defined just once on header) and more powerful (support constexpr). See: &lt;a href=&quot;https://stackoverflow.com/questions/177437/what-does-const-static-mean-in-c-and-c/53883715#53883715&quot;&gt;What does 'const static' mean in C and C++?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在C ++ 17中，您可能希望使用内联变量而不是外部变量，因为它们易于使用（可以在标头上定义一次）并且功能更强大（支持constexpr）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;请参阅：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/177437/what-does-const-static-mean-in-c-and-c/53883715#53883715&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;常量静态&amp;rdquo;在C和C ++中是什么意思？&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5521a216563a3daa649367d1d7e5ddf5594d633a" translate="yes" xml:space="preserve">
          <source>In it declare the following</source>
          <target state="translated">其中声明如下</target>
        </trans-unit>
        <trans-unit id="ef34e45c1747c51692817f5fe0bc7586a11e4b83" translate="yes" xml:space="preserve">
          <source>In these examples, &lt;code&gt;file5c.c&lt;/code&gt; and &lt;code&gt;file6c.c&lt;/code&gt; directly include the header
&lt;code&gt;file2c.h&lt;/code&gt; several times, but that is the simplest way to show that the
mechanism works.  It means that if the header was indirectly included
twice, it would also be safe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在这些示例中，&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file6c.c&lt;/code&gt; 多次&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;直接包含头文件 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，但这是表明该机制有效的最简单方法。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着，如果标头被间接包含两次，那也是安全的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d492f0c477aa885f9e675ba6ab82e10880840d8" translate="yes" xml:space="preserve">
          <source>It also represents that you can use the variable declared using extern
  keyword in any file though it is declared/defined in other file.</source>
          <target state="translated">它还表示你可以在任何文件中使用extern关键字声明的变量,尽管它是在其他文件中声明定义的。</target>
        </trans-unit>
        <trans-unit id="608d1c854a7c17669089bab083ff9f4d1512b9f9" translate="yes" xml:space="preserve">
          <source>It is important to &lt;a href=&quot;https://stackoverflow.com/questions/1410563&quot;&gt;understand the difference between &lt;em&gt;defining&lt;/em&gt; a
variable and &lt;em&gt;declaring&lt;/em&gt; a
variable&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;重要的是要&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1410563&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了解&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;之间的区别&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff1f20492b56c804a8c0d9af0974927ab6848c42" translate="yes" xml:space="preserve">
          <source>J.5.11 Multiple external definitions</source>
          <target state="translated">J.5.11 多种外部定义</target>
        </trans-unit>
        <trans-unit id="356b85a3b8c8c81143ecad4559f86648eb5234a5" translate="yes" xml:space="preserve">
          <source>Multiple inclusion with variable definitions</source>
          <target state="translated">具有可变定义的多重包含</target>
        </trans-unit>
        <trans-unit id="bb3445e2d1585167c615a15ad0128113264f0e4a" translate="yes" xml:space="preserve">
          <source>Not so good way to define global variables</source>
          <target state="translated">不太好的定义全局变量的方法</target>
        </trans-unit>
        <trans-unit id="b034ccab4609a346f69f734409db3034a94941a8" translate="yes" xml:space="preserve">
          <source>Note 1: if the header defines the variable without the &lt;code&gt;extern&lt;/code&gt; keyword,
then each file that includes the header creates a tentative definition
of the variable.
As noted previously, this will often work, but the C standard does not
guarantee that it will work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意1：如果标头定义的变量没有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字，则每个包含标头的文件都会创建该变量的临时定义。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如前所述，这通常会起作用，但是C标准不能保证它会起作用。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31627023fc26e904ae3805ebef6fe0550e6fb76f" translate="yes" xml:space="preserve">
          <source>Note 2: if the header defines and initializes the variable, then only
one source file in a given program can use the header.
Since headers are primarily for sharing information, it is a bit silly
to create one that can only be used once.</source>
          <target state="translated">注意2:如果头定义并初始化了变量,那么在一个程序中只能使用一个源文件的头。由于页眉主要是用来共享信息的,所以创建一个只能使用一次的页眉就有点傻了。</target>
        </trans-unit>
        <trans-unit id="1be075cb981e86ead613321ff8019fc4b85a063f" translate="yes" xml:space="preserve">
          <source>Note 3: if the header defines a static variable (with or without
initialization), then each source file ends up with its own private
version of the 'global' variable.</source>
          <target state="translated">注意3:如果标题定义了一个静态变量(有或没有初始化),那么每个源文件最后都会有自己的私有版本的 &quot;全局 &quot;变量。</target>
        </trans-unit>
        <trans-unit id="95dbfe0c104a6e05478e5341f5054f912931f79e" translate="yes" xml:space="preserve">
          <source>Now in other files simply including global.h will
have it declared as an extern &lt;em&gt;for that file&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在在其他文件中，仅包括global.h，就将其声明&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为该文件&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的外部&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3c31001aa56a525a3e5e852510812d60922eb5b" translate="yes" xml:space="preserve">
          <source>Now in the file main.c</source>
          <target state="translated">现在,在文件main.c中</target>
        </trans-unit>
        <trans-unit id="ac42b8acf74f86e2af21d24e4c7789718c74f2a6" translate="yes" xml:space="preserve">
          <source>Now when you compile the two files together, using the following commands :</source>
          <target state="translated">现在,当你把这两个文件编译在一起时,使用下面的命令来编译.NET,就可以了。</target>
        </trans-unit>
        <trans-unit id="8bfccdd9e0dacfdeee24b02f4eeb3c87219cddca" translate="yes" xml:space="preserve">
          <source>One concern that is sometimes (and legitimately) raised about the
'declarations in headers, definitions in source' mechanism described
here is that there are two files to be kept synchronized &amp;mdash; the header
and the source.  This is usually followed up with an observation that a
macro can be used so that the header serves double duty &amp;mdash; normally
declaring the variables, but when a specific macro is set before the
header is included, it defines the variables instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有时（合法地）对这里描述的&amp;ldquo;标头中的声明，源中的定义&amp;rdquo;机制提出的一个关注是，有两个文件需要保持同步-标头和源。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;通常会观察到可以使用宏，以便标头起到双重作用-通常声明变量，但是在包含标头之前设置了特定的宏时，它会定义变量。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4502923a9c102950b3f0b470ca7f6ba4a45278fb" translate="yes" xml:space="preserve">
          <source>Other answers have covered the language usage side of view, so now let's have a look at how it is implemented in this implementation.</source>
          <target state="translated">其他的答案已经涵盖了语言使用方面的观点,那么现在我们来看看在这个实现中是如何实现的。</target>
        </trans-unit>
        <trans-unit id="86546a25fe2d8c85ef2156d6bfee43929dbe1777" translate="yes" xml:space="preserve">
          <source>Output contains:</source>
          <target state="translated">产出包括:</target>
        </trans-unit>
        <trans-unit id="ae83006b24a65b10fa55b857d66c3919d3a30938" translate="yes" xml:space="preserve">
          <source>Rules to be broken by experts only, and only with good reason:</source>
          <target state="translated">规则只能由专家来打破,而且只有在有充分理由的情况下才能打破。</target>
        </trans-unit>
        <trans-unit id="3f9e1658358e6c89da41534fe1502dbfeafa2072" translate="yes" xml:space="preserve">
          <source>SHN_UNDEF This section table index means the symbol is undefined. When the link editor combines this object file with another that defines the indicated symbol, this file's references to the symbol will be linked to the actual definition.</source>
          <target state="translated">SHN_UNDEF 该节表索引表示该符号未被定义。当链接编辑器将此对象文件与另一个定义了指定的符号的对象文件结合起来时,此文件对该符号的引用将被链接到实际的定义。</target>
        </trans-unit>
        <trans-unit id="a8e55e31b1e2836483c5a4fb164dfd55b61c27cf" translate="yes" xml:space="preserve">
          <source>Say you have two &lt;code&gt;.c&lt;/code&gt;-files &lt;code&gt;test1.c&lt;/code&gt; and &lt;code&gt;test2.c&lt;/code&gt;. If you define a global variable &lt;code&gt;int test1_var;&lt;/code&gt; in &lt;code&gt;test1.c&lt;/code&gt; and you'd like to access this variable in &lt;code&gt;test2.c&lt;/code&gt; you have to use &lt;code&gt;extern int test1_var;&lt;/code&gt; in &lt;code&gt;test2.c&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;假设你有两个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -files &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果定义一个全局变量&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int test1_var;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;test1.c&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，您想在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;访问此变量，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;则&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必须使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern int test1_var;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d66081df09dd5e01f739d9c0a5d76e7293a431e" translate="yes" xml:space="preserve">
          <source>Similar concerns arise with declaring and defining functions &amp;mdash;
analogous rules apply.
But the question was about variables specifically, so I've kept the
answer to variables only.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在声明和定义函数时也会遇到类似的问题-适用类似的规则。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是问题是关于变量的，所以我只保留了变量的答案。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c56a74ee1f96b0d8079ae6e5b226d54d822047f" translate="yes" xml:space="preserve">
          <source>So I;ll quickly try to explain it;
make a file called global.h.</source>
          <target state="translated">所以我很快就会试着解释一下;做一个叫global.h的文件。</target>
        </trans-unit>
        <trans-unit id="8385f075a12bbdc5e70d23e0ceb5ae6ecc928831" translate="yes" xml:space="preserve">
          <source>So you can decide to use a variable in a translation unit and then access it from another one, then in the second one you declare it as extern and the symbol will be resolved by the linker.</source>
          <target state="translated">所以你可以决定在一个翻译单元中使用一个变量,然后从另一个翻译单元中访问它,然后在第二个翻译单元中声明为extern,符号将由链接器解析。</target>
        </trans-unit>
        <trans-unit id="43a15273df226ddca52b8a56e10ecd6e8f3fc5c6" translate="yes" xml:space="preserve">
          <source>So, you need to include the body of &lt;code&gt;file3b.h&lt;/code&gt; at most once for
declarations, and at most once for definitions, but you might need both
in a single translation unit (TU &amp;mdash; a combination of a source file and
the headers it uses).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，您需要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最多包含一次&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的主体&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于声明，最多一次包含一个定义，但是您可能需要在一个转换单元（TU-源文件及其使用的头文件的组合）中同时包含两者。 。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="a00bf4b426cb9344af6da65574d0e65346416126" translate="yes" xml:space="preserve">
          <source>Tested on GCC 4.8.</source>
          <target state="translated">在GCC 4.8上测试。</target>
        </trans-unit>
        <trans-unit id="5f4082d773844f6a253a421efa8b7dbcaa5087a6" translate="yes" xml:space="preserve">
          <source>That's the best way to declare and define global variables.</source>
          <target state="translated">这是声明和定义全局变量的最佳方式。</target>
        </trans-unit>
        <trans-unit id="1fa0668e0b0b88a97fdfcdbe88b694e8aa07437d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.sco.com/developers/gabi/2003-12-17/contents.html&quot;&gt;System V ABI Update ELF spec&lt;/a&gt; &quot;Symbol Table&quot; chapter explains:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.sco.com/developers/gabi/2003-12-17/contents.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;系统V ABI更新ELF规范&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;ldquo;符号表&amp;rdquo;一章解释说：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7a6786d3bcfbdf53bf07c931eeddad4722af4a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extern&lt;/code&gt; can be declared in the &lt;code&gt;first.c&lt;/code&gt; file or in any of the header files &lt;code&gt;first.c&lt;/code&gt; includes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所述&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以在被声明&lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文件中或在任何的头文件&lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包括。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5b5c6a95c09ef6d4ca3c3561fa32abe65c578c3" translate="yes" xml:space="preserve">
          <source>The clean, reliable way to declare and define global variables is to use
a header file to contain an &lt;code&gt;extern&lt;/code&gt;&lt;em&gt;declaration&lt;/em&gt; of the variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明和定义全局变量的干净，可靠的方法是使用头文件包含&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9aef6ea03428b9fc0acfbc7857f968affaa48449" translate="yes" xml:space="preserve">
          <source>The complete programs shown use functions, so function declarations have
crept in.
Both C99 and C11 require functions to be declared or defined before they
are used (whereas C90 did not, for good reasons).
I use the keyword &lt;code&gt;extern&lt;/code&gt; in front of function declarations in headers
for consistency &amp;mdash;&amp;nbsp;to match the &lt;code&gt;extern&lt;/code&gt; in front of variable
declarations in headers.
Many people prefer not to use &lt;code&gt;extern&lt;/code&gt; in front of function
declarations; the compiler doesn't care &amp;mdash; and ultimately, neither do I
as long as you're consistent, at least within a source file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;所示的完整程序使用函数，因此函数声明已深入人心。C99和C11都要求在使用函数之前先声明或定义函数（而C90则没有，原因是充分的）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为了一致性，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在标头中的函数声明前&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用关键字&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，以匹配标头&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;中的变量声明前&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;许多人宁愿不要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在函数声明前&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编译器不在乎-最终，只要您保持一致，至少在源文件中，我也不会这样做。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c188ca39079cc387fa6e831f474927a3a98a2c9" translate="yes" xml:space="preserve">
          <source>The correct interpretation of extern is that you tell something to the compiler. You tell the compiler that, despite not being present right now, the variable declared will somehow be found by the linker (typically in another object (file)). The linker will then be the lucky guy to find everything and put it together, whether you had some extern declarations or not.</source>
          <target state="translated">对extern的正确解释是,你告诉编译器一些东西。你告诉编译器,尽管现在不存在,但声明的变量会以某种方式被链接器找到(通常在另一个对象(文件)中)。然后链接器就会成为幸运儿,不管你有没有一些外部声明,都会把所有的东西找出来,然后把它放在一起。</target>
        </trans-unit>
        <trans-unit id="6e436a831135dc09360e34bc37df40f4d70ac0ad" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;prog1.mk&lt;/code&gt; is a makefile for &lt;code&gt;prog1&lt;/code&gt; only.
It will work with most versions of &lt;code&gt;make&lt;/code&gt; produced since about the turn
of the millennium.
It is not tied specifically to GNU Make.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;文件&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.mk&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;用于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的makefile &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自大约千年之交以来&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，它将适用于&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;生产的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;大多数版本的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;make&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它并不专门与GNU Make绑定。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7293120480d17b27c8759b1f20a149ffee192f92" translate="yes" xml:space="preserve">
          <source>The header defining or declaring the global variables may not itself
define any types.</source>
          <target state="translated">定义或声明全局变量的标题本身可能不会定义任何类型。</target>
        </trans-unit>
        <trans-unit id="7b7da714f931cae85e6215688bb6c3ca4aa79753" translate="yes" xml:space="preserve">
          <source>The header defining or declaring the variables has stylized contents.</source>
          <target state="translated">定义或声明变量的标题具有风格化的内容。</target>
        </trans-unit>
        <trans-unit id="881e3003488bf6bc22590ba8ca6af1e94572af02" translate="yes" xml:space="preserve">
          <source>The header is included by the one source file that defines the variable
and by all the source files that reference the variable.
For each program, one source file (and only one source file) defines the
variable.
Similarly, one header file (and only one header file) should declare the
variable.
The header file is crucial; it enables cross-checking between
independent TUs (translation units &amp;mdash; think source files) and ensures
consistency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标头包含在一个定义变量的源文件中，并包含在所有引用该变量的源文件中。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于每个程序，一个源文件（只有一个源文件）定义了变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同样，一个头文件（只有一个头文件）应该声明该变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;头文件至关重要。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它支持在独立TU（翻译单元，即源文件）之间进行交叉检查，并确保一致性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b0982c12125f135a56e9b7b9b93b84a72be79fe" translate="yes" xml:space="preserve">
          <source>The header might be included twice indirectly.  For example, if
&lt;code&gt;file4b.h&lt;/code&gt; includes &lt;code&gt;file3b.h&lt;/code&gt; for a type definition that isn't shown,
and &lt;code&gt;file1b.c&lt;/code&gt; needs to use both header &lt;code&gt;file4b.h&lt;/code&gt; and &lt;code&gt;file3b.h&lt;/code&gt;, then
you have some more tricky issues to resolve.  Clearly, you might revise
the header list to include just &lt;code&gt;file4b.h&lt;/code&gt;.  However, you might not be
aware of the internal dependencies &amp;mdash; and the code should, ideally,
continue to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标头可能会间接包含两次。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如，如果 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包括&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于未示出的类型定义，并&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;需要同时使用头&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，那么你有一些棘手的问题需要解决。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;显然，您可以修改标头列表，使其仅包含&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，您可能不知道内部依赖关系，并且理想情况下，代码应继续运行。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad5463cb1a2550bdcee0063cc6aab1c6b96717cc" translate="yes" xml:space="preserve">
          <source>The issue becomes 'should the header include &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt;?'
If you omit that from the header and wrap any defining invocation with
&lt;code&gt;#define&lt;/code&gt; and &lt;code&gt;#undef&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;问题变为&amp;ldquo;标头应包含&lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;吗？&amp;rdquo; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果您从标头中忽略了该内容，并使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;#define&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包装任何定义的调用 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca8c7f41c38cdf3e3a420d496fe20b1669ca2fe6" translate="yes" xml:space="preserve">
          <source>The old forum post probably explained this a bit more clearly.
But this is a real potential &lt;code&gt;gotcha&lt;/code&gt; when using a compiler
that allows you to declare a variable in one file and then declare it extern as a different type in another. The problems associated with
that are if you say declared testing_mode as an int in another file
it would think it was a 16 bit var and overwrite some other part of ram, potentially corrupting another variable. Difficult to debug!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;较旧的论坛帖子可能对此进行了更清晰的解释。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当使用允许您在一个文件中声明一个变量，然后在另一个文件中将其声明为另一种类型的编译器时，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这确实是一个潜在的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;gotcha&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;与之相关的问题是，如果您说将testing_mode声明为另一个文件中的int，它将认为它是一个16位var，并覆盖ram的其他部分，从而可能损坏另一个变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;调试困难！&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd5d906d82297c3f51dd5bfd35a77ab5a95c21c1" translate="yes" xml:space="preserve">
          <source>The problem with this scheme as shown is that it does not provide for
initialization of the global variable.  With C99 or C11 and variable argument
lists for macros, you could define a macro to support initialization too.
(With C89 and no support for variable argument lists in macros, there is no
easy way to handle arbitrarily long initializers.)</source>
          <target state="translated">这个方案的问题是,它没有提供全局变量的初始化。如果使用C99或C11和宏中的变量参数列表,你也可以定义一个宏来支持初始化。(在C89和宏中不支持变量参数列表的情况下,没有简单的方法来处理任意长的初始化器)。</target>
        </trans-unit>
        <trans-unit id="a100dc688603b9855dccb98b1d1f682f7f302374" translate="yes" xml:space="preserve">
          <source>The restrictions for this to work are:</source>
          <target state="translated">这样做的限制是:</target>
        </trans-unit>
        <trans-unit id="817577c0dba8ff76f06ecb331ce19468c50f265f" translate="yes" xml:space="preserve">
          <source>The source file that defines the variable also includes the header to
ensure that the definition and the declaration are consistent.</source>
          <target state="translated">定义变量的源文件中还包括头,以确保定义和声明的一致性。</target>
        </trans-unit>
        <trans-unit id="d4b772b05a06cac7bb0184c048b64dbd8cfde377" translate="yes" xml:space="preserve">
          <source>There are, of course, many ways in which these guidelines can be broken.
Occasionally, there may be a good reason to break the guidelines, but
such occasions are extremely unusual.</source>
          <target state="translated">当然,违反这些准则的方式有很多。偶尔,可能有充分的理由违反这些准则,但这种情况极为罕见。</target>
        </trans-unit>
        <trans-unit id="45c5032bfdada5609c2370448a245a052a29943f" translate="yes" xml:space="preserve">
          <source>There may be more than one external definition for the identifier of
  an object, with or without the explicit use of the keyword extern; if
  the definitions disagree, or more than one is initialized, the
  behavior is undefined (6.9.2).</source>
          <target state="translated">一个对象的标识符可以有一个以上的外部定义,无论是否显式使用关键字extern;如果定义不一致,或者初始化了一个以上的定义,则该行为是未定义的(6.9.2)。</target>
        </trans-unit>
        <trans-unit id="613efa43e5434affe9e15d22d4e1e024d4b3661e" translate="yes" xml:space="preserve">
          <source>Therefore, you can compile a file that has reference to an extern, but you can not link if that memory is not declared somewhere.</source>
          <target state="translated">因此,你可以编译一个有引用到extern的文件,但如果这个内存没有声明在某个地方,你就不能链接。</target>
        </trans-unit>
        <trans-unit id="c9b97b2c028b841b1846cc6fdc42d04072316ebb" translate="yes" xml:space="preserve">
          <source>This is getting a tad convoluted, but seems to be secure (using the
&lt;code&gt;file2d.h&lt;/code&gt;, with no &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; in the &lt;code&gt;file2d.h&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是得到一点点令人费解，但是似乎是安全的（使用 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，没有&lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b34220934ee7097d45ec16b1f39cdc06990ce05c" translate="yes" xml:space="preserve">
          <source>This is related to sharing variables across source files, but how does that work precisely? Where do I use &lt;code&gt;extern&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这与在源文件之间共享变量有关，但是如何精确地工作呢？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;我在哪里使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b26cccfc838dc87d9352f2df2d799c257b1ab113" translate="yes" xml:space="preserve">
          <source>This means in main.c the variable will be declared as an &lt;code&gt;unsigned char&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这意味着在main.c中，变量将被声明为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cdc8cef1f761b10fca19330ff90c99ad24c5ab7" translate="yes" xml:space="preserve">
          <source>This problem was elegantly solved in a microchip forum some 15 years ago
    /* See &quot;http:www.htsoft.com&quot;                                          &lt;em&gt;/
    /&lt;/em&gt;  &quot;forum/all/showflat.php/Cat/0/Number/18766/an/0/page/0#18766&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这个问题在15年前的微芯片论坛中得到了巧妙解决/ *参见&amp;ldquo; http：www.htsoft.com&amp;rdquo; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;//&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &amp;ldquo; forum / all / &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;showflat.php &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ Cat / 0 / Number / 18766 / an / 0 / page / 0＃18766&amp;ldquo;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a73e1af2aaacc00d1cd325e01a80669806fdc81" translate="yes" xml:space="preserve">
          <source>This scheme avoids most problems.  You only run into a problem if a
header that defines variables (such as &lt;code&gt;file2c.h&lt;/code&gt;) is included by
another header (say &lt;code&gt;file7c.h&lt;/code&gt;) that defines variables.  There isn't an
easy way around that other than &quot;don't do it&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;该方案避免了大多数问题。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅当定义变量的标头（例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）包含在另一个&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义变量的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标头（例如&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file7c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）中时，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您才遇到问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除了&amp;ldquo;不做&amp;rdquo;以外，没有其他简便的方法。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44af17a2c4063b43decac8e1cae615f4b3460a01" translate="yes" xml:space="preserve">
          <source>This technique does not conform to the letter of the C standard and the
'one definition rule' &amp;mdash; it is officially undefined behaviour:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;此技术不符合C标准的字母和&amp;ldquo;一个定义规则&amp;rdquo; &amp;mdash;正式是未定义的行为：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="834eaf33179075a7b392e7c567aed8127afebf2e" translate="yes" xml:space="preserve">
          <source>Use the header technique I showed first.
It works reliably and everywhere.
Note, in particular, that the header declaring the &lt;code&gt;global_variable&lt;/code&gt; is
included in every file that uses it &amp;mdash; including the one that defines it.
This ensures that everything is self-consistent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用我首先展示的标题技术。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它在任何地方都能可靠运行。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;特别要注意的是，声明&lt;/font&gt;&lt;/font&gt; &lt;code&gt;global_variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的标头&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包含在使用它的每个文件中，包括定义它的文件。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这样可以确保所有内容都是自洽的。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="827dad75e8eff41948c16f2f906a0a5cf440530d" translate="yes" xml:space="preserve">
          <source>Useful for global variables and libraries, but dangerous because the linker does not type check.</source>
          <target state="translated">对全局变量和库很有用,但很危险,因为链接器不进行类型检查。</target>
        </trans-unit>
        <trans-unit id="3cec43eba69cc62d6d9de66bb4bb713dd116f9e1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;extern&lt;/code&gt; is only of relevance when the program you're building
consists of multiple source files linked together, where some of the
variables defined, for example, in source file &lt;code&gt;file1.c&lt;/code&gt; need to be
referenced in other source files, such as &lt;code&gt;file2.c&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;仅当要构建的程序由多个链接在一起的源文件组成时才&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，其中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;需要在其他源文件（例如&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例如在源文件&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; 中&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义的某些变量&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。 c&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dff64534b2d3fcd7442b5b287f36d602ab155e5b" translate="yes" xml:space="preserve">
          <source>Variable initialization</source>
          <target state="translated">变量初始化</target>
        </trans-unit>
        <trans-unit id="c75bc9dff7e8d81c6cd4dfe243da0ab578e98698" translate="yes" xml:space="preserve">
          <source>Violating the guidelines</source>
          <target state="translated">违反准则</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="fcfcc815dcd79de6f2c15216333f810c99f05a23" translate="yes" xml:space="preserve">
          <source>When encountering an extern, the compiler can only find out its type, not where it &quot;lives&quot;, so it can't resolve the reference.</source>
          <target state="translated">遇到extern时,编译器只能找出它的类型,而不能找出它的 &quot;住处&quot;,所以无法解析引用。</target>
        </trans-unit>
        <trans-unit id="4aa8d09dde0212e5912861447ea4ddcb68b44e7f" translate="yes" xml:space="preserve">
          <source>With some (indeed, many) C compilers, you can get away with what's
called a 'common' definition of a variable too.
'Common', here, refers to a technique used in Fortran for sharing
variables between source files, using a (possibly named) COMMON block.
What happens here is that each of a number of files provides a tentative
definition of the variable.
As long as no more than one file provides an initialized definition,
then the various files end up sharing a common single definition of the
variable:</source>
          <target state="translated">在一些(事实上,很多C语言编译器中,你也可以使用所谓的 &quot;通用 &quot;变量的定义。这里的 &quot;共同 &quot;指的是Fortran中使用的一种技术,在源文件之间共享变量,使用一个(可能是命名为COMMON的)块。这里的情况是,在多个文件中的每个文件都提供了一个变量的暂定定义。只要不超过一个文件提供一个初始化的定义,那么不同的文件最终都会共享一个共同的变量定义。</target>
        </trans-unit>
        <trans-unit id="e97b0cf5af1e3bf4f73bd3e791107eb6c586682e" translate="yes" xml:space="preserve">
          <source>With xc8 you have to be careful about declaring a variable
as the same type in each file as you could , erroneously,
declare something an &lt;code&gt;int&lt;/code&gt; in one file and a &lt;code&gt;char&lt;/code&gt; say in another.
This could lead to corruption of variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用xc8时，必须谨慎地在每个文件中声明与同一类型相同的变量，错误地&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在一个文件中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; 值,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在另一个文件中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; 值&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这可能导致变量损坏。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caacde4797253a581eb62bb22566c1e32c10a196" translate="yes" xml:space="preserve">
          <source>You are telling it, &quot;Trust me.  At link time this reference will be resolvable.&quot;</source>
          <target state="translated">你在告诉它,&quot;相信我。在链接的时候,这个参照物将被解决。&quot;</target>
        </trans-unit>
        <trans-unit id="5c908956bd8754f5c212be4e435320dee0ec8a38" translate="yes" xml:space="preserve">
          <source>You can partially work around the problem by revising &lt;code&gt;file2c.h&lt;/code&gt; into
&lt;code&gt;file2d.h&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您可以通过将&lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;修改&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;为 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;来部分解决该问题&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7009bafb4698e3725a791f4b4a860ab0a0858b9f" translate="yes" xml:space="preserve">
          <source>You get the following output : The value of a is &amp;lt;5&amp;gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;您将获得以下输出：a的值为&amp;lt;5&amp;gt;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="135bbaa156861ecfec5dedc9176c377fb5bd0cb3" translate="yes" xml:space="preserve">
          <source>You may declare a variable multiple times (though once is sufficient);
you may only define it once within a given scope.
A variable definition is also a declaration, but not all variable
declarations are definitions.</source>
          <target state="translated">你可以多次声明一个变量(虽然一次就足够了);在给定的作用域中,你只能定义一次变量。变量定义也是一种声明,但并不是所有的变量声明都是定义。</target>
        </trans-unit>
        <trans-unit id="3a9e349d10f0bd9616d27d00bd04e467dc645845" translate="yes" xml:space="preserve">
          <source>broken_header.h</source>
          <target state="translated">broken_header.h</target>
        </trans-unit>
        <trans-unit id="d5b1ef39d032b550cec6ec1007b182e41ada7193" translate="yes" xml:space="preserve">
          <source>example.c</source>
          <target state="translated">example.c</target>
        </trans-unit>
        <trans-unit id="bc45783e0ca44daa72354d9947288fb7166a506f" translate="yes" xml:space="preserve">
          <source>example1.c</source>
          <target state="translated">example1.c</target>
        </trans-unit>
        <trans-unit id="cce814c5b0b4fb333c5c802ed983c32c15ae7bf6" translate="yes" xml:space="preserve">
          <source>extern tells the compiler to trust you that the memory for this variable is declared elsewhere, so it doesnt try to allocate/check memory.</source>
          <target state="translated">extern告诉编译器相信你,这个变量的内存是在其他地方声明的,所以它不会尝试分配内存。</target>
        </trans-unit>
        <trans-unit id="fa057fe4ce31229cf2c9ca183338d8b4566a8f7c" translate="yes" xml:space="preserve">
          <source>external.h</source>
          <target state="translated">external.h</target>
        </trans-unit>
        <trans-unit id="8f974661c27deca057542254f0c5c08df7394688" translate="yes" xml:space="preserve">
          <source>externdef.h</source>
          <target state="translated">externdef.h</target>
        </trans-unit>
        <trans-unit id="1519bb244ac7f4f2b557e89ea8b33f782e38cb81" translate="yes" xml:space="preserve">
          <source>faulty_header.h</source>
          <target state="translated">faulty_header.h</target>
        </trans-unit>
        <trans-unit id="cc233bcad9c75ba5434e30146eb0d92e2fc492e4" translate="yes" xml:space="preserve">
          <source>file1.c</source>
          <target state="translated">file1.c</target>
        </trans-unit>
        <trans-unit id="94af44728c38066445637ed33989a10662b4be8d" translate="yes" xml:space="preserve">
          <source>file10.c</source>
          <target state="translated">file10.c</target>
        </trans-unit>
        <trans-unit id="1a4db11f876ac75ec4a04118feb407872381e8bd" translate="yes" xml:space="preserve">
          <source>file11.c</source>
          <target state="translated">file11.c</target>
        </trans-unit>
        <trans-unit id="c60df4c309bbe1fd634e717ca4e654c2e5a2afd3" translate="yes" xml:space="preserve">
          <source>file12.c</source>
          <target state="translated">file12.c</target>
        </trans-unit>
        <trans-unit id="63422742612ee2d040272390d76dcc10d3ba6d8a" translate="yes" xml:space="preserve">
          <source>file1a.c</source>
          <target state="translated">file1a.c</target>
        </trans-unit>
        <trans-unit id="8c90848246876bdfe0a4ba356e814c8096902645" translate="yes" xml:space="preserve">
          <source>file1b.c</source>
          <target state="translated">file1b.c</target>
        </trans-unit>
        <trans-unit id="602c880cd3d85cf5d1501b64ef5e0a3d9020fb69" translate="yes" xml:space="preserve">
          <source>file1c.h</source>
          <target state="translated">file1c.h</target>
        </trans-unit>
        <trans-unit id="3e8c5c1e55a2790f5986353365d101820cb79b4c" translate="yes" xml:space="preserve">
          <source>file2.c</source>
          <target state="translated">file2.c</target>
        </trans-unit>
        <trans-unit id="b364bc3969ae4e240e4c2af8569851e565f1d3c8" translate="yes" xml:space="preserve">
          <source>file2a.c</source>
          <target state="translated">file2a.c</target>
        </trans-unit>
        <trans-unit id="3071e8d0fbd2b11dfe7e3f801c592900f9a955aa" translate="yes" xml:space="preserve">
          <source>file2b.c</source>
          <target state="translated">file2b.c</target>
        </trans-unit>
        <trans-unit id="8c580d84c0126805fedaab26a3cbacac98151314" translate="yes" xml:space="preserve">
          <source>file2c.h</source>
          <target state="translated">file2c.h</target>
        </trans-unit>
        <trans-unit id="5cd31b420f39b05d5ebf1851db8408a262c78ced" translate="yes" xml:space="preserve">
          <source>file2d.h</source>
          <target state="translated">file2d.h</target>
        </trans-unit>
        <trans-unit id="51db95ab333814a2f0cf2d336fbc77e5d4574a39" translate="yes" xml:space="preserve">
          <source>file3.h</source>
          <target state="translated">file3.h</target>
        </trans-unit>
        <trans-unit id="a68ae471fa40518093366a4faf9f455eec1d65cb" translate="yes" xml:space="preserve">
          <source>file3a.h</source>
          <target state="translated">file3a.h</target>
        </trans-unit>
        <trans-unit id="66129162d6eb113e02ef3f0515786aaed562d6ea" translate="yes" xml:space="preserve">
          <source>file3b.h</source>
          <target state="translated">file3b.h</target>
        </trans-unit>
        <trans-unit id="a6f6f45e5894881c9c4d56933a40555105304af8" translate="yes" xml:space="preserve">
          <source>file3c.c</source>
          <target state="translated">file3c.c</target>
        </trans-unit>
        <trans-unit id="6bed332d6a20a59aca373a629fb1406fec6d17a0" translate="yes" xml:space="preserve">
          <source>file4c.c</source>
          <target state="translated">file4c.c</target>
        </trans-unit>
        <trans-unit id="c82b7655ce78fdb20797f9a0b529460c414cad9a" translate="yes" xml:space="preserve">
          <source>file5c.c</source>
          <target state="translated">file5c.c</target>
        </trans-unit>
        <trans-unit id="e3569eeff213c66ee68ba8129e95a015af94492b" translate="yes" xml:space="preserve">
          <source>file6c.c</source>
          <target state="translated">file6c.c</target>
        </trans-unit>
        <trans-unit id="389f6f288bbd8c87170840fb566bc2a58914e727" translate="yes" xml:space="preserve">
          <source>file7c.c</source>
          <target state="translated">file7c.c</target>
        </trans-unit>
        <trans-unit id="f750d9359ba952e035041c47c471d03be546dae0" translate="yes" xml:space="preserve">
          <source>file8c.c</source>
          <target state="translated">file8c.c</target>
        </trans-unit>
        <trans-unit id="649ce7257b5d407a411c8a3a892db26b13538aa6" translate="yes" xml:space="preserve">
          <source>file8c.h</source>
          <target state="translated">file8c.h</target>
        </trans-unit>
        <trans-unit id="2c268161bcd37e38aa327365c829e292a5df9692" translate="yes" xml:space="preserve">
          <source>file9c.c</source>
          <target state="translated">file9c.c</target>
        </trans-unit>
        <trans-unit id="e546a9945e5fbbf012ee47c501d2fd647f6189ad" translate="yes" xml:space="preserve">
          <source>in the source code (so the headers never alter the value of
&lt;code&gt;DEFINE_VARIABLES&lt;/code&gt;), then you should be clean.  It is just a nuisance to
have to remember to write the the extra line.  An alternative might be:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在源代码中（因此标题永远不会更改&lt;/font&gt;&lt;/font&gt; &lt;code&gt;DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的值 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;），那么您应该很干净。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必须记住要写多余的行，这很麻烦。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一种替代方法可能是：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="406e031b8824ea26ae0bf4d7579a1d89e3fb5906" translate="yes" xml:space="preserve">
          <source>main.c</source>
          <target state="translated">main.c</target>
        </trans-unit>
        <trans-unit id="93365afb1329c154f67f66abb34e7ec554e7e414" translate="yes" xml:space="preserve">
          <source>prog1.c</source>
          <target state="translated">prog1.c</target>
        </trans-unit>
        <trans-unit id="ae51ce8fa46448ec348078275a9b0392b4e5a612" translate="yes" xml:space="preserve">
          <source>prog1.h</source>
          <target state="translated">prog1.h</target>
        </trans-unit>
        <trans-unit id="d0cfc1b7cd134217aa1eee2c1f5eb03303856b18" translate="yes" xml:space="preserve">
          <source>prog1.mk</source>
          <target state="translated">prog1.mk</target>
        </trans-unit>
        <trans-unit id="ac81dfe96b76fa35c693ddb6ff7df89fa25ca4a5" translate="yes" xml:space="preserve">
          <source>prog2.c</source>
          <target state="translated">prog2.c</target>
        </trans-unit>
        <trans-unit id="9a2c603c45c08d4af91fc8d86e74f4bf0ece1530" translate="yes" xml:space="preserve">
          <source>prog2.h</source>
          <target state="translated">prog2.h</target>
        </trans-unit>
        <trans-unit id="29a7b48708db879ef7d5301795b122b78c096c5a" translate="yes" xml:space="preserve">
          <source>prog3.c</source>
          <target state="translated">prog3.c</target>
        </trans-unit>
        <trans-unit id="57d004dc92d1b9ca86e4f162742b13e88ad1cf3f" translate="yes" xml:space="preserve">
          <source>prog3.h</source>
          <target state="translated">prog3.h</target>
        </trans-unit>
        <trans-unit id="af366bc1058daa94590fd146182289cbdd2bf946" translate="yes" xml:space="preserve">
          <source>prog4.c</source>
          <target state="translated">prog4.c</target>
        </trans-unit>
        <trans-unit id="e615acdea9dc98e713fe90f5346ef04f37644c99" translate="yes" xml:space="preserve">
          <source>prog4.h</source>
          <target state="translated">prog4.h</target>
        </trans-unit>
        <trans-unit id="3dd95e946ea8548116d3346d8410def41f81c5cf" translate="yes" xml:space="preserve">
          <source>prog5.c</source>
          <target state="translated">prog5.c</target>
        </trans-unit>
        <trans-unit id="0ab4dfc395d6335679526b820fe8b24221395ae0" translate="yes" xml:space="preserve">
          <source>prog8.c</source>
          <target state="translated">prog8.c</target>
        </trans-unit>
        <trans-unit id="3af43e4333ca180e16d8a7d37246776c42e95676" translate="yes" xml:space="preserve">
          <source>seldom_correct.h</source>
          <target state="translated">seldom_correct.h</target>
        </trans-unit>
        <trans-unit id="1166b4b12a2519496b1dfaf6e7f4d98b4f0edf4b" translate="yes" xml:space="preserve">
          <source>step 1)cc -o ex example.c example1.c
step 2)./ex</source>
          <target state="translated">步骤1)cc -o ex example.c example1.c 步骤2).ex</target>
        </trans-unit>
        <trans-unit id="c35d0d128f82b9ae6bbaba048a190422b8e2bf8c" translate="yes" xml:space="preserve">
          <source>which is basically the behavior the C standard gives to &lt;code&gt;extern&lt;/code&gt; variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这基本上是C标准给&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的行为&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
