<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1433204">
    <body>
      <group id="1433204">
        <trans-unit id="691b744886da99866feaea02d3066790f516c985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;
allows one module of your program to access a global variable or function declared in another module of your program.
You usually have extern variables declared in header files.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; permite que un m&amp;oacute;dulo de su programa acceda a una variable o funci&amp;oacute;n global declarada en otro m&amp;oacute;dulo de su programa. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo general, tiene variables externas declaradas en archivos de encabezado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7ba700d01f9e35eaa62b507ae07d80ca0838516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used so one &lt;code&gt;first.c&lt;/code&gt; file can have full access to a global parameter in another &lt;code&gt;second.c&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa para que un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;archivo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; pueda tener acceso completo a un par&amp;aacute;metro global en otro &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;archivo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;second.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67c7d933bc91f3d7f4581169eb22a8f828ce47b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used to let other C files or external components know this variable is already defined somewhere. Example: if  you are building a library, no need to define global variable mandatorily somewhere in library itself. The library will be compiled directly, but while linking the file, it checks for the definition.</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se usa para permitir que otros archivos C o componentes externos sepan que esta variable ya est&amp;aacute; definida en alguna parte. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ejemplo: si est&amp;aacute; creando una biblioteca, no es necesario definir la variable global obligatoriamente en alg&amp;uacute;n lugar de la biblioteca. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La biblioteca se compilar&amp;aacute; directamente, pero al vincular el archivo, verifica la definici&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8af8b6a3f7c07ab0ae2fed724efa07585bdb20d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; simply means a variable is defined elsewhere (e.g., in another file).</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; simplemente significa que una variable se define en otra parte (por ejemplo, en otro archivo).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="912da2af6624131ec49a4d74be0e306561c1bf22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;external.h&lt;/code&gt; for the EXTERN macro definitions, etc.</source>
          <target state="translated">&lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para las definiciones de macro EXTERNAS, etc.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c6c6cab53c2a8d3d3c32325a2554932b43513b2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file1c.h&lt;/code&gt; to define types (notably, &lt;code&gt;struct oddball&lt;/code&gt;, the type of &lt;code&gt;oddball_struct&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para definir tipos (en particular, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct oddball&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , el tipo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;oddball_struct&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83cd5bc57f7c5534f30691c642087a0f66f09d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file2c.h&lt;/code&gt; to define or declare the global variables.</source>
          <target state="translated">&lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para definir o declarar las variables globales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6175a7f682df0cfe01eed1994f44252888954cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file3c.c&lt;/code&gt; which defines the global variables.</source>
          <target state="translated">&lt;code&gt;file3c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que define las variables globales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b96ebb2cad7a9f3b0501e004f81356772496e65f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file4c.c&lt;/code&gt; which simply uses the global variables.</source>
          <target state="translated">&lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que simplemente usa las variables globales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bde7b6e5dceee89851b0dfbe86b665aa66b851c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file5c.c&lt;/code&gt; which shows that you can declare and then define the global variables.</source>
          <target state="translated">&lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que muestra que puede declarar y luego definir las variables globales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59db616bb4616380c90bce70be473268e263ec20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file6c.c&lt;/code&gt; which shows that you can define and then (attempt to) declare the global variables.</source>
          <target state="translated">&lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que muestra que puede definir y luego (intentar) declarar las variables globales.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cbe60d5324112e7a90fab3433e01cc10f44332d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog1&lt;/code&gt; uses &lt;code&gt;prog1.c&lt;/code&gt;, &lt;code&gt;file1.c&lt;/code&gt;, &lt;code&gt;file2.c&lt;/code&gt;, &lt;code&gt;file3.h&lt;/code&gt; and &lt;code&gt;prog1.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8336dc4e7fb0da995e44db63cc9e75bcbed8f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog2&lt;/code&gt; uses &lt;code&gt;prog2.c&lt;/code&gt;, &lt;code&gt;file10.c&lt;/code&gt;, &lt;code&gt;file11.c&lt;/code&gt;, &lt;code&gt;file12.c&lt;/code&gt;, &lt;code&gt;prog2.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file10.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file11.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file12.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a35ff2125678aea4d10758c53f9b97f84cea22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog3&lt;/code&gt; uses &lt;code&gt;prog3.c&lt;/code&gt;, &lt;code&gt;file1a.c&lt;/code&gt;, &lt;code&gt;file2a.c&lt;/code&gt;, &lt;code&gt;file3a.h&lt;/code&gt;, &lt;code&gt;prog3.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1a.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2a.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3a.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb03231f7d7081ad3fb95a2ebfb85c0a8588bfd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog4&lt;/code&gt; uses &lt;code&gt;prog4.c&lt;/code&gt;, &lt;code&gt;file1b.c&lt;/code&gt;, &lt;code&gt;file2b.c&lt;/code&gt;, &lt;code&gt;prog4.h&lt;/code&gt;, &lt;code&gt;file3b.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c13993e2c5e59f817ad09159b39659211a8029d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog5&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file3c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="70cfe9feb2aa730f50a77d8f1f96a1fd90df55bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog6&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file5c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3fca148ebe696e5ef8edb0ed4a2bf0c6e3197b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog7&lt;/code&gt; uses &lt;code&gt;prog5.c&lt;/code&gt;, &lt;code&gt;file6c.c&lt;/code&gt;, &lt;code&gt;file4c.c&lt;/code&gt;, &lt;code&gt;file1c.h&lt;/code&gt;, &lt;code&gt;file2c.h&lt;/code&gt;, &lt;code&gt;external.h&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog7&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a6365135448408cb725d916abbeeb6b605c5606f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog8&lt;/code&gt; uses &lt;code&gt;prog8.c&lt;/code&gt;, &lt;code&gt;file7c.c&lt;/code&gt;, &lt;code&gt;file9c.c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file7c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file9c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b33f5f286b0e8ecfa5f139bfae710da5c66808c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prog9&lt;/code&gt; uses &lt;code&gt;prog8.c&lt;/code&gt;, &lt;code&gt;file8c.c&lt;/code&gt;, &lt;code&gt;file9c.c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prog9&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file8c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file9c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c2c7350f8d61556fd197ba3cc7ad47f1a41f7f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;extern keyword is used with the variable for its identification as a global variable.&lt;/strong&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La palabra clave extern se usa con la variable para su identificaci&amp;oacute;n como variable global.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae48a4577bef144b2ee1fffb6266f5b9461caf28" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Confession&lt;/em&gt;: The 'avoiding duplicated code' scheme outlined here was
developed because the issue affects some code I work on (but don't own),
and is a niggling concern with the scheme outlined in the first part of
the answer.  However, the original scheme leaves you with just two
places to modify to keep variable definitions and declarations
synchronized, which is a big step forward over having exernal variable
declarations scattered throughout the code base (which really matters
when there are thousands of files in total).  However, the code in the
files with the names &lt;code&gt;fileNc.[ch]&lt;/code&gt; (plus &lt;code&gt;external.h&lt;/code&gt; and &lt;code&gt;externdef.h&lt;/code&gt;)
shows that it can be made to work.  Clearly, it would not be hard to
create a header generator script to give you the standardized template
for a variable defining and declaring header file.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Confesi&amp;oacute;n&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : El esquema de 'evitar el c&amp;oacute;digo duplicado' descrito aqu&amp;iacute; se desarroll&amp;oacute; porque el problema afecta a alg&amp;uacute;n c&amp;oacute;digo en el que trabajo (pero que no poseo), y es una preocupaci&amp;oacute;n insignificante con el esquema descrito en la primera parte de la respuesta. Sin embargo, el esquema original te deja con solo dos lugares para modificar para mantener sincronizadas las definiciones y declaraciones de variables, lo cual es un gran paso adelante sobre tener declaraciones de variables de ejercicio dispersas en toda la base del c&amp;oacute;digo (lo que realmente importa cuando hay miles de archivos en total) . Sin embargo, el c&amp;oacute;digo en los archivos con los nombres &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fileNc.[ch]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (m&amp;aacute;s &lt;/font&gt;&lt;/font&gt; &lt;code&gt;external.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;externdef.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;) muestra que se puede hacer que funcione. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Claramente, no ser&amp;iacute;a dif&amp;iacute;cil crear un script generador de encabezado para darle la plantilla estandarizada para una variable que define y declara un archivo de encabezado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="802de36c736dcca7dba68f179d6b2fe2a98d8ff5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Late Major Addition&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adici&amp;oacute;n mayor tard&amp;iacute;a&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cabb747ea3dfc8e01242e16511d95cb93e4e56be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NB&lt;/em&gt; These are toy programs with just barely enough code to make them
marginally interesting.  There is repetition within the examples that
could be removed, but isn't to simplify the pedagogical explanation.
(For example: the difference between &lt;code&gt;prog5.c&lt;/code&gt; and &lt;code&gt;prog8.c&lt;/code&gt; is the name
of one of the headers that are included.  It would be possible to
reorganize the code so that the &lt;code&gt;main()&lt;/code&gt; function was not repeated, but
it would conceal more than it revealed.)</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota:&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; estos son programas de juguetes con apenas el c&amp;oacute;digo suficiente para que sean marginalmente interesantes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay una repetici&amp;oacute;n dentro de los ejemplos que podr&amp;iacute;a eliminarse, pero no es para simplificar la explicaci&amp;oacute;n pedag&amp;oacute;gica. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Por ejemplo: la diferencia entre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es el nombre de uno de los encabezados incluidos. Ser&amp;iacute;a posible reorganizar el c&amp;oacute;digo para que la funci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;main()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se repitiera, pero ocultar&amp;iacute;a m&amp;aacute;s de lo que revel&amp;oacute;.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="246969342f7091a47a7e6df3ab6c0b9846bad087" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next source file completes the source (provides a main program) for &lt;code&gt;prog5&lt;/code&gt;, &lt;code&gt;prog6&lt;/code&gt; and &lt;code&gt;prog7&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El siguiente archivo fuente completa la fuente (proporciona un programa principal) para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog5&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog6&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog7&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c0295f73a690f01b9e6a895dcda3cc552adfdd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog1&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los siguientes dos archivos completan la fuente de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd48a25f012bcd39ad2bbcac04ba00b07d750b9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog2&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los siguientes dos archivos completan la fuente de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43678bd292d03dff8a030116f5904f4ddc9881aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog3&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los siguientes dos archivos completan la fuente de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog3&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b8b12f6883eef3eb46da8b95ee2b2966146e288" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog4&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los siguientes dos archivos completan la fuente de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog4&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b6cfd519088106efcde93a7e2818d7019468cf8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The next two files complete the source for &lt;code&gt;prog8&lt;/code&gt; and &lt;code&gt;prog9&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los siguientes dos archivos completan la fuente para &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog8&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog9&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67c77d683553c02292bbef903605e0ffb1384061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#6.9p5&quot;&gt;&amp;sect;6.9 External definitions &amp;para;5&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#6.9p5&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;sect;6.9 Definiciones externas &amp;para;5&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f3e271c09e92f032c8fe65e498d41ca3fd41f69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.2&quot;&gt;J.2 Undefined behavior&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.2&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;J.2 Comportamiento indefinido&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22ad7a5f93246b4e0bc197f64432fc4496f7a1ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C++17 inline variables&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++ 17 variables en l&amp;iacute;nea&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b0c72cdf18835af81fed510af873ef1583c670a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GCC ELF Linux implementation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Implementaci&amp;oacute;n de GCC ELF Linux&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d02958a95497c38d1132e2d49d1b72a14154cb99" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;161)&lt;/sup&gt; Thus, if an identifier declared with external linkage
  is not used in an expression, there need be no external definition for
  it.</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;161)&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; Por lo tanto, si un identificador declarado con enlace externo no se utiliza en una expresi&amp;oacute;n, no necesita haber una definici&amp;oacute;n externa para ello.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f931e8eb7528883decff0c083a27b301e685fe8" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;If you're not an experienced C programmer, you could (and perhaps
       should) stop reading here.&lt;/em&gt;
&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no eres un programador C experimentado, podr&amp;iacute;as (y quiz&amp;aacute;s deber&amp;iacute;as) dejar de leer aqu&amp;iacute;.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="212d3d4f1c7e1cf1eb0644358b4f9e7fc0c6acad" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;If you're not an experienced C programmer, you probably should stop reading here.&lt;/em&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no eres un programador de C experimentado, probablemente deber&amp;iacute;as dejar de leer aqu&amp;iacute;.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="904db4087127fede8e7a24d87fc43f98f55cdb62" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;&lt;em&gt;The source code and text of this answer are available in my
      &lt;a href=&quot;https://github.com/jleffler/soq&quot;&gt;SOQ&lt;/a&gt; (Stack Overflow Questions)
      repository on GitHub in the
      &lt;a href=&quot;https://github.com/jleffler/soq/tree/master/src/so-0143-3204&quot;&gt;src/so-0143-3204&lt;/a&gt;
      sub-directory.&lt;/em&gt;
&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El c&amp;oacute;digo fuente y el texto de esta respuesta est&amp;aacute;n disponibles en mi &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jleffler/soq&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;repositorio SOQ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (Stack Overflow Questions) en GitHub en el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jleffler/soq/tree/master/src/so-0143-3204&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;subdirectorio src / so-0143-3204&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;&lt;/em&gt; &lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e7ca21e90603b40c1f38e754ca020fe41a1456b2" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Correct header &lt;code&gt;file3b.h&lt;/code&gt; included (instead of &lt;code&gt;fileba.h&lt;/code&gt;) per
&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;Denis Kniazhev&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; correcto &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;file3b.h&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; incluido (en lugar de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;fileba.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) seg&amp;uacute;n &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Denis Kniazhev&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7e33b7e516b6b281ee81a9ca638b338f3b469214" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;Reverse contents of &lt;code&gt;#if&lt;/code&gt; and &lt;code&gt;#else&lt;/code&gt; blocks, fixing bug identified by
&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;Denis Kniazhev&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Contenido reverso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#if&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#else&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bloques, correcci&amp;oacute;n de errores identificados por &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/369317/denis-kniazhev&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Denis Kniazhev&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c75267659ed7cb9acf9c3bd955871ce73dc26ed0" translate="yes" xml:space="preserve">
          <source>A function should never need to declare a variable using &lt;code&gt;extern&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una funci&amp;oacute;n nunca deber&amp;iacute;a necesitar declarar una variable usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95a08cd55a032d11568e24a970f19057fd318c96" translate="yes" xml:space="preserve">
          <source>A header file only contains &lt;code&gt;extern&lt;/code&gt; declarations of variables &amp;mdash; never
&lt;code&gt;static&lt;/code&gt; or unqualified variable definitions.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un archivo de encabezado solo contiene &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraciones &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; as&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de variables, nunca &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;definiciones de variables &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o no calificadas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="929c9870b227429e31fcdd1590cbd4387c67db5b" translate="yes" xml:space="preserve">
          <source>A source file never contains &lt;code&gt;extern&lt;/code&gt; declarations of variables &amp;mdash;
source files always include the (sole) header that declares them.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un archivo fuente nunca contiene &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraciones &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; as&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de variables: los archivos fuente siempre incluyen el encabezado (&amp;uacute;nico) que las declara.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="807b7c5e47890e949e5e71577df2a663417f44b3" translate="yes" xml:space="preserve">
          <source>A typical scheme works like this, using the original global variable
illustrated in &lt;code&gt;file3.h&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Un esquema t&amp;iacute;pico funciona as&amp;iacute;, utilizando la variable global original ilustrada en el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3669f7e5c7ae797032b9f571d2855464bd33a8cc" translate="yes" xml:space="preserve">
          <source>A variable is &lt;strong&gt;declared&lt;/strong&gt; when the compiler is informed that a
variable exists (and this is its type); it does not allocate the
storage for the variable at that point.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declara&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una variable &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cuando se informa al compilador que existe una variable (y este es su tipo); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no asigna el almacenamiento para la variable en ese punto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3ef0901904af9ddecd5808dfc21e84c84d15be7" translate="yes" xml:space="preserve">
          <source>A variable is &lt;strong&gt;defined&lt;/strong&gt; when the compiler allocates the storage for
the variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una variable se &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;define&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando el compilador asigna el almacenamiento para la variable.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b8955ccaa95522319deba1043a4efb97953fda31" translate="yes" xml:space="preserve">
          <source>A very short solution I use to allow a header file to contain the extern reference or actual implementation of an object. The file that actually contains the object just does &lt;code&gt;#define GLOBAL_FOO_IMPLEMENTATION&lt;/code&gt;. Then when I add a new object to this file it shows up in that file also without me having to copy and paste the definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una soluci&amp;oacute;n muy corta que uso para permitir que un archivo de encabezado contenga la referencia externa o la implementaci&amp;oacute;n real de un objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El archivo que realmente contiene el objeto simplemente &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#define GLOBAL_FOO_IMPLEMENTATION&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Luego, cuando agrego un nuevo objeto a este archivo, aparece en ese archivo tambi&amp;eacute;n sin que tenga que copiar y pegar la definici&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f089e1504e9f5976c51721bd3cd0db3737e78c9a" translate="yes" xml:space="preserve">
          <source>Adding an &lt;code&gt;extern&lt;/code&gt; turns a variable &lt;em&gt;definition&lt;/em&gt; into a variable &lt;em&gt;declaration&lt;/em&gt;. See &lt;a href=&quot;https://stackoverflow.com/questions/1410563/&quot;&gt;this thread&lt;/a&gt; as to what's the difference between a declaration and a definition.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Agregar un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; o&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; convierte una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;definici&amp;oacute;n de&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; variable &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraci&amp;oacute;n de&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; variable &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Vea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1410563/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;este hilo&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; sobre cu&amp;aacute;l es la diferencia entre una declaraci&amp;oacute;n y una definici&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="371aa8471e9601036622d8ba995342ff661dca0d" translate="yes" xml:space="preserve">
          <source>Although there are other ways of doing it, this method is simple and
reliable.
It is demonstrated by &lt;code&gt;file3.h&lt;/code&gt;, &lt;code&gt;file1.c&lt;/code&gt; and &lt;code&gt;file2.c&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aunque hay otras formas de hacerlo, este m&amp;eacute;todo es simple y confiable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo demuestran &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33409945b6a6a4b528aa2923576aeff68a8476dd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;extern&lt;/code&gt; variable is a declaration (thanks to sbi for the correction) of a variable which is defined in another translation unit. That means the storage for the variable is allocated in another file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una declaraci&amp;oacute;n (gracias a sbi por la correcci&amp;oacute;n) de una variable que se define en otra unidad de traducci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Eso significa que el almacenamiento de la variable se asigna en otro archivo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2713c0441427ac808975eb78cd2e068c63a3c8e8" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;external definition&lt;/em&gt; is an external declaration that is also a
  definition of a function (other than an inline definition) or an
  object.
  If an identifier declared with external linkage is used in an
  expression (other than as part of the operand of a &lt;code&gt;sizeof&lt;/code&gt; or
  &lt;code&gt;_Alignof&lt;/code&gt; operator whose result is an integer constant), somewhere in
  the entire program there shall be exactly one external definition for
  the identifier; otherwise, there shall be no more than
  one.&lt;sup&gt;161)&lt;/sup&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;definici&amp;oacute;n externa&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una declaraci&amp;oacute;n externa que tambi&amp;eacute;n es una definici&amp;oacute;n de una funci&amp;oacute;n (que no sea una definici&amp;oacute;n en l&amp;iacute;nea) o un objeto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si se usa un identificador declarado con enlace externo en una expresi&amp;oacute;n (que no sea como parte del operando de un &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;operador &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sizeof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_Alignof&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuyo resultado es una constante entera), en alg&amp;uacute;n lugar del programa completo habr&amp;aacute; exactamente una definici&amp;oacute;n externa para el identificador; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de lo contrario, no habr&amp;aacute; m&amp;aacute;s de uno. &lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;161)&lt;/font&gt;&lt;/font&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3efdf6e8d9681ed5f5f7c72651568658204fad53" translate="yes" xml:space="preserve">
          <source>An identifier with external linkage is used, but in the program there
  does not exist exactly one external definition for the identifier, or
  the identifier is not used and there exist multiple external
  definitions for the identifier (6.9).</source>
          <target state="translated">Se utiliza un identificador con vinculación externa,pero en el programa no existe exactamente una definición externa para el identificador,o el identificador no se utiliza y existen múltiples definiciones externas para el identificador (6.9).</target>
        </trans-unit>
        <trans-unit id="8ddaec31cd2c4e030c6ef6df28a74cc5b31c7ce6" translate="yes" xml:space="preserve">
          <source>Another concern can be that the variables need to be defined in each of
a number of 'main programs'.  This is normally a spurious concern; you
can simply introduce a C source file to define the variables and link
the object file produced with each of the programs.</source>
          <target state="translated">Otra preocupación puede ser que las variables necesitan ser definidas en cada uno de los &quot;programas principales&quot;.Esta es normalmente una preocupación espuria;puede simplemente introducir un archivo de fuente C para definir las variables y vincular el archivo de objeto producido con cada uno de los programas.</target>
        </trans-unit>
        <trans-unit id="32a67881216469ac0ec14850f47fe546855708f2" translate="yes" xml:space="preserve">
          <source>Any header should be protected against reinclusion, so that type
definitions (enum, struct or union types, or typedefs generally) do not
cause problems.  The standard technique is to wrap the body of the
header in a header guard such as:</source>
          <target state="translated">Todo encabezamiento debe protegerse contra la reinclusión,de modo que las definiciones de los tipos (enum,struct o tipos de unión,o typedefs en general)no causen problemas.La técnica estándar consiste en envolver el cuerpo del encabezamiento en un protector de encabezamiento como:</target>
        </trans-unit>
        <trans-unit id="45d35123fc8a96fae7a834999067040cfc78f9a9" translate="yes" xml:space="preserve">
          <source>As noted in comments here, and as stated in my answer to a similar
&lt;a href=&quot;https://stackoverflow.com/questions/1490693&quot;&gt;question&lt;/a&gt;, using multiple
definitions for a global variable leads to undefined behaviour (J.2;
&amp;sect;6.9), which is the standard's way of saying &quot;anything could happen&quot;.
One of the things that can happen is that the program behaves as you
expect; and J.5.11 says, approximately, &quot;you might be lucky more often
than you deserve&quot;.
But a program that relies on multiple definitions of an extern variable
&amp;mdash; with or without the explicit 'extern' keyword &amp;mdash; is not a strictly
conforming program and not guaranteed to work everywhere.
Equivalently: it contains a bug which may or may not show itself.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como se se&amp;ntilde;al&amp;oacute; en los comentarios aqu&amp;iacute;, y como se indica en mi respuesta a una &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1490693&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;pregunta&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; similar &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;, el uso de m&amp;uacute;ltiples definiciones para una variable global conduce a un comportamiento indefinido (J.2; &amp;sect;6.9), que es la forma est&amp;aacute;ndar de decir &quot;cualquier cosa podr&amp;iacute;a suceder&quot;. Una de las cosas que puede suceder es que el programa se comporta como espera; y J.5.11 dice, aproximadamente, &quot;podr&amp;iacute;as tener suerte m&amp;aacute;s de lo que mereces&quot;. Pero un programa que se basa en m&amp;uacute;ltiples definiciones de una variable externa, con o sin la palabra clave expl&amp;iacute;cita 'externa', no es un programa estrictamente conforme y no se garantiza que funcione en todas partes. Equivalente: contiene un error que puede mostrarse o no.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ea9c797001a229bb0f7e2e5dcae3538ba2a55b2c" translate="yes" xml:space="preserve">
          <source>Avoid global variables</source>
          <target state="translated">Evitar las variables globales</target>
        </trans-unit>
        <trans-unit id="c2c86e9533eaac188daf2a31bc7c14f8d7b5731f" translate="yes" xml:space="preserve">
          <source>Avoid global variables whenever possible &amp;mdash; use functions instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Evite las variables globales siempre que sea posible; utilice funciones en su lugar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d0532814d924ccd1ab821349854a5eaf5e7fdf8" translate="yes" xml:space="preserve">
          <source>Avoiding Code Duplication</source>
          <target state="translated">Evitar la duplicación de códigos</target>
        </trans-unit>
        <trans-unit id="64132ad1f1f27881cb1abfa320c5ec1afc5711ba" translate="yes" xml:space="preserve">
          <source>Because this technique is not always supported, it is best to avoid
using it, &lt;em&gt;especially if your code needs to be portable&lt;/em&gt;.
Using this technique, you can also end up with unintentional type
punning.
If one of the files declared &lt;code&gt;i&lt;/code&gt; as a &lt;code&gt;double&lt;/code&gt; instead of as an &lt;code&gt;int&lt;/code&gt;,
C's type-unsafe linkers probably would not spot the mismatch.
If you're on a machine with 64-bit &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt;, you'd not even
get a warning; on a machine with 32-bit &lt;code&gt;int&lt;/code&gt; and 64-bit &lt;code&gt;double&lt;/code&gt;, you'd
probably get a warning about the different sizes &amp;mdash; the linker would
use the largest size, exactly as a Fortran program would take the
largest size of any common blocks.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debido a que esta t&amp;eacute;cnica no siempre es compatible, es mejor evitar usarla, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;especialmente si su c&amp;oacute;digo debe ser port&amp;aacute;til&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Usando esta t&amp;eacute;cnica, tambi&amp;eacute;n puede terminar con un tipo de punteo involuntario. Si uno de los archivos declarara &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; lugar de como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , los enlazadores inseguros de tipo de C probablemente no detectar&amp;iacute;an la falta de coincidencia. Si est&amp;aacute; en una m&amp;aacute;quina con 64 bits &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ni siquiera recibir&amp;aacute; una advertencia; en una m&amp;aacute;quina con 32 bits &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y 64 bits &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , probablemente recibir&amp;iacute;a una advertencia sobre los diferentes tama&amp;ntilde;os: el enlazador usar&amp;iacute;a el tama&amp;ntilde;o m&amp;aacute;s grande, exactamente como un programa Fortran tomar&amp;iacute;a el tama&amp;ntilde;o m&amp;aacute;s grande de cualquier bloque com&amp;uacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b33dab1d92c5a6831743f5185214a923868b7f2" translate="yes" xml:space="preserve">
          <source>Best way to declare and define global variables</source>
          <target state="translated">La mejor manera de declarar y definir las variables globales</target>
        </trans-unit>
        <trans-unit id="31291b8ed31cfce74fc0f36b57aa3dad74b3a290" translate="yes" xml:space="preserve">
          <source>But it will be correctly declared as an &lt;code&gt;unsigned char&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero se declarar&amp;aacute; correctamente como un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="535e045c8f36ad1784410ee9660b08a2ee4c1486" translate="yes" xml:space="preserve">
          <source>But this link seems to no longer work...</source>
          <target state="translated">Pero este vínculo parece que ya no funciona...</target>
        </trans-unit>
        <trans-unit id="77451d71b40941ae17f1943fc9be05c65d905e16" translate="yes" xml:space="preserve">
          <source>Clearly, the code for the oddball structure is not what you'd normally
write, but it illustrates the point.  The first argument to the second
invocation of &lt;code&gt;INITIALIZER&lt;/code&gt; is &lt;code&gt;{ 41&lt;/code&gt; and the remaining argument
(singular in this example) is &lt;code&gt;43 }&lt;/code&gt;.  Without C99 or similar support
for variable argument lists for macros, initializers that need to
contain commas are very problematic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Claramente, el c&amp;oacute;digo para la estructura extra&amp;ntilde;a no es lo que normalmente escribir&amp;iacute;as, pero ilustra el punto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El primer argumento para la segunda invocaci&amp;oacute;n de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;INITIALIZER&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;{ 41&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y el argumento restante (singular en este ejemplo) es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;43 }&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin C99 o soporte similar para listas de argumentos variables para macros, los inicializadores que necesitan contener comas son muy problem&amp;aacute;ticos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8646ef6ae439093b3a509c848a73e94716034cd4" translate="yes" xml:space="preserve">
          <source>Compile and decompile:</source>
          <target state="translated">Compilar y descompilar:</target>
        </trans-unit>
        <trans-unit id="d43ef1edf24fba8899355dc8110d85e5de9eb59f" translate="yes" xml:space="preserve">
          <source>Complete sample:</source>
          <target state="translated">Muestra completa:</target>
        </trans-unit>
        <trans-unit id="521e7e446becd7f610ecef9f5437d49aa3d8d12f" translate="yes" xml:space="preserve">
          <source>Declaration won't allocate memory (the variable must be defined for memory allocation) but the definition will. 
This is just another simple view on the extern keyword since the other answers are really great.</source>
          <target state="translated">La declaración no asignará memoria (la variable debe ser definida para la asignación de memoria)pero la definición sí.Esto es sólo otra simple vista de la palabra clave externa ya que las otras respuestas son realmente grandes.</target>
        </trans-unit>
        <trans-unit id="1a56f8c8e203fe1ef1374576f22f70cc9402c3b5" translate="yes" xml:space="preserve">
          <source>Does this exposition miss anything?</source>
          <target state="translated">¿Se le escapa algo a esta exposición?</target>
        </trans-unit>
        <trans-unit id="396176d9049fd1b4108eb2b9640b789290670d4b" translate="yes" xml:space="preserve">
          <source>End of Original Answer</source>
          <target state="translated">Fin de la respuesta original</target>
        </trans-unit>
        <trans-unit id="373a87fdeccadee389f2747d9ad2ef5069598780" translate="yes" xml:space="preserve">
          <source>Extern is the keyword you use to declare that the variable itself resides in another translation unit.</source>
          <target state="translated">Extern es la palabra clave que se usa para declarar que la variable misma reside en otra unidad de traducción.</target>
        </trans-unit>
        <trans-unit id="2ad7f7d36690943fbd8d2cdeefa156bba278bc4f" translate="yes" xml:space="preserve">
          <source>First off, the &lt;code&gt;extern&lt;/code&gt; keyword is not used for defining a variable; rather it is used for declaring a variable. I can say &lt;code&gt;extern&lt;/code&gt; is a storage class, not a data type.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En primer lugar, la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; no se utiliza para definir una variable; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;aacute;s bien se usa para declarar una variable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puedo decir que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es una clase de almacenamiento, no un tipo de datos.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9e675d41d485a134cc59cb8cc5812d69dfd94ce3" translate="yes" xml:space="preserve">
          <source>For any given variable, exactly one source file defines the variable,
preferably initializing it too.  (Although there is no need to
initialize explicitly to zero, it does no harm and can do some good,
because there can be only one initialized definition of a particular
global variable in a program).</source>
          <target state="translated">Para cualquier variable dada,exactamente un archivo fuente define la variable,preferiblemente también la inicializa.(Aunque no es necesario inicializarla explícitamente a cero,no hace daño y puede hacer algún bien,porque sólo puede haber una definición inicializada de una variable global particular en un programa).</target>
        </trans-unit>
        <trans-unit id="26a05b281fc0ea33355006c0511e1a13f6c1b929" translate="yes" xml:space="preserve">
          <source>For any given variable, only one header file declares it (SPOT &amp;mdash;
Single Point of Truth).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para cualquier variable dada, solo un archivo de encabezado lo declara (SPOT - Single Point of Truth).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15a305214dc58c0f3bae45d2b50c5db3c7291f4d" translate="yes" xml:space="preserve">
          <source>From now on, it is the job of the linker to make the final program, but the &lt;code&gt;extern&lt;/code&gt; information has already been extracted from the source code into the object file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De ahora en adelante, es el trabajo del enlazador hacer el programa final, pero la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;informaci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ya se ha extra&amp;iacute;do del c&amp;oacute;digo fuente en el archivo objeto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3415f68a49d03b531d86d16148c9a28fbd48eb90" translate="yes" xml:space="preserve">
          <source>Further, it starts to get tricky because you might include &lt;code&gt;file4b.h&lt;/code&gt;
before including &lt;code&gt;file3b.h&lt;/code&gt; to generate the definitions, but the normal
header guards on &lt;code&gt;file3b.h&lt;/code&gt; would prevent the header being reincluded.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s, comienza a complicarse porque puede incluir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; antes de incluir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para generar las definiciones, pero las &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; encabezado normales en &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;file3b.h&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; evitar&amp;iacute;an que se &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;vuelva&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; a &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;incluir&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; el encabezado.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="c4dd913333c910d79e768559ccbeb0eaa6741de0" translate="yes" xml:space="preserve">
          <source>Header Guards</source>
          <target state="translated">Guardias de cabecera</target>
        </trans-unit>
        <trans-unit id="7ed8a527d683dd05a5c071bc07baabb3f83180ae" translate="yes" xml:space="preserve">
          <source>How do I use extern to share variables between source files</source>
          <target state="translated">¿Cómo puedo usar el externo para compartir variables entre los archivos de origen</target>
        </trans-unit>
        <trans-unit id="69ab5ed0b8bdee651f010db1fd0e5dc39247d2c8" translate="yes" xml:space="preserve">
          <source>However, it can be done subject to a not too unreasonable constraint.
Let's introduce a new set of file names:</source>
          <target state="translated">Sin embargo,puede hacerse con una limitación no demasiado irrazonable.Introduzcamos un nuevo conjunto de nombres de archivos:</target>
        </trans-unit>
        <trans-unit id="306a7e6ac4f4e31eaaf9959df7622d5c7fd6f737" translate="yes" xml:space="preserve">
          <source>However, the C standard also lists it in informative Annex J as one of
the &lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.5&quot;&gt;Common extensions&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, el est&amp;aacute;ndar C tambi&amp;eacute;n lo incluye en el Anexo J informativo como una de las &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://port70.net/~nsz/c/c11/n1570.html#J.5&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;extensiones comunes&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f32f286c2c18f239ed02d25d1cc26ef29d313c9b" translate="yes" xml:space="preserve">
          <source>However, the problems are relatively unlikely to occur in practice,
especially if you take the standard advice to</source>
          <target state="translated">Sin embargo,es relativamente improbable que los problemas se produzcan en la práctica,especialmente si se sigue el consejo estándar de</target>
        </trans-unit>
        <trans-unit id="1480206dabab63aec601dcfec6c3d8f480f9d30f" translate="yes" xml:space="preserve">
          <source>I know that global variables in C sometimes have the &lt;code&gt;extern&lt;/code&gt; keyword. What is an &lt;code&gt;extern&lt;/code&gt; variable? What is the declaration like? What is its scope?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;S&amp;eacute; que las variables globales en C a veces tienen la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; es una &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variable &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;C&amp;oacute;mo es la declaraci&amp;oacute;n? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Cu&amp;aacute;l es su alcance?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0de3380113bfc8253411af051f1001ecf0ac9ca2" translate="yes" xml:space="preserve">
          <source>I like to think of an extern variable as a promise that you make to the compiler.</source>
          <target state="translated">Me gusta pensar que una variable externa es una promesa que le haces al compilador.</target>
        </trans-unit>
        <trans-unit id="ff99a871bf617a3ef70ca3fc64c7048d4e9b9baf" translate="yes" xml:space="preserve">
          <source>I use this pattern across multiple files. So in order to keep things as self contained as possible, I just reuse the single GLOBAL macro in each header. My header looks like this:</source>
          <target state="translated">Utilizo este patrón a través de múltiples archivos.Así que para mantener las cosas tan contenidas como sea posible,sólo reutilizo la única macro GLOBAL en cada cabecera.Mi encabezado se ve así:</target>
        </trans-unit>
        <trans-unit id="e5241564a74e5dafcfe12477235c424b7af357a0" translate="yes" xml:space="preserve">
          <source>If the variable is actually a complex array, for example, this can lead
to extreme duplication of code.  It can, very occasionally, be a
sensible way to achieve some effect, but that is very unusual.</source>
          <target state="translated">Si la variable es en realidad un conjunto complejo,por ejemplo,esto puede llevar a una duplicación extrema de código.Puede,muy ocasionalmente,ser una forma sensata de lograr algún efecto,pero eso es muy inusual.</target>
        </trans-unit>
        <trans-unit id="5240a053ab6ec39673d237d57b13fe35267129a3" translate="yes" xml:space="preserve">
          <source>If you don't declare it as extern you'll get 2 variables named the same but not related at all, and an error of multiple definitions of the variable.</source>
          <target state="translated">Si no lo declaras como externo obtendrás 2 variables con el mismo nombre pero no relacionadas en absoluto,y un error de múltiples definiciones de la variable.</target>
        </trans-unit>
        <trans-unit id="5f984431ca6874cfecf343860bea748efbdb03e6" translate="yes" xml:space="preserve">
          <source>If you don't want a program to access your variables or functions, you use &lt;code&gt;static&lt;/code&gt; which tells the compiler that this variable or function cannot be used outside of this module.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no desea que un programa acceda a sus variables o funciones, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; que le dice al compilador que esta variable o funci&amp;oacute;n no se puede usar fuera de este m&amp;oacute;dulo.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7bd88bd6d2bc774ae7b046fd4f8995594296215f" translate="yes" xml:space="preserve">
          <source>Immediately before you include a header that should define variables,
you define the macro DEFINE_VARIABLES.</source>
          <target state="translated">Inmediatamente antes de incluir un encabezado que debe definir las variables,se define la macro DEFINE_VARIABLES.</target>
        </trans-unit>
        <trans-unit id="591fb3482c2373c5da07d5044176c89097f06024" translate="yes" xml:space="preserve">
          <source>In C a variable inside a file say example.c is given local scope. The compiler expects that the variable would have its definition inside the same file example.c and when it does not find the same , it would throw an error.A function on the other hand has by default global scope . Thus you do not have to explicitly mention to the compiler &quot;look dude...you might find the definition of this function here&quot;. For a function including the file which contains its declaration is enough.(The file which you actually call a header file). 
   For example consider the following 2 files :</source>
          <target state="translated">En C una variable dentro de un archivo digamos ejemplo.c se le da alcance local.El compilador espera que la variable tenga su definición dentro del mismo archivo example.c y cuando no la encuentre,arrojará un error.Una función,en cambio,tiene por defecto un alcance global.Por lo tanto,no es necesario mencionar explícitamente al compilador &quot;mira tío...podrías encontrar la definición de esta función aquí&quot;.Para una función que incluye el archivo que contiene su declaración es suficiente.(El archivo que realmente se llama archivo de cabecera).Por ejemplo,considere los siguientes 2 archivos :</target>
        </trans-unit>
        <trans-unit id="87e8c2a5e35c1e4280b1ea010dcc4573bbbdb76d" translate="yes" xml:space="preserve">
          <source>In C++17, you might want to use inline variables instead of extern ones, as they are simple to use (can be defined just once on header) and more powerful (support constexpr). See: &lt;a href=&quot;https://stackoverflow.com/questions/177437/what-does-const-static-mean-in-c-and-c/53883715#53883715&quot;&gt;What does 'const static' mean in C and C++?&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En C ++ 17, es posible que desee utilizar variables en l&amp;iacute;nea en lugar de variables externas, ya que son f&amp;aacute;ciles de usar (se pueden definir una sola vez en el encabezado) y m&amp;aacute;s potentes (admiten constexpr). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ver: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/177437/what-does-const-static-mean-in-c-and-c/53883715#53883715&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Qu&amp;eacute; significa 'const static' en C y C ++?&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5521a216563a3daa649367d1d7e5ddf5594d633a" translate="yes" xml:space="preserve">
          <source>In it declare the following</source>
          <target state="translated">En él se declara lo siguiente</target>
        </trans-unit>
        <trans-unit id="ef34e45c1747c51692817f5fe0bc7586a11e4b83" translate="yes" xml:space="preserve">
          <source>In these examples, &lt;code&gt;file5c.c&lt;/code&gt; and &lt;code&gt;file6c.c&lt;/code&gt; directly include the header
&lt;code&gt;file2c.h&lt;/code&gt; several times, but that is the simplest way to show that the
mechanism works.  It means that if the header was indirectly included
twice, it would also be safe.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En estos ejemplos, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file5c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file6c.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; incluyen directamente el encabezado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; varias veces, pero esa es la forma m&amp;aacute;s sencilla de mostrar que el mecanismo funciona. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Significa que si el encabezado se incluyera indirectamente dos veces, tambi&amp;eacute;n ser&amp;iacute;a seguro.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3d492f0c477aa885f9e675ba6ab82e10880840d8" translate="yes" xml:space="preserve">
          <source>It also represents that you can use the variable declared using extern
  keyword in any file though it is declared/defined in other file.</source>
          <target state="translated">También representa que se puede utilizar la variable declarada con una palabra clave externa en cualquier archivo aunque esté declaradadefinida en otro archivo.</target>
        </trans-unit>
        <trans-unit id="608d1c854a7c17669089bab083ff9f4d1512b9f9" translate="yes" xml:space="preserve">
          <source>It is important to &lt;a href=&quot;https://stackoverflow.com/questions/1410563&quot;&gt;understand the difference between &lt;em&gt;defining&lt;/em&gt; a
variable and &lt;em&gt;declaring&lt;/em&gt; a
variable&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es importante &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/questions/1410563&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;comprender la diferencia entre &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;definir&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una variable y &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declarar&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; una variable&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff1f20492b56c804a8c0d9af0974927ab6848c42" translate="yes" xml:space="preserve">
          <source>J.5.11 Multiple external definitions</source>
          <target state="translated">J.5.11 Múltiples definiciones externas</target>
        </trans-unit>
        <trans-unit id="356b85a3b8c8c81143ecad4559f86648eb5234a5" translate="yes" xml:space="preserve">
          <source>Multiple inclusion with variable definitions</source>
          <target state="translated">Inclusión múltiple con definiciones variables</target>
        </trans-unit>
        <trans-unit id="bb3445e2d1585167c615a15ad0128113264f0e4a" translate="yes" xml:space="preserve">
          <source>Not so good way to define global variables</source>
          <target state="translated">No es una buena forma de definir las variables globales</target>
        </trans-unit>
        <trans-unit id="b034ccab4609a346f69f734409db3034a94941a8" translate="yes" xml:space="preserve">
          <source>Note 1: if the header defines the variable without the &lt;code&gt;extern&lt;/code&gt; keyword,
then each file that includes the header creates a tentative definition
of the variable.
As noted previously, this will often work, but the C standard does not
guarantee that it will work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Nota 1: si el encabezado define la variable sin la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , cada archivo que incluye el encabezado crea una definici&amp;oacute;n tentativa de la variable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como se se&amp;ntilde;al&amp;oacute; anteriormente, esto a menudo funcionar&amp;aacute;, pero el est&amp;aacute;ndar C no garantiza que funcione.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="31627023fc26e904ae3805ebef6fe0550e6fb76f" translate="yes" xml:space="preserve">
          <source>Note 2: if the header defines and initializes the variable, then only
one source file in a given program can use the header.
Since headers are primarily for sharing information, it is a bit silly
to create one that can only be used once.</source>
          <target state="translated">Nota 2:si el encabezado define e inicializa la variable,entonces sólo un archivo fuente en un programa dado puede usar el encabezado.Dado que los encabezados son principalmente para compartir información,es un poco tonto crear uno que sólo pueda ser usado una vez.</target>
        </trans-unit>
        <trans-unit id="1be075cb981e86ead613321ff8019fc4b85a063f" translate="yes" xml:space="preserve">
          <source>Note 3: if the header defines a static variable (with or without
initialization), then each source file ends up with its own private
version of the 'global' variable.</source>
          <target state="translated">Nota 3:si el encabezado define una variable estática (con o sin inicialización),entonces cada archivo fuente termina con su propia versión privada de la variable 'global'.</target>
        </trans-unit>
        <trans-unit id="95dbfe0c104a6e05478e5341f5054f912931f79e" translate="yes" xml:space="preserve">
          <source>Now in other files simply including global.h will
have it declared as an extern &lt;em&gt;for that file&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora en otros archivos, simplemente incluyendo global.h lo tendr&amp;aacute; declarado como externo &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para ese archivo&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3c31001aa56a525a3e5e852510812d60922eb5b" translate="yes" xml:space="preserve">
          <source>Now in the file main.c</source>
          <target state="translated">Ahora en el archivo main.c</target>
        </trans-unit>
        <trans-unit id="ac42b8acf74f86e2af21d24e4c7789718c74f2a6" translate="yes" xml:space="preserve">
          <source>Now when you compile the two files together, using the following commands :</source>
          <target state="translated">Ahora cuando compilas los dos archivos juntos,usando los siguientes comandos :</target>
        </trans-unit>
        <trans-unit id="8bfccdd9e0dacfdeee24b02f4eeb3c87219cddca" translate="yes" xml:space="preserve">
          <source>One concern that is sometimes (and legitimately) raised about the
'declarations in headers, definitions in source' mechanism described
here is that there are two files to be kept synchronized &amp;mdash; the header
and the source.  This is usually followed up with an observation that a
macro can be used so that the header serves double duty &amp;mdash; normally
declaring the variables, but when a specific macro is set before the
header is included, it defines the variables instead.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una preocupaci&amp;oacute;n que a veces se plantea (y leg&amp;iacute;timamente) sobre el mecanismo de 'declaraciones en encabezados, definiciones en origen' descrito aqu&amp;iacute; es que hay dos archivos que deben mantenerse sincronizados: el encabezado y el origen. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto generalmente se sigue con una observaci&amp;oacute;n de que se puede usar una macro para que el encabezado cumpla una doble funci&amp;oacute;n, normalmente declarando las variables, pero cuando se establece una macro espec&amp;iacute;fica antes de incluir el encabezado, define las variables en su lugar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4502923a9c102950b3f0b470ca7f6ba4a45278fb" translate="yes" xml:space="preserve">
          <source>Other answers have covered the language usage side of view, so now let's have a look at how it is implemented in this implementation.</source>
          <target state="translated">Otras respuestas han abarcado el lado del uso del lenguaje,así que ahora veamos cómo se implementa en esta implementación.</target>
        </trans-unit>
        <trans-unit id="86546a25fe2d8c85ef2156d6bfee43929dbe1777" translate="yes" xml:space="preserve">
          <source>Output contains:</source>
          <target state="translated">La salida contiene:</target>
        </trans-unit>
        <trans-unit id="ae83006b24a65b10fa55b857d66c3919d3a30938" translate="yes" xml:space="preserve">
          <source>Rules to be broken by experts only, and only with good reason:</source>
          <target state="translated">Las reglas deben ser quebrantadas sólo por expertos,y sólo con una buena razón:</target>
        </trans-unit>
        <trans-unit id="3f9e1658358e6c89da41534fe1502dbfeafa2072" translate="yes" xml:space="preserve">
          <source>SHN_UNDEF This section table index means the symbol is undefined. When the link editor combines this object file with another that defines the indicated symbol, this file's references to the symbol will be linked to the actual definition.</source>
          <target state="translated">SHN_UNDEF Este índice de la tabla de la sección significa que el símbolo no está definido.Cuando el editor de enlaces combina este archivo de objetos con otro que define el símbolo indicado,las referencias de este archivo al símbolo estarán vinculadas a la definición real.</target>
        </trans-unit>
        <trans-unit id="a8e55e31b1e2836483c5a4fb164dfd55b61c27cf" translate="yes" xml:space="preserve">
          <source>Say you have two &lt;code&gt;.c&lt;/code&gt;-files &lt;code&gt;test1.c&lt;/code&gt; and &lt;code&gt;test2.c&lt;/code&gt;. If you define a global variable &lt;code&gt;int test1_var;&lt;/code&gt; in &lt;code&gt;test1.c&lt;/code&gt; and you'd like to access this variable in &lt;code&gt;test2.c&lt;/code&gt; you have to use &lt;code&gt;extern int test1_var;&lt;/code&gt; in &lt;code&gt;test2.c&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Digamos que tiene dos &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;archivos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;test1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si define una variable global &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int test1_var;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y desea acceder a esta variable en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , debe usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern int test1_var;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;test2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d66081df09dd5e01f739d9c0a5d76e7293a431e" translate="yes" xml:space="preserve">
          <source>Similar concerns arise with declaring and defining functions &amp;mdash;
analogous rules apply.
But the question was about variables specifically, so I've kept the
answer to variables only.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Surgen preocupaciones similares con la declaraci&amp;oacute;n y definici&amp;oacute;n de funciones; se aplican reglas an&amp;aacute;logas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero la pregunta se refer&amp;iacute;a espec&amp;iacute;ficamente a las variables, por lo que he mantenido la respuesta solo a las variables.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0c56a74ee1f96b0d8079ae6e5b226d54d822047f" translate="yes" xml:space="preserve">
          <source>So I;ll quickly try to explain it;
make a file called global.h.</source>
          <target state="translated">Así que rápidamente trataré de explicarlo;hacer un archivo llamado global.h.</target>
        </trans-unit>
        <trans-unit id="8385f075a12bbdc5e70d23e0ceb5ae6ecc928831" translate="yes" xml:space="preserve">
          <source>So you can decide to use a variable in a translation unit and then access it from another one, then in the second one you declare it as extern and the symbol will be resolved by the linker.</source>
          <target state="translated">Así que puedes decidir usar una variable en una unidad de traducción y luego acceder a ella desde otra,luego en la segunda la declaras como externa y el símbolo será resuelto por el enlazador.</target>
        </trans-unit>
        <trans-unit id="43a15273df226ddca52b8a56e10ecd6e8f3fc5c6" translate="yes" xml:space="preserve">
          <source>So, you need to include the body of &lt;code&gt;file3b.h&lt;/code&gt; at most once for
declarations, and at most once for definitions, but you might need both
in a single translation unit (TU &amp;mdash; a combination of a source file and
the headers it uses).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por lo tanto, debe incluir el cuerpo de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; como m&amp;aacute;ximo una vez para las declaraciones, y como m&amp;aacute;ximo una vez para las definiciones, pero es posible que necesite ambas en una sola unidad de traducci&amp;oacute;n (TU: una combinaci&amp;oacute;n de un archivo fuente y los encabezados que usa) .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="a00bf4b426cb9344af6da65574d0e65346416126" translate="yes" xml:space="preserve">
          <source>Tested on GCC 4.8.</source>
          <target state="translated">Probado en GCC 4.8.</target>
        </trans-unit>
        <trans-unit id="5f4082d773844f6a253a421efa8b7dbcaa5087a6" translate="yes" xml:space="preserve">
          <source>That's the best way to declare and define global variables.</source>
          <target state="translated">Es la mejor manera de declarar y definir las variables globales.</target>
        </trans-unit>
        <trans-unit id="1fa0668e0b0b88a97fdfcdbe88b694e8aa07437d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.sco.com/developers/gabi/2003-12-17/contents.html&quot;&gt;System V ABI Update ELF spec&lt;/a&gt; &quot;Symbol Table&quot; chapter explains:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;cap&amp;iacute;tulo &quot;Tabla de s&amp;iacute;mbolos&quot; de la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.sco.com/developers/gabi/2003-12-17/contents.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;especificaci&amp;oacute;n ELF de actualizaci&amp;oacute;n de ABI de System V&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; explica:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e7a6786d3bcfbdf53bf07c931eeddad4722af4a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extern&lt;/code&gt; can be declared in the &lt;code&gt;first.c&lt;/code&gt; file or in any of the header files &lt;code&gt;first.c&lt;/code&gt; includes.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se puede declarar en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;archivo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; o en cualquiera de los archivos de encabezado que &lt;/font&gt;&lt;/font&gt; &lt;code&gt;first.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; incluye.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d5b5c6a95c09ef6d4ca3c3561fa32abe65c578c3" translate="yes" xml:space="preserve">
          <source>The clean, reliable way to declare and define global variables is to use
a header file to contain an &lt;code&gt;extern&lt;/code&gt;&lt;em&gt;declaration&lt;/em&gt; of the variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La manera limpia y confiable de declarar y definir variables globales es usar un archivo de encabezado para contener una &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraci&amp;oacute;n &lt;/font&gt;&lt;/em&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; a&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; de la variable.&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9aef6ea03428b9fc0acfbc7857f968affaa48449" translate="yes" xml:space="preserve">
          <source>The complete programs shown use functions, so function declarations have
crept in.
Both C99 and C11 require functions to be declared or defined before they
are used (whereas C90 did not, for good reasons).
I use the keyword &lt;code&gt;extern&lt;/code&gt; in front of function declarations in headers
for consistency &amp;mdash;&amp;nbsp;to match the &lt;code&gt;extern&lt;/code&gt; in front of variable
declarations in headers.
Many people prefer not to use &lt;code&gt;extern&lt;/code&gt; in front of function
declarations; the compiler doesn't care &amp;mdash; and ultimately, neither do I
as long as you're consistent, at least within a source file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los programas completos mostrados usan funciones, por lo que las declaraciones de funciones se han infiltrado. Tanto C99 como C11 requieren que las funciones se declaren o definan antes de usarse (mientras que C90 no lo hizo, por buenas razones). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilizo la palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; delante de las declaraciones de funci&amp;oacute;n en los encabezados para mantener la coherencia, para que coincida con el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; delante de las declaraciones de variables en los encabezados. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Muchas personas prefieren no usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; frente a las declaraciones de funciones; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;al compilador no le importa, y en &amp;uacute;ltima instancia, tampoco a m&amp;iacute;, siempre y cuando sea coherente, al menos dentro de un archivo fuente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6c188ca39079cc387fa6e831f474927a3a98a2c9" translate="yes" xml:space="preserve">
          <source>The correct interpretation of extern is that you tell something to the compiler. You tell the compiler that, despite not being present right now, the variable declared will somehow be found by the linker (typically in another object (file)). The linker will then be the lucky guy to find everything and put it together, whether you had some extern declarations or not.</source>
          <target state="translated">La interpretación correcta de lo externo es que le digas algo al compilador.Le dices al compilador que,a pesar de no estar presente en este momento,la variable declarada será encontrada de alguna manera por el enlazador (típicamente en otro objeto (archivo)).El enlazador será entonces el afortunado que encuentre todo y lo junte,tanto si tiene algunas declaraciones externas como si no.</target>
        </trans-unit>
        <trans-unit id="6e436a831135dc09360e34bc37df40f4d70ac0ad" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;prog1.mk&lt;/code&gt; is a makefile for &lt;code&gt;prog1&lt;/code&gt; only.
It will work with most versions of &lt;code&gt;make&lt;/code&gt; produced since about the turn
of the millennium.
It is not tied specifically to GNU Make.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El archivo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1.mk&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es un archivo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;prog1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;para &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;prog1&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Funcionar&amp;aacute; con la mayor&amp;iacute;a de las versiones de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;make&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; producidas desde aproximadamente el cambio de milenio. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No est&amp;aacute; vinculado espec&amp;iacute;ficamente a GNU Make.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7293120480d17b27c8759b1f20a149ffee192f92" translate="yes" xml:space="preserve">
          <source>The header defining or declaring the global variables may not itself
define any types.</source>
          <target state="translated">El encabezado que define o declara las variables globales no puede definir por sí mismo ningún tipo.</target>
        </trans-unit>
        <trans-unit id="7b7da714f931cae85e6215688bb6c3ca4aa79753" translate="yes" xml:space="preserve">
          <source>The header defining or declaring the variables has stylized contents.</source>
          <target state="translated">El encabezado que define o declara las variables tiene un contenido estilizado.</target>
        </trans-unit>
        <trans-unit id="881e3003488bf6bc22590ba8ca6af1e94572af02" translate="yes" xml:space="preserve">
          <source>The header is included by the one source file that defines the variable
and by all the source files that reference the variable.
For each program, one source file (and only one source file) defines the
variable.
Similarly, one header file (and only one header file) should declare the
variable.
The header file is crucial; it enables cross-checking between
independent TUs (translation units &amp;mdash; think source files) and ensures
consistency.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El encabezado est&amp;aacute; incluido en un archivo fuente que define la variable y en todos los archivos fuente que hacen referencia a la variable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Para cada programa, un archivo fuente (y solo un archivo fuente) define la variable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Del mismo modo, un archivo de encabezado (y solo un archivo de encabezado) debe declarar la variable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El archivo de encabezado es crucial; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;permite la verificaci&amp;oacute;n cruzada entre TU independientes (unidades de traducci&amp;oacute;n - piense en archivos fuente) y garantiza la coherencia.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9b0982c12125f135a56e9b7b9b93b84a72be79fe" translate="yes" xml:space="preserve">
          <source>The header might be included twice indirectly.  For example, if
&lt;code&gt;file4b.h&lt;/code&gt; includes &lt;code&gt;file3b.h&lt;/code&gt; for a type definition that isn't shown,
and &lt;code&gt;file1b.c&lt;/code&gt; needs to use both header &lt;code&gt;file4b.h&lt;/code&gt; and &lt;code&gt;file3b.h&lt;/code&gt;, then
you have some more tricky issues to resolve.  Clearly, you might revise
the header list to include just &lt;code&gt;file4b.h&lt;/code&gt;.  However, you might not be
aware of the internal dependencies &amp;mdash; and the code should, ideally,
continue to work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El encabezado puede incluirse dos veces indirectamente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Por ejemplo, si &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; incluye &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para una definici&amp;oacute;n de tipo que no se muestra, y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1b.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; necesita usar el encabezado &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file3b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , entonces tiene algunos problemas m&amp;aacute;s dif&amp;iacute;ciles de resolver. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Claramente, puede revisar la lista de encabezados para incluir solo &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file4b.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin embargo, es posible que no conozca las dependencias internas, y el c&amp;oacute;digo deber&amp;iacute;a, idealmente, continuar funcionando.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad5463cb1a2550bdcee0063cc6aab1c6b96717cc" translate="yes" xml:space="preserve">
          <source>The issue becomes 'should the header include &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt;?'
If you omit that from the header and wrap any defining invocation with
&lt;code&gt;#define&lt;/code&gt; and &lt;code&gt;#undef&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El problema se convierte en '&amp;iquest;el encabezado debe incluir &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?' &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si omite eso del encabezado y ajusta cualquier invocaci&amp;oacute;n de definici&amp;oacute;n con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#define&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca8c7f41c38cdf3e3a420d496fe20b1669ca2fe6" translate="yes" xml:space="preserve">
          <source>The old forum post probably explained this a bit more clearly.
But this is a real potential &lt;code&gt;gotcha&lt;/code&gt; when using a compiler
that allows you to declare a variable in one file and then declare it extern as a different type in another. The problems associated with
that are if you say declared testing_mode as an int in another file
it would think it was a 16 bit var and overwrite some other part of ram, potentially corrupting another variable. Difficult to debug!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La antigua publicaci&amp;oacute;n del foro probablemente explic&amp;oacute; esto un poco m&amp;aacute;s claramente. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero esto es un potencial real &lt;/font&gt;&lt;/font&gt; &lt;code&gt;gotcha&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; cuando se utiliza un compilador que le permite declarar una variable en un archivo y luego declara que extern como un tipo diferente de otro. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Los problemas asociados con eso son si usted dice que testing_mode como int en otro archivo pensar&amp;iacute;a que es una variable de 16 bits y sobrescribe alguna otra parte de ram, corrompiendo potencialmente otra variable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Dif&amp;iacute;cil de depurar!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd5d906d82297c3f51dd5bfd35a77ab5a95c21c1" translate="yes" xml:space="preserve">
          <source>The problem with this scheme as shown is that it does not provide for
initialization of the global variable.  With C99 or C11 and variable argument
lists for macros, you could define a macro to support initialization too.
(With C89 and no support for variable argument lists in macros, there is no
easy way to handle arbitrarily long initializers.)</source>
          <target state="translated">El problema de este esquema,como se ha demostrado,es que no prevé la inicialización de la variable global.Con C99 o C11 y las listas de argumentos de las variables para las macros,se podría definir una macro para apoyar la inicialización también.(Con C89 y sin soporte para listas de argumentos variables en macros,no hay una forma fácil de manejar inicializadores arbitrariamente largos).</target>
        </trans-unit>
        <trans-unit id="a100dc688603b9855dccb98b1d1f682f7f302374" translate="yes" xml:space="preserve">
          <source>The restrictions for this to work are:</source>
          <target state="translated">Las restricciones para que esto funcione son:</target>
        </trans-unit>
        <trans-unit id="817577c0dba8ff76f06ecb331ce19468c50f265f" translate="yes" xml:space="preserve">
          <source>The source file that defines the variable also includes the header to
ensure that the definition and the declaration are consistent.</source>
          <target state="translated">El archivo fuente que define la variable también incluye el encabezado para asegurar que la definición y la declaración sean coherentes.</target>
        </trans-unit>
        <trans-unit id="d4b772b05a06cac7bb0184c048b64dbd8cfde377" translate="yes" xml:space="preserve">
          <source>There are, of course, many ways in which these guidelines can be broken.
Occasionally, there may be a good reason to break the guidelines, but
such occasions are extremely unusual.</source>
          <target state="translated">Hay,por supuesto,muchas maneras en las que estas pautas pueden romperse.Ocasionalmente,puede haber una buena razón para romper las directrices,pero tales ocasiones son extremadamente inusuales.</target>
        </trans-unit>
        <trans-unit id="45c5032bfdada5609c2370448a245a052a29943f" translate="yes" xml:space="preserve">
          <source>There may be more than one external definition for the identifier of
  an object, with or without the explicit use of the keyword extern; if
  the definitions disagree, or more than one is initialized, the
  behavior is undefined (6.9.2).</source>
          <target state="translated">Puede haber más de una definición externa para el identificador de un objeto,con o sin el uso explícito de la palabra clave externa;si las definiciones están en desacuerdo,o se inicializa más de una,el comportamiento es indefinido (6.9.2).</target>
        </trans-unit>
        <trans-unit id="613efa43e5434affe9e15d22d4e1e024d4b3661e" translate="yes" xml:space="preserve">
          <source>Therefore, you can compile a file that has reference to an extern, but you can not link if that memory is not declared somewhere.</source>
          <target state="translated">Por lo tanto,se puede compilar un archivo que tenga referencia a un externo,pero no se puede enlazar si esa memoria no está declarada en algún lugar.</target>
        </trans-unit>
        <trans-unit id="c9b97b2c028b841b1846cc6fdc42d04072316ebb" translate="yes" xml:space="preserve">
          <source>This is getting a tad convoluted, but seems to be secure (using the
&lt;code&gt;file2d.h&lt;/code&gt;, with no &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; in the &lt;code&gt;file2d.h&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto se est&amp;aacute; volviendo un poco complicado, pero parece ser seguro (usando el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , sin &lt;/font&gt;&lt;/font&gt; &lt;code&gt;#undef DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b34220934ee7097d45ec16b1f39cdc06990ce05c" translate="yes" xml:space="preserve">
          <source>This is related to sharing variables across source files, but how does that work precisely? Where do I use &lt;code&gt;extern&lt;/code&gt;?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto est&amp;aacute; relacionado con el intercambio de variables entre los archivos de origen, pero &amp;iquest;c&amp;oacute;mo funciona eso con precisi&amp;oacute;n? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;D&amp;oacute;nde uso &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b26cccfc838dc87d9352f2df2d799c257b1ab113" translate="yes" xml:space="preserve">
          <source>This means in main.c the variable will be declared as an &lt;code&gt;unsigned char&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto significa que en main.c la variable se declarar&amp;aacute; como un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;unsigned char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0cdc8cef1f761b10fca19330ff90c99ad24c5ab7" translate="yes" xml:space="preserve">
          <source>This problem was elegantly solved in a microchip forum some 15 years ago
    /* See &quot;http:www.htsoft.com&quot;                                          &lt;em&gt;/
    /&lt;/em&gt;  &quot;forum/all/showflat.php/Cat/0/Number/18766/an/0/page/0#18766&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este problema se resolvi&amp;oacute; con elegancia en un foro de microchips hace unos 15 a&amp;ntilde;os / * Consulte &quot;http: www.htsoft.com&quot; &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;/ /&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;forum / all / showflat.php / Cat / 0 / Number / 18766 / an / 0 / page / 0 # 18766 &quot;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1a73e1af2aaacc00d1cd325e01a80669806fdc81" translate="yes" xml:space="preserve">
          <source>This scheme avoids most problems.  You only run into a problem if a
header that defines variables (such as &lt;code&gt;file2c.h&lt;/code&gt;) is included by
another header (say &lt;code&gt;file7c.h&lt;/code&gt;) that defines variables.  There isn't an
easy way around that other than &quot;don't do it&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Este esquema evita la mayor&amp;iacute;a de los problemas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Solo se encuentra con un problema si un encabezado que define variables (como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) est&amp;aacute; incluido por otro encabezado (digamos &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file7c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) que define variables. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No hay una forma f&amp;aacute;cil de evitar eso que no sea &quot;no lo hagas&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="44af17a2c4063b43decac8e1cae615f4b3460a01" translate="yes" xml:space="preserve">
          <source>This technique does not conform to the letter of the C standard and the
'one definition rule' &amp;mdash; it is officially undefined behaviour:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esta t&amp;eacute;cnica no se ajusta a la letra del est&amp;aacute;ndar C y la 'regla de una definici&amp;oacute;n': es un comportamiento oficialmente indefinido:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="834eaf33179075a7b392e7c567aed8127afebf2e" translate="yes" xml:space="preserve">
          <source>Use the header technique I showed first.
It works reliably and everywhere.
Note, in particular, that the header declaring the &lt;code&gt;global_variable&lt;/code&gt; is
included in every file that uses it &amp;mdash; including the one that defines it.
This ensures that everything is self-consistent.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Use la t&amp;eacute;cnica de encabezado que mostr&amp;eacute; primero. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Funciona de manera confiable y en todas partes. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tenga en cuenta, en particular, que el encabezado que declara la &lt;/font&gt;&lt;/font&gt; &lt;code&gt;global_variable&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se incluye en cada archivo que lo usa, incluido el que lo define. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto asegura que todo sea autoconsistente.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="827dad75e8eff41948c16f2f906a0a5cf440530d" translate="yes" xml:space="preserve">
          <source>Useful for global variables and libraries, but dangerous because the linker does not type check.</source>
          <target state="translated">Útil para las variables globales y las bibliotecas,pero peligroso porque el enlazador no hace chequeos.</target>
        </trans-unit>
        <trans-unit id="3cec43eba69cc62d6d9de66bb4bb713dd116f9e1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;extern&lt;/code&gt; is only of relevance when the program you're building
consists of multiple source files linked together, where some of the
variables defined, for example, in source file &lt;code&gt;file1.c&lt;/code&gt; need to be
referenced in other source files, such as &lt;code&gt;file2.c&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; solo es relevante cuando el programa que est&amp;aacute; compilando consta de varios archivos fuente vinculados entre s&amp;iacute;, donde algunas de las variables definidas, por ejemplo, en el archivo fuente &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file1.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; necesitan referenciarse en otros archivos fuente, como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2.c&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dff64534b2d3fcd7442b5b287f36d602ab155e5b" translate="yes" xml:space="preserve">
          <source>Variable initialization</source>
          <target state="translated">Inicialización variable</target>
        </trans-unit>
        <trans-unit id="c75bc9dff7e8d81c6cd4dfe243da0ab578e98698" translate="yes" xml:space="preserve">
          <source>Violating the guidelines</source>
          <target state="translated">Violando las directrices</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="fcfcc815dcd79de6f2c15216333f810c99f05a23" translate="yes" xml:space="preserve">
          <source>When encountering an extern, the compiler can only find out its type, not where it &quot;lives&quot;, so it can't resolve the reference.</source>
          <target state="translated">Cuando se encuentra con un externo,el compilador sólo puede averiguar su tipo,no dónde &quot;vive&quot;,por lo que no puede resolver la referencia.</target>
        </trans-unit>
        <trans-unit id="4aa8d09dde0212e5912861447ea4ddcb68b44e7f" translate="yes" xml:space="preserve">
          <source>With some (indeed, many) C compilers, you can get away with what's
called a 'common' definition of a variable too.
'Common', here, refers to a technique used in Fortran for sharing
variables between source files, using a (possibly named) COMMON block.
What happens here is that each of a number of files provides a tentative
definition of the variable.
As long as no more than one file provides an initialized definition,
then the various files end up sharing a common single definition of the
variable:</source>
          <target state="translated">Con algunos (de hecho,muchos)compiladores de C,también puedes salirte con lo que se llama una definición &quot;común&quot; de una variable.&quot;Común&quot;,aquí,se refiere a una técnica usada en Fortran para compartir variables entre archivos fuente,usando un (posiblemente llamado)bloque COMÚN.Lo que sucede aquí es que cada uno de un número de archivos proporciona una definición tentativa de la variable.Mientras no haya más de un archivo que proporcione una definición inicializada,entonces los diversos archivos terminan compartiendo una definición común única de la variable:</target>
        </trans-unit>
        <trans-unit id="e97b0cf5af1e3bf4f73bd3e791107eb6c586682e" translate="yes" xml:space="preserve">
          <source>With xc8 you have to be careful about declaring a variable
as the same type in each file as you could , erroneously,
declare something an &lt;code&gt;int&lt;/code&gt; in one file and a &lt;code&gt;char&lt;/code&gt; say in another.
This could lead to corruption of variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Con xc8, debe tener cuidado al declarar una variable como el mismo tipo en cada archivo, ya que podr&amp;iacute;a, err&amp;oacute;neamente, declarar algo un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en un archivo y un &lt;/font&gt;&lt;/font&gt; &lt;code&gt;char&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; decir en otro. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto podr&amp;iacute;a conducir a la corrupci&amp;oacute;n de las variables.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="caacde4797253a581eb62bb22566c1e32c10a196" translate="yes" xml:space="preserve">
          <source>You are telling it, &quot;Trust me.  At link time this reference will be resolvable.&quot;</source>
          <target state="translated">Le estás diciendo:&quot;Confía en mí.En el momento del enlace esta referencia será resoluble&quot;.</target>
        </trans-unit>
        <trans-unit id="5c908956bd8754f5c212be4e435320dee0ec8a38" translate="yes" xml:space="preserve">
          <source>You can partially work around the problem by revising &lt;code&gt;file2c.h&lt;/code&gt; into
&lt;code&gt;file2d.h&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Puede solucionar el problema parcialmente revisando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2c.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en &lt;/font&gt;&lt;/font&gt; &lt;code&gt;file2d.h&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7009bafb4698e3725a791f4b4a860ab0a0858b9f" translate="yes" xml:space="preserve">
          <source>You get the following output : The value of a is &amp;lt;5&amp;gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Obtiene el siguiente resultado: el valor de a es &amp;lt;5&amp;gt;&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="135bbaa156861ecfec5dedc9176c377fb5bd0cb3" translate="yes" xml:space="preserve">
          <source>You may declare a variable multiple times (though once is sufficient);
you may only define it once within a given scope.
A variable definition is also a declaration, but not all variable
declarations are definitions.</source>
          <target state="translated">Puede declarar una variable varias veces (aunque una vez es suficiente);sólo puede definirla una vez dentro de un ámbito determinado.Una definición de variable es también una declaración,pero no todas las declaraciones de variables son definiciones.</target>
        </trans-unit>
        <trans-unit id="3a9e349d10f0bd9616d27d00bd04e467dc645845" translate="yes" xml:space="preserve">
          <source>broken_header.h</source>
          <target state="translated">broken_header.h</target>
        </trans-unit>
        <trans-unit id="d5b1ef39d032b550cec6ec1007b182e41ada7193" translate="yes" xml:space="preserve">
          <source>example.c</source>
          <target state="translated">example.c</target>
        </trans-unit>
        <trans-unit id="bc45783e0ca44daa72354d9947288fb7166a506f" translate="yes" xml:space="preserve">
          <source>example1.c</source>
          <target state="translated">example1.c</target>
        </trans-unit>
        <trans-unit id="cce814c5b0b4fb333c5c802ed983c32c15ae7bf6" translate="yes" xml:space="preserve">
          <source>extern tells the compiler to trust you that the memory for this variable is declared elsewhere, so it doesnt try to allocate/check memory.</source>
          <target state="translated">externo le dice al compilador que confíe en ti que la memoria de esta variable está declarada en otro lugar,por lo que no trata de asignar la memoria de comprobación.</target>
        </trans-unit>
        <trans-unit id="fa057fe4ce31229cf2c9ca183338d8b4566a8f7c" translate="yes" xml:space="preserve">
          <source>external.h</source>
          <target state="translated">external.h</target>
        </trans-unit>
        <trans-unit id="8f974661c27deca057542254f0c5c08df7394688" translate="yes" xml:space="preserve">
          <source>externdef.h</source>
          <target state="translated">externdef.h</target>
        </trans-unit>
        <trans-unit id="1519bb244ac7f4f2b557e89ea8b33f782e38cb81" translate="yes" xml:space="preserve">
          <source>faulty_header.h</source>
          <target state="translated">faulty_header.h</target>
        </trans-unit>
        <trans-unit id="cc233bcad9c75ba5434e30146eb0d92e2fc492e4" translate="yes" xml:space="preserve">
          <source>file1.c</source>
          <target state="translated">file1.c</target>
        </trans-unit>
        <trans-unit id="94af44728c38066445637ed33989a10662b4be8d" translate="yes" xml:space="preserve">
          <source>file10.c</source>
          <target state="translated">file10.c</target>
        </trans-unit>
        <trans-unit id="1a4db11f876ac75ec4a04118feb407872381e8bd" translate="yes" xml:space="preserve">
          <source>file11.c</source>
          <target state="translated">file11.c</target>
        </trans-unit>
        <trans-unit id="c60df4c309bbe1fd634e717ca4e654c2e5a2afd3" translate="yes" xml:space="preserve">
          <source>file12.c</source>
          <target state="translated">file12.c</target>
        </trans-unit>
        <trans-unit id="63422742612ee2d040272390d76dcc10d3ba6d8a" translate="yes" xml:space="preserve">
          <source>file1a.c</source>
          <target state="translated">file1a.c</target>
        </trans-unit>
        <trans-unit id="8c90848246876bdfe0a4ba356e814c8096902645" translate="yes" xml:space="preserve">
          <source>file1b.c</source>
          <target state="translated">file1b.c</target>
        </trans-unit>
        <trans-unit id="602c880cd3d85cf5d1501b64ef5e0a3d9020fb69" translate="yes" xml:space="preserve">
          <source>file1c.h</source>
          <target state="translated">file1c.h</target>
        </trans-unit>
        <trans-unit id="3e8c5c1e55a2790f5986353365d101820cb79b4c" translate="yes" xml:space="preserve">
          <source>file2.c</source>
          <target state="translated">file2.c</target>
        </trans-unit>
        <trans-unit id="b364bc3969ae4e240e4c2af8569851e565f1d3c8" translate="yes" xml:space="preserve">
          <source>file2a.c</source>
          <target state="translated">file2a.c</target>
        </trans-unit>
        <trans-unit id="3071e8d0fbd2b11dfe7e3f801c592900f9a955aa" translate="yes" xml:space="preserve">
          <source>file2b.c</source>
          <target state="translated">file2b.c</target>
        </trans-unit>
        <trans-unit id="8c580d84c0126805fedaab26a3cbacac98151314" translate="yes" xml:space="preserve">
          <source>file2c.h</source>
          <target state="translated">file2c.h</target>
        </trans-unit>
        <trans-unit id="5cd31b420f39b05d5ebf1851db8408a262c78ced" translate="yes" xml:space="preserve">
          <source>file2d.h</source>
          <target state="translated">file2d.h</target>
        </trans-unit>
        <trans-unit id="51db95ab333814a2f0cf2d336fbc77e5d4574a39" translate="yes" xml:space="preserve">
          <source>file3.h</source>
          <target state="translated">file3.h</target>
        </trans-unit>
        <trans-unit id="a68ae471fa40518093366a4faf9f455eec1d65cb" translate="yes" xml:space="preserve">
          <source>file3a.h</source>
          <target state="translated">file3a.h</target>
        </trans-unit>
        <trans-unit id="66129162d6eb113e02ef3f0515786aaed562d6ea" translate="yes" xml:space="preserve">
          <source>file3b.h</source>
          <target state="translated">file3b.h</target>
        </trans-unit>
        <trans-unit id="a6f6f45e5894881c9c4d56933a40555105304af8" translate="yes" xml:space="preserve">
          <source>file3c.c</source>
          <target state="translated">file3c.c</target>
        </trans-unit>
        <trans-unit id="6bed332d6a20a59aca373a629fb1406fec6d17a0" translate="yes" xml:space="preserve">
          <source>file4c.c</source>
          <target state="translated">file4c.c</target>
        </trans-unit>
        <trans-unit id="c82b7655ce78fdb20797f9a0b529460c414cad9a" translate="yes" xml:space="preserve">
          <source>file5c.c</source>
          <target state="translated">file5c.c</target>
        </trans-unit>
        <trans-unit id="e3569eeff213c66ee68ba8129e95a015af94492b" translate="yes" xml:space="preserve">
          <source>file6c.c</source>
          <target state="translated">file6c.c</target>
        </trans-unit>
        <trans-unit id="389f6f288bbd8c87170840fb566bc2a58914e727" translate="yes" xml:space="preserve">
          <source>file7c.c</source>
          <target state="translated">file7c.c</target>
        </trans-unit>
        <trans-unit id="f750d9359ba952e035041c47c471d03be546dae0" translate="yes" xml:space="preserve">
          <source>file8c.c</source>
          <target state="translated">file8c.c</target>
        </trans-unit>
        <trans-unit id="649ce7257b5d407a411c8a3a892db26b13538aa6" translate="yes" xml:space="preserve">
          <source>file8c.h</source>
          <target state="translated">file8c.h</target>
        </trans-unit>
        <trans-unit id="2c268161bcd37e38aa327365c829e292a5df9692" translate="yes" xml:space="preserve">
          <source>file9c.c</source>
          <target state="translated">file9c.c</target>
        </trans-unit>
        <trans-unit id="e546a9945e5fbbf012ee47c501d2fd647f6189ad" translate="yes" xml:space="preserve">
          <source>in the source code (so the headers never alter the value of
&lt;code&gt;DEFINE_VARIABLES&lt;/code&gt;), then you should be clean.  It is just a nuisance to
have to remember to write the the extra line.  An alternative might be:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en el c&amp;oacute;digo fuente (para que los encabezados nunca alteren el valor de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;DEFINE_VARIABLES&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ), entonces debe estar limpio. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Es solo una molestia tener que recordar escribir la l&amp;iacute;nea extra. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una alternativa podr&amp;iacute;a ser:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="406e031b8824ea26ae0bf4d7579a1d89e3fb5906" translate="yes" xml:space="preserve">
          <source>main.c</source>
          <target state="translated">main.c</target>
        </trans-unit>
        <trans-unit id="93365afb1329c154f67f66abb34e7ec554e7e414" translate="yes" xml:space="preserve">
          <source>prog1.c</source>
          <target state="translated">prog1.c</target>
        </trans-unit>
        <trans-unit id="ae51ce8fa46448ec348078275a9b0392b4e5a612" translate="yes" xml:space="preserve">
          <source>prog1.h</source>
          <target state="translated">prog1.h</target>
        </trans-unit>
        <trans-unit id="d0cfc1b7cd134217aa1eee2c1f5eb03303856b18" translate="yes" xml:space="preserve">
          <source>prog1.mk</source>
          <target state="translated">prog1.mk</target>
        </trans-unit>
        <trans-unit id="ac81dfe96b76fa35c693ddb6ff7df89fa25ca4a5" translate="yes" xml:space="preserve">
          <source>prog2.c</source>
          <target state="translated">prog2.c</target>
        </trans-unit>
        <trans-unit id="9a2c603c45c08d4af91fc8d86e74f4bf0ece1530" translate="yes" xml:space="preserve">
          <source>prog2.h</source>
          <target state="translated">prog2.h</target>
        </trans-unit>
        <trans-unit id="29a7b48708db879ef7d5301795b122b78c096c5a" translate="yes" xml:space="preserve">
          <source>prog3.c</source>
          <target state="translated">prog3.c</target>
        </trans-unit>
        <trans-unit id="57d004dc92d1b9ca86e4f162742b13e88ad1cf3f" translate="yes" xml:space="preserve">
          <source>prog3.h</source>
          <target state="translated">prog3.h</target>
        </trans-unit>
        <trans-unit id="af366bc1058daa94590fd146182289cbdd2bf946" translate="yes" xml:space="preserve">
          <source>prog4.c</source>
          <target state="translated">prog4.c</target>
        </trans-unit>
        <trans-unit id="e615acdea9dc98e713fe90f5346ef04f37644c99" translate="yes" xml:space="preserve">
          <source>prog4.h</source>
          <target state="translated">prog4.h</target>
        </trans-unit>
        <trans-unit id="3dd95e946ea8548116d3346d8410def41f81c5cf" translate="yes" xml:space="preserve">
          <source>prog5.c</source>
          <target state="translated">prog5.c</target>
        </trans-unit>
        <trans-unit id="0ab4dfc395d6335679526b820fe8b24221395ae0" translate="yes" xml:space="preserve">
          <source>prog8.c</source>
          <target state="translated">prog8.c</target>
        </trans-unit>
        <trans-unit id="3af43e4333ca180e16d8a7d37246776c42e95676" translate="yes" xml:space="preserve">
          <source>seldom_correct.h</source>
          <target state="translated">seldom_correct.h</target>
        </trans-unit>
        <trans-unit id="1166b4b12a2519496b1dfaf6e7f4d98b4f0edf4b" translate="yes" xml:space="preserve">
          <source>step 1)cc -o ex example.c example1.c
step 2)./ex</source>
          <target state="translated">paso 1)cc -o ejemplo.c ejemplo1.c paso 2).ex</target>
        </trans-unit>
        <trans-unit id="c35d0d128f82b9ae6bbaba048a190422b8e2bf8c" translate="yes" xml:space="preserve">
          <source>which is basically the behavior the C standard gives to &lt;code&gt;extern&lt;/code&gt; variables.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;que es b&amp;aacute;sicamente el comportamiento que el est&amp;aacute;ndar C da a las &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;variables &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; as&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
