<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/1470488">
    <body>
      <group id="1470488">
        <trans-unit id="50a459f1669475395e2cd1093e7fecf50dddab26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; should be used for 95% of cases. It makes it so the variable reference can't change, thus array, object, and DOM node properties can change and should likely be &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 95 %의 경우에 사용해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 참조를 변경할 수 없도록 배열, 객체 및 DOM 노드 속성이 변경 될 수 있으며 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;const&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이어야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9ff56a83273ba2d872c12e448ba217ced10dec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; should be be used for any variable expecting to be reassigned. This includes within a for loop. If you ever write &lt;code&gt;varName =&lt;/code&gt; beyond the initialization, use &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 재 할당 될 것으로 예상 어떤 변수에 사용되어야한다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기에는 for 루프가 포함됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;초기화 이상으로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;varName =&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쓰면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let&lt;/code&gt; 을&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하십시오&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c95a9fb0840fb74fe4273ad18226be86bedc55af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var x = 1&lt;/code&gt;&lt;strong&gt;declares variable&lt;/strong&gt;&lt;code&gt;x&lt;/code&gt; in current scope (aka execution context). If the declaration appears in a function - a local variable is declared; if it's in global scope - a global variable is declared.</source>
          <target state="translated">&lt;code&gt;var x = 1&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 현재 범위 (일명 실행 컨텍스트)에서 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 &lt;/font&gt;&lt;/strong&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언합니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언이 함수에 나타나면 지역 변수가 선언됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 범위에 있으면 전역 변수가 선언됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4499c44e6911cb45b29ab51516cecc4cc2689ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declares a variable &lt;em&gt;in the current scope&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 범위에서&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수 &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선언합니다&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70ce3bccad6abbc5eef98e13b7ac4dc6a34f19cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; was the pre-ES6 way to declare a variable. We are now &lt;em&gt;in the future&lt;/em&gt;, and you should be coding as such.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 변수를 선언하는 ES6 이전의 방법이었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;우리는 지금 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;미래에&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있으며, 당신은 그렇게 코딩해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ac3ff1b2520539ac10e1b1265bf74a079ef6ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x = 1&lt;/code&gt;, on the other hand, is merely a property assignment. It first tries to resolve &lt;code&gt;x&lt;/code&gt; against scope chain. If it finds it anywhere in that scope chain, it performs assignment; if it doesn't find &lt;code&gt;x&lt;/code&gt;, only then does &lt;strong&gt;it creates &lt;code&gt;x&lt;/code&gt; property on a global object&lt;/strong&gt; (which is a top level object in a scope chain).</source>
          <target state="translated">&lt;code&gt;x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반면에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x = 1&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 은 속성 할당 일뿐입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;먼저 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;범위 체인에 대해 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 해결하려고 시도합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;해당 범위 체인의 어느 곳에서나 발견되면 할당을 수행합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그것이 발견되지 않으면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 단 후 수행 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 생성 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전역 객체 속성&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (범위 체인의 최상위 목적).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af13201ddc24dc571d398f654d280a2518121ad1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(&lt;code&gt;i&lt;/code&gt; is reset at every iteration of the loop, as it's not declared locally in the &lt;code&gt;for&lt;/code&gt; loop but globally) eventually resulting in infinite loop&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 루프 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 로컬로 선언되지 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;않고 전역 적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언되므로 루프의 모든 반복에서 재설정됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;) 결국 무한 루프가 발생합니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ece97d29bd76535aaa6375b3eb70cb76ae58c31c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;NOTE&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;: This question was asked from the viewpoint of ECMAScript version 3 or 5. The answers might become outdated with the introduction of new features in the release of ECMAScript 6.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참고&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :이 질문은 ECMAScript 버전 3 또는 5의 관점에서 제기되었습니다. ECMAScript 6 릴리스에 새로운 기능이 도입되어 답변이 오래 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8115e639335d833240663506049d0442b68dbba5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusion&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusion&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="676f8b6a6df963994f145f8e721340590b3a88c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;There's a difference&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이가&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75dc3466d60fc7b0ab4a242508831e37e541c1f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[Update 2010/12/16]&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2010/12/16 업데이트]&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15749b0e49feae8502f746946fb037a28cb462c0" translate="yes" xml:space="preserve">
          <source>@Chris S gave a nice example showcasing the practical difference (and danger) between &lt;code&gt;var&lt;/code&gt; and no &lt;code&gt;var&lt;/code&gt;. Here's another one, I find this one particularly dangerous because the difference is only visible in an asynchronous environment so it can easily slip by during testing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Chris S는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 no &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사이의 실제적인 차이 (및 위험)를 보여주는 좋은 예를 보여주었습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기 또 다른 하나가 있습니다.이 차이는 비동기 환경에서만 볼 수 있으므로 테스트 중에 쉽게 빠져들 수 있기 때문에 특히 위험합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad516aba9de0bc92580b7826e23c0a7c4a4fe7c1" translate="yes" xml:space="preserve">
          <source>A rule of thumb is to always use &lt;code&gt;var&lt;/code&gt;, because otherwise you run the risk of introducing subtle bugs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경험상 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;미묘한 버그가 발생할 위험이 있기 때문에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항상 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하는 것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5d9e0760725264eaa807c85d71d66c3db737614" translate="yes" xml:space="preserve">
          <source>Always declare &lt;code&gt;var&lt;/code&gt; explicitly because it's good practice</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;좋은 습관이기 때문에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항상 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 명시 적으로 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언하십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a1b6bb77b4c9a7b3057300ef71d941b32987edc" translate="yes" xml:space="preserve">
          <source>Always use the &lt;code&gt;var&lt;/code&gt; keyword to declare variables. Why? Good coding practice should be enough of a reason in itself, but omitting it means it is declared in the &lt;strong&gt;global&lt;/strong&gt; scope (a variable like this is called an &quot;implied&quot; global). Douglas Crockford &lt;a href=&quot;http://javascript.crockford.com/code.html#variable%20declarations&quot;&gt;recommends never using implied globals&lt;/a&gt;, and according to the &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/ScriptingAutomation/Conceptual/JSCodingGuide/Advanced/Advanced.html#//apple_ref/doc/uid/TP40006541&quot;&gt;Apple JavaScript Coding Guidelines&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수를 선언 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하려면 항상 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;왜? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;좋은 코딩 관행은 그 자체로 충분한 이유가되지만,이를 생략하면 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 범위 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 선언되었음을 의미합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(이와 같은 변수를 &quot;암시 적&quot;전역이라고 함). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Douglas Crockford &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javascript.crockford.com/code.html#variable%20declarations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 암시 적 글로벌을 사용하지&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 말고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/ScriptingAutomation/Conceptual/JSCodingGuide/Advanced/Advanced.html#//apple_ref/doc/uid/TP40006541&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Apple JavaScript 코딩 지침&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 따라 다음을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;권장합니다&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7cacc4776fe490a54f10614e914b71dd71d7b174" translate="yes" xml:space="preserve">
          <source>Any variable created without the &lt;code&gt;var&lt;/code&gt;
  keyword is created at the global scope
  and is not garbage collected when the
  function returns (because it doesn&amp;rsquo;t
  go out of scope), presenting the
  opportunity for a memory leak.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;없이 생성 된 변수 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;는 전역 범위에서 생성되며 함수가 범위를 벗어나지 않기 때문에 함수가 반환 될 때 가비지 수집되지 않으므로 메모리 누수가 발생할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d26370d68e4b529b10005e80671c731452169f9f" translate="yes" xml:space="preserve">
          <source>As someeone trying to learn this this is how I see it. The above examples were maybe a bit overly complicated for a beginner.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;누군가 이것을 배우려고 노력할 때 이것이 내가 보는 방법입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위의 예는 초보자에게는 약간 복잡했을 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="648bb981154b488e531fa2b7f0c07e720b93739d" translate="yes" xml:space="preserve">
          <source>As you'd expect the following snippet outputs &lt;code&gt;[&quot;text&quot;]&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 스 니펫 출력 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[&quot;text&quot;]&lt;/code&gt; 이&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 예상됩니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3671985bf227c62b8cbe939f72ba78ebe122748b" translate="yes" xml:space="preserve">
          <source>Because it sees the variables in the function as seperate from those outside of it, hence the term local variable and this was because we used var in the assignment. If you take away the var in the function so it now reads like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수의 변수가 외부 변수와 분리 된 것으로 간주되므로 지역 변수라는 용어가 할당에 var를 사용했기 때문입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수에서 var를 제거하면 다음과 같이 읽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aefdc6cf773153fe4a0018b9ebe37e4aabf50532" translate="yes" xml:space="preserve">
          <source>Besides scopes issue, some folks also mention &lt;a href=&quot;https://www.w3schools.com/js/js_hoisting.asp&quot;&gt;hoisting&lt;/a&gt;, but no one gave an example. Here's one for global scope:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;스코프 문제 외에도 일부 사람들은 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.w3schools.com/js/js_hoisting.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;게양&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 언급 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지만 아무도 예를 제시하지 못했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;글로벌 범위에 대한 내용은 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ded685dc3f638415720835d72b5c0007cb6044c" translate="yes" xml:space="preserve">
          <source>Both have block level scoping, as expected in most other languages.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 언어 모두 대부분의 다른 언어에서 예상되는대로 블록 수준 범위를 가지고 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="cddbd5d2793c851c432bf6f96ac2d6a3c2efa394" translate="yes" xml:space="preserve">
          <source>But behaves differently with multiple ones:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 여러 가지와 다르게 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2fffb4b9c2120cd3b141b0e8624555e6f35da296" translate="yes" xml:space="preserve">
          <source>But this is just theory of course, and &lt;strong&gt;in practice there are even more differences between the two&lt;/strong&gt;, due to various bugs in implementations (such as those from IE).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 이것은 물론 이론 일 뿐이며 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;실제로&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 구현의 다양한 버그 (IE의 버그)로 인해 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘 사이에 더 많은 차이점이&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0d5e6712079fbcd2dc852510d7a96cd020ca370" translate="yes" xml:space="preserve">
          <source>Declaring a variable in scopes different from window using &lt;code&gt;var&lt;/code&gt;&lt;strong&gt;is not the same thing&lt;/strong&gt; as declaring a variable without &lt;code&gt;var&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 창에서 다른 범위에서 변수 선언 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;같은 일을하지&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 않고 변수를 선언 같은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0c83c050eeca138dbe313d3b29b6cd65df49461" translate="yes" xml:space="preserve">
          <source>Declaring a variable in the global scope (window) using &lt;code&gt;var&lt;/code&gt; is the same as omitting it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하여 전역 범위 (창)에서 변수를 선언하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것은 생략하는 것과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d90bf163bcb2db235a413e32b79d547a9c66b83e" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;var&lt;/code&gt;!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하지 마십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fdac6a9db88caf89ef6c216bc856226ea30a3b8" translate="yes" xml:space="preserve">
          <source>EDIT:
After the critiques I received, I would like to emphasize the following:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;편집 : 내가받은 비평 후에 다음을 강조하고 싶습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ed86afdd520260d1183342c68b990e7a84d61654" translate="yes" xml:space="preserve">
          <source>Executing the data manipulation asynchronously still produces the same result with a single executor:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;데이터 조작을 비동기 적으로 실행하면 여전히 단일 실행기로 동일한 결과가 생성됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="0dd7c4917bd5ac303fcc5d926156bb3bdac17df9" translate="yes" xml:space="preserve">
          <source>For more information, you can search &quot;scope chain JavaScript&quot; in Google.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용을 보려면 Google에서 &quot;scope chain JavaScript&quot;를 검색하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e57d6ff0b73ee4b6534bd0d8d6db93d74cfd77fe" translate="yes" xml:space="preserve">
          <source>Here's quite a good example of how you can get caught out from not declaring local variables with &lt;code&gt;var&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; 로&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 지역 변수를 선언하지 않는 방법에 대한 좋은 예입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d24361b3d9af831744494bab652bf0904b1abcc" translate="yes" xml:space="preserve">
          <source>Hope it all makes sense : )</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;모든 것이 이해되기를 바랍니다. :)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="278b534ec8e14213e74ca09168734ffa587a74c5" translate="yes" xml:space="preserve">
          <source>I see people are confused when declaring variables with or without &lt;strong&gt;var&lt;/strong&gt; and inside or outside the function. Here is a deep example that will walk you through these steps:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;var&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 있거나없는 변수와 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 내부 또는 외부에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수를 선언 할 때 사람들이 혼란 스럽습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 이러한 단계를 안내하는 자세한 예입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="392d90156f85d314ea3524aeb9adf02b8c040ff8" translate="yes" xml:space="preserve">
          <source>I would say it's better to use &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt; in most situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대부분의 상황에서 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;var&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용하는 것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95254ece773a99b6b2446961e8bde455ffa71bf9" translate="yes" xml:space="preserve">
          <source>If the variable is declared with var inside a function only (like d in testVar1 or testVar2) it will will be undefined whenever the function ends. So it will be temporary variable in a function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수가 함수 내에서만 var로 선언되면 (testVar1 또는 testVar2의 d와 같이) 함수가 종료 될 때마다 변수가 정의되지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 함수에서 임시 변수가됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c2d464adceebc02be96318568bd5f0cee501ade8" translate="yes" xml:space="preserve">
          <source>If the variable is declared without var inside a function (like c), it will act like the previous rule, it will preserve its value across all functions from now on. Either it got its first value in function testVar1() it still preserves the value and get additional value in function testVar2()</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수가 c와 같이 함수 내부에 var없이 선언 된 경우 이전 규칙처럼 작동하며 지금부터 모든 함수에서 값을 유지합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 testVar1 ()에서 첫 번째 값을 얻거나 여전히 값을 유지하고 함수 testVar2 ()에서 추가 값을 얻습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f53c4e7d0f314a3f01533b8d6df39bbc5ea3d03c" translate="yes" xml:space="preserve">
          <source>If you do not use &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt; to declare a variable, the variable will be in global scope.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;var&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 변수를 선언 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하지 않으면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수가 전역 범위에있게됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39c5726d10134ef67233d2162946f5ce8d89a7a0" translate="yes" xml:space="preserve">
          <source>If you run this code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 코드를 실행하면 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1362cfaddd572ae35c459e4a2d075b7589090e04" translate="yes" xml:space="preserve">
          <source>If you're in a function then &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt; will create a local variable, &quot;no var&quot; will look up the scope chain until it finds the variable or hits the global scope (at which point it will create it):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수에 있다면 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;var&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 로컬 변수를 생성합니다. &quot;no var&quot;는 변수를 찾거나 전역 범위에 도달 할 때까지 범위 체인을 조회합니다 (이 시점에서 변수가 생성됨).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="567442a365f8e1172a362a7bfa6b28c56e13ddc5" translate="yes" xml:space="preserve">
          <source>If you're in the global scope then there's not much difference. Read &lt;a href=&quot;https://stackoverflow.com/a/1471738/1541051&quot;&gt;Kangax's&lt;/a&gt; answer for explanation</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신이 글로벌 범위에 있다면 큰 차이가 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;설명을 위해 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1471738/1541051&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Kangax의&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 답변을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;읽으십시오&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="684f51fe3c6e9a2cd98e8e26d4fe7982c0b10afa" translate="yes" xml:space="preserve">
          <source>If you're not doing an assignment then you need to use &lt;code&gt;var&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할당을하지 않으면 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 사용해야합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75ddf84fa9fd986bd218dbcb0159c239ed354aed" translate="yes" xml:space="preserve">
          <source>In ES5 (ECMAScript 5; recently standardized, 5th edition of the language) there's a so-called &quot;strict mode&quot; &amp;mdash; an opt-in language mode, which slightly changes the behavior of undeclared assignments. In strict mode, assignment to an undeclared identifier is a &lt;strong&gt;ReferenceError&lt;/strong&gt;. The rationale for this was to catch accidental assignments, preventing creation of undesired global properties. Some of the newer browsers have already started rolling support for strict mode. See, for example, &lt;a href=&quot;http://kangax.github.com/es5-compat-table&quot;&gt;my compat table&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES5 (ECMAScript 5; 최근 표준화 된 5 번째 언어 버전)에는 소위 &quot;엄격 모드&quot;(선택 언어 모드)가 있으며 선언되지 않은 할당의 동작을 약간 변경합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;엄격 모드에서 선언되지 않은 식별자에 대한 지정은 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ReferenceError&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이에 대한 이론적 근거는 우발적 인 할당을 포착하여 원하지 않는 글로벌 속성의 생성을 방지하는 것이 었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;일부 최신 브라우저는 이미 엄격 모드에 대한 지원을 계속 제공하기 시작했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://kangax.github.com/es5-compat-table&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내 compat 테이블&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 참조하십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2aecaa3ada288824428e9a5930bf9c4c86fbd57c" translate="yes" xml:space="preserve">
          <source>Inside a code you if you use a variable without using var, then what happens is the automatically var var_name is placed in the global scope eg:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드 내에서 var를 사용하지 않고 변수를 사용하면 자동으로 var var_name이 전역 범위에 배치됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1944f63a2520656dd1863bd1cf3ff057276757a8" translate="yes" xml:space="preserve">
          <source>It might be better to think of it as the difference between &quot;&lt;strong&gt;local&lt;/strong&gt; and &lt;strong&gt;nearest&lt;/strong&gt;&quot;. The nearest can surely be global, but that won't always be the case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;local&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 가까운&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 차이점으로 생각하는 것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가장 가까운 것은 반드시 전역일 수 있지만 항상 그런 것은 아닙니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fd0170f28132668b781164ef4a7f444052bd81b" translate="yes" xml:space="preserve">
          <source>Its value is &lt;code&gt;undefined&lt;/code&gt; ( Its value is not &lt;code&gt;null&lt;/code&gt; and it is not equal to &lt;code&gt;null&lt;/code&gt; interestingly.).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그 값은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (값은 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이 아니며 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;흥미롭게 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 같지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e76c29e1a3e9b26eec9ed7514a7cb785d3add93d" translate="yes" xml:space="preserve">
          <source>Local variables are always faster than the variables in global scope.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;지역 변수는 항상 전역 범위의 변수보다 빠릅니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a55428ee3f8e91b8e9361a3d555244249e1d0c11" translate="yes" xml:space="preserve">
          <source>More info on &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/with&quot;&gt;&lt;code&gt;with&lt;/code&gt; - MDN&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에 대한 자세한 정보 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - MDN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3df1bd5af933b5d2ffe740ae29130b487f63b38" translate="yes" xml:space="preserve">
          <source>No matter declared with or without var (like a, b) if they get their value outside the function, they will preserve their value and also any other values that are added inside various functions through the script are preserved.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;var (예 : a, b)와 함께 선언되거나 선언되지 않은 함수에 관계없이 값을 가져 오면 값을 유지하고 스크립트를 통해 다양한 함수에 추가 된 다른 값도 유지됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1db4a5a88f9462694e56a0ebed2ae05fc7476c68" translate="yes" xml:space="preserve">
          <source>Not using &lt;code&gt;var&lt;/code&gt; implicitly declares &lt;code&gt;var&lt;/code&gt; in the global scope (window)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하지 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 암시 적으로 선언 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전역 범위에서 (창)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02b35ff758a58328dba9a2651f7ef048ad38014f" translate="yes" xml:space="preserve">
          <source>Now, notice that it doesn't declare a global variable, it creates a global property.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이제 전역 변수를 선언하지 않고 전역 속성을 만듭니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="043667ed3fc4ad66e38fe2db89cdd560510b59f5" translate="yes" xml:space="preserve">
          <source>On the other hand you can define a vaiable like;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반면에 vaiable을 정의 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="365d5c0c6b2622c82804f5ad19b9284375cfa8a7" translate="yes" xml:space="preserve">
          <source>Saying it's the difference between &quot;&lt;strong&gt;local&lt;/strong&gt; and &lt;strong&gt;global&lt;/strong&gt;&quot; isn't entirely accurate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로컬&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;글로벌&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 차이점 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 완전히 정확하지 않다고 말하면됩니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="568c986c2fa481f1c954e7d1f9fcbf645322f2e9" translate="yes" xml:space="preserve">
          <source>See the script below in action here at jsfiddle</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;jsfiddle의 아래 스크립트를 참조하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d4fe542efe0d5275c08fbd1fadbbe1b796a1d1d" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;var&lt;/code&gt; declares a variable &lt;em&gt;in the current scope&lt;/em&gt; , there is no difference between declaring &lt;code&gt;var&lt;/code&gt;&lt;strong&gt;inside window&lt;/strong&gt; and not declaring it at all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이후 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; 에&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 변수 선언 &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;현재 범위를&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 선언 사이에는 차이가 없다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; 에&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;내부 창을&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전혀 그것을 선언하지가.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f84ba3d9a5a6ba1624588a0020794bbf4bbbc18e" translate="yes" xml:space="preserve">
          <source>Since variable declaration creates property with the DontDelete flag, the difference between &lt;code&gt;var x = 1&lt;/code&gt; and &lt;code&gt;x = 1&lt;/code&gt; (when executed in global scope) is that the former one - variable declaration - creates the DontDelete'able property, and latter one doesn't. As a consequence, the property created via this implicit assignment can then be deleted from the global object, and the former one - the one created via variable declaration - cannot be deleted.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 선언은 DontDelete 플래그를 사용하여 속성을 생성하므로 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 과 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (전역 범위에서 실행될 때) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 차이점 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;은 이전의 변수 선언은 DontDelete'able 속성을 만들고 후자는 그렇지 않습니다. . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결과적으로이 암시 적 할당을 통해 생성 된 속성은 전역 객체에서 삭제 될 수 있으며 이전 속성 (변수 선언을 통해 생성 된 속성)은 삭제할 수 없습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a5b64e7da16a457aef55185587bfa79983d510a" translate="yes" xml:space="preserve">
          <source>So does the following snippet (note the missing &lt;code&gt;let&lt;/code&gt; before &lt;code&gt;array&lt;/code&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 스 니펫도 마찬가지입니다 ( &lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 전에 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;누락 된 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let&lt;/code&gt; 참조&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ).&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="431ffdf1d536b062b4db4bea2ffc094843f5a9fb" translate="yes" xml:space="preserve">
          <source>Strongly recommended to &lt;strong&gt;ALWAYS&lt;/strong&gt; use &lt;code&gt;var&lt;/code&gt; statement, because init global variable in local context - is evil. But, if you need this dirty trick, you should write comment at start of page:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;로컬 컨텍스트에서 전역 변수를 초기화하는 것은 좋지 않기 때문에 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;항상 &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 문을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것이 좋습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나이 더러운 트릭이 필요하면 페이지 시작 부분에 주석을 작성해야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01f486418a7f7e0b87f7505ef747ef5218937570" translate="yes" xml:space="preserve">
          <source>The difference between the two is subtle and might be confusing unless you understand that &lt;strong&gt;variable declarations also create properties&lt;/strong&gt; (only on a Variable Object) and that every property in Javascript (well, ECMAScript) have certain flags that describe their properties - ReadOnly, DontEnum and DontDelete.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;둘 사이의 차이는 미묘하고 당신이 이해하지 혼동 될 수있는 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 선언은 또한 속성 생성&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (만 변수 객체에를) 자바 스크립트 (물론, ECMAScript를)의 모든 속성은 특정 속성을 설명하는 플래그가 그 - 읽기 전용, DontEnum 및 삭제하지 마십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30c7cf5eb22ea9425e8cea1ba0f2139361e1a878" translate="yes" xml:space="preserve">
          <source>The difference comes when you're not directly inside the window, e.g. inside a function or inside a block.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;차이점은 창 내부에 있지 않은 경우 (예 : 함수 내부 또는 블록 내부)에 발생합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7afad152c06ff7383a8a12fd0871f5f7c85821a" translate="yes" xml:space="preserve">
          <source>The global scope is &lt;code&gt;window&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;글로벌 범위는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5e88d9446577a89541536cb132d7205cdf1107f" translate="yes" xml:space="preserve">
          <source>The output is false, false, false, false</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력은 false, false, false, false입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a001fc43a617436f0270abcfb7b1644b3f64fe7d" translate="yes" xml:space="preserve">
          <source>The output will read as:  false, false, true, true</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;출력은 false, false, true, true로 읽습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c154cc21ec489852be888084733fec962f21294b" translate="yes" xml:space="preserve">
          <source>This is because rather than creating a new variable in the local scope or function it simply uses the global variables and reassigns them to false.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 로컬 범위 또는 함수에서 새 변수를 만드는 것이 아니라 단순히 전역 변수를 사용하여 false로 다시 할당하기 때문입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ae3c4b2b2e272bb3d99fc62076cf95294168c7f0" translate="yes" xml:space="preserve">
          <source>This is example code I have written for you to understand this concept:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은이 개념을 이해하기 위해 작성한 예제 코드입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="86e51c54af332f976cb5a779f636121143a60d03" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;const&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하고 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2681815ba9144830d84335134d593a7b9795b67" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;var&lt;/code&gt; is always a good idea to prevent variables from cluttering the global scope and variables from conflicting with each other, causing unwanted overwriting.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; 를&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 전역 범위를 어지럽히고 변수가 서로 충돌하여 원하지 않는 덮어 쓰기가 발생하지 않도록하는 것이 좋습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8498522bb7975baec141bc69e58ad19fc014259" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;var&lt;/code&gt; lets you hide external variables that have the same name. In this way you can simulate a &quot;private&quot; variable, but that's another topic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 같은 이름이있는 외부 변수를 숨길 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이런 식으로 &quot;비공개&quot;변수를 시뮬레이션 할 수 있지만 이는 또 다른 주제입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9b6fb10723d16a6ac48829d3a4497a9043f6980" translate="yes" xml:space="preserve">
          <source>Using let however:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 let 사용 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4906efc7267c8351bf5b979540c54df3da79ef7c" translate="yes" xml:space="preserve">
          <source>What exactly is the function of the &lt;code&gt;var&lt;/code&gt; keyword in JavaScript, and what is the difference between</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;의 기능은 정확히 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;무엇이며 차이점은 무엇입니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="758ca9ad7b12f9ed5b67f8ec012817879d7955f1" translate="yes" xml:space="preserve">
          <source>What is the purpose of the var keyword and when should I use it (or omit it)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;var 키워드의 목적은 무엇이며 언제 사용해야합니까 (또는 생략해야합니까)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="28d5eb31d94815ea65bfaad6447a7ebd8a7e7de0" translate="yes" xml:space="preserve">
          <source>When Javascript is executed in a browser, all your code is surrounded by a with statement, like so:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Javascript가 브라우저에서 실행될 때 모든 코드는 다음과 같이 with 문으로 둘러싸입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7bb9228f6081f083a2b973e1437459ece8c7be1" translate="yes" xml:space="preserve">
          <source>When the value is assigned to a variable in javascript, the interpreter first tries to find the &amp;ldquo;variable declaration&amp;rdquo; in the same context/scope as that of assignment. When the interpreter executes &lt;code&gt;dummyVariable = 20&lt;/code&gt;, it looks up for the declaration of dummyVariable at beginning of the function. 
(Since all Variable declarations are moved to the beginning of the context by javascript interpreter and this is called hoisting)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바 스크립트에서 변수에 값을 할당하면 인터프리터는 먼저 할당과 동일한 컨텍스트 / 범위에서 &quot;변수 선언&quot;을 찾습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;인터프리터가 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dummyVariable = 20&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 실행 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면 함수 시작시 dummyVariable 선언을 찾습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(모든 변수 선언이 자바 스크립트 인터프리터에 의해 컨텍스트의 시작으로 이동되므로이를 호이 스팅이라고 함)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b976cd212cdef4a97d04d7f351af666826a8c712" translate="yes" xml:space="preserve">
          <source>When variables get defined without the use of var keyword, what it looks like is a simple &amp;ldquo;assignment&amp;rdquo; operation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;var 키워드를 사용하지 않고 변수를 정의하면 간단한 &quot;할당&quot;작업이 나타납니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d38e65e5fed4a0351f74089258d5276352d71896" translate="yes" xml:space="preserve">
          <source>When would you use either one, and why/what does it do?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;언제 하나를 사용하고 왜 / 무엇을합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d84313cef3699a4dc71c21ba2ba2f3e7056ea9b1" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;var&lt;/code&gt; - global variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 없이 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-전역 변수.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0038c0ad3dedff26bcb8caff8ac8a2e53f0784b" translate="yes" xml:space="preserve">
          <source>Without using &quot;var&quot; variables can only define when set a value. In example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;var&quot;을 사용하지 않으면 변수는 값을 설정할 때만 정의 할 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1f01145498d215dada93ebddd6f73769191e877" translate="yes" xml:space="preserve">
          <source>You may also want to look at &lt;a href=&quot;http://www.yourtechchick.com/javascript/what-is-hoisting-in-javascript-javascript-hoisting-explained/&quot;&gt;hoisting in javascript&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;당신은 또한 &lt;/font&gt;&lt;a href=&quot;http://www.yourtechchick.com/javascript/what-is-hoisting-in-javascript-javascript-hoisting-explained/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자바 스크립트&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;게양&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을보고 싶을 수도 있습니다&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68bb2b7f8b270c5f0e4a0878da658ccff83a008c" translate="yes" xml:space="preserve">
          <source>You should use var keyword unless you intend to have the variable attached to window object in browser. &lt;a href=&quot;http://www.yourtechchick.com/javascript/difference-between-javascript-variables-with-var-and-without-var/&quot;&gt;Here's a link that explains scoping and difference between glocal scoping and local scoping with and wihtout var keyword.&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;브라우저에서 변수를 window 객체에 첨부하지 않으려면 var 키워드를 사용해야합니다. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.yourtechchick.com/javascript/difference-between-javascript-variables-with-var-and-without-var/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 var 키워드를 사용하여 glocal 범위 지정과 로컬 범위 지정의 차이점과 범위를 설명하는 링크입니다.&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="b13d77a64c0a73e7706da22d3d1a50bb815e5c89" translate="yes" xml:space="preserve">
          <source>another difference 
e.g</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 차이점&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d69535e3b8a9d122af21d58f179a89f49e79dc8b" translate="yes" xml:space="preserve">
          <source>cannot work in &lt;strong&gt;global scope&lt;/strong&gt; or &lt;strong&gt;any other scope&lt;/strong&gt;. It should be with value like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 범위&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 나 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 범위&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서는 작동하지 않습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음과 같은 값을 가져야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="translated">while</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
