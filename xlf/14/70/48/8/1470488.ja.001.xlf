<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1470488">
    <body>
      <group id="1470488">
        <trans-unit id="50a459f1669475395e2cd1093e7fecf50dddab26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; should be used for 95% of cases. It makes it so the variable reference can't change, thus array, object, and DOM node properties can change and should likely be &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ケースの95％には&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;const&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数参照を変更できないようにするため、配列、オブジェクト、およびDOMノードのプロパティが変更され、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;const&lt;/code&gt; である&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可能性があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9ff56a83273ba2d872c12e448ba217ced10dec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; should be be used for any variable expecting to be reassigned. This includes within a for loop. If you ever write &lt;code&gt;varName =&lt;/code&gt; beyond the initialization, use &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、再割り当てが予想される変数に使用する必要があります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これにはforループ内が含まれます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;初期化を超えて&lt;/font&gt;&lt;/font&gt; &lt;code&gt;varName =&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;記述する場合は&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;let&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c95a9fb0840fb74fe4273ad18226be86bedc55af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var x = 1&lt;/code&gt;&lt;strong&gt;declares variable&lt;/strong&gt;&lt;code&gt;x&lt;/code&gt; in current scope (aka execution context). If the declaration appears in a function - a local variable is declared; if it's in global scope - a global variable is declared.</source>
          <target state="translated">&lt;code&gt;var x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、現在のスコープ（別名実行コンテキスト）で&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言します&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言が関数に現れる場合-ローカル変数が宣言されます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グローバルスコープ内にある場合-グローバル変数が宣言されます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4499c44e6911cb45b29ab51516cecc4cc2689ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declares a variable &lt;em&gt;in the current scope&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のスコープで&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言します&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70ce3bccad6abbc5eef98e13b7ac4dc6a34f19cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; was the pre-ES6 way to declare a variable. We are now &lt;em&gt;in the future&lt;/em&gt;, and you should be coding as such.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、変数を宣言するES6より前の方法でした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私たちは今&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;未来にいる&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので、そのようにコーディングする必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ac3ff1b2520539ac10e1b1265bf74a079ef6ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x = 1&lt;/code&gt;, on the other hand, is merely a property assignment. It first tries to resolve &lt;code&gt;x&lt;/code&gt; against scope chain. If it finds it anywhere in that scope chain, it performs assignment; if it doesn't find &lt;code&gt;x&lt;/code&gt;, only then does &lt;strong&gt;it creates &lt;code&gt;x&lt;/code&gt; property on a global object&lt;/strong&gt; (which is a top level object in a scope chain).</source>
          <target state="translated">&lt;code&gt;x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一方、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x = 1&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は単なるプロパティの割り当てです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;まず&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、スコープチェーンに対して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を解決しようとします&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのスコープチェーンのどこかにそれが見つかると、割り当てを実行します。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が見つからない場合に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のみ&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、グローバルオブジェクト&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（スコープチェーンの最上位オブジェクト）に&lt;/font&gt;&lt;strong&gt; &lt;code&gt;x&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作成します&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af13201ddc24dc571d398f654d280a2518121ad1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(&lt;code&gt;i&lt;/code&gt; is reset at every iteration of the loop, as it's not declared locally in the &lt;code&gt;for&lt;/code&gt; loop but globally) eventually resulting in infinite loop&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それがでローカルに宣言されていないとして、ループの反復ごとにリセットされる&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、最終的に無限ループになるグローバルループけど）&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ece97d29bd76535aaa6375b3eb70cb76ae58c31c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;NOTE&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;: This question was asked from the viewpoint of ECMAScript version 3 or 5. The answers might become outdated with the introduction of new features in the release of ECMAScript 6.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：この質問は、ECMAScriptバージョン3または5の観点から尋ねられました。ECMAScript6のリリースでの新機能の導入により、回答が古くなる可能性があります。&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8115e639335d833240663506049d0442b68dbba5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusion&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusion&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="676f8b6a6df963994f145f8e721340590b3a88c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;There's a difference&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;違いがあり&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75dc3466d60fc7b0ab4a242508831e37e541c1f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[Update 2010/12/16]&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[2010年12月16日更新]&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15749b0e49feae8502f746946fb037a28cb462c0" translate="yes" xml:space="preserve">
          <source>@Chris S gave a nice example showcasing the practical difference (and danger) between &lt;code&gt;var&lt;/code&gt; and no &lt;code&gt;var&lt;/code&gt;. Here's another one, I find this one particularly dangerous because the difference is only visible in an asynchronous environment so it can easily slip by during testing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@Chris Sは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;とno &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の実際的な違い（および危険性）を示す良い例を示しました&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは別の問題です。違いは非同期環境でのみ確認できるため、テスト中に簡単にずれてしまう可能性があるため、これは特に危険です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad516aba9de0bc92580b7826e23c0a7c4a4fe7c1" translate="yes" xml:space="preserve">
          <source>A rule of thumb is to always use &lt;code&gt;var&lt;/code&gt;, because otherwise you run the risk of introducing subtle bugs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;経験則では、常に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用し&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。そうしないと、微妙なバグが発生するリスクがあるためです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5d9e0760725264eaa807c85d71d66c3db737614" translate="yes" xml:space="preserve">
          <source>Always declare &lt;code&gt;var&lt;/code&gt; explicitly because it's good practice</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; は&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に良い宣言である&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ため、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;明示的に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言する&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a1b6bb77b4c9a7b3057300ef71d941b32987edc" translate="yes" xml:space="preserve">
          <source>Always use the &lt;code&gt;var&lt;/code&gt; keyword to declare variables. Why? Good coding practice should be enough of a reason in itself, but omitting it means it is declared in the &lt;strong&gt;global&lt;/strong&gt; scope (a variable like this is called an &quot;implied&quot; global). Douglas Crockford &lt;a href=&quot;http://javascript.crockford.com/code.html#variable%20declarations&quot;&gt;recommends never using implied globals&lt;/a&gt;, and according to the &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/ScriptingAutomation/Conceptual/JSCodingGuide/Advanced/Advanced.html#//apple_ref/doc/uid/TP40006541&quot;&gt;Apple JavaScript Coding Guidelines&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数を宣言するに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、常に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どうして？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コーディングの実践はそれ自体で十分な理由ですが、それを省略すると、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グローバル&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スコープで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます（このような変数は「暗黙の」グローバルと呼ばれます）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ダグラス・クロックフォードは、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javascript.crockford.com/code.html#variable%20declarations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;暗黙のグローバルを使用したことがないことをお勧めします&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、とによると&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/ScriptingAutomation/Conceptual/JSCodingGuide/Advanced/Advanced.html#//apple_ref/doc/uid/TP40006541&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、アップルはJavaScriptのコーディング・ガイドライン&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7cacc4776fe490a54f10614e914b71dd71d7b174" translate="yes" xml:space="preserve">
          <source>Any variable created without the &lt;code&gt;var&lt;/code&gt;
  keyword is created at the global scope
  and is not garbage collected when the
  function returns (because it doesn&amp;rsquo;t
  go out of scope), presenting the
  opportunity for a memory leak.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; キーワード&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なしで作成された変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はグローバルスコープで作成され、関数が返されたときにガベージコレクションされません（スコープから外れないため）。これにより、メモリリークが発生する可能性があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d26370d68e4b529b10005e80671c731452169f9f" translate="yes" xml:space="preserve">
          <source>As someeone trying to learn this this is how I see it. The above examples were maybe a bit overly complicated for a beginner.</source>
          <target state="translated">これを学ぼうとしている者として、私はこれをどのように見ています。上記の例は初心者には少し複雑すぎるかもしれません。</target>
        </trans-unit>
        <trans-unit id="648bb981154b488e531fa2b7f0c07e720b93739d" translate="yes" xml:space="preserve">
          <source>As you'd expect the following snippet outputs &lt;code&gt;[&quot;text&quot;]&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;予想通り、次のスニペット出力&lt;/font&gt;&lt;/font&gt; &lt;code&gt;[&quot;text&quot;]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3671985bf227c62b8cbe939f72ba78ebe122748b" translate="yes" xml:space="preserve">
          <source>Because it sees the variables in the function as seperate from those outside of it, hence the term local variable and this was because we used var in the assignment. If you take away the var in the function so it now reads like this:</source>
          <target state="translated">それは、関数内の変数をそれの外側から分離したものとして見ているので、それ故に用語ローカル変数と、これは私たちが代入でvarを使用していたからです。関数内のvarを取り除くと、次のように読み取れます。</target>
        </trans-unit>
        <trans-unit id="aefdc6cf773153fe4a0018b9ebe37e4aabf50532" translate="yes" xml:space="preserve">
          <source>Besides scopes issue, some folks also mention &lt;a href=&quot;https://www.w3schools.com/js/js_hoisting.asp&quot;&gt;hoisting&lt;/a&gt;, but no one gave an example. Here's one for global scope:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スコープの問題に加えて、一部の人々は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.w3schools.com/js/js_hoisting.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;巻き上げ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;についても言及して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いますが、誰&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;も&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;例を挙げていません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下はグローバルスコープの1つです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ded685dc3f638415720835d72b5c0007cb6044c" translate="yes" xml:space="preserve">
          <source>Both have block level scoping, as expected in most other languages.</source>
          <target state="translated">どちらも他のほとんどの言語で期待されているように、ブロックレベルのスコーピングを持っています。</target>
        </trans-unit>
        <trans-unit id="cddbd5d2793c851c432bf6f96ac2d6a3c2efa394" translate="yes" xml:space="preserve">
          <source>But behaves differently with multiple ones:</source>
          <target state="translated">しかし、複数のものでは異なる挙動をする。</target>
        </trans-unit>
        <trans-unit id="2fffb4b9c2120cd3b141b0e8624555e6f35da296" translate="yes" xml:space="preserve">
          <source>But this is just theory of course, and &lt;strong&gt;in practice there are even more differences between the two&lt;/strong&gt;, due to various bugs in implementations (such as those from IE).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、これはもちろん理論に過ぎず&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、実際には&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、実装のさまざまなバグ（IEのバグなど）により&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、2つのにはさらに大きな違いがあり&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0d5e6712079fbcd2dc852510d7a96cd020ca370" translate="yes" xml:space="preserve">
          <source>Declaring a variable in scopes different from window using &lt;code&gt;var&lt;/code&gt;&lt;strong&gt;is not the same thing&lt;/strong&gt; as declaring a variable without &lt;code&gt;var&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してwindowとは異なるスコープで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数を宣言することは、&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;なしで変数を宣言する&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こと&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じではありません&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0c83c050eeca138dbe313d3b29b6cd65df49461" translate="yes" xml:space="preserve">
          <source>Declaring a variable in the global scope (window) using &lt;code&gt;var&lt;/code&gt; is the same as omitting it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用してグローバルスコープ（ウィンドウ）で変数を宣言することは、変数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を省略することと同じです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d90bf163bcb2db235a413e32b79d547a9c66b83e" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;var&lt;/code&gt;!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は使用しないでください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fdac6a9db88caf89ef6c216bc856226ea30a3b8" translate="yes" xml:space="preserve">
          <source>EDIT:
After the critiques I received, I would like to emphasize the following:</source>
          <target state="translated">EDIT:いただいた講評を受けて、次のことを強調したいと思います。</target>
        </trans-unit>
        <trans-unit id="ed86afdd520260d1183342c68b990e7a84d61654" translate="yes" xml:space="preserve">
          <source>Executing the data manipulation asynchronously still produces the same result with a single executor:</source>
          <target state="translated">データ操作を非同期に実行すると、単一の実行者でも同じ結果が得られます。</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="0dd7c4917bd5ac303fcc5d926156bb3bdac17df9" translate="yes" xml:space="preserve">
          <source>For more information, you can search &quot;scope chain JavaScript&quot; in Google.</source>
          <target state="translated">詳しくはGoogleで「スコープチェーン JavaScript」と検索してみてください。</target>
        </trans-unit>
        <trans-unit id="e57d6ff0b73ee4b6534bd0d8d6db93d74cfd77fe" translate="yes" xml:space="preserve">
          <source>Here's quite a good example of how you can get caught out from not declaring local variables with &lt;code&gt;var&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; で&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ローカル変数を宣言しないことから抜け出す方法の良い例を次に示します&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d24361b3d9af831744494bab652bf0904b1abcc" translate="yes" xml:space="preserve">
          <source>Hope it all makes sense : )</source>
          <target state="translated">それがすべて意味を成すことを願っています :)</target>
        </trans-unit>
        <trans-unit id="278b534ec8e14213e74ca09168734ffa587a74c5" translate="yes" xml:space="preserve">
          <source>I see people are confused when declaring variables with or without &lt;strong&gt;var&lt;/strong&gt; and inside or outside the function. Here is a deep example that will walk you through these steps:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;varの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有無にかかわらず&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、関数の内部または外部で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数を宣言するときに、混乱して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;いるようです。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;以下は、これらの手順を説明する深い例です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="392d90156f85d314ea3524aeb9adf02b8c040ff8" translate="yes" xml:space="preserve">
          <source>I would say it's better to use &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt; in most situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ほとんどの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;場合、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;var&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する方が良いと思い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95254ece773a99b6b2446961e8bde455ffa71bf9" translate="yes" xml:space="preserve">
          <source>If the variable is declared with var inside a function only (like d in testVar1 or testVar2) it will will be undefined whenever the function ends. So it will be temporary variable in a function.</source>
          <target state="translated">変数が関数内でのみvarで宣言されている場合(testVar1やtestVar2のdのように)、関数が終了するたびに未定義になります。そのため、関数内では一時的な変数となります。</target>
        </trans-unit>
        <trans-unit id="c2d464adceebc02be96318568bd5f0cee501ade8" translate="yes" xml:space="preserve">
          <source>If the variable is declared without var inside a function (like c), it will act like the previous rule, it will preserve its value across all functions from now on. Either it got its first value in function testVar1() it still preserves the value and get additional value in function testVar2()</source>
          <target state="translated">変数が関数内でvarなしで宣言されている場合(cのような)、前のルールと同じように動作し、今後すべての関数で値を保持します。関数 testVar1()で最初の値を取得した場合はまだ値を保持し、関数 testVar2()で追加の値を取得します。</target>
        </trans-unit>
        <trans-unit id="f53c4e7d0f314a3f01533b8d6df39bbc5ea3d03c" translate="yes" xml:space="preserve">
          <source>If you do not use &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt; to declare a variable, the variable will be in global scope.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;var&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して変数を宣言&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しない場合&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、変数はグローバルスコープになります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39c5726d10134ef67233d2162946f5ce8d89a7a0" translate="yes" xml:space="preserve">
          <source>If you run this code:</source>
          <target state="translated">このコードを実行すると</target>
        </trans-unit>
        <trans-unit id="1362cfaddd572ae35c459e4a2d075b7589090e04" translate="yes" xml:space="preserve">
          <source>If you're in a function then &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt; will create a local variable, &quot;no var&quot; will look up the scope chain until it finds the variable or hits the global scope (at which point it will create it):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;関数内にいる場合、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;var&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はローカル変数を作成し、「no var」は変数が見つかるか、グローバルスコープに到達するまでスコープチェーンを検索します（その時点で変数が作成されます）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="567442a365f8e1172a362a7bfa6b28c56e13ddc5" translate="yes" xml:space="preserve">
          <source>If you're in the global scope then there's not much difference. Read &lt;a href=&quot;https://stackoverflow.com/a/1471738/1541051&quot;&gt;Kangax's&lt;/a&gt; answer for explanation</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グローバルスコープの場合は、それほど大きな違いはありません。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1471738/1541051&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Kangaxの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;回答を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;読ん&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で説明する&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="684f51fe3c6e9a2cd98e8e26d4fe7982c0b10afa" translate="yes" xml:space="preserve">
          <source>If you're not doing an assignment then you need to use &lt;code&gt;var&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;割り当てを行わない場合は、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用する必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75ddf84fa9fd986bd218dbcb0159c239ed354aed" translate="yes" xml:space="preserve">
          <source>In ES5 (ECMAScript 5; recently standardized, 5th edition of the language) there's a so-called &quot;strict mode&quot; &amp;mdash; an opt-in language mode, which slightly changes the behavior of undeclared assignments. In strict mode, assignment to an undeclared identifier is a &lt;strong&gt;ReferenceError&lt;/strong&gt;. The rationale for this was to catch accidental assignments, preventing creation of undesired global properties. Some of the newer browsers have already started rolling support for strict mode. See, for example, &lt;a href=&quot;http://kangax.github.com/es5-compat-table&quot;&gt;my compat table&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES5（ECMAScript 5、最近標準化された第5版の言語）には、いわゆる「厳密モード」、つまり宣言されていない割り当ての動作をわずかに変更するオプトイン言語モードがあります。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;厳密モードでは、宣言されていない識別子への割り当ては&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ReferenceError&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これの理由は、偶発的な割り当てをキャッチして、不要なグローバルプロパティの作成を防ぐことでした。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;新しいブラウザの一部は、strictモードのサポートのローリングをすでに開始しています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://kangax.github.com/es5-compat-table&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私の互換表を&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2aecaa3ada288824428e9a5930bf9c4c86fbd57c" translate="yes" xml:space="preserve">
          <source>Inside a code you if you use a variable without using var, then what happens is the automatically var var_name is placed in the global scope eg:</source>
          <target state="translated">コードの内部では、あなたがvarを使用せずに変数を使用する場合、何が起こるかは、自動的にvar var var_nameは、グローバルスコープなどに配置されています。</target>
        </trans-unit>
        <trans-unit id="1944f63a2520656dd1863bd1cf3ff057276757a8" translate="yes" xml:space="preserve">
          <source>It might be better to think of it as the difference between &quot;&lt;strong&gt;local&lt;/strong&gt; and &lt;strong&gt;nearest&lt;/strong&gt;&quot;. The nearest can surely be global, but that won't always be the case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ローカル&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も近い&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;との&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;違いと考えた方がいいかもしれません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最も近いのは確かにグローバルですが、常にそうであるとは限りません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fd0170f28132668b781164ef4a7f444052bd81b" translate="yes" xml:space="preserve">
          <source>Its value is &lt;code&gt;undefined&lt;/code&gt; ( Its value is not &lt;code&gt;null&lt;/code&gt; and it is not equal to &lt;code&gt;null&lt;/code&gt; interestingly.).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その値は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（その値は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ではなく、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;興味深いことに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と等しくありません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e76c29e1a3e9b26eec9ed7514a7cb785d3add93d" translate="yes" xml:space="preserve">
          <source>Local variables are always faster than the variables in global scope.</source>
          <target state="translated">ローカル変数は、グローバルスコープ内の変数よりも常に高速です。</target>
        </trans-unit>
        <trans-unit id="a55428ee3f8e91b8e9361a3d555244249e1d0c11" translate="yes" xml:space="preserve">
          <source>More info on &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/with&quot;&gt;&lt;code&gt;with&lt;/code&gt; - MDN&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細情報&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - MDN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3df1bd5af933b5d2ffe740ae29130b487f63b38" translate="yes" xml:space="preserve">
          <source>No matter declared with or without var (like a, b) if they get their value outside the function, they will preserve their value and also any other values that are added inside various functions through the script are preserved.</source>
          <target state="translated">varの有無に関係なく宣言されていても(a,bのように)、関数の外で値を取得した場合、それらはその値を保持し、また、スクリプトを介して様々な関数の内部に追加された他の任意の値が保持されている場合は、その値を保持します。</target>
        </trans-unit>
        <trans-unit id="1db4a5a88f9462694e56a0ebed2ae05fc7476c68" translate="yes" xml:space="preserve">
          <source>Not using &lt;code&gt;var&lt;/code&gt; implicitly declares &lt;code&gt;var&lt;/code&gt; in the global scope (window)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用しないと、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;暗黙的に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がグローバルスコープ（ウィンドウ）で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言さ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れます&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02b35ff758a58328dba9a2651f7ef048ad38014f" translate="yes" xml:space="preserve">
          <source>Now, notice that it doesn't declare a global variable, it creates a global property.</source>
          <target state="translated">ここで、グローバル変数を宣言するのではなく、グローバルプロパティを作成していることに注目してください。</target>
        </trans-unit>
        <trans-unit id="043667ed3fc4ad66e38fe2db89cdd560510b59f5" translate="yes" xml:space="preserve">
          <source>On the other hand you can define a vaiable like;</source>
          <target state="translated">一方で、バイアブルのように定義することもできます。</target>
        </trans-unit>
        <trans-unit id="365d5c0c6b2622c82804f5ad19b9284375cfa8a7" translate="yes" xml:space="preserve">
          <source>Saying it's the difference between &quot;&lt;strong&gt;local&lt;/strong&gt; and &lt;strong&gt;global&lt;/strong&gt;&quot; isn't entirely accurate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それが「&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ローカル&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グローバル&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;」&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の違いだと言うこと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は完全に正確ではありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="568c986c2fa481f1c954e7d1f9fcbf645322f2e9" translate="yes" xml:space="preserve">
          <source>See the script below in action here at jsfiddle</source>
          <target state="translated">以下のスクリプトをjsfiddleでご覧ください。</target>
        </trans-unit>
        <trans-unit id="5d4fe542efe0d5275c08fbd1fadbbe1b796a1d1d" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;var&lt;/code&gt; declares a variable &lt;em&gt;in the current scope&lt;/em&gt; , there is no difference between declaring &lt;code&gt;var&lt;/code&gt;&lt;strong&gt;inside window&lt;/strong&gt; and not declaring it at all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は現在のスコープ&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ので&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;window内で&lt;/font&gt;&lt;/strong&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣言することとまったく宣言しないことの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;間に違いは&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ありません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f84ba3d9a5a6ba1624588a0020794bbf4bbbc18e" translate="yes" xml:space="preserve">
          <source>Since variable declaration creates property with the DontDelete flag, the difference between &lt;code&gt;var x = 1&lt;/code&gt; and &lt;code&gt;x = 1&lt;/code&gt; (when executed in global scope) is that the former one - variable declaration - creates the DontDelete'able property, and latter one doesn't. As a consequence, the property created via this implicit assignment can then be deleted from the global object, and the former one - the one created via variable declaration - cannot be deleted.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数宣言はDontDeleteフラグを使用してプロパティを作成するので、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（グローバルスコープで実行した場合）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の違い&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、前者（変数宣言）がDontDelete可能なプロパティを作成し、後者はしないことです。 。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その結果、この暗黙の割り当てによって作成されたプロパティはグローバルオブジェクトから削除でき、前のプロパティ（変数宣言によって作成されたプロパティ）は削除できません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a5b64e7da16a457aef55185587bfa79983d510a" translate="yes" xml:space="preserve">
          <source>So does the following snippet (note the missing &lt;code&gt;let&lt;/code&gt; before &lt;code&gt;array&lt;/code&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次のスニペットもそうです（&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;前に&lt;/font&gt;&lt;/font&gt; &lt;code&gt;let&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がない&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;こと&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意してください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）：&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="431ffdf1d536b062b4db4bea2ffc094843f5a9fb" translate="yes" xml:space="preserve">
          <source>Strongly recommended to &lt;strong&gt;ALWAYS&lt;/strong&gt; use &lt;code&gt;var&lt;/code&gt; statement, because init global variable in local context - is evil. But, if you need this dirty trick, you should write comment at start of page:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;強く推奨に&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;悪である-ローカルコンテキスト内のinitグローバル変数ので、声明。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、この汚いトリックが必要な場合は、ページの先頭にコメントを書く必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01f486418a7f7e0b87f7505ef747ef5218937570" translate="yes" xml:space="preserve">
          <source>The difference between the two is subtle and might be confusing unless you understand that &lt;strong&gt;variable declarations also create properties&lt;/strong&gt; (only on a Variable Object) and that every property in Javascript (well, ECMAScript) have certain flags that describe their properties - ReadOnly, DontEnum and DontDelete.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2つの違いは微妙であり、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数宣言でもプロパティが作成され&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（変数オブジェクトのみ）、JavaScriptのすべてのプロパティ（まあ、ECMAScript）にはプロパティを記述する特定のフラグ（ReadOnly、DontEnum、およびDontDelete。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30c7cf5eb22ea9425e8cea1ba0f2139361e1a878" translate="yes" xml:space="preserve">
          <source>The difference comes when you're not directly inside the window, e.g. inside a function or inside a block.</source>
          <target state="translated">機能の中やブロックの中など、ウィンドウの中に直接入っていない場合に違いが出てきます。</target>
        </trans-unit>
        <trans-unit id="b7afad152c06ff7383a8a12fd0871f5f7c85821a" translate="yes" xml:space="preserve">
          <source>The global scope is &lt;code&gt;window&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グローバルスコープは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;window&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5e88d9446577a89541536cb132d7205cdf1107f" translate="yes" xml:space="preserve">
          <source>The output is false, false, false, false</source>
          <target state="translated">出力は、False,false,false,false,false です。</target>
        </trans-unit>
        <trans-unit id="a001fc43a617436f0270abcfb7b1644b3f64fe7d" translate="yes" xml:space="preserve">
          <source>The output will read as:  false, false, true, true</source>
          <target state="translated">出力は次のように読み上げられます:false,false,false,true,true</target>
        </trans-unit>
        <trans-unit id="c154cc21ec489852be888084733fec962f21294b" translate="yes" xml:space="preserve">
          <source>This is because rather than creating a new variable in the local scope or function it simply uses the global variables and reassigns them to false.</source>
          <target state="translated">これは、ローカルスコープや関数に新しい変数を作成するのではなく、単にグローバル変数を使用し、それらをfalseに再割り当てするからです。</target>
        </trans-unit>
        <trans-unit id="ae3c4b2b2e272bb3d99fc62076cf95294168c7f0" translate="yes" xml:space="preserve">
          <source>This is example code I have written for you to understand this concept:</source>
          <target state="translated">この概念を理解してもらうために書いたコード例です。</target>
        </trans-unit>
        <trans-unit id="86e51c54af332f976cb5a779f636121143a60d03" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;const&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して&lt;/font&gt;&lt;/font&gt; &lt;code&gt;let&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2681815ba9144830d84335134d593a7b9795b67" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;var&lt;/code&gt; is always a good idea to prevent variables from cluttering the global scope and variables from conflicting with each other, causing unwanted overwriting.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;常に不要な上書きを引き起こし、互いに矛盾するからグローバルスコープと変数を乱雑から変数を防ぐために、良いアイデアです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8498522bb7975baec141bc69e58ad19fc014259" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;var&lt;/code&gt; lets you hide external variables that have the same name. In this way you can simulate a &quot;private&quot; variable, but that's another topic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用する&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;同じ名前を持つ外部変数を非表示にすることができます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;この方法で「プライベート」変数をシミュレートできますが、それは別のトピックです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9b6fb10723d16a6ac48829d3a4497a9043f6980" translate="yes" xml:space="preserve">
          <source>Using let however:</source>
          <target state="translated">しかし、letを使用しています。</target>
        </trans-unit>
        <trans-unit id="4906efc7267c8351bf5b979540c54df3da79ef7c" translate="yes" xml:space="preserve">
          <source>What exactly is the function of the &lt;code&gt;var&lt;/code&gt; keyword in JavaScript, and what is the difference between</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;キーワードの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;機能とは何ですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="758ca9ad7b12f9ed5b67f8ec012817879d7955f1" translate="yes" xml:space="preserve">
          <source>What is the purpose of the var keyword and when should I use it (or omit it)</source>
          <target state="translated">var キーワードの目的は何か、いつ使うべきか (または省略するべきか)</target>
        </trans-unit>
        <trans-unit id="28d5eb31d94815ea65bfaad6447a7ebd8a7e7de0" translate="yes" xml:space="preserve">
          <source>When Javascript is executed in a browser, all your code is surrounded by a with statement, like so:</source>
          <target state="translated">ブラウザでJavascriptが実行されると、すべてのコードはこのようにwith文で囲まれます。</target>
        </trans-unit>
        <trans-unit id="b7bb9228f6081f083a2b973e1437459ece8c7be1" translate="yes" xml:space="preserve">
          <source>When the value is assigned to a variable in javascript, the interpreter first tries to find the &amp;ldquo;variable declaration&amp;rdquo; in the same context/scope as that of assignment. When the interpreter executes &lt;code&gt;dummyVariable = 20&lt;/code&gt;, it looks up for the declaration of dummyVariable at beginning of the function. 
(Since all Variable declarations are moved to the beginning of the context by javascript interpreter and this is called hoisting)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScriptで変数に値が割り当てられると、インタープリターはまず、割り当てと同じコンテキスト/スコープで「変数宣言」を見つけようとします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;インタープリターが&lt;/font&gt;&lt;/font&gt; &lt;code&gt;dummyVariable = 20&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と、関数の先頭でdummyVariableの宣言を検索します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（すべての変数宣言がJavaScriptインタープリターによってコンテキストの先頭に移動され、これがホイストと呼ばれるため）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b976cd212cdef4a97d04d7f351af666826a8c712" translate="yes" xml:space="preserve">
          <source>When variables get defined without the use of var keyword, what it looks like is a simple &amp;ldquo;assignment&amp;rdquo; operation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;varキーワードを使用せずに変数が定義された場合、その様子は単純な「代入」操作です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d38e65e5fed4a0351f74089258d5276352d71896" translate="yes" xml:space="preserve">
          <source>When would you use either one, and why/what does it do?</source>
          <target state="translated">あなたはいつどちらかを使いますか?</target>
        </trans-unit>
        <trans-unit id="d84313cef3699a4dc71c21ba2ba2f3e7056ea9b1" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;var&lt;/code&gt; - global variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;なし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-グローバル変数。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0038c0ad3dedff26bcb8caff8ac8a2e53f0784b" translate="yes" xml:space="preserve">
          <source>Without using &quot;var&quot; variables can only define when set a value. In example:</source>
          <target state="translated">var &quot;を使用せずに変数は、値を設定するときにのみ定義することができます。例では</target>
        </trans-unit>
        <trans-unit id="d1f01145498d215dada93ebddd6f73769191e877" translate="yes" xml:space="preserve">
          <source>You may also want to look at &lt;a href=&quot;http://www.yourtechchick.com/javascript/what-is-hoisting-in-javascript-javascript-hoisting-explained/&quot;&gt;hoisting in javascript&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;また&lt;/font&gt;&lt;a href=&quot;http://www.yourtechchick.com/javascript/what-is-hoisting-in-javascript-javascript-hoisting-explained/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、javascript&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;で&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;巻き上げ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を確認することもできます&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68bb2b7f8b270c5f0e4a0878da658ccff83a008c" translate="yes" xml:space="preserve">
          <source>You should use var keyword unless you intend to have the variable attached to window object in browser. &lt;a href=&quot;http://www.yourtechchick.com/javascript/difference-between-javascript-variables-with-var-and-without-var/&quot;&gt;Here's a link that explains scoping and difference between glocal scoping and local scoping with and wihtout var keyword.&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ブラウザでウィンドウオブジェクトに変数をアタッチするつもりがない限り、varキーワードを使用する必要があります。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.yourtechchick.com/javascript/difference-between-javascript-variables-with-var-and-without-var/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;スコープと、glocalスコープととwihtout varキーワードを使用したローカルスコープの違いを説明するリンクを次に示します。&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="b13d77a64c0a73e7706da22d3d1a50bb815e5c89" translate="yes" xml:space="preserve">
          <source>another difference 
e.g</source>
          <target state="translated">別格</target>
        </trans-unit>
        <trans-unit id="d69535e3b8a9d122af21d58f179a89f49e79dc8b" translate="yes" xml:space="preserve">
          <source>cannot work in &lt;strong&gt;global scope&lt;/strong&gt; or &lt;strong&gt;any other scope&lt;/strong&gt;. It should be with value like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;グローバルスコープ&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;や&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;その他のスコープで&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は機能しません&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;それは次のような値でなければなりません：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="translated">while</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
