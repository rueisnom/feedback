<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="https://stackoverflow.com/questions/1470488">
    <body>
      <group id="1470488">
        <trans-unit id="50a459f1669475395e2cd1093e7fecf50dddab26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; should be used for 95% of cases. It makes it so the variable reference can't change, thus array, object, and DOM node properties can change and should likely be &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe usarse para el 95% de los casos. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto hace que la referencia de la variable no pueda cambiar, por lo que las propiedades de la matriz, el objeto y el nodo DOM pueden cambiar y probablemente deber&amp;iacute;an ser &lt;/font&gt;&lt;/font&gt; &lt;code&gt;const&lt;/code&gt; antes&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c9ff56a83273ba2d872c12e448ba217ced10dec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; should be be used for any variable expecting to be reassigned. This includes within a for loop. If you ever write &lt;code&gt;varName =&lt;/code&gt; beyond the initialization, use &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; debe usarse para cualquier variable que se espera reasignar. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Esto incluye dentro de un bucle for. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si alguna vez escribe &lt;/font&gt;&lt;/font&gt; &lt;code&gt;varName =&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; m&amp;aacute;s all&amp;aacute; de la inicializaci&amp;oacute;n, use &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c95a9fb0840fb74fe4273ad18226be86bedc55af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var x = 1&lt;/code&gt;&lt;strong&gt;declares variable&lt;/strong&gt;&lt;code&gt;x&lt;/code&gt; in current scope (aka execution context). If the declaration appears in a function - a local variable is declared; if it's in global scope - a global variable is declared.</source>
          <target state="translated">&lt;code&gt;var x = 1&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declara la variable &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el alcance actual (tambi&amp;eacute;n conocido como contexto de ejecuci&amp;oacute;n). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si la declaraci&amp;oacute;n aparece en una funci&amp;oacute;n, se declara una variable local; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si est&amp;aacute; en alcance global, se declara una variable global.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4499c44e6911cb45b29ab51516cecc4cc2689ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declares a variable &lt;em&gt;in the current scope&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; declara una variable &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en el alcance actual&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70ce3bccad6abbc5eef98e13b7ac4dc6a34f19cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; was the pre-ES6 way to declare a variable. We are now &lt;em&gt;in the future&lt;/em&gt;, and you should be coding as such.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; era la forma anterior a ES6 para declarar una variable. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ahora estamos &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en el futuro&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y deber&amp;iacute;as estar codificando como tal.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3ac3ff1b2520539ac10e1b1265bf74a079ef6ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x = 1&lt;/code&gt;, on the other hand, is merely a property assignment. It first tries to resolve &lt;code&gt;x&lt;/code&gt; against scope chain. If it finds it anywhere in that scope chain, it performs assignment; if it doesn't find &lt;code&gt;x&lt;/code&gt;, only then does &lt;strong&gt;it creates &lt;code&gt;x&lt;/code&gt; property on a global object&lt;/strong&gt; (which is a top level object in a scope chain).</source>
          <target state="translated">&lt;code&gt;x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , por otro lado, es simplemente una asignaci&amp;oacute;n de propiedad. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Primero intenta resolver &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; contra la cadena de alcance. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si lo encuentra en alguna parte de esa cadena de alcance, realiza la asignaci&amp;oacute;n; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;si no encuentra &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , solo entonces &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;crea la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;propiedad &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en un objeto global&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (que es un objeto de nivel superior en una cadena de alcance).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="af13201ddc24dc571d398f654d280a2518121ad1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(&lt;code&gt;i&lt;/code&gt; is reset at every iteration of the loop, as it's not declared locally in the &lt;code&gt;for&lt;/code&gt; loop but globally) eventually resulting in infinite loop&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;( &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se repone en cada iteraci&amp;oacute;n del bucle, ya que no est&amp;aacute; declarado localmente en el &lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; bucle sino a nivel mundial) lo que implicar&amp;iacute;a en bucle infinito&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ece97d29bd76535aaa6375b3eb70cb76ae58c31c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;NOTE&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;: This question was asked from the viewpoint of ECMAScript version 3 or 5. The answers might become outdated with the introduction of new features in the release of ECMAScript 6.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;NOTA&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : Esta pregunta se hizo desde el punto de vista de ECMAScript versi&amp;oacute;n 3 o 5. Las respuestas pueden quedar desactualizadas con la introducci&amp;oacute;n de nuevas caracter&amp;iacute;sticas en el lanzamiento de ECMAScript 6.&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8115e639335d833240663506049d0442b68dbba5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conclusion&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Conclusion&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="676f8b6a6df963994f145f8e721340590b3a88c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;There's a difference&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Hay una diferencia&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75dc3466d60fc7b0ab4a242508831e37e541c1f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[Update 2010/12/16]&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[Actualizaci&amp;oacute;n 2010/12/16]&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15749b0e49feae8502f746946fb037a28cb462c0" translate="yes" xml:space="preserve">
          <source>@Chris S gave a nice example showcasing the practical difference (and danger) between &lt;code&gt;var&lt;/code&gt; and no &lt;code&gt;var&lt;/code&gt;. Here's another one, I find this one particularly dangerous because the difference is only visible in an asynchronous environment so it can easily slip by during testing.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;@ Chris S dio un buen ejemplo mostrando la diferencia pr&amp;aacute;ctica (y el peligro) entre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay otro, me parece particularmente peligroso porque la diferencia solo es visible en un entorno as&amp;iacute;ncrono, por lo que puede pasar f&amp;aacute;cilmente durante las pruebas.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ad516aba9de0bc92580b7826e23c0a7c4a4fe7c1" translate="yes" xml:space="preserve">
          <source>A rule of thumb is to always use &lt;code&gt;var&lt;/code&gt;, because otherwise you run the risk of introducing subtle bugs.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una regla general es usar siempre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , porque de lo contrario corre el riesgo de introducir errores sutiles.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5d9e0760725264eaa807c85d71d66c3db737614" translate="yes" xml:space="preserve">
          <source>Always declare &lt;code&gt;var&lt;/code&gt; explicitly because it's good practice</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Siempre declare &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; expl&amp;iacute;citamente porque es una buena pr&amp;aacute;ctica&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0a1b6bb77b4c9a7b3057300ef71d941b32987edc" translate="yes" xml:space="preserve">
          <source>Always use the &lt;code&gt;var&lt;/code&gt; keyword to declare variables. Why? Good coding practice should be enough of a reason in itself, but omitting it means it is declared in the &lt;strong&gt;global&lt;/strong&gt; scope (a variable like this is called an &quot;implied&quot; global). Douglas Crockford &lt;a href=&quot;http://javascript.crockford.com/code.html#variable%20declarations&quot;&gt;recommends never using implied globals&lt;/a&gt;, and according to the &lt;a href=&quot;https://developer.apple.com/library/archive/documentation/ScriptingAutomation/Conceptual/JSCodingGuide/Advanced/Advanced.html#//apple_ref/doc/uid/TP40006541&quot;&gt;Apple JavaScript Coding Guidelines&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Utilice siempre la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para declarar variables. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Por qu&amp;eacute;? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Una buena pr&amp;aacute;ctica de codificaci&amp;oacute;n deber&amp;iacute;a ser una raz&amp;oacute;n suficiente en s&amp;iacute; misma, pero omitirla significa que se declara en el &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;aacute;mbito &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;global&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (una variable como esta se denomina global &quot;impl&amp;iacute;cita&quot;). &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Douglas Crockford &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://javascript.crockford.com/code.html#variable%20declarations&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;recomienda nunca usar globales impl&amp;iacute;citos&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , y de acuerdo con las &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.apple.com/library/archive/documentation/ScriptingAutomation/Conceptual/JSCodingGuide/Advanced/Advanced.html#//apple_ref/doc/uid/TP40006541&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pautas de codificaci&amp;oacute;n JavaScript de Apple&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7cacc4776fe490a54f10614e914b71dd71d7b174" translate="yes" xml:space="preserve">
          <source>Any variable created without the &lt;code&gt;var&lt;/code&gt;
  keyword is created at the global scope
  and is not garbage collected when the
  function returns (because it doesn&amp;rsquo;t
  go out of scope), presenting the
  opportunity for a memory leak.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cualquier variable creada sin la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; se crea en el &amp;aacute;mbito global y no se recolecta basura cuando la funci&amp;oacute;n regresa (porque no se sale del &amp;aacute;mbito), presentando la oportunidad de una p&amp;eacute;rdida de memoria.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d26370d68e4b529b10005e80671c731452169f9f" translate="yes" xml:space="preserve">
          <source>As someeone trying to learn this this is how I see it. The above examples were maybe a bit overly complicated for a beginner.</source>
          <target state="translated">Como alguien que intenta aprender esto es como yo lo veo.Los ejemplos anteriores fueron tal vez un poco demasiado complicados para un principiante.</target>
        </trans-unit>
        <trans-unit id="648bb981154b488e531fa2b7f0c07e720b93739d" translate="yes" xml:space="preserve">
          <source>As you'd expect the following snippet outputs &lt;code&gt;[&quot;text&quot;]&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como era de esperar, el siguiente fragmento de c&amp;oacute;digo genera &lt;/font&gt;&lt;/font&gt; &lt;code&gt;[&quot;text&quot;]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3671985bf227c62b8cbe939f72ba78ebe122748b" translate="yes" xml:space="preserve">
          <source>Because it sees the variables in the function as seperate from those outside of it, hence the term local variable and this was because we used var in the assignment. If you take away the var in the function so it now reads like this:</source>
          <target state="translated">Porque ve las variables de la función como separadas de las que están fuera de ella,de ahí el término de variable local y esto fue porque usamos var en la asignación.Si se quita la var en la función de modo que ahora se lee así:</target>
        </trans-unit>
        <trans-unit id="aefdc6cf773153fe4a0018b9ebe37e4aabf50532" translate="yes" xml:space="preserve">
          <source>Besides scopes issue, some folks also mention &lt;a href=&quot;https://www.w3schools.com/js/js_hoisting.asp&quot;&gt;hoisting&lt;/a&gt;, but no one gave an example. Here's one for global scope:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Adem&amp;aacute;s del problema de los &amp;aacute;mbitos, algunas personas tambi&amp;eacute;n mencionan el &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.w3schools.com/js/js_hoisting.asp&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;izado&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , pero nadie dio un ejemplo. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay uno para el alcance global:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6ded685dc3f638415720835d72b5c0007cb6044c" translate="yes" xml:space="preserve">
          <source>Both have block level scoping, as expected in most other languages.</source>
          <target state="translated">Ambos tienen un alcance a nivel de bloque,como se espera en la mayoría de los otros idiomas.</target>
        </trans-unit>
        <trans-unit id="cddbd5d2793c851c432bf6f96ac2d6a3c2efa394" translate="yes" xml:space="preserve">
          <source>But behaves differently with multiple ones:</source>
          <target state="translated">Pero se comporta de manera diferente con los múltiples:</target>
        </trans-unit>
        <trans-unit id="2fffb4b9c2120cd3b141b0e8624555e6f35da296" translate="yes" xml:space="preserve">
          <source>But this is just theory of course, and &lt;strong&gt;in practice there are even more differences between the two&lt;/strong&gt;, due to various bugs in implementations (such as those from IE).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero esto es solo una teor&amp;iacute;a, por supuesto, y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en la pr&amp;aacute;ctica hay incluso m&amp;aacute;s diferencias entre los dos&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , debido a varios errores en las implementaciones (como las de IE).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f0d5e6712079fbcd2dc852510d7a96cd020ca370" translate="yes" xml:space="preserve">
          <source>Declaring a variable in scopes different from window using &lt;code&gt;var&lt;/code&gt;&lt;strong&gt;is not the same thing&lt;/strong&gt; as declaring a variable without &lt;code&gt;var&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declarar una variable en &amp;aacute;mbitos diferentes de la ventana usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no es lo mismo que&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; declarar una variable sin &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0c83c050eeca138dbe313d3b29b6cd65df49461" translate="yes" xml:space="preserve">
          <source>Declaring a variable in the global scope (window) using &lt;code&gt;var&lt;/code&gt; is the same as omitting it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Declarar una variable en el &amp;aacute;mbito global (ventana) usando &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es lo mismo que omitirla.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d90bf163bcb2db235a413e32b79d547a9c66b83e" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;var&lt;/code&gt;!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iexcl;No uses &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; !&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1fdac6a9db88caf89ef6c216bc856226ea30a3b8" translate="yes" xml:space="preserve">
          <source>EDIT:
After the critiques I received, I would like to emphasize the following:</source>
          <target state="translated">EDITORIAL:Después de las críticas que recibí,me gustaría destacar lo siguiente:</target>
        </trans-unit>
        <trans-unit id="ed86afdd520260d1183342c68b990e7a84d61654" translate="yes" xml:space="preserve">
          <source>Executing the data manipulation asynchronously still produces the same result with a single executor:</source>
          <target state="translated">Ejecutar la manipulación de datos de forma asíncrona sigue produciendo el mismo resultado con un solo ejecutor:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Ampliar fragmento</target>
        </trans-unit>
        <trans-unit id="0dd7c4917bd5ac303fcc5d926156bb3bdac17df9" translate="yes" xml:space="preserve">
          <source>For more information, you can search &quot;scope chain JavaScript&quot; in Google.</source>
          <target state="translated">Para más información,puede buscar &quot;cadena de alcance JavaScript&quot; en Google.</target>
        </trans-unit>
        <trans-unit id="e57d6ff0b73ee4b6534bd0d8d6db93d74cfd77fe" translate="yes" xml:space="preserve">
          <source>Here's quite a good example of how you can get caught out from not declaring local variables with &lt;code&gt;var&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un buen ejemplo de c&amp;oacute;mo puede quedar atrapado al no declarar variables locales con &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6d24361b3d9af831744494bab652bf0904b1abcc" translate="yes" xml:space="preserve">
          <source>Hope it all makes sense : )</source>
          <target state="translated">Espero que todo tenga sentido:)</target>
        </trans-unit>
        <trans-unit id="278b534ec8e14213e74ca09168734ffa587a74c5" translate="yes" xml:space="preserve">
          <source>I see people are confused when declaring variables with or without &lt;strong&gt;var&lt;/strong&gt; and inside or outside the function. Here is a deep example that will walk you through these steps:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Veo que la gente se confunde al declarar variables con o sin &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;var&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y dentro o fuera de la funci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un ejemplo profundo que lo guiar&amp;aacute; a trav&amp;eacute;s de estos pasos:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="392d90156f85d314ea3524aeb9adf02b8c040ff8" translate="yes" xml:space="preserve">
          <source>I would say it's better to use &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt; in most situations.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Yo dir&amp;iacute;a que es mejor usar &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;var&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en la mayor&amp;iacute;a de las situaciones.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="95254ece773a99b6b2446961e8bde455ffa71bf9" translate="yes" xml:space="preserve">
          <source>If the variable is declared with var inside a function only (like d in testVar1 or testVar2) it will will be undefined whenever the function ends. So it will be temporary variable in a function.</source>
          <target state="translated">Si la variable se declara con var dentro de una función solamente (como d en el testVar1 o testVar2)será indefinida cuando la función termine.Así que será una variable temporal en una función.</target>
        </trans-unit>
        <trans-unit id="c2d464adceebc02be96318568bd5f0cee501ade8" translate="yes" xml:space="preserve">
          <source>If the variable is declared without var inside a function (like c), it will act like the previous rule, it will preserve its value across all functions from now on. Either it got its first value in function testVar1() it still preserves the value and get additional value in function testVar2()</source>
          <target state="translated">Si la variable se declara sin var dentro de una función (como c),actuará como la regla anterior,conservará su valor en todas las funciones de ahora en adelante.O bien obtuvo su primer valor en la función testVar1()aún conserva el valor y obtiene un valor adicional en la función testVar2()</target>
        </trans-unit>
        <trans-unit id="f53c4e7d0f314a3f01533b8d6df39bbc5ea3d03c" translate="yes" xml:space="preserve">
          <source>If you do not use &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt; to declare a variable, the variable will be in global scope.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no usa &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;var&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para declarar una variable, la variable tendr&amp;aacute; un alcance global.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="39c5726d10134ef67233d2162946f5ce8d89a7a0" translate="yes" xml:space="preserve">
          <source>If you run this code:</source>
          <target state="translated">Si ejecutas este código:</target>
        </trans-unit>
        <trans-unit id="1362cfaddd572ae35c459e4a2d075b7589090e04" translate="yes" xml:space="preserve">
          <source>If you're in a function then &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt; will create a local variable, &quot;no var&quot; will look up the scope chain until it finds the variable or hits the global scope (at which point it will create it):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute; en una funci&amp;oacute;n, entonces &lt;/font&gt;&lt;/font&gt;&lt;strong&gt; &lt;code&gt;var&lt;/code&gt; &lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; crear&amp;aacute; una variable local, &quot;no var&quot; buscar&amp;aacute; la cadena de alcance hasta que encuentre la variable o llegue al alcance global (en ese momento la crear&amp;aacute;):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="567442a365f8e1172a362a7bfa6b28c56e13ddc5" translate="yes" xml:space="preserve">
          <source>If you're in the global scope then there's not much difference. Read &lt;a href=&quot;https://stackoverflow.com/a/1471738/1541051&quot;&gt;Kangax's&lt;/a&gt; answer for explanation</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si est&amp;aacute;s en el &amp;aacute;mbito global, entonces no hay mucha diferencia. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lea &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/1471738/1541051&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;la&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; respuesta &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;de Kangax&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; para una explicaci&amp;oacute;n.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="684f51fe3c6e9a2cd98e8e26d4fe7982c0b10afa" translate="yes" xml:space="preserve">
          <source>If you're not doing an assignment then you need to use &lt;code&gt;var&lt;/code&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Si no est&amp;aacute; haciendo una tarea, entonces necesita usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="75ddf84fa9fd986bd218dbcb0159c239ed354aed" translate="yes" xml:space="preserve">
          <source>In ES5 (ECMAScript 5; recently standardized, 5th edition of the language) there's a so-called &quot;strict mode&quot; &amp;mdash; an opt-in language mode, which slightly changes the behavior of undeclared assignments. In strict mode, assignment to an undeclared identifier is a &lt;strong&gt;ReferenceError&lt;/strong&gt;. The rationale for this was to catch accidental assignments, preventing creation of undesired global properties. Some of the newer browsers have already started rolling support for strict mode. See, for example, &lt;a href=&quot;http://kangax.github.com/es5-compat-table&quot;&gt;my compat table&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En ES5 (ECMAScript 5; 5&amp;ordf; edici&amp;oacute;n del lenguaje recientemente estandarizada) hay un llamado &quot;modo estricto&quot;: un modo de lenguaje opcional, que cambia ligeramente el comportamiento de las tareas no declaradas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;En modo estricto, la asignaci&amp;oacute;n a un identificador no declarado es un &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Error de referencia&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La raz&amp;oacute;n de esto fue detectar asignaciones accidentales, evitando la creaci&amp;oacute;n de propiedades globales no deseadas. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Algunos de los navegadores m&amp;aacute;s nuevos ya han comenzado a admitir el modo estricto. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ver, por ejemplo, &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://kangax.github.com/es5-compat-table&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;mi tabla compat&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2aecaa3ada288824428e9a5930bf9c4c86fbd57c" translate="yes" xml:space="preserve">
          <source>Inside a code you if you use a variable without using var, then what happens is the automatically var var_name is placed in the global scope eg:</source>
          <target state="translated">Dentro de un código si usas una variable sin usar var,entonces lo que pasa es que automáticamente el var var_name se coloca en el ámbito global,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1944f63a2520656dd1863bd1cf3ff057276757a8" translate="yes" xml:space="preserve">
          <source>It might be better to think of it as the difference between &quot;&lt;strong&gt;local&lt;/strong&gt; and &lt;strong&gt;nearest&lt;/strong&gt;&quot;. The nearest can surely be global, but that won't always be the case.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ser&amp;iacute;a mejor pensar en ello como la diferencia entre &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;local&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;m&amp;aacute;s cercano&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El m&amp;aacute;s cercano seguramente puede ser global, pero ese no siempre ser&amp;aacute; el caso.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3fd0170f28132668b781164ef4a7f444052bd81b" translate="yes" xml:space="preserve">
          <source>Its value is &lt;code&gt;undefined&lt;/code&gt; ( Its value is not &lt;code&gt;null&lt;/code&gt; and it is not equal to &lt;code&gt;null&lt;/code&gt; interestingly.).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Su valor es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (su valor no es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no es igual a &lt;/font&gt;&lt;/font&gt; &lt;code&gt;null&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; curiosamente).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e76c29e1a3e9b26eec9ed7514a7cb785d3add93d" translate="yes" xml:space="preserve">
          <source>Local variables are always faster than the variables in global scope.</source>
          <target state="translated">Las variables locales son siempre más rápidas que las variables de alcance global.</target>
        </trans-unit>
        <trans-unit id="a55428ee3f8e91b8e9361a3d555244249e1d0c11" translate="yes" xml:space="preserve">
          <source>More info on &lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/with&quot;&gt;&lt;code&gt;with&lt;/code&gt; - MDN&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;M&amp;aacute;s informaci&amp;oacute;n sobre &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Statements/with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - MDN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3df1bd5af933b5d2ffe740ae29130b487f63b38" translate="yes" xml:space="preserve">
          <source>No matter declared with or without var (like a, b) if they get their value outside the function, they will preserve their value and also any other values that are added inside various functions through the script are preserved.</source>
          <target state="translated">No importa si se declaran con o sin var (como a,b)si obtienen su valor fuera de la función,conservarán su valor y también se conservará cualquier otro valor que se añada dentro de varias funciones a través del guión.</target>
        </trans-unit>
        <trans-unit id="1db4a5a88f9462694e56a0ebed2ae05fc7476c68" translate="yes" xml:space="preserve">
          <source>Not using &lt;code&gt;var&lt;/code&gt; implicitly declares &lt;code&gt;var&lt;/code&gt; in the global scope (window)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;No usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; declara impl&amp;iacute;citamente &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en el &amp;aacute;mbito global (ventana)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02b35ff758a58328dba9a2651f7ef048ad38014f" translate="yes" xml:space="preserve">
          <source>Now, notice that it doesn't declare a global variable, it creates a global property.</source>
          <target state="translated">Ahora,noten que no declara una variable global,crea una propiedad global.</target>
        </trans-unit>
        <trans-unit id="043667ed3fc4ad66e38fe2db89cdd560510b59f5" translate="yes" xml:space="preserve">
          <source>On the other hand you can define a vaiable like;</source>
          <target state="translated">Por otro lado,puedes definir un &quot;vaiable like&quot;;</target>
        </trans-unit>
        <trans-unit id="365d5c0c6b2622c82804f5ad19b9284375cfa8a7" translate="yes" xml:space="preserve">
          <source>Saying it's the difference between &quot;&lt;strong&gt;local&lt;/strong&gt; and &lt;strong&gt;global&lt;/strong&gt;&quot; isn't entirely accurate.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Decir que es la diferencia entre &quot; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;local&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;global&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &quot; no es del todo exacto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="568c986c2fa481f1c954e7d1f9fcbf645322f2e9" translate="yes" xml:space="preserve">
          <source>See the script below in action here at jsfiddle</source>
          <target state="translated">Vea el guión abajo en acción aquí en jsfiddle</target>
        </trans-unit>
        <trans-unit id="5d4fe542efe0d5275c08fbd1fadbbe1b796a1d1d" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;var&lt;/code&gt; declares a variable &lt;em&gt;in the current scope&lt;/em&gt; , there is no difference between declaring &lt;code&gt;var&lt;/code&gt;&lt;strong&gt;inside window&lt;/strong&gt; and not declaring it at all.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; declara una variable &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;en el alcance actual&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , no hay diferencia entre declarar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;dentro de la ventana&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y no declararla en absoluto.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f84ba3d9a5a6ba1624588a0020794bbf4bbbc18e" translate="yes" xml:space="preserve">
          <source>Since variable declaration creates property with the DontDelete flag, the difference between &lt;code&gt;var x = 1&lt;/code&gt; and &lt;code&gt;x = 1&lt;/code&gt; (when executed in global scope) is that the former one - variable declaration - creates the DontDelete'able property, and latter one doesn't. As a consequence, the property created via this implicit assignment can then be deleted from the global object, and the former one - the one created via variable declaration - cannot be deleted.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Desde la declaraci&amp;oacute;n de variables crea propiedad con la bandera DontDelete, la diferencia entre &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;x = 1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (cuando se ejecuta en el &amp;aacute;mbito global) es que la anterior - declaraci&amp;oacute;n de variables - crea la propiedad DontDelete'able, y &amp;eacute;ste no lo hace . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Como consecuencia, la propiedad creada a trav&amp;eacute;s de esta asignaci&amp;oacute;n impl&amp;iacute;cita se puede eliminar del objeto global, y la primera, la creada a trav&amp;eacute;s de la declaraci&amp;oacute;n de variable, no se puede eliminar.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2a5b64e7da16a457aef55185587bfa79983d510a" translate="yes" xml:space="preserve">
          <source>So does the following snippet (note the missing &lt;code&gt;let&lt;/code&gt; before &lt;code&gt;array&lt;/code&gt;):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lo mismo ocurre con el siguiente fragmento (n&amp;oacute;tese la falta &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; antes &lt;/font&gt;&lt;/font&gt; &lt;code&gt;array&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ):&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="431ffdf1d536b062b4db4bea2ffc094843f5a9fb" translate="yes" xml:space="preserve">
          <source>Strongly recommended to &lt;strong&gt;ALWAYS&lt;/strong&gt; use &lt;code&gt;var&lt;/code&gt; statement, because init global variable in local context - is evil. But, if you need this dirty trick, you should write comment at start of page:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Se recomienda encarecidamente &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;SIEMPRE&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; usar la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;declaraci&amp;oacute;n &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , porque la variable global init en el contexto local es malvada. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Pero, si necesita este truco sucio, debe escribir un comentario al comienzo de la p&amp;aacute;gina:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="01f486418a7f7e0b87f7505ef747ef5218937570" translate="yes" xml:space="preserve">
          <source>The difference between the two is subtle and might be confusing unless you understand that &lt;strong&gt;variable declarations also create properties&lt;/strong&gt; (only on a Variable Object) and that every property in Javascript (well, ECMAScript) have certain flags that describe their properties - ReadOnly, DontEnum and DontDelete.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;La diferencia entre los dos es sutil y puede ser confusa a menos que comprenda que &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;las declaraciones de variables tambi&amp;eacute;n crean propiedades&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (solo en un Objeto variable) y que cada propiedad en Javascript (bueno, ECMAScript) tiene ciertos indicadores que describen sus propiedades: ReadOnly, DontEnum y No borrar&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="30c7cf5eb22ea9425e8cea1ba0f2139361e1a878" translate="yes" xml:space="preserve">
          <source>The difference comes when you're not directly inside the window, e.g. inside a function or inside a block.</source>
          <target state="translated">La diferencia viene cuando no estás directamente dentro de la ventana,por ejemplo,dentro de una función o dentro de un bloque.</target>
        </trans-unit>
        <trans-unit id="b7afad152c06ff7383a8a12fd0871f5f7c85821a" translate="yes" xml:space="preserve">
          <source>The global scope is &lt;code&gt;window&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El alcance global es &lt;/font&gt;&lt;/font&gt; &lt;code&gt;window&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5e88d9446577a89541536cb132d7205cdf1107f" translate="yes" xml:space="preserve">
          <source>The output is false, false, false, false</source>
          <target state="translated">La salida es falsa,falsa,falsa,falsa</target>
        </trans-unit>
        <trans-unit id="a001fc43a617436f0270abcfb7b1644b3f64fe7d" translate="yes" xml:space="preserve">
          <source>The output will read as:  false, false, true, true</source>
          <target state="translated">La salida se leerá como:falso,falso,verdadero,verdadero</target>
        </trans-unit>
        <trans-unit id="c154cc21ec489852be888084733fec962f21294b" translate="yes" xml:space="preserve">
          <source>This is because rather than creating a new variable in the local scope or function it simply uses the global variables and reassigns them to false.</source>
          <target state="translated">Esto se debe a que en lugar de crear una nueva variable en el ámbito o función local,simplemente utiliza las variables globales y las reasigna a falsas.</target>
        </trans-unit>
        <trans-unit id="ae3c4b2b2e272bb3d99fc62076cf95294168c7f0" translate="yes" xml:space="preserve">
          <source>This is example code I have written for you to understand this concept:</source>
          <target state="translated">Este es un ejemplo de código que he escrito para que entiendan este concepto:</target>
        </trans-unit>
        <trans-unit id="86e51c54af332f976cb5a779f636121143a60d03" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usa &lt;/font&gt;&lt;/font&gt; &lt;code&gt;const&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; y &lt;/font&gt;&lt;/font&gt; &lt;code&gt;let&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2681815ba9144830d84335134d593a7b9795b67" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;var&lt;/code&gt; is always a good idea to prevent variables from cluttering the global scope and variables from conflicting with each other, causing unwanted overwriting.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Usar &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; es siempre una buena idea para evitar que las variables desordenen el alcance global y las variables entren en conflicto entre s&amp;iacute;, causando una sobrescritura no deseada.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a8498522bb7975baec141bc69e58ad19fc014259" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;var&lt;/code&gt; lets you hide external variables that have the same name. In this way you can simulate a &quot;private&quot; variable, but that's another topic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;El uso de &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; le&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; permite ocultar variables externas que tienen el mismo nombre. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;De esta forma, puede simular una variable &quot;privada&quot;, pero ese es otro tema.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b9b6fb10723d16a6ac48829d3a4497a9043f6980" translate="yes" xml:space="preserve">
          <source>Using let however:</source>
          <target state="translated">Sin embargo,usando &quot;let&quot;:</target>
        </trans-unit>
        <trans-unit id="4906efc7267c8351bf5b979540c54df3da79ef7c" translate="yes" xml:space="preserve">
          <source>What exactly is the function of the &lt;code&gt;var&lt;/code&gt; keyword in JavaScript, and what is the difference between</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;iquest;Cu&amp;aacute;l es exactamente la funci&amp;oacute;n de la &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;palabra clave &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; en JavaScript y cu&amp;aacute;l es la diferencia entre&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="758ca9ad7b12f9ed5b67f8ec012817879d7955f1" translate="yes" xml:space="preserve">
          <source>What is the purpose of the var keyword and when should I use it (or omit it)</source>
          <target state="translated">¿Cuál es el propósito de la palabra clave var y cuándo debo usarla (u omitirla)?</target>
        </trans-unit>
        <trans-unit id="28d5eb31d94815ea65bfaad6447a7ebd8a7e7de0" translate="yes" xml:space="preserve">
          <source>When Javascript is executed in a browser, all your code is surrounded by a with statement, like so:</source>
          <target state="translated">Cuando se ejecuta Javascript en un navegador,todo su código se rodea de una declaración,así:</target>
        </trans-unit>
        <trans-unit id="b7bb9228f6081f083a2b973e1437459ece8c7be1" translate="yes" xml:space="preserve">
          <source>When the value is assigned to a variable in javascript, the interpreter first tries to find the &amp;ldquo;variable declaration&amp;rdquo; in the same context/scope as that of assignment. When the interpreter executes &lt;code&gt;dummyVariable = 20&lt;/code&gt;, it looks up for the declaration of dummyVariable at beginning of the function. 
(Since all Variable declarations are moved to the beginning of the context by javascript interpreter and this is called hoisting)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando el valor se asigna a una variable en javascript, el int&amp;eacute;rprete primero intenta encontrar la &quot;declaraci&amp;oacute;n de variable&quot; en el mismo contexto / alcance que el de la asignaci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando el int&amp;eacute;rprete ejecuta &lt;/font&gt;&lt;/font&gt; &lt;code&gt;dummyVariable = 20&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , busca la declaraci&amp;oacute;n de dummyVariable al comienzo de la funci&amp;oacute;n. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Dado que todas las declaraciones de variables se mueven al comienzo del contexto por el int&amp;eacute;rprete de JavaScript y esto se llama elevaci&amp;oacute;n&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b976cd212cdef4a97d04d7f351af666826a8c712" translate="yes" xml:space="preserve">
          <source>When variables get defined without the use of var keyword, what it looks like is a simple &amp;ldquo;assignment&amp;rdquo; operation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Cuando las variables se definen sin el uso de la palabra clave var, lo que parece es una simple operaci&amp;oacute;n de &quot;asignaci&amp;oacute;n&quot;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d38e65e5fed4a0351f74089258d5276352d71896" translate="yes" xml:space="preserve">
          <source>When would you use either one, and why/what does it do?</source>
          <target state="translated">¿Cuándo usarías cualquiera de los dos,y por qué qué lo hace?</target>
        </trans-unit>
        <trans-unit id="d84313cef3699a4dc71c21ba2ba2f3e7056ea9b1" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;var&lt;/code&gt; - global variable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Sin &lt;/font&gt;&lt;/font&gt; &lt;code&gt;var&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; : variable global.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0038c0ad3dedff26bcb8caff8ac8a2e53f0784b" translate="yes" xml:space="preserve">
          <source>Without using &quot;var&quot; variables can only define when set a value. In example:</source>
          <target state="translated">Sin usar &quot;var&quot; las variables sólo pueden definir cuando se establece un valor.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d1f01145498d215dada93ebddd6f73769191e877" translate="yes" xml:space="preserve">
          <source>You may also want to look at &lt;a href=&quot;http://www.yourtechchick.com/javascript/what-is-hoisting-in-javascript-javascript-hoisting-explained/&quot;&gt;hoisting in javascript&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Tambi&amp;eacute;n es posible que desee ver la &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.yourtechchick.com/javascript/what-is-hoisting-in-javascript-javascript-hoisting-explained/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;elevaci&amp;oacute;n en javascript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68bb2b7f8b270c5f0e4a0878da658ccff83a008c" translate="yes" xml:space="preserve">
          <source>You should use var keyword unless you intend to have the variable attached to window object in browser. &lt;a href=&quot;http://www.yourtechchick.com/javascript/difference-between-javascript-variables-with-var-and-without-var/&quot;&gt;Here's a link that explains scoping and difference between glocal scoping and local scoping with and wihtout var keyword.&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debe usar la palabra clave var a menos que tenga la intenci&amp;oacute;n de tener la variable asociada al objeto de ventana en el navegador. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.yourtechchick.com/javascript/difference-between-javascript-variables-with-var-and-without-var/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Aqu&amp;iacute; hay un enlace que explica el alcance y la diferencia entre el alcance global y el alcance local con y sin la palabra clave var.&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="b13d77a64c0a73e7706da22d3d1a50bb815e5c89" translate="yes" xml:space="preserve">
          <source>another difference 
e.g</source>
          <target state="translated">otra diferencia,por ejemplo</target>
        </trans-unit>
        <trans-unit id="d69535e3b8a9d122af21d58f179a89f49e79dc8b" translate="yes" xml:space="preserve">
          <source>cannot work in &lt;strong&gt;global scope&lt;/strong&gt; or &lt;strong&gt;any other scope&lt;/strong&gt;. It should be with value like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;no puede funcionar en &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;alcance global&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ni en &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ning&amp;uacute;n otro alcance&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Debe tener un valor como:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6517f89c46c3f0d6db9cb009b8c7d1f98c371fa0" translate="yes" xml:space="preserve">
          <source>while</source>
          <target state="translated">while</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
