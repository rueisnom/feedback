<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/14028959">
    <body>
      <group id="14028959">
        <trans-unit id="8924a2a5367a406fb1257247f96708b20d64a0ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://api.jquery.com/on/#direct-and-delegated-events&quot;&gt;Delegated events&lt;/a&gt; have the advantage that they can process events from descendant elements that are added to the document at a later time.</source>
          <target state="translated">&lt;a href=&quot;http://api.jquery.com/on/#direct-and-delegated-events&quot;&gt;委派事件&lt;/a&gt;的优势在于，它们可以处理以后在以后添加到文档中的后代元素中的事件。</target>
        </trans-unit>
        <trans-unit id="e77d7bd8d73db8c4505911b5e1ebf30630b866f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getElementById&lt;/code&gt; requires the passed string to be the ID &lt;em&gt;verbatim&lt;/em&gt;, and nothing else. If you prefix the passed string with a &lt;code&gt;#&lt;/code&gt;, and the ID does not start with a &lt;code&gt;#&lt;/code&gt;, nothing will be selected:</source>
          <target state="translated">&lt;code&gt;getElementById&lt;/code&gt; 要求传递的字符串是&lt;em&gt;逐字显示&lt;/em&gt;的ID，仅此而已。 如果为传递的字符串添加 &lt;code&gt;#&lt;/code&gt; 前缀，并且ID并非以 &lt;code&gt;#&lt;/code&gt; 开头，则不会选择任何内容：</target>
        </trans-unit>
        <trans-unit id="c0ba424acb76191e266fd4e8762af34efc701a68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For the remainder of this answer I will use &lt;code&gt;getElementById&lt;/code&gt; as example, but the same applies to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.getElementsByTagName&quot;&gt;&lt;code&gt;getElementsByTagName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Document.querySelector&quot;&gt;&lt;code&gt;querySelector&lt;/code&gt;&lt;/a&gt; and any other DOM method that selects elements.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;对于此答案的其余部分，我将使用 &lt;code&gt;getElementById&lt;/code&gt; 作为示例，但同样适用于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.getElementsByTagName&quot;&gt; &lt;code&gt;getElementsByTagName&lt;/code&gt; &lt;/a&gt; ， &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Document.querySelector&quot;&gt; &lt;code&gt;querySelector&lt;/code&gt; &lt;/a&gt;和选择元素的任何其他DOM方法。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="015a0be7c63c50d99aee14b3e37b72327797108f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible Reasons&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;可能的原因&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ed5bd5bb9f28780bff70ccf6e2b10fee249081b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reasons why id based selectors don't work&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;基于ID的选择器不起作用的原因&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14c7390212a62ca68547159c016f8ba2b1e8e9a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short and simple:&lt;/strong&gt; Because the elements you are looking for do not exist in the document (yet).</source>
          <target state="translated">&lt;strong&gt;简短：&lt;/strong&gt;由于您要查找的元素在文档中不存在（尚未）。</target>
        </trans-unit>
        <trans-unit id="72f2b8ea240994973b8c98d5825ace1bb9366049" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solutions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solutions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a33cff9020a55fa3185256ec7c4be09e6bf6115" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jQuery&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jQuery&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff5e9cc2d9b8cc293b94e8c06f8a77f837a8697c" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note: Placing scripts at the bottom is generally considered a &lt;a href=&quot;http://developer.yahoo.com/performance/rules.html#js_bottom&quot;&gt;best practice&lt;/a&gt;.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;注意：将脚本放在底部通常被认为是&lt;a href=&quot;http://developer.yahoo.com/performance/rules.html#js_bottom&quot;&gt;最佳实践&lt;/a&gt; 。&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="1593ebef4da197c68a8976ea44377017c1bc34f7" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note: The &lt;code&gt;defer&lt;/code&gt; attribute certainly &lt;em&gt;seems&lt;/em&gt; like a magic bullet &lt;em&gt;but&lt;/em&gt; it's important to be aware of the caveats...&lt;br/&gt;
1. &lt;code&gt;defer&lt;/code&gt; can only be used for external scripts, i.e.: those having a &lt;code&gt;src&lt;/code&gt; attribute.&lt;br/&gt;
2. be aware of &lt;a href=&quot;http://caniuse.com/script-defer&quot;&gt;browser support&lt;/a&gt;, i.e.: buggy implementation in IE &amp;lt; 10&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;注意： &lt;code&gt;defer&lt;/code&gt; 属性当然&lt;em&gt;看起来&lt;/em&gt;像是魔术子弹， &lt;em&gt;但请&lt;/em&gt;注意警告很重要...&lt;/sub&gt; &lt;sub&gt;&lt;br/&gt;&lt;/sub&gt; &lt;sub&gt;1. &lt;code&gt;defer&lt;/code&gt; 仅可用于外部脚本，即：具有 &lt;code&gt;src&lt;/code&gt; 属性的脚本。&lt;/sub&gt; &lt;sub&gt;&lt;br/&gt;&lt;/sub&gt; &lt;sub&gt;2.注意&lt;a href=&quot;http://caniuse.com/script-defer&quot;&gt;浏览器支持&lt;/a&gt; ，即：IE &amp;lt;10中的错误实现&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="a69194614b3a689f24407f5dd67dd82b01afe526" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note: Typically, this pattern is reserved for elements which didn't exist at load-time &lt;em&gt;or&lt;/em&gt; to avoid attaching a large amount of handlers. It's also worth pointing out that while I've attached a handler to &lt;code&gt;document&lt;/code&gt; (for demonstrative purposes), you should select the nearest reliable ancestor.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;注意：通常，此模式是为加载时不存在的元素保留的， &lt;em&gt;或者是&lt;/em&gt;为了避免附加大量的处理程序。&lt;/sub&gt; &lt;sub&gt;值得指出的是，虽然我已经为 &lt;code&gt;document&lt;/code&gt; 附加了处理程序（出于说明目的），但您应该选择最近的可靠祖先。&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5662f3c642a70828b666a05142606ad1be970a12" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note: You could simply bind to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/DOMContentLoaded&quot;&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt;&lt;/a&gt; or  &lt;code&gt;window.&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window.onload?redirect=no&quot;&gt;onload&lt;/a&gt;&lt;/code&gt; but each has its caveats. jQuery's &lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; delivers a hybrid solution.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;注意：您可以简单地绑定到&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/DOMContentLoaded&quot;&gt; &lt;code&gt;DOMContentLoaded&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;window.&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window.onload?redirect=no&quot;&gt;onload&lt;/a&gt;&lt;/code&gt; &lt;/sub&gt; &lt;sub&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window.onload?redirect=no&quot;&gt;onload，&lt;/a&gt;但每个都有其警告。&lt;/sub&gt; &lt;sub&gt;jQuery的&lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt;提供了一种混合解决方案。&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="080383d3ea001a7b11649ddd56e96e875ad6928e" translate="yes" xml:space="preserve">
          <source>A standard DOM method returning &lt;code&gt;null&lt;/code&gt; resulting in any of several errors:</source>
          <target state="translated">标准DOM方法返回 &lt;code&gt;null&lt;/code&gt; 会导致以下几种错误：</target>
        </trans-unit>
        <trans-unit id="9bca2ae53e344091d535523c3a1cc32d38418930" translate="yes" xml:space="preserve">
          <source>Again, though, it is most likely that the element you are looking for simply is not (yet) in the document, and you should do as Felix suggests. However, you should also be aware that that is increasingly not the only reason that an element might be unfindable (either temporarily or permanently).</source>
          <target state="translated">不过,同样的,你要找的元素很可能根本就不在文档中,你应该按照Felix的建议去做。然而,你也应该知道,这并不是一个元素可能无法找到的唯一原因(暂时或永久)。</target>
        </trans-unit>
        <trans-unit id="07610623ac040b4810c15fdab757ac4ab9084743" translate="yes" xml:space="preserve">
          <source>Alternatively you can also use the shorthand syntax:</source>
          <target state="translated">另外,你也可以使用速记语法。</target>
        </trans-unit>
        <trans-unit id="bdca6ee54e3417518e64c91140f6e7f5b753a038" translate="yes" xml:space="preserve">
          <source>An added twist is when jQuery is not found because you have loaded the script without protocol and are running from file system:</source>
          <target state="translated">一个额外的转折是当jQuery没有被发现时,因为你在没有协议的情况下加载了脚本,而且是从文件系统中运行的。</target>
        </trans-unit>
        <trans-unit id="1d339675909c02dd389577b6db384e83f090bc80" translate="yes" xml:space="preserve">
          <source>An element with the passed ID really does not exist in the document. You should double check that the ID you pass to &lt;code&gt;getElementById&lt;/code&gt; really matches an ID of an existing element in the (generated) HTML and that you have not &lt;em&gt;misspelled&lt;/em&gt; the ID (IDs are &lt;em&gt;case-sensitive&lt;/em&gt;!).</source>
          <target state="translated">具有传递的ID的元素确实在文档中不存在。 您应该仔细检查传递给 &lt;code&gt;getElementById&lt;/code&gt; 的ID确实与（生成的）HTML中现有元素的ID匹配，并且您没有&lt;em&gt;拼错&lt;/em&gt;该ID（ID &lt;em&gt;区分大小写&lt;/em&gt; ！）。</target>
        </trans-unit>
        <trans-unit id="49f80df991332bde3bd1f84092e388c4b4b7e458" translate="yes" xml:space="preserve">
          <source>Any other spelling or capitalization will not work. For example, &lt;code&gt;document.getElementByClassName&lt;/code&gt; will throw an error.</source>
          <target state="translated">任何其他拼写或大写字母均无效。 例如， &lt;code&gt;document.getElementByClassName&lt;/code&gt; 将引发错误。</target>
        </trans-unit>
        <trans-unit id="a213d53bf3b6149f7926f33dada23170edcc8f6d" translate="yes" xml:space="preserve">
          <source>As @FelixKling pointed out, the most likely scenario is that the nodes you are looking for do not exist (yet).</source>
          <target state="translated">正如@FelixKling所指出的,最可能的情况是你要找的节点不存在(还没有)。</target>
        </trans-unit>
        <trans-unit id="60a04123f756439b784cb366dca7abc4a288daf3" translate="yes" xml:space="preserve">
          <source>As almost everything we do when using jQuery reads or manipulates the document object model (DOM), we need to make sure that we start adding events etc. as soon as the DOM is ready.</source>
          <target state="translated">由于我们在使用jQuery时几乎所有的事情都会读取或操作文档对象模型(DOM),所以我们需要确保在DOM准备好后就开始添加事件等。</target>
        </trans-unit>
        <trans-unit id="d60f5991a3d77cef7e814ebfd8ca813c8403f2ec" translate="yes" xml:space="preserve">
          <source>Before you make a call to &lt;code&gt;getElementById&lt;/code&gt; (or any DOM method for that matter), make sure the elements you want to access exist, i.e. the DOM is loaded.</source>
          <target state="translated">在调用 &lt;code&gt;getElementById&lt;/code&gt; （或与此相关的任何DOM方法）之前，请确保要访问的元素存在，即，已加载DOM。</target>
        </trans-unit>
        <trans-unit id="101e21a62a75fdd1d662483537000acc22dc3a9a" translate="yes" xml:space="preserve">
          <source>Both are equivalent.</source>
          <target state="translated">两者是等价的。</target>
        </trans-unit>
        <trans-unit id="85831e3e67da9b798926d1812a4b2ba0e21df397" translate="yes" xml:space="preserve">
          <source>Capitalization and spelling &lt;strong&gt;does matter&lt;/strong&gt; for all of the above. If the capitalization is different, or the spelling is different, the element will not be selected:</source>
          <target state="translated">大写和拼写对于上述所有内容均至关重要。 如果大小写不同或拼写不同，则不会选择该元素：</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">请看下面的例子:</target>
        </trans-unit>
        <trans-unit id="2c56ae4b9ac8902b0b04046e5149f74839292980" translate="yes" xml:space="preserve">
          <source>Consider the following markup; script #1 fails to find the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; while script #2 succeeds:</source>
          <target state="translated">考虑以下标记； 脚本＃2成功执行后，脚本＃1找不到 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7c3ebe530f2ce5e3b5c4b4bf17fd9884c0d12366" translate="yes" xml:space="preserve">
          <source>Defer your script until the DOM has been completely parsed, using &lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt;将脚本推迟到DOM被完全解析为止：</target>
        </trans-unit>
        <trans-unit id="b8cf7e4da91612229d4bcc0a48e1bd4f4a2e3dce" translate="yes" xml:space="preserve">
          <source>Example problems include:</source>
          <target state="translated">例子问题包括:</target>
        </trans-unit>
        <trans-unit id="9e0d870c1c90acdabf9461a58d30da031ec538fd" translate="yes" xml:space="preserve">
          <source>Example using bootstrap:</source>
          <target state="translated">使用bootstrap的例子。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">扩展片段</target>
        </trans-unit>
        <trans-unit id="f15bc741c51141459dfa4c6314441e808bf627e7" translate="yes" xml:space="preserve">
          <source>First make sure that jQuery is loaded properly. &lt;a href=&quot;http://www.netmagazine.com/tutorials/javascript-debugging-beginners&quot;&gt;Use the browser's developer tools&lt;/a&gt; to find out whether the jQuery file was found and correct the URL if it wasn't (e.g. add the &lt;code&gt;http:&lt;/code&gt; or &lt;code&gt;https:&lt;/code&gt; scheme at the beginning, adjust the path, etc.)</source>
          <target state="translated">首先确保jQuery已正确加载。 &lt;a href=&quot;http://www.netmagazine.com/tutorials/javascript-debugging-beginners&quot;&gt;使用浏览器的开发人员工具&lt;/a&gt;查找是否找到了jQuery文件，如果找不到，则更正URL（例如，在开头添加 &lt;code&gt;http:&lt;/code&gt; 或 &lt;code&gt;https:&lt;/code&gt; 方案，调整路径等）。</target>
        </trans-unit>
        <trans-unit id="f25a0dc25d2dd9a6949b815f32f5128e6fdd633c" translate="yes" xml:space="preserve">
          <source>For elements coming from Ajax responses, use the &lt;code&gt;.bind()&lt;/code&gt; method of jQuery. Older versions of jQuery had &lt;code&gt;.live()&lt;/code&gt; for the same.</source>
          <target state="translated">对于来自Ajax响应的元素，请使用jQuery的 &lt;code&gt;.bind()&lt;/code&gt; 方法。 较旧版本的jQuery具有 &lt;code&gt;.live()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="6831d2a757d8250c7a891fd7a563a0288881a19d" translate="yes" xml:space="preserve">
          <source>For reference, here's the code from that &lt;a href=&quot;https://gh-canon.github.io/misc-demos/log-test-click.js&quot;&gt;external script&lt;/a&gt;:</source>
          <target state="translated">作为参考，这是该&lt;a href=&quot;https://gh-canon.github.io/misc-demos/log-test-click.js&quot;&gt;外部脚本&lt;/a&gt;的代码：</target>
        </trans-unit>
        <trans-unit id="37538f6aa944cc5a5401f51e8b09cf68e53008e5" translate="yes" xml:space="preserve">
          <source>However, modern development practices can often manipulate document elements outside of the document tree either with DocumentFragments or simply detaching/reattaching current elements directly.  Such techniques may be used as part of JavaScript templating or to avoid excessive repaint/reflow operations while the elements in question are being heavily altered.</source>
          <target state="translated">然而,现代的开发实践往往可以用DocumentFragments或者干脆直接detachingreattaching当前元素,在文档树外操纵文档元素。这样的技术可以作为JavaScript模板化的一部分,或者在元素被大量修改时避免过度的repaintreflow操作。</target>
        </trans-unit>
        <trans-unit id="abd4457878d0559055496b1a954b5f4cce92f90b" translate="yes" xml:space="preserve">
          <source>If script execution order is not the issue, another possible cause of the problem is that the element is not being selected properly:</source>
          <target state="translated">如果脚本执行顺序不是问题,另一个可能的原因是元素没有被正确选择。</target>
        </trans-unit>
        <trans-unit id="e30cbec42caa43d109a65a685b33f9d790d949e9" translate="yes" xml:space="preserve">
          <source>If the element you are trying to access is inside an &lt;code&gt;iframe&lt;/code&gt; and you try to access it outside the context of the &lt;code&gt;iframe&lt;/code&gt; this will also cause it to fail.</source>
          <target state="translated">如果您尝试访问的元素位于 &lt;code&gt;iframe&lt;/code&gt; 内，而您尝试在 &lt;code&gt;iframe&lt;/code&gt; 的上下文之外访问它，这也会导致其失败。</target>
        </trans-unit>
        <trans-unit id="c75388ce5a2b84caf295bcef65acf00bd12ee0e4" translate="yes" xml:space="preserve">
          <source>If you want to get an element in an iframe you can find out how &lt;a href=&quot;https://stackoverflow.com/a/1088569/1435985&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">如果要在iframe中获取元素，可以&lt;a href=&quot;https://stackoverflow.com/a/1088569/1435985&quot;&gt;在这里&lt;/a&gt;找到方法。</target>
        </trans-unit>
        <trans-unit id="95d29a32089ccae4e1b2bb1d0691e6b1243e83aa" translate="yes" xml:space="preserve">
          <source>In fact, the &lt;a href=&quot;http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery&quot;&gt;jQuery tutorial&lt;/a&gt; explicitly states:</source>
          <target state="translated">实际上， &lt;a href=&quot;http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery&quot;&gt;jQuery教程&lt;/a&gt;明确指出：</target>
        </trans-unit>
        <trans-unit id="a691503c17cd23abef6910c23b5d54eef8d766bf" translate="yes" xml:space="preserve">
          <source>Incidentally, in the &lt;a href=&quot;http://caniuse.com/queryselector&quot;&gt;majority of contemporary browsers&lt;/a&gt;, which implement &lt;code&gt;querySelector()&lt;/code&gt; and &lt;code&gt;querySelectorAll()&lt;/code&gt; methods, CSS-style notation is used to retrieve an element by its &lt;code&gt;id&lt;/code&gt;, for example: &lt;code&gt;document.querySelector('#elementID')&lt;/code&gt;, as opposed to the method by which an element is retrieved by its &lt;code&gt;id&lt;/code&gt; under &lt;code&gt;document.getElementById('elementID')&lt;/code&gt;; in the first the &lt;code&gt;#&lt;/code&gt; character is essential, in the second it would lead to the element not being retrieved.</source>
          <target state="translated">顺便说一下，在&lt;a href=&quot;http://caniuse.com/queryselector&quot;&gt;大多数&lt;/a&gt;实现了 &lt;code&gt;querySelector()&lt;/code&gt; 和 &lt;code&gt;querySelectorAll()&lt;/code&gt; 方法的现代浏览器中 ，CSS样式表示法用于通过其 &lt;code&gt;id&lt;/code&gt; 检索元素，例如： &lt;code&gt;document.querySelector('#elementID')&lt;/code&gt; ，而不是在 &lt;code&gt;document.getElementById('elementID')&lt;/code&gt; 下通过其 &lt;code&gt;id&lt;/code&gt; 检索元素的方法； 在第一个中， &lt;code&gt;#&lt;/code&gt; 字符是必不可少的，在第二个中，这将导致无法检索该元素。</target>
        </trans-unit>
        <trans-unit id="47f9b9cf5ebdeefe6717ccf7045b5df0ccb11c3f" translate="yes" xml:space="preserve">
          <source>It has the unfortunate side effect of attempting and failing to load &lt;code&gt;file://somecdn.somewhere.com...&lt;/code&gt;</source>
          <target state="translated">它具有尝试失败并无法加载 &lt;code&gt;file://somecdn.somewhere.com...&lt;/code&gt; 的不幸副作用...</target>
        </trans-unit>
        <trans-unit id="d150f419df3bd87d0a85b14dd917cdb6a7970597" translate="yes" xml:space="preserve">
          <source>Listening to the &lt;code&gt;load&lt;/code&gt;/&lt;code&gt;DOMContentLoaded&lt;/code&gt;  events is exactly what jQuery is doing with &lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt;&lt;code&gt;.ready()&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[docs]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt;. All your jQuery code that affects DOM element should be inside that event handler.</source>
          <target state="translated">监听 &lt;code&gt;load&lt;/code&gt; / &lt;code&gt;DOMContentLoaded&lt;/code&gt; 事件正是jQuery使用&lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt; &lt;code&gt;.ready()&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[docs]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt;所做的。 您所有影响DOM元素的jQuery代码都应在该事件处理程序内。</target>
        </trans-unit>
        <trans-unit id="916540a77390cfb70e2e75b4146066ec1363d178" translate="yes" xml:space="preserve">
          <source>Make sure you pass a string to these selector methods. If you pass something that isn't a string to &lt;code&gt;querySelector&lt;/code&gt;, &lt;code&gt;getElementById&lt;/code&gt;, etc, it almost certainly won't work.</source>
          <target state="translated">确保将字符串传递给这些选择器方法。 如果您将不是字符串的内容传递给 &lt;code&gt;querySelector&lt;/code&gt; ， &lt;code&gt;getElementById&lt;/code&gt; 等，则几乎可以肯定不会起作用。</target>
        </trans-unit>
        <trans-unit id="a95828059436c8228e75685affdaa482639ff97a" translate="yes" xml:space="preserve">
          <source>More than one element with the same id is present which is causing a conflict.</source>
          <target state="translated">存在一个以上具有相同ID的元素,导致冲突。</target>
        </trans-unit>
        <trans-unit id="f931faf45cd462de3ad4f54b1ce6ac76a24330e1" translate="yes" xml:space="preserve">
          <source>Move your script further down the page, just before the closing body tag. Organized in this fashion, the rest of the document is parsed before your script is executed:</source>
          <target state="translated">把你的脚本移到页面的下边,就在关闭的body标签之前。以这种方式组织,在你的脚本执行之前,文档的其他部分会被解析。</target>
        </trans-unit>
        <trans-unit id="538144420dc5bec57e3c11f07c6303e342cd5a73" translate="yes" xml:space="preserve">
          <source>My solution was to not use the id of an anchor element: &lt;code&gt;&amp;lt;a id='star_wars'&amp;gt;Place to jump to&amp;lt;/a&amp;gt;&lt;/code&gt;. Apparently blazor and other spa frameworks have issues jumping to anchors on the same page. To get around that I had to use &lt;code&gt;document.getElementById('star_wars')&lt;/code&gt;. However this didn't work until I put the id in a paragraph element instead: &lt;code&gt;&amp;lt;p id='star_wars'&amp;gt;Some paragraph&amp;lt;p&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">我的解决方案是不使用锚元素的ID： &lt;code&gt;&amp;lt;a id='star_wars'&amp;gt;Place to jump to&amp;lt;/a&amp;gt;&lt;/code&gt; 。 显然，blazor和其他spa框架的问题跳到了同一页面上。 为了解决这个问题，我必须使用 &lt;code&gt;document.getElementById('star_wars')&lt;/code&gt; 。 但是，直到我将id放入段落元素中，该方法才起作用： &lt;code&gt;&amp;lt;p id='star_wars'&amp;gt;Some paragraph&amp;lt;p&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f80d48c6e6bd62e1187567c2ae4b2160075cdb2" translate="yes" xml:space="preserve">
          <source>Option 1: Move your script</source>
          <target state="translated">选项1:移动你的脚本</target>
        </trans-unit>
        <trans-unit id="e5d3dc77c5774c2e4b5d0622ef95ea41d703f3d7" translate="yes" xml:space="preserve">
          <source>Option 2: jQuery's &lt;code&gt;ready()&lt;/code&gt;</source>
          <target state="translated">选项2：jQuery的 &lt;code&gt;ready()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="765a188dc2bbe9e58e82091d54b34d3cf87c6084" translate="yes" xml:space="preserve">
          <source>Option 3: Event Delegation</source>
          <target state="translated">方案3:活动授权</target>
        </trans-unit>
        <trans-unit id="ed487ab0a08e5b243ca84ee80c8218cb2fdfacc2" translate="yes" xml:space="preserve">
          <source>Option 4: The &lt;code&gt;defer&lt;/code&gt; attribute</source>
          <target state="translated">选项4： &lt;code&gt;defer&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="80d1e84071881f5dcaf1e91b9b8f51255096fe78" translate="yes" xml:space="preserve">
          <source>Other solutions include listening to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/window.onload&quot;&gt;&lt;code&gt;load&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla_event_reference/DOMContentLoaded_%28event%29&quot;&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; events. In these cases it does not matter where in the document you place the JavaScript code, you just have to remember to put all DOM processing code in the event handlers.</source>
          <target state="translated">其他解决方案包括侦听&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/window.onload&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt;或&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla_event_reference/DOMContentLoaded_%28event%29&quot;&gt; &lt;code&gt;DOMContentLoaded&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt;事件。 在这些情况下，将JavaScript代码放在文档中的位置并不重要，您只需要记住将所有DOM处理代码放在事件处理程序中即可。</target>
        </trans-unit>
        <trans-unit id="0a902d3f198dad7513a2e7821cf1e4cf668118f7" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;http://www.quirksmode.org/js/introevents.html&quot;&gt;articles at quirksmode.org&lt;/a&gt; for more information regarding event handling and browser differences.</source>
          <target state="translated">有关事件处理和浏览器差异的更多信息，请参见&lt;a href=&quot;http://www.quirksmode.org/js/introevents.html&quot;&gt;quirksmode.org上&lt;/a&gt;的文章 。</target>
        </trans-unit>
        <trans-unit id="7e4ff926baa4becadd4abb94d62d06d09a997c00" translate="yes" xml:space="preserve">
          <source>Similarly, for &lt;code&gt;getElementsByClassName&lt;/code&gt;, don't prefix the passed string with a &lt;code&gt;.&lt;/code&gt;:</source>
          <target state="translated">同样，对于 &lt;code&gt;getElementsByClassName&lt;/code&gt; ，不要在传递的字符串前添加前缀 &lt;code&gt;.&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dafff354107481c6b656c836a1d0b5fa69c17d39" translate="yes" xml:space="preserve">
          <source>Similarly, the new &quot;Shadow DOM&quot; functionality being rolled out across modern browsers allows elements to be part of the document, but not query-able by document.getElementById and all of its sibling methods (querySelector, etc.). This is done to encapsulate functionality and specifically hide it.</source>
          <target state="translated">同样的,新的 &quot;影子DOM &quot;功能也在现代浏览器中推出,它允许元素成为文档的一部分,但不能通过document.getElementById和它的所有同类方法(querySelector等)查询。这样做是为了封装功能并特别隐藏它。</target>
        </trans-unit>
        <trans-unit id="586f205a19dc89dacd298b1026eddf22b562eb67" translate="yes" xml:space="preserve">
          <source>So, what should you do? You've got a few options:</source>
          <target state="translated">那么,你应该怎么做?你有几个选择。</target>
        </trans-unit>
        <trans-unit id="ad75445fc0995250056cd81b47356a9e454e1852" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;div&lt;/code&gt; appears &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;script&lt;/code&gt;. At the moment the script is executed, the element does not exist &lt;em&gt;yet&lt;/em&gt; and &lt;code&gt;getElementById&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;div&lt;/code&gt; 出现&lt;em&gt;在&lt;/em&gt; &lt;code&gt;script&lt;/code&gt; 。 在执行脚本的那一刻，该元素尚不存在&lt;em&gt;，&lt;/em&gt;并且 &lt;code&gt;getElementById&lt;/code&gt; 将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f141d4eb7c661355427cdcd27d3f176e0c5ea08" translate="yes" xml:space="preserve">
          <source>The element does not exist &lt;em&gt;at the moment&lt;/em&gt; you call &lt;code&gt;getElementById&lt;/code&gt;.</source>
          <target state="translated">调用 &lt;code&gt;getElementById&lt;/code&gt; &lt;em&gt;时，&lt;/em&gt;该元素不存在。</target>
        </trans-unit>
        <trans-unit id="e7ede7d603adcf7dfbedd030a40130e8c177ee8f" translate="yes" xml:space="preserve">
          <source>The element exists, but it is not registered in DOM [in case of HTML nodes appended dynamically from Ajax responses].</source>
          <target state="translated">该元素存在,但没有在DOM中注册[在Ajax响应动态添加HTML节点的情况下]。</target>
        </trans-unit>
        <trans-unit id="32cd415bf0c622f7c71bcfdff201777349f802ac" translate="yes" xml:space="preserve">
          <source>The element you were trying to find wasn&amp;rsquo;t in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;DOM&lt;/a&gt; when your script ran.</source>
          <target state="translated">运行脚本时，您要查找的元素不在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;DOM中&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c20f6380c5296e9dc3106f53ead7704368cb656" translate="yes" xml:space="preserve">
          <source>The element/DOM with id specified doesn't exist yet.</source>
          <target state="translated">指定的id的元素DOM还不存在。</target>
        </trans-unit>
        <trans-unit id="f7256669e7054ec931b0ef399ee9abe501be8b45" translate="yes" xml:space="preserve">
          <source>The latter case is quite common. Browsers parse and process the HTML from top to bottom. That means that any call to a DOM element which occurs before that DOM element appears in the HTML, will fail.</source>
          <target state="translated">后一种情况很常见。浏览器会从上到下解析和处理HTML。这意味着,在HTML中出现DOM元素之前,任何对DOM元素的调用都会失败。</target>
        </trans-unit>
        <trans-unit id="5ba99d17d910a347626098bad4b56ce98cddcf64" translate="yes" xml:space="preserve">
          <source>The most common forms are:</source>
          <target state="translated">最常见的形式有:</target>
        </trans-unit>
        <trans-unit id="2aeb7b0538f0d108fa33aadb5cdd665b87541c7b" translate="yes" xml:space="preserve">
          <source>The position of your DOM-reliant script can have a profound effect upon its behavior. Browsers parse HTML documents from top to bottom. Elements are added to the DOM and scripts are (generally) executed as they're encountered. &lt;strong&gt;This means that order matters.&lt;/strong&gt; Typically, scripts can't find elements which appear later in the markup because those elements have yet to be added to the DOM.</source>
          <target state="translated">依赖DOM的脚本的位置可能对其行为产生深远的影响。 浏览器从上到下解析HTML文档。 元素被添加到DOM中，并且脚本（通常）在遇到时执行。 &lt;strong&gt;这意味着顺序很重要。&lt;/strong&gt; 通常，脚本无法找到出现在标记后面的元素，因为这些元素尚未添加到DOM中。</target>
        </trans-unit>
        <trans-unit id="da5bd825790b41cd649e60bab032c4ec699cd060" translate="yes" xml:space="preserve">
          <source>The rules here are, in most cases, identical to those for CSS selectors, and can be seen in detail &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">在大多数情况下，此处的规则与CSS选择器的规则相同，请在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;此处&lt;/a&gt;详细查看 。</target>
        </trans-unit>
        <trans-unit id="5fa778e7c3c9aa6efc9a31fbba269350a13bff1a" translate="yes" xml:space="preserve">
          <source>The same applies to all selectors with jQuery. jQuery won't find elements if you &lt;em&gt;misspelled&lt;/em&gt; your selector or you are trying to select them &lt;em&gt;before they actually exist&lt;/em&gt;.</source>
          <target state="translated">这同样适用于所有使用jQuery的选择器。 如果您&lt;em&gt;拼写&lt;/em&gt;了选择器&lt;em&gt;拼写错误&lt;/em&gt;或试图&lt;em&gt;在它们实际存在之前&lt;/em&gt;对其进行选择，jQuery将无法找到&lt;em&gt;它们&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="90fc575537035603237429cd2b6951e4f61861a0" translate="yes" xml:space="preserve">
          <source>There are two reasons why an element might not exist:</source>
          <target state="translated">有两个原因,一个元素可能不存在。</target>
        </trans-unit>
        <trans-unit id="070e887ce3ce8f4a2bd57f6125ac53bf5183a409" translate="yes" xml:space="preserve">
          <source>This can be ensured by simply putting your JavaScript &lt;em&gt;after&lt;/em&gt; the corresponding DOM element</source>
          <target state="translated">只需将JavaScript放在相应的DOM元素&lt;em&gt;之后&lt;/em&gt; ，就可以确保这一点</target>
        </trans-unit>
        <trans-unit id="a381010cdf701b03dcc376cb82944d9e43aa7fd7" translate="yes" xml:space="preserve">
          <source>To do this, we register a ready event for the document.</source>
          <target state="translated">为了做到这一点,我们为文档注册一个准备好的事件。</target>
        </trans-unit>
        <trans-unit id="dc128aa7cdcba37391eb09c2e71372f3f108508a" translate="yes" xml:space="preserve">
          <source>To match an element which has two or more attributes (like two class names, or a class name and a &lt;code&gt;data-&lt;/code&gt; attribute), put the selectors for each attribute next to each other in the selector string, &lt;em&gt;without&lt;/em&gt; a space separating them (because a space indicates the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator&quot;&gt;descendant selector&lt;/a&gt;). For example, to select:</source>
          <target state="translated">要匹配具有两个或更多属性的元素（例如两个类名，或一个类名和一个 &lt;code&gt;data-&lt;/code&gt; attribute），请将每个属性的选择器在选择器字符串中彼此相邻放置， &lt;em&gt;不要&lt;/em&gt;用空格隔开（因为空格表示&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator&quot;&gt;后代选择器&lt;/a&gt; ）。 例如，选择：</target>
        </trans-unit>
        <trans-unit id="313116b8ef2d42c88923b993b1bc35879e7bac0a" translate="yes" xml:space="preserve">
          <source>Try to access the element after its declaration or alternatively use stuff like &lt;code&gt;$(document).ready();&lt;/code&gt;</source>
          <target state="translated">尝试在元素声明后访问元素，或者使用 &lt;code&gt;$(document).ready();&lt;/code&gt; 之类的东西。</target>
        </trans-unit>
        <trans-unit id="455f90d95489802d06fdb6e0c7f2ec19ee678070" translate="yes" xml:space="preserve">
          <source>Uncaught TypeError: Cannot read property 'addEventListener' of null</source>
          <target state="translated">Uncaught TypeError:无法读取空的属性'addEventListener'。</target>
        </trans-unit>
        <trans-unit id="f07cf9a0ba3f6ed7bad230b3a1a524d40a515c1a" translate="yes" xml:space="preserve">
          <source>Uncaught TypeError: Cannot read property 'style' of null</source>
          <target state="translated">Uncaught TypeError:无法读取空的属性'style'。</target>
        </trans-unit>
        <trans-unit id="8d6c4f621f3fd98dd88c2eb2ba7c098113ff02cb" translate="yes" xml:space="preserve">
          <source>Uncaught TypeError: Cannot set property '...' of null
  Uncaught TypeError: Cannot read property '...' of null</source>
          <target state="translated">Uncaught TypeError:无法设置空的属性'.....'。无法读取空的属性'...'。</target>
        </trans-unit>
        <trans-unit id="9e46c56c3da96933c13555127a321d3ea74dddb6" translate="yes" xml:space="preserve">
          <source>Uncaught TypeError: Cannot set property 'onclick' of null</source>
          <target state="translated">Uncaught TypeError:无法设置属性 &quot;onclick &quot;为空的属性 &quot;onclick&quot;。</target>
        </trans-unit>
        <trans-unit id="d3570e42a3ba550dc86040eeb782b6be83fd1511" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-defer&quot;&gt;&lt;code&gt;defer&lt;/code&gt;&lt;/a&gt; attribute of &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-defer&quot;&gt; &lt;code&gt;defer&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="5e854ff9f7b0f779cfadaf41007115eea86b7f57" translate="yes" xml:space="preserve">
          <source>Use tools [for example, webdeveloper plugin for browsers] to find duplicate ids and remove them.</source>
          <target state="translated">使用工具[例如,浏览器的webdeveloper插件]找到重复的id并删除它们。</target>
        </trans-unit>
        <trans-unit id="dfcf619bd49916c9ab2578b9fa6ef9ac5a5c9fa1" translate="yes" xml:space="preserve">
          <source>What are the possible reasons for &lt;code&gt;document.getElementById&lt;/code&gt;, &lt;code&gt;$(&quot;#id&quot;)&lt;/code&gt; or any other DOM method / jQuery selector not finding the elements?</source>
          <target state="translated">&lt;code&gt;document.getElementById&lt;/code&gt; ， &lt;code&gt;$(&quot;#id&quot;)&lt;/code&gt; 或任何其他DOM方法/ jQuery选择器找不到元素的可能原因是什么？</target>
        </trans-unit>
        <trans-unit id="f8e096c13c326ee14610dd8d0a85db716a8fe487" translate="yes" xml:space="preserve">
          <source>When an element raises an event (provided that it's a &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow-bubbling&quot;&gt;bubbling&lt;/a&gt; event and nothing stops its propagation), each parent in that element's ancestry receives the event as well. That allows us to attach a handler to an existing element and sample events as they bubble up from its descendants... even those added after the handler is attached. All we have to do is check the event to see whether it was raised by the desired element and, if so, run our code.</source>
          <target state="translated">当一个元素引发一个事件时（假设它是一个&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow-bubbling&quot;&gt;冒泡&lt;/a&gt;事件，并且没有任何东西阻止其传播），则该元素祖先中的每个父对象也会接收到该事件。 这使我们能够将处理程序附加到现有元素，并在事件从其后代冒泡时进行采样，甚至是附加处理程序后添加的事件。 我们要做的就是检查事件以查看事件是否由所需的元素引发，如果是，请运行我们的代码。</target>
        </trans-unit>
        <trans-unit id="034077f607672ac7f0bb8ae04ed3b39cd0ae8777" translate="yes" xml:space="preserve">
          <source>Why does jQuery or a DOM method such as getElementById not find the element</source>
          <target state="translated">为什么jQuery或getElementById等DOM方法找不到元素?</target>
        </trans-unit>
        <trans-unit id="dc184c711e7091bd8c98aecc5cbb62688c81257f" translate="yes" xml:space="preserve">
          <source>With querySelector, querySelectorAll, and jQuery, to match an element with a particular class name, put a &lt;code&gt;.&lt;/code&gt; directly before the class. Similarly, to match an element with a particular ID, put a &lt;code&gt;#&lt;/code&gt; directly before the ID:</source>
          <target state="translated">使用querySelector，querySelectorAll和jQuery来匹配具有特定类名的元素，请放置 &lt;code&gt;.&lt;/code&gt; 就在上课之前。 同样，要匹配具有特定ID的元素，请在ID之前直接添加 &lt;code&gt;#&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3610958c37c16c3b24428fbebdb492e6ac8edf70" translate="yes" xml:space="preserve">
          <source>You also need to make sure the methods have the proper capitalization and spelling. Use one of:</source>
          <target state="translated">你还需要确保这些方法有正确的大写和拼写。使用其中之一。</target>
        </trans-unit>
        <trans-unit id="9e3289218ac52898f053a6f0437d4e0bcbf7432d" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;defer&lt;/code&gt;, a Boolean attribute,] is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">设置[ &lt;code&gt;defer&lt;/code&gt; ，布尔属性]，向浏览器指示脚本应在文档解析后但在触发&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt; &lt;code&gt;DOMContentLoaded&lt;/code&gt; &lt;/a&gt;之前执行。</target>
        </trans-unit>
        <trans-unit id="efa4412560fb8b53d8dc861254ce0bc2ad113c4b" translate="yes" xml:space="preserve">
          <source>in which case you can also put the code just before the closing body tag (&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;) (all DOM elements will be available at the time the script is executed).</source>
          <target state="translated">在这种情况下，您也可以将代码放在结束body标签（ &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; ）之前（在执行脚本时所有DOM元素都可用）。</target>
        </trans-unit>
        <trans-unit id="4963706dc19c73d8cd5594cce8aa06cd58c3acad" translate="yes" xml:space="preserve">
          <source>jQuery &quot;getter&quot; methods (&lt;code&gt;.val()&lt;/code&gt;, &lt;code&gt;.html()&lt;/code&gt;, &lt;code&gt;.text()&lt;/code&gt;) returning &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">jQuery&amp;ldquo; getter&amp;rdquo;方法（ &lt;code&gt;.val()&lt;/code&gt; ,. &lt;code&gt;.html()&lt;/code&gt; ，.text &lt;code&gt;.text()&lt;/code&gt; ）返回 &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9802c6bb85e543ec9de385e4813742d2dfa50c5e" translate="yes" xml:space="preserve">
          <source>jQuery silently failing to bind an event handler</source>
          <target state="translated">jQuery默默无声地绑定事件处理程序失败</target>
        </trans-unit>
        <trans-unit id="b48732df8cf05d9e667edc4cd791abd8b129164a" translate="yes" xml:space="preserve">
          <source>jQuery's &lt;a href=&quot;http://api.jquery.com/on/&quot;&gt;&lt;code&gt;on()&lt;/code&gt;&lt;/a&gt; performs that logic for us. We simply provide an event name, a selector for the desired descendant, and an event handler:</source>
          <target state="translated">jQuery的&lt;a href=&quot;http://api.jquery.com/on/&quot;&gt; &lt;code&gt;on()&lt;/code&gt; &lt;/a&gt;为我们执行了该逻辑。 我们只需提供一个事件名称，所需后代的选择器和事件处理程序即可：</target>
        </trans-unit>
        <trans-unit id="f1554d2488c689db68997692a791114636eddfeb" translate="yes" xml:space="preserve">
          <source>the problem is that the dom element 'speclist' is not created at the time the javascript code is getting executed. So I put the javascript code inside a function and called that function on body onload event.</source>
          <target state="translated">问题是在执行javascript代码的时候没有创建dom元素'speclist'。所以我将javascript代码放在一个函数中,并在body onload事件中调用该函数。</target>
        </trans-unit>
        <trans-unit id="ea000fff68ad9d8ef18246e6d50c1bd51cfc4412" translate="yes" xml:space="preserve">
          <source>this syntax is used to allow the script to load via HTTPS on a page with protocol https:// and to load the HTTP version on a page with protocol http://</source>
          <target state="translated">该语法用于允许脚本通过HTTPS加载到协议为https:/的页面上,并在协议为http://的页面上加载HTTP版本。</target>
        </trans-unit>
        <trans-unit id="37ffc3ba660db3114b71640e124172897eb3e550" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;div.parent &amp;gt; span[data-username=&quot;bob&quot;]&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;div.parent &amp;gt; span[data-username=&quot;bob&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27e695518a1c10295c5be7d8a96988309a4a6fef" translate="yes" xml:space="preserve">
          <source>use the query string &lt;code&gt;.foo.bar&lt;/code&gt;. To select</source>
          <target state="translated">使用查询字符串 &lt;code&gt;.foo.bar&lt;/code&gt; 。 选择</target>
        </trans-unit>
        <trans-unit id="d0d0d49284addfeef0dde4bef64d02e1717021c3" translate="yes" xml:space="preserve">
          <source>use the query string &lt;code&gt;.foo[data-bar=&quot;someData&quot;]&lt;/code&gt;. To select the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; below:</source>
          <target state="translated">使用查询字符串 &lt;code&gt;.foo[data-bar=&quot;someData&quot;]&lt;/code&gt; 。 要选择下面的 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
