<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/14028959">
    <body>
      <group id="14028959">
        <trans-unit id="8924a2a5367a406fb1257247f96708b20d64a0ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://api.jquery.com/on/#direct-and-delegated-events&quot;&gt;Delegated events&lt;/a&gt; have the advantage that they can process events from descendant elements that are added to the document at a later time.</source>
          <target state="translated">Преимущество &lt;a href=&quot;http://api.jquery.com/on/#direct-and-delegated-events&quot;&gt;делегированных событий&lt;/a&gt; заключается в том, что они могут обрабатывать события от элементов-потомков, которые добавляются в документ позднее.</target>
        </trans-unit>
        <trans-unit id="e77d7bd8d73db8c4505911b5e1ebf30630b866f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getElementById&lt;/code&gt; requires the passed string to be the ID &lt;em&gt;verbatim&lt;/em&gt;, and nothing else. If you prefix the passed string with a &lt;code&gt;#&lt;/code&gt;, and the ID does not start with a &lt;code&gt;#&lt;/code&gt;, nothing will be selected:</source>
          <target state="translated">&lt;code&gt;getElementById&lt;/code&gt; требует, чтобы переданная строка была идентификатором ID, и больше ничего. Если вы передаете переданную строку с &lt;code&gt;#&lt;/code&gt; , а идентификатор не начинается с &lt;code&gt;#&lt;/code&gt; , ничего не будет выбрано:</target>
        </trans-unit>
        <trans-unit id="c0ba424acb76191e266fd4e8762af34efc701a68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;For the remainder of this answer I will use &lt;code&gt;getElementById&lt;/code&gt; as example, but the same applies to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.getElementsByTagName&quot;&gt;&lt;code&gt;getElementsByTagName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Document.querySelector&quot;&gt;&lt;code&gt;querySelector&lt;/code&gt;&lt;/a&gt; and any other DOM method that selects elements.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;В оставшейся части этого ответа я буду использовать &lt;code&gt;getElementById&lt;/code&gt; в качестве примера, но то же самое относится к &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/element.getElementsByTagName&quot;&gt; &lt;code&gt;getElementsByTagName&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Document.querySelector&quot;&gt; &lt;code&gt;querySelector&lt;/code&gt; &lt;/a&gt; и любому другому методу DOM, который выбирает элементы.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="015a0be7c63c50d99aee14b3e37b72327797108f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Possible Reasons&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Возможные причины&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ed5bd5bb9f28780bff70ccf6e2b10fee249081b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reasons why id based selectors don't work&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Причины, по которым селекторы на основе идентификаторов не работают&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14c7390212a62ca68547159c016f8ba2b1e8e9a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short and simple:&lt;/strong&gt; Because the elements you are looking for do not exist in the document (yet).</source>
          <target state="translated">&lt;strong&gt;Коротко и просто:&lt;/strong&gt; потому что искомые элементы не существуют в документе (пока).</target>
        </trans-unit>
        <trans-unit id="72f2b8ea240994973b8c98d5825ace1bb9366049" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solutions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solutions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a33cff9020a55fa3185256ec7c4be09e6bf6115" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jQuery&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jQuery&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff5e9cc2d9b8cc293b94e8c06f8a77f837a8697c" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note: Placing scripts at the bottom is generally considered a &lt;a href=&quot;http://developer.yahoo.com/performance/rules.html#js_bottom&quot;&gt;best practice&lt;/a&gt;.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;Примечание. Размещение сценариев внизу обычно считается &lt;a href=&quot;http://developer.yahoo.com/performance/rules.html#js_bottom&quot;&gt;лучшей практикой&lt;/a&gt; .&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="1593ebef4da197c68a8976ea44377017c1bc34f7" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note: The &lt;code&gt;defer&lt;/code&gt; attribute certainly &lt;em&gt;seems&lt;/em&gt; like a magic bullet &lt;em&gt;but&lt;/em&gt; it's important to be aware of the caveats...&lt;br/&gt;
1. &lt;code&gt;defer&lt;/code&gt; can only be used for external scripts, i.e.: those having a &lt;code&gt;src&lt;/code&gt; attribute.&lt;br/&gt;
2. be aware of &lt;a href=&quot;http://caniuse.com/script-defer&quot;&gt;browser support&lt;/a&gt;, i.e.: buggy implementation in IE &amp;lt; 10&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;Примечание: атрибут &lt;code&gt;defer&lt;/code&gt; , безусловно, &lt;em&gt;выглядит&lt;/em&gt; как волшебная пуля, &lt;em&gt;но&lt;/em&gt; важно знать о предостережениях ...&lt;/sub&gt; &lt;sub&gt;&lt;br/&gt;&lt;/sub&gt; &lt;sub&gt;1. &lt;code&gt;defer&lt;/code&gt; может использоваться только для внешних скриптов, то есть для тех, которые имеют атрибут &lt;code&gt;src&lt;/code&gt; .&lt;/sub&gt; &lt;sub&gt;&lt;br/&gt;&lt;/sub&gt; &lt;sub&gt;2. знать о &lt;a href=&quot;http://caniuse.com/script-defer&quot;&gt;поддержке браузера&lt;/a&gt; , то есть: ошибочная реализация в IE &amp;lt;10&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="a69194614b3a689f24407f5dd67dd82b01afe526" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note: Typically, this pattern is reserved for elements which didn't exist at load-time &lt;em&gt;or&lt;/em&gt; to avoid attaching a large amount of handlers. It's also worth pointing out that while I've attached a handler to &lt;code&gt;document&lt;/code&gt; (for demonstrative purposes), you should select the nearest reliable ancestor.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;Примечание. Как правило, этот шаблон зарезервирован для элементов, которые не существовали во время загрузки &lt;em&gt;или&lt;/em&gt; чтобы избежать подключения большого количества обработчиков.&lt;/sub&gt; &lt;sub&gt;Также стоит отметить, что, хотя я прикрепил обработчик к &lt;code&gt;document&lt;/code&gt; (в демонстрационных целях), вы должны выбрать ближайшего надежного предка.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5662f3c642a70828b666a05142606ad1be970a12" translate="yes" xml:space="preserve">
          <source>&lt;sub&gt;Note: You could simply bind to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/DOMContentLoaded&quot;&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt;&lt;/a&gt; or  &lt;code&gt;window.&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window.onload?redirect=no&quot;&gt;onload&lt;/a&gt;&lt;/code&gt; but each has its caveats. jQuery's &lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt; delivers a hybrid solution.&lt;/sub&gt;</source>
          <target state="translated">&lt;sub&gt;Примечание. Вы можете просто привязать &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/DOMContentLoaded&quot;&gt; &lt;code&gt;DOMContentLoaded&lt;/code&gt; &lt;/a&gt; или &lt;code&gt;window.&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window.onload?redirect=no&quot;&gt;onload&lt;/a&gt;&lt;/code&gt; &lt;/sub&gt; &lt;sub&gt;но у каждого есть свои предостережения.&lt;/sub&gt; &lt;sub&gt;Функция jQuery's &lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt; предоставляет гибридное решение.&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="080383d3ea001a7b11649ddd56e96e875ad6928e" translate="yes" xml:space="preserve">
          <source>A standard DOM method returning &lt;code&gt;null&lt;/code&gt; resulting in any of several errors:</source>
          <target state="translated">Стандартный метод DOM, возвращающий &lt;code&gt;null&lt;/code&gt; приводящий к любой из нескольких ошибок:</target>
        </trans-unit>
        <trans-unit id="9bca2ae53e344091d535523c3a1cc32d38418930" translate="yes" xml:space="preserve">
          <source>Again, though, it is most likely that the element you are looking for simply is not (yet) in the document, and you should do as Felix suggests. However, you should also be aware that that is increasingly not the only reason that an element might be unfindable (either temporarily or permanently).</source>
          <target state="translated">Опять же,скорее всего,элемента,который вы ищете,просто нет (пока)в документе,и вы должны сделать то,что предлагает Феликс.Однако,вы также должны знать,что это не единственная причина,по которой элемент может быть необнаруживаемым (временно или навсегда).</target>
        </trans-unit>
        <trans-unit id="07610623ac040b4810c15fdab757ac4ab9084743" translate="yes" xml:space="preserve">
          <source>Alternatively you can also use the shorthand syntax:</source>
          <target state="translated">В качестве альтернативы вы также можете использовать синтаксис сокращений:</target>
        </trans-unit>
        <trans-unit id="bdca6ee54e3417518e64c91140f6e7f5b753a038" translate="yes" xml:space="preserve">
          <source>An added twist is when jQuery is not found because you have loaded the script without protocol and are running from file system:</source>
          <target state="translated">Добавленный поворот-это когда jQuery не найден,потому что вы загрузили скрипт без протокола и запущены из файловой системы:</target>
        </trans-unit>
        <trans-unit id="1d339675909c02dd389577b6db384e83f090bc80" translate="yes" xml:space="preserve">
          <source>An element with the passed ID really does not exist in the document. You should double check that the ID you pass to &lt;code&gt;getElementById&lt;/code&gt; really matches an ID of an existing element in the (generated) HTML and that you have not &lt;em&gt;misspelled&lt;/em&gt; the ID (IDs are &lt;em&gt;case-sensitive&lt;/em&gt;!).</source>
          <target state="translated">Элемент с переданным идентификатором действительно не существует в документе. Вы должны дважды проверить, что идентификатор, который вы передаете &lt;code&gt;getElementById&lt;/code&gt; , действительно совпадает с идентификатором существующего элемента в (сгенерированном) HTML, и что вы не &lt;em&gt;ошиблись&lt;/em&gt; в идентификаторе (идентификаторы &lt;em&gt;чувствительны к регистру&lt;/em&gt; !).</target>
        </trans-unit>
        <trans-unit id="49f80df991332bde3bd1f84092e388c4b4b7e458" translate="yes" xml:space="preserve">
          <source>Any other spelling or capitalization will not work. For example, &lt;code&gt;document.getElementByClassName&lt;/code&gt; will throw an error.</source>
          <target state="translated">Любое другое написание или заглавные буквы не будут работать. Например, &lt;code&gt;document.getElementByClassName&lt;/code&gt; выдаст ошибку.</target>
        </trans-unit>
        <trans-unit id="a213d53bf3b6149f7926f33dada23170edcc8f6d" translate="yes" xml:space="preserve">
          <source>As @FelixKling pointed out, the most likely scenario is that the nodes you are looking for do not exist (yet).</source>
          <target state="translated">Как отметил @FelixKling,наиболее вероятным сценарием является то,что узлов,которые вы ищете,еще не существует (пока).</target>
        </trans-unit>
        <trans-unit id="60a04123f756439b784cb366dca7abc4a288daf3" translate="yes" xml:space="preserve">
          <source>As almost everything we do when using jQuery reads or manipulates the document object model (DOM), we need to make sure that we start adding events etc. as soon as the DOM is ready.</source>
          <target state="translated">Поскольку почти все,что мы делаем при использовании jQuery,читает или манипулирует объектной моделью документа (DOM),нам нужно убедиться,что мы начинаем добавлять события и т.д.,как только DOM готов.</target>
        </trans-unit>
        <trans-unit id="d60f5991a3d77cef7e814ebfd8ca813c8403f2ec" translate="yes" xml:space="preserve">
          <source>Before you make a call to &lt;code&gt;getElementById&lt;/code&gt; (or any DOM method for that matter), make sure the elements you want to access exist, i.e. the DOM is loaded.</source>
          <target state="translated">Перед тем как сделать вызов &lt;code&gt;getElementById&lt;/code&gt; (или любого другого метода DOM), убедитесь, что элементы, к которым вы хотите получить доступ, существуют, то есть загружен DOM.</target>
        </trans-unit>
        <trans-unit id="101e21a62a75fdd1d662483537000acc22dc3a9a" translate="yes" xml:space="preserve">
          <source>Both are equivalent.</source>
          <target state="translated">Оба эквивалентны.</target>
        </trans-unit>
        <trans-unit id="85831e3e67da9b798926d1812a4b2ba0e21df397" translate="yes" xml:space="preserve">
          <source>Capitalization and spelling &lt;strong&gt;does matter&lt;/strong&gt; for all of the above. If the capitalization is different, or the spelling is different, the element will not be selected:</source>
          <target state="translated">Капитализация и орфография &lt;strong&gt;имеет значение&lt;/strong&gt; для всего вышеперечисленного. Если заглавная буква отличается или орфография отличается, элемент не будет выбран:</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">Рассмотрим следующий пример:</target>
        </trans-unit>
        <trans-unit id="2c56ae4b9ac8902b0b04046e5149f74839292980" translate="yes" xml:space="preserve">
          <source>Consider the following markup; script #1 fails to find the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; while script #2 succeeds:</source>
          <target state="translated">Рассмотрим следующую разметку; сценарий № 1 не может найти &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; ,в то время как сценарий № 2 завершается успешно:</target>
        </trans-unit>
        <trans-unit id="7c3ebe530f2ce5e3b5c4b4bf17fd9884c0d12366" translate="yes" xml:space="preserve">
          <source>Defer your script until the DOM has been completely parsed, using &lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt;&lt;code&gt;ready()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Отложите ваш скрипт, пока DOM не будет полностью проанализирован, используя &lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt; &lt;code&gt;ready()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b8cf7e4da91612229d4bcc0a48e1bd4f4a2e3dce" translate="yes" xml:space="preserve">
          <source>Example problems include:</source>
          <target state="translated">Примеры проблем включают в себя:</target>
        </trans-unit>
        <trans-unit id="9e0d870c1c90acdabf9461a58d30da031ec538fd" translate="yes" xml:space="preserve">
          <source>Example using bootstrap:</source>
          <target state="translated">Пример использования бутстрапа:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">Расширить фрагмент</target>
        </trans-unit>
        <trans-unit id="f15bc741c51141459dfa4c6314441e808bf627e7" translate="yes" xml:space="preserve">
          <source>First make sure that jQuery is loaded properly. &lt;a href=&quot;http://www.netmagazine.com/tutorials/javascript-debugging-beginners&quot;&gt;Use the browser's developer tools&lt;/a&gt; to find out whether the jQuery file was found and correct the URL if it wasn't (e.g. add the &lt;code&gt;http:&lt;/code&gt; or &lt;code&gt;https:&lt;/code&gt; scheme at the beginning, adjust the path, etc.)</source>
          <target state="translated">Сначала убедитесь, что jQuery загружен правильно. &lt;a href=&quot;http://www.netmagazine.com/tutorials/javascript-debugging-beginners&quot;&gt;Используйте инструменты разработчика браузера,&lt;/a&gt; чтобы выяснить, был ли найден файл jQuery, и исправьте URL-адрес, если его нет (например, добавьте схему &lt;code&gt;http:&lt;/code&gt; или &lt;code&gt;https:&lt;/code&gt; в начале, измените путь и т. Д.)</target>
        </trans-unit>
        <trans-unit id="f25a0dc25d2dd9a6949b815f32f5128e6fdd633c" translate="yes" xml:space="preserve">
          <source>For elements coming from Ajax responses, use the &lt;code&gt;.bind()&lt;/code&gt; method of jQuery. Older versions of jQuery had &lt;code&gt;.live()&lt;/code&gt; for the same.</source>
          <target state="translated">Для элементов, поступающих из ответов Ajax, используйте метод jQuery &lt;code&gt;.bind()&lt;/code&gt; . Более старые версии jQuery имели &lt;code&gt;.live()&lt;/code&gt; для того же самого.</target>
        </trans-unit>
        <trans-unit id="6831d2a757d8250c7a891fd7a563a0288881a19d" translate="yes" xml:space="preserve">
          <source>For reference, here's the code from that &lt;a href=&quot;https://gh-canon.github.io/misc-demos/log-test-click.js&quot;&gt;external script&lt;/a&gt;:</source>
          <target state="translated">Для справки вот код из этого &lt;a href=&quot;https://gh-canon.github.io/misc-demos/log-test-click.js&quot;&gt;внешнего скрипта&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="37538f6aa944cc5a5401f51e8b09cf68e53008e5" translate="yes" xml:space="preserve">
          <source>However, modern development practices can often manipulate document elements outside of the document tree either with DocumentFragments or simply detaching/reattaching current elements directly.  Such techniques may be used as part of JavaScript templating or to avoid excessive repaint/reflow operations while the elements in question are being heavily altered.</source>
          <target state="translated">Однако современные методы разработки часто могут манипулировать элементами документа вне дерева документа либо с помощью DocumentFragmentents,либо просто отсоединяя текущие элементы напрямую.Такие методы могут использоваться как часть JavaScript-шаблонирования или для того,чтобы избежать излишних операций перерисовки в то время,когда элементы,о которых идет речь,сильно видоизменяются.</target>
        </trans-unit>
        <trans-unit id="abd4457878d0559055496b1a954b5f4cce92f90b" translate="yes" xml:space="preserve">
          <source>If script execution order is not the issue, another possible cause of the problem is that the element is not being selected properly:</source>
          <target state="translated">Если порядок выполнения скрипта не является проблемой,то другой возможной причиной проблемы является неправильный выбор элемента:</target>
        </trans-unit>
        <trans-unit id="e30cbec42caa43d109a65a685b33f9d790d949e9" translate="yes" xml:space="preserve">
          <source>If the element you are trying to access is inside an &lt;code&gt;iframe&lt;/code&gt; and you try to access it outside the context of the &lt;code&gt;iframe&lt;/code&gt; this will also cause it to fail.</source>
          <target state="translated">Если элемент, к которому вы пытаетесь получить доступ, находится внутри &lt;code&gt;iframe&lt;/code&gt; , и вы пытаетесь получить к нему доступ вне контекста &lt;code&gt;iframe&lt;/code&gt; , это также приведет к его отказу.</target>
        </trans-unit>
        <trans-unit id="c75388ce5a2b84caf295bcef65acf00bd12ee0e4" translate="yes" xml:space="preserve">
          <source>If you want to get an element in an iframe you can find out how &lt;a href=&quot;https://stackoverflow.com/a/1088569/1435985&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Если вы хотите получить элемент в iframe, вы можете узнать, как &lt;a href=&quot;https://stackoverflow.com/a/1088569/1435985&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95d29a32089ccae4e1b2bb1d0691e6b1243e83aa" translate="yes" xml:space="preserve">
          <source>In fact, the &lt;a href=&quot;http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery&quot;&gt;jQuery tutorial&lt;/a&gt; explicitly states:</source>
          <target state="translated">На самом деле, &lt;a href=&quot;http://docs.jquery.com/Tutorials:Getting_Started_with_jQuery&quot;&gt;учебник&lt;/a&gt; по jQuery прямо заявляет:</target>
        </trans-unit>
        <trans-unit id="a691503c17cd23abef6910c23b5d54eef8d766bf" translate="yes" xml:space="preserve">
          <source>Incidentally, in the &lt;a href=&quot;http://caniuse.com/queryselector&quot;&gt;majority of contemporary browsers&lt;/a&gt;, which implement &lt;code&gt;querySelector()&lt;/code&gt; and &lt;code&gt;querySelectorAll()&lt;/code&gt; methods, CSS-style notation is used to retrieve an element by its &lt;code&gt;id&lt;/code&gt;, for example: &lt;code&gt;document.querySelector('#elementID')&lt;/code&gt;, as opposed to the method by which an element is retrieved by its &lt;code&gt;id&lt;/code&gt; under &lt;code&gt;document.getElementById('elementID')&lt;/code&gt;; in the first the &lt;code&gt;#&lt;/code&gt; character is essential, in the second it would lead to the element not being retrieved.</source>
          <target state="translated">Между прочим, в &lt;a href=&quot;http://caniuse.com/queryselector&quot;&gt;большинстве современных браузеров&lt;/a&gt; , которые реализуют методы &lt;code&gt;querySelector()&lt;/code&gt; и &lt;code&gt;querySelectorAll()&lt;/code&gt; , нотация в стиле CSS используется для извлечения элемента по его &lt;code&gt;id&lt;/code&gt; , например: &lt;code&gt;document.querySelector('#elementID')&lt;/code&gt; , в отличие от метод, с помощью которого элемент извлекается по его &lt;code&gt;id&lt;/code&gt; в &lt;code&gt;document.getElementById('elementID')&lt;/code&gt; ; в первом символ &lt;code&gt;#&lt;/code&gt; важен, во втором это приведет к тому, что элемент не будет извлечен.</target>
        </trans-unit>
        <trans-unit id="47f9b9cf5ebdeefe6717ccf7045b5df0ccb11c3f" translate="yes" xml:space="preserve">
          <source>It has the unfortunate side effect of attempting and failing to load &lt;code&gt;file://somecdn.somewhere.com...&lt;/code&gt;</source>
          <target state="translated">Это неудачный побочный эффект при попытке загрузить &lt;code&gt;file://somecdn.somewhere.com...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d150f419df3bd87d0a85b14dd917cdb6a7970597" translate="yes" xml:space="preserve">
          <source>Listening to the &lt;code&gt;load&lt;/code&gt;/&lt;code&gt;DOMContentLoaded&lt;/code&gt;  events is exactly what jQuery is doing with &lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt;&lt;code&gt;.ready()&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[docs]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt;. All your jQuery code that affects DOM element should be inside that event handler.</source>
          <target state="translated">Прослушивание событий &lt;code&gt;load&lt;/code&gt; / &lt;code&gt;DOMContentLoaded&lt;/code&gt; - это именно то, что jQuery делает с &lt;a href=&quot;http://api.jquery.com/ready/&quot;&gt; &lt;code&gt;.ready()&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[docs]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; . Весь ваш код jQuery, который влияет на элемент DOM, должен быть внутри этого обработчика событий.</target>
        </trans-unit>
        <trans-unit id="916540a77390cfb70e2e75b4146066ec1363d178" translate="yes" xml:space="preserve">
          <source>Make sure you pass a string to these selector methods. If you pass something that isn't a string to &lt;code&gt;querySelector&lt;/code&gt;, &lt;code&gt;getElementById&lt;/code&gt;, etc, it almost certainly won't work.</source>
          <target state="translated">Убедитесь, что вы передали строку этим методам селектора. Если вы передадите что-то, что не является строкой, в &lt;code&gt;querySelector&lt;/code&gt; , &lt;code&gt;getElementById&lt;/code&gt; и т. Д., Это почти наверняка не сработает.</target>
        </trans-unit>
        <trans-unit id="a95828059436c8228e75685affdaa482639ff97a" translate="yes" xml:space="preserve">
          <source>More than one element with the same id is present which is causing a conflict.</source>
          <target state="translated">Присутствует не один элемент с одним и тем же идентификатором,который вызывает конфликт.</target>
        </trans-unit>
        <trans-unit id="f931faf45cd462de3ad4f54b1ce6ac76a24330e1" translate="yes" xml:space="preserve">
          <source>Move your script further down the page, just before the closing body tag. Organized in this fashion, the rest of the document is parsed before your script is executed:</source>
          <target state="translated">Передвиньте свой скрипт дальше по странице,прямо перед закрывающим тегом тела.Организованный таким образом,остальная часть документа анализируется перед выполнением вашего скрипта:</target>
        </trans-unit>
        <trans-unit id="538144420dc5bec57e3c11f07c6303e342cd5a73" translate="yes" xml:space="preserve">
          <source>My solution was to not use the id of an anchor element: &lt;code&gt;&amp;lt;a id='star_wars'&amp;gt;Place to jump to&amp;lt;/a&amp;gt;&lt;/code&gt;. Apparently blazor and other spa frameworks have issues jumping to anchors on the same page. To get around that I had to use &lt;code&gt;document.getElementById('star_wars')&lt;/code&gt;. However this didn't work until I put the id in a paragraph element instead: &lt;code&gt;&amp;lt;p id='star_wars'&amp;gt;Some paragraph&amp;lt;p&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Моим решением было не использовать идентификатор элемента привязки: &lt;code&gt;&amp;lt;a id='star_wars'&amp;gt;Place to jump to&amp;lt;/a&amp;gt;&lt;/code&gt; . Видимо, у блейзоров и других фреймворков спа есть проблемы с переходом на якоря на той же странице. Чтобы обойти это, я должен был использовать &lt;code&gt;document.getElementById('star_wars')&lt;/code&gt; . Однако это не сработало, пока я не поместил идентификатор в элемент абзаца: &lt;code&gt;&amp;lt;p id='star_wars'&amp;gt;Some paragraph&amp;lt;p&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f80d48c6e6bd62e1187567c2ae4b2160075cdb2" translate="yes" xml:space="preserve">
          <source>Option 1: Move your script</source>
          <target state="translated">Вариант 1:Переместить ваш сценарий</target>
        </trans-unit>
        <trans-unit id="e5d3dc77c5774c2e4b5d0622ef95ea41d703f3d7" translate="yes" xml:space="preserve">
          <source>Option 2: jQuery's &lt;code&gt;ready()&lt;/code&gt;</source>
          <target state="translated">Вариант 2: JQuery &lt;code&gt;ready()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="765a188dc2bbe9e58e82091d54b34d3cf87c6084" translate="yes" xml:space="preserve">
          <source>Option 3: Event Delegation</source>
          <target state="translated">Вариант 3:Делегирование мероприятий</target>
        </trans-unit>
        <trans-unit id="ed487ab0a08e5b243ca84ee80c8218cb2fdfacc2" translate="yes" xml:space="preserve">
          <source>Option 4: The &lt;code&gt;defer&lt;/code&gt; attribute</source>
          <target state="translated">Вариант 4: атрибут &lt;code&gt;defer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80d1e84071881f5dcaf1e91b9b8f51255096fe78" translate="yes" xml:space="preserve">
          <source>Other solutions include listening to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/window.onload&quot;&gt;&lt;code&gt;load&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla_event_reference/DOMContentLoaded_%28event%29&quot;&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; events. In these cases it does not matter where in the document you place the JavaScript code, you just have to remember to put all DOM processing code in the event handlers.</source>
          <target state="translated">Другие решения включают прослушивание событий &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/window.onload&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla_event_reference/DOMContentLoaded_%28event%29&quot;&gt; &lt;code&gt;DOMContentLoaded&lt;/code&gt; &lt;em&gt;&lt;sup&gt;[MDN]&lt;/sup&gt;&lt;/em&gt;&lt;/a&gt; . В этих случаях не имеет значения, где в документе вы размещаете код JavaScript, вы просто должны помнить, чтобы поместить весь код обработки DOM в обработчики событий.</target>
        </trans-unit>
        <trans-unit id="0a902d3f198dad7513a2e7821cf1e4cf668118f7" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;http://www.quirksmode.org/js/introevents.html&quot;&gt;articles at quirksmode.org&lt;/a&gt; for more information regarding event handling and browser differences.</source>
          <target state="translated">Пожалуйста, смотрите &lt;a href=&quot;http://www.quirksmode.org/js/introevents.html&quot;&gt;статьи на quirksmode.org&lt;/a&gt; для получения дополнительной информации об обработке событий и различиях в браузерах.</target>
        </trans-unit>
        <trans-unit id="7e4ff926baa4becadd4abb94d62d06d09a997c00" translate="yes" xml:space="preserve">
          <source>Similarly, for &lt;code&gt;getElementsByClassName&lt;/code&gt;, don't prefix the passed string with a &lt;code&gt;.&lt;/code&gt;:</source>
          <target state="translated">Аналогично, для &lt;code&gt;getElementsByClassName&lt;/code&gt; не добавляйте переданную строку с префиксом &lt;code&gt;.&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dafff354107481c6b656c836a1d0b5fa69c17d39" translate="yes" xml:space="preserve">
          <source>Similarly, the new &quot;Shadow DOM&quot; functionality being rolled out across modern browsers allows elements to be part of the document, but not query-able by document.getElementById and all of its sibling methods (querySelector, etc.). This is done to encapsulate functionality and specifically hide it.</source>
          <target state="translated">Аналогично,новая функциональность &quot;Shadow DOM&quot;,распространяемая в современных браузерах,позволяет элементам быть частью документа,но не запрашиваться Document.getElementById и всеми его родственными методами (querySelector и т.д.).Это сделано для того,чтобы инкапсулировать функциональность и специально скрыть ее.</target>
        </trans-unit>
        <trans-unit id="586f205a19dc89dacd298b1026eddf22b562eb67" translate="yes" xml:space="preserve">
          <source>So, what should you do? You've got a few options:</source>
          <target state="translated">Так что же тебе делать? У тебя есть несколько вариантов:</target>
        </trans-unit>
        <trans-unit id="ad75445fc0995250056cd81b47356a9e454e1852" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;div&lt;/code&gt; appears &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;script&lt;/code&gt;. At the moment the script is executed, the element does not exist &lt;em&gt;yet&lt;/em&gt; and &lt;code&gt;getElementById&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;div&lt;/code&gt; появляется &lt;em&gt;после&lt;/em&gt; &lt;code&gt;script&lt;/code&gt; . В настоящий момент скрипт выполняется, элемент еще не существует, и &lt;code&gt;getElementById&lt;/code&gt; вернет значение &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f141d4eb7c661355427cdcd27d3f176e0c5ea08" translate="yes" xml:space="preserve">
          <source>The element does not exist &lt;em&gt;at the moment&lt;/em&gt; you call &lt;code&gt;getElementById&lt;/code&gt;.</source>
          <target state="translated">Элемент не существует &lt;em&gt;в тот момент, когда&lt;/em&gt; вы вызываете &lt;code&gt;getElementById&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7ede7d603adcf7dfbedd030a40130e8c177ee8f" translate="yes" xml:space="preserve">
          <source>The element exists, but it is not registered in DOM [in case of HTML nodes appended dynamically from Ajax responses].</source>
          <target state="translated">Элемент существует,но он не зарегистрирован в DOM [в случае HTML-узлов,динамически добавляемых из ответов Ajax].</target>
        </trans-unit>
        <trans-unit id="32cd415bf0c622f7c71bcfdff201777349f802ac" translate="yes" xml:space="preserve">
          <source>The element you were trying to find wasn&amp;rsquo;t in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;DOM&lt;/a&gt; when your script ran.</source>
          <target state="translated">Элемент, который вы пытались найти, отсутствовал в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model&quot;&gt;DOM,&lt;/a&gt; когда выполнялся ваш скрипт.</target>
        </trans-unit>
        <trans-unit id="5c20f6380c5296e9dc3106f53ead7704368cb656" translate="yes" xml:space="preserve">
          <source>The element/DOM with id specified doesn't exist yet.</source>
          <target state="translated">ЭлементDOM с указанным id еще не существует.</target>
        </trans-unit>
        <trans-unit id="f7256669e7054ec931b0ef399ee9abe501be8b45" translate="yes" xml:space="preserve">
          <source>The latter case is quite common. Browsers parse and process the HTML from top to bottom. That means that any call to a DOM element which occurs before that DOM element appears in the HTML, will fail.</source>
          <target state="translated">Последний случай довольно распространен.Браузеры разбирают и обрабатывают HTML сверху вниз.Это означает,что любой вызов DOM-элемента,который произойдет до того,как этот DOM-элемент появится в HTML,будет неудачным.</target>
        </trans-unit>
        <trans-unit id="5ba99d17d910a347626098bad4b56ce98cddcf64" translate="yes" xml:space="preserve">
          <source>The most common forms are:</source>
          <target state="translated">Наиболее распространенные формы:</target>
        </trans-unit>
        <trans-unit id="2aeb7b0538f0d108fa33aadb5cdd665b87541c7b" translate="yes" xml:space="preserve">
          <source>The position of your DOM-reliant script can have a profound effect upon its behavior. Browsers parse HTML documents from top to bottom. Elements are added to the DOM and scripts are (generally) executed as they're encountered. &lt;strong&gt;This means that order matters.&lt;/strong&gt; Typically, scripts can't find elements which appear later in the markup because those elements have yet to be added to the DOM.</source>
          <target state="translated">Положение вашего DOM-зависимого скрипта может сильно повлиять на его поведение. Браузеры анализируют HTML-документы сверху вниз. Элементы добавляются в DOM, и сценарии (как правило) выполняются по мере их появления. &lt;strong&gt;Это означает, что порядок имеет значение.&lt;/strong&gt; Как правило, сценарии не могут найти элементы, которые появляются позже в разметке, поскольку эти элементы еще не добавлены в DOM.</target>
        </trans-unit>
        <trans-unit id="da5bd825790b41cd649e60bab032c4ec699cd060" translate="yes" xml:space="preserve">
          <source>The rules here are, in most cases, identical to those for CSS selectors, and can be seen in detail &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Правила здесь, в большинстве случаев, идентичны правилам для селекторов CSS, и их можно подробно увидеть &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fa778e7c3c9aa6efc9a31fbba269350a13bff1a" translate="yes" xml:space="preserve">
          <source>The same applies to all selectors with jQuery. jQuery won't find elements if you &lt;em&gt;misspelled&lt;/em&gt; your selector or you are trying to select them &lt;em&gt;before they actually exist&lt;/em&gt;.</source>
          <target state="translated">То же самое относится ко всем селекторам с jQuery. jQuery не найдет элементы, если вы &lt;em&gt;неправильно написали&lt;/em&gt; свой селектор или пытаетесь выбрать их &lt;em&gt;до того, как они реально появятся&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="90fc575537035603237429cd2b6951e4f61861a0" translate="yes" xml:space="preserve">
          <source>There are two reasons why an element might not exist:</source>
          <target state="translated">Есть две причины,по которым элемент может не существовать:</target>
        </trans-unit>
        <trans-unit id="070e887ce3ce8f4a2bd57f6125ac53bf5183a409" translate="yes" xml:space="preserve">
          <source>This can be ensured by simply putting your JavaScript &lt;em&gt;after&lt;/em&gt; the corresponding DOM element</source>
          <target state="translated">Это можно сделать, просто поместив свой JavaScript &lt;em&gt;после&lt;/em&gt; соответствующего элемента DOM</target>
        </trans-unit>
        <trans-unit id="a381010cdf701b03dcc376cb82944d9e43aa7fd7" translate="yes" xml:space="preserve">
          <source>To do this, we register a ready event for the document.</source>
          <target state="translated">Для этого мы регистрируем готовое событие для документа.</target>
        </trans-unit>
        <trans-unit id="dc128aa7cdcba37391eb09c2e71372f3f108508a" translate="yes" xml:space="preserve">
          <source>To match an element which has two or more attributes (like two class names, or a class name and a &lt;code&gt;data-&lt;/code&gt; attribute), put the selectors for each attribute next to each other in the selector string, &lt;em&gt;without&lt;/em&gt; a space separating them (because a space indicates the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator&quot;&gt;descendant selector&lt;/a&gt;). For example, to select:</source>
          <target state="translated">Чтобы сопоставить элемент, имеющий два или более атрибута (например, два имени класса или имя класса и атрибут &lt;code&gt;data-&lt;/code&gt; ), поместите селекторы для каждого атрибута рядом друг с другом в строке селектора, &lt;em&gt;без&lt;/em&gt; пробела, разделяющего их (поскольку пробел указывает на &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Descendant_combinator&quot;&gt;потомок селектора&lt;/a&gt; ). Например, чтобы выбрать:</target>
        </trans-unit>
        <trans-unit id="313116b8ef2d42c88923b993b1bc35879e7bac0a" translate="yes" xml:space="preserve">
          <source>Try to access the element after its declaration or alternatively use stuff like &lt;code&gt;$(document).ready();&lt;/code&gt;</source>
          <target state="translated">Попробуйте получить доступ к элементу после его объявления или использовать что-то вроде &lt;code&gt;$(document).ready();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="455f90d95489802d06fdb6e0c7f2ec19ee678070" translate="yes" xml:space="preserve">
          <source>Uncaught TypeError: Cannot read property 'addEventListener' of null</source>
          <target state="translated">Не пойманный типОшибка:Не могу прочитать свойство 'addEventListener' от нуля</target>
        </trans-unit>
        <trans-unit id="f07cf9a0ba3f6ed7bad230b3a1a524d40a515c1a" translate="yes" xml:space="preserve">
          <source>Uncaught TypeError: Cannot read property 'style' of null</source>
          <target state="translated">Не пойманный типОшибка:Не могу прочитать свойство 'стиль' null</target>
        </trans-unit>
        <trans-unit id="8d6c4f621f3fd98dd88c2eb2ba7c098113ff02cb" translate="yes" xml:space="preserve">
          <source>Uncaught TypeError: Cannot set property '...' of null
  Uncaught TypeError: Cannot read property '...' of null</source>
          <target state="translated">Не пойманный типОшибка:Не может установить свойство '...' нулевой Uncaught TypeError:Невозможно прочитать свойство '...' от нуля</target>
        </trans-unit>
        <trans-unit id="9e46c56c3da96933c13555127a321d3ea74dddb6" translate="yes" xml:space="preserve">
          <source>Uncaught TypeError: Cannot set property 'onclick' of null</source>
          <target state="translated">Не пойманный типОшибка:Не могу установить свойство 'onclick' равным нулю.</target>
        </trans-unit>
        <trans-unit id="d3570e42a3ba550dc86040eeb782b6be83fd1511" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-defer&quot;&gt;&lt;code&gt;defer&lt;/code&gt;&lt;/a&gt; attribute of &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Используйте атрибут &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#attr-defer&quot;&gt; &lt;code&gt;defer&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e854ff9f7b0f779cfadaf41007115eea86b7f57" translate="yes" xml:space="preserve">
          <source>Use tools [for example, webdeveloper plugin for browsers] to find duplicate ids and remove them.</source>
          <target state="translated">Используйте инструменты [например,плагин веб-разработчика для браузеров],чтобы найти дубликаты идентификаторов и удалить их.</target>
        </trans-unit>
        <trans-unit id="dfcf619bd49916c9ab2578b9fa6ef9ac5a5c9fa1" translate="yes" xml:space="preserve">
          <source>What are the possible reasons for &lt;code&gt;document.getElementById&lt;/code&gt;, &lt;code&gt;$(&quot;#id&quot;)&lt;/code&gt; or any other DOM method / jQuery selector not finding the elements?</source>
          <target state="translated">Каковы возможные причины для &lt;code&gt;document.getElementById&lt;/code&gt; , &lt;code&gt;$(&quot;#id&quot;)&lt;/code&gt; или любого другого селектора метода DOM / jQuery, не находящего элементы?</target>
        </trans-unit>
        <trans-unit id="f8e096c13c326ee14610dd8d0a85db716a8fe487" translate="yes" xml:space="preserve">
          <source>When an element raises an event (provided that it's a &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow-bubbling&quot;&gt;bubbling&lt;/a&gt; event and nothing stops its propagation), each parent in that element's ancestry receives the event as well. That allows us to attach a handler to an existing element and sample events as they bubble up from its descendants... even those added after the handler is attached. All we have to do is check the event to see whether it was raised by the desired element and, if so, run our code.</source>
          <target state="translated">Когда элемент вызывает событие (при условии, что это &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow-bubbling&quot;&gt;пузырьковое&lt;/a&gt; событие, и ничто не останавливает его распространение), каждый родительский элемент в происхождении этого элемента также получает событие. Это позволяет нам прикрепить обработчик к существующему элементу и сэмплировать события, когда они всплывают от его потомков ... даже тех, которые были добавлены после присоединения обработчика. Все, что нам нужно сделать, это проверить событие, чтобы увидеть, было ли оно вызвано нужным элементом, и, если это так, запустить наш код.</target>
        </trans-unit>
        <trans-unit id="034077f607672ac7f0bb8ae04ed3b39cd0ae8777" translate="yes" xml:space="preserve">
          <source>Why does jQuery or a DOM method such as getElementById not find the element</source>
          <target state="translated">Почему jQuery или DOM метод,такой как getElementById,не находит элемент</target>
        </trans-unit>
        <trans-unit id="dc184c711e7091bd8c98aecc5cbb62688c81257f" translate="yes" xml:space="preserve">
          <source>With querySelector, querySelectorAll, and jQuery, to match an element with a particular class name, put a &lt;code&gt;.&lt;/code&gt; directly before the class. Similarly, to match an element with a particular ID, put a &lt;code&gt;#&lt;/code&gt; directly before the ID:</source>
          <target state="translated">С querySelector, querySelectorAll и jQuery, чтобы сопоставить элемент с определенным именем класса, поместите a &lt;code&gt;.&lt;/code&gt; прямо перед классом. Аналогично, чтобы сопоставить элемент с определенным идентификатором, поставьте &lt;code&gt;#&lt;/code&gt; непосредственно перед идентификатором:</target>
        </trans-unit>
        <trans-unit id="3610958c37c16c3b24428fbebdb492e6ac8edf70" translate="yes" xml:space="preserve">
          <source>You also need to make sure the methods have the proper capitalization and spelling. Use one of:</source>
          <target state="translated">Вам также необходимо убедиться в том,что методы имеют правильную капитализацию и орфографию.Используйте один из них:</target>
        </trans-unit>
        <trans-unit id="9e3289218ac52898f053a6f0437d4e0bcbf7432d" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;defer&lt;/code&gt;, a Boolean attribute,] is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;&lt;code&gt;DOMContentLoaded&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">[ &lt;code&gt;defer&lt;/code&gt; , логический атрибут] устанавливается, чтобы указать браузеру, что сценарий должен выполняться после анализа документа, но до &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt; &lt;code&gt;DOMContentLoaded&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efa4412560fb8b53d8dc861254ce0bc2ad113c4b" translate="yes" xml:space="preserve">
          <source>in which case you can also put the code just before the closing body tag (&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;) (all DOM elements will be available at the time the script is executed).</source>
          <target state="translated">в этом случае вы также можете поместить код непосредственно перед закрывающим тегом body ( &lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt; ) (все элементы DOM будут доступны во время выполнения скрипта).</target>
        </trans-unit>
        <trans-unit id="4963706dc19c73d8cd5594cce8aa06cd58c3acad" translate="yes" xml:space="preserve">
          <source>jQuery &quot;getter&quot; methods (&lt;code&gt;.val()&lt;/code&gt;, &lt;code&gt;.html()&lt;/code&gt;, &lt;code&gt;.text()&lt;/code&gt;) returning &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">jQuery методы &quot;getter&quot; ( &lt;code&gt;.val()&lt;/code&gt; , &lt;code&gt;.html()&lt;/code&gt; , &lt;code&gt;.text()&lt;/code&gt; ) возвращают &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9802c6bb85e543ec9de385e4813742d2dfa50c5e" translate="yes" xml:space="preserve">
          <source>jQuery silently failing to bind an event handler</source>
          <target state="translated">jQuery silently fails to bind a event handler</target>
        </trans-unit>
        <trans-unit id="b48732df8cf05d9e667edc4cd791abd8b129164a" translate="yes" xml:space="preserve">
          <source>jQuery's &lt;a href=&quot;http://api.jquery.com/on/&quot;&gt;&lt;code&gt;on()&lt;/code&gt;&lt;/a&gt; performs that logic for us. We simply provide an event name, a selector for the desired descendant, and an event handler:</source>
          <target state="translated">Функция onQ &lt;a href=&quot;http://api.jquery.com/on/&quot;&gt; &lt;code&gt;on()&lt;/code&gt; &lt;/a&gt; jQuery ) выполняет эту логику за нас. Мы просто предоставляем имя события, селектор для желаемого потомка и обработчик события:</target>
        </trans-unit>
        <trans-unit id="f1554d2488c689db68997692a791114636eddfeb" translate="yes" xml:space="preserve">
          <source>the problem is that the dom element 'speclist' is not created at the time the javascript code is getting executed. So I put the javascript code inside a function and called that function on body onload event.</source>
          <target state="translated">Проблема в том,что в момент выполнения javascript-кода не создается dom-элемент 'speclist'.Поэтому я поместил javascript-код внутри функции и вызвал эту функцию по событию загрузки тела.</target>
        </trans-unit>
        <trans-unit id="ea000fff68ad9d8ef18246e6d50c1bd51cfc4412" translate="yes" xml:space="preserve">
          <source>this syntax is used to allow the script to load via HTTPS on a page with protocol https:// and to load the HTTP version on a page with protocol http://</source>
          <target state="translated">этот синтаксис используется для того,чтобы позволить скрипту загружать через HTTPS на странице с протоколом https:/и загружать версию HTTP на странице с протоколом http:/.</target>
        </trans-unit>
        <trans-unit id="37ffc3ba660db3114b71640e124172897eb3e550" translate="yes" xml:space="preserve">
          <source>use &lt;code&gt;div.parent &amp;gt; span[data-username=&quot;bob&quot;]&lt;/code&gt;.</source>
          <target state="translated">используйте &lt;code&gt;div.parent &amp;gt; span[data-username=&quot;bob&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27e695518a1c10295c5be7d8a96988309a4a6fef" translate="yes" xml:space="preserve">
          <source>use the query string &lt;code&gt;.foo.bar&lt;/code&gt;. To select</source>
          <target state="translated">используйте строку запроса &lt;code&gt;.foo.bar&lt;/code&gt; . Выбирать</target>
        </trans-unit>
        <trans-unit id="d0d0d49284addfeef0dde4bef64d02e1717021c3" translate="yes" xml:space="preserve">
          <source>use the query string &lt;code&gt;.foo[data-bar=&quot;someData&quot;]&lt;/code&gt;. To select the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; below:</source>
          <target state="translated">используйте строку запроса &lt;code&gt;.foo[data-bar=&quot;someData&quot;]&lt;/code&gt; . Чтобы выбрать &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; ниже:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
