<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/1451009">
    <body>
      <group id="1451009">
        <trans-unit id="d3629fdb5d29d86ed9675754d02ff7c48885fc5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/643542/doesnt-javascript-support-closures-with-local-variables/643664#643664&quot;&gt;Quoting myself&lt;/a&gt; for an explanation of the first example:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/643542/doesnt-javascript-support-closures-with-local-variables/643664#643664&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Цитирую себя&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для объяснения первого примера:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8aeae7b3a26e47626f8da3497483469a02b8efc" translate="yes" xml:space="preserve">
          <source>After the loop terminates, the function-level variable i has the value 5, and that's what the inner function 'sees'.</source>
          <target state="translated">После завершения цикла переменная уровня функции i имеет значение 5,и именно это видит внутренняя функция.</target>
        </trans-unit>
        <trans-unit id="f55487a622699d39f09c50e574a30094b459e210" translate="yes" xml:space="preserve">
          <source>Basically the poor mans let-binding.</source>
          <target state="translated">В основном,бедняки разрешают связывать.</target>
        </trans-unit>
        <trans-unit id="14a572b53356e2252086428034607a037de2ea3d" translate="yes" xml:space="preserve">
          <source>Basically, in the first example you're binding the &lt;code&gt;i&lt;/code&gt; inside the &lt;code&gt;onclick&lt;/code&gt; handler directly to the &lt;code&gt;i&lt;/code&gt; outside the &lt;code&gt;onclick&lt;/code&gt; handler.  So when the &lt;code&gt;i&lt;/code&gt; outside the &lt;code&gt;onclick&lt;/code&gt; handler changes, the &lt;code&gt;i&lt;/code&gt; inside the &lt;code&gt;onclick&lt;/code&gt; handler changes too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;По сути, в первом примере вы связываете &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обработчика &lt;/font&gt;&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; непосредственно с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вне &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обработчика &lt;/font&gt;&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Поэтому, когда &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;изменяется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вне &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обработчика &lt;/font&gt;&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; ,также&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; изменяется &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внутри &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обработчика &lt;/font&gt;&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a446d8b3de7e3dee7ab9e9898b432096b4d7f80" translate="yes" xml:space="preserve">
          <source>But how it works and How &lt;strong&gt;closure&lt;/strong&gt; makes it work are all beyond my understanding. Why the first one doesn't work while the second one works? Can anyone give a detailed explanation about the magic?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Но как это работает и как &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;закрытие&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; заставляет его работать - все это за пределами моего понимания. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Почему первый не работает, а второй работает? &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Кто-нибудь может дать подробное объяснение о магии?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e870eda725a6ae9687a7cfd0e92eccc068def337" translate="yes" xml:space="preserve">
          <source>But really addressing the problem (and building this up slowly) ...</source>
          <target state="translated">Но на самом деле решение проблемы (и медленное наращивание этого)...</target>
        </trans-unit>
        <trans-unit id="90e4787048f42b3a089ab3687dd531ade0b83fd5" translate="yes" xml:space="preserve">
          <source>But the following codes snippet works as our expectation.</source>
          <target state="translated">Но следующий фрагмент кода работает,как мы и ожидали.</target>
        </trans-unit>
        <trans-unit id="e74922e426d6803d5a572fd620dc614128ef76b9" translate="yes" xml:space="preserve">
          <source>I like to write simple explanations for thick people, because I'm thick so here goes ...</source>
          <target state="translated">Я люблю писать простые объяснения для толстых людей,потому что я толстый,так что вот...</target>
        </trans-unit>
        <trans-unit id="98044507e5f7d79bd77f6b55defa58c4d796d82b" translate="yes" xml:space="preserve">
          <source>I've got the following code snippet.</source>
          <target state="translated">У меня есть следующий фрагмент кода.</target>
        </trans-unit>
        <trans-unit id="0440d47ee8b968bf864983097a8f8f9147c6ff2e" translate="yes" xml:space="preserve">
          <source>If you can't get your head around that then this should be easier to understand and has the same effect ...</source>
          <target state="translated">Если ты не можешь об этом думать,то это должно быть легче понять и иметь тот же эффект...</target>
        </trans-unit>
        <trans-unit id="6a0afe6de268854b7f080be424074fae5ac8abfb" translate="yes" xml:space="preserve">
          <source>In the first example, you simply bind this function to the onclick event:</source>
          <target state="translated">В первом примере,вы просто привязываете эту функцию к событию клика:</target>
        </trans-unit>
        <trans-unit id="d24e58b5bdc6c1b3d5528879d77d05cf2d490842" translate="yes" xml:space="preserve">
          <source>In the second example you generate a function to be bound with another function:</source>
          <target state="translated">Во втором примере вы генерируете функцию,которая будет связана с другой функцией:</target>
        </trans-unit>
        <trans-unit id="0db60ff4d06f4229813ae86b736c04c69c7d1599" translate="yes" xml:space="preserve">
          <source>In the second example, for each iteration step the outer function literal will evaluate to a new function object with its own scope and local variable &lt;code&gt;num&lt;/code&gt;, whose value is set to the current value of &lt;code&gt;i&lt;/code&gt;. As &lt;code&gt;num&lt;/code&gt; is never modified, it will stay constant over the lifetime of the closure: The next iteration step doesn't overwrite the old value as the function objects are independant.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во втором примере для каждого шага итерации литерал внешней функции будет оцениваться как новый объект функции со своей собственной областью действия и локальной переменной &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , значение которой установлено на текущее значение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Поскольку &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; никогда не изменяется, он будет оставаться постоянным в течение всего времени закрытия: следующий шаг итерации не перезаписывает старое значение, так как объекты функции независимы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35d51b79a12af861645cf472ed9c622b34156559" translate="yes" xml:space="preserve">
          <source>In the second example, instead of binding it to the &lt;code&gt;num&lt;/code&gt; in the &lt;code&gt;onclick&lt;/code&gt; handler, you're passing it into a function, which then binds it to the &lt;code&gt;num&lt;/code&gt; in the &lt;code&gt;onclick&lt;/code&gt; handler.  When you pass it into the function, the value of &lt;code&gt;i&lt;/code&gt; is &lt;em&gt;copied, not bound&lt;/em&gt; to &lt;code&gt;num&lt;/code&gt;.  So when &lt;code&gt;i&lt;/code&gt; changes, &lt;code&gt;num&lt;/code&gt; stays the same.  The copy occurs because functions in JavaScript are &quot;closures&quot;, meaning that once something is passed into the function, it's &quot;closed&quot; for outside modification.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Во втором примере вместо привязки его к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обработчике &lt;/font&gt;&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вы передаете его в функцию, которая затем привязывает его к &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;обработчике &lt;/font&gt;&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Когда вы передаете его в функцию, значение &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; будет &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;скопировано, не связанное&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . Поэтому, когда &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; меняюсь, &lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; остается прежним. Копирование происходит потому, что функции в JavaScript являются &amp;laquo;замыканиями&amp;raquo;, что означает, что, как только что-то передается в функцию, оно &amp;laquo;закрывается&amp;raquo; для внешней модификации.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da1131ce13e7708f25ab5cfb3e75ba06db61edf8" translate="yes" xml:space="preserve">
          <source>JavaScript's scopes are function-level, not block-level, and creating a closure just means that the enclosing scope gets added to the lexical environment of the enclosed function.</source>
          <target state="translated">Сферы применения JavaScript являются функциональными,а не блоковыми,и создание закрывающей области видимости означает,что в лексическое окружение закрытой функции добавляется закрывающая область видимости.</target>
        </trans-unit>
        <trans-unit id="d543376a1cb01b26038855f58e6cc4b0fbcdf1ba" translate="yes" xml:space="preserve">
          <source>Javascript infamous Loop issue</source>
          <target state="translated">печально известный выпуск Javascript Loop</target>
        </trans-unit>
        <trans-unit id="f0c23724248db646463d30f22c1f9515c613aca5" translate="yes" xml:space="preserve">
          <source>Keep in mind that this approach is rather inefficient as two new function objects have to be created for each link. This is unnecessary, as they can easily be shared if you use the DOM node for information storage:</source>
          <target state="translated">Имейте в виду,что такой подход довольно неэффективен,так как для каждого звена должны быть созданы два новых функциональных объекта.В этом нет необходимости,так как они могут быть легко использованы совместно,если вы используете DOM-узел для хранения информации:</target>
        </trans-unit>
        <trans-unit id="9f1d64cd1dcf02e2eb838a3d5019cb997b33f17e" translate="yes" xml:space="preserve">
          <source>Others have explained what's going on, here's an alternative solution.</source>
          <target state="translated">Другие объяснили,что происходит,вот альтернативное решение.</target>
        </trans-unit>
        <trans-unit id="b9062277a4788dab91b5398ea813980422f4b600" translate="yes" xml:space="preserve">
          <source>SIMPLE TO UNDERSTAND ALTERNATIVE</source>
          <target state="translated">ПРОСТАЯ ДЛЯ ПОНИМАНИЯ АЛЬТЕРНАТИВА</target>
        </trans-unit>
        <trans-unit id="64e02dbe9ba60cc3c2162da4c3aa447b47ad40c0" translate="yes" xml:space="preserve">
          <source>STEP 1</source>
          <target state="translated">1-Й ШАГ</target>
        </trans-unit>
        <trans-unit id="b2ad896a1cb2a935d086236efdbb6d736ec7bb8a" translate="yes" xml:space="preserve">
          <source>STEP 2</source>
          <target state="translated">ШАГ 2</target>
        </trans-unit>
        <trans-unit id="06bec4e67f32a15eb53681f5e9d0e19f7fc271f4" translate="yes" xml:space="preserve">
          <source>The above 2 snippets are quoted from &lt;a href=&quot;http://robertnyman.com/2008/10/09/explaining-javascript-scope-and-closures/&quot;&gt;here&lt;/a&gt;. As the author's explanation, seems the &lt;strong&gt;closure&lt;/strong&gt; makes the magic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Вышеуказанные 2 фрагмента приведены &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://robertnyman.com/2008/10/09/explaining-javascript-scope-and-closures/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;здесь&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Как объясняет автор, похоже, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;замыкание&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; делает волшебство.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38c8fae3aef0bb86439ec189e980bd9faf10db20" translate="yes" xml:space="preserve">
          <source>The above code is for generating 5 links and bind each link with an alert event to show the current link id. But It doesn't work. When you click the generated links they all say &quot;link 5&quot;.</source>
          <target state="translated">Вышеуказанный код предназначен для генерации 5 ссылок и связывания каждой ссылки с предупреждающим событием для отображения идентификатора текущей ссылки.Но это не работает.При нажатии на генерируемые ссылки все они говорят &quot;ссылка 5&quot;.</target>
        </trans-unit>
        <trans-unit id="5bb430c0a8aa818d339d1f21bcbfdc114e183c15" translate="yes" xml:space="preserve">
          <source>The point is that in the first example your function contained a variable reference, while in the second one with the help of the outer function you substituted the reference with an actual value. This is called a closure roughly because you &quot;enclose&quot; the current value of a variable within your function instead of keeping a reference to it.</source>
          <target state="translated">Дело в том,что в первом примере ваша функция содержала ссылку на переменную,а во втором с помощью внешней функции вы подставили ссылку на фактическое значение.Это называется замыканием примерно потому,что вы &quot;заключили&quot; текущее значение переменной в свою функцию вместо того,чтобы хранить ссылку на нее.</target>
        </trans-unit>
        <trans-unit id="32f5540c763324b2a16331ff166e460fa5fc986e" translate="yes" xml:space="preserve">
          <source>This means that on the click event js should alert the value of the addlink functions i variable. Its value will be 5 because of the for loop().</source>
          <target state="translated">Это означает,что при наступлении события клика js должен предупредить о значении переменной addlink functions i.Ее значение будет 5 из-за функции for loop().</target>
        </trans-unit>
        <trans-unit id="fdc7e684f23a59219ae5f68649f179122a614f28" translate="yes" xml:space="preserve">
          <source>This means: if called with a value, return me a function that will alert the input value. E.g. calling &lt;code&gt;function(3)&lt;/code&gt; will return &lt;code&gt;function() { alert(3) };&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это означает: если вызывается со значением, верните мне функцию, которая оповестит входное значение. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Например, вызов &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function(3)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вернет &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function() { alert(3) };&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;,&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a4330f33715c1da70cd9a82c9a65b6e38605465" translate="yes" xml:space="preserve">
          <source>This should be simple to understand if you remember that a functions variable values are set when the function is called (but this uses the exact same thought process as before)</source>
          <target state="translated">Это должно быть простым для понимания,если помнить,что при вызове функции устанавливаются значения переменной функции (но при этом используется тот же самый мыслительный процесс,что и раньше).</target>
        </trans-unit>
        <trans-unit id="1d5f837130195e677934efe9b799bebaf80ab6d3" translate="yes" xml:space="preserve">
          <source>We have 5 divs on the page, each with an ID ... div1, div2, div3, div4, div5</source>
          <target state="translated">На странице у нас есть 5 divs,каждый из которых имеет ID ...div1,div2,div3,div4,div5.</target>
        </trans-unit>
        <trans-unit id="242d1d689f33bacbcd639b239ea0eca85c5fe9f4" translate="yes" xml:space="preserve">
          <source>You call this function with the value i at every iteration, thus you create separate onclick functions for each links.</source>
          <target state="translated">Вы вызываете эту функцию со значением i на каждой итерации,таким образом,вы создаете отдельные функции клика для каждой ссылки.</target>
        </trans-unit>
        <trans-unit id="f0873f2af846342e590c905b16c5cc2770b8f445" translate="yes" xml:space="preserve">
          <source>jQuery can do this ...</source>
          <target state="translated">jQuery может сделать это...</target>
        </trans-unit>
        <trans-unit id="1da2da17310fd4a9c245a1653c8c1e99b321c15b" translate="yes" xml:space="preserve">
          <source>thanks.</source>
          <target state="translated">thanks.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
