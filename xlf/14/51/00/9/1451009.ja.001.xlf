<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/1451009">
    <body>
      <group id="1451009">
        <trans-unit id="d3629fdb5d29d86ed9675754d02ff7c48885fc5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/643542/doesnt-javascript-support-closures-with-local-variables/643664#643664&quot;&gt;Quoting myself&lt;/a&gt; for an explanation of the first example:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/questions/643542/doesnt-javascript-support-closures-with-local-variables/643664#643664&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初の例の説明のために&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;自分&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引用する&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8aeae7b3a26e47626f8da3497483469a02b8efc" translate="yes" xml:space="preserve">
          <source>After the loop terminates, the function-level variable i has the value 5, and that's what the inner function 'sees'.</source>
          <target state="translated">ループが終了した後、関数レベルの変数 i は値 5 を持ち、これが内部の関数が「見ている」ものです。</target>
        </trans-unit>
        <trans-unit id="f55487a622699d39f09c50e574a30094b459e210" translate="yes" xml:space="preserve">
          <source>Basically the poor mans let-binding.</source>
          <target state="translated">基本的には貧乏人のレット縛り。</target>
        </trans-unit>
        <trans-unit id="14a572b53356e2252086428034607a037de2ea3d" translate="yes" xml:space="preserve">
          <source>Basically, in the first example you're binding the &lt;code&gt;i&lt;/code&gt; inside the &lt;code&gt;onclick&lt;/code&gt; handler directly to the &lt;code&gt;i&lt;/code&gt; outside the &lt;code&gt;onclick&lt;/code&gt; handler.  So when the &lt;code&gt;i&lt;/code&gt; outside the &lt;code&gt;onclick&lt;/code&gt; handler changes, the &lt;code&gt;i&lt;/code&gt; inside the &lt;code&gt;onclick&lt;/code&gt; handler changes too.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本的には、最初の例では、結合している&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の内側&lt;/font&gt;&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に直接ハンドラを&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の外&lt;/font&gt;&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハンドラ。したがって&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハンドラーの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外側&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が変更されると&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハンドラーの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;内側の&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;も変更されます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6a446d8b3de7e3dee7ab9e9898b432096b4d7f80" translate="yes" xml:space="preserve">
          <source>But how it works and How &lt;strong&gt;closure&lt;/strong&gt; makes it work are all beyond my understanding. Why the first one doesn't work while the second one works? Can anyone give a detailed explanation about the magic?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;しかし、それがどのように機能するか、およびどのように&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;クロージャー&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;がそれ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を機能&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さ&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;せるかは、私の理解を超えています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最初のものが機能しないのになぜ最初のものが機能しないのですか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;誰もが魔法について詳細な説明をすることができますか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e870eda725a6ae9687a7cfd0e92eccc068def337" translate="yes" xml:space="preserve">
          <source>But really addressing the problem (and building this up slowly) ...</source>
          <target state="translated">しかし、本当に問題に取り組む(そして、これをゆっくりと積み上げていく)・・・。</target>
        </trans-unit>
        <trans-unit id="90e4787048f42b3a089ab3687dd531ade0b83fd5" translate="yes" xml:space="preserve">
          <source>But the following codes snippet works as our expectation.</source>
          <target state="translated">しかし、以下のコードスニペットは期待通りに動作します。</target>
        </trans-unit>
        <trans-unit id="e74922e426d6803d5a572fd620dc614128ef76b9" translate="yes" xml:space="preserve">
          <source>I like to write simple explanations for thick people, because I'm thick so here goes ...</source>
          <target state="translated">私は太いので太い人向けの簡単な説明を書くのが好きなので、ここで ...</target>
        </trans-unit>
        <trans-unit id="98044507e5f7d79bd77f6b55defa58c4d796d82b" translate="yes" xml:space="preserve">
          <source>I've got the following code snippet.</source>
          <target state="translated">以下のようなコードスニペットを持っています。</target>
        </trans-unit>
        <trans-unit id="0440d47ee8b968bf864983097a8f8f9147c6ff2e" translate="yes" xml:space="preserve">
          <source>If you can't get your head around that then this should be easier to understand and has the same effect ...</source>
          <target state="translated">あなたはその周りにあなたの頭を得ることができない場合は、これは理解しやすく、同じ効果を持っている必要があります...</target>
        </trans-unit>
        <trans-unit id="6a0afe6de268854b7f080be424074fae5ac8abfb" translate="yes" xml:space="preserve">
          <source>In the first example, you simply bind this function to the onclick event:</source>
          <target state="translated">最初の例では、この関数を onclick イベントにバインドします。</target>
        </trans-unit>
        <trans-unit id="d24e58b5bdc6c1b3d5528879d77d05cf2d490842" translate="yes" xml:space="preserve">
          <source>In the second example you generate a function to be bound with another function:</source>
          <target state="translated">2 番目の例では、別の関数にバインドする関数を生成します。</target>
        </trans-unit>
        <trans-unit id="0db60ff4d06f4229813ae86b736c04c69c7d1599" translate="yes" xml:space="preserve">
          <source>In the second example, for each iteration step the outer function literal will evaluate to a new function object with its own scope and local variable &lt;code&gt;num&lt;/code&gt;, whose value is set to the current value of &lt;code&gt;i&lt;/code&gt;. As &lt;code&gt;num&lt;/code&gt; is never modified, it will stay constant over the lifetime of the closure: The next iteration step doesn't overwrite the old value as the function objects are independant.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2番目の例では、各反復ステップで、外部関数リテラルは独自のスコープとローカル変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を持つ新しい関数オブジェクトに評価され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その値は&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;現在の値に設定され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変更されることはありません、それは閉鎖の寿命にわたって一定のままです：関数オブジェクトが独立しているとして、次の反復ステップは、古い値を上書きしません。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35d51b79a12af861645cf472ed9c622b34156559" translate="yes" xml:space="preserve">
          <source>In the second example, instead of binding it to the &lt;code&gt;num&lt;/code&gt; in the &lt;code&gt;onclick&lt;/code&gt; handler, you're passing it into a function, which then binds it to the &lt;code&gt;num&lt;/code&gt; in the &lt;code&gt;onclick&lt;/code&gt; handler.  When you pass it into the function, the value of &lt;code&gt;i&lt;/code&gt; is &lt;em&gt;copied, not bound&lt;/em&gt; to &lt;code&gt;num&lt;/code&gt;.  So when &lt;code&gt;i&lt;/code&gt; changes, &lt;code&gt;num&lt;/code&gt; stays the same.  The copy occurs because functions in JavaScript are &quot;closures&quot;, meaning that once something is passed into the function, it's &quot;closed&quot; for outside modification.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;2番目の例では、それを&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハンドラーの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バインドする代わり&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に、関数に渡して&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;ハンドラーの&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バインドしてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。関数に渡すと、&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; に&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;バインドさ&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;れ&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ず&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;の値&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;コピーされ&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。したがって、&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;が変更しても、&lt;/font&gt; &lt;code&gt;num&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;は同じままです。コピーが発生するのは、JavaScriptの関数が「クロージャ」であるためです。つまり、いったん関数に渡されると、外部での変更のために「クローズ」されます。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da1131ce13e7708f25ab5cfb3e75ba06db61edf8" translate="yes" xml:space="preserve">
          <source>JavaScript's scopes are function-level, not block-level, and creating a closure just means that the enclosing scope gets added to the lexical environment of the enclosed function.</source>
          <target state="translated">JavaScript のスコープはブロックレベルではなく関数レベルであり、クロージャを作成することは、単に囲んだスコープが囲んだ関数の字句環境に追加されることを意味します。</target>
        </trans-unit>
        <trans-unit id="d543376a1cb01b26038855f58e6cc4b0fbcdf1ba" translate="yes" xml:space="preserve">
          <source>Javascript infamous Loop issue</source>
          <target state="translated">Javascript悪名高いループ問題</target>
        </trans-unit>
        <trans-unit id="f0c23724248db646463d30f22c1f9515c613aca5" translate="yes" xml:space="preserve">
          <source>Keep in mind that this approach is rather inefficient as two new function objects have to be created for each link. This is unnecessary, as they can easily be shared if you use the DOM node for information storage:</source>
          <target state="translated">このアプローチは、各リンクに対して 2 つの新しい関数オブジェクトを作成しなければならないため、かなり非効率的であることに注意してください。情報の保存に DOM ノードを使えば簡単に共有できるので、これは不要です。</target>
        </trans-unit>
        <trans-unit id="9f1d64cd1dcf02e2eb838a3d5019cb997b33f17e" translate="yes" xml:space="preserve">
          <source>Others have explained what's going on, here's an alternative solution.</source>
          <target state="translated">他の人が説明してくれていますが、別の解決策があります。</target>
        </trans-unit>
        <trans-unit id="b9062277a4788dab91b5398ea813980422f4b600" translate="yes" xml:space="preserve">
          <source>SIMPLE TO UNDERSTAND ALTERNATIVE</source>
          <target state="translated">わかりやすい代替案</target>
        </trans-unit>
        <trans-unit id="64e02dbe9ba60cc3c2162da4c3aa447b47ad40c0" translate="yes" xml:space="preserve">
          <source>STEP 1</source>
          <target state="translated">ステップ1</target>
        </trans-unit>
        <trans-unit id="b2ad896a1cb2a935d086236efdbb6d736ec7bb8a" translate="yes" xml:space="preserve">
          <source>STEP 2</source>
          <target state="translated">ステップ2</target>
        </trans-unit>
        <trans-unit id="06bec4e67f32a15eb53681f5e9d0e19f7fc271f4" translate="yes" xml:space="preserve">
          <source>The above 2 snippets are quoted from &lt;a href=&quot;http://robertnyman.com/2008/10/09/explaining-javascript-scope-and-closures/&quot;&gt;here&lt;/a&gt;. As the author's explanation, seems the &lt;strong&gt;closure&lt;/strong&gt; makes the magic.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;上記の2つの抜粋は&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://robertnyman.com/2008/10/09/explaining-javascript-scope-and-closures/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ここ&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;から引用されてい&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;著者の説明のように、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;閉鎖&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が魔法をかけるようです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="38c8fae3aef0bb86439ec189e980bd9faf10db20" translate="yes" xml:space="preserve">
          <source>The above code is for generating 5 links and bind each link with an alert event to show the current link id. But It doesn't work. When you click the generated links they all say &quot;link 5&quot;.</source>
          <target state="translated">上記のコードは、5つのリンクを生成し、それぞれのリンクに現在のリンクIDを表示するアラートイベントをバインドするものです。しかし、それは動作しません。生成されたリンクをクリックすると、すべて &quot;link 5 &quot;と表示されます。</target>
        </trans-unit>
        <trans-unit id="5bb430c0a8aa818d339d1f21bcbfdc114e183c15" translate="yes" xml:space="preserve">
          <source>The point is that in the first example your function contained a variable reference, while in the second one with the help of the outer function you substituted the reference with an actual value. This is called a closure roughly because you &quot;enclose&quot; the current value of a variable within your function instead of keeping a reference to it.</source>
          <target state="translated">ポイントは、最初の例では関数に変数の参照が含まれていましたが、2 番目の例では外部関数の助けを借りて参照を実際の値で置き換えたということです。これは大まかにはクロージャと呼ばれています。</target>
        </trans-unit>
        <trans-unit id="32f5540c763324b2a16331ff166e460fa5fc986e" translate="yes" xml:space="preserve">
          <source>This means that on the click event js should alert the value of the addlink functions i variable. Its value will be 5 because of the for loop().</source>
          <target state="translated">これは、クリック イベントで js が addlink 関数 i 変数の値を警告することを意味します。for loop()のため、その値は5になります。</target>
        </trans-unit>
        <trans-unit id="fdc7e684f23a59219ae5f68649f179122a614f28" translate="yes" xml:space="preserve">
          <source>This means: if called with a value, return me a function that will alert the input value. E.g. calling &lt;code&gt;function(3)&lt;/code&gt; will return &lt;code&gt;function() { alert(3) };&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;つまり、値を指定して呼び出された場合、入力値を通知する関数を返します。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;たとえば、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;function(3)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;呼び出すと、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;function（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;function() { alert(3) };&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が返され&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9a4330f33715c1da70cd9a82c9a65b6e38605465" translate="yes" xml:space="preserve">
          <source>This should be simple to understand if you remember that a functions variable values are set when the function is called (but this uses the exact same thought process as before)</source>
          <target state="translated">これは、関数が呼び出されたときに関数の変数の値が設定されることを覚えていれば、理解するのは簡単なはずです(しかし、これは以前と全く同じ思考プロセスを使用しています)。</target>
        </trans-unit>
        <trans-unit id="1d5f837130195e677934efe9b799bebaf80ab6d3" translate="yes" xml:space="preserve">
          <source>We have 5 divs on the page, each with an ID ... div1, div2, div3, div4, div5</source>
          <target state="translated">ページには 5 つの div があり、それぞれに ID ...div1,div2,div3,div4,div5 が付いています。</target>
        </trans-unit>
        <trans-unit id="242d1d689f33bacbcd639b239ea0eca85c5fe9f4" translate="yes" xml:space="preserve">
          <source>You call this function with the value i at every iteration, thus you create separate onclick functions for each links.</source>
          <target state="translated">この関数を繰り返しのたびに値 i で呼び出すので、リンクごとに別々の onclick 関数を作成することができます。</target>
        </trans-unit>
        <trans-unit id="f0873f2af846342e590c905b16c5cc2770b8f445" translate="yes" xml:space="preserve">
          <source>jQuery can do this ...</source>
          <target state="translated">jQueryにはこんなことができるんですね...。</target>
        </trans-unit>
        <trans-unit id="1da2da17310fd4a9c245a1653c8c1e99b321c15b" translate="yes" xml:space="preserve">
          <source>thanks.</source>
          <target state="translated">thanks.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
