<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="https://stackoverflow.com/questions/1410563">
    <body>
      <group id="1410563">
        <trans-unit id="d3e1cb3a3443634ff53cc2b9795b221e08aff864" translate="yes" xml:space="preserve">
          <source>&quot;Definition&quot; refers to the place where the variable is created or assigned storage; &quot;declaration&quot; refers to the places where the nature of the variable is stated but no storage is allocated. [p. 33]</source>
          <target state="translated">&quot;Определение&quot; означает место,где переменная создается или присваивается хранилище;&quot;объявление&quot; означает места,где указывается природа переменной,но не присваивается хранилище.[p.33]</target>
        </trans-unit>
        <trans-unit id="a061c129094d0ff1778fc7ec900876975d32d737" translate="yes" xml:space="preserve">
          <source>(1) pre-processor -&amp;gt; (2) translator/compiler -&amp;gt; (3) linker</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(1) препроцессор -&amp;gt; (2) переводчик / компилятор -&amp;gt; (3) компоновщик&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd5fdc3afbe6dcb00284641de3983ea144203d6a" translate="yes" xml:space="preserve">
          <source>... it contains the &lt;code&gt;extern&lt;/code&gt; keyword without an initializer or function body:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... он содержит &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ключевое слово &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; без инициализатора или тела функции:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40fd3d94339d186d84d63fdee95aebb6c1abba75" translate="yes" xml:space="preserve">
          <source>... it declares a class name:</source>
          <target state="translated">...он объявляет имя класса:</target>
        </trans-unit>
        <trans-unit id="ee4b672768d0f912948cc4b65378f09fa68640f4" translate="yes" xml:space="preserve">
          <source>... it declares a function without specifying the function&amp;rsquo;s body:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... он объявляет функцию без указания тела функции:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff5f4aa6062b4a4880b785e9aa6c0021a62b975e" translate="yes" xml:space="preserve">
          <source>... it declares a static member within a class definition:</source>
          <target state="translated">...он объявляет статический член в определении класса:</target>
        </trans-unit>
        <trans-unit id="c39f26d08a84cdbd37261f9135fde04d2142536b" translate="yes" xml:space="preserve">
          <source>... or is a &lt;code&gt;typedef&lt;/code&gt; or &lt;code&gt;using&lt;/code&gt; statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... или является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;typedef&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; или &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;оператор &lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2eb1c39890692090b7511d4443a0bd9b35083a79" translate="yes" xml:space="preserve">
          <source>3.1/3 then gives a few examples. Amongst them:</source>
          <target state="translated">3.13 затем приводит несколько примеров.Среди них:</target>
        </trans-unit>
        <trans-unit id="c2f74018b51597dfa2c633f895bfc5ab77e28343" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;declare&lt;/em&gt; for the rest of the source file that &lt;code&gt;sp&lt;/code&gt; is an &lt;code&gt;int&lt;/code&gt; and that &lt;code&gt;val&lt;/code&gt; is a &lt;code&gt;double&lt;/code&gt; array (whose size is determined elsewhere), but they do not create the variables or reserve storage for them.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;для остальной части исходного файла &lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявите,&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; что &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; а &lt;/font&gt;&lt;/font&gt; &lt;code&gt;val&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; является &lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; массивом (размер которого определяется в другом месте), но они не создают переменные или резервное хранилище для них.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="861af01e85935165900323451636b81826919844" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;*Don't confuse definition with initialization. Both are different, initialization gives value to the variable. See the above example.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;* Не путайте определение с инициализацией. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Оба отличаются, инициализация дает значение переменной. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Смотрите приведенный выше пример.&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e06c23e6b1d7a8c58185d1992f61f8626251fe01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Declaration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="126b8a191df2e6add16a2e2dce98e0fb96955388" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Definition :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Определение:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33833f5bb5ca3d7d809093b2a0f5419f75f069c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Definition&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Definition&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ada4ac073f468f7fc8a594017c726fea7b0ef24e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Program 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Программа 1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74a0baa1479715ba0040249225ad1dbeb88262f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Program 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Программа 2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d2c982178bf65a2fbffdd529e055421be59024e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;declare&lt;/strong&gt; -
to announce officially; proclaim</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявить&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - объявить официально; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Proclaim&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33728b6b497c721d75a51203569bd0b1b8fa49cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;define&lt;/strong&gt; - 
to show or describe (someone or something) clearly and completely</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определить&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - показать или описать (кого-то или что-то) ясно и полностью&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3dee11c3365b0a296b9b5594831505006f3aff48" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;declaration&lt;/em&gt;&lt;/strong&gt; introduces an identifier and describes its type, be it a type, object, or function. A declaration is &lt;strong&gt;&lt;em&gt;what the compiler needs&lt;/em&gt;&lt;/strong&gt; to accept references to that identifier. These are declarations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Декларация&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вводит идентификатор и описывает его тип, будь то тип, объект или функция. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявление - это &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;то, что нужно компилятору&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; для принятия ссылок на этот идентификатор. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это декларации:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2432164101136c96b6046889e6dd8c6b742f3fc5" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;definition&lt;/em&gt;&lt;/strong&gt; actually instantiates/implements this identifier. It's &lt;strong&gt;&lt;em&gt;what the linker needs&lt;/em&gt;&lt;/strong&gt; in order to link references to those entities. These are definitions corresponding to the above declarations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Определение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; фактически инстанцирует / реализует этот идентификатор. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это то, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что нужно компоновщику&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , чтобы связать ссылки с этими объектами. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это определения, соответствующие вышеуказанным декларациям:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe09bce7f2879b14e8c29cd61bc626602885ef9f" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;declaration&lt;/strong&gt; introduces names into a translation unit or redeclares names introduced by previous
  declarations. A declaration specifies the interpretation and attributes of these names.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;А &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;декларация&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; вводит имена в ЕП или redeclares имена , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;введенные ранее деклараций. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявление определяет толкование и атрибуты этих имен.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8313c629bb1b381743e0a9114acebd5d0ee5b23a" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;declaration&lt;/strong&gt; provides a name to the program; a &lt;strong&gt;definition&lt;/strong&gt; provides a unique description of an entity (e.g. type, instance, and function) within the program. Declarations can be repeated in a given scope, it introduces a name in a given scope.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Декларация&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; предоставляет имя к программе; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определение&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; обеспечивает однозначное описание объекта (например , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;типа, экземпляр, и функцию) в &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;рамках программы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявления могут повторяться в заданной области, это вводит имя в заданной области.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="189fc174e64dc7c5e224df6db23e647642c5cae3" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;declaration&lt;/strong&gt; tells the compiler how to interpret the variable's data in memory. This is needed for every access.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Декларация&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; сообщает компилятор , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как интерпретировать данные переменные в памяти. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это необходимо для каждого доступа.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fccbdceb7990d654b06826a3a9fb12190b44528c" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;definition&lt;/strong&gt; reserves the memory to make the variable existing. This has to happen exactly once before first access.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Определение&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; оставляет память , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;чтобы сделать переменную существующие. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это должно произойти ровно один раз перед первым доступом.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59ba05cc47672cdf0cdf78f26260b6a1ca3bc010" translate="yes" xml:space="preserve">
          <source>A class or struct allows you to change how objects will be defined when it is later used. For example</source>
          <target state="translated">Класс или структура позволяет изменять способ определения объектов при их последующем использовании.Например</target>
        </trans-unit>
        <trans-unit id="c89e6c24f42ec4d41aa14433c4c58edb1cdfbc81" translate="yes" xml:space="preserve">
          <source>A declaration is a &lt;em&gt;definition&lt;/em&gt; unless it declares a function without specifying the function's body, it contains the extern specifier or a linkage-specification and neither an initializer nor a function-body, it declares a static data member in a class declaration, it is a class name declaration, or it is a typedef declaration, a using-declaration, or a using-directive.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявление является &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определением,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если только оно не объявляет функцию без указания тела функции, оно содержит спецификатор extern или спецификацию связи и не является ни инициализатором, ни телом функции, оно объявляет член статических данных в объявлении класса, это объявление имени класса, или это объявление typedef, объявление-использование или директива-использование.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b35220a17540a91dc438df16b16d27140e288d9" translate="yes" xml:space="preserve">
          <source>A declaration is a &lt;em&gt;definition&lt;/em&gt; unless it declares a/n:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявление является &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определением,&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если оно не объявляет / n:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e1dd6f7957796fcf1c3fb6b3213b7fa1269793c" translate="yes" xml:space="preserve">
          <source>A declaration is a definition unless it [...] is a class name declaration [...].</source>
          <target state="translated">Декларация-это определение,если только она [...]не является декларацией имени класса [...].</target>
        </trans-unit>
        <trans-unit id="f655dfdb0203840a2861171442f47d383b48a8b0" translate="yes" xml:space="preserve">
          <source>A declaration is a definition unless:</source>
          <target state="translated">Декларация-это определение,если только</target>
        </trans-unit>
        <trans-unit id="3525577b16b9cb0abb6390c1b668207b9954a9b5" translate="yes" xml:space="preserve">
          <source>A declaration presents a symbol name to the compiler. A definition is a declaration that allocates space for the symbol.</source>
          <target state="translated">Декларация представляет компилятору имя символа.Определение-это декларация,которая выделяет место для символа.</target>
        </trans-unit>
        <trans-unit id="e2007c6d927aed6a7330124a154d24bffa9b628a" translate="yes" xml:space="preserve">
          <source>A declaration specifies the interpretation and attributes of a set of identifiers. A &lt;em&gt;definition&lt;/em&gt; of an identifier is a declaration for that identifier that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявление определяет интерпретацию и атрибуты набора идентификаторов. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Определение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; идентификатора является декларацией для этого идентификатора , &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d97d4323d71d00037b841f80eef5a3a742123aa9" translate="yes" xml:space="preserve">
          <source>A definition can be used in the place of a declaration.</source>
          <target state="translated">Вместо декларации можно использовать определение.</target>
        </trans-unit>
        <trans-unit id="4d223e640a9bac5828b29542d62dfcd0399eb9b6" translate="yes" xml:space="preserve">
          <source>A definition is a declaration unless:</source>
          <target state="translated">Определение-это заявление,если только</target>
        </trans-unit>
        <trans-unit id="2d2a2829e9abf7c943077b966ccef48e31b7e419" translate="yes" xml:space="preserve">
          <source>A template-declaration is a declaration. A template-declaration is also a definition if its declaration defines a function, a class, or a static data member.</source>
          <target state="translated">Шаблон-декларация-это декларация.Шаблон-декларация также является определением,если ее объявление определяет функцию,класс или статический член данных.</target>
        </trans-unit>
        <trans-unit id="6e6c9146405ba1f33ef215d5d143777708b00c32" translate="yes" xml:space="preserve">
          <source>According to the GNU C library manual (&lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Header-Files.html&quot;&gt;http://www.gnu.org/software/libc/manual/html_node/Header-Files.html&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Согласно руководству по библиотеке GNU C ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Header-Files.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.gnu.org/software/libc/manual/html_node/Header-Files.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ab24ae679479b3b755eb72f4db4de49cc2f91f3" translate="yes" xml:space="preserve">
          <source>Additional clauses inherited from C++03 by the above list:</source>
          <target state="translated">Дополнительные пункты,унаследованные от C++03 по вышеуказанному списку:</target>
        </trans-unit>
        <trans-unit id="de1667f23ede8441d90b53e777f6fb113bc1ecb9" translate="yes" xml:space="preserve">
          <source>An identifier can be &lt;em&gt;declared&lt;/em&gt; as often as you want. Thus, the following is legal in C and C++:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Идентификатор может быть &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявлен&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; так часто, как вы хотите. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Таким образом, в C и C ++ допустимо следующее:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="256aafa3eaaa57f77d446c7ef3af28138c6469ff" translate="yes" xml:space="preserve">
          <source>As you can see nothing change.</source>
          <target state="translated">Как видите,ничего не изменилось.</target>
        </trans-unit>
        <trans-unit id="72529e76157ed78fc3d33d1389f83cd5f5836624" translate="yes" xml:space="preserve">
          <source>At 3.1/2, C++03 says:</source>
          <target state="translated">В 3.12,говорит С++03:</target>
        </trans-unit>
        <trans-unit id="c6dbb497b88d55bab84f5d72d1536e62353dd3fb" translate="yes" xml:space="preserve">
          <source>C++11 Update</source>
          <target state="translated">C++11 Обновление</target>
        </trans-unit>
        <trans-unit id="a79dda8e4c729febda6af7a56050f4eb02842da2" translate="yes" xml:space="preserve">
          <source>Compiler will throw an error saying that there is no such function. Because it doesn't has any prototype for that function.</source>
          <target state="translated">Компилятор выдаст ошибку,говоря,что такой функции нет.Потому что у него нет прототипа для этой функции.</target>
        </trans-unit>
        <trans-unit id="899e53f8b7c465bbd6f883536c54fc28add5a804" translate="yes" xml:space="preserve">
          <source>Couldnt you state in the most general terms possible, that a declaration is an identifier in which no storage is allocated and a definition actually allocates storage from a declared identifier?</source>
          <target state="translated">Не могли бы Вы констатировать в самых общих терминах,что декларация-это идентификатор,в котором не выделяется хранилище,а определение фактически выделяет хранилище из объявленного идентификатора?</target>
        </trans-unit>
        <trans-unit id="c0a1e8e49dae817c3ed6711672c852ebb15426f3" translate="yes" xml:space="preserve">
          <source>Declaration contains an extern specifier and no initializer or function body,</source>
          <target state="translated">Декларация содержит спецификатор экстерна и не содержит инициализатора или тела функции,</target>
        </trans-unit>
        <trans-unit id="0519bc506db8f6d81fa08e3191c3184fac76cbde" translate="yes" xml:space="preserve">
          <source>Declaration declares a function without specifying its body,</source>
          <target state="translated">Декларация объявляет функцию без указания ее тела,</target>
        </trans-unit>
        <trans-unit id="aa04905eceedfaae5f878c6564691fba4fbfc641" translate="yes" xml:space="preserve">
          <source>Declaration haven't an equivalent instruction because it is no something to be executed.</source>
          <target state="translated">Декларация не имеет эквивалентной инструкции,потому что она не является чем-то,что должно быть выполнено.</target>
        </trans-unit>
        <trans-unit id="cdebb23f0750b363ec2c5fb60ac4890e60fb8135" translate="yes" xml:space="preserve">
          <source>Declaration is a class name definition,</source>
          <target state="translated">Декларация-это определение названия класса,</target>
        </trans-unit>
        <trans-unit id="a13f43d23e1b270873c35d97287b655986837fbf" translate="yes" xml:space="preserve">
          <source>Declaration is different from definition because it gives information used only by the compiler. For example uint8_t tell the compiler to use asm function movb.</source>
          <target state="translated">Декларация отличается от определения тем,что дает информацию,используемую только компилятором.Например,uint8_t говорит компилятору использовать функцию asm movb.</target>
        </trans-unit>
        <trans-unit id="99cb2adb5f339b07331de38eaeae26c608e1af8b" translate="yes" xml:space="preserve">
          <source>Declaration is the declaration of a static class data member without a class definition,</source>
          <target state="translated">Объявление-это объявление статического члена данных класса без определения класса,</target>
        </trans-unit>
        <trans-unit id="53dd435f8752e0d733ddcf10ed277ac478183cf2" translate="yes" xml:space="preserve">
          <source>Declaration means give name and type to a variable (in case of variable declaration), eg:</source>
          <target state="translated">Декларирование означает присвоение имени и типа переменной (в случае объявления переменной),например:</target>
        </trans-unit>
        <trans-unit id="6d2cf8fa2e69cb9ba9a84e0edc2fb454c4652520" translate="yes" xml:space="preserve">
          <source>Declaration: &quot;Somewhere, there exists a foo.&quot;</source>
          <target state="translated">Декларация:&quot;Где-то,где-то есть фу&quot;.</target>
        </trans-unit>
        <trans-unit id="c90e4aecb889fb198c460fccf62e70dffa35ef54" translate="yes" xml:space="preserve">
          <source>Declaration: Picture Thomas Jefferson giving a speech... &quot;I HEREBY DECLARE THAT THIS FOO EXISTS IN THIS SOURCE CODE!!!&quot;</source>
          <target state="translated">Декларация:Фото Томаса Джефферсона,произносящего речь...&quot;НАСТОЯЩИМ ЗАЯВЛЯЮ,ЧТО ЭТОТ ФУ СУЩЕСТВУЕТ В ЭТОМ ИСХОДНОМ КОДЕ!!!&quot;</target>
        </trans-unit>
        <trans-unit id="c6b186f57e22c9a22dfd36b4d9e692ed1ec8ec31" translate="yes" xml:space="preserve">
          <source>Declarations specify the interpretation given to each identifier; they do not necessarily reserve storage associated with the identifier.  Declarations that reserve storage are called &lt;em&gt;definitions&lt;/em&gt;.   [p. 210]</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявления определяют толкование, данное каждому идентификатору; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;они не обязательно резервируют хранилище, связанное с идентификатором. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявления, которые резервируют хранилище, называются &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определениями&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[п. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;210]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8a732d26406a26477ad0fee03ef2b22c4093a2d" translate="yes" xml:space="preserve">
          <source>Declarations tell the compiler that a
  program element or name exists. A
  declaration introduces one or more
  names into a program. Declarations can
  occur more than once in a program.
  Therefore, classes, structures,
  enumerated types, and other
  user-defined types can be declared for
  each compilation unit.</source>
          <target state="translated">Объявления сообщают компилятору о существовании элемента или имени программы.Декларация вводит одно или несколько имен в программу.Объявления могут встречаться в программе не один раз.Поэтому для каждой единицы компиляции можно объявить классы,структуры,перечисленные типы и другие пользовательские типы.</target>
        </trans-unit>
        <trans-unit id="ba36a6ab526bffb9d1d470e6a96ed2a752e80384" translate="yes" xml:space="preserve">
          <source>Declare the name of an object, so anything with a name has been declared which includes Variables, Funtions, etc.</source>
          <target state="translated">Объявляйте имя объекта,поэтому было объявлено все,что имеет имя,которое включает в себя Переменные,Функции и т.д.</target>
        </trans-unit>
        <trans-unit id="b9b20e36df5655b5a114d70b64646f09d952f134" translate="yes" xml:space="preserve">
          <source>Define the type of an object, which may be built-in or a class or struct.</source>
          <target state="translated">Определите тип объекта,который может быть встроенным,классом или структурой.</target>
        </trans-unit>
        <trans-unit id="95fb2f14307637368f9d8333c599b9e69d6c2ed2" translate="yes" xml:space="preserve">
          <source>Definition associates the variable with a type and allocates memory, whereas declaration just specifies the type but doesn't allocate memory. Declaration is more useful when you want to refer the variable before definition.</source>
          <target state="translated">Определение связывает переменную с типом и выделяет память,в то время как объявление просто указывает тип,но не выделяет память.Объявление более полезно,когда необходимо обратиться к переменной до ее определения.</target>
        </trans-unit>
        <trans-unit id="3b3eae2d0f96b7d6bf450e5abf72274e674a9521" translate="yes" xml:space="preserve">
          <source>Definition defines a non-inline member function.</source>
          <target state="translated">Определение определяет нестрочную функцию.</target>
        </trans-unit>
        <trans-unit id="0c6388167156e5669ce0bcff876711ec9aa79c2d" translate="yes" xml:space="preserve">
          <source>Definition defines a static class data member,</source>
          <target state="translated">Определение определяет статический член данных класса,</target>
        </trans-unit>
        <trans-unit id="297d465599f62e2fac01fca545d124c9a928f36d" translate="yes" xml:space="preserve">
          <source>Definition on the other hand means that in additions to all the things that declaration does, space is also reserved in memory. You can say &quot;DEFINITION = DECLARATION + SPACE RESERVATION&quot; following are examples of definition:</source>
          <target state="translated">Определение,с другой стороны,означает,что в дополнении ко всему,что делает декларация,место тоже резервируется в памяти.Вы можете сказать &quot;DEFINITION=DECLARATION+SPACE RESERVATION&quot; следующие примеры определения:</target>
        </trans-unit>
        <trans-unit id="4b3b76b1d37ea5129186057193aae58ff47de0c6" translate="yes" xml:space="preserve">
          <source>Definition: &quot;...and here it is!&quot;</source>
          <target state="translated">Определение:&quot;...и вот оно!&quot;</target>
        </trans-unit>
        <trans-unit id="996826fadb23a620a4c5f4e1baa250a26bded82c" translate="yes" xml:space="preserve">
          <source>Definition: picture a dictionary, you are looking up Foo and what it actually means.</source>
          <target state="translated">Определение:изобразите словарь,вы смотрите на Foo и что он на самом деле означает.</target>
        </trans-unit>
        <trans-unit id="51cd1b171491c58ca6aa228d684e22a07bc6f896" translate="yes" xml:space="preserve">
          <source>Definitions specify what code or data
  the name describes. A name must be
  declared before it can be used.</source>
          <target state="translated">Определения определяют,какой код или данные описаны в названии.Имя должно быть объявлено до того,как оно может быть использовано.</target>
        </trans-unit>
        <trans-unit id="d8cbbe3b8808457bf922c69ec458a3b178b4744e" translate="yes" xml:space="preserve">
          <source>Examples from the standard which differentiates between declaration and definition that I found helpful in understanding the nuances between them:</source>
          <target state="translated">Примеры из стандарта,в котором проводится различие между декларацией и определением,которые я нашел полезными для понимания нюансов между ними:</target>
        </trans-unit>
        <trans-unit id="8ce06d2fc12899379e460f732c60dee874049ea5" translate="yes" xml:space="preserve">
          <source>Find similar answers here: &lt;a href=&quot;http://sickprogrammersarea.blogspot.in/2014/03/technical-interview-questions-on-c_6.html&quot;&gt;Technical Interview Questions in C&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Найти похожие ответы здесь: &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sickprogrammersarea.blogspot.in/2014/03/technical-interview-questions-on-c_6.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Технические вопросы интервью в C&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26c4ba5cf6b1780a5debd4d155f4cd98dbbbd585" translate="yes" xml:space="preserve">
          <source>Following are some examples of definition.</source>
          <target state="translated">Ниже приведены некоторые примеры определения.</target>
        </trans-unit>
        <trans-unit id="a380b113afeab06c3a0583f812b0354dbfd76353" translate="yes" xml:space="preserve">
          <source>From the C++ standard section 3.1:</source>
          <target state="translated">Из стандартного раздела C++3.1:</target>
        </trans-unit>
        <trans-unit id="888b40e8c67f58cdab3cec509ebde51eb265b8e3" translate="yes" xml:space="preserve">
          <source>From the C++ standard, 3.1(2):</source>
          <target state="translated">От стандарта C++,3.1(2):</target>
        </trans-unit>
        <trans-unit id="3a32000d5615784dc80afffafcb23edb1405073c" translate="yes" xml:space="preserve">
          <source>From the C99 standard, 6.7(5):</source>
          <target state="translated">От стандарта С99,6.7(5):</target>
        </trans-unit>
        <trans-unit id="4c5d4c96ace6917b1c664e3f0422608a5639871a" translate="yes" xml:space="preserve">
          <source>From wiki.answers.com:</source>
          <target state="translated">С wiki.answers.com:</target>
        </trans-unit>
        <trans-unit id="a6fbe8bc71e01304063cbd4af8e69efbcee11d9a" translate="yes" xml:space="preserve">
          <source>Furthermore declaration tells the compiler the scope of the variable.</source>
          <target state="translated">Кроме того,объявление сообщает компилятору область видимости переменной.</target>
        </trans-unit>
        <trans-unit id="04d48f1c46157cd7178e2579fb08d138d1acc71b" translate="yes" xml:space="preserve">
          <source>However, it must be &lt;em&gt;defined&lt;/em&gt; exactly once. If you forget to define something that's been declared and referenced somewhere, then the linker doesn't know what to link references to and complains about a missing symbols. If you define something more than once, then the linker doesn't know &lt;em&gt;which&lt;/em&gt; of the definitions to link references to and complains about duplicated symbols.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако это должно быть &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определено&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ровно один раз. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы забыли определить что-то, что было объявлено и где-то указано, то компоновщик не знает, на что ссылается ссылка, и жалуется на отсутствующие символы. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если вы определяете что-то более одного раза, то компоновщик не знает, на &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;какое&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; из определений ссылаться ссылки, и жалуется на дублированные символы.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c9c6e987322b67abb5b4ac4b8f34afef80493e6" translate="yes" xml:space="preserve">
          <source>In C++, when using templates, there is another edge case.</source>
          <target state="translated">В C++,при использовании шаблонов,есть еще один крайний случай.</target>
        </trans-unit>
        <trans-unit id="14c40ce931ba7fef932decc07f6c06ded1020e3b" translate="yes" xml:space="preserve">
          <source>In C, a declaration merely provides information that a function or variable  exists and gives its type. For a function declaration, information about the  types of its arguments might be provided as well. The purpose of declarations is to allow the compiler to correctly process references to the declared variables and functions. A definition, on the other hand, actually allocates storage for a variable or says what a function does.</source>
          <target state="translated">В C декларация просто предоставляет информацию о том,что функция или переменная существует,и указывает ее тип.Для объявления функции также может быть предоставлена информация о типах ее аргументов.Назначение деклараций-позволить компилятору корректно обрабатывать ссылки на объявленные переменные и функции.Определение,с другой стороны,фактически выделяет хранилище для переменной или говорит о том,что делает функция.</target>
        </trans-unit>
        <trans-unit id="19608fba0408ae644fd5229e9e65379b70521f4e" translate="yes" xml:space="preserve">
          <source>In above cases we define and declare variable &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;function max()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В вышеупомянутых случаях мы определяем и объявляем переменную &lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;function max()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9ce3d1b0ddb83c92767c94a137a0da420caeb4b" translate="yes" xml:space="preserve">
          <source>In stage 2 (translator/compiler), declaration statements in our code tell to the compiler that these things we are going to use in future and you can find definition later, meaning is :</source>
          <target state="translated">На втором этапе (транслятор-комппилятор)утверждения деклараций в нашем коде говорят компилятору,что эти вещи мы будем использовать в дальнейшем,и вы можете найти определение позже,значение :</target>
        </trans-unit>
        <trans-unit id="be3f4390f49f2648bc532da8783c26029fccc45d" translate="yes" xml:space="preserve">
          <source>In this, print function is declared and defined as well. Since function call is coming after the definition. Now see the next program.</source>
          <target state="translated">В этом случае также объявляется и определяется функция печати.Так как вызов функции происходит после определения.Теперь смотрите следующую программу.</target>
        </trans-unit>
        <trans-unit id="99fc10d02552574296091f7a8004a1f4c5848d32" translate="yes" xml:space="preserve">
          <source>It is essential because function call precedes definition so compiler must know whether there is any such function. So we declare the function which will inform the compiler.</source>
          <target state="translated">Это важно,так как вызов функции предшествует определению,поэтому компилятор должен знать,есть ли такая функция.Поэтому мы объявляем функцию,которая сообщит компилятору.</target>
        </trans-unit>
        <trans-unit id="6dd0d66ef5c757d19db64303b42463172032dea5" translate="yes" xml:space="preserve">
          <source>It is important to distinguish between the &lt;em&gt;declaration&lt;/em&gt; of an external variable and its &lt;em&gt;definition&lt;/em&gt;.  A declaration announces the properties of a variable (primarily its type); a definition also causes storage to be set aside.
   If the lines</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Важно различать &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внешней переменной и ее &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Объявление объявляет свойства переменной (прежде всего ее тип); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определение также приводит к тому, что хранилище будет отложено. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Если линии&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7bb839ca9f9087c80d38524e2fd162649df66f6" translate="yes" xml:space="preserve">
          <source>Linker make sure that : &lt;strong&gt;where is what ?&lt;/strong&gt; means definition</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Линкер убедился, что: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;где что? &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;означает определение&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f77b57fc3af0ccdd4970f61d7053e039e7adb67" translate="yes" xml:space="preserve">
          <source>My favorite example is &quot;int Num = 5&quot; here your variable is 1. defined as int 2. declared as Num and 3. instantiated with a value of five. We</source>
          <target state="translated">Мой любимый пример-&quot;int Num=5&quot;,здесь ваша переменная 1.определяется как int 2.объявленная как Num и 3.инстанцированная значением 5.Мы .</target>
        </trans-unit>
        <trans-unit id="acf0e3f288d4a82202dc2610b07ab4c60f8363e2" translate="yes" xml:space="preserve">
          <source>No translation unit shall contain more than one definition of any variable, function, class type, enumeration type, or template.</source>
          <target state="translated">Ни одна единица трансляции не должна содержать более одного определения любой переменной,функции,типа класса,типа перечисления или шаблона.</target>
        </trans-unit>
        <trans-unit id="0b58d48582a8638f273f55a63fd1748b65471a6b" translate="yes" xml:space="preserve">
          <source>Note the difference between two programs.</source>
          <target state="translated">Обратите внимание на разницу между двумя программами.</target>
        </trans-unit>
        <trans-unit id="3c7ef5eaf474b8a428928edf7cb8c9ea583962f4" translate="yes" xml:space="preserve">
          <source>Note the semicolon at the end of function so it says it is only a declaration. Compiler knows that somewhere in the program that function will be &lt;strong&gt;defined&lt;/strong&gt; with that prototype. Now if the compiler gets a function call something like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Обратите внимание на точку с запятой в конце функции, поэтому она говорит, что это всего лишь объявление. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Компилятор знает, что где-то в программе эта функция будет &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определена&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; с этим прототипом. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь, если компилятор получает вызов функции что-то вроде этого&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a91d8af7d382aa440a5b3d5a12bca8db0fa76932" translate="yes" xml:space="preserve">
          <source>Now &lt;strong&gt;function declaration :&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление функции:&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fc5bbbd255416bc196c5482f93f9ec0f8ea4208" translate="yes" xml:space="preserve">
          <source>Now for the big reason why it's important to understand the difference between a declaration and definition: the &lt;strong&gt;One Definition Rule&lt;/strong&gt;.  From section 3.2.1 of the C++ standard:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Теперь по большой причине, почему важно понимать разницу между декларацией и определением: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Правило единого определения&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Из раздела 3.2.1 стандарта C ++:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd5e49283464beb5bc918031d9d2ed7bb8a96d26" translate="yes" xml:space="preserve">
          <source>On the other hand, the lines</source>
          <target state="translated">С другой стороны,линии</target>
        </trans-unit>
        <trans-unit id="91e9020bdf8b029977b84f3954c542670e501e1b" translate="yes" xml:space="preserve">
          <source>One interesting thought - a template cannot allocate storage until the class or function is linked with the type information.  So is the template identifier a declaration or definition?  It should be a declaration since no storage is allocated, and you are simply 'prototyping' the template class or function.</source>
          <target state="translated">Одна интересная мысль-шаблон не может выделить хранилище до тех пор,пока класс или функция не будут связаны с информацией о типе.Так является ли идентификатор шаблона декларацией или определением? Он должен быть декларацией,так как хранилище не выделяется,а вы просто &quot;прототипируете&quot; класс или функцию шаблона.</target>
        </trans-unit>
        <trans-unit id="3d8df65b14d6dcd0611847ba71a3599a0f60a1fa" translate="yes" xml:space="preserve">
          <source>One may declare a heterogeneous variable or array which are not specifically defined.</source>
          <target state="translated">Можно объявить гетерогенную переменную или массив,которые специально не определены.</target>
        </trans-unit>
        <trans-unit id="8644dd3acfdaeead0c8466b3d16008f15f606cb1" translate="yes" xml:space="preserve">
          <source>Rule of thumb:</source>
          <target state="translated">Правило:</target>
        </trans-unit>
        <trans-unit id="a29490cc9cbffa425558e5cdaa37a7a83d0d0a49" translate="yes" xml:space="preserve">
          <source>See that:</source>
          <target state="translated">Вот видишь:</target>
        </trans-unit>
        <trans-unit id="bfb35843bce9cc58be12602fc81107bd5f8c7a28" translate="yes" xml:space="preserve">
          <source>Since I don't see an answer pertinent to C++11 here's one.</source>
          <target state="translated">Так как я не вижу ответа,относящегося к C++11,вот один.</target>
        </trans-unit>
        <trans-unit id="d9a31aa9b4df4362ba827fa4cdcf237e84babdec" translate="yes" xml:space="preserve">
          <source>Since the debate what is a class &lt;em&gt;declaration&lt;/em&gt; vs. a class &lt;em&gt;definition&lt;/em&gt; in C++ keeps coming up (in answers and comments to other questions) , I'll paste a quote from the C++ standard here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Поскольку продолжаются дебаты о том, что такое &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; класса и &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; класса &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;в C ++ (в ответах и ​​комментариях к другим вопросам), я вставлю здесь цитату из стандарта C ++.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="781d38de82d584eee83631b34cc783e358ba2650" translate="yes" xml:space="preserve">
          <source>So interestingly (or not, but I'm slightly surprised by it), &lt;code&gt;typedef int myint;&lt;/code&gt; is a definition in C99, but only a declaration in C++.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Так интересно (или нет, но я немного удивлен этим), &lt;/font&gt;&lt;/font&gt; &lt;code&gt;typedef int myint;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это определение в C99, но только объявление в C ++.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e592f2bbd96ed4adf6bbb96facab79f223d605ac" translate="yes" xml:space="preserve">
          <source>So, when you declare something, you just tell &lt;em&gt;what it is&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Итак, когда вы заявляете что-то, вы просто говорите, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что это такое&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7715a6bcbe63b7b78d6f89bcfbe08ee9d36069c" translate="yes" xml:space="preserve">
          <source>Stages of an executable generation:</source>
          <target state="translated">Этапы исполняемого поколения:</target>
        </trans-unit>
        <trans-unit id="4b08b438925af8ddb24d79e95bc2126889df8222" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;https://stackoverflow.com/users/34509/johannes-schaub-litb&quot;&gt;litb (Johannes Schaub)&lt;/a&gt; who dug out the actual chapter and verse in one of his answers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Спасибо &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/34509/johannes-schaub-litb&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Литбу (Йоханнесу Шаубу),&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; который раскопал настоящую главу и стих в одном из своих ответов.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6562c77a290f07ac969ab9e0dd9b04ed319645b1" translate="yes" xml:space="preserve">
          <source>That can be a definition or a declaration, depending on what type &lt;code&gt;T&lt;/code&gt; is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это может быть определение или объявление, в зависимости от типа &lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a41b05f666a35676f7725019753347ca8192a8f9" translate="yes" xml:space="preserve">
          <source>The concept of Declaration and Definition will form a pitfall when you are using the extern storage class because your definition will be in some other location and you are declaring the variable in your local code file (page). One difference between C and C++ is that in C you the declarations are done normally at the beginning of a function or code page. In C++ it's not like that. You can declare at a place of your choice.</source>
          <target state="translated">Понятие Объявление и Определение образует ловушку,когда вы используете класс хранения extern,потому что ваше определение будет находиться в каком-то другом месте,и вы объявляете переменную в вашем локальном файле кода (странице).Одно из различий между Си и Си++заключается в том,что в Си объявления обычно делаются в начале функции или кодовой страницы.В Си++это не так.Вы можете объявлять в любом месте по своему выбору.</target>
        </trans-unit>
        <trans-unit id="bb60f7e8a8da1fe204496ca96400679cd8ac5c7f" translate="yes" xml:space="preserve">
          <source>The last declaration was &lt;em&gt;not&lt;/em&gt; a definition. It's the declaration of an explicit specialization of the static member of &lt;code&gt;X&amp;lt;bool&amp;gt;&lt;/code&gt;. It tells the compiler: &quot;If it comes to instantiating &lt;code&gt;X&amp;lt;bool&amp;gt;::member&lt;/code&gt;, then don't instantiate the definition of the member from the primary template, but use the definition found elsewhere&quot;. To make it a definition, you have to supply an initializer</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Последнее заявление &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;не&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; было определением. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Это объявление явной специализации статического члена &lt;/font&gt;&lt;/font&gt; &lt;code&gt;X&amp;lt;bool&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Он сообщает компилятору: &amp;laquo;Если речь идет о создании экземпляра &lt;/font&gt;&lt;/font&gt; &lt;code&gt;X&amp;lt;bool&amp;gt;::member&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , то не создавайте экземпляр определения элемента из основного шаблона, а используйте определение, найденное в другом месте&amp;raquo;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Чтобы сделать это определение, вы должны предоставить инициализатор&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06db3adda590eafc110f28501b2576aa4eda04fd" translate="yes" xml:space="preserve">
          <source>The meaning of both eludes me.</source>
          <target state="translated">Смысл обоих ускользает от меня.</target>
        </trans-unit>
        <trans-unit id="15ac8d38640240d3139154879e3cff6d38840509" translate="yes" xml:space="preserve">
          <source>The next paragraph states (emphasis mine) that a declaration &lt;strong&gt;is a definition&lt;/strong&gt; unless...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Следующий абзац гласит (выделение мое), что объявление &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;является определением,&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; если ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24b828ce031d9b5064561b6997da9367af86e546" translate="yes" xml:space="preserve">
          <source>The term declaration means (in C) that you are telling the compiler about type, size and in case of function declaration, type and size of its parameters of any variable, or user defined type or function in your program. &lt;em&gt;No&lt;/em&gt; space is reserved in memory for any variable in case of declaration. However compiler knows how much space to reserve in case a variable of this type is created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Термин объявление означает (на языке C), что вы сообщаете компилятору о типе, размере и, в случае объявления функции, типе и размере ее параметров любой переменной, или определяемого пользователем типа или функции в вашей программе. &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;В&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; случае объявления в памяти не зарезервировано ни одной переменной. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Однако компилятор знает, сколько места нужно зарезервировать в случае создания переменной этого типа.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0f54540d333cbe024948a85c98a4b9e24f58eca" translate="yes" xml:space="preserve">
          <source>Then there are some examples.</source>
          <target state="translated">Тогда есть несколько примеров.</target>
        </trans-unit>
        <trans-unit id="863ca81372dc9255f7dce4afe2402beb7212e451" translate="yes" xml:space="preserve">
          <source>There are interesting edge cases in C++ (some of them in C too). Consider</source>
          <target state="translated">В С++есть интересные крайние случаи (некоторые из них и в С тоже).Рассмотрим .</target>
        </trans-unit>
        <trans-unit id="4c8653159a54feee8399a6f6f3fdeac5a854ae68" translate="yes" xml:space="preserve">
          <source>There are some very clear definitions sprinkled throughout K&amp;amp;R (2nd edition); it helps to put them in one place and read them as one:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Есть несколько очень четких определений, разбросанных по всему K &amp;amp; R (2-е издание); &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;это помогает поместить их в одно место и читать их как одно:&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2959f78f83643c67add724e5a49ace7154964d1f" translate="yes" xml:space="preserve">
          <source>There must be only one &lt;em&gt;definition&lt;/em&gt; of an external variable among all the files that make up the source program. ... Array sizes must be specified with the definition, but are optional with an &lt;code&gt;extern&lt;/code&gt; declaration. [pp. 80-81]</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Должно быть только одно &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внешней переменной среди всех файлов, составляющих исходную программу. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;... Размеры массива должны быть указаны с помощью определения, но необязательны с &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявлением &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[стр. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;80-81]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1860995fb136537869d1de5f212a9eeb11439630" translate="yes" xml:space="preserve">
          <source>This is going to sound really cheesy, but it's the best way I've been able to keep the terms straight in my head:</source>
          <target state="translated">Это прозвучит очень убого,но это лучший способ удержать термины прямо в голове:</target>
        </trans-unit>
        <trans-unit id="2683e3017ef9f96a94e8c501cc8cab020abfc446" translate="yes" xml:space="preserve">
          <source>This line &lt;em&gt;declares&lt;/em&gt; a C function called &lt;code&gt;sum&lt;/code&gt; that takes two arguments of type &lt;code&gt;int&lt;/code&gt; and returns an &lt;code&gt;int&lt;/code&gt;. However, you can't use it yet.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Эта строка &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявляет&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; функцию C с именем &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sum&lt;/code&gt; ,&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; которая принимает два аргумента типа &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и возвращает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Тем не менее, вы не можете использовать его пока.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35f8fefdcd38bf21987d182f01622569d4f6e75a" translate="yes" xml:space="preserve">
          <source>This part of defining a function is called Definition. It says what to do inside the function.</source>
          <target state="translated">Эта часть определения функции называется Определение.В ней говорится,что делать внутри функции.</target>
        </trans-unit>
        <trans-unit id="3a87dc8a8b5737d9a76a03ce8f61e4adbc7bbfe6" translate="yes" xml:space="preserve">
          <source>To sum it up: The C++ standard considers &lt;code&gt;struct x;&lt;/code&gt; to be a &lt;em&gt;declaration&lt;/em&gt; and &lt;code&gt;struct x {};&lt;/code&gt; a &lt;em&gt;definition&lt;/em&gt;. (In other words, &lt;strong&gt;&lt;em&gt;&quot;forward declaration&quot; a misnomer&lt;/em&gt;&lt;/strong&gt;, since there are no other forms of class declarations in C++.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Подводя итог: стандарт C ++ рассматривает &lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct x;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;быть &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;декларацией&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct x {};&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определение&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(Другими словами, &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;laquo;предварительное объявление&amp;raquo; является неправильным&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , поскольку в C ++ нет других форм объявлений классов.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="806f30e98fdfc516d8fb79b6aec0810306b2325b" translate="yes" xml:space="preserve">
          <source>To understand the difference between declaration and definition we need to see the assembly code:</source>
          <target state="translated">Чтобы понять разницу между декларацией и определением,нам нужно увидеть код ассемблера:</target>
        </trans-unit>
        <trans-unit id="49ed4f10828ba71628d641f90a19264281889310" translate="yes" xml:space="preserve">
          <source>To understand the nouns, let's focus on the verbs first.</source>
          <target state="translated">Чтобы понять существительные,давайте сначала сосредоточимся на глаголах.</target>
        </trans-unit>
        <trans-unit id="a7ce1cc67124e355089efdeddab83e9b66e59354" translate="yes" xml:space="preserve">
          <source>Using an offset in C++ you may define an object which does not have a declared name.</source>
          <target state="translated">Используя смещение в C++можно определить объект,не имеющий объявленного имени.</target>
        </trans-unit>
        <trans-unit id="385fe7554df432859cab0425cfc9a11b34d52373" translate="yes" xml:space="preserve">
          <source>We can say that declaration is an information used by the compiler to establish the correct use of the variable and for how long some memory belongs to certain variable.</source>
          <target state="translated">Можно сказать,что объявление-это информация,используемая компилятором для установления корректного использования переменной и того,как долго некоторое количество памяти принадлежит определенной переменной.</target>
        </trans-unit>
        <trans-unit id="322128de805b4936b6358f1a19d5ae95fefbb059" translate="yes" xml:space="preserve">
          <source>What is the difference between a definition and a declaration</source>
          <target state="translated">В чем разница между определением и декларацией?</target>
        </trans-unit>
        <trans-unit id="7138d48fb6d27513a18caa3593c63e61b7358510" translate="yes" xml:space="preserve">
          <source>When we learn programming these two terms are often confused because we often do both at the same time.</source>
          <target state="translated">Когда мы учимся программированию,эти два термина часто путают,потому что мы часто делаем оба одновременно.</target>
        </trans-unit>
        <trans-unit id="6def3a73e4f63df697aabe109fe06a6c93f12369" translate="yes" xml:space="preserve">
          <source>When you provide &lt;em&gt;how it actually works&lt;/em&gt;, that's the definition of it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Когда вы предоставляете, &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;как это на самом деле работает&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , это и есть определение.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e400c5efc1ddb736736df8934434d8973e6d47c4" translate="yes" xml:space="preserve">
          <source>alias declaration - &lt;code&gt;using IntVector = std::vector&amp;lt;int&amp;gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление псевдонима - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;using IntVector = std::vector&amp;lt;int&amp;gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="83bc3ad6dab8c5448869de8742678e024393c2d4" translate="yes" xml:space="preserve">
          <source>and (3) stage (linker) needs definition to bind the things</source>
          <target state="translated">и (3)этап (компоновщик)нуждается в определении,чтобы связать вещи.</target>
        </trans-unit>
        <trans-unit id="c250bb37f81b649b5e0b958874a4ce6886aeb6bb" translate="yes" xml:space="preserve">
          <source>and this is only definition:</source>
          <target state="translated">и это только определение:</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="394377a2bab468b85e4230333e5515f6e664d1f5" translate="yes" xml:space="preserve">
          <source>appear outside of any function, they &lt;em&gt;define&lt;/em&gt; the external variables &lt;code&gt;sp&lt;/code&gt; and &lt;code&gt;val&lt;/code&gt;, cause storage to be set aside, and also serve as the declaration for the rest of that source file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;появляются вне какой-либо функции, они &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определяют&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; внешние переменные &lt;/font&gt;&lt;/font&gt; &lt;code&gt;sp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt; &lt;code&gt;val&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , приводят к тому, что память откладывается, а также служат объявлением для остальной части этого исходного файла.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5713a8fd4873c4ee0772c540f77bc9b4690414d8" translate="yes" xml:space="preserve">
          <source>attribute declaration (implementation-defined)</source>
          <target state="translated">декларация атрибутов (реализация-определена)</target>
        </trans-unit>
        <trans-unit id="99a95e0a0124f49ccf6c1b25ed31f02c58c40ce1" translate="yes" xml:space="preserve">
          <source>class/struct declaration - &lt;code&gt;struct Point;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление класса / структуры - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct Point;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="836861684fb6b1bdbace72353ece9b5d39a54b29" translate="yes" xml:space="preserve">
          <source>definition means actual function written &amp;amp; declaration means simple declare function 
for e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;определение означает фактическую написанную функцию, а объявление означает простую функцию объявления, например, для&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1f346b5e9397445565c039f6a08c4b7fcd9cd06" translate="yes" xml:space="preserve">
          <source>empty declaration &lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;пустая декларация &lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c68f6a2687e1d372139fda035e9188841ff3701" translate="yes" xml:space="preserve">
          <source>extern specifier containing declaration or a linkage specifier - &lt;code&gt;extern int a;&lt;/code&gt; or &lt;code&gt;extern &quot;C&quot; { ... };&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;спецификатор extern, содержащий объявление или спецификатор связи - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern int a;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;или &lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern &quot;C&quot; { ... };&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa85a4ce143a97fda495856e858971d8311bb86f" translate="yes" xml:space="preserve">
          <source>for a function, includes the function body;</source>
          <target state="translated">для функции,включает в себя функциональное тело;</target>
        </trans-unit>
        <trans-unit id="710ec7e684fce80d8a15c82d8ed63d64ffc625ad" translate="yes" xml:space="preserve">
          <source>for an enumeration constant or typedef name, is the (only) declaration of the
identifier.</source>
          <target state="translated">для константы перечисления или имени типа Typeedef,является (единственной)декларацией идентификатора.</target>
        </trans-unit>
        <trans-unit id="a2e539e7adc3beb97fbc61118adb5d92e8a0cb5e" translate="yes" xml:space="preserve">
          <source>for an object, causes storage to be reserved for that object;</source>
          <target state="translated">для объекта,заставляет хранилище быть зарезервированным для этого объекта;</target>
        </trans-unit>
        <trans-unit id="55eb3df2f5c99b85558c3316ed6a57e068d35c3a" translate="yes" xml:space="preserve">
          <source>for example, following are all declarations:</source>
          <target state="translated">Например,все декларации следующие:</target>
        </trans-unit>
        <trans-unit id="0e1074fc9cecb49ab03f40515903540340dadb29" translate="yes" xml:space="preserve">
          <source>function declaration - &lt;em&gt;add&lt;/em&gt; in &lt;code&gt;int add(int x, int y);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление функции - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;добавить&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int add(int x, int y);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="691250a0d8501fd28d1f7f69040ce631710bd674" translate="yes" xml:space="preserve">
          <source>many time declaration and definition can be done together as:</source>
          <target state="translated">много времени декларация и определение могут быть сделаны вместе как:</target>
        </trans-unit>
        <trans-unit id="46289ff66baf68d30e36660208dca74ff244d0f4" translate="yes" xml:space="preserve">
          <source>opaque enum - &lt;code&gt;enum X : int;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;непрозрачный enum - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;enum X : int;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33e7d0b67586ad99c601eae8c2f5ef5159324ab1" translate="yes" xml:space="preserve">
          <source>or give name,return type and parameter(s) type to a function without body(in case of function declaration), eg:</source>
          <target state="translated">или дать имя,тип возврата и тип(ы)параметра(ов)функции без тела (в случае объявления функции),например:</target>
        </trans-unit>
        <trans-unit id="534668f985ce9590dec22cf0c2bd8c2be62d40d8" translate="yes" xml:space="preserve">
          <source>or provide/add body(functionality) to a function is called function definition, eg:</source>
          <target state="translated">или предоставление тела (функциональности)функции называется определением функции,например</target>
        </trans-unit>
        <trans-unit id="2c7fd8664d6f3d365fa123f8289dd4f0e1c051c4" translate="yes" xml:space="preserve">
          <source>parameter declaration - &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; in &lt;code&gt;int add(int x, int y);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление параметров - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; и &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;y&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;int add(int x, int y);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b776095b0ef5fd687903b21dfaef1a4ead6423ae" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;http://wiki.answers.com/Q/What_is_the_difference_between_declaration_and_a_definition_in_C&quot;&gt;Answers&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;см. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://wiki.answers.com/Q/What_is_the_difference_between_declaration_and_a_definition_in_C&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ответы&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83df361f2472f023dc3367fe2ef95a3a1c0bced9" translate="yes" xml:space="preserve">
          <source>static assert declaration - &lt;code&gt;static_assert(sizeof(int) == 4, &quot;Yikes!&quot;)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление статического утверждения - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;static_assert(sizeof(int) == 4, &quot;Yikes!&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9713df110e0f8b7f4e4747624e2a1befe6cbbbcd" translate="yes" xml:space="preserve">
          <source>static data member in a class - &lt;em&gt;x&lt;/em&gt; in &lt;code&gt;class C { static int x; };&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;член статических данных в классе - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;x&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;class C { static int x; };&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d90a87b9adf8dcdb10ebc761506dfcc4cedda232" translate="yes" xml:space="preserve">
          <source>template parameter - &lt;em&gt;T&lt;/em&gt; in &lt;code&gt;template&amp;lt;typename T&amp;gt; class MyArray;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;параметр шаблона - &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;T&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; в &lt;/font&gt;&lt;/font&gt; &lt;code&gt;template&amp;lt;typename T&amp;gt; class MyArray;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98f4f39a898342cf7c09afed33b830eab5c366a8" translate="yes" xml:space="preserve">
          <source>this is definition of function myfunction</source>
          <target state="translated">это определение функции мифункции</target>
        </trans-unit>
        <trans-unit id="ae9d0444b7ed2454d452f0141c2c74465f75c1fd" translate="yes" xml:space="preserve">
          <source>translator make sure that : &lt;strong&gt;what is what ?&lt;/strong&gt; means declaration</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;переводчик удостоверится, что: &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;что к чему? &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;означает декларацию&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8b7c1665de57045ccb18cccc9689fcdeb3c3fa8" translate="yes" xml:space="preserve">
          <source>typedef declaration - &lt;code&gt;typedef int Int;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;объявление typedef - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;typedef int Int;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4447a1d7cc25553fd4a9ea9d25f578b496c6e29e" translate="yes" xml:space="preserve">
          <source>using declaration - &lt;code&gt;using std::cout;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;используя объявление - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;using std::cout;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0e779f0bf97b342b7dc8a1046ffeda633faa9c8" translate="yes" xml:space="preserve">
          <source>using directive - &lt;code&gt;using namespace NS;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;используя директиву - &lt;/font&gt;&lt;/font&gt; &lt;code&gt;using namespace NS;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb3af7b8074902e644805a3d701f8ac7a9f0be14" translate="yes" xml:space="preserve">
          <source>whereas definition means assign value to a variable (in case of variable definition), eg:</source>
          <target state="translated">тогда как определение означает присвоение значения переменной (в случае определения переменной),например:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
