<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="https://stackoverflow.com/questions/1410563">
    <body>
      <group id="1410563">
        <trans-unit id="d3e1cb3a3443634ff53cc2b9795b221e08aff864" translate="yes" xml:space="preserve">
          <source>&quot;Definition&quot; refers to the place where the variable is created or assigned storage; &quot;declaration&quot; refers to the places where the nature of the variable is stated but no storage is allocated. [p. 33]</source>
          <target state="translated">&quot;定义 &quot;是指创建变量或分配存储的地方;&quot;声明 &quot;是指说明了变量的性质但没有分配存储的地方。[p.33]</target>
        </trans-unit>
        <trans-unit id="a061c129094d0ff1778fc7ec900876975d32d737" translate="yes" xml:space="preserve">
          <source>(1) pre-processor -&amp;gt; (2) translator/compiler -&amp;gt; (3) linker</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（1）预处理器-&amp;gt;（2）转换器/编译器-&amp;gt;（3）链接器&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd5fdc3afbe6dcb00284641de3983ea144203d6a" translate="yes" xml:space="preserve">
          <source>... it contains the &lt;code&gt;extern&lt;/code&gt; keyword without an initializer or function body:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...它包含&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;关键字，但没有初始化程序或函数体：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="40fd3d94339d186d84d63fdee95aebb6c1abba75" translate="yes" xml:space="preserve">
          <source>... it declares a class name:</source>
          <target state="translated">...它宣布了一个类名。</target>
        </trans-unit>
        <trans-unit id="ee4b672768d0f912948cc4b65378f09fa68640f4" translate="yes" xml:space="preserve">
          <source>... it declares a function without specifying the function&amp;rsquo;s body:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...它在不指定函数主体的情况下声明了一个函数：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ff5f4aa6062b4a4880b785e9aa6c0021a62b975e" translate="yes" xml:space="preserve">
          <source>... it declares a static member within a class definition:</source>
          <target state="translated">...它在类定义中声明了一个静态成员。</target>
        </trans-unit>
        <trans-unit id="c39f26d08a84cdbd37261f9135fde04d2142536b" translate="yes" xml:space="preserve">
          <source>... or is a &lt;code&gt;typedef&lt;/code&gt; or &lt;code&gt;using&lt;/code&gt; statement.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...或者是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typedef&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;using&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;语句。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2eb1c39890692090b7511d4443a0bd9b35083a79" translate="yes" xml:space="preserve">
          <source>3.1/3 then gives a few examples. Amongst them:</source>
          <target state="translated">3.13然后举了几个例子。其中包括:</target>
        </trans-unit>
        <trans-unit id="c2f74018b51597dfa2c633f895bfc5ab77e28343" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;declare&lt;/em&gt; for the rest of the source file that &lt;code&gt;sp&lt;/code&gt; is an &lt;code&gt;int&lt;/code&gt; and that &lt;code&gt;val&lt;/code&gt; is a &lt;code&gt;double&lt;/code&gt; array (whose size is determined elsewhere), but they do not create the variables or reserve storage for them.</source>
          <target state="translated">&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;对于源文件的其余部分，请&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/em&gt;&lt;/font&gt; &lt;code&gt;sp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; 值&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，而&lt;/font&gt;&lt;/font&gt; &lt;code&gt;val&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;double&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;精度&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;数组（其大小由其他位置确定），但它们不会创建变量或为其保留存储空间。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="861af01e85935165900323451636b81826919844" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;*Don't confuse definition with initialization. Both are different, initialization gives value to the variable. See the above example.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;*不要将定义与初始化混淆。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;两者都不同，初始化为变量赋值。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参见上面的例子。&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e06c23e6b1d7a8c58185d1992f61f8626251fe01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Declaration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Declaration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="126b8a191df2e6add16a2e2dce98e0fb96955388" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Definition :&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33833f5bb5ca3d7d809093b2a0f5419f75f069c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Definition&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Definition&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ada4ac073f468f7fc8a594017c726fea7b0ef24e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Program 1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;程序1&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74a0baa1479715ba0040249225ad1dbeb88262f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Program 2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;程序2&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d2c982178bf65a2fbffdd529e055421be59024e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;declare&lt;/strong&gt; -
to announce officially; proclaim</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣布&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -正式宣布；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;宣布&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="33728b6b497c721d75a51203569bd0b1b8fa49cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;define&lt;/strong&gt; - 
to show or describe (someone or something) clearly and completely</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; -清晰，完整地显示或描述（某人或某物）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3dee11c3365b0a296b9b5594831505006f3aff48" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;declaration&lt;/em&gt;&lt;/strong&gt; introduces an identifier and describes its type, be it a type, object, or function. A declaration is &lt;strong&gt;&lt;em&gt;what the compiler needs&lt;/em&gt;&lt;/strong&gt; to accept references to that identifier. These are declarations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;甲&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;引入的标识符和描述了它的类型，无论是类型，对象，或功能。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明是&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编译器需要&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接受对该标识符的引用的内容。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些是声明：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2432164101136c96b6046889e6dd8c6b742f3fc5" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;&lt;em&gt;definition&lt;/em&gt;&lt;/strong&gt; actually instantiates/implements this identifier. It's &lt;strong&gt;&lt;em&gt;what the linker needs&lt;/em&gt;&lt;/strong&gt; in order to link references to those entities. These are definitions corresponding to the above declarations:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;甲&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;实际实例化/器具该标识符。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是链接器&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将链接引用链接到那些实体所需要的。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这些是与上述声明相对应的定义：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fe09bce7f2879b14e8c29cd61bc626602885ef9f" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;declaration&lt;/strong&gt; introduces names into a translation unit or redeclares names introduced by previous
  declarations. A declaration specifies the interpretation and attributes of these names.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;介绍名称到由先前的声明引入了一个翻译单元或redeclares名称。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明指定这些名称的解释和属性。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8313c629bb1b381743e0a9114acebd5d0ee5b23a" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;declaration&lt;/strong&gt; provides a name to the program; a &lt;strong&gt;definition&lt;/strong&gt; provides a unique description of an entity (e.g. type, instance, and function) within the program. Declarations can be repeated in a given scope, it introduces a name in a given scope.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供了一个名称的程序; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;提供了一个实体的程序内的唯一的描述（例如类型，实例和功能）。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明可以在给定范围内重复，它在给定范围内引入名称。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="189fc174e64dc7c5e224df6db23e647642c5cae3" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;declaration&lt;/strong&gt; tells the compiler how to interpret the variable's data in memory. This is needed for every access.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;告诉编译器如何解释在内存中变量的数据。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;每次访问都需要这样做。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fccbdceb7990d654b06826a3a9fb12190b44528c" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;definition&lt;/strong&gt; reserves the memory to make the variable existing. This has to happen exactly once before first access.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保留内存，使现有的变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必须在第一次访问之前进行一次。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="59ba05cc47672cdf0cdf78f26260b6a1ca3bc010" translate="yes" xml:space="preserve">
          <source>A class or struct allows you to change how objects will be defined when it is later used. For example</source>
          <target state="translated">类或结构允许你在以后使用时改变对象的定义方式。例如</target>
        </trans-unit>
        <trans-unit id="c89e6c24f42ec4d41aa14433c4c58edb1cdfbc81" translate="yes" xml:space="preserve">
          <source>A declaration is a &lt;em&gt;definition&lt;/em&gt; unless it declares a function without specifying the function's body, it contains the extern specifier or a linkage-specification and neither an initializer nor a function-body, it declares a static data member in a class declaration, it is a class name declaration, or it is a typedef declaration, a using-declaration, or a using-directive.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明是一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义，&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除非它在不指定函数主体的情况下声明函数，它包含extern说明符或链接规范，并且既不包含初始化程序也不包含函数体，它在类声明中声明一个静态数据成员，它是一个类名声明，或者它是typedef声明，using-声明或using-伪指令。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3b35220a17540a91dc438df16b16d27140e288d9" translate="yes" xml:space="preserve">
          <source>A declaration is a &lt;em&gt;definition&lt;/em&gt; unless it declares a/n:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明是&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义，&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除非声明a / n：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6e1dd6f7957796fcf1c3fb6b3213b7fa1269793c" translate="yes" xml:space="preserve">
          <source>A declaration is a definition unless it [...] is a class name declaration [...].</source>
          <target state="translated">除非[...]是一个类名声明,否则声明就是一个定义。</target>
        </trans-unit>
        <trans-unit id="f655dfdb0203840a2861171442f47d383b48a8b0" translate="yes" xml:space="preserve">
          <source>A declaration is a definition unless:</source>
          <target state="translated">声明是一个定义,除非:</target>
        </trans-unit>
        <trans-unit id="3525577b16b9cb0abb6390c1b668207b9954a9b5" translate="yes" xml:space="preserve">
          <source>A declaration presents a symbol name to the compiler. A definition is a declaration that allocates space for the symbol.</source>
          <target state="translated">一个声明向编译器展示了一个符号名称。定义是一个为符号分配空间的声明。</target>
        </trans-unit>
        <trans-unit id="e2007c6d927aed6a7330124a154d24bffa9b628a" translate="yes" xml:space="preserve">
          <source>A declaration specifies the interpretation and attributes of a set of identifiers. A &lt;em&gt;definition&lt;/em&gt; of an identifier is a declaration for that identifier that:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明指定一组标识符的解释和属性。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标识符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是对该标识符的声明：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d97d4323d71d00037b841f80eef5a3a742123aa9" translate="yes" xml:space="preserve">
          <source>A definition can be used in the place of a declaration.</source>
          <target state="translated">可以用定义来代替声明。</target>
        </trans-unit>
        <trans-unit id="4d223e640a9bac5828b29542d62dfcd0399eb9b6" translate="yes" xml:space="preserve">
          <source>A definition is a declaration unless:</source>
          <target state="translated">定义是一种声明,除非:</target>
        </trans-unit>
        <trans-unit id="2d2a2829e9abf7c943077b966ccef48e31b7e419" translate="yes" xml:space="preserve">
          <source>A template-declaration is a declaration. A template-declaration is also a definition if its declaration defines a function, a class, or a static data member.</source>
          <target state="translated">一个模板-声明是一个声明。如果一个模板-声明定义定义了一个函数、一个类或一个静态数据成员,那么它也是一个定义。</target>
        </trans-unit>
        <trans-unit id="6e6c9146405ba1f33ef215d5d143777708b00c32" translate="yes" xml:space="preserve">
          <source>According to the GNU C library manual (&lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Header-Files.html&quot;&gt;http://www.gnu.org/software/libc/manual/html_node/Header-Files.html&lt;/a&gt;)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;根据GNU C库手册（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Header-Files.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;http://www.gnu.org/software/libc/manual/html_node/Header-Files.html&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1ab24ae679479b3b755eb72f4db4de49cc2f91f3" translate="yes" xml:space="preserve">
          <source>Additional clauses inherited from C++03 by the above list:</source>
          <target state="translated">由上述列表继承自C++03的附加子句。</target>
        </trans-unit>
        <trans-unit id="de1667f23ede8441d90b53e777f6fb113bc1ecb9" translate="yes" xml:space="preserve">
          <source>An identifier can be &lt;em&gt;declared&lt;/em&gt; as often as you want. Thus, the following is legal in C and C++:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;可以根据需要&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;多次声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;标识符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，以下内容在C和C ++中是合法的：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="256aafa3eaaa57f77d446c7ef3af28138c6469ff" translate="yes" xml:space="preserve">
          <source>As you can see nothing change.</source>
          <target state="translated">如你所见,没有什么变化。</target>
        </trans-unit>
        <trans-unit id="72529e76157ed78fc3d33d1389f83cd5f5836624" translate="yes" xml:space="preserve">
          <source>At 3.1/2, C++03 says:</source>
          <target state="translated">3.12时,C++03说。</target>
        </trans-unit>
        <trans-unit id="c6dbb497b88d55bab84f5d72d1536e62353dd3fb" translate="yes" xml:space="preserve">
          <source>C++11 Update</source>
          <target state="translated">C++11更新</target>
        </trans-unit>
        <trans-unit id="a79dda8e4c729febda6af7a56050f4eb02842da2" translate="yes" xml:space="preserve">
          <source>Compiler will throw an error saying that there is no such function. Because it doesn't has any prototype for that function.</source>
          <target state="translated">编译器会抛出一个错误,说没有这样的函数。因为它没有这个函数的原型。</target>
        </trans-unit>
        <trans-unit id="899e53f8b7c465bbd6f883536c54fc28add5a804" translate="yes" xml:space="preserve">
          <source>Couldnt you state in the most general terms possible, that a declaration is an identifier in which no storage is allocated and a definition actually allocates storage from a declared identifier?</source>
          <target state="translated">你能不能用最笼统的术语说明一下,声明是一个没有分配存储的标识符,而定义实际上是从声明的标识符中分配存储的?</target>
        </trans-unit>
        <trans-unit id="c0a1e8e49dae817c3ed6711672c852ebb15426f3" translate="yes" xml:space="preserve">
          <source>Declaration contains an extern specifier and no initializer or function body,</source>
          <target state="translated">声明包含一个外部指定器,没有初始化器或函数体。</target>
        </trans-unit>
        <trans-unit id="0519bc506db8f6d81fa08e3191c3184fac76cbde" translate="yes" xml:space="preserve">
          <source>Declaration declares a function without specifying its body,</source>
          <target state="translated">声明声明一个函数,但不指定其主体。</target>
        </trans-unit>
        <trans-unit id="aa04905eceedfaae5f878c6564691fba4fbfc641" translate="yes" xml:space="preserve">
          <source>Declaration haven't an equivalent instruction because it is no something to be executed.</source>
          <target state="translated">声明没有一个等效的指令,因为它没有被执行的东西。</target>
        </trans-unit>
        <trans-unit id="cdebb23f0750b363ec2c5fb60ac4890e60fb8135" translate="yes" xml:space="preserve">
          <source>Declaration is a class name definition,</source>
          <target state="translated">声明是一个类名定义。</target>
        </trans-unit>
        <trans-unit id="a13f43d23e1b270873c35d97287b655986837fbf" translate="yes" xml:space="preserve">
          <source>Declaration is different from definition because it gives information used only by the compiler. For example uint8_t tell the compiler to use asm function movb.</source>
          <target state="translated">声明与定义不同,因为它给出的信息只有编译器才会使用。例如uint8_t告诉编译器使用asm函数movb。</target>
        </trans-unit>
        <trans-unit id="99cb2adb5f339b07331de38eaeae26c608e1af8b" translate="yes" xml:space="preserve">
          <source>Declaration is the declaration of a static class data member without a class definition,</source>
          <target state="translated">声明是在没有类定义的情况下声明一个静态类的数据成员。</target>
        </trans-unit>
        <trans-unit id="53dd435f8752e0d733ddcf10ed277ac478183cf2" translate="yes" xml:space="preserve">
          <source>Declaration means give name and type to a variable (in case of variable declaration), eg:</source>
          <target state="translated">声明是指给变量取名和类型(在变量声明的情况下),例如:。</target>
        </trans-unit>
        <trans-unit id="6d2cf8fa2e69cb9ba9a84e0edc2fb454c4652520" translate="yes" xml:space="preserve">
          <source>Declaration: &quot;Somewhere, there exists a foo.&quot;</source>
          <target state="translated">宣言:&quot;某个地方,有一个foo。&quot;</target>
        </trans-unit>
        <trans-unit id="c90e4aecb889fb198c460fccf62e70dffa35ef54" translate="yes" xml:space="preserve">
          <source>Declaration: Picture Thomas Jefferson giving a speech... &quot;I HEREBY DECLARE THAT THIS FOO EXISTS IN THIS SOURCE CODE!!!&quot;</source>
          <target state="translated">宣言。Picture Thomas Jefferson giving a speech.....&quot;我在此声明,这个foo存在于这个源代码中!&quot;</target>
        </trans-unit>
        <trans-unit id="c6b186f57e22c9a22dfd36b4d9e692ed1ec8ec31" translate="yes" xml:space="preserve">
          <source>Declarations specify the interpretation given to each identifier; they do not necessarily reserve storage associated with the identifier.  Declarations that reserve storage are called &lt;em&gt;definitions&lt;/em&gt;.   [p. 210]</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明指定对每个标识符的解释；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它们不一定保留与标识符关联的存储。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;保留存储的声明称为&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[p。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;210]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c8a732d26406a26477ad0fee03ef2b22c4093a2d" translate="yes" xml:space="preserve">
          <source>Declarations tell the compiler that a
  program element or name exists. A
  declaration introduces one or more
  names into a program. Declarations can
  occur more than once in a program.
  Therefore, classes, structures,
  enumerated types, and other
  user-defined types can be declared for
  each compilation unit.</source>
          <target state="translated">声明告诉编译器一个程序元素或名称的存在。一个声明在程序中引入一个或多个名称。声明可以在一个程序中出现不止一次。因此,类、结构、枚举类型和其他用户定义的类型都可以为每个编译单元声明。</target>
        </trans-unit>
        <trans-unit id="ba36a6ab526bffb9d1d470e6a96ed2a752e80384" translate="yes" xml:space="preserve">
          <source>Declare the name of an object, so anything with a name has been declared which includes Variables, Funtions, etc.</source>
          <target state="translated">声明一个对象的名字,所以任何有名字的东西都被声明了,其中包括变量、函数等。</target>
        </trans-unit>
        <trans-unit id="b9b20e36df5655b5a114d70b64646f09d952f134" translate="yes" xml:space="preserve">
          <source>Define the type of an object, which may be built-in or a class or struct.</source>
          <target state="translated">定义对象的类型,它可以是内置的,也可以是类或结构。</target>
        </trans-unit>
        <trans-unit id="95fb2f14307637368f9d8333c599b9e69d6c2ed2" translate="yes" xml:space="preserve">
          <source>Definition associates the variable with a type and allocates memory, whereas declaration just specifies the type but doesn't allocate memory. Declaration is more useful when you want to refer the variable before definition.</source>
          <target state="translated">定义将变量与类型相关联,并分配内存,而声明只是指定类型,但不分配内存。当你想在定义前引用变量时,声明更有用。</target>
        </trans-unit>
        <trans-unit id="3b3eae2d0f96b7d6bf450e5abf72274e674a9521" translate="yes" xml:space="preserve">
          <source>Definition defines a non-inline member function.</source>
          <target state="translated">定义定义了一个非线性成员函数。</target>
        </trans-unit>
        <trans-unit id="0c6388167156e5669ce0bcff876711ec9aa79c2d" translate="yes" xml:space="preserve">
          <source>Definition defines a static class data member,</source>
          <target state="translated">定义定义了一个静态类数据成员。</target>
        </trans-unit>
        <trans-unit id="297d465599f62e2fac01fca545d124c9a928f36d" translate="yes" xml:space="preserve">
          <source>Definition on the other hand means that in additions to all the things that declaration does, space is also reserved in memory. You can say &quot;DEFINITION = DECLARATION + SPACE RESERVATION&quot; following are examples of definition:</source>
          <target state="translated">另一方面,定义的意思是,除了声明所做的所有事情之外,空间也被保留在内存中。你可以说 &quot;DEFINITION=DECLARATION+SPACE RESERVATION&quot;,以下是定义的例子。</target>
        </trans-unit>
        <trans-unit id="4b3b76b1d37ea5129186057193aae58ff47de0c6" translate="yes" xml:space="preserve">
          <source>Definition: &quot;...and here it is!&quot;</source>
          <target state="translated">定义:&quot;.....:&quot;.....就在这里!&quot;</target>
        </trans-unit>
        <trans-unit id="996826fadb23a620a4c5f4e1baa250a26bded82c" translate="yes" xml:space="preserve">
          <source>Definition: picture a dictionary, you are looking up Foo and what it actually means.</source>
          <target state="translated">定义:图为词典,你在查Foo和它的实际含义。</target>
        </trans-unit>
        <trans-unit id="51cd1b171491c58ca6aa228d684e22a07bc6f896" translate="yes" xml:space="preserve">
          <source>Definitions specify what code or data
  the name describes. A name must be
  declared before it can be used.</source>
          <target state="translated">定义指定了名称所描述的代码或数据。在使用前,必须先声明一个名称。</target>
        </trans-unit>
        <trans-unit id="d8cbbe3b8808457bf922c69ec458a3b178b4744e" translate="yes" xml:space="preserve">
          <source>Examples from the standard which differentiates between declaration and definition that I found helpful in understanding the nuances between them:</source>
          <target state="translated">我发现标准中的例子区分了声明和定义,这对理解它们之间的细微差别很有帮助。</target>
        </trans-unit>
        <trans-unit id="8ce06d2fc12899379e460f732c60dee874049ea5" translate="yes" xml:space="preserve">
          <source>Find similar answers here: &lt;a href=&quot;http://sickprogrammersarea.blogspot.in/2014/03/technical-interview-questions-on-c_6.html&quot;&gt;Technical Interview Questions in C&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在此处找到类似的答案：&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://sickprogrammersarea.blogspot.in/2014/03/technical-interview-questions-on-c_6.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C中的技术面试问题&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="26c4ba5cf6b1780a5debd4d155f4cd98dbbbd585" translate="yes" xml:space="preserve">
          <source>Following are some examples of definition.</source>
          <target state="translated">以下是一些定义的例子。</target>
        </trans-unit>
        <trans-unit id="a380b113afeab06c3a0583f812b0354dbfd76353" translate="yes" xml:space="preserve">
          <source>From the C++ standard section 3.1:</source>
          <target state="translated">摘自C++标准第3.1节。</target>
        </trans-unit>
        <trans-unit id="888b40e8c67f58cdab3cec509ebde51eb265b8e3" translate="yes" xml:space="preserve">
          <source>From the C++ standard, 3.1(2):</source>
          <target state="translated">来自C++标准,3.1(2)。</target>
        </trans-unit>
        <trans-unit id="3a32000d5615784dc80afffafcb23edb1405073c" translate="yes" xml:space="preserve">
          <source>From the C99 standard, 6.7(5):</source>
          <target state="translated">来自C99标准,6.7(5)。</target>
        </trans-unit>
        <trans-unit id="4c5d4c96ace6917b1c664e3f0422608a5639871a" translate="yes" xml:space="preserve">
          <source>From wiki.answers.com:</source>
          <target state="translated">来自wiki.Answer.com。</target>
        </trans-unit>
        <trans-unit id="a6fbe8bc71e01304063cbd4af8e69efbcee11d9a" translate="yes" xml:space="preserve">
          <source>Furthermore declaration tells the compiler the scope of the variable.</source>
          <target state="translated">此外,声明告诉编译器变量的范围。</target>
        </trans-unit>
        <trans-unit id="04d48f1c46157cd7178e2579fb08d138d1acc71b" translate="yes" xml:space="preserve">
          <source>However, it must be &lt;em&gt;defined&lt;/em&gt; exactly once. If you forget to define something that's been declared and referenced somewhere, then the linker doesn't know what to link references to and complains about a missing symbols. If you define something more than once, then the linker doesn't know &lt;em&gt;which&lt;/em&gt; of the definitions to link references to and complains about duplicated symbols.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，必须&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一次。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果忘记定义已在某处声明和引用的内容，则链接器将不知道将引用链接到什么内容，并且会抱怨缺少符号。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果定义不止一次，则链接器将不知道&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;将引用链接到&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;哪个&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义，并抱怨重复的符号。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7c9c6e987322b67abb5b4ac4b8f34afef80493e6" translate="yes" xml:space="preserve">
          <source>In C++, when using templates, there is another edge case.</source>
          <target state="translated">在C++中,使用模板时,还有一种边缘情况。</target>
        </trans-unit>
        <trans-unit id="14c40ce931ba7fef932decc07f6c06ded1020e3b" translate="yes" xml:space="preserve">
          <source>In C, a declaration merely provides information that a function or variable  exists and gives its type. For a function declaration, information about the  types of its arguments might be provided as well. The purpose of declarations is to allow the compiler to correctly process references to the declared variables and functions. A definition, on the other hand, actually allocates storage for a variable or says what a function does.</source>
          <target state="translated">在C语言中,声明只是提供了一个函数或变量存在的信息,并给出了它的类型。对于一个函数声明,也可以提供关于它的参数类型的信息。声明的目的是让编译器正确处理对声明中的变量和函数的引用。另一方面,一个定义实际上是为一个变量分配存储空间,或者说一个函数做什么。</target>
        </trans-unit>
        <trans-unit id="19608fba0408ae644fd5229e9e65379b70521f4e" translate="yes" xml:space="preserve">
          <source>In above cases we define and declare variable &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;function max()&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在上述情况下，我们定义并声明变量&lt;/font&gt;&lt;/font&gt; &lt;code&gt;i&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;function max()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a9ce3d1b0ddb83c92767c94a137a0da420caeb4b" translate="yes" xml:space="preserve">
          <source>In stage 2 (translator/compiler), declaration statements in our code tell to the compiler that these things we are going to use in future and you can find definition later, meaning is :</source>
          <target state="translated">在第二阶段(translatorcompiler)中,我们代码中的声明语句告诉编译器,这些东西我们以后要用到的,你可以在后面找到定义,意思是.NET是.NET的意思。</target>
        </trans-unit>
        <trans-unit id="be3f4390f49f2648bc532da8783c26029fccc45d" translate="yes" xml:space="preserve">
          <source>In this, print function is declared and defined as well. Since function call is coming after the definition. Now see the next program.</source>
          <target state="translated">这里面,print函数也是声明和定义的。由于函数调用是在定义之后才来的。现在看下一个程序。</target>
        </trans-unit>
        <trans-unit id="99fc10d02552574296091f7a8004a1f4c5848d32" translate="yes" xml:space="preserve">
          <source>It is essential because function call precedes definition so compiler must know whether there is any such function. So we declare the function which will inform the compiler.</source>
          <target state="translated">这是必不可少的,因为函数调用在定义之前,所以编译器必须知道是否有这样的函数。所以我们声明一个函数来通知编译器。</target>
        </trans-unit>
        <trans-unit id="6dd0d66ef5c757d19db64303b42463172032dea5" translate="yes" xml:space="preserve">
          <source>It is important to distinguish between the &lt;em&gt;declaration&lt;/em&gt; of an external variable and its &lt;em&gt;definition&lt;/em&gt;.  A declaration announces the properties of a variable (primarily its type); a definition also causes storage to be set aside.
   If the lines</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;区分&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外部变量&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;及其&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;很重要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明声明变量的属性（主要是其类型）；&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义也会导致存储被搁置。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;如果线路&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d7bb839ca9f9087c80d38524e2fd162649df66f6" translate="yes" xml:space="preserve">
          <source>Linker make sure that : &lt;strong&gt;where is what ?&lt;/strong&gt; means definition</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;链接器确保：&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;哪里是什么？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;手段定义&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="3f77b57fc3af0ccdd4970f61d7053e039e7adb67" translate="yes" xml:space="preserve">
          <source>My favorite example is &quot;int Num = 5&quot; here your variable is 1. defined as int 2. declared as Num and 3. instantiated with a value of five. We</source>
          <target state="translated">我最喜欢的例子是 &quot;int Num=5&quot;,这里你的变量是1.定义为int 2.声明为Num 3.实例化为5。我们</target>
        </trans-unit>
        <trans-unit id="acf0e3f288d4a82202dc2610b07ab4c60f8363e2" translate="yes" xml:space="preserve">
          <source>No translation unit shall contain more than one definition of any variable, function, class type, enumeration type, or template.</source>
          <target state="translated">任何翻译单元不得包含任何变量、函数、类类型、枚举类型或模板的一个以上定义。</target>
        </trans-unit>
        <trans-unit id="0b58d48582a8638f273f55a63fd1748b65471a6b" translate="yes" xml:space="preserve">
          <source>Note the difference between two programs.</source>
          <target state="translated">注意两个程序的区别。</target>
        </trans-unit>
        <trans-unit id="3c7ef5eaf474b8a428928edf7cb8c9ea583962f4" translate="yes" xml:space="preserve">
          <source>Note the semicolon at the end of function so it says it is only a declaration. Compiler knows that somewhere in the program that function will be &lt;strong&gt;defined&lt;/strong&gt; with that prototype. Now if the compiler gets a function call something like this</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意函数末尾的分号，因此它说这只是一个声明。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;编译器知道在程序中某个位置将&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用该原型&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;功能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，如果编译器获得函数调用，则如下所示&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a91d8af7d382aa440a5b3d5a12bca8db0fa76932" translate="yes" xml:space="preserve">
          <source>Now &lt;strong&gt;function declaration :&lt;/strong&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数声明：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9fc5bbbd255416bc196c5482f93f9ec0f8ea4208" translate="yes" xml:space="preserve">
          <source>Now for the big reason why it's important to understand the difference between a declaration and definition: the &lt;strong&gt;One Definition Rule&lt;/strong&gt;.  From section 3.2.1 of the C++ standard:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;现在，出于重要原因，理解声明和定义之间的区别非常重要：&amp;ldquo; &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个定义规则&amp;rdquo;&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;从C ++标准的3.2.1节开始：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="bd5e49283464beb5bc918031d9d2ed7bb8a96d26" translate="yes" xml:space="preserve">
          <source>On the other hand, the lines</source>
          <target state="translated">而另一方面,这几条线</target>
        </trans-unit>
        <trans-unit id="91e9020bdf8b029977b84f3954c542670e501e1b" translate="yes" xml:space="preserve">
          <source>One interesting thought - a template cannot allocate storage until the class or function is linked with the type information.  So is the template identifier a declaration or definition?  It should be a declaration since no storage is allocated, and you are simply 'prototyping' the template class or function.</source>
          <target state="translated">有一个有趣的想法--在类或函数与类型信息挂钩之前,模板不能分配存储。那么,模板标识符是声明还是定义?它应该是一个声明,因为没有分配存储,你只是在 &quot;原型化 &quot;模板类或函数。</target>
        </trans-unit>
        <trans-unit id="3d8df65b14d6dcd0611847ba71a3599a0f60a1fa" translate="yes" xml:space="preserve">
          <source>One may declare a heterogeneous variable or array which are not specifically defined.</source>
          <target state="translated">人们可以声明一个没有具体定义的异构变量或数组。</target>
        </trans-unit>
        <trans-unit id="8644dd3acfdaeead0c8466b3d16008f15f606cb1" translate="yes" xml:space="preserve">
          <source>Rule of thumb:</source>
          <target state="translated">经验法则。</target>
        </trans-unit>
        <trans-unit id="a29490cc9cbffa425558e5cdaa37a7a83d0d0a49" translate="yes" xml:space="preserve">
          <source>See that:</source>
          <target state="translated">看到了吗?</target>
        </trans-unit>
        <trans-unit id="bfb35843bce9cc58be12602fc81107bd5f8c7a28" translate="yes" xml:space="preserve">
          <source>Since I don't see an answer pertinent to C++11 here's one.</source>
          <target state="translated">由于我没有看到一个与C++11相关的答案,这里有一个。</target>
        </trans-unit>
        <trans-unit id="d9a31aa9b4df4362ba827fa4cdcf237e84babdec" translate="yes" xml:space="preserve">
          <source>Since the debate what is a class &lt;em&gt;declaration&lt;/em&gt; vs. a class &lt;em&gt;definition&lt;/em&gt; in C++ keeps coming up (in answers and comments to other questions) , I'll paste a quote from the C++ standard here.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;由于关于&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;C ++中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的类&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和类&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的争论&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一直在不断出现（在其他问题的答案和注释中），因此我将在此处粘贴C ++标准的引号。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="781d38de82d584eee83631b34cc783e358ba2650" translate="yes" xml:space="preserve">
          <source>So interestingly (or not, but I'm slightly surprised by it), &lt;code&gt;typedef int myint;&lt;/code&gt; is a definition in C99, but only a declaration in C++.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;有趣的是（或者不是，但是我对此有些惊讶），&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typedef int myint;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是C99中的定义，但仅是C ++中的声明。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e592f2bbd96ed4adf6bbb96facab79f223d605ac" translate="yes" xml:space="preserve">
          <source>So, when you declare something, you just tell &lt;em&gt;what it is&lt;/em&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;因此，当您声明某物时，您只需告诉&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它是什么&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b7715a6bcbe63b7b78d6f89bcfbe08ee9d36069c" translate="yes" xml:space="preserve">
          <source>Stages of an executable generation:</source>
          <target state="translated">可执行生成的阶段。</target>
        </trans-unit>
        <trans-unit id="4b08b438925af8ddb24d79e95bc2126889df8222" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;https://stackoverflow.com/users/34509/johannes-schaub-litb&quot;&gt;litb (Johannes Schaub)&lt;/a&gt; who dug out the actual chapter and verse in one of his answers.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;感谢&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/users/34509/johannes-schaub-litb&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;litb（Johannes Schaub）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在他的答案之一中挖掘了实际的章节。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6562c77a290f07ac969ab9e0dd9b04ed319645b1" translate="yes" xml:space="preserve">
          <source>That can be a definition or a declaration, depending on what type &lt;code&gt;T&lt;/code&gt; is:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这可以是定义或声明，具体取决于&lt;/font&gt;&lt;/font&gt; &lt;code&gt;T&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么类型&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a41b05f666a35676f7725019753347ca8192a8f9" translate="yes" xml:space="preserve">
          <source>The concept of Declaration and Definition will form a pitfall when you are using the extern storage class because your definition will be in some other location and you are declaring the variable in your local code file (page). One difference between C and C++ is that in C you the declarations are done normally at the beginning of a function or code page. In C++ it's not like that. You can declare at a place of your choice.</source>
          <target state="translated">当你在使用extern存储类时,声明和定义的概念会形成一个隐患,因为你的定义会在其他地方,而你在本地代码文件(页面)中声明变量。C和C++之间的一个区别是,在C中,你的声明通常是在函数或代码页的开始处完成。而在C++中则不然。你可以在你选择的地方进行声明。</target>
        </trans-unit>
        <trans-unit id="bb60f7e8a8da1fe204496ca96400679cd8ac5c7f" translate="yes" xml:space="preserve">
          <source>The last declaration was &lt;em&gt;not&lt;/em&gt; a definition. It's the declaration of an explicit specialization of the static member of &lt;code&gt;X&amp;lt;bool&amp;gt;&lt;/code&gt;. It tells the compiler: &quot;If it comes to instantiating &lt;code&gt;X&amp;lt;bool&amp;gt;::member&lt;/code&gt;, then don't instantiate the definition of the member from the primary template, but use the definition found elsewhere&quot;. To make it a definition, you have to supply an initializer</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;最后的声明&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不是&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这是&lt;/font&gt;&lt;/font&gt; &lt;code&gt;X&amp;lt;bool&amp;gt;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的静态成员的显式专业化的声明&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它告诉编译器：&amp;ldquo;如果要实例化&lt;/font&gt;&lt;/font&gt; &lt;code&gt;X&amp;lt;bool&amp;gt;::member&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，则不要从主模板实例化该成员的定义，而要使用在其他地方找到的定义&amp;rdquo;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;要定义它，您必须提供一个初始化程序&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="06db3adda590eafc110f28501b2576aa4eda04fd" translate="yes" xml:space="preserve">
          <source>The meaning of both eludes me.</source>
          <target state="translated">两者的意义都在我的意料之中。</target>
        </trans-unit>
        <trans-unit id="15ac8d38640240d3139154879e3cff6d38840509" translate="yes" xml:space="preserve">
          <source>The next paragraph states (emphasis mine) that a declaration &lt;strong&gt;is a definition&lt;/strong&gt; unless...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;下一段指出（强调我的意思）声明&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是一个定义，&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;除非...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24b828ce031d9b5064561b6997da9367af86e546" translate="yes" xml:space="preserve">
          <source>The term declaration means (in C) that you are telling the compiler about type, size and in case of function declaration, type and size of its parameters of any variable, or user defined type or function in your program. &lt;em&gt;No&lt;/em&gt; space is reserved in memory for any variable in case of declaration. However compiler knows how much space to reserve in case a variable of this type is created.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;术语声明（在C语言中）表示您正在告诉编译器有关类型，大小的信息，如果是函数声明，则是告诉程序的任何变量的参数的类型和大小，或者是程序中用户定义的类型或函数。&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;没有&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空间保留在内存中声明的情况下，任何变量。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，编译器知道在创建此类型的变量的情况下要保留多少空间。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c0f54540d333cbe024948a85c98a4b9e24f58eca" translate="yes" xml:space="preserve">
          <source>Then there are some examples.</source>
          <target state="translated">然后是一些例子。</target>
        </trans-unit>
        <trans-unit id="863ca81372dc9255f7dce4afe2402beb7212e451" translate="yes" xml:space="preserve">
          <source>There are interesting edge cases in C++ (some of them in C too). Consider</source>
          <target state="translated">在C++中也有一些有趣的边缘案例(在C语言中也有一些)。考虑一下</target>
        </trans-unit>
        <trans-unit id="4c8653159a54feee8399a6f6f3fdeac5a854ae68" translate="yes" xml:space="preserve">
          <source>There are some very clear definitions sprinkled throughout K&amp;amp;R (2nd edition); it helps to put them in one place and read them as one:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;K＆R（第二版）中散布着一些非常清晰的定义。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它有助于将它们放在一个地方并作为一个地方阅读：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2959f78f83643c67add724e5a49ace7154964d1f" translate="yes" xml:space="preserve">
          <source>There must be only one &lt;em&gt;definition&lt;/em&gt; of an external variable among all the files that make up the source program. ... Array sizes must be specified with the definition, but are optional with an &lt;code&gt;extern&lt;/code&gt; declaration. [pp. 80-81]</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;组成源程序的所有文件中，&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;只有一个&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;外部变量的&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;...数组大小必须使用定义指定，但在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明中&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;是可选的&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;[pp。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;80-81]&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1860995fb136537869d1de5f212a9eeb11439630" translate="yes" xml:space="preserve">
          <source>This is going to sound really cheesy, but it's the best way I've been able to keep the terms straight in my head:</source>
          <target state="translated">这听起来会很俗气,但这是我脑海中对这些术语最好的表述方式。</target>
        </trans-unit>
        <trans-unit id="2683e3017ef9f96a94e8c501cc8cab020abfc446" translate="yes" xml:space="preserve">
          <source>This line &lt;em&gt;declares&lt;/em&gt; a C function called &lt;code&gt;sum&lt;/code&gt; that takes two arguments of type &lt;code&gt;int&lt;/code&gt; and returns an &lt;code&gt;int&lt;/code&gt;. However, you can't use it yet.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;这行代码&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个名为&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sum&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;的C函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，该&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;接受两个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类型的参数&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;并返回一个&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;但是，您还不能使用它。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="35f8fefdcd38bf21987d182f01622569d4f6e75a" translate="yes" xml:space="preserve">
          <source>This part of defining a function is called Definition. It says what to do inside the function.</source>
          <target state="translated">定义一个函数的这一部分叫做定义。它说的是在函数内部要做什么。</target>
        </trans-unit>
        <trans-unit id="3a87dc8a8b5737d9a76a03ce8f61e4adbc7bbfe6" translate="yes" xml:space="preserve">
          <source>To sum it up: The C++ standard considers &lt;code&gt;struct x;&lt;/code&gt; to be a &lt;em&gt;declaration&lt;/em&gt; and &lt;code&gt;struct x {};&lt;/code&gt; a &lt;em&gt;definition&lt;/em&gt;. (In other words, &lt;strong&gt;&lt;em&gt;&quot;forward declaration&quot; a misnomer&lt;/em&gt;&lt;/strong&gt;, since there are no other forms of class declarations in C++.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;概括起来：C ++标准考虑&lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct x;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;作为&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;声明&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct x {};&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一个&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（换句话说，&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;ldquo;前向声明&amp;rdquo;是不正确的用词&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，因为C ++中没有其他形式的类声明。）&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="806f30e98fdfc516d8fb79b6aec0810306b2325b" translate="yes" xml:space="preserve">
          <source>To understand the difference between declaration and definition we need to see the assembly code:</source>
          <target state="translated">要理解声明和定义的区别,我们需要看汇编代码。</target>
        </trans-unit>
        <trans-unit id="49ed4f10828ba71628d641f90a19264281889310" translate="yes" xml:space="preserve">
          <source>To understand the nouns, let's focus on the verbs first.</source>
          <target state="translated">要理解名词,我们先把重点放在动词上。</target>
        </trans-unit>
        <trans-unit id="a7ce1cc67124e355089efdeddab83e9b66e59354" translate="yes" xml:space="preserve">
          <source>Using an offset in C++ you may define an object which does not have a declared name.</source>
          <target state="translated">在C++中使用偏移,你可以定义一个没有声明名称的对象。</target>
        </trans-unit>
        <trans-unit id="385fe7554df432859cab0425cfc9a11b34d52373" translate="yes" xml:space="preserve">
          <source>We can say that declaration is an information used by the compiler to establish the correct use of the variable and for how long some memory belongs to certain variable.</source>
          <target state="translated">我们可以说,声明是编译器用来确定变量的正确用途以及某些内存属于某个变量多久的信息。</target>
        </trans-unit>
        <trans-unit id="322128de805b4936b6358f1a19d5ae95fefbb059" translate="yes" xml:space="preserve">
          <source>What is the difference between a definition and a declaration</source>
          <target state="translated">定义和声明的区别是什么?</target>
        </trans-unit>
        <trans-unit id="7138d48fb6d27513a18caa3593c63e61b7358510" translate="yes" xml:space="preserve">
          <source>When we learn programming these two terms are often confused because we often do both at the same time.</source>
          <target state="translated">当我们在学习编程时,这两个名词经常会被混淆,因为我们经常会同时做这两个词。</target>
        </trans-unit>
        <trans-unit id="6def3a73e4f63df697aabe109fe06a6c93f12369" translate="yes" xml:space="preserve">
          <source>When you provide &lt;em&gt;how it actually works&lt;/em&gt;, that's the definition of it.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;当您提供&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;它的实际工作原理时&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，这就是它的定义。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e400c5efc1ddb736736df8934434d8973e6d47c4" translate="yes" xml:space="preserve">
          <source>alias declaration - &lt;code&gt;using IntVector = std::vector&amp;lt;int&amp;gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;别名声明- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;using IntVector = std::vector&amp;lt;int&amp;gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="83bc3ad6dab8c5448869de8742678e024393c2d4" translate="yes" xml:space="preserve">
          <source>and (3) stage (linker) needs definition to bind the things</source>
          <target state="translated">和(3)阶段(链接器)需要定义绑定的东西</target>
        </trans-unit>
        <trans-unit id="c250bb37f81b649b5e0b958874a4ce6886aeb6bb" translate="yes" xml:space="preserve">
          <source>and this is only definition:</source>
          <target state="translated">而这只是定义。</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="394377a2bab468b85e4230333e5515f6e664d1f5" translate="yes" xml:space="preserve">
          <source>appear outside of any function, they &lt;em&gt;define&lt;/em&gt; the external variables &lt;code&gt;sp&lt;/code&gt; and &lt;code&gt;val&lt;/code&gt;, cause storage to be set aside, and also serve as the declaration for the rest of that source file.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;出现在任何函数之外，它们&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;了外部变量&lt;/font&gt;&lt;/font&gt; &lt;code&gt;sp&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt; &lt;code&gt;val&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;，导致存储被搁置，并且还充当该源文件其余部分的声明。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5713a8fd4873c4ee0772c540f77bc9b4690414d8" translate="yes" xml:space="preserve">
          <source>attribute declaration (implementation-defined)</source>
          <target state="translated">属性声明(实现定义)</target>
        </trans-unit>
        <trans-unit id="99a95e0a0124f49ccf6c1b25ed31f02c58c40ce1" translate="yes" xml:space="preserve">
          <source>class/struct declaration - &lt;code&gt;struct Point;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;类/结构声明- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;struct Point;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="836861684fb6b1bdbace72353ece9b5d39a54b29" translate="yes" xml:space="preserve">
          <source>definition means actual function written &amp;amp; declaration means simple declare function 
for e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;定义表示实际编写的函数，声明表示简单的声明函数，例如&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d1f346b5e9397445565c039f6a08c4b7fcd9cd06" translate="yes" xml:space="preserve">
          <source>empty declaration &lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;空声明&lt;/font&gt;&lt;/font&gt; &lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c68f6a2687e1d372139fda035e9188841ff3701" translate="yes" xml:space="preserve">
          <source>extern specifier containing declaration or a linkage specifier - &lt;code&gt;extern int a;&lt;/code&gt; or &lt;code&gt;extern &quot;C&quot; { ... };&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;包含声明或链接说明符的&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern int a;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;说明符&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-extern int a; &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;或&lt;/font&gt;&lt;/font&gt; &lt;code&gt;extern &quot;C&quot; { ... };&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa85a4ce143a97fda495856e858971d8311bb86f" translate="yes" xml:space="preserve">
          <source>for a function, includes the function body;</source>
          <target state="translated">对于一个函数,包括函数体。</target>
        </trans-unit>
        <trans-unit id="710ec7e684fce80d8a15c82d8ed63d64ffc625ad" translate="yes" xml:space="preserve">
          <source>for an enumeration constant or typedef name, is the (only) declaration of the
identifier.</source>
          <target state="translated">对于一个枚举常数或类型化的常数名,是标识符的(唯一)声明。</target>
        </trans-unit>
        <trans-unit id="a2e539e7adc3beb97fbc61118adb5d92e8a0cb5e" translate="yes" xml:space="preserve">
          <source>for an object, causes storage to be reserved for that object;</source>
          <target state="translated">对于一个对象,会导致存储被保留给该对象。</target>
        </trans-unit>
        <trans-unit id="55eb3df2f5c99b85558c3316ed6a57e068d35c3a" translate="yes" xml:space="preserve">
          <source>for example, following are all declarations:</source>
          <target state="translated">例如,以下是所有的声明。</target>
        </trans-unit>
        <trans-unit id="0e1074fc9cecb49ab03f40515903540340dadb29" translate="yes" xml:space="preserve">
          <source>function declaration - &lt;em&gt;add&lt;/em&gt; in &lt;code&gt;int add(int x, int y);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;函数声明- &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;加载&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int add(int x, int y);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="691250a0d8501fd28d1f7f69040ce631710bd674" translate="yes" xml:space="preserve">
          <source>many time declaration and definition can be done together as:</source>
          <target state="translated">许多时间声明和定义可以一起做为。</target>
        </trans-unit>
        <trans-unit id="46289ff66baf68d30e36660208dca74ff244d0f4" translate="yes" xml:space="preserve">
          <source>opaque enum - &lt;code&gt;enum X : int;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;不透明枚举- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;enum X : int;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33e7d0b67586ad99c601eae8c2f5ef5159324ab1" translate="yes" xml:space="preserve">
          <source>or give name,return type and parameter(s) type to a function without body(in case of function declaration), eg:</source>
          <target state="translated">或者给一个没有主体的函数赋予名称、返回类型和参数类型(在函数声明时),例如</target>
        </trans-unit>
        <trans-unit id="534668f985ce9590dec22cf0c2bd8c2be62d40d8" translate="yes" xml:space="preserve">
          <source>or provide/add body(functionality) to a function is called function definition, eg:</source>
          <target state="translated">或为函数提供add body(functional)的函数称为函数定义,例如,在函数中提供add body(functional)。</target>
        </trans-unit>
        <trans-unit id="2c7fd8664d6f3d365fa123f8289dd4f0e1c051c4" translate="yes" xml:space="preserve">
          <source>parameter declaration - &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; in &lt;code&gt;int add(int x, int y);&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参数声明- &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;X&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;和&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&amp;yuml;&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;int add(int x, int y);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b776095b0ef5fd687903b21dfaef1a4ead6423ae" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;http://wiki.answers.com/Q/What_is_the_difference_between_declaration_and_a_definition_in_C&quot;&gt;Answers&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参见&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://wiki.answers.com/Q/What_is_the_difference_between_declaration_and_a_definition_in_C&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;答案&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="83df361f2472f023dc3367fe2ef95a3a1c0bced9" translate="yes" xml:space="preserve">
          <source>static assert declaration - &lt;code&gt;static_assert(sizeof(int) == 4, &quot;Yikes!&quot;)&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;静态断言声明&lt;/font&gt;&lt;/font&gt; &lt;code&gt;static_assert(sizeof(int) == 4, &quot;Yikes!&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9713df110e0f8b7f4e4747624e2a1befe6cbbbcd" translate="yes" xml:space="preserve">
          <source>static data member in a class - &lt;em&gt;x&lt;/em&gt; in &lt;code&gt;class C { static int x; };&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在一个类的静态数据成员- &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;X&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;class C { static int x; };&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d90a87b9adf8dcdb10ebc761506dfcc4cedda232" translate="yes" xml:space="preserve">
          <source>template parameter - &lt;em&gt;T&lt;/em&gt; in &lt;code&gt;template&amp;lt;typename T&amp;gt; class MyArray;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;模板参数- &lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Ť&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;在&lt;/font&gt;&lt;/font&gt; &lt;code&gt;template&amp;lt;typename T&amp;gt; class MyArray;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98f4f39a898342cf7c09afed33b830eab5c366a8" translate="yes" xml:space="preserve">
          <source>this is definition of function myfunction</source>
          <target state="translated">这就是函数myfunction的定义</target>
        </trans-unit>
        <trans-unit id="ae9d0444b7ed2454d452f0141c2c74465f75c1fd" translate="yes" xml:space="preserve">
          <source>translator make sure that : &lt;strong&gt;what is what ?&lt;/strong&gt; means declaration</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;翻译人员要确保：&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;什么是？&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;手段申报&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8b7c1665de57045ccb18cccc9689fcdeb3c3fa8" translate="yes" xml:space="preserve">
          <source>typedef declaration - &lt;code&gt;typedef int Int;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;typedef声明&lt;/font&gt;&lt;/font&gt; &lt;code&gt;typedef int Int;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4447a1d7cc25553fd4a9ea9d25f578b496c6e29e" translate="yes" xml:space="preserve">
          <source>using declaration - &lt;code&gt;using std::cout;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用声明- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;using std::cout;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0e779f0bf97b342b7dc8a1046ffeda633faa9c8" translate="yes" xml:space="preserve">
          <source>using directive - &lt;code&gt;using namespace NS;&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;using指令- &lt;/font&gt;&lt;/font&gt; &lt;code&gt;using namespace NS;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb3af7b8074902e644805a3d701f8ac7a9f0be14" translate="yes" xml:space="preserve">
          <source>whereas definition means assign value to a variable (in case of variable definition), eg:</source>
          <target state="translated">而定义意味着给变量赋值(在变量定义的情况下),如</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
