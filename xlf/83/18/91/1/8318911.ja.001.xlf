<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/8318911">
    <body>
      <group id="8318911">
        <trans-unit id="b6d6d3bed5e4360c8f981fc61092af8db40788be" translate="yes" xml:space="preserve">
          <source>...produces a document with a &lt;strong&gt;red background&lt;/strong&gt; across all browsers and platforms.</source>
          <target state="translated">...すべてのブラウザとプラットフォームで&lt;strong&gt;背景&lt;/strong&gt;が&lt;strong&gt;赤の&lt;/strong&gt;ドキュメントを生成します。</target>
        </trans-unit>
        <trans-unit id="90c79427a637d3c801f8bcf85aee6ce09e84e94e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C00C00000000&lt;/code&gt; =&amp;gt; &lt;code&gt;R:C00C, G:0000, B:0000&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C00C00000000&lt;/code&gt; =&amp;gt; &lt;code&gt;R:C00C, G:0000, B:0000&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5908ea286f207046f7d7ff51a76583b34e4f1935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChuCknorris&lt;/code&gt; translates to &lt;code&gt;c00c0000000&lt;/code&gt;.  At this point, the browser will divide the string into three equal sections, indicating &lt;em&gt;Red&lt;/em&gt;, &lt;em&gt;Green&lt;/em&gt; and &lt;em&gt;Blue&lt;/em&gt; values: &lt;code&gt;c00c 0000 0000&lt;/code&gt;.  Extra bits in each section will be ignored, which makes the final result &lt;code&gt;#c00000&lt;/code&gt; which is a reddish color.</source>
          <target state="translated">&lt;code&gt;ChuCknorris&lt;/code&gt; はc00c0000000に変換され &lt;code&gt;c00c0000000&lt;/code&gt; 。 この時点で、ブラウザは文字列を3つの等しいセクションに分割し、 &lt;em&gt;赤&lt;/em&gt; 、 &lt;em&gt;緑&lt;/em&gt; 、 &lt;em&gt;青の&lt;/em&gt;値を示します： &lt;code&gt;c00c 0000 0000&lt;/code&gt; 。 各セクションの余分なビットは無視されるため、最終的な結果は &lt;code&gt;#c00000&lt;/code&gt; で、赤みがかった色になります。</target>
        </trans-unit>
        <trans-unit id="c34f0e7761f96717c2bb3d2582bd4f5e58d37cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R:C00C, G:0000, B:0000&lt;/code&gt; =&amp;gt; &lt;code&gt;R:C0, G:00, B:00&lt;/code&gt; =&amp;gt; &lt;code&gt;C00000&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;R:C00C, G:0000, B:0000&lt;/code&gt; =&amp;gt; &lt;code&gt;R:C0, G:00, B:00&lt;/code&gt; =&amp;gt; &lt;code&gt;C00000&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bdbd8e58905068323db13fcb9503c60d5874e2ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chucknorris&lt;/code&gt; starts with &lt;code&gt;c&lt;/code&gt; which is recognised character in hexadecimal, also it's converting all unrecognised characters into &lt;code&gt;0&lt;/code&gt;!</source>
          <target state="translated">&lt;code&gt;chucknorris&lt;/code&gt; は、16進数で認識される文字である &lt;code&gt;c&lt;/code&gt; で始まります。また、認識されないすべての文字を &lt;code&gt;0&lt;/code&gt; に変換します 。</target>
        </trans-unit>
        <trans-unit id="e20468aa188cf92984a3fe7c4e72c85ba9f5ee1e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;P.S. The numbers in brackets are the browser versions I tested on.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;PS括弧内の数字は、私がテストしたブラウザのバージョンです。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c332061cf4bd899460b0a4c0a7eaa14bdb27b163" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Answer:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Answer:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f11a76626f3923193066b36bddea5202082482d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;chucknorris&lt;/strong&gt; starts with &lt;strong&gt;c&lt;/strong&gt;, and the browser reads it into a hexadecimal value.</source>
          <target state="translated">&lt;strong&gt;chucknorris&lt;/strong&gt;は&lt;strong&gt;c&lt;/strong&gt;で始まり、ブラウザはそれを16進値に読み取ります。</target>
        </trans-unit>
        <trans-unit id="70dba0a8d26cfc893b536aca75d8cef34e574a8f" translate="yes" xml:space="preserve">
          <source>Because A, B, C, D, E, and F are &lt;a href=&quot;https://en.wikipedia.org/wiki/Hexadecimal&quot;&gt;characters in hexadecimal&lt;/a&gt;.</source>
          <target state="translated">A、B、C、D、E、およびFは&lt;a href=&quot;https://en.wikipedia.org/wiki/Hexadecimal&quot;&gt;16進数の文字だから&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="6383e2acd181bb3a5ec4afd24b43ced0521882a9" translate="yes" xml:space="preserve">
          <source>Below is a partial implementation of the algorithm. It does not handle errors or cases where the user enters a valid color.</source>
          <target state="translated">以下にアルゴリズムの部分的な実装を示します。エラーやユーザが有効な色を入力した場合の処理は行いません。</target>
        </trans-unit>
        <trans-unit id="cab63b218aa009ada235109baffd10be95227fbc" translate="yes" xml:space="preserve">
          <source>But we know valid hexadecimal for RGB is just 2 characters, means &lt;code&gt;R: c0, G: 00, B:00&lt;/code&gt;</source>
          <target state="translated">しかし、RGBの有効な16進数は2文字のみであることがわかっています。つまり、 &lt;code&gt;R: c0, G: 00, B:00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a504a3c367a66f1ea44d16c56de7ba4785e7f063" translate="yes" xml:space="preserve">
          <source>Chuck Norris doesn't conform to web standards. Web standards conform
  to him. #BADA55</source>
          <target state="translated">チャック・ノリスはウェブ標準に準拠していない。ウェブ標準は彼に従う #BADA55</target>
        </trans-unit>
        <trans-unit id="25f2a36123f930c6195de2f2a76a7893477fa1a1" translate="yes" xml:space="preserve">
          <source>Discard all characters except the first 2</source>
          <target state="translated">最初の2人以外のキャラを捨てる</target>
        </trans-unit>
        <trans-unit id="e8481aaeb9bf6d1a4ee42e981e8214c61919ad5b" translate="yes" xml:space="preserve">
          <source>Discard all characters except the last 8</source>
          <target state="translated">最後の8文字を除くすべての文字を破棄する</target>
        </trans-unit>
        <trans-unit id="6ef923436ac0445f743a32432826c89b75857e3f" translate="yes" xml:space="preserve">
          <source>Discard leading zeros one by one &lt;strong&gt;as long as all components have a leading zero&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;すべてのコンポーネントに先行ゼロがある限り、&lt;/strong&gt;先行ゼロを1つずつ破棄し&lt;strong&gt;ます&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="2ad6903c956477937e34db882a192413e0f2a6e8" translate="yes" xml:space="preserve">
          <source>Finally, show &lt;code&gt;bgcolor = C00000&lt;/code&gt; in the web browser.</source>
          <target state="translated">最後に、Webブラウザーで &lt;code&gt;bgcolor = C00000&lt;/code&gt; を表示します。</target>
        </trans-unit>
        <trans-unit id="bbf2c4484b34d3367380273de15a9c5ece0fe0fc" translate="yes" xml:space="preserve">
          <source>For example, notice that each character is parsed as a hex digit and then is shifted into a 32-bit integer &lt;strong&gt;without checking for overflow&lt;/strong&gt;. Only eight hex digits fit into a 32-bit integer, which is why only the last 8 characters are considered. After parsing the hex digits into 32-bit integers, they are then truncated into 8-bit integers by dividing them by 16 until they fit into 8-bit, which is why leading zeros are ignored.</source>
          <target state="translated">たとえば、各文字が16進数字として解析され、 &lt;strong&gt;オーバーフローをチェックせずに&lt;/strong&gt; 32ビット整数にシフトされることに注意してください。 16ビットの8桁だけが32ビット整数に適合します。そのため、最後の8文字のみが考慮されます。 16進数を32ビット整数に解析した後、8ビットに収まるまで16で除算して8ビット整数に切り捨てます。そのため、先行ゼロは無視されます。</target>
        </trans-unit>
        <trans-unit id="83c640cf08966d805f9e82d6eba98fb691fc3312" translate="yes" xml:space="preserve">
          <source>Here's an example demonstrating it:</source>
          <target state="translated">それを実演した例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="c4e4d6e50d0e6a2b0fb0bba88b73470d1bead009" translate="yes" xml:space="preserve">
          <source>Here's an example demonstrating the &lt;code&gt;bgcolor&lt;/code&gt; attribute in action, to produce this &quot;amazing&quot; colour swatch:</source>
          <target state="translated">この「すばらしい」色見本を作成するための &lt;code&gt;bgcolor&lt;/code&gt; 属性の動作を示す例を次に示します。</target>
        </trans-unit>
        <trans-unit id="5e148392e4d81aa2c0e735090f9dfd1c412a57f8" translate="yes" xml:space="preserve">
          <source>How come certain random strings produce colors when entered as background colors in HTML? For example:</source>
          <target state="translated">HTML で背景色として入力したときに、なぜ特定のランダムな文字列が色を生成するのでしょうか?例えば</target>
        </trans-unit>
        <trans-unit id="b3ee309bb5fe3a685dbf781e5fe4fb694d9e5227" translate="yes" xml:space="preserve">
          <source>I also added the steps in the image as a quick reference for you:</source>
          <target state="translated">参考までに画像のステップも追加しておきました。</target>
        </trans-unit>
        <trans-unit id="5e43306214b153b4803bd9a0de3b097cebda39ee" translate="yes" xml:space="preserve">
          <source>I originally encountered this when someone pointed out you could do &lt;code&gt;color=&quot;crap&quot;&lt;/code&gt; and, well, it comes out brown.</source>
          <target state="translated">最初に誰かが &lt;code&gt;color=&quot;crap&quot;&lt;/code&gt; を実行できると指摘したときにこれに遭遇しました。まあ、それは茶色になります。</target>
        </trans-unit>
        <trans-unit id="794fcecab5a94318c4d8b4733915683f1b282056" translate="yes" xml:space="preserve">
          <source>I was able to use these rules to correctly interpret the following strings:</source>
          <target state="translated">これらのルールを使って、以下の文字列を正しく解釈することができました。</target>
        </trans-unit>
        <trans-unit id="4fc6645bc14aeb18dea2272bce3f5a7ad18fdb45" translate="yes" xml:space="preserve">
          <source>I'm sorry to disagree, but according to the rules for parsing a legacy color value posted by &lt;a href=&quot;https://stackoverflow.com/a/12630675/282110&quot;&gt;@Yuhong Bao&lt;/a&gt;, &lt;code&gt;chucknorris&lt;/code&gt; DOES NOT equate to &lt;code&gt;#CC0000&lt;/code&gt;, but rather to &lt;code&gt;#C00000&lt;/code&gt;, a very similar but slightly different hue of red. I used the &lt;a href=&quot;https://addons.mozilla.org/en-us/firefox/addon/colorzilla/&quot;&gt;Firefox ColorZilla add-on&lt;/a&gt; to verify this.</source>
          <target state="translated">申し訳ありませんが、 &lt;code&gt;chucknorris&lt;/code&gt; &lt;a href=&quot;https://stackoverflow.com/a/12630675/282110&quot;&gt;Yuhong Bao&lt;/a&gt;によって投稿されたレガシーカラー値を解析するためのルールによると、 chucknorrisは &lt;code&gt;#CC0000&lt;/code&gt; ではなく、非常によく似ていますがわずかに異なる赤の色相である &lt;code&gt;#C00000&lt;/code&gt; と同等ではありません。 これを確認するために、 &lt;a href=&quot;https://addons.mozilla.org/en-us/firefox/addon/colorzilla/&quot;&gt;Firefox ColorZillaアドオン&lt;/a&gt;を使用しました。</target>
        </trans-unit>
        <trans-unit id="96407bc67b95cb75ff2f84517c9c4326b5387c2d" translate="yes" xml:space="preserve">
          <source>If we apply the rules in turn from the blog post, we get the following:</source>
          <target state="translated">ブログ記事から順番にルールを当てはめていくと、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="1ba6534d2ba347bc8825172a692c88fa554b840b" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;chucknorris&lt;/code&gt;, everything except &lt;strong&gt;&lt;code&gt;c&lt;/code&gt;&lt;/strong&gt; is not a valid hex value.</source>
          <target state="translated">&lt;code&gt;chucknorris&lt;/code&gt; では、 &lt;strong&gt; &lt;code&gt;c&lt;/code&gt; &lt;/strong&gt;以外のすべてが有効な16進数値ではありません。</target>
        </trans-unit>
        <trans-unit id="290fec8b4271fbd11d019422133fa5ea4202765d" translate="yes" xml:space="preserve">
          <source>Interestingly, while &lt;code&gt;chucknorri&lt;/code&gt; produces a red background as well, &lt;code&gt;chucknorr&lt;/code&gt; produces a yellow background.</source>
          <target state="translated">興味深いことに、 &lt;code&gt;chucknorri&lt;/code&gt; も赤い背景を生成しますが、 &lt;code&gt;chucknorr&lt;/code&gt; は黄色の背景を生成します。</target>
        </trans-unit>
        <trans-unit id="765cfa7e7dfbf72d563a17f756b39e567a44fd65" translate="yes" xml:space="preserve">
          <source>It is from the blog post &lt;em&gt;&lt;a href=&quot;http://scrappy-do.blogspot.com/2004/08/little-rant-about-microsoft-internet.html&quot;&gt;A little rant about Microsoft Internet Explorer's color parsing&lt;/a&gt;&lt;/em&gt; which covers it in great detail, including varying lengths of color values, etc.</source>
          <target state="translated">これはブログの投稿から&lt;em&gt;&lt;a href=&quot;http://scrappy-do.blogspot.com/2004/08/little-rant-about-microsoft-internet.html&quot;&gt;です。MicrosoftInternet Explorerのカラー解析&lt;/a&gt;&lt;/em&gt;については、色の長さの変化など、非常に詳細にカバーしています。</target>
        </trans-unit>
        <trans-unit id="dc5c8c17a5b4ac2fafa08f96f4999f4a955b0808" translate="yes" xml:space="preserve">
          <source>It's a holdover from the Netscape days:</source>
          <target state="translated">ネットスケープ時代の名残ですね。</target>
        </trans-unit>
        <trans-unit id="4dcb6a6719024ce6cca04984eae3160fb4db813c" translate="yes" xml:space="preserve">
          <source>Missing digits are treated as 0[...]. An incorrect digit is simply interpreted as 0. For example the values #F0F0F0, F0F0F0, F0F0F, #FxFxFx and FxFxFx are all the same.</source>
          <target state="translated">欠落した桁は0[....]として扱われます。不正確な桁は単純に0と解釈されます。 例えば、#F0F0F0,F0F0F0,F0F0F,#FxFxFx,FxFxFxの値はすべて同じです。</target>
        </trans-unit>
        <trans-unit id="69d2baba5d52206b59836e5f56bd1fe2aa3f836f" translate="yes" xml:space="preserve">
          <source>Most browsers will simply ignore any NON-hex values in your color string, substituting non-hex digits with zeros.</source>
          <target state="translated">ほとんどのブラウザは、カラー文字列の中の非ヘックス値を無視して、非ヘックス数字をゼロで置き換えます。</target>
        </trans-unit>
        <trans-unit id="57ebe10afc8571b57b2bfb670ecc0ff03286840d" translate="yes" xml:space="preserve">
          <source>Note, this does &lt;em&gt;not&lt;/em&gt; apply to CSS color parsing, which follow the CSS standard.</source>
          <target state="translated">これは、CSS標準に準拠するCSSカラー解析に&lt;em&gt;は&lt;/em&gt;適用され&lt;em&gt;ない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6e6c407fc9343097f5eb8da3005ef6583b42991a" translate="yes" xml:space="preserve">
          <source>Now they get divided by 3 for &lt;code&gt;RGB&lt;/code&gt;(red, green, blue)... &lt;code&gt;R: c00c, G: 0000, B:0000&lt;/code&gt;...</source>
          <target state="translated">これで、 &lt;code&gt;RGB&lt;/code&gt; （赤、緑、青）の3で除算されます... &lt;code&gt;R: c00c, G: 0000, B:0000&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="c3c1ff36a5806b42f8d0732ec9c98d43f66cb06b" translate="yes" xml:space="preserve">
          <source>On a lighter note</source>
          <target state="translated">軽い気持ちで</target>
        </trans-unit>
        <trans-unit id="2ee91262dc281714710a98baa64093dad825e899" translate="yes" xml:space="preserve">
          <source>Pad out to the next total number of characters divisible by 3 (11 -&amp;gt; 12)</source>
          <target state="translated">3で割り切れる次の合計文字数まで埋め込む（11-&amp;gt; 12）</target>
        </trans-unit>
        <trans-unit id="c50cc129c3062e4377f3d8ffec65ddc847317b08" translate="yes" xml:space="preserve">
          <source>Replace all nonvalid hexadecimal characters with 0's</source>
          <target state="translated">無効な16進数のすべての文字を0に置き換えます。</target>
        </trans-unit>
        <trans-unit id="4bcb4e163bf193fe874c35e7a1a754e4ed2bd51c" translate="yes" xml:space="preserve">
          <source>Show code snippet</source>
          <target state="translated">コードスニペットを表示</target>
        </trans-unit>
        <trans-unit id="33da177fcd9603be4ffaee5cd1898f7bbd6de709" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;c&lt;/code&gt; is the only valid hex character in &lt;strong&gt;chucknorris&lt;/strong&gt;, the value turns into: &lt;code&gt;c00c00000000&lt;/code&gt;(&lt;strong&gt;0 for all values that were invalid&lt;/strong&gt;).</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; は&lt;strong&gt;chucknorris&lt;/strong&gt;で唯一の有効な16進文字である&lt;strong&gt;ため&lt;/strong&gt; 、値は&lt;strong&gt;次のよう&lt;/strong&gt;になります： &lt;code&gt;c00c00000000&lt;/code&gt; （ &lt;strong&gt;無効であったすべての値の場合は0&lt;/strong&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7c337b0ecd082d5d555f5c05d992447814e67fc8" translate="yes" xml:space="preserve">
          <source>Since valid hex values for html backgrounds only contain 2 digits for each color type (&lt;strong&gt;r&lt;/strong&gt;, &lt;strong&gt;g&lt;/strong&gt;, &lt;strong&gt;b&lt;/strong&gt;), the last 2 digits are truncated from each group, leaving an rgb value of &lt;code&gt;c00000&lt;/code&gt; which is a brick-reddish toned color.</source>
          <target state="translated">HTML背景の有効な16進値には、各カラータイプ（ &lt;strong&gt;r&lt;/strong&gt; 、 &lt;strong&gt;g&lt;/strong&gt; 、 &lt;strong&gt;b&lt;/strong&gt; ）の2桁しか含まれないため、最後の2桁は各グループから切り捨てられ、レンガ色のトーンの色であるrgb値 &lt;code&gt;c00000&lt;/code&gt; が残ります。</target>
        </trans-unit>
        <trans-unit id="ab34b7402e9e42c1c9ec64c3affc073a0fb296c0" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;chucknorris&lt;/code&gt; in hexadecimal format becomes: &lt;code&gt;c00c00000000&lt;/code&gt;, all other characters become &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; remains where they are...</source>
          <target state="translated">したがって、16進形式の &lt;code&gt;chucknorris&lt;/code&gt; は次のようになります： &lt;code&gt;c00c00000000&lt;/code&gt; 、他のすべての文字は &lt;code&gt;0&lt;/code&gt; になり、 &lt;code&gt;c&lt;/code&gt; はそのままです...</target>
        </trans-unit>
        <trans-unit id="be81fef282fbf90ea4f4b6ba08e17eef2b9550d6" translate="yes" xml:space="preserve">
          <source>So it gets converted to &lt;strong&gt;&lt;code&gt;c00c00000000&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">したがって、それは&lt;strong&gt; &lt;code&gt;c00c00000000&lt;/code&gt; &lt;/strong&gt;に変換され&lt;strong&gt;ます&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a226ac0686214f3851c2150f8bc75a10df0c5e0" translate="yes" xml:space="preserve">
          <source>So the real result is:</source>
          <target state="translated">ということで、本当の結果は</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="9d90712d2d85ff7dc5b134241490237e188ff82e" translate="yes" xml:space="preserve">
          <source>Split into three equal groups, with each component representing the corresponding colour component of an RGB colour:</source>
          <target state="translated">3つの等しいグループに分割され、各成分はRGBカラーの対応する色成分を表します。</target>
        </trans-unit>
        <trans-unit id="22b8684e77d5872811b2d2bd98487be9c70e6f95" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-a-legacy-color-value&quot;&gt;rules for parsing colors on legacy attributes&lt;/a&gt; involves additional steps than those mentioned in existing answers. The truncate component to 2 digits part is described as:</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-a-legacy-color-value&quot;&gt;従来の属性の色を解析するため&lt;/a&gt;のルールには 、既存の回答で述べられているものよりも追加の手順が含まれます。 コンポーネントを2桁の部分に切り捨てる方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="98bebaad014f443e9cfa6aa5e3bb2b6d335181e9" translate="yes" xml:space="preserve">
          <source>The WHATWG HTML spec has the exact algorithm for parsing a legacy color value:
&lt;a href=&quot;https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-a-legacy-colour-value&quot;&gt;https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-a-legacy-colour-value&lt;/a&gt;</source>
          <target state="translated">WHATWG HTML仕様には、レガシーカラー値を解析するための正確なアルゴリズムがあります&lt;a href=&quot;https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-a-legacy-colour-value&quot;&gt;。https&lt;/a&gt; ： //html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-a-legacy-colour-value</target>
        </trans-unit>
        <trans-unit id="563c77aaf3a6c4c0a6d5f9162b9b45a41b77afa5" translate="yes" xml:space="preserve">
          <source>The browser converts &lt;code&gt;chucknorris&lt;/code&gt; to a hexadecimal value, &lt;code&gt;C00C00000000&lt;/code&gt;.</source>
          <target state="translated">ブラウザは、 &lt;code&gt;C00C00000000&lt;/code&gt; 16進値 &lt;code&gt;chucknorris&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="db492ccb7233e657b773304ac9c32d796a42ba87" translate="yes" xml:space="preserve">
          <source>The browser is trying to convert &lt;code&gt;chucknorris&lt;/code&gt; into hex colour code, because it's not a valid value.</source>
          <target state="translated">ブラウザは、 &lt;code&gt;chucknorris&lt;/code&gt; を16進数のカラーコードに変換しようとしています。これは有効な値ではありません。</target>
        </trans-unit>
        <trans-unit id="3bb41ff155e8f44950032e41ef83da2257be30ae" translate="yes" xml:space="preserve">
          <source>The browser needs only two digits to indicate the colour:</source>
          <target state="translated">ブラウザが色を示すために必要なのは2桁の数字だけです。</target>
        </trans-unit>
        <trans-unit id="adcdc605edb8695db4c3c6223cd61a037e20376a" translate="yes" xml:space="preserve">
          <source>The browser then divides the result into 3 groupds: &lt;code&gt;Red = c00c&lt;/code&gt;, &lt;code&gt;Green = 0000&lt;/code&gt;, &lt;code&gt;Blue = 0000&lt;/code&gt;.</source>
          <target state="translated">次に、ブラウザーは結果を3つのグループに分割します： &lt;code&gt;Red = c00c&lt;/code&gt; 、 &lt;code&gt;Green = 0000&lt;/code&gt; 、 &lt;code&gt;Blue = 0000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0118d700e198b7fe2a7acf885fe97e75b338478f" translate="yes" xml:space="preserve">
          <source>The browser will try to convert &lt;strong&gt;chucknorris&lt;/strong&gt; into a hexadecimal value.</source>
          <target state="translated">ブラウザは、 &lt;strong&gt;chucknorris&lt;/strong&gt;を16進値に変換しようとします。</target>
        </trans-unit>
        <trans-unit id="244c5be6c1ed4f3119517a0cdca68341bfda23cf" translate="yes" xml:space="preserve">
          <source>The code Netscape Classic used for parsing color strings is open source:
&lt;a href=&quot;https://dxr.mozilla.org/classic/source/lib/layout/layimage.c#155&quot;&gt;https://dxr.mozilla.org/classic/source/lib/layout/layimage.c#155&lt;/a&gt;</source>
          <target state="translated">色文字列の解析に使用されるコードNetscape Classicはオープンソースです： &lt;a href=&quot;https://dxr.mozilla.org/classic/source/lib/layout/layimage.c#155&quot;&gt;https&lt;/a&gt; : //dxr.mozilla.org/classic/source/lib/layout/layimage.c#155</target>
        </trans-unit>
        <trans-unit id="362cd8c956eec39c8859cae84ab2235fd7f2b8c1" translate="yes" xml:space="preserve">
          <source>The reason is the browser can &lt;strong&gt;not understand&lt;/strong&gt; it and try to somehow translate it to what it can understand and in this case into a hexadecimal value!...</source>
          <target state="translated">その理由は、ブラウザが&lt;strong&gt;それを理解&lt;/strong&gt;でき&lt;strong&gt;ず&lt;/strong&gt; 、どういうわけかそれをそれが理解できるものに変換しようとし、この場合は16進値に変換しようとするからです！...</target>
        </trans-unit>
        <trans-unit id="cc2c9111fbc1046d9f042a864ddb534dbff0391d" translate="yes" xml:space="preserve">
          <source>The rules state:</source>
          <target state="translated">ルールではこうなっています。</target>
        </trans-unit>
        <trans-unit id="7b8eeefac6b07f44be74847c5f460c24fa05d0d7" translate="yes" xml:space="preserve">
          <source>Then the &lt;code&gt;C00C00000000&lt;/code&gt; hexadecimal value is converted to &lt;strong&gt;RGB&lt;/strong&gt; format (divided by 3):</source>
          <target state="translated">次に、 &lt;code&gt;C00C00000000&lt;/code&gt; の 16進値が&lt;strong&gt;RGB&lt;/strong&gt;形式（3で除算）に変換されます。</target>
        </trans-unit>
        <trans-unit id="99b2d8c0528f0bb8b9733bf673e73481a97c434c" translate="yes" xml:space="preserve">
          <source>This also answers the other part of the question; why does &lt;code&gt;bgcolor=&quot;chucknorr&quot;&lt;/code&gt; produce a yellow colour? Well, if we apply the rules, the string is:</source>
          <target state="translated">これは、質問の他の部分にも回答します。 なぜ &lt;code&gt;bgcolor=&quot;chucknorr&quot;&lt;/code&gt; は黄色を生成するのですか？ さて、ルールを適用すると、文字列は次のようになります。</target>
        </trans-unit>
        <trans-unit id="7f6519c3c962b763ec04c1f3391d0840b781b47d" translate="yes" xml:space="preserve">
          <source>This seems to be an issue primarily with &lt;strong&gt;Internet&amp;nbsp;Explorer&lt;/strong&gt; and &lt;strong&gt;Opera&lt;/strong&gt; (12) as both Chrome (31) and Firefox (26) just ignore this.</source>
          <target state="translated">Chrome（31）とFirefox（26）の両方がこれを無視するため、これは主に&lt;strong&gt;Internet Explorer&lt;/strong&gt;と&lt;strong&gt;Opera&lt;/strong&gt; （12）の問題のようです。</target>
        </trans-unit>
        <trans-unit id="982b4efb7f62e7ba16e6010f5d112c58a8dc8c0f" translate="yes" xml:space="preserve">
          <source>Truncate each of the arguments from the right down to two characters</source>
          <target state="translated">各引数を右から2文字まで切り詰める</target>
        </trans-unit>
        <trans-unit id="e22523618c5e0152d5cb390dfdabf3dcb9d184bb" translate="yes" xml:space="preserve">
          <source>UPDATE: &lt;em&gt;The original answerers who said the color was &lt;code&gt;#CC0000&lt;/code&gt; have since edited their answers to include the correction.&lt;/em&gt;</source>
          <target state="translated">更新： &lt;em&gt;色が &lt;code&gt;#CC0000&lt;/code&gt; であると答えた元の回答者は、修正を含めるために回答を編集しました。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2bb2894918109500d7347664d5db11d5763f5be5" translate="yes" xml:space="preserve">
          <source>Update: this code does not exactly match what is defined in the spec, but the only difference there is a few lines of code. I think it is these lines that was added (in Netscape 4):</source>
          <target state="translated">更新:このコードは仕様で定義されているものと正確には一致していませんが、唯一の違いは数行のコードです。(Netscape 4で)追加されたのはこれらの行だと思います。</target>
        </trans-unit>
        <trans-unit id="a80832a90f0eb46f0620cb5802e9e519794d6d1a" translate="yes" xml:space="preserve">
          <source>What's going on here?</source>
          <target state="translated">どうしたんだ?</target>
        </trans-unit>
        <trans-unit id="4ac41a83308a6172be5bc58e0eb88bd447a0e42b" translate="yes" xml:space="preserve">
          <source>Which becomes &lt;strong&gt;#c00000&lt;/strong&gt;, a shade of red.</source>
          <target state="translated">これが&lt;strong&gt;＃c00000&lt;/strong&gt; 、赤の色合いになります。</target>
        </trans-unit>
        <trans-unit id="a1cf917d626d52f0ed9d0975baea1e19c7cfce40" translate="yes" xml:space="preserve">
          <source>Which gives a light yellow gold colour. As the string starts off as 9 characters, we keep the second C this time around hence it ends up in the final colour value.</source>
          <target state="translated">これにより、薄い黄色の金色になります。文字列は9文字で始まるので、今回は2番目のCを残して、最終的な色の値になります。</target>
        </trans-unit>
        <trans-unit id="3b5332a6836335115a5e712a8f03989a61013d00" translate="yes" xml:space="preserve">
          <source>Which gives the following result:</source>
          <target state="translated">これは次のような結果を与えます。</target>
        </trans-unit>
        <trans-unit id="bf43a7d4d3de11551375719c67aac4c5393d224a" translate="yes" xml:space="preserve">
          <source>Why does HTML think “chucknorris” is a color</source>
          <target state="translated">HTMLが「chucknorris」を色だと思っている理由</target>
        </trans-unit>
        <trans-unit id="7a18bdea0d37a5050bfc3e29d04f2b01bb5d937f" translate="yes" xml:space="preserve">
          <source>keep the hex values, and add 0's where necessary: &lt;code&gt;C0 00 00&lt;/code&gt;</source>
          <target state="translated">16進数の値を保持し、必要に応じて0を追加します &lt;code&gt;C0 00 00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c47551fdaf627f26cf5a7355e4bce773c4d6dc9" translate="yes" xml:space="preserve">
          <source>make the string a length that is a multiple of 3 by adding 0s: &lt;code&gt;chucknorris0&lt;/code&gt;</source>
          <target state="translated">0を追加して、文字列の長さを3の倍数にします &lt;code&gt;chucknorris0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30740490b283b12912b3d0fbe1a7800b1169f5a6" translate="yes" xml:space="preserve">
          <source>separate the string into 3 equal length strings: &lt;code&gt;chuc knor ris0&lt;/code&gt;</source>
          <target state="translated">文字列を3つの等しい長さの文字列に &lt;code&gt;chuc knor ris0&lt;/code&gt; ます： chuc knor ris0</target>
        </trans-unit>
        <trans-unit id="4607b8a03bcdec83b0345e2fa20d1b08e5977fe0" translate="yes" xml:space="preserve">
          <source>truncate each string to 2 characters: &lt;code&gt;ch kn ri&lt;/code&gt;</source>
          <target state="translated">各文字列を2文字に切り詰めます： &lt;code&gt;ch kn ri&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
