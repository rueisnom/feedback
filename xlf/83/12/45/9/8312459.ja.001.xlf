<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="https://stackoverflow.com/questions/8312459">
    <body>
      <group id="8312459">
        <trans-unit id="7c0e86dc4fcd84c668d926b7be52383339b8b7c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty&quot;&gt;&lt;code&gt;hasOwnProperty&lt;/code&gt;&lt;/a&gt; simply checks to see if this is a property specific to this class, and not one inherited from the base class.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty&quot;&gt; &lt;code&gt;hasOwnProperty&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、これがこのクラスに固有のプロパティであり、基本クラスから継承されたプロパティではないかどうかを確認するだけです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9667268933bc7276433c1c822e60de630c6315ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/a/16735184/330867&quot;&gt;Dominik's&lt;/a&gt; answer is perfect, I just prefer to do it that way, as it's cleaner to read:</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/a/16735184/330867&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドミニクの&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;答えは完璧です、私はそれを読むほうがきれいなので、そのようにするのが好きです：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="319f124bf39ace4f5c7e4a204c5f944066cbff0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A better way to recursively iterate through a JSON object properties&lt;/strong&gt; would be to first check if that object is a sequence or not:</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSONオブジェクトのプロパティを再帰的に反復するより良い方法&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、最初にそのオブジェクトがシーケンスであるかどうかを確認することです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1cc43776816e01bbb19519df1811844498b67c4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution&lt;/strong&gt;: As of writing this answer (June 2018) all other browsers, but IE, support generators and &lt;code&gt;for...of&lt;/code&gt; iteration via &lt;code&gt;Symbol.iterator&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;注意&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：この回答を書いている時点（2018年6月）では、他のすべてのブラウザー（ただしIE &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt; &lt;code&gt;Symbol.iterator&lt;/code&gt; &lt;/font&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ジェネレーターをサポートし、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Symbol.iterator &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;による&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;反復処理を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サポートし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ています。&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c8709e5506227a5ddf6c5c46b6af289f219e128" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The wrong way to iterate through its 'properties':&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;「プロパティ」を繰り返す間違った方法：&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b97c74048841fa8f0363bc6848cba74ba85fbded" translate="yes" xml:space="preserve">
          <source>A for...in loop iterates through the enumerable properties of an object. Whichever variable you define, or put in the for...in loop, changes each time it goes to the next property it iterates. The variable in the for...in loop iterates through the keys, but the value of it is the key's value. For example:</source>
          <target state="translated">for...inループは、オブジェクトの無数のプロパティを繰り返し処理します。for...inループで定義した変数、またはfor...inループに入れた変数は、次のプロパティを繰り返し処理するたびに変化します。for...inループ内の変数はキーを繰り返し処理しますが、その値はキーの値となります。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="273e7b2092791dee56fbabc2a4ee44cf1200d427" translate="yes" xml:space="preserve">
          <source>Also adding the recursive way:</source>
          <target state="translated">再帰的な方法も追加しました。</target>
        </trans-unit>
        <trans-unit id="d7e58cdfc6a5ef108d6c6bf2fec64411a81cd638" translate="yes" xml:space="preserve">
          <source>As of JavaScript 1.8.5 you can use &lt;code&gt;Object.keys(obj)&lt;/code&gt; to get an Array of properties defined on the object itself (the ones that return true for &lt;code&gt;obj.hasOwnProperty(key)&lt;/code&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaScript 1.8.5以降では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.keys(obj)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して、オブジェクト自体で定義されたプロパティの配列（&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj.hasOwnProperty(key)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;に対してtrueを返すプロパティ&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を取得&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4af1ea893f1a323763d80b57a790469edb617f2d" translate="yes" xml:space="preserve">
          <source>As shown in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries&quot;&gt;Mozillas Object.entries()&lt;/a&gt; documentation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mozillas Object.entries（）&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメントに&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;示されているように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ce6f092ab735d48670da0618b6cd1d4cc7c3e923" translate="yes" xml:space="preserve">
          <source>Basically with Object.entries we can forgo the following extra step that is required with the older &lt;strong&gt;for...in&lt;/strong&gt; loop:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;基本的にObject.entriesを使用すると、古い&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;for ... in&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループで&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;必要な次の追加手順を省略でき&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5832ccb0f142a233271468bad68b8fd81b91fa88" translate="yes" xml:space="preserve">
          <source>But this will fail if the object has an unrelated field with the same name:</source>
          <target state="translated">しかし、オブジェクトが同じ名前の無関係なフィールドを持っている場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="301a6b455aa28ebe89aec936d37c9a62096160bf" translate="yes" xml:space="preserve">
          <source>Check this link it will help &lt;a href=&quot;https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_state_forin&quot;&gt;https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_state_forin&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;このリンクを確認して&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_state_forin&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;くださいhttps://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_state_forin&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01ea67513a53792dc025e7a9ceef86e9d256eb61" translate="yes" xml:space="preserve">
          <source>Chrome: 5</source>
          <target state="translated">クローム:5</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">スニペットを展開</target>
        </trans-unit>
        <trans-unit id="7a2056c9097c436911e4a9256b3f49f12b7f9980" translate="yes" xml:space="preserve">
          <source>Firefox (Gecko): 4 (2.0)</source>
          <target state="translated">Firefox (Gecko):4 (2.0)</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="3795adad1e448b2f4dd6eecb076a137689c33c82" translate="yes" xml:space="preserve">
          <source>Girls and guys we are in 2019 and we do not have that much time for typing... So lets do this cool new fancy ECMAScript 2016:</source>
          <target state="translated">女の子とみんな私たちは2019年にあり、私たちはタイピングのためにそんなに時間を持っていません...だから、このクールな新しいファンシーECMAScript 2016を行うことができます。</target>
        </trans-unit>
        <trans-unit id="dbe45a86a7e9890aa77242ecd96e544bc35f5aca" translate="yes" xml:space="preserve">
          <source>Here I am iterating each node and creating meaningful node names. If you notice, instanceOf Array and instanceOf Object pretty much does the same thing (in my application, i am giving different logic though)</source>
          <target state="translated">ここでは、各ノードを反復処理し、意味のあるノード名を作成しています。お気づきのように、instanceOfArrayとinstanceOfObjectはほとんど同じことをしています(私のアプリケーションでは、異なるロジックを与えていますが)。</target>
        </trans-unit>
        <trans-unit id="4083a024d4afdb81a60806bbe0fb70378e46acfb" translate="yes" xml:space="preserve">
          <source>How does the variable &lt;code&gt;propt&lt;/code&gt; represent the properties of the object? It's not a built-in method or property. Why does it come up with every property in the object?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;変数&lt;/font&gt;&lt;/font&gt; &lt;code&gt;propt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はオブジェクトのプロパティを&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どのように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;表しますか？&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;組み込みのメソッドやプロパティではありません。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのすべてのプロパティが表示されるのはなぜですか？&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63d711cfe20699e0ec094d5175dc3c1c3eec41d9" translate="yes" xml:space="preserve">
          <source>I hope this helps.</source>
          <target state="translated">これが役に立つといいですね。</target>
        </trans-unit>
        <trans-unit id="e8d368323ccc834f182b4f981650bc4a88902d10" translate="yes" xml:space="preserve">
          <source>I want to add to the answers above, because you might have different intentions from Javascript.  A JSON object and a Javascript object are different things, and you might want to iterate through the properties of a JSON object using the solutions proposed above, and then be surprised.</source>
          <target state="translated">Javascriptとは違う意図を持っているかもしれないので、上記の回答に追記したいと思います。JSONオブジェクトとJavascriptオブジェクトは別物であり、上記で提案された解答を使ってJSONオブジェクトのプロパティを反復処理してみて驚いたことがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="6618991727b77668a19a223dfcc3027757467d1e" translate="yes" xml:space="preserve">
          <source>If running &lt;strong&gt;Node&lt;/strong&gt; I'd recommend:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ノード&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;実行している場合、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;私はお勧めします：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8328067a7d3245063c6ce74f4e27a3b1cf2871a5" translate="yes" xml:space="preserve">
          <source>If you just want to iterate over the values, then use Object.values:</source>
          <target state="translated">単に値を反復処理したいだけならば、Object.valuesを使用します。</target>
        </trans-unit>
        <trans-unit id="074c411c8b36d9733af61c1d983b94816b1b58d5" translate="yes" xml:space="preserve">
          <source>If you want to be able to iterate over all objects you can add it as a prototype of Object:</source>
          <target state="translated">すべてのオブジェクトを反復処理できるようにしたい場合は、Objectのプロトタイプとして追加することができます。</target>
        </trans-unit>
        <trans-unit id="24e38b0a87e43698afce43f4dbc71f79ac8bf9ad" translate="yes" xml:space="preserve">
          <source>If you would like to iterate directly over the values of the keys of an object, you can define an &lt;code&gt;iterator&lt;/code&gt;, just like JavaScipts's default iterators for strings, arrays, typed arrays, Map and Set.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのキーの値を直接反復処理する場合は、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JavaSciptsの文字列、配列、型付き配列、MapおよびSetのデフォルトの反復子と同じように&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を定義できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="15e9470975112beb9ef26dfbcce9c50a9338787c" translate="yes" xml:space="preserve">
          <source>If your environment supports &lt;strong&gt;ES2017&lt;/strong&gt; then I would recommend &lt;strong&gt;Object.entries&lt;/strong&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;環境が&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES2017&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;サポートしている場合、&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.entries&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;をお勧めし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ます。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d5c8676e6ef5accde4306182a387507c45c6134" translate="yes" xml:space="preserve">
          <source>In up-to-date implementations of ES, you can use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/entries&quot;&gt;&lt;code&gt;Object.entries&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ESの最新の実装では、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/entries&quot;&gt; &lt;code&gt;Object.entries&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を使用できます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="67b9ebbd285a7a3f0730b90ac0a007f6aa984c7d" translate="yes" xml:space="preserve">
          <source>Internet Explorer: 9</source>
          <target state="translated">インターネットエクスプローラー 9</target>
        </trans-unit>
        <trans-unit id="4434e3f464e32e71ec1b9b643a0f40901d38b58c" translate="yes" xml:space="preserve">
          <source>It's also possible to call &lt;code&gt;hasOwnProperty&lt;/code&gt; through the object itself:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクト自体を通じて&lt;/font&gt;&lt;/font&gt; &lt;code&gt;hasOwnProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を呼び出すことも可能&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b074f0423a524d487b05c381cce0421bcf7e6f12" translate="yes" xml:space="preserve">
          <source>It's just a &lt;code&gt;for...in&lt;/code&gt; loop. Check out &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Statements/for...in&quot;&gt;the documentation at Mozilla&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループです。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Statements/for...in&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Mozillaのドキュメントを&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェックし&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;て&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ください&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b3c1af76e6be8f6070aafce7e28bcf0d59cb1f70" translate="yes" xml:space="preserve">
          <source>It's necessary because an object's prototype contains additional properties for the object which are technically part of the object. These additional properties are inherited from the base object class, but are still properties of &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトのプロトタイプには、技術的にはオブジェクトの一部であるオブジェクトの追加プロパティが含まれているため、これは必要です。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらの追加プロパティは基本オブジェクトクラスから継承されますが、それでも&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティです&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f7c8fa48ff1c21e392a8c5d94c2df7086c8cea99" translate="yes" xml:space="preserve">
          <source>It's the &lt;code&gt;for...in statement&lt;/code&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in&quot;&gt;MDN&lt;/a&gt;, &lt;a href=&quot;http://es5.github.io/#x12.6.4&quot;&gt;ECMAScript spec&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for...in statement&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;（&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;MDN&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://es5.github.io/#x12.6.4&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript仕様&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0eb94ec90ee9b86728708c0b9ed39c46a68e5b68" translate="yes" xml:space="preserve">
          <source>Iterate through object properties</source>
          <target state="translated">オブジェクトのプロパティを繰り返し処理する</target>
        </trans-unit>
        <trans-unit id="aa2fb919f185bd9dc1b74d1085ebbd90e4aaded4" translate="yes" xml:space="preserve">
          <source>Iterating over properties requires this additional &lt;code&gt;hasOwnProperty&lt;/code&gt; check:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティを反復処理するには、この追加の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;hasOwnProperty&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;チェック&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;が必要&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="2f4e3421b44d7087bdb5f3affb8c124d01a46acd" translate="yes" xml:space="preserve">
          <source>Its supported on these browsers:</source>
          <target state="translated">これらのブラウザでサポートされています。</target>
        </trans-unit>
        <trans-unit id="2617dc7bb035555f62b6ef349cffbf2d7d3fa041" translate="yes" xml:space="preserve">
          <source>JS will attempt to iterate via the default iterator property, which must be defined as &lt;code&gt;Symbol.iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;JSは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Symbol.iterator&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;として定義する必要があるデフォルトのイテレータープロパティを介して反復を試みます&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="363b35649f778bc4f4384f6340ffa9a974051f5b" translate="yes" xml:space="preserve">
          <source>JSFiddle</source>
          <target state="translated">JSFiddle</target>
        </trans-unit>
        <trans-unit id="28503bcf14a850db618a4ef08b5608b91844f2f2" translate="yes" xml:space="preserve">
          <source>Nowadays you can convert a standard JS object into an iterable object just by adding a Symbol.iterator method. Then you can use a &lt;code&gt;for of&lt;/code&gt; loop and acceess its values directly or even can use a spread operator on the object too. Cool. Let's see how we can make it:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;今日では、Symbol.iteratorメソッドを追加するだけで、標準のJSオブジェクトを反復可能なオブジェクトに変換できます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;次に、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for of&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループを使用してその値に直接アクセスするか、オブジェクトに対して拡散演算子を使用することもできます。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;涼しい。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;どうやって作るのか見てみましょう：&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="144d0d8514184066255771732fecc117cd6d49b5" translate="yes" xml:space="preserve">
          <source>Objects in JavaScript are collections of properties and can therefore be looped in a for each statement.</source>
          <target state="translated">JavaScriptのオブジェクトはプロパティの集合体であるため、各ステートメントのforでループさせることができます。</target>
        </trans-unit>
        <trans-unit id="dba93ef49f4f86c64c6673a085ade8ea0967ba45" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;the Mozilla Developer Network &lt;strong&gt;Object.keys()&lt;/strong&gt;'s reference&lt;/a&gt; for futher information.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;詳細について&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は、Mozilla Developer Network &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.keys（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のリファレンス&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;参照&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;してください。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6b7bde0b951ffb8a08838f5c9c0042e62bbd93a1" translate="yes" xml:space="preserve">
          <source>Suppose that you have a JSON object like:</source>
          <target state="translated">のようなJSONオブジェクトがあるとします。</target>
        </trans-unit>
        <trans-unit id="a976d3bb5ea724476d3af361b4cfc25086b353d3" translate="yes" xml:space="preserve">
          <source>That's why it's safer to call it through &lt;code&gt;Object.prototype&lt;/code&gt; instead:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;そのため、&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Object.prototype&lt;/code&gt; を&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;して呼び出す方が安全&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;です。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6f94a7cb549fac0de77518769ad2f2f8bc559f60" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Object.entries()&lt;/strong&gt; method returns an array of a given object's own
  enumerable property [key, value] pairs, in the same order as that
  provided by a for...in loop (the difference being that a for-in loop
  enumerates properties in the prototype chain as well).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Object.entries（）&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;メソッドは？ループ内（差があるためにインループを列挙ことによって提供されるものと同じ順序で、[キー値]のペアを指定されたオブジェクト自身の列挙プロパティの配列を返しますプロトタイプチェーンのプロパティも同様です）。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c95e34913cebafc54fdc25334206514c3a1a5cb9" translate="yes" xml:space="preserve">
          <source>The above answers are a bit annoying because they don't explain what you do inside the for loop after you ensure it's an object: YOU DON'T ACCESS IT DIRECTLY! You are actually only delivered the KEY that you need to apply to the OBJ:</source>
          <target state="translated">上記の回答は、オブジェクトであることを確認した後にforループの中で何をするのかが説明されていないので、ちょっとイライラします。直接アクセスするわけではありません! 直接アクセスするわけではありません!実際にはOBJに適用する必要のあるKEYだけが渡されます。</target>
        </trans-unit>
        <trans-unit id="0fccb32497ffa72764f3771a7b5fa8acd3176164" translate="yes" xml:space="preserve">
          <source>The for...in loop represents each property in an object because it is just like a for loop. You defined propt in the for...in loop by doing:</source>
          <target state="translated">for...inループはforループのようなものなので、オブジェクトの各プロパティを表します。for...inループではproptを定義しています。</target>
        </trans-unit>
        <trans-unit id="25eb60986900ba89c6dbb45c32384af0c6cdcc2d" translate="yes" xml:space="preserve">
          <source>This is all ECMA5 safe. Even works in the lame JS versions like Rhino ;)</source>
          <target state="translated">これはすべてECMA5で安全です。RhinoのようなダサいJSバージョンでも動作します。)</target>
        </trans-unit>
        <trans-unit id="81b0830737e701b08fd10b923e714f5ee379264a" translate="yes" xml:space="preserve">
          <source>This is better (and more readable) than using a for-in loop.</source>
          <target state="translated">これは、フォーインループを使うよりも(読みやすく)良いです。</target>
        </trans-unit>
        <trans-unit id="82a9e35a449574e8149bda64f43bece3e7bc464c" translate="yes" xml:space="preserve">
          <source>This would enable you to iterate over the values of an object with a for...of loop, for example:</source>
          <target state="translated">これにより、例えば for...of ループを使ってオブジェクトの値を反復処理できるようになります。</target>
        </trans-unit>
        <trans-unit id="4e10887f8ef78dfbc5dec3018aad0002c6a754c9" translate="yes" xml:space="preserve">
          <source>To add ES2015's usage of &lt;code&gt;Reflect.ownKeys(obj)&lt;/code&gt; and also iterating over the properties via an iterator.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES2015の&lt;/font&gt;&lt;/font&gt; &lt;code&gt;Reflect.ownKeys(obj)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;の使用法を追加&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;し、イテレーターを介してプロパティを反復します。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dcc2f824c5d4c95709353d1abe828391f63afc99" translate="yes" xml:space="preserve">
          <source>To further refine the accepted answer it's worth noting that if you instantiate the object with a &lt;code&gt;var object = Object.create(null)&lt;/code&gt; then &lt;code&gt;object.hasOwnProperty(property)&lt;/code&gt; will trigger a TypeError. So to be on the safe side, you'd need to call it from the prototype like this:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;さらに絞り込むこと受け入れ答えは、それの注目に値するあなたが持つオブジェクトインスタンス化した場合という&lt;/font&gt;&lt;/font&gt; &lt;code&gt;var object = Object.create(null)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、その後&lt;/font&gt;&lt;/font&gt; &lt;code&gt;object.hasOwnProperty(property)&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; TypeError例外をトリガします。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;安全のために、次のようにプロトタイプから呼び出す必要があります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="a2db1b75605706c6c278f4a296da125700fe446f" translate="yes" xml:space="preserve">
          <source>What for..in loop does is that it creates a new variable (var someVariable) and then stores each property of the given object in this new variable(someVariable) one by one. Therefore if you use block {}, you can iterate. Consider the following example.</source>
          <target state="translated">for...inループが何をするかというと、新しい変数(var someVariable)を作成し、与えられたオブジェクトの各プロパティをこの新しい変数(someVariable)に一つずつ格納するということです。そのため、ブロック{}を使えば反復処理ができます。次の例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="fadfc9526018703b12130a9f7ca713602e76017e" translate="yes" xml:space="preserve">
          <source>While the top-rated answer is correct, here is an alternate use case i.e if you are iterating over an object and want to create an array in the end. Use &lt;code&gt;.map&lt;/code&gt; instead of &lt;code&gt;forEach&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;一流の答えは正しいですが、これは別のユースケースです。つまり、オブジェクトを繰り返し処理していて、最後に配列を作成したい場合です。&lt;/font&gt; &lt;code&gt;forEach&lt;/code&gt; の&lt;font style=&quot;vertical-align: inherit;&quot;&gt;代わりに&lt;/font&gt;&lt;/font&gt; &lt;code&gt;.map&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;を&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;使用してください&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="0e16334b4a9ecdd0227cefa182ab60a8368d1772" translate="yes" xml:space="preserve">
          <source>You basically want to loop through each property in the object.</source>
          <target state="translated">基本的には、オブジェクトの各プロパティをループさせたいのです。</target>
        </trans-unit>
        <trans-unit id="5c88c103213a8670c993a1f858d980e643e7ce9a" translate="yes" xml:space="preserve">
          <source>You can read it as &quot;&lt;strong&gt;FOR&lt;/strong&gt; every property &lt;strong&gt;IN&lt;/strong&gt; the &lt;code&gt;obj&lt;/code&gt; object, assign each property to the &lt;strong&gt;PROPT&lt;/strong&gt; variable in turn&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは「としてそれを読むことができる&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ための&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;すべてのプロパティ&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、IN &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトに各プロパティを割り当てる&lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PROPTの&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;順番に変数」。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="848bd6c1220fd6260078aa05b8a0013976fd2a69" translate="yes" xml:space="preserve">
          <source>You can see how the variable differs from the variable's value. In contrast, a for...of loop does the opposite.</source>
          <target state="translated">変数の値がどのように違うのかがわかります。対照的に、for...ofループは逆のことをします。</target>
        </trans-unit>
        <trans-unit id="430b5a8c32a792e6504a259f89c547132d75b50e" translate="yes" xml:space="preserve">
          <source>You can use Lodash. &lt;a href=&quot;https://lodash.com/docs/4.16.6#keys&quot;&gt;The documentation&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Lodashを使用できます。&lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs/4.16.6#keys&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ドキュメント&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb288654d703ee62e5ee9bbfb036da871a523691" translate="yes" xml:space="preserve">
          <source>You might be surprised of seeing the console logging &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, etc. when iterating through the properties of &lt;code&gt;prop1&lt;/code&gt; and &lt;code&gt;prop2&lt;/code&gt; and of &lt;code&gt;prop3_1&lt;/code&gt;. Those objects are sequences, and the indexes of a sequence are properties of that object in Javascript.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたは、コンソールロギング見て驚くかもしれません&lt;/font&gt;&lt;/font&gt; &lt;code&gt;0&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;のプロパティを反復処理するときなどに、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prop1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prop2&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;との&lt;/font&gt;&lt;/font&gt; &lt;code&gt;prop3_1&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これらのオブジェクトはシーケンスであり、シーケンスのインデックスはJavaScriptでのそのオブジェクトのプロパティです。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="afe486b055bcef786db04736b1bc003fa9fdec27" translate="yes" xml:space="preserve">
          <source>You should think of &lt;code&gt;obj&lt;/code&gt; as an key value collection.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;obj&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はキー値コレクション&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;と考える必要があります&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8a6e88633a1c8bb2baaacc8a794fadcc60c10001" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;for&lt;/code&gt; loop is iterating over all of the properties of the object &lt;code&gt;obj&lt;/code&gt;. &lt;code&gt;propt&lt;/code&gt; is defined in the first line of your for loop. It is a string that is a name of a property of the &lt;code&gt;obj&lt;/code&gt; object. In the first iteration of the loop, &lt;code&gt;propt&lt;/code&gt; would be &quot;name&quot;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;あなたの&lt;/font&gt;&lt;/font&gt; &lt;code&gt;for&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループは、オブジェクトのすべてのプロパティを反復処理される&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;/font&gt; &lt;code&gt;propt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;はforループの最初の行で定義されています。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;これは、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;obj&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;オブジェクトの&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;プロパティの名前である文字列です&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;。&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ループの最初の反復では、&lt;/font&gt;&lt;/font&gt; &lt;code&gt;propt&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;は &quot;name&quot;になります。&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4d7db0e8c5264b8a6774dec6239d29120c9f49f7" translate="yes" xml:space="preserve">
          <source>can be iterated over by</source>
          <target state="translated">で反復処理することができます。</target>
        </trans-unit>
        <trans-unit id="bee84a9e1cd386ee87cb2113eaece155fadd9d35" translate="yes" xml:space="preserve">
          <source>jquery allows you to do this now:</source>
          <target state="translated">jqueryではこれができるようになりました。</target>
        </trans-unit>
        <trans-unit id="79b8d82b4b0913794ca617d6a257bf5ab7f19ca0" translate="yes" xml:space="preserve">
          <source>note - I am inspired by Ondrej Svejdar's answer. But this solution has better performance and less ambiguous</source>
          <target state="translated">note-Ondrej Svejdarの答えに触発されました。しかし,この解答の方が性能が良く,曖昧さも少ない.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
