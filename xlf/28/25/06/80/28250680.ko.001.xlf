<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://stackoverflow.com/questions/28250680">
    <body>
      <group id="28250680">
        <trans-unit id="886001de61d616fd7504793554e90b0ead0d7946" translate="yes" xml:space="preserve">
          <source>(Note: a more complex and complete version of this solution has been tested, but not this example version, so it could have a bug.)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(참고 :이 솔루션의보다 복잡하고 완전한 버전은 테스트되었지만이 예제 버전에서는 테스트되지 않았으므로 버그가있을 수 있습니다.)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8c36a0c010728fc244e1f43aab8c1da795455c65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/q/844536/1048572&quot;&gt;Mutable state is ugly&lt;/a&gt;, and &lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/148108/why-is-global-state-so-evil&quot;&gt;global variables are evil&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/q/844536/1048572&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가변 상태는 추악&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 하고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://softwareengineering.stackexchange.com/questions/148108/why-is-global-state-so-evil&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수는 악하다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="446787ac4bf8edd63cd98d9810d37f90a8ce33c1" translate="yes" xml:space="preserve">
          <source>A less harsh spin on &quot;Mutable contextual state&quot;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&quot;상황에 맞는 상황&quot;에서 덜 가혹한 스핀&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="61650d4ab35176fac8853a022c21d3f429ac0a74" translate="yes" xml:space="preserve">
          <source>According to &lt;a href=&quot;https://html5hive.org/how-to-chain-javascript-promises/&quot;&gt;how-to-chain-javascript-promises&lt;/a&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;a href=&quot;https://html5hive.org/how-to-chain-javascript-promises/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;how-to-chain-javascript-promises&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 따르면&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="fb4e646963a08495dd8a836cba56eac6efaa78a1" translate="yes" xml:space="preserve">
          <source>Alternatively, you can employ &lt;code&gt;Promise.all&lt;/code&gt; to produce the promise for the array:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Promise.all&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하여 어레이에 대한 약속을 만들 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="94665e6ad2dc97bb0515d1739a70f85937dae7b8" translate="yes" xml:space="preserve">
          <source>And then, there are also many other &lt;a href=&quot;https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS#synchronous-to-asynchronous-javascript-compilers-cps&quot;&gt;compile-to-JS languages&lt;/a&gt;
that are dedicated to easing asynchronous programming. They usually use a syntax similar to &lt;code&gt;await&lt;/code&gt;, (e.g. &lt;a href=&quot;http://maxtaco.github.io/coffee-script/&quot;&gt;Iced CoffeeScript&lt;/a&gt;), but there are also others that feature a Haskell-like &lt;code&gt;do&lt;/code&gt;-notation (e.g. &lt;a href=&quot;http://lattejs.com/&quot;&gt;LatteJs&lt;/a&gt;, &lt;a href=&quot;https://www.npmjs.com/package/monadic&quot;&gt;monadic&lt;/a&gt;, &lt;a href=&quot;http://www.purescript.org/&quot;&gt;PureScript&lt;/a&gt; or &lt;a href=&quot;http://lispyscript.com/&quot;&gt;LispyScript&lt;/a&gt;).</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 비동기 프로그래밍을 용이하게 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS#synchronous-to-asynchronous-javascript-compilers-cps&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하기위한&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 다른 많은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;컴파일 -JS 언어&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 도 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이들은 보통 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 유사한 구문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;(예 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://maxtaco.github.io/coffee-script/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Iced CoffeeScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )을 사용하지만 Haskell과 유사한 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;do&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; - &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;notation (예 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lattejs.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LatteJs&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://www.npmjs.com/package/monadic&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;monadic&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://www.purescript.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;PureScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://lispyscript.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;LispyScript&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;을 특징으로하는 다른 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;구문 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;도 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b117394e70cda9ad8f1592c22985ada9cd1467db" translate="yes" xml:space="preserve">
          <source>And you might not only use arrays, but arbitrarily complex objects. For example, with &lt;a href=&quot;http://underscorejs.org/#extend&quot;&gt;&lt;code&gt;_.extend&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt;&lt;code&gt;Object.assign&lt;/code&gt;&lt;/a&gt; in a different helper function:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그리고 배열뿐만 아니라 임의로 복잡한 객체를 사용할 수도 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다른 도우미 함수에 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/#extend&quot;&gt; &lt;code&gt;_.extend&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign&quot;&gt; &lt;code&gt;Object.assign&lt;/code&gt; &lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 사용하면 다음과 같습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6cd0e648be626f2f5734fc06177a48a905ba581d" translate="yes" xml:space="preserve">
          <source>Another answer, using &lt;code&gt;babel-node&lt;/code&gt; version &amp;lt;6</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt; &lt;code&gt;babel-node&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 버전 &amp;lt;6을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용하는 또 다른 대답&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="917cd1d01022379cee10d9edbb40647574476354" translate="yes" xml:space="preserve">
          <source>Another answer, using sequential executor &lt;a href=&quot;https://github.com/amaksr/nsynjs&quot;&gt;nsynjs&lt;/a&gt;:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또 다른 대답은 순차적 실행기 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/amaksr/nsynjs&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;nsynjs를 사용하는 것입니다&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8aab5e31173c31302ab6dcea021b1848ed8a3ee" translate="yes" xml:space="preserve">
          <source>Assigning promises-for-later-needed-values to variables and then getting their value via synchronous inspection. The example uses bluebird's &lt;code&gt;.value()&lt;/code&gt; method but many libraries provide similar method.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;나중에 필요한 값에 대한 약속을 변수에 할당 한 다음 동기 검사를 통해 값을 가져옵니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 예제는 bluebird의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.value()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를 사용하지만 많은 라이브러리가 유사한 메소드를 제공합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="050feb2cbdeb309a67b27f7cdff96683ad234fa3" translate="yes" xml:space="preserve">
          <source>Before destructuring became available with ES6, a nifty helper method called &lt;code&gt;.spread()&lt;/code&gt; was pro&amp;shy;vi&amp;shy;ded by many promise libraries (&lt;a href=&quot;https://github.com/kriskowal/q/wiki/API-Reference#promisespreadonfulfilled-onrejected&quot;&gt;Q&lt;/a&gt;, &lt;a href=&quot;http://bluebirdjs.com/docs/api/spread.html&quot;&gt;Bluebird&lt;/a&gt;, &lt;a href=&quot;https://github.com/cujojs/when/blob/master/docs/api.md#promisespread&quot;&gt;when&lt;/a&gt;, &amp;hellip;). It takes a function with multiple parameters - one for each array element - to be used as &lt;code&gt;.spread(function(resultA, resultB) { &amp;hellip;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.spread()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 가 가능해지기 전에, &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 promise 라이브러리 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/kriskowal/q/wiki/API-Reference#promisespreadonfulfilled-onrejected&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Q&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bluebirdjs.com/docs/api/spread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Bluebird&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/cujojs/when/blob/master/docs/api.md#promisespread&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;when&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; ,&amp;hellip;) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.spread ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 라는 멋진 도우미 메서드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;를 제공했습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.spread(function(resultA, resultB) { &amp;hellip;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 로 사용하려면 여러 배열 (각 배열 요소 당 하나씩)의 함수가 필요합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b1fbe958b0857725f5a84c804d4ae85da21ceb1d" translate="yes" xml:space="preserve">
          <source>Bluebird also features a dedicated &lt;a href=&quot;http://bluebirdjs.com/docs/api/promise.join.html&quot;&gt;&lt;code&gt;join&lt;/code&gt; function&lt;/a&gt; to replace that &lt;code&gt;Promise.all&lt;/code&gt;+&lt;code&gt;spread&lt;/code&gt; combination with a simpler (and more efficient) construct:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 Bluebird는 &lt;/font&gt; &lt;code&gt;Promise.all&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; + &lt;/font&gt; &lt;code&gt;spread&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 조합을보다 단순하고 효율적인 구성 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;으로 대체 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 전용 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bluebirdjs.com/docs/api/promise.join.html&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 기능&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제공합니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="064bf726f394fe19c0ef56ee0e3f8168e8f3bf8c" translate="yes" xml:space="preserve">
          <source>Break the chain</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사슬을 끊다&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="f446dfc8ca31cb54d0b1dae43079076f607503d6" translate="yes" xml:space="preserve">
          <source>ECMAScript 5</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 5&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b02b03612b472d412029a9017657b2e96f26db53" translate="yes" xml:space="preserve">
          <source>ECMAScript 6</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 6&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8eecaf932c06e6aadd977797e815790995527161" translate="yes" xml:space="preserve">
          <source>ECMAScript 8</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 8&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ec3cb3a8bb975f9d73ec9e15cd1211b669541cdd" translate="yes" xml:space="preserve">
          <source>ECMAScript Harmony</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ECMAScript 하모니&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="49c2bd6aa6f23d62660e81e7508644de0747ce48" translate="yes" xml:space="preserve">
          <source>Expand snippet</source>
          <target state="translated">스 니펫 확장</target>
        </trans-unit>
        <trans-unit id="2568555d5b3660982a930ffff01c1764f5cb7a9c" translate="yes" xml:space="preserve">
          <source>Explicit pass-through</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;명시 적 통과&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="66a027cb165ddbb392556662ee9b3307626866a1" translate="yes" xml:space="preserve">
          <source>For more complex cases I often use these guy small promise utilities without dependencies tested and typed. p-map has been useful several times. I think he covered most use cases:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;더 복잡한 경우에는 종종 테스트하고 입력 한 종속성이없는 작은 약속 유틸리티를 사용합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;p-map은 여러 번 유용했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그는 대부분의 사용 사례를 다루었다고 생각합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="5d57f2f84b3ffe6a5b6f65ea9aed650138de72a5" translate="yes" xml:space="preserve">
          <source>Global variables are bad, so this solution uses a locally scoped variable which causes no harm.  It is only accessible within the function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수가 잘못되었으므로이 솔루션은 로컬 범위 변수를 사용하여 피해를주지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수 내에서만 액세스 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24ca8b33236bc0d0ef50e2dd43fb66e04162b483" translate="yes" xml:space="preserve">
          <source>Here is a complete example:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음은 완전한 예입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7f4dfdc3b0e4865ba4c2f88fa68113cce0ed915" translate="yes" xml:space="preserve">
          <source>Here, that little arrow &lt;code&gt;b =&amp;gt; [resultA, b]&lt;/code&gt; is the function that closes over &lt;code&gt;resultA&lt;/code&gt;, and passes an array of both results to the next step. Which uses parameter destructuring syntax to break it up in single variables again.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여기서 작은 화살표 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;b =&amp;gt; [resultA, b]&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;resultA&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 닫고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;두 결과의 배열을 다음 단계로 전달하는 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;함수입니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;매개 변수 파괴 구문을 사용하여 단일 변수로 다시 분류합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b545f5f84c287a347a609ffd6cd3f0acc3d440ef" translate="yes" xml:space="preserve">
          <source>How do I access previous promise results in a .then() chain</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.then () 체인에서 이전 약속 결과에 액세스하는 방법&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="02900e741b676e32f46da3689f6188c4289e7586" translate="yes" xml:space="preserve">
          <source>However, if you want/need to be backwards-compatible you cannot use those without a transpiler. Both generator functions and async functions are supported by the current tooling, see for example the documentation of Babel on &lt;a href=&quot;http://babeljs.io/learn-es2015/#ecmascript-2015-features-generators&quot;&gt;generators&lt;/a&gt; and &lt;a href=&quot;http://babeljs.io/docs/plugins/syntax-async-functions&quot;&gt;async functions&lt;/a&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 역 호환성을 원하거나 필요로하는 경우에는 트랜스 파일러없이 사용할 수 없습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성기 기능과 비동기 기능은 모두 현재 툴링에서 지원됩니다 (예 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://babeljs.io/learn-es2015/#ecmascript-2015-features-generators&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;생성기&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 및 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://babeljs.io/docs/plugins/syntax-async-functions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비동기 기능&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 대한 Babel 문서 참조) &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d891f22fbf83c3adb5977c46bcbe5452c18a9d0d" translate="yes" xml:space="preserve">
          <source>I am not going to use this pattern in my own code since I'm not a big fan of using global variables. However, in a pinch it will work.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;전역 변수를 사용하는 데 큰 관심이 없기 때문에 내 코드 에서이 패턴을 사용하지 않을 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 핀치에서 작동합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="68345dc8d3438db6294a505941bbc502c5478c3d" translate="yes" xml:space="preserve">
          <source>I have restructured my code to &lt;a href=&quot;https://en.wikipedia.org/wiki/Futures_and_promises&quot;&gt;promises&lt;/a&gt;, and built a wonderful long &lt;strong&gt;flat promise chain&lt;/strong&gt;, consisting of multiple &lt;code&gt;.then()&lt;/code&gt; callbacks. In the end I want to return some composite value, and need to access multiple &lt;strong&gt;intermediate promise results&lt;/strong&gt;. However the resolution values from the middle of the sequence are not in scope in the last callback, how do I access them?</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;코드를 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Futures_and_promises&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;promises로&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 재구성하고 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;여러 개의 &lt;/font&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 콜백 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;으로 구성된 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;멋진 긴 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;플랫 약속 체인을 &lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;만들었습니다&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;결국 나는 복합 값을 반환하고 여러 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중간 약속 결과&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에 액세스해야 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;합니다&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; . &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 시퀀스 중간의 해상도 값은 마지막 콜백 범위에 있지 않습니다. 어떻게 액세스합니까?&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="134d28e92e3dba4bc6b603007f8ab403b5304a73" translate="yes" xml:space="preserve">
          <source>I think you can use hash of RSVP.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;RSVP의 해시를 사용할 수 있다고 생각합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e39203fa696fcdd915ba3edc88b86f9842cb98fa" translate="yes" xml:space="preserve">
          <source>In cases I do need to reference a promises is when creation and resolution happen at independent/not-related places. So instead an artificial association and probably an event listener just to resolve the &quot;distant&quot; promise, I prefer to expose the promise as a Deferred, which the following code implements it in valid es5</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약속을 참조 해야하는 경우 독립 및 관련되지 않은 장소에서 생성 및 해결이 발생할 때입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;따라서 인위적 연관성과 아마도 &quot;먼&quot;약속을 해결하기위한 이벤트 리스너는 약속을 지연으로 표시하는 것을 선호합니다. 다음 코드는 유효한 es5에서이를 구현합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="24d5ca2482aca47f7ad53f979d066f321ca7b78a" translate="yes" xml:space="preserve">
          <source>In theory, you can always avoid more than two levels of nesting (by making all closures explicit), in practise use as many as are reasonable.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이론적으로는 항상 모든 수준의 클로저를 명시 적으로 만들어서 2 단계 이상의 중첩 수준을 피할 수 있으며 실제로 합리적으로 많은 수를 사용합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d3bf1dc059b68a3d8ddb78e7995e2ab7c5c7d020" translate="yes" xml:space="preserve">
          <source>Instead of many variables one might also use an (initially empty) object, on which the results are stored as dynamically created properties.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;많은 변수 대신 결과가 동적으로 생성 된 속성으로 저장되는 초기에 비어있는 개체를 사용할 수도 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8f9b6a3354ddc0bb248f6e94d258722ec015fcb3" translate="yes" xml:space="preserve">
          <source>Instead of the parameter destructuring in the callback after &lt;code&gt;Promise.all&lt;/code&gt; that only became avail&amp;shy;able with ES6, in ES5 the &lt;code&gt;then&lt;/code&gt; call would be replaced by a nifty helper method that was provided by many promise libraries (&lt;a href=&quot;https://github.com/kriskowal/q/wiki/API-Reference#promisespreadonfulfilled-onrejected&quot;&gt;Q&lt;/a&gt;, &lt;a href=&quot;http://bluebirdjs.com/docs/api/spread.html&quot;&gt;Bluebird&lt;/a&gt;, &lt;a href=&quot;https://github.com/cujojs/when/blob/master/docs/api.md#promisespread&quot;&gt;when&lt;/a&gt;, &amp;hellip;): &lt;code&gt;.spread(function(resultA, resultB) { &amp;hellip;&lt;/code&gt;.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;대신 후 콜백의 매개 변수 destructuring의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;Promise.all&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 만 ES6으로 가능하게되었다, ES5에서 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;then&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 호출은 많은 약속 라이브러리에 의해 제공되었다 멋진 도우미 메서드로 대체 될 것이다 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/kriskowal/q/wiki/API-Reference#promisespreadonfulfilled-onrejected&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Q&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bluebirdjs.com/docs/api/spread.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;블루 버드&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/cujojs/when/blob/master/docs/api.md#promisespread&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ...) &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.spread(function(resultA, resultB) { &amp;hellip;&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; .&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d951045f06a6f96d2459f58d21879f6988c4a16" translate="yes" xml:space="preserve">
          <source>Intermediate promises are not prevented from accessing the state of the results object, but this does not introduce some scary scenario where one of the promises in the chain will go rogue and sabotage your results.  The responsibility of setting the values in each step of the promise is confined to this function and the overall result will either be correct or incorrect...it will not be some bug that will crop up years later in production (unless you intend it to!)</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중간 약속은 결과 개체의 상태에 액세스하는 것이 방지되지 않지만 체인의 약속 중 하나가 악의적으로 진행되어 결과를 방해하는 무서운 시나리오는 아닙니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약속의 각 단계에서 값을 설정하는 책임은이 기능에 국한되어 있으며 전체 결과는 정확하거나 잘못 될 것입니다. !)&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="012957063b5658b4b53260c2fa3837d67c7176c3" translate="yes" xml:space="preserve">
          <source>Mutable contextual state</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가변 상황&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a7d298a254d44b48b6337a699fa090dd4e71111a" translate="yes" xml:space="preserve">
          <source>Mutable state is ugly, but this does not mutate state in an ugly manner.  The ugly mutable state traditionally refers to modifying the state of function arguments or global variables, but this approach simply modifies the state of a locally scoped variable that exists for the sole purpose of aggregating promise results...a variable that will die a simple death once the promise resolves.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변하기 쉬운 상태는 추악하지만, 추악한 방법으로 상태를 바꾸지는 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;추악한 변경 가능한 상태는 전통적으로 함수 인수 또는 전역 변수의 상태를 수정하는 것을 의미하지만,이 방법은 약속 결과를 집계하기위한 목적으로 만 존재하는 로컬 범위 변수의 상태를 수정합니다. 일단 약속이 해결되면.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e8449a4b6842da8a1dba6281ce394242d5e45321" translate="yes" xml:space="preserve">
          <source>Nesting (and) closures</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중첩 및 폐쇄&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c40ee383e2e4ca5e287bcee0f67b57f30dfbadf6" translate="yes" xml:space="preserve">
          <source>Node 7.4 now supports async/await calls with the harmony flag.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;노드 7.4는 이제 조화 플래그를 사용하여 비동기 / 대기 호출을 지원합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="412034bba97d4a4ab3e0a443ec0f5a846d142e98" translate="yes" xml:space="preserve">
          <source>Of course, that closure needed here can be further simplified by some helper functions, e.g.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 여기에 필요한 클로저는 다음과 같은 일부 도우미 기능으로 더욱 단순화 될 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="aae9058adf8a1b510c202b122b2328aaf3580d28" translate="yes" xml:space="preserve">
          <source>Of course, this is building an indentation pyramid. If indentation is getting too large, you still can apply the old tools to counter the &lt;a href=&quot;http://callbackhell.com/&quot;&gt;pyramid of doom&lt;/a&gt;: modularize, use extra named functions, and flatten the promise chain as soon as you don't need a variable any more.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론 이것은 들여 쓰기 피라미드를 만들고 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;들여 쓰기가 너무 커지면 여전히 오래된 도구를 사용하여 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://callbackhell.com/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;운명&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 의 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;피라미드에&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 대응할 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="10a3c56a26dc06509d2fd474a39da19d101d6694" translate="yes" xml:space="preserve">
          <source>Of course, this problem was recognized by the language designers as well. They did a lot of work and the &lt;a href=&quot;http://tc39.github.io/ecmascript-asyncawait/&quot;&gt;async functions proposal&lt;/a&gt; finally made it into</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;물론이 문제는 언어 디자이너들에게도 인정되었습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그들은 많은 일을했고 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://tc39.github.io/ecmascript-asyncawait/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;비동기 기능 제안은&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 마침내 그것을 만들었습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="dff95b253f71a37696b949a20c5ca47263763ec1" translate="yes" xml:space="preserve">
          <source>One must choose the scope for those shared variables correctly. It needs to be local to the executed function to prevent race conditions between multiple parallel invocations, as would be the case if, for example, state was stored on an instance.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공유 변수의 범위를 올바르게 선택해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;예를 들어 상태가 인스턴스에 저장된 경우와 같이 여러 병렬 호출 간의 경쟁 조건을 방지하려면 실행 된 함수에 로컬이어야합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c1f929f8e70b71568c730fcf1ca04cc7fd34b3af" translate="yes" xml:space="preserve">
          <source>Similar to nesting the callbacks, this technique relies on closures. Yet, the chain stays flat - instead of passing only the latest result, some state object is passed for every step. These state objects accumulate the results of the previous actions, handing down all values that will be needed later again plus the result of the current task.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;콜백 중첩과 유사하게이 기술은 클로저에 의존합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그러나 체인은 평평한 상태를 유지합니다. 최신 결과 만 전달하는 대신 모든 단계마다 일부 상태 객체가 전달됩니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 상태 개체는 이전 작업의 결과를 누적하여 나중에 다시 필요한 모든 값과 현재 작업의 결과를 모두 전달합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="6aafb455fdb78b42aaa8e751fa4281daec51a6e7" translate="yes" xml:space="preserve">
          <source>Simple as can be!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가능한 간단!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="4190ac35a0d65d8420cd953993197fee2c185752" translate="yes" xml:space="preserve">
          <source>Solution:</source>
          <target state="translated">Solution:</target>
        </trans-unit>
        <trans-unit id="740ffbb9952d0db97b17599b914cae9f45ab58ec" translate="yes" xml:space="preserve">
          <source>Something like as below :</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;아래와 같은 것 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9d4e83066087dd1079c656c148313dafa0d0a48a" translate="yes" xml:space="preserve">
          <source>Synchronous inspection</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;동기 검사&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="7552eee459001ff5a9e0fbf19a139de19a6e647d" translate="yes" xml:space="preserve">
          <source>The Bluebird library encourages the use of an object that is passed along, using &lt;a href=&quot;http://bluebirdjs.com/docs/api/bind.html&quot;&gt;their &lt;code&gt;bind()&lt;/code&gt; method&lt;/a&gt; to assign a context object to a promise chain. It will be accessible from each callback function via the otherwise unusable &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt; keyword&lt;/a&gt;. While object properties are more prone to undetected typos than variables, the pattern is quite clever:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;파랑새 라이브러리를 사용하여, 함께 전달 될 객체의 사용을 장려 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bluebirdjs.com/docs/api/bind.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그들의 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;bind()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드를&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 약속 체인 콘텍스트 객체를 할당한다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용할 수없는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 를 통해 각 콜백 함수에서 액세스 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;객체 속성은 변수보다 감지되지 않은 오타가 발생하기 쉽지만 패턴은 매우 영리합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9da2cb01b9445e3b82cef2fa35434f5be10a373b" translate="yes" xml:space="preserve">
          <source>The scope of the variables does not prevent to access them before they are initialized. This is especially likely for complex promise constructions (loops, branching, excptions) where race conditions might happen. Passing state explicitly, a &lt;a href=&quot;http://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;declarative design&lt;/a&gt; that promises encourage, forces a cleaner coding style which can prevent this.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수의 범위는 변수가 초기화되기 전에 액세스하는 것을 막지 않습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;경쟁 조건이 발생할 수있는 복잡한 약속 구조 (루프, 분기, 예외)에 특히 적합합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;권장 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선언적 디자인&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 으로 명시 적으로 상태를 전달 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하면이를 방지 할 수있는 더 깨끗한 코딩 스타일이 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ef9dea0231e47298d8f39b636223237575303e9c" translate="yes" xml:space="preserve">
          <source>The trivial (but inelegant and rather errorprone) solution is to just use higher-scope variables (to which all callbacks in the chain have access) and write result values to them when you get them:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사소한 (그러나 우아하지 않고 오히려 오류가 발생하기 쉬운) 해결책은 더 높은 범위의 변수 (체인의 모든 콜백이 액세스 할 수있는)를 사용하고 결과 값을 얻을 때 변수에 쓰는 것입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03ebf8b9502bb380b80a7eb42cece7ab3209b46b" translate="yes" xml:space="preserve">
          <source>Then, run &lt;code&gt;babel-node example.js&lt;/code&gt; and voila!</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;그런 다음 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;babel-node example.js&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 와 voila를 실행하십시오!&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ab34eafdad2b4ee95e473c31dd3db173f98501d2" translate="yes" xml:space="preserve">
          <source>There are dedicated libraries (like &lt;a href=&quot;https://github.com/tj/co&quot;&gt;co&lt;/a&gt; or &lt;a href=&quot;http://taskjs.org/&quot;&gt;task.js&lt;/a&gt;), but also many promise libraries have helper functions (&lt;a href=&quot;https://github.com/kriskowal/q/wiki/API-Reference#generators&quot;&gt;Q&lt;/a&gt;, &lt;a href=&quot;http://bluebirdjs.com/docs/api/generators.html&quot;&gt;Bluebird&lt;/a&gt;, &lt;a href=&quot;https://github.com/cujojs/when/blob/master/docs/api.md#es6-generators&quot;&gt;when&lt;/a&gt;, &amp;hellip;) that do &lt;a href=&quot;https://stackoverflow.com/a/23554399/1048572&quot;&gt;this async step-by-step execution&lt;/a&gt; for you when you give them a generator function that yields promises.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 (같은 전용 도서관이다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/tj/co&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;공동&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://taskjs.org/&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;task.js는&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; )뿐만 아니라 많은 약속 라이브러리 도우미 기능이 ( &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/kriskowal/q/wiki/API-Reference#generators&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;Q&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://bluebirdjs.com/docs/api/generators.html&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;블루 버드&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://github.com/cujojs/when/blob/master/docs/api.md#es6-generators&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;시&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; , ...) 할 것을 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/23554399/1048572&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 비동기 단계별 실행&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 당신이 그 (것)들에게 발전기 기능이를 줄 때 당신을 약속을 산출합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d8a230a40501497f4bfe4e1796388f0ed6d16b20" translate="yes" xml:space="preserve">
          <source>This approach can be easily simulated in promise libraries that do not support .bind (although in a somewhat more verbose way and cannot be used in an expression):</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 접근법은 .bind를 지원하지 않는 promise 라이브러리에서 쉽게 시뮬레이션 할 수 있습니다 (약간 더 장황한 방식으로 표현에 사용할 수는 없지만).&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="144ef4fefc003675e5f3e9aa894c364f1a909c60" translate="yes" xml:space="preserve">
          <source>This can be used for as many values as you like:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;원하는만큼 많은 값을 사용할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="c73428b0fed4a12cd913cd5733b9a56cd877068d" translate="yes" xml:space="preserve">
          <source>This days, I also hava meet some questions like you. At last, I find a good solution with the quesition, it's simple and good to read. I hope this can help you.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;요즘에도 당신과 같은 몇 가지 질문이 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;마지막으로 질문에 대한 좋은 해결책을 찾았습니다. 간단하고 읽기 쉽습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것이 당신을 도울 수 있기를 바랍니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="acfafaf8cb92b754b040f10b093a0b4d1cefb53f" translate="yes" xml:space="preserve">
          <source>This did work in Node.js since version 4.0, also a few browsers (or their dev editions) did support generator syntax relatively early.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이것은 버전 4.0 이후 Node.js에서 작동했으며 일부 브라우저 (또는 개발자 에디션)도 비교적 초기에 생성기 구문을 지원했습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="9985024202145ce805f87cbe5538067d97b19841" translate="yes" xml:space="preserve">
          <source>This does not introduce a race condition scenario that would arise from parallel invocation because a new instance of the results variable is created for every invocation of the getExample function.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;getExample 함수를 호출 할 때마다 결과 변수의 새 인스턴스가 작성되므로 병렬 호출에서 발생할 수있는 경쟁 조건 시나리오를 소개하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="46c1b4574441bc055943b5b04c15465abdec3bff" translate="yes" xml:space="preserve">
          <source>This pattern doesn't work across function boundaries, modularising the functions is harder as their declarations must not leave the shared scope</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 패턴은 함수 경계에서 작동하지 않으므로 선언이 공유 범위를 벗어나지 않아야하므로 함수를 모듈화하는 것이 더 어렵습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e5580ff94ef22be48cff7200bd303fbf66ceabd3" translate="yes" xml:space="preserve">
          <source>This solution can be invoked as follows:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 솔루션은 다음과 같이 호출 할 수 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e43a3e4618b96cad7d4ab03f023073c45d9f6bd6" translate="yes" xml:space="preserve">
          <source>This solution has several drawbacks:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 솔루션에는 몇 가지 단점이 있습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="da3dd2f8f239743397e37a9839f3048b1aa2620f" translate="yes" xml:space="preserve">
          <source>This will result in a very straightforward control flow, clear composition of functionalities and therefore easy modularisation.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이는 매우 간단한 제어 흐름, 명확한 기능 구성 및 쉬운 모듈화로 이어집니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b21480ff457e048e3c7a6593bfb52719279e1f05" translate="yes" xml:space="preserve">
          <source>Try this:</source>
          <target state="translated">이 시도:</target>
        </trans-unit>
        <trans-unit id="2057318d110eca92034720c6472bfc3e1bd381c0" translate="yes" xml:space="preserve">
          <source>Update: added working example</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;업데이트 : 추가 작업 예제&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e944e3513336c73f5a43135573f6d4fe61b114c7" translate="yes" xml:space="preserve">
          <source>User is a promisified Mongoose model.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용자는 약속 된 몽구스 모델입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="03057780495560c1cec710f98e709cc23defb382" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;async - await&lt;/code&gt;</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt; &lt;code&gt;async - await&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용 &lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;-대기&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="eee874fe8aaa9db187a682e750fc3f3d02aa63e8" translate="yes" xml:space="preserve">
          <source>Using a locally scoped object to collect the intermediate results in a promise chain is a reasonable approach to the question you posed. Consider the following snippet:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약속 범위에서 중간 결과를 수집하기 위해 로컬로 범위가 지정된 객체를 사용하는 것은 제기 한 질문에 대한 합리적인 접근 방식입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음 스 니펫을 고려하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="223bff812bcb6fe8adc3710c5c73399c9f4fc29b" translate="yes" xml:space="preserve">
          <source>Using closures for maintaining the scope of variables (in our case, the success callback function parameters) is the natural JavaScript solution. With promises, we can arbitrarily &lt;a href=&quot;https://stackoverflow.com/a/22000931/1048572&quot;&gt;nest and flatten&lt;/a&gt;&lt;code&gt;.then()&lt;/code&gt; callbacks - they are semantically equivalent, except for the scope of the inner one.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;변수 범위를 유지하기 위해 클로저를 사용하는 경우 (이 경우 성공 콜백 함수 매개 변수)는 자연스러운 JavaScript 솔루션입니다. &lt;/font&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt; 사용하면 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.then ()&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 콜백을 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;임의로 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/22000931/1048572&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;중첩하고 평탄화&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="63a90d8bcee39e3e934d7225c50fb780b32e01d5" translate="yes" xml:space="preserve">
          <source>What I learn about promises is to use it only as return values &lt;strong&gt;avoid referencing them&lt;/strong&gt; if possible. async/await syntax is particularly practical for that. Today all latest browsers and node support it: &lt;a href=&quot;https://caniuse.com/#feat=async-functions&quot;&gt;https://caniuse.com/#feat=async-functions&lt;/a&gt; , is a simple behavior and the code is like reading synchronous code, forget about callbacks...</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약속에 대해 배운 것은 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;가능한 경우 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;반환 값을 &lt;/font&gt;&lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;참조하지 않기&lt;/font&gt;&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 때문에 약속을 사용하는 &lt;/font&gt;&lt;strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;것&lt;/font&gt;&lt;/strong&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;async / await 구문이 특히 실용적입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;오늘날 모든 최신 브라우저와 노드는 그것을 지원합니다 : &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://caniuse.com/#feat=async-functions&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;https://caniuse.com/#feat=async-functions&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 는 간단한 동작이며 코드는 동기 코드를 읽는 것과 같습니다. 콜백을 잊어 버립니다 ...&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="8bfce48cbd196a61b1b247b32e5d1c51102f28ea" translate="yes" xml:space="preserve">
          <source>When using bluebird, you can use &lt;code&gt;.bind&lt;/code&gt; method to share variables in promise chain:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;블루 버드를 사용할 때 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.bind&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메서드를 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;사용 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하여 promise 체인에서 변수를 공유 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;할 수 있습니다 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="b0aee9dff13129530d7d2bee00bb7f9b72fa1522" translate="yes" xml:space="preserve">
          <source>When you need to access the intermediate values in your chain, you should split your chain apart in those single pieces that you need. Instead of attaching one callback and somehow trying to use its parameter multiple times, attach multiple callbacks to the same promise - wherever you need the result value. Don't forget, a &lt;a href=&quot;https://stackoverflow.com/a/22540276/1048572&quot;&gt;promise just represents (proxies) a future value&lt;/a&gt;! Next to deriving one promise from the other in a linear chain, use the promise combinators that are given to you by your library to build the result value.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;체인의 중간 값에 액세스해야하는 경우 필요한 단일 조각으로 체인을 분리해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;하나의 콜백을 연결하고 그 매개 변수를 여러 번 사용하려고하는 대신 결과 값이 필요한 곳이면 어디에서나 동일한 약속에 여러 개의 콜백을 연결하십시오. &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://stackoverflow.com/a/22540276/1048572&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약속은 단지 미래의 가치를 나타냅니다 (프록시)는 것을&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 잊지 마십시오 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;! &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;선형 체인에서 하나의 약속을 다른 약속에서 파생하는 것 외에도 라이브러리에서 제공하는 약속 결합자를 사용하여 결과 값을 작성하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d4f21d072723ef8937089cfff3fff2bd8c2ed4b3" translate="yes" xml:space="preserve">
          <source>While this pattern guarantees a flat chain and explicit state objects can improve clarity, it will become tedious for a long chain. Especially when you need the state only sporadically, you still have to pass it through every step. With this fixed interface, the single callbacks in the chain are rather tightly coupled and inflexible to change. It makes factoring out single steps harder, and callbacks cannot be supplied directly from other modules - they always need to be wrapped in boilerplate code that cares about the state. Abstract helper functions like the above can ease the pain a bit, but it will always be present.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 패턴은 플랫 체인을 보장하고 명시 적 상태 객체는 선명도를 향상시킬 수 있지만 긴 체인에는 지루할 것입니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;특히 산발적으로 만 필요한 상태 인 경우에도 모든 단계를 거쳐야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이 고정 인터페이스를 사용하면 체인의 단일 콜백이 밀접하게 결합되어 변경하기가 어렵습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단일 단계를 더 어렵게 만들 수 있으며 다른 모듈에서 직접 콜백을 제공 할 수 없으며 항상 상태를 관리하는 상용구 코드로 래핑해야합니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;위와 같은 추상 도우미 함수는 고통을 약간 완화시킬 수 있지만 항상 존재합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="1b9eacffa6333b9b56f47e8a6b4d99a89cd316d9" translate="yes" xml:space="preserve">
          <source>While we were waiting for ES8, we already did use a very similar kind of syntax. ES6 came with &lt;a href=&quot;http://davidwalsh.name/es6-generators&quot;&gt;generator functions&lt;/a&gt;, which allow to break the execution apart in pieces at arbitrarily placed &lt;code&gt;yield&lt;/code&gt; keywords. Those slices can be run after each other, independently, even asynchronously - and that's just what we do when we want to wait for a promise resolution before running the next step.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES8을 기다리는 동안 이미 비슷한 종류의 구문을 사용했습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;ES6에는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://davidwalsh.name/es6-generators&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;제너레이터 기능&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 이있어 임의로 배치 된 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;yield&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 키워드 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;에서 실행을 여러 조각으로 나눌 &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;이러한 슬라이스는 서로 독립적으로, 심지어 비동기 적으로도 실행될 수 있습니다. 이는 다음 단계를 실행하기 전에 약속 해결을 기다릴 때 수행하는 작업입니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d663118fbfd1bf9fa6e25101948dd5f5db080d28" translate="yes" xml:space="preserve">
          <source>You can also use helper functions for this kind of &lt;a href=&quot;https://en.wikipedia.org/wiki/Partial_application&quot;&gt;partial application&lt;/a&gt;, like &lt;code&gt;_.partial&lt;/code&gt; from &lt;a href=&quot;http://underscorejs.org/#partial&quot;&gt;Underscore&lt;/a&gt;/&lt;a href=&quot;https://lodash.com/docs#partial&quot;&gt;lodash&lt;/a&gt; or the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;native &lt;code&gt;.bind()&lt;/code&gt; method&lt;/a&gt;, to further decrease indentation:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 이런 종류의 도우미 기능을 사용할 수 있습니다 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Partial_application&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;부분 응용 프로그램&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 처럼 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;_.partial&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 에서 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;http://underscorejs.org/#partial&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;밑줄&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; / &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://lodash.com/docs#partial&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;lodash&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 또는 &lt;/font&gt;&lt;/font&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;기본 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;.bind()&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 메소드&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; 더 감소 들여 쓰기로 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="504ef302e3dad1d0b3f2452e253c7576fe3cfd47" translate="yes" xml:space="preserve">
          <source>You can put intermediate values in scope in any later 'then' function explicitly, by using 'bind'. It is a nice solution that doesn't require changing how Promises work, and only requires a line or two of code to propagate the values just like errors are already propagated.</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;'bind'를 사용하여 나중에 'then'함수에 범위의 중간 값을 명시 적으로 넣을 수 있습니다. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;약속의 작동 방식을 변경할 필요가 없으며 오류가 이미 전파되는 것처럼 값을 전파하기 위해 한두 줄의 코드 만 필요합니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="e100ea30d9c7be0d59c6c2207e286e7716ba132e" translate="yes" xml:space="preserve">
          <source>You don't need a single &lt;code&gt;then&lt;/code&gt; invocation or callback function any more, as in an asynchronous function (that returns a promise when being called) you can simply wait for promises to resolve directly. It also features arbitrary control structures like conditions, loops and try-catch-clauses, but for the sake of convenience we don't need them here:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;단일 필요가 없습니다 &lt;/font&gt;&lt;/font&gt; &lt;code&gt;then&lt;/code&gt; &lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt; (호출되는 때 반환 약속을) 약속을 직접 해결하기 위해 단순히 기다릴 수 비동기 기능과 같이 더 이상 호출이나 콜백 기능을. &lt;/font&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;또한 조건, 루프 및 try-catch-clauses와 같은 임의의 제어 구조를 제공하지만 편의상 여기서는 필요하지 않습니다.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="d87de37b1d789f1d1fe1124c674c1df85f72fe40" translate="yes" xml:space="preserve">
          <source>and run the file with:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;다음을 사용하여 파일을 실행하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="48d22e4b889c8e81b57a132d3e6fa7ddb0ede8f6" translate="yes" xml:space="preserve">
          <source>easy way :D</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;쉬운 방법 : D&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="969d4c74db0b220c26ebcbab6fb30ae35bd28194" translate="yes" xml:space="preserve">
          <source>ok, let's look at the code:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;좋아, 코드를 보자.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="ca09a36d45885d74388e59c155d88008b4a03340" translate="yes" xml:space="preserve">
          <source>please check this link for further information:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;자세한 내용은이 링크를 확인하십시오.&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
        <trans-unit id="a5222aa7ce87a66abef69219caaf401b2c3230a9" translate="yes" xml:space="preserve">
          <source>transpiled form a typescript project of mine:</source>
          <target state="translated">&lt;font style=&quot;vertical-align: inherit;&quot;&gt;&lt;font style=&quot;vertical-align: inherit;&quot;&gt;번역 된 필자의 타이프 스크립트 프로젝트 :&lt;/font&gt;&lt;/font&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
